{
    "17503": {
        "0": {
            "code": "s = 1370\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "1": {
            "code": "s = 1957\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "2": {
            "code": "s = 244\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "3": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "4": {
            "code": "s = 1903\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "5": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "6": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "7": {
            "code": "s = 1780\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "8": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "9": {
            "code": "s = 167\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "10": {
            "code": "s = 607\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "11": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "12": {
            "code": "s = 1918\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "13": {
            "code": "s = 236\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "14": {
            "code": "s = 492\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "15": {
            "code": "s = 1224\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "16": {
            "code": "s = -25\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "17": {
            "code": "s = -92\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "18": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "19": {
            "code": "s = 138\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "20": {
            "code": "s = 26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "21": {
            "code": "s = 821\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "22": {
            "code": "s = 1071\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "23": {
            "code": "s = 1019\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "24": {
            "code": "s = 1826\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "25": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "26": {
            "code": "s = 864\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "27": {
            "code": "s = 856\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "28": {
            "code": "s = 296\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "29": {
            "code": "s = 667\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "30": {
            "code": "s = -92\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "31": {
            "code": "s = -19\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "32": {
            "code": "s = 1925\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "33": {
            "code": "s = 1478\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "34": {
            "code": "s = 1253\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "35": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "36": {
            "code": "s = 1926\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "37": {
            "code": "s = 194\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "38": {
            "code": "s = 484\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "39": {
            "code": "s = 509\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "40": {
            "code": "s = 433\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "41": {
            "code": "s = 554\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "42": {
            "code": "s = 1754\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "43": {
            "code": "s = -37\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "44": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "45": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "46": {
            "code": "s = -93\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "47": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "48": {
            "code": "s = 1755\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "49": {
            "code": "s = 503\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "50": {
            "code": "s = 377\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "51": {
            "code": "s = 398\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "52": {
            "code": "s = 1640\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "53": {
            "code": "s = 1612\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "54": {
            "code": "s = 2000\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "55": {
            "code": "s = 374\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "56": {
            "code": "s = 1755\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "57": {
            "code": "s = 1956\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "58": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "59": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "60": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "61": {
            "code": "s = 643\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "62": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "63": {
            "code": "s = 1125\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "64": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "65": {
            "code": "s = 600\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "66": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "67": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "68": {
            "code": "s = 768\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "69": {
            "code": "s = 960\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "70": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "71": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "72": {
            "code": "s = -100\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "73": {
            "code": "s = -13\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "74": {
            "code": "s = 157\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "75": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "76": {
            "code": "s = 1991\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "77": {
            "code": "s = 1127\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "78": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "79": {
            "code": "s = -58\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "80": {
            "code": "s = 1143\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "81": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "82": {
            "code": "s = 1815\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "83": {
            "code": "s = 398\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "84": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "85": {
            "code": "s = 1358\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "86": {
            "code": "s = 83\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "87": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "88": {
            "code": "s = 1970\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "89": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "90": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "91": {
            "code": "s = 141\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "92": {
            "code": "s = -55\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "93": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "94": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "95": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "96": {
            "code": "s = 599\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "97": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "98": {
            "code": "s = -1\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "99": {
            "code": "s = 30\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "100": {
            "code": "s = 130\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "101": {
            "code": "s = 1254\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "102": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "103": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "104": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "105": {
            "code": "s = 240\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "106": {
            "code": "s = 155\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "107": {
            "code": "s = 166\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "108": {
            "code": "s = 1153\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "109": {
            "code": "s = 1755\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "110": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "111": {
            "code": "s = 1907\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "112": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "113": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "114": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "115": {
            "code": "s = 1721\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "116": {
            "code": "s = 864\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "117": {
            "code": "s = 928\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "118": {
            "code": "s = 226\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "119": {
            "code": "s = 1520\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "120": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "121": {
            "code": "s = -48\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "122": {
            "code": "s = 1862\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "123": {
            "code": "s = 1781\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "124": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "125": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "126": {
            "code": "s = 686\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "127": {
            "code": "s = 353\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "128": {
            "code": "s = 893\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "129": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "130": {
            "code": "s = 1363\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "131": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "132": {
            "code": "s = 9\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "133": {
            "code": "s = 605\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "134": {
            "code": "s = -26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "135": {
            "code": "s = 317\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "136": {
            "code": "s = 1790\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "137": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "138": {
            "code": "s = 593\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "139": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "140": {
            "code": "s = 87\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "141": {
            "code": "s = 1862\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "142": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "143": {
            "code": "s = 1919\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "144": {
            "code": "s = 450\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "145": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "146": {
            "code": "s = 1854\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "147": {
            "code": "s = 138\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "148": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "149": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "150": {
            "code": "s = 445\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "151": {
            "code": "s = 1791\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "152": {
            "code": "s = -59\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "153": {
            "code": "s = 1400\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "154": {
            "code": "s = 254\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "155": {
            "code": "s = 1988\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "156": {
            "code": "s = 793\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "157": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "158": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "159": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "160": {
            "code": "s = 578\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "161": {
            "code": "s = 1543\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "162": {
            "code": "s = 755\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "163": {
            "code": "s = 1226\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "164": {
            "code": "s = 767\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "165": {
            "code": "s = 42\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "166": {
            "code": "s = 988\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "167": {
            "code": "s = 1929\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "168": {
            "code": "s = 255\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "169": {
            "code": "s = 1787\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "170": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "171": {
            "code": "s = 194\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "172": {
            "code": "s = 640\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "173": {
            "code": "s = 531\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "174": {
            "code": "s = 1195\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "175": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "176": {
            "code": "s = 287\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "177": {
            "code": "s = 542\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "178": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "179": {
            "code": "s = -35\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "180": {
            "code": "s = 1739\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "181": {
            "code": "s = 1931\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "182": {
            "code": "s = 644\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "183": {
            "code": "s = 265\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "184": {
            "code": "s = 557\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "185": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "186": {
            "code": "s = 877\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "187": {
            "code": "s = 1324\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "188": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "189": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "190": {
            "code": "s = -43\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "191": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "192": {
            "code": "s = 580\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "193": {
            "code": "s = 648\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "194": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "195": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "196": {
            "code": "s = 151\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "197": {
            "code": "s = -83\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "198": {
            "code": "s = 490\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "199": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "200": {
            "code": "s = 1604\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "201": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "202": {
            "code": "s = 700\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "203": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "204": {
            "code": "s = 1208\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "205": {
            "code": "s = 1903\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "206": {
            "code": "s = -26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "207": {
            "code": "s = 690\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "208": {
            "code": "s = 1901\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "209": {
            "code": "s = -36\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "210": {
            "code": "s = -39\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "211": {
            "code": "s = 1827\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "212": {
            "code": "s = 471\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "213": {
            "code": "s = 1767\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "214": {
            "code": "s = -53\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "215": {
            "code": "s = 1479\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "216": {
            "code": "s = -41\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "217": {
            "code": "s = 1411\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "218": {
            "code": "s = -92\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "219": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "220": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "221": {
            "code": "s = 1013\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "222": {
            "code": "s = 106\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "223": {
            "code": "s = 404\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "224": {
            "code": "s = 1080\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "225": {
            "code": "s = -58\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "226": {
            "code": "s = 1391\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "227": {
            "code": "s = 467\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "228": {
            "code": "s = 1999\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "229": {
            "code": "s = 1137\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "230": {
            "code": "s = 1646\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "231": {
            "code": "s = 238\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "232": {
            "code": "s = -26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "233": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "234": {
            "code": "s = 1100\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "235": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "236": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "237": {
            "code": "s = -50\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "238": {
            "code": "s = -58\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "239": {
            "code": "s = 1518\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "240": {
            "code": "s = 1502\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "241": {
            "code": "s = 22\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "242": {
            "code": "s = 176\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "243": {
            "code": "s = 276\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "244": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "245": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "246": {
            "code": "s = 1914\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "247": {
            "code": "s = 674\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "248": {
            "code": "s = 1667\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "249": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "250": {
            "code": "s = 1115\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "251": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "252": {
            "code": "s = 1818\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "253": {
            "code": "s = 478\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "254": {
            "code": "s = 12\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "255": {
            "code": "s = 567\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "256": {
            "code": "s = 300\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "257": {
            "code": "s = 216\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "258": {
            "code": "s = 533\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "259": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "260": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "261": {
            "code": "s = 1602\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "262": {
            "code": "s = 1282\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "263": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "264": {
            "code": "s = 1865\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "265": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "266": {
            "code": "s = 236\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "267": {
            "code": "s = 1765\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "268": {
            "code": "s = -92\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "269": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "270": {
            "code": "s = 1127\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "271": {
            "code": "s = 1414\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "272": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "273": {
            "code": "s = 422\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "274": {
            "code": "s = 1075\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "275": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "276": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "277": {
            "code": "s = 1903\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "278": {
            "code": "s = 614\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "279": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "280": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "281": {
            "code": "s = 1962\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "282": {
            "code": "s = 1947\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "283": {
            "code": "s = 1635\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "284": {
            "code": "s = 108\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "285": {
            "code": "s = 1838\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "286": {
            "code": "s = 220\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "287": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "288": {
            "code": "s = 422\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "289": {
            "code": "s = 1577\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "290": {
            "code": "s = 166\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "291": {
            "code": "s = 1368\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "292": {
            "code": "s = 373\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "293": {
            "code": "s = 1931\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "294": {
            "code": "s = 926\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "295": {
            "code": "s = 925\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "296": {
            "code": "s = 43\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "297": {
            "code": "s = 1478\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "298": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "299": {
            "code": "s = 263\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "300": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "301": {
            "code": "s = -14\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "302": {
            "code": "s = 884\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "303": {
            "code": "s = 1388\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "304": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "305": {
            "code": "s = 1185\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "306": {
            "code": "s = 12\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "307": {
            "code": "s = 1167\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "308": {
            "code": "s = 392\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "309": {
            "code": "s = 1594\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "310": {
            "code": "s = -36\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "311": {
            "code": "s = -36\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "312": {
            "code": "s = 878\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "313": {
            "code": "s = 672\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "314": {
            "code": "s = 1938\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "315": {
            "code": "s = -55\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "316": {
            "code": "s = 1207\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "317": {
            "code": "s = 522\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "318": {
            "code": "s = 401\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "319": {
            "code": "s = -35\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "320": {
            "code": "s = 1899\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "321": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "322": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "323": {
            "code": "s = 726\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "324": {
            "code": "s = 1499\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "325": {
            "code": "s = 1994\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "326": {
            "code": "s = 1968\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "327": {
            "code": "s = 1942\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "328": {
            "code": "s = 851\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "329": {
            "code": "s = -62\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "330": {
            "code": "s = 1764\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "331": {
            "code": "s = 1617\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "332": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "333": {
            "code": "s = -54\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "334": {
            "code": "s = -82\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "335": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "336": {
            "code": "s = 1539\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "337": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "338": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "339": {
            "code": "s = 1739\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "340": {
            "code": "s = 1034\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "341": {
            "code": "s = 361\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "342": {
            "code": "s = 1254\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "343": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "344": {
            "code": "s = 1865\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "345": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "346": {
            "code": "s = 780\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "347": {
            "code": "s = 400\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "348": {
            "code": "s = -46\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "349": {
            "code": "s = 173\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "350": {
            "code": "s = 541\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "351": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "352": {
            "code": "s = 386\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "353": {
            "code": "s = 1146\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "354": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "355": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "356": {
            "code": "s = -7\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "357": {
            "code": "s = 1703\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "358": {
            "code": "s = 390\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "359": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "360": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "361": {
            "code": "s = 1849\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "362": {
            "code": "s = 115\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "363": {
            "code": "s = 263\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "364": {
            "code": "s = 129\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "365": {
            "code": "s = 501\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "366": {
            "code": "s = 279\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "367": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "368": {
            "code": "s = 960\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "369": {
            "code": "s = 1076\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "370": {
            "code": "s = 1594\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "371": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "372": {
            "code": "s = 1837\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "373": {
            "code": "s = 965\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "374": {
            "code": "s = 1288\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "375": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "376": {
            "code": "s = 450\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "377": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "378": {
            "code": "s = 1229\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "379": {
            "code": "s = 1359\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "380": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "381": {
            "code": "s = 1241\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "382": {
            "code": "s = 450\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "383": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "384": {
            "code": "s = 5\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "385": {
            "code": "s = 1683\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "386": {
            "code": "s = 1986\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "387": {
            "code": "s = 143\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "388": {
            "code": "s = 687\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "389": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "390": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "391": {
            "code": "s = 1591\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "392": {
            "code": "s = 1435\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "393": {
            "code": "s = 428\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "394": {
            "code": "s = 34\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "395": {
            "code": "s = 1276\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "396": {
            "code": "s = 607\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "397": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "398": {
            "code": "s = 166\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "399": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "400": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "401": {
            "code": "s = 1201\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "402": {
            "code": "s = 547\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "403": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "404": {
            "code": "s = 1746\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "405": {
            "code": "s = 1995\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "406": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "407": {
            "code": "s = 1998\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "408": {
            "code": "s = 1776\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "409": {
            "code": "s = 644\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "410": {
            "code": "s = -36\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "411": {
            "code": "s = 1971\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "412": {
            "code": "s = 1981\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "413": {
            "code": "s = 1818\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "414": {
            "code": "s = 1495\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "415": {
            "code": "s = 451\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "416": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "417": {
            "code": "s = -56\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "418": {
            "code": "s = 792\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "419": {
            "code": "s = 1212\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "420": {
            "code": "s = 720\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "421": {
            "code": "s = 499\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "422": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "423": {
            "code": "s = -58\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "424": {
            "code": "s = -36\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "425": {
            "code": "s = 406\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "426": {
            "code": "s = 1481\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "427": {
            "code": "s = -29\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "428": {
            "code": "s = 279\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "429": {
            "code": "s = 359\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "430": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "431": {
            "code": "s = 1540\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "432": {
            "code": "s = 1018\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "433": {
            "code": "s = 1790\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "434": {
            "code": "s = 1777\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "435": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "436": {
            "code": "s = 100\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "437": {
            "code": "s = -29\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "438": {
            "code": "s = 10\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "439": {
            "code": "s = -41\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "440": {
            "code": "s = 632\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "441": {
            "code": "s = 1084\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "442": {
            "code": "s = 678\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "443": {
            "code": "s = 1958\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "444": {
            "code": "s = 1810\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "445": {
            "code": "s = 377\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "446": {
            "code": "s = 1524\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "447": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "448": {
            "code": "s = 623\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "449": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "450": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "451": {
            "code": "s = 774\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "452": {
            "code": "s = 1970\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "453": {
            "code": "s = 1947\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "454": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "455": {
            "code": "s = 38\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "456": {
            "code": "s = 614\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "457": {
            "code": "s = 455\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "458": {
            "code": "s = 1865\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "459": {
            "code": "s = 182\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "460": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "461": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "462": {
            "code": "s = 1600\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "463": {
            "code": "s = 562\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "464": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "465": {
            "code": "s = 825\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "466": {
            "code": "s = 145\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "467": {
            "code": "s = 1526\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "468": {
            "code": "s = -89\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "469": {
            "code": "s = 332\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "470": {
            "code": "s = 397\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "471": {
            "code": "s = 110\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "472": {
            "code": "s = 2000\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "473": {
            "code": "s = -20\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "474": {
            "code": "s = 1599\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "475": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "476": {
            "code": "s = 606\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "477": {
            "code": "s = 152\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "478": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "479": {
            "code": "s = 1997\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "480": {
            "code": "s = 1028\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "481": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "482": {
            "code": "s = 22\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "483": {
            "code": "s = 1380\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "484": {
            "code": "s = 660\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "485": {
            "code": "s = 26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "486": {
            "code": "s = 1789\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "487": {
            "code": "s = -54\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "488": {
            "code": "s = 1827\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "489": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "490": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "491": {
            "code": "s = 546\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "492": {
            "code": "s = 245\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "493": {
            "code": "s = 928\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "494": {
            "code": "s = 1449\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "495": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "496": {
            "code": "s = 1945\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "497": {
            "code": "s = 173\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "498": {
            "code": "s = 479\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "499": {
            "code": "s = 513\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "500": {
            "code": "s = -65\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "501": {
            "code": "s = 377\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "502": {
            "code": "s = 1932\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "503": {
            "code": "s = 92\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "504": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "505": {
            "code": "s = 22\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "506": {
            "code": "s = 1004\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "507": {
            "code": "s = 1649\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "508": {
            "code": "s = 324\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "509": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "510": {
            "code": "s = -41\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "511": {
            "code": "s = 412\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "512": {
            "code": "s = 1094\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "513": {
            "code": "s = 1444\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "514": {
            "code": "s = 75\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "515": {
            "code": "s = 1429\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "516": {
            "code": "s = -41\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "517": {
            "code": "s = -35\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "518": {
            "code": "s = 843\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "519": {
            "code": "s = 943\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "520": {
            "code": "s = 1045\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "521": {
            "code": "s = -81\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "522": {
            "code": "s = 741\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "523": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "524": {
            "code": "s = 1750\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "525": {
            "code": "s = -54\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "526": {
            "code": "s = -37\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "527": {
            "code": "s = 1416\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "528": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "529": {
            "code": "s = 1982\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "530": {
            "code": "s = 768\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "531": {
            "code": "s = 1412\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "532": {
            "code": "s = 1578\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "533": {
            "code": "s = 1390\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "534": {
            "code": "s = 335\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "535": {
            "code": "s = 2000\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "536": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "537": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "538": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "539": {
            "code": "s = 471\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "540": {
            "code": "s = 449\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "541": {
            "code": "s = 638\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "542": {
            "code": "s = 867\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "543": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "544": {
            "code": "s = 394\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "545": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "546": {
            "code": "s = 26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "547": {
            "code": "s = 826\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "548": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "549": {
            "code": "s = 1309\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "550": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "551": {
            "code": "s = -9\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "552": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "553": {
            "code": "s = 1475\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "554": {
            "code": "s = 1711\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "555": {
            "code": "s = -73\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "556": {
            "code": "s = 1461\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "557": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "558": {
            "code": "s = -63\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "559": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "560": {
            "code": "s = 898\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "561": {
            "code": "s = 1161\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "562": {
            "code": "s = 798\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "563": {
            "code": "s = 515\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "564": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "565": {
            "code": "s = 237\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "566": {
            "code": "s = 1401\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "567": {
            "code": "s = 1621\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "568": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "569": {
            "code": "s = 501\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "570": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "571": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "572": {
            "code": "s = 1329\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "573": {
            "code": "s = 1735\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "574": {
            "code": "s = 280\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "575": {
            "code": "s = -34\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "576": {
            "code": "s = 362\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "577": {
            "code": "s = -58\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "578": {
            "code": "s = 1317\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "579": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "580": {
            "code": "s = 54\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "581": {
            "code": "s = 305\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "582": {
            "code": "s = 397\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "583": {
            "code": "s = 82\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "584": {
            "code": "s = 1245\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "585": {
            "code": "s = 1896\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "586": {
            "code": "s = 1405\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "587": {
            "code": "s = 1345\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "588": {
            "code": "s = -58\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "589": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "590": {
            "code": "s = 1969\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "591": {
            "code": "s = 1957\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "592": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "593": {
            "code": "s = 1592\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "594": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "595": {
            "code": "s = -42\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "596": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "597": {
            "code": "s = 589\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "598": {
            "code": "s = 915\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "599": {
            "code": "s = 1830\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "600": {
            "code": "s = 26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "601": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "602": {
            "code": "s = 1397\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "603": {
            "code": "s = 1417\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "604": {
            "code": "s = 1500\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "605": {
            "code": "s = 1988\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "606": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "607": {
            "code": "s = -97\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "608": {
            "code": "s = 272\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "609": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "610": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "611": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "612": {
            "code": "s = 1417\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "613": {
            "code": "s = 1243\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "614": {
            "code": "s = 868\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "615": {
            "code": "s = 1490\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "616": {
            "code": "s = -26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "617": {
            "code": "s = 1208\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "618": {
            "code": "s = 1413\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "619": {
            "code": "s = -89\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "620": {
            "code": "s = -100\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "621": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "622": {
            "code": "s = -25\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "623": {
            "code": "s = 418\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "624": {
            "code": "s = 244\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "625": {
            "code": "s = 669\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "626": {
            "code": "s = 154\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "627": {
            "code": "s = 1529\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "628": {
            "code": "s = 892\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "629": {
            "code": "s = -41\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "630": {
            "code": "s = 557\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "631": {
            "code": "s = 395\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "632": {
            "code": "s = 513\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "633": {
            "code": "s = -7\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "634": {
            "code": "s = 1558\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "635": {
            "code": "s = -92\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "636": {
            "code": "s = 1650\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "637": {
            "code": "s = 714\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "638": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "639": {
            "code": "s = 1746\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "640": {
            "code": "s = -26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "641": {
            "code": "s = 1437\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "642": {
            "code": "s = 1653\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "643": {
            "code": "s = 1397\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "644": {
            "code": "s = 1679\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "645": {
            "code": "s = 548\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "646": {
            "code": "s = 1957\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "647": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "648": {
            "code": "s = 1861\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "649": {
            "code": "s = 418\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "650": {
            "code": "s = 855\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "651": {
            "code": "s = 691\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "652": {
            "code": "s = -89\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "653": {
            "code": "s = 630\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "654": {
            "code": "s = 1902\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "655": {
            "code": "s = 549\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "656": {
            "code": "s = 1968\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "657": {
            "code": "s = 1572\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "658": {
            "code": "s = 275\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "659": {
            "code": "s = 1691\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "660": {
            "code": "s = 1153\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "661": {
            "code": "s = 1981\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "662": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "663": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "664": {
            "code": "s = 1820\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "665": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "666": {
            "code": "s = 1494\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "667": {
            "code": "s = 1516\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "668": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "669": {
            "code": "s = 1094\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "670": {
            "code": "s = 1409\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "671": {
            "code": "s = 247\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "672": {
            "code": "s = 16\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "673": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "674": {
            "code": "s = 258\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "675": {
            "code": "s = 106\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "676": {
            "code": "s = 1539\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "677": {
            "code": "s = 2000\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "678": {
            "code": "s = -49\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "679": {
            "code": "s = 549\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "680": {
            "code": "s = 1933\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "681": {
            "code": "s = 1012\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "682": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "683": {
            "code": "s = 1624\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "684": {
            "code": "s = 1607\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "685": {
            "code": "s = 1040\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "686": {
            "code": "s = 1308\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "687": {
            "code": "s = 484\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "688": {
            "code": "s = 1108\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "689": {
            "code": "s = -44\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "690": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "691": {
            "code": "s = 1234\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "692": {
            "code": "s = 1712\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "693": {
            "code": "s = 1803\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "694": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "695": {
            "code": "s = 452\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "696": {
            "code": "s = 548\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "697": {
            "code": "s = 876\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "698": {
            "code": "s = 757\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "699": {
            "code": "s = -59\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "700": {
            "code": "s = 1781\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "701": {
            "code": "s = 1468\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "702": {
            "code": "s = 1976\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "703": {
            "code": "s = 1951\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "704": {
            "code": "s = 160\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "705": {
            "code": "s = 396\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "706": {
            "code": "s = 1981\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "707": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "708": {
            "code": "s = 1755\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "709": {
            "code": "s = 551\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "710": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "711": {
            "code": "s = 1000\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "712": {
            "code": "s = -70\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "713": {
            "code": "s = 1791\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "714": {
            "code": "s = 464\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "715": {
            "code": "s = 1916\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "716": {
            "code": "s = 1627\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "717": {
            "code": "s = 1114\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "718": {
            "code": "s = -89\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "719": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "720": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "721": {
            "code": "s = -46\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "722": {
            "code": "s = 482\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "723": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "724": {
            "code": "s = 1635\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "725": {
            "code": "s = -54\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "726": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "727": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "728": {
            "code": "s = 1896\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "729": {
            "code": "s = 1087\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "730": {
            "code": "s = 1160\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "731": {
            "code": "s = 1931\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "732": {
            "code": "s = -37\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "733": {
            "code": "s = 1371\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "734": {
            "code": "s = 1676\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "735": {
            "code": "s = 1300\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "736": {
            "code": "s = 1356\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "737": {
            "code": "s = 1989\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "738": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "739": {
            "code": "s = 464\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "740": {
            "code": "s = -58\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "741": {
            "code": "s = 74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "742": {
            "code": "s = -91\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "743": {
            "code": "s = 170\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "744": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "745": {
            "code": "s = 975\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "746": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "747": {
            "code": "s = 568\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "748": {
            "code": "s = 716\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "749": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "750": {
            "code": "s = -26\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "751": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "752": {
            "code": "s = 408\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "753": {
            "code": "s = -7\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "754": {
            "code": "s = -45\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "755": {
            "code": "s = 1195\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "756": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "757": {
            "code": "s = 174\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "758": {
            "code": "s = 361\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "759": {
            "code": "s = 1596\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "760": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "761": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "762": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "763": {
            "code": "s = 1887\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "764": {
            "code": "s = 318\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "765": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "766": {
            "code": "s = 1753\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "767": {
            "code": "s = 1329\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "768": {
            "code": "s = -92\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "769": {
            "code": "s = 1685\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "770": {
            "code": "s = -65\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "771": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "772": {
            "code": "s = 1961\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "773": {
            "code": "s = 1243\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "774": {
            "code": "s = -8\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "775": {
            "code": "s = 2000\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "776": {
            "code": "s = 1224\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "777": {
            "code": "s = -42\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "778": {
            "code": "s = 1037\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "779": {
            "code": "s = 1050\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "780": {
            "code": "s = -40\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "781": {
            "code": "s = 1505\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "782": {
            "code": "s = 455\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "783": {
            "code": "s = 449\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "784": {
            "code": "s = 1089\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "785": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "786": {
            "code": "s = -56\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "787": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "788": {
            "code": "s = 1277\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "789": {
            "code": "s = 1996\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "790": {
            "code": "s = 1956\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "791": {
            "code": "s = 1175\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "792": {
            "code": "s = 1565\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "793": {
            "code": "s = 416\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "794": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "795": {
            "code": "s = -37\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "796": {
            "code": "s = 1546\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "797": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "798": {
            "code": "s = 1018\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "799": {
            "code": "s = -41\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "800": {
            "code": "s = 1911\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "801": {
            "code": "s = 768\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "802": {
            "code": "s = 404\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "803": {
            "code": "s = 1755\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "804": {
            "code": "s = 996\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "805": {
            "code": "s = -74\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "806": {
            "code": "s = 1248\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "807": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "808": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "809": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "810": {
            "code": "s = 60\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "811": {
            "code": "s = 1745\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "812": {
            "code": "s = 1376\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "813": {
            "code": "s = 498\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "814": {
            "code": "s = 1491\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "815": {
            "code": "s = -43\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "816": {
            "code": "s = 1226\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "817": {
            "code": "s = 1307\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "818": {
            "code": "s = 366\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "819": {
            "code": "s = 242\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "820": {
            "code": "s = 361\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "821": {
            "code": "s = 1494\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "822": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "823": {
            "code": "s = -88\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "824": {
            "code": "s = 1051\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "825": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "826": {
            "code": "s = -52\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "827": {
            "code": "s = 1314\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "828": {
            "code": "s = -65\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "829": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "830": {
            "code": "s = 501\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "831": {
            "code": "s = 1792\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "832": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "833": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "834": {
            "code": "s = 1137\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "835": {
            "code": "s = 358\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "836": {
            "code": "s = 1151\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "837": {
            "code": "s = 834\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "838": {
            "code": "s = -64\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "839": {
            "code": "s = 1467\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "840": {
            "code": "s = 1575\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "841": {
            "code": "s = 597\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "842": {
            "code": "s = 361\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "843": {
            "code": "s = 168\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "844": {
            "code": "s = -64\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "845": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "846": {
            "code": "s = 1386\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "847": {
            "code": "s = 344\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "848": {
            "code": "s = 1045\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "849": {
            "code": "s = 1111\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "850": {
            "code": "s = 1910\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "851": {
            "code": "s = 412\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "852": {
            "code": "s = 521\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "853": {
            "code": "s = 1995\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "854": {
            "code": "s = 537\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "855": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "856": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "857": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "858": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "859": {
            "code": "s = 364\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "860": {
            "code": "s = 367\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "861": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "862": {
            "code": "s = 16\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "863": {
            "code": "s = 1345\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "864": {
            "code": "s = -62\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "865": {
            "code": "s = 1595\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "866": {
            "code": "s = 1202\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "867": {
            "code": "s = -95\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "868": {
            "code": "s = 1473\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "869": {
            "code": "s = 1949\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "870": {
            "code": "s = 607\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "871": {
            "code": "s = 370\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "872": {
            "code": "s = -4\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "873": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "874": {
            "code": "s = 10\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "875": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "876": {
            "code": "s = 1424\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "877": {
            "code": "s = 943\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "878": {
            "code": "s = 1184\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "879": {
            "code": "s = 1942\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "880": {
            "code": "s = -62\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "881": {
            "code": "s = 566\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "882": {
            "code": "s = 497\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "883": {
            "code": "s = 1092\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "884": {
            "code": "s = 1196\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "885": {
            "code": "s = 1693\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "886": {
            "code": "s = 1468\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "887": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "888": {
            "code": "s = 508\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "889": {
            "code": "s = 25\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "890": {
            "code": "s = 1253\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "891": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "892": {
            "code": "s = 1446\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "893": {
            "code": "s = 188\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "894": {
            "code": "s = 38\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "895": {
            "code": "s = -98\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "896": {
            "code": "s = 157\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "897": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "898": {
            "code": "s = 536\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "899": {
            "code": "s = -84\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "900": {
            "code": "s = 1010\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "901": {
            "code": "s = 418\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "902": {
            "code": "s = 21\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "903": {
            "code": "s = -70\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "904": {
            "code": "s = 56\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "905": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "906": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "907": {
            "code": "s = 1182\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "908": {
            "code": "s = 1917\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "909": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "910": {
            "code": "s = 320\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "911": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "912": {
            "code": "s = 463\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "913": {
            "code": "s = 1693\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "914": {
            "code": "s = 1888\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "915": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "916": {
            "code": "s = 1776\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "917": {
            "code": "s = 1951\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "918": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "919": {
            "code": "s = 1713\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "920": {
            "code": "s = 194\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "921": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "922": {
            "code": "s = 530\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "923": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "924": {
            "code": "s = -83\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "925": {
            "code": "s = 508\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "926": {
            "code": "s = 104\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "927": {
            "code": "s = 451\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "928": {
            "code": "s = 221\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "929": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "930": {
            "code": "s = 333\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "931": {
            "code": "s = 199\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "932": {
            "code": "s = 979\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "933": {
            "code": "s = 966\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "934": {
            "code": "s = 901\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "935": {
            "code": "s = 642\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "936": {
            "code": "s = 1688\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "937": {
            "code": "s = -65\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "938": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "939": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "940": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "941": {
            "code": "s = 1856\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "942": {
            "code": "s = 1096\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "943": {
            "code": "s = 428\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "944": {
            "code": "s = 984\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "945": {
            "code": "s = 175\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "946": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "947": {
            "code": "s = 1626\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "948": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "949": {
            "code": "s = 872\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "950": {
            "code": "s = 1938\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "951": {
            "code": "s = 1192\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "952": {
            "code": "s = 1676\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "953": {
            "code": "s = 1953\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "954": {
            "code": "s = 203\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "955": {
            "code": "s = 1587\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "956": {
            "code": "s = 685\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "957": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "958": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "959": {
            "code": "s = 497\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "960": {
            "code": "s = 1715\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "961": {
            "code": "s = 881\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "962": {
            "code": "s = 1688\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "963": {
            "code": "s = 1919\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "964": {
            "code": "s = 1846\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "965": {
            "code": "s = -36\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "966": {
            "code": "s = 1327\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "967": {
            "code": "s = 1921\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "968": {
            "code": "s = 499\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "969": {
            "code": "s = 369\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "970": {
            "code": "s = 149\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "971": {
            "code": "s = 1605\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "972": {
            "code": "s = 507\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "973": {
            "code": "s = 1117\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "974": {
            "code": "s = -90\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "975": {
            "code": "s = -7\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "976": {
            "code": "s = -32\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "977": {
            "code": "s = 1936\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "978": {
            "code": "s = 1587\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "979": {
            "code": "s = 217\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "980": {
            "code": "s = 251\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "981": {
            "code": "s = 1436\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "982": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "983": {
            "code": "s = 1976\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "984": {
            "code": "s = 24\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "985": {
            "code": "s = 1746\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "986": {
            "code": "s = 943\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "987": {
            "code": "s = 1114\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "988": {
            "code": "s = 1525\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "989": {
            "code": "s = 925\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "990": {
            "code": "s = 22\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "991": {
            "code": "s = 537\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "992": {
            "code": "s = 1801\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "993": {
            "code": "s = -86\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "994": {
            "code": "s = -56\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "995": {
            "code": "s = 397\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                1,
                1,
                0
            ]
        },
        "996": {
            "code": "s = 46\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "997": {
            "code": "s = 1883\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                1
            ]
        },
        "998": {
            "code": "s = -99\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "999": {
            "code": "s = 704\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        }
    },
    "18800": {
        "0": {
            "code": "h = 168\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "1": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "2": {
            "code": "h = 271\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "3": {
            "code": "h = -86\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "4": {
            "code": "h = -60\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "5": {
            "code": "h = 1420\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "6": {
            "code": "h = 1474\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "7": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "8": {
            "code": "h = 337\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "9": {
            "code": "h = 1260\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "10": {
            "code": "h = 253\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "11": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "12": {
            "code": "h = -82\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "13": {
            "code": "h = 1931\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "14": {
            "code": "h = 427\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "15": {
            "code": "h = 642\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "16": {
            "code": "h = 1499\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "17": {
            "code": "h = 1529\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "18": {
            "code": "h = 1126\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "19": {
            "code": "h = 1809\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "20": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "21": {
            "code": "h = 889\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "22": {
            "code": "h = -36\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "23": {
            "code": "h = 1224\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "24": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "25": {
            "code": "h = 1956\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "26": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "27": {
            "code": "h = -51\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "28": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "29": {
            "code": "h = 1803\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "30": {
            "code": "h = 55\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "31": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "32": {
            "code": "h = 1320\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "33": {
            "code": "h = 1165\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "34": {
            "code": "h = 1769\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "35": {
            "code": "h = 1381\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "36": {
            "code": "h = -17\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "37": {
            "code": "h = 746\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "38": {
            "code": "h = 1904\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "39": {
            "code": "h = 408\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "40": {
            "code": "h = 349\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "41": {
            "code": "h = 1023\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "42": {
            "code": "h = 811\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "43": {
            "code": "h = -92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "44": {
            "code": "h = 172\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "45": {
            "code": "h = 1508\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "46": {
            "code": "h = -99\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "47": {
            "code": "h = 1987\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "48": {
            "code": "h = 361\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "49": {
            "code": "h = 772\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "50": {
            "code": "h = 497\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "51": {
            "code": "h = 589\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "52": {
            "code": "h = -88\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "53": {
            "code": "h = 1956\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "54": {
            "code": "h = 1371\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "55": {
            "code": "h = 1549\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "56": {
            "code": "h = 989\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "57": {
            "code": "h = 1724\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "58": {
            "code": "h = 485\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "59": {
            "code": "h = 1004\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "60": {
            "code": "h = 612\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "61": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "62": {
            "code": "h = 1727\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "63": {
            "code": "h = 1327\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "64": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "65": {
            "code": "h = 1704\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "66": {
            "code": "h = 217\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "67": {
            "code": "h = -36\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "68": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "69": {
            "code": "h = 1846\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "70": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "71": {
            "code": "h = 406\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "72": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "73": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "74": {
            "code": "h = 298\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "75": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "76": {
            "code": "h = -87\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "77": {
            "code": "h = -19\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "78": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "79": {
            "code": "h = 1424\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "80": {
            "code": "h = 1188\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "81": {
            "code": "h = 204\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "82": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "83": {
            "code": "h = 47\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "84": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "85": {
            "code": "h = 926\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "86": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "87": {
            "code": "h = 195\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "88": {
            "code": "h = 1719\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "89": {
            "code": "h = 150\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "90": {
            "code": "h = 360\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "91": {
            "code": "h = 524\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "92": {
            "code": "h = 276\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "93": {
            "code": "h = 1920\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "94": {
            "code": "h = -56\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "95": {
            "code": "h = -86\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "96": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "97": {
            "code": "h = 973\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "98": {
            "code": "h = 411\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "99": {
            "code": "h = 405\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "100": {
            "code": "h = 1938\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "101": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "102": {
            "code": "h = 260\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "103": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "104": {
            "code": "h = 1810\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "105": {
            "code": "h = -73\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "106": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "107": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "108": {
            "code": "h = 497\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "109": {
            "code": "h = 1964\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "110": {
            "code": "h = 1162\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "111": {
            "code": "h = -26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "112": {
            "code": "h = -86\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "113": {
            "code": "h = -43\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "114": {
            "code": "h = 1239\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "115": {
            "code": "h = 1850\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "116": {
            "code": "h = 2000\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "117": {
            "code": "h = 152\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "118": {
            "code": "h = -77\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "119": {
            "code": "h = 644\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "120": {
            "code": "h = -94\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "121": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "122": {
            "code": "h = 334\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "123": {
            "code": "h = 462\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "124": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "125": {
            "code": "h = 928\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "126": {
            "code": "h = 1835\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "127": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "128": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "129": {
            "code": "h = 845\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "130": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "131": {
            "code": "h = -55\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "132": {
            "code": "h = 789\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "133": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "134": {
            "code": "h = 830\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "135": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "136": {
            "code": "h = -36\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "137": {
            "code": "h = 1979\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "138": {
            "code": "h = 905\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "139": {
            "code": "h = 1456\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "140": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "141": {
            "code": "h = 1382\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "142": {
            "code": "h = 1718\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "143": {
            "code": "h = 548\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "144": {
            "code": "h = 1799\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "145": {
            "code": "h = -26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "146": {
            "code": "h = 360\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "147": {
            "code": "h = 1691\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "148": {
            "code": "h = -99\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "149": {
            "code": "h = 1367\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "150": {
            "code": "h = 793\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "151": {
            "code": "h = 1492\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "152": {
            "code": "h = -55\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "153": {
            "code": "h = 1698\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "154": {
            "code": "h = 662\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "155": {
            "code": "h = -92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "156": {
            "code": "h = 523\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "157": {
            "code": "h = 411\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "158": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "159": {
            "code": "h = 223\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "160": {
            "code": "h = 2000\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "161": {
            "code": "h = 589\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "162": {
            "code": "h = 543\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "163": {
            "code": "h = 1915\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "164": {
            "code": "h = 825\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "165": {
            "code": "h = -86\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "166": {
            "code": "h = 412\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "167": {
            "code": "h = 750\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "168": {
            "code": "h = 890\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "169": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "170": {
            "code": "h = 1789\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "171": {
            "code": "h = 1525\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "172": {
            "code": "h = 1419\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "173": {
            "code": "h = 1931\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "174": {
            "code": "h = 1038\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "175": {
            "code": "h = -81\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "176": {
            "code": "h = 964\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "177": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "178": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "179": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "180": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "181": {
            "code": "h = 670\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "182": {
            "code": "h = 670\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "183": {
            "code": "h = 435\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "184": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "185": {
            "code": "h = 505\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "186": {
            "code": "h = 853\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "187": {
            "code": "h = 1398\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "188": {
            "code": "h = -41\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "189": {
            "code": "h = 774\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "190": {
            "code": "h = 356\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "191": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "192": {
            "code": "h = -41\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "193": {
            "code": "h = 1838\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "194": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "195": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "196": {
            "code": "h = 376\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "197": {
            "code": "h = 1031\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "198": {
            "code": "h = 1326\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "199": {
            "code": "h = 516\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "200": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "201": {
            "code": "h = 224\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "202": {
            "code": "h = 791\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "203": {
            "code": "h = 137\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "204": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "205": {
            "code": "h = 1141\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "206": {
            "code": "h = 1441\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "207": {
            "code": "h = -85\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "208": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "209": {
            "code": "h = 1662\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "210": {
            "code": "h = 1841\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "211": {
            "code": "h = 1552\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "212": {
            "code": "h = 881\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "213": {
            "code": "h = 1649\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "214": {
            "code": "h = 552\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "215": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "216": {
            "code": "h = 91\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "217": {
            "code": "h = 1659\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "218": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "219": {
            "code": "h = 203\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "220": {
            "code": "h = 773\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "221": {
            "code": "h = 1846\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "222": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "223": {
            "code": "h = 480\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "224": {
            "code": "h = 1792\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "225": {
            "code": "h = 807\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "226": {
            "code": "h = 1880\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "227": {
            "code": "h = 1017\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "228": {
            "code": "h = -16\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "229": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "230": {
            "code": "h = 493\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "231": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "232": {
            "code": "h = 1936\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "233": {
            "code": "h = 133\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "234": {
            "code": "h = 421\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "235": {
            "code": "h = 928\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "236": {
            "code": "h = -66\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "237": {
            "code": "h = 591\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "238": {
            "code": "h = -75\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "239": {
            "code": "h = 240\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "240": {
            "code": "h = 455\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "241": {
            "code": "h = 423\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "242": {
            "code": "h = 1094\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "243": {
            "code": "h = 1964\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "244": {
            "code": "h = 944\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "245": {
            "code": "h = 1709\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "246": {
            "code": "h = -65\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "247": {
            "code": "h = -28\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "248": {
            "code": "h = 655\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "249": {
            "code": "h = 1256\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "250": {
            "code": "h = 1169\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "251": {
            "code": "h = 1689\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "252": {
            "code": "h = 903\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "253": {
            "code": "h = 1799\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "254": {
            "code": "h = 1027\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "255": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "256": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "257": {
            "code": "h = 1376\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "258": {
            "code": "h = 986\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "259": {
            "code": "h = 452\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "260": {
            "code": "h = 497\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "261": {
            "code": "h = 1959\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "262": {
            "code": "h = -36\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "263": {
            "code": "h = 89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "264": {
            "code": "h = 140\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "265": {
            "code": "h = 455\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "266": {
            "code": "h = 1997\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "267": {
            "code": "h = -50\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "268": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "269": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "270": {
            "code": "h = 49\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "271": {
            "code": "h = 953\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "272": {
            "code": "h = 614\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "273": {
            "code": "h = 1284\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "274": {
            "code": "h = 277\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "275": {
            "code": "h = 746\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "276": {
            "code": "h = 115\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "277": {
            "code": "h = -54\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "278": {
            "code": "h = -99\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "279": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "280": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "281": {
            "code": "h = 509\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "282": {
            "code": "h = 385\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "283": {
            "code": "h = 175\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "284": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "285": {
            "code": "h = -56\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "286": {
            "code": "h = -59\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "287": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "288": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "289": {
            "code": "h = 1274\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "290": {
            "code": "h = 22\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "291": {
            "code": "h = 195\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "292": {
            "code": "h = 383\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "293": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "294": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "295": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "296": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "297": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "298": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "299": {
            "code": "h = 332\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "300": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "301": {
            "code": "h = 461\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "302": {
            "code": "h = 548\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "303": {
            "code": "h = 1945\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "304": {
            "code": "h = 1536\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "305": {
            "code": "h = 614\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "306": {
            "code": "h = -99\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "307": {
            "code": "h = 676\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "308": {
            "code": "h = 1244\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "309": {
            "code": "h = 424\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "310": {
            "code": "h = 552\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "311": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "312": {
            "code": "h = 466\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "313": {
            "code": "h = 1684\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "314": {
            "code": "h = 578\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "315": {
            "code": "h = 625\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "316": {
            "code": "h = 1756\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "317": {
            "code": "h = 242\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "318": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "319": {
            "code": "h = 1187\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "320": {
            "code": "h = 255\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "321": {
            "code": "h = 1322\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "322": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "323": {
            "code": "h = 558\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "324": {
            "code": "h = -63\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "325": {
            "code": "h = -10\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "326": {
            "code": "h = 511\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "327": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "328": {
            "code": "h = 1122\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "329": {
            "code": "h = 1403\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "330": {
            "code": "h = -92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "331": {
            "code": "h = 554\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "332": {
            "code": "h = -9\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "333": {
            "code": "h = 1799\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "334": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "335": {
            "code": "h = 1159\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "336": {
            "code": "h = 1074\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "337": {
            "code": "h = 1858\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "338": {
            "code": "h = 810\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "339": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "340": {
            "code": "h = -96\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "341": {
            "code": "h = 960\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "342": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "343": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "344": {
            "code": "h = 200\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "345": {
            "code": "h = -4\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "346": {
            "code": "h = 904\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "347": {
            "code": "h = 517\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "348": {
            "code": "h = 279\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "349": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "350": {
            "code": "h = -36\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "351": {
            "code": "h = 1712\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "352": {
            "code": "h = -92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "353": {
            "code": "h = 471\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "354": {
            "code": "h = 1103\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "355": {
            "code": "h = 1265\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "356": {
            "code": "h = 1786\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "357": {
            "code": "h = 2000\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "358": {
            "code": "h = 565\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "359": {
            "code": "h = 858\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "360": {
            "code": "h = 238\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "361": {
            "code": "h = 216\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "362": {
            "code": "h = 1920\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "363": {
            "code": "h = 540\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "364": {
            "code": "h = -79\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "365": {
            "code": "h = -60\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "366": {
            "code": "h = 1776\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "367": {
            "code": "h = 398\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "368": {
            "code": "h = 878\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "369": {
            "code": "h = 702\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "370": {
            "code": "h = 1257\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "371": {
            "code": "h = 112\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "372": {
            "code": "h = 852\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "373": {
            "code": "h = -99\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "374": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "375": {
            "code": "h = 1985\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "376": {
            "code": "h = 838\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "377": {
            "code": "h = 1114\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "378": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "379": {
            "code": "h = 1156\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "380": {
            "code": "h = 1936\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "381": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "382": {
            "code": "h = 1622\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "383": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "384": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "385": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "386": {
            "code": "h = 1691\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "387": {
            "code": "h = 481\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "388": {
            "code": "h = 846\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "389": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "390": {
            "code": "h = 482\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "391": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "392": {
            "code": "h = -1\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "393": {
            "code": "h = 1029\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "394": {
            "code": "h = 800\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "395": {
            "code": "h = 1150\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "396": {
            "code": "h = 1005\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "397": {
            "code": "h = 481\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "398": {
            "code": "h = 545\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "399": {
            "code": "h = 217\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "400": {
            "code": "h = 1564\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "401": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "402": {
            "code": "h = -7\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "403": {
            "code": "h = -56\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "404": {
            "code": "h = 398\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "405": {
            "code": "h = 1604\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "406": {
            "code": "h = 146\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "407": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "408": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "409": {
            "code": "h = -56\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "410": {
            "code": "h = 608\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "411": {
            "code": "h = 373\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "412": {
            "code": "h = 1548\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "413": {
            "code": "h = 1203\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "414": {
            "code": "h = 255\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "415": {
            "code": "h = 497\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "416": {
            "code": "h = 435\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "417": {
            "code": "h = 1181\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "418": {
            "code": "h = 660\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "419": {
            "code": "h = 367\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "420": {
            "code": "h = 1929\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "421": {
            "code": "h = 635\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "422": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "423": {
            "code": "h = 1647\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "424": {
            "code": "h = 1964\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "425": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "426": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "427": {
            "code": "h = 607\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "428": {
            "code": "h = 1955\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "429": {
            "code": "h = 1819\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "430": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "431": {
            "code": "h = 678\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "432": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "433": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "434": {
            "code": "h = 150\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "435": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "436": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "437": {
            "code": "h = 418\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "438": {
            "code": "h = 1487\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "439": {
            "code": "h = 1901\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "440": {
            "code": "h = -42\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "441": {
            "code": "h = 1909\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "442": {
            "code": "h = 248\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "443": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "444": {
            "code": "h = 203\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "445": {
            "code": "h = 2000\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "446": {
            "code": "h = 1037\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "447": {
            "code": "h = 1912\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "448": {
            "code": "h = -13\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "449": {
            "code": "h = 1524\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "450": {
            "code": "h = 940\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "451": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "452": {
            "code": "h = 666\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "453": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "454": {
            "code": "h = 908\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "455": {
            "code": "h = 536\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "456": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "457": {
            "code": "h = 407\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "458": {
            "code": "h = 731\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "459": {
            "code": "h = -53\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "460": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "461": {
            "code": "h = 503\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "462": {
            "code": "h = 116\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "463": {
            "code": "h = 385\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "464": {
            "code": "h = 851\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "465": {
            "code": "h = -63\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "466": {
            "code": "h = 1473\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "467": {
            "code": "h = 337\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "468": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "469": {
            "code": "h = 440\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "470": {
            "code": "h = 857\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "471": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "472": {
            "code": "h = 1468\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "473": {
            "code": "h = 563\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "474": {
            "code": "h = 712\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "475": {
            "code": "h = 1953\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "476": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "477": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "478": {
            "code": "h = 500\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "479": {
            "code": "h = -9\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "480": {
            "code": "h = 1912\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "481": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "482": {
            "code": "h = 56\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "483": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "484": {
            "code": "h = 142\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "485": {
            "code": "h = -4\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "486": {
            "code": "h = 166\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "487": {
            "code": "h = -3\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "488": {
            "code": "h = 1384\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "489": {
            "code": "h = 1995\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "490": {
            "code": "h = 393\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "491": {
            "code": "h = 126\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "492": {
            "code": "h = 826\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "493": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "494": {
            "code": "h = 1842\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "495": {
            "code": "h = -46\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "496": {
            "code": "h = 1748\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "497": {
            "code": "h = -50\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "498": {
            "code": "h = 1456\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "499": {
            "code": "h = -92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "500": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "501": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "502": {
            "code": "h = 217\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "503": {
            "code": "h = -10\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "504": {
            "code": "h = 307\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "505": {
            "code": "h = 855\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "506": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "507": {
            "code": "h = 867\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "508": {
            "code": "h = 1401\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "509": {
            "code": "h = 216\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "510": {
            "code": "h = 483\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "511": {
            "code": "h = 491\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "512": {
            "code": "h = 1199\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "513": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "514": {
            "code": "h = 1704\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "515": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "516": {
            "code": "h = 373\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "517": {
            "code": "h = 1851\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "518": {
            "code": "h = 10\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "519": {
            "code": "h = 1598\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "520": {
            "code": "h = 210\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "521": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "522": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "523": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "524": {
            "code": "h = -100\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "525": {
            "code": "h = 614\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "526": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "527": {
            "code": "h = 1865\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "528": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "529": {
            "code": "h = 961\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "530": {
            "code": "h = 1889\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "531": {
            "code": "h = 1224\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "532": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "533": {
            "code": "h = 1735\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "534": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "535": {
            "code": "h = 602\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "536": {
            "code": "h = 1968\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "537": {
            "code": "h = 858\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "538": {
            "code": "h = 1863\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "539": {
            "code": "h = -11\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "540": {
            "code": "h = 985\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "541": {
            "code": "h = 834\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "542": {
            "code": "h = 131\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "543": {
            "code": "h = 713\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "544": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "545": {
            "code": "h = 1795\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "546": {
            "code": "h = -37\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "547": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "548": {
            "code": "h = 856\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "549": {
            "code": "h = 1444\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "550": {
            "code": "h = -62\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "551": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "552": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "553": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "554": {
            "code": "h = 243\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "555": {
            "code": "h = 669\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "556": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "557": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "558": {
            "code": "h = 166\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "559": {
            "code": "h = 166\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "560": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "561": {
            "code": "h = -41\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "562": {
            "code": "h = -7\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "563": {
            "code": "h = 363\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "564": {
            "code": "h = 263\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "565": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "566": {
            "code": "h = 1448\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "567": {
            "code": "h = 935\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "568": {
            "code": "h = 1681\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "569": {
            "code": "h = 1662\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "570": {
            "code": "h = -57\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "571": {
            "code": "h = 1879\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "572": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "573": {
            "code": "h = -31\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "574": {
            "code": "h = -35\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "575": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "576": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "577": {
            "code": "h = 706\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "578": {
            "code": "h = 157\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "579": {
            "code": "h = 670\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "580": {
            "code": "h = 492\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "581": {
            "code": "h = 1072\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "582": {
            "code": "h = 226\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "583": {
            "code": "h = 1550\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "584": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "585": {
            "code": "h = 1682\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "586": {
            "code": "h = 1242\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "587": {
            "code": "h = -10\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "588": {
            "code": "h = 861\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "589": {
            "code": "h = 1662\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "590": {
            "code": "h = 532\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "591": {
            "code": "h = 170\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "592": {
            "code": "h = -55\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "593": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "594": {
            "code": "h = 1129\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "595": {
            "code": "h = 165\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "596": {
            "code": "h = 600\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "597": {
            "code": "h = 894\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "598": {
            "code": "h = 157\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "599": {
            "code": "h = 1476\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "600": {
            "code": "h = 1906\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "601": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "602": {
            "code": "h = 70\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "603": {
            "code": "h = 1330\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "604": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "605": {
            "code": "h = 834\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "606": {
            "code": "h = 1801\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "607": {
            "code": "h = 209\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "608": {
            "code": "h = -84\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "609": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "610": {
            "code": "h = 1888\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "611": {
            "code": "h = 185\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "612": {
            "code": "h = 880\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "613": {
            "code": "h = 1892\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "614": {
            "code": "h = 778\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "615": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "616": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "617": {
            "code": "h = 1091\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "618": {
            "code": "h = 706\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "619": {
            "code": "h = 1224\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "620": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "621": {
            "code": "h = 1432\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "622": {
            "code": "h = 501\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "623": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "624": {
            "code": "h = 63\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "625": {
            "code": "h = 22\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "626": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "627": {
            "code": "h = 1892\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "628": {
            "code": "h = 218\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "629": {
            "code": "h = 532\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "630": {
            "code": "h = 217\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "631": {
            "code": "h = 902\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "632": {
            "code": "h = 864\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "633": {
            "code": "h = 773\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "634": {
            "code": "h = 1461\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "635": {
            "code": "h = 1939\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "636": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "637": {
            "code": "h = 1732\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "638": {
            "code": "h = 1202\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "639": {
            "code": "h = -26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "640": {
            "code": "h = -36\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "641": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "642": {
            "code": "h = 456\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "643": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "644": {
            "code": "h = 1792\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "645": {
            "code": "h = 1860\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "646": {
            "code": "h = 706\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "647": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "648": {
            "code": "h = 468\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "649": {
            "code": "h = 1140\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "650": {
            "code": "h = -96\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "651": {
            "code": "h = 890\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "652": {
            "code": "h = 379\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "653": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "654": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "655": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "656": {
            "code": "h = -99\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "657": {
            "code": "h = -83\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "658": {
            "code": "h = 1704\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "659": {
            "code": "h = 888\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "660": {
            "code": "h = 422\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "661": {
            "code": "h = 1292\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "662": {
            "code": "h = 868\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "663": {
            "code": "h = 1967\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "664": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "665": {
            "code": "h = 1860\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "666": {
            "code": "h = 414\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "667": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "668": {
            "code": "h = 1781\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "669": {
            "code": "h = 1296\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "670": {
            "code": "h = 173\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "671": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "672": {
            "code": "h = 825\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "673": {
            "code": "h = 837\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "674": {
            "code": "h = 626\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "675": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "676": {
            "code": "h = 1997\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "677": {
            "code": "h = 959\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "678": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "679": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "680": {
            "code": "h = 4\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "681": {
            "code": "h = 199\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "682": {
            "code": "h = 185\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "683": {
            "code": "h = 92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "684": {
            "code": "h = 264\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "685": {
            "code": "h = 20\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "686": {
            "code": "h = 1769\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "687": {
            "code": "h = 885\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "688": {
            "code": "h = 983\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "689": {
            "code": "h = 1001\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "690": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "691": {
            "code": "h = -35\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "692": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "693": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "694": {
            "code": "h = 1693\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "695": {
            "code": "h = 987\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "696": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "697": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "698": {
            "code": "h = 88\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "699": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "700": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "701": {
            "code": "h = 736\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "702": {
            "code": "h = 2000\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "703": {
            "code": "h = 1234\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "704": {
            "code": "h = 641\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "705": {
            "code": "h = 467\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "706": {
            "code": "h = -92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "707": {
            "code": "h = 492\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "708": {
            "code": "h = -16\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "709": {
            "code": "h = 1746\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "710": {
            "code": "h = 249\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "711": {
            "code": "h = -68\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "712": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "713": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "714": {
            "code": "h = 1693\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "715": {
            "code": "h = 1100\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "716": {
            "code": "h = 1458\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "717": {
            "code": "h = 1436\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "718": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "719": {
            "code": "h = 1142\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "720": {
            "code": "h = 1788\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "721": {
            "code": "h = 22\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "722": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "723": {
            "code": "h = -62\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "724": {
            "code": "h = 356\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "725": {
            "code": "h = 925\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "726": {
            "code": "h = 1746\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "727": {
            "code": "h = 320\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "728": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "729": {
            "code": "h = 857\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "730": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "731": {
            "code": "h = 1385\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "732": {
            "code": "h = 1571\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "733": {
            "code": "h = 1933\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "734": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "735": {
            "code": "h = 925\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "736": {
            "code": "h = -49\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "737": {
            "code": "h = 174\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "738": {
            "code": "h = 1560\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "739": {
            "code": "h = 581\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "740": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "741": {
            "code": "h = 856\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "742": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "743": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "744": {
            "code": "h = 497\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "745": {
            "code": "h = 261\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "746": {
            "code": "h = 412\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "747": {
            "code": "h = 346\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "748": {
            "code": "h = -43\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "749": {
            "code": "h = -45\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "750": {
            "code": "h = 1376\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "751": {
            "code": "h = 919\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "752": {
            "code": "h = 1706\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "753": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "754": {
            "code": "h = 329\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "755": {
            "code": "h = 519\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "756": {
            "code": "h = 217\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "757": {
            "code": "h = 395\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "758": {
            "code": "h = 164\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "759": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "760": {
            "code": "h = 487\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "761": {
            "code": "h = -88\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "762": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "763": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "764": {
            "code": "h = 748\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "765": {
            "code": "h = 1129\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "766": {
            "code": "h = 402\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "767": {
            "code": "h = 1332\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "768": {
            "code": "h = 1312\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "769": {
            "code": "h = 5\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "770": {
            "code": "h = 535\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "771": {
            "code": "h = 563\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "772": {
            "code": "h = 893\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "773": {
            "code": "h = -96\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "774": {
            "code": "h = 1055\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "775": {
            "code": "h = 1265\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "776": {
            "code": "h = 1577\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "777": {
            "code": "h = 1921\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "778": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "779": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "780": {
            "code": "h = -100\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "781": {
            "code": "h = 106\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "782": {
            "code": "h = 925\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "783": {
            "code": "h = 22\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "784": {
            "code": "h = 403\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "785": {
            "code": "h = 1734\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "786": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "787": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "788": {
            "code": "h = 1915\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "789": {
            "code": "h = -92\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "790": {
            "code": "h = 1432\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "791": {
            "code": "h = 1131\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "792": {
            "code": "h = 1646\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "793": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "794": {
            "code": "h = 1753\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "795": {
            "code": "h = 450\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "796": {
            "code": "h = 1998\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "797": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "798": {
            "code": "h = 1958\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "799": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "800": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "801": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "802": {
            "code": "h = 1966\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "803": {
            "code": "h = 26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "804": {
            "code": "h = 794\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "805": {
            "code": "h = 1164\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "806": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "807": {
            "code": "h = 1994\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "808": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "809": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "810": {
            "code": "h = 851\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "811": {
            "code": "h = 485\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "812": {
            "code": "h = 574\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "813": {
            "code": "h = 325\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "814": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "815": {
            "code": "h = 1924\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "816": {
            "code": "h = 612\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "817": {
            "code": "h = 1785\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "818": {
            "code": "h = 1736\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "819": {
            "code": "h = 26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "820": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "821": {
            "code": "h = 1270\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "822": {
            "code": "h = 334\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "823": {
            "code": "h = 109\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "824": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "825": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "826": {
            "code": "h = 656\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "827": {
            "code": "h = 1459\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "828": {
            "code": "h = 1384\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "829": {
            "code": "h = 1133\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "830": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "831": {
            "code": "h = 1299\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "832": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "833": {
            "code": "h = 1516\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "834": {
            "code": "h = 462\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "835": {
            "code": "h = -23\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "836": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "837": {
            "code": "h = 1984\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "838": {
            "code": "h = 497\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "839": {
            "code": "h = -76\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "840": {
            "code": "h = 533\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "841": {
            "code": "h = -7\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "842": {
            "code": "h = 1020\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "843": {
            "code": "h = 1989\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "844": {
            "code": "h = 405\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "845": {
            "code": "h = 26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "846": {
            "code": "h = 703\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "847": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "848": {
            "code": "h = 731\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "849": {
            "code": "h = 414\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "850": {
            "code": "h = 1281\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "851": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "852": {
            "code": "h = -4\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "853": {
            "code": "h = 841\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "854": {
            "code": "h = 1119\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "855": {
            "code": "h = 156\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "856": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "857": {
            "code": "h = 110\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "858": {
            "code": "h = 1899\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "859": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "860": {
            "code": "h = 1251\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "861": {
            "code": "h = 1090\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "862": {
            "code": "h = -56\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "863": {
            "code": "h = 217\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "864": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "865": {
            "code": "h = 449\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "866": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "867": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "868": {
            "code": "h = 425\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "869": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "870": {
            "code": "h = 556\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "871": {
            "code": "h = 902\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "872": {
            "code": "h = 1085\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "873": {
            "code": "h = -54\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "874": {
            "code": "h = -98\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "875": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "876": {
            "code": "h = 457\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "877": {
            "code": "h = 6\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "878": {
            "code": "h = 1953\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "879": {
            "code": "h = 51\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "880": {
            "code": "h = 1853\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "881": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "882": {
            "code": "h = 585\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "883": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "884": {
            "code": "h = -95\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "885": {
            "code": "h = 97\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "886": {
            "code": "h = 1893\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "887": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "888": {
            "code": "h = 121\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "889": {
            "code": "h = 275\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "890": {
            "code": "h = 5\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "891": {
            "code": "h = -58\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "892": {
            "code": "h = 1545\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "893": {
            "code": "h = -26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "894": {
            "code": "h = 749\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "895": {
            "code": "h = 1849\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "896": {
            "code": "h = 1758\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "897": {
            "code": "h = 258\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "898": {
            "code": "h = 778\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "899": {
            "code": "h = 316\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "900": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "901": {
            "code": "h = 716\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "902": {
            "code": "h = 1709\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "903": {
            "code": "h = -69\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "904": {
            "code": "h = 182\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "905": {
            "code": "h = 721\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "906": {
            "code": "h = 385\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "907": {
            "code": "h = 1344\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "908": {
            "code": "h = 810\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "909": {
            "code": "h = 1765\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "910": {
            "code": "h = 1162\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "911": {
            "code": "h = 830\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "912": {
            "code": "h = 543\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "913": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "914": {
            "code": "h = 817\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "915": {
            "code": "h = 735\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "916": {
            "code": "h = 1896\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "917": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "918": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "919": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "920": {
            "code": "h = 1729\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "921": {
            "code": "h = 872\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "922": {
            "code": "h = 1620\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "923": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "924": {
            "code": "h = -48\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "925": {
            "code": "h = 371\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "926": {
            "code": "h = 1190\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "927": {
            "code": "h = 1426\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "928": {
            "code": "h = -56\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "929": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "930": {
            "code": "h = 274\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "931": {
            "code": "h = 771\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "932": {
            "code": "h = 164\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "933": {
            "code": "h = -86\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "934": {
            "code": "h = 138\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "935": {
            "code": "h = 1745\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "936": {
            "code": "h = 1713\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "937": {
            "code": "h = 1980\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "938": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "939": {
            "code": "h = 733\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "940": {
            "code": "h = 720\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "941": {
            "code": "h = 1862\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "942": {
            "code": "h = 508\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "943": {
            "code": "h = 384\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "944": {
            "code": "h = 1829\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "945": {
            "code": "h = 207\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "946": {
            "code": "h = 1437\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "947": {
            "code": "h = 231\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "948": {
            "code": "h = 1305\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "949": {
            "code": "h = 1883\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "950": {
            "code": "h = 1958\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "951": {
            "code": "h = 760\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "952": {
            "code": "h = -39\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "953": {
            "code": "h = -89\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "954": {
            "code": "h = 1939\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "955": {
            "code": "h = 217\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "956": {
            "code": "h = 1125\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "957": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "958": {
            "code": "h = 433\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "959": {
            "code": "h = 1768\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "960": {
            "code": "h = -99\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "961": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "962": {
            "code": "h = 434\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "963": {
            "code": "h = -74\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "964": {
            "code": "h = -29\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "965": {
            "code": "h = 1128\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "966": {
            "code": "h = 769\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "967": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "968": {
            "code": "h = 1913\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "969": {
            "code": "h = 262\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "970": {
            "code": "h = 1875\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "971": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "972": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "973": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "974": {
            "code": "h = 1689\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "975": {
            "code": "h = -9\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "976": {
            "code": "h = 457\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "977": {
            "code": "h = 1984\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "978": {
            "code": "h = 15\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "979": {
            "code": "h = 1423\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "980": {
            "code": "h = 1941\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "981": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "982": {
            "code": "h = 1031\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "983": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "984": {
            "code": "h = 1306\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "985": {
            "code": "h = 1849\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "986": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "987": {
            "code": "h = -26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "988": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "989": {
            "code": "h = -60\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "990": {
            "code": "h = 1066\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "991": {
            "code": "h = 207\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "992": {
            "code": "h = 282\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "993": {
            "code": "h = 569\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "994": {
            "code": "h = 1755\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "995": {
            "code": "h = 352\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "996": {
            "code": "h = 369\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "997": {
            "code": "h = 333\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                0,
                0,
                0,
                0
            ]
        },
        "998": {
            "code": "h = -26\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        },
        "999": {
            "code": "h = -90\nw = 120\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1
            ]
        }
    },
    "18920": {
        "0": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "1": {
            "code": "n = 1381\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "2": {
            "code": "n = 1636\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "3": {
            "code": "n = 1596\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "4": {
            "code": "n = 1964\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "5": {
            "code": "n = 181\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "6": {
            "code": "n = 228\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "7": {
            "code": "n = 1173\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "8": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "9": {
            "code": "n = 918\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "10": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "11": {
            "code": "n = 1949\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "12": {
            "code": "n = 471\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "13": {
            "code": "n = 270\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "14": {
            "code": "n = -31\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "15": {
            "code": "n = 236\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "16": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "17": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "18": {
            "code": "n = 607\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "19": {
            "code": "n = -17\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "20": {
            "code": "n = 1841\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "21": {
            "code": "n = 724\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "22": {
            "code": "n = 1597\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "23": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "24": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "25": {
            "code": "n = 466\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "26": {
            "code": "n = 1444\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "27": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "28": {
            "code": "n = 1556\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "29": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "30": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "31": {
            "code": "n = 393\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "32": {
            "code": "n = 142\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "33": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "34": {
            "code": "n = 1950\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "35": {
            "code": "n = 370\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "36": {
            "code": "n = 844\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "37": {
            "code": "n = 718\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "38": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "39": {
            "code": "n = 618\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "40": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "41": {
            "code": "n = 1594\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "42": {
            "code": "n = 392\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "43": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "44": {
            "code": "n = 1431\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "45": {
            "code": "n = 1541\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "46": {
            "code": "n = 766\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "47": {
            "code": "n = -65\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "48": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "49": {
            "code": "n = 1691\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "50": {
            "code": "n = 463\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "51": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "52": {
            "code": "n = 1970\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "53": {
            "code": "n = 1688\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "54": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "55": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "56": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "57": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "58": {
            "code": "n = 1472\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "59": {
            "code": "n = 1810\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "60": {
            "code": "n = -7\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "61": {
            "code": "n = 147\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "62": {
            "code": "n = 1105\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "63": {
            "code": "n = 1135\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "64": {
            "code": "n = 839\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "65": {
            "code": "n = 527\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "66": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "67": {
            "code": "n = 588\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "68": {
            "code": "n = -57\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "69": {
            "code": "n = 845\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "70": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "71": {
            "code": "n = 115\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "72": {
            "code": "n = 1260\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "73": {
            "code": "n = 364\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "74": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "75": {
            "code": "n = 157\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "76": {
            "code": "n = 485\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "77": {
            "code": "n = 1673\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "78": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "79": {
            "code": "n = 458\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "80": {
            "code": "n = 1450\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "81": {
            "code": "n = 828\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "82": {
            "code": "n = 144\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "83": {
            "code": "n = 614\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "84": {
            "code": "n = 389\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "85": {
            "code": "n = 1659\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "86": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "87": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "88": {
            "code": "n = 240\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "89": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "90": {
            "code": "n = 466\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "91": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "92": {
            "code": "n = -54\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "93": {
            "code": "n = 1202\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "94": {
            "code": "n = 1880\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "95": {
            "code": "n = 574\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "96": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "97": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "98": {
            "code": "n = 388\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "99": {
            "code": "n = 1467\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "100": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "101": {
            "code": "n = 1923\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "102": {
            "code": "n = 999\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "103": {
            "code": "n = 77\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "104": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "105": {
            "code": "n = 1579\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "106": {
            "code": "n = 1871\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "107": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "108": {
            "code": "n = 361\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "109": {
            "code": "n = 1629\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "110": {
            "code": "n = -92\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "111": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "112": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "113": {
            "code": "n = 1592\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "114": {
            "code": "n = -89\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "115": {
            "code": "n = 708\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "116": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "117": {
            "code": "n = 1952\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "118": {
            "code": "n = 420\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "119": {
            "code": "n = 1923\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "120": {
            "code": "n = 267\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "121": {
            "code": "n = 1558\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "122": {
            "code": "n = 1881\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "123": {
            "code": "n = -52\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "124": {
            "code": "n = 88\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "125": {
            "code": "n = -100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "126": {
            "code": "n = 1077\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "127": {
            "code": "n = 500\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "128": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "129": {
            "code": "n = 1951\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "130": {
            "code": "n = 1850\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "131": {
            "code": "n = -93\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "132": {
            "code": "n = 1781\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "133": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "134": {
            "code": "n = 1907\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "135": {
            "code": "n = -68\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "136": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "137": {
            "code": "n = 660\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "138": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "139": {
            "code": "n = 214\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "140": {
            "code": "n = 320\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "141": {
            "code": "n = 1532\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "142": {
            "code": "n = 820\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "143": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "144": {
            "code": "n = 1847\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "145": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "146": {
            "code": "n = 555\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "147": {
            "code": "n = 1480\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "148": {
            "code": "n = 1941\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "149": {
            "code": "n = 401\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "150": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "151": {
            "code": "n = 406\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "152": {
            "code": "n = -62\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "153": {
            "code": "n = 561\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "154": {
            "code": "n = 1691\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "155": {
            "code": "n = 675\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "156": {
            "code": "n = -51\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "157": {
            "code": "n = -100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "158": {
            "code": "n = 1635\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "159": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "160": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "161": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "162": {
            "code": "n = 1417\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "163": {
            "code": "n = 308\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "164": {
            "code": "n = 1950\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "165": {
            "code": "n = 1658\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "166": {
            "code": "n = 1999\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "167": {
            "code": "n = 128\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "168": {
            "code": "n = 898\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "169": {
            "code": "n = 1747\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "170": {
            "code": "n = 332\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "171": {
            "code": "n = 491\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "172": {
            "code": "n = 966\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "173": {
            "code": "n = 863\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "174": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "175": {
            "code": "n = -74\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "176": {
            "code": "n = 789\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "177": {
            "code": "n = 565\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "178": {
            "code": "n = 314\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "179": {
            "code": "n = 800\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "180": {
            "code": "n = 1402\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "181": {
            "code": "n = 782\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "182": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "183": {
            "code": "n = 377\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "184": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "185": {
            "code": "n = 1324\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "186": {
            "code": "n = -100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "187": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "188": {
            "code": "n = -100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "189": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "190": {
            "code": "n = 1990\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "191": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "192": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "193": {
            "code": "n = 295\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "194": {
            "code": "n = 1982\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "195": {
            "code": "n = 424\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "196": {
            "code": "n = 1814\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "197": {
            "code": "n = 475\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "198": {
            "code": "n = -55\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "199": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "200": {
            "code": "n = 1451\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "201": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "202": {
            "code": "n = 1584\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "203": {
            "code": "n = 1573\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "204": {
            "code": "n = 459\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "205": {
            "code": "n = 1202\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "206": {
            "code": "n = 1327\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "207": {
            "code": "n = 1988\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "208": {
            "code": "n = 908\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "209": {
            "code": "n = 191\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "210": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "211": {
            "code": "n = 385\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "212": {
            "code": "n = -63\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "213": {
            "code": "n = 1283\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "214": {
            "code": "n = 1090\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "215": {
            "code": "n = 27\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "216": {
            "code": "n = 26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "217": {
            "code": "n = -7\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "218": {
            "code": "n = 819\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "219": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "220": {
            "code": "n = 86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "221": {
            "code": "n = 688\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "222": {
            "code": "n = 1786\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "223": {
            "code": "n = 1834\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "224": {
            "code": "n = 1583\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "225": {
            "code": "n = 173\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "226": {
            "code": "n = 1652\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "227": {
            "code": "n = -58\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "228": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "229": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "230": {
            "code": "n = 1224\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "231": {
            "code": "n = 277\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "232": {
            "code": "n = 321\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "233": {
            "code": "n = 1646\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "234": {
            "code": "n = 1622\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "235": {
            "code": "n = 1390\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "236": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "237": {
            "code": "n = 1765\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "238": {
            "code": "n = 958\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "239": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "240": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "241": {
            "code": "n = 716\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "242": {
            "code": "n = 1949\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "243": {
            "code": "n = 1998\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "244": {
            "code": "n = -91\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "245": {
            "code": "n = 1878\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "246": {
            "code": "n = 1849\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "247": {
            "code": "n = 580\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "248": {
            "code": "n = 719\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "249": {
            "code": "n = -51\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "250": {
            "code": "n = -19\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "251": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "252": {
            "code": "n = 1171\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "253": {
            "code": "n = -93\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "254": {
            "code": "n = 1714\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "255": {
            "code": "n = 1791\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "256": {
            "code": "n = 355\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "257": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "258": {
            "code": "n = 1319\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "259": {
            "code": "n = 1014\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "260": {
            "code": "n = -36\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "261": {
            "code": "n = 432\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "262": {
            "code": "n = 509\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "263": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "264": {
            "code": "n = 164\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "265": {
            "code": "n = -50\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "266": {
            "code": "n = 1906\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "267": {
            "code": "n = -2\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "268": {
            "code": "n = 582\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "269": {
            "code": "n = 401\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "270": {
            "code": "n = 975\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "271": {
            "code": "n = 17\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "272": {
            "code": "n = -100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "273": {
            "code": "n = -88\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "274": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "275": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "276": {
            "code": "n = 957\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "277": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "278": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "279": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "280": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "281": {
            "code": "n = -27\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "282": {
            "code": "n = 1850\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "283": {
            "code": "n = -7\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "284": {
            "code": "n = 1813\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "285": {
            "code": "n = 197\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "286": {
            "code": "n = 166\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "287": {
            "code": "n = 1986\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "288": {
            "code": "n = 616\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "289": {
            "code": "n = 240\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "290": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "291": {
            "code": "n = 1322\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "292": {
            "code": "n = 623\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "293": {
            "code": "n = -58\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "294": {
            "code": "n = 680\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "295": {
            "code": "n = 30\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "296": {
            "code": "n = -75\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "297": {
            "code": "n = 1094\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "298": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "299": {
            "code": "n = 1872\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "300": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "301": {
            "code": "n = 481\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "302": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "303": {
            "code": "n = 1370\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "304": {
            "code": "n = 182\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "305": {
            "code": "n = 1474\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "306": {
            "code": "n = 354\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "307": {
            "code": "n = 438\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "308": {
            "code": "n = 1241\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "309": {
            "code": "n = 1429\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "310": {
            "code": "n = 65\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "311": {
            "code": "n = 1934\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "312": {
            "code": "n = 1870\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "313": {
            "code": "n = 1847\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "314": {
            "code": "n = 884\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "315": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "316": {
            "code": "n = -8\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "317": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "318": {
            "code": "n = 561\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "319": {
            "code": "n = 748\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "320": {
            "code": "n = 1348\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "321": {
            "code": "n = 1928\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "322": {
            "code": "n = 1959\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "323": {
            "code": "n = 354\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "324": {
            "code": "n = 618\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "325": {
            "code": "n = -88\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "326": {
            "code": "n = 775\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "327": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "328": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "329": {
            "code": "n = 1280\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "330": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "331": {
            "code": "n = 97\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "332": {
            "code": "n = 455\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "333": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "334": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "335": {
            "code": "n = 1074\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "336": {
            "code": "n = 603\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "337": {
            "code": "n = 1562\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "338": {
            "code": "n = -34\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "339": {
            "code": "n = -36\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "340": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "341": {
            "code": "n = 1609\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "342": {
            "code": "n = -11\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "343": {
            "code": "n = 18\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "344": {
            "code": "n = 665\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "345": {
            "code": "n = 827\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "346": {
            "code": "n = 708\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "347": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "348": {
            "code": "n = 1946\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "349": {
            "code": "n = 598\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "350": {
            "code": "n = 1987\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "351": {
            "code": "n = 917\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "352": {
            "code": "n = 529\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "353": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "354": {
            "code": "n = 1325\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "355": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "356": {
            "code": "n = 853\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "357": {
            "code": "n = 1014\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "358": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "359": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "360": {
            "code": "n = 1362\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "361": {
            "code": "n = -52\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "362": {
            "code": "n = 438\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "363": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "364": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "365": {
            "code": "n = 1486\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "366": {
            "code": "n = 1888\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "367": {
            "code": "n = 189\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "368": {
            "code": "n = 1331\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "369": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "370": {
            "code": "n = 1525\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "371": {
            "code": "n = 1546\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "372": {
            "code": "n = 1100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "373": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "374": {
            "code": "n = 560\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "375": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "376": {
            "code": "n = 1863\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "377": {
            "code": "n = 7\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "378": {
            "code": "n = -31\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "379": {
            "code": "n = 1441\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "380": {
            "code": "n = 1340\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "381": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "382": {
            "code": "n = 1250\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "383": {
            "code": "n = -43\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "384": {
            "code": "n = 215\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "385": {
            "code": "n = -55\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "386": {
            "code": "n = 808\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "387": {
            "code": "n = 368\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "388": {
            "code": "n = 1410\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "389": {
            "code": "n = 1424\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "390": {
            "code": "n = 1770\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "391": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "392": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "393": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "394": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "395": {
            "code": "n = 137\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "396": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "397": {
            "code": "n = 1097\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "398": {
            "code": "n = 1873\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "399": {
            "code": "n = 92\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "400": {
            "code": "n = 530\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "401": {
            "code": "n = 1417\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "402": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "403": {
            "code": "n = 1925\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "404": {
            "code": "n = -64\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "405": {
            "code": "n = 1548\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "406": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "407": {
            "code": "n = 1504\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "408": {
            "code": "n = 569\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "409": {
            "code": "n = 1262\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "410": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "411": {
            "code": "n = 62\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "412": {
            "code": "n = 1983\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "413": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "414": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "415": {
            "code": "n = 482\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "416": {
            "code": "n = 1518\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "417": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "418": {
            "code": "n = -92\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "419": {
            "code": "n = -91\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "420": {
            "code": "n = 1751\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "421": {
            "code": "n = 1146\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "422": {
            "code": "n = 1312\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "423": {
            "code": "n = 608\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "424": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "425": {
            "code": "n = 1274\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "426": {
            "code": "n = 1984\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "427": {
            "code": "n = 216\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "428": {
            "code": "n = 815\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "429": {
            "code": "n = 95\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "430": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "431": {
            "code": "n = -52\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "432": {
            "code": "n = -39\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "433": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "434": {
            "code": "n = 1650\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "435": {
            "code": "n = 826\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "436": {
            "code": "n = 1224\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "437": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "438": {
            "code": "n = -58\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "439": {
            "code": "n = 1476\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "440": {
            "code": "n = -4\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "441": {
            "code": "n = 1094\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "442": {
            "code": "n = 851\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "443": {
            "code": "n = -56\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "444": {
            "code": "n = 151\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "445": {
            "code": "n = -36\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "446": {
            "code": "n = 336\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "447": {
            "code": "n = 86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "448": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "449": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "450": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "451": {
            "code": "n = -62\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "452": {
            "code": "n = -55\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "453": {
            "code": "n = 1389\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "454": {
            "code": "n = 373\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "455": {
            "code": "n = 359\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "456": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "457": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "458": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "459": {
            "code": "n = 1915\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "460": {
            "code": "n = 1633\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "461": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "462": {
            "code": "n = 1784\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "463": {
            "code": "n = 418\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "464": {
            "code": "n = 21\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "465": {
            "code": "n = 1165\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "466": {
            "code": "n = 422\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "467": {
            "code": "n = 614\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "468": {
            "code": "n = -59\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "469": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "470": {
            "code": "n = 1526\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "471": {
            "code": "n = 404\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "472": {
            "code": "n = 1111\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "473": {
            "code": "n = 395\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "474": {
            "code": "n = 786\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "475": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "476": {
            "code": "n = 1910\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "477": {
            "code": "n = 1430\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "478": {
            "code": "n = 11\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "479": {
            "code": "n = 1117\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "480": {
            "code": "n = -74\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "481": {
            "code": "n = 1956\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "482": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "483": {
            "code": "n = -74\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "484": {
            "code": "n = -97\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "485": {
            "code": "n = 339\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "486": {
            "code": "n = 415\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "487": {
            "code": "n = -93\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "488": {
            "code": "n = 1783\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "489": {
            "code": "n = 878\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "490": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "491": {
            "code": "n = 1181\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "492": {
            "code": "n = 92\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "493": {
            "code": "n = 548\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "494": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "495": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "496": {
            "code": "n = 1538\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "497": {
            "code": "n = 1892\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "498": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "499": {
            "code": "n = 1267\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "500": {
            "code": "n = 16\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "501": {
            "code": "n = 1455\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "502": {
            "code": "n = 393\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "503": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "504": {
            "code": "n = 223\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "505": {
            "code": "n = 1933\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "506": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "507": {
            "code": "n = 476\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "508": {
            "code": "n = 1008\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "509": {
            "code": "n = 174\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "510": {
            "code": "n = 168\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "511": {
            "code": "n = 1037\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "512": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "513": {
            "code": "n = 1783\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "514": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "515": {
            "code": "n = 1827\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "516": {
            "code": "n = -2\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "517": {
            "code": "n = 1063\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "518": {
            "code": "n = -73\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "519": {
            "code": "n = -92\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "520": {
            "code": "n = 1333\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "521": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "522": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "523": {
            "code": "n = 1676\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "524": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "525": {
            "code": "n = 1463\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "526": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "527": {
            "code": "n = 248\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "528": {
            "code": "n = 1608\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "529": {
            "code": "n = 768\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "530": {
            "code": "n = 1426\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "531": {
            "code": "n = 455\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "532": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "533": {
            "code": "n = 648\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "534": {
            "code": "n = 416\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "535": {
            "code": "n = 510\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "536": {
            "code": "n = -56\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "537": {
            "code": "n = 263\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "538": {
            "code": "n = 1568\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "539": {
            "code": "n = 423\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "540": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "541": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "542": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "543": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "544": {
            "code": "n = 1409\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "545": {
            "code": "n = 978\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "546": {
            "code": "n = 1890\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "547": {
            "code": "n = 361\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "548": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "549": {
            "code": "n = 1457\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "550": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "551": {
            "code": "n = 461\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "552": {
            "code": "n = 516\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "553": {
            "code": "n = 218\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "554": {
            "code": "n = 1966\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "555": {
            "code": "n = 625\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "556": {
            "code": "n = 1493\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "557": {
            "code": "n = 728\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "558": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "559": {
            "code": "n = 341\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "560": {
            "code": "n = -4\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "561": {
            "code": "n = 541\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "562": {
            "code": "n = 34\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "563": {
            "code": "n = -59\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "564": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "565": {
            "code": "n = 1711\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "566": {
            "code": "n = 142\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "567": {
            "code": "n = 1470\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "568": {
            "code": "n = 1922\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "569": {
            "code": "n = 133\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "570": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "571": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "572": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "573": {
            "code": "n = 1585\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "574": {
            "code": "n = -91\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "575": {
            "code": "n = 1949\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "576": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "577": {
            "code": "n = 1416\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "578": {
            "code": "n = 625\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "579": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "580": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "581": {
            "code": "n = 157\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "582": {
            "code": "n = 651\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "583": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "584": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "585": {
            "code": "n = 1119\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "586": {
            "code": "n = 374\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "587": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "588": {
            "code": "n = 859\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "589": {
            "code": "n = 1319\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "590": {
            "code": "n = 1814\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "591": {
            "code": "n = 482\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "592": {
            "code": "n = 164\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "593": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "594": {
            "code": "n = 1987\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "595": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "596": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "597": {
            "code": "n = 278\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "598": {
            "code": "n = 370\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "599": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "600": {
            "code": "n = 1397\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "601": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "602": {
            "code": "n = 1728\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "603": {
            "code": "n = 1865\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "604": {
            "code": "n = 1934\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "605": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "606": {
            "code": "n = 1726\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "607": {
            "code": "n = 1922\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "608": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "609": {
            "code": "n = 1877\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "610": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "611": {
            "code": "n = 407\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "612": {
            "code": "n = 1992\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "613": {
            "code": "n = -59\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "614": {
            "code": "n = 1494\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "615": {
            "code": "n = 595\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "616": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "617": {
            "code": "n = -65\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "618": {
            "code": "n = 1296\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "619": {
            "code": "n = 1245\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "620": {
            "code": "n = 1584\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "621": {
            "code": "n = 1561\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "622": {
            "code": "n = 938\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "623": {
            "code": "n = 1662\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "624": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "625": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "626": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "627": {
            "code": "n = 2\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "628": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "629": {
            "code": "n = -61\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "630": {
            "code": "n = 1901\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "631": {
            "code": "n = 1990\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "632": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "633": {
            "code": "n = 1541\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "634": {
            "code": "n = 100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "635": {
            "code": "n = 527\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "636": {
            "code": "n = 1234\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "637": {
            "code": "n = 95\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "638": {
            "code": "n = 746\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "639": {
            "code": "n = -50\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "640": {
            "code": "n = -46\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "641": {
            "code": "n = -36\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "642": {
            "code": "n = 962\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "643": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "644": {
            "code": "n = -4\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "645": {
            "code": "n = 566\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "646": {
            "code": "n = 79\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "647": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "648": {
            "code": "n = 764\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "649": {
            "code": "n = -65\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "650": {
            "code": "n = 412\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "651": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "652": {
            "code": "n = 554\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "653": {
            "code": "n = 1692\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "654": {
            "code": "n = -15\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "655": {
            "code": "n = 1918\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "656": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "657": {
            "code": "n = 1964\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "658": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "659": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "660": {
            "code": "n = 797\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "661": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "662": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "663": {
            "code": "n = 1345\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "664": {
            "code": "n = -53\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "665": {
            "code": "n = 367\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "666": {
            "code": "n = 1807\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "667": {
            "code": "n = 1771\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "668": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "669": {
            "code": "n = 1742\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "670": {
            "code": "n = 663\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "671": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "672": {
            "code": "n = 823\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "673": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "674": {
            "code": "n = 760\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "675": {
            "code": "n = 956\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "676": {
            "code": "n = 767\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "677": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "678": {
            "code": "n = 443\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "679": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "680": {
            "code": "n = 503\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "681": {
            "code": "n = 1681\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "682": {
            "code": "n = 1556\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "683": {
            "code": "n = 422\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "684": {
            "code": "n = 409\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "685": {
            "code": "n = 828\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "686": {
            "code": "n = 272\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "687": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "688": {
            "code": "n = 228\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "689": {
            "code": "n = 1410\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "690": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "691": {
            "code": "n = 957\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "692": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "693": {
            "code": "n = -84\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "694": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "695": {
            "code": "n = 415\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "696": {
            "code": "n = 1932\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "697": {
            "code": "n = 1751\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "698": {
            "code": "n = 603\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "699": {
            "code": "n = 94\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "700": {
            "code": "n = 1897\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "701": {
            "code": "n = 291\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "702": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "703": {
            "code": "n = -55\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "704": {
            "code": "n = 678\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "705": {
            "code": "n = 250\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "706": {
            "code": "n = 1820\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "707": {
            "code": "n = 560\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "708": {
            "code": "n = -100\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "709": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "710": {
            "code": "n = -58\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "711": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "712": {
            "code": "n = 978\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "713": {
            "code": "n = 461\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "714": {
            "code": "n = 460\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "715": {
            "code": "n = -72\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "716": {
            "code": "n = -30\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "717": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "718": {
            "code": "n = 536\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "719": {
            "code": "n = 1990\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "720": {
            "code": "n = 938\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "721": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "722": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "723": {
            "code": "n = 1991\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "724": {
            "code": "n = 1894\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "725": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "726": {
            "code": "n = 666\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "727": {
            "code": "n = 1128\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "728": {
            "code": "n = 1281\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "729": {
            "code": "n = -36\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "730": {
            "code": "n = 938\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "731": {
            "code": "n = 318\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "732": {
            "code": "n = 395\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "733": {
            "code": "n = 1946\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "734": {
            "code": "n = 484\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "735": {
            "code": "n = 1575\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "736": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "737": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "738": {
            "code": "n = -87\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "739": {
            "code": "n = 402\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "740": {
            "code": "n = -77\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "741": {
            "code": "n = 837\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "742": {
            "code": "n = 975\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "743": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "744": {
            "code": "n = 439\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "745": {
            "code": "n = -26\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "746": {
            "code": "n = -51\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "747": {
            "code": "n = 68\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "748": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "749": {
            "code": "n = 502\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "750": {
            "code": "n = 304\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "751": {
            "code": "n = 1531\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "752": {
            "code": "n = 1454\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "753": {
            "code": "n = 1550\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "754": {
            "code": "n = 534\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "755": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "756": {
            "code": "n = -98\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "757": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "758": {
            "code": "n = 1365\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "759": {
            "code": "n = 682\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "760": {
            "code": "n = 339\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "761": {
            "code": "n = 1076\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "762": {
            "code": "n = 1659\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "763": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "764": {
            "code": "n = 680\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "765": {
            "code": "n = 838\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "766": {
            "code": "n = 1903\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "767": {
            "code": "n = 1021\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "768": {
            "code": "n = -52\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "769": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "770": {
            "code": "n = 762\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "771": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "772": {
            "code": "n = 928\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "773": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "774": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "775": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "776": {
            "code": "n = 1349\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "777": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "778": {
            "code": "n = 412\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "779": {
            "code": "n = 1105\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "780": {
            "code": "n = 955\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "781": {
            "code": "n = 1997\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "782": {
            "code": "n = 397\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "783": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "784": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "785": {
            "code": "n = 1708\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "786": {
            "code": "n = 1754\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "787": {
            "code": "n = -85\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "788": {
            "code": "n = 1579\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "789": {
            "code": "n = -75\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "790": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "791": {
            "code": "n = 1417\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "792": {
            "code": "n = -63\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "793": {
            "code": "n = 404\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "794": {
            "code": "n = 1209\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "795": {
            "code": "n = -74\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "796": {
            "code": "n = 1840\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "797": {
            "code": "n = 527\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "798": {
            "code": "n = 459\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "799": {
            "code": "n = 1074\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "800": {
            "code": "n = 1554\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "801": {
            "code": "n = 1060\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "802": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "803": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "804": {
            "code": "n = 1962\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "805": {
            "code": "n = 1176\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "806": {
            "code": "n = 1940\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "807": {
            "code": "n = 245\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "808": {
            "code": "n = 629\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "809": {
            "code": "n = 1970\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "810": {
            "code": "n = 771\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "811": {
            "code": "n = 241\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "812": {
            "code": "n = 1340\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "813": {
            "code": "n = 498\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "814": {
            "code": "n = 380\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "815": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "816": {
            "code": "n = -62\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "817": {
            "code": "n = 146\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "818": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "819": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "820": {
            "code": "n = 1131\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "821": {
            "code": "n = 925\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "822": {
            "code": "n = 318\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "823": {
            "code": "n = -29\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "824": {
            "code": "n = -28\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "825": {
            "code": "n = 1447\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "826": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "827": {
            "code": "n = -94\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "828": {
            "code": "n = -97\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "829": {
            "code": "n = 1755\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "830": {
            "code": "n = 1560\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "831": {
            "code": "n = 1077\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "832": {
            "code": "n = -56\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "833": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "834": {
            "code": "n = 373\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "835": {
            "code": "n = 1808\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "836": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "837": {
            "code": "n = 785\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "838": {
            "code": "n = 90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "839": {
            "code": "n = 1460\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "840": {
            "code": "n = 328\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "841": {
            "code": "n = -56\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "842": {
            "code": "n = -53\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "843": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "844": {
            "code": "n = 1161\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "845": {
            "code": "n = -96\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "846": {
            "code": "n = -4\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "847": {
            "code": "n = 1566\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "848": {
            "code": "n = -59\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "849": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "850": {
            "code": "n = 1552\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "851": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "852": {
            "code": "n = -89\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "853": {
            "code": "n = -74\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "854": {
            "code": "n = 930\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "855": {
            "code": "n = -53\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "856": {
            "code": "n = 573\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "857": {
            "code": "n = 1903\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "858": {
            "code": "n = 1669\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "859": {
            "code": "n = 1253\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "860": {
            "code": "n = 1343\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "861": {
            "code": "n = 448\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "862": {
            "code": "n = -58\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "863": {
            "code": "n = 1576\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "864": {
            "code": "n = 1993\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "865": {
            "code": "n = -64\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "866": {
            "code": "n = -4\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "867": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "868": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "869": {
            "code": "n = 185\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "870": {
            "code": "n = 690\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "871": {
            "code": "n = 512\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "872": {
            "code": "n = 1238\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "873": {
            "code": "n = 1979\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "874": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "875": {
            "code": "n = 422\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "876": {
            "code": "n = 1991\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "877": {
            "code": "n = 958\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "878": {
            "code": "n = 789\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "879": {
            "code": "n = 1390\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "880": {
            "code": "n = -16\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "881": {
            "code": "n = 1883\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "882": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "883": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "884": {
            "code": "n = 946\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "885": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "886": {
            "code": "n = 1710\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "887": {
            "code": "n = 1423\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "888": {
            "code": "n = 864\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "889": {
            "code": "n = 257\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "890": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "891": {
            "code": "n = 1126\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "892": {
            "code": "n = 1890\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "893": {
            "code": "n = 873\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "894": {
            "code": "n = 401\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "895": {
            "code": "n = 1688\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "896": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "897": {
            "code": "n = 607\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "898": {
            "code": "n = 1885\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "899": {
            "code": "n = 962\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "900": {
            "code": "n = 855\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "901": {
            "code": "n = 607\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "902": {
            "code": "n = 1840\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "903": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "904": {
            "code": "n = 1312\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "905": {
            "code": "n = 1331\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "906": {
            "code": "n = -60\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "907": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "908": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "909": {
            "code": "n = 1610\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "910": {
            "code": "n = 401\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "911": {
            "code": "n = 1693\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "912": {
            "code": "n = 834\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "913": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "914": {
            "code": "n = 730\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "915": {
            "code": "n = 1021\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "916": {
            "code": "n = 1401\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "917": {
            "code": "n = 981\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "918": {
            "code": "n = 1050\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "919": {
            "code": "n = 1730\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "920": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "921": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "922": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "923": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "924": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "925": {
            "code": "n = -91\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "926": {
            "code": "n = -29\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "927": {
            "code": "n = -58\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "928": {
            "code": "n = 614\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "929": {
            "code": "n = 1098\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "930": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "931": {
            "code": "n = 240\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "932": {
            "code": "n = 1930\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "933": {
            "code": "n = 635\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "934": {
            "code": "n = -35\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "935": {
            "code": "n = 1345\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "936": {
            "code": "n = 412\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "937": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "938": {
            "code": "n = 1851\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "939": {
            "code": "n = -89\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "940": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "941": {
            "code": "n = 672\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "942": {
            "code": "n = 363\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "943": {
            "code": "n = 1384\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "944": {
            "code": "n = 415\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "945": {
            "code": "n = 14\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "946": {
            "code": "n = 2000\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "947": {
            "code": "n = 1915\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "948": {
            "code": "n = 570\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "949": {
            "code": "n = 1499\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "950": {
            "code": "n = 1702\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "951": {
            "code": "n = 1990\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "952": {
            "code": "n = 275\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "953": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "954": {
            "code": "n = 681\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "955": {
            "code": "n = 1605\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "956": {
            "code": "n = 1051\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "957": {
            "code": "n = 1601\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "958": {
            "code": "n = 550\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "959": {
            "code": "n = 372\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "960": {
            "code": "n = 197\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "961": {
            "code": "n = 573\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "962": {
            "code": "n = 527\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "963": {
            "code": "n = 1963\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "964": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "965": {
            "code": "n = -89\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "966": {
            "code": "n = 1375\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "967": {
            "code": "n = 1249\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "968": {
            "code": "n = 279\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "969": {
            "code": "n = 1994\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "970": {
            "code": "n = -96\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "971": {
            "code": "n = 1370\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "972": {
            "code": "n = 394\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "973": {
            "code": "n = 767\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "974": {
            "code": "n = -92\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "975": {
            "code": "n = 112\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "976": {
            "code": "n = 65\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "977": {
            "code": "n = 228\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "978": {
            "code": "n = 1615\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "979": {
            "code": "n = 1731\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "980": {
            "code": "n = 1587\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "981": {
            "code": "n = 1884\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "982": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "983": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "984": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "985": {
            "code": "n = -86\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "986": {
            "code": "n = 1062\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "987": {
            "code": "n = 1928\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "988": {
            "code": "n = 1477\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "989": {
            "code": "n = 365\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "990": {
            "code": "n = -90\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "991": {
            "code": "n = 1099\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "992": {
            "code": "n = -99\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "993": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "994": {
            "code": "n = 434\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "995": {
            "code": "n = 217\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "996": {
            "code": "n = 149\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "997": {
            "code": "n = 485\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "998": {
            "code": "n = 369\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "999": {
            "code": "n = 147\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        }
    },
    "18942": {
        "0": {
            "code": "def cin():\n    in_ = 1807\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "1": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "2": {
            "code": "def cin():\n    in_ = 148\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "3": {
            "code": "def cin():\n    in_ = 370\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "4": {
            "code": "def cin():\n    in_ = 1876\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "5": {
            "code": "def cin():\n    in_ = -55\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "6": {
            "code": "def cin():\n    in_ = 416\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "7": {
            "code": "def cin():\n    in_ = 1812\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "8": {
            "code": "def cin():\n    in_ = 1785\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "9": {
            "code": "def cin():\n    in_ = 1371\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "10": {
            "code": "def cin():\n    in_ = 1893\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "11": {
            "code": "def cin():\n    in_ = 1688\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "12": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "13": {
            "code": "def cin():\n    in_ = -98\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "14": {
            "code": "def cin():\n    in_ = 743\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "15": {
            "code": "def cin():\n    in_ = -36\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "16": {
            "code": "def cin():\n    in_ = 669\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "17": {
            "code": "def cin():\n    in_ = 1197\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "18": {
            "code": "def cin():\n    in_ = 54\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "19": {
            "code": "def cin():\n    in_ = 809\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "20": {
            "code": "def cin():\n    in_ = 630\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "21": {
            "code": "def cin():\n    in_ = -61\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "22": {
            "code": "def cin():\n    in_ = 656\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "23": {
            "code": "def cin():\n    in_ = 209\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "24": {
            "code": "def cin():\n    in_ = 605\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "25": {
            "code": "def cin():\n    in_ = 1367\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "26": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "27": {
            "code": "def cin():\n    in_ = 408\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "28": {
            "code": "def cin():\n    in_ = 571\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "29": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "30": {
            "code": "def cin():\n    in_ = 1215\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "31": {
            "code": "def cin():\n    in_ = 1992\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "32": {
            "code": "def cin():\n    in_ = 1503\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "33": {
            "code": "def cin():\n    in_ = 385\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "34": {
            "code": "def cin():\n    in_ = 812\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "35": {
            "code": "def cin():\n    in_ = 820\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "36": {
            "code": "def cin():\n    in_ = 1545\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "37": {
            "code": "def cin():\n    in_ = 1879\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "38": {
            "code": "def cin():\n    in_ = 998\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "39": {
            "code": "def cin():\n    in_ = 1641\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "40": {
            "code": "def cin():\n    in_ = 408\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "41": {
            "code": "def cin():\n    in_ = 358\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "42": {
            "code": "def cin():\n    in_ = 1587\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "43": {
            "code": "def cin():\n    in_ = 1336\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "44": {
            "code": "def cin():\n    in_ = 1156\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "45": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "46": {
            "code": "def cin():\n    in_ = 664\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "47": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "48": {
            "code": "def cin():\n    in_ = 1891\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "49": {
            "code": "def cin():\n    in_ = 601\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "50": {
            "code": "def cin():\n    in_ = 498\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "51": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "52": {
            "code": "def cin():\n    in_ = 1578\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "53": {
            "code": "def cin():\n    in_ = 1455\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "54": {
            "code": "def cin():\n    in_ = 398\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "55": {
            "code": "def cin():\n    in_ = 1794\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "56": {
            "code": "def cin():\n    in_ = 313\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "57": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "58": {
            "code": "def cin():\n    in_ = 1649\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "59": {
            "code": "def cin():\n    in_ = 723\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "60": {
            "code": "def cin():\n    in_ = 1991\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "61": {
            "code": "def cin():\n    in_ = 1974\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "62": {
            "code": "def cin():\n    in_ = 171\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "63": {
            "code": "def cin():\n    in_ = 1911\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "64": {
            "code": "def cin():\n    in_ = -4\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "65": {
            "code": "def cin():\n    in_ = 540\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "66": {
            "code": "def cin():\n    in_ = -30\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "67": {
            "code": "def cin():\n    in_ = 153\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "68": {
            "code": "def cin():\n    in_ = 1078\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "69": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "70": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "71": {
            "code": "def cin():\n    in_ = 455\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "72": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "73": {
            "code": "def cin():\n    in_ = 1869\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "74": {
            "code": "def cin():\n    in_ = -1\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "75": {
            "code": "def cin():\n    in_ = 1902\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "76": {
            "code": "def cin():\n    in_ = 597\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "77": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "78": {
            "code": "def cin():\n    in_ = 209\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "79": {
            "code": "def cin():\n    in_ = 802\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "80": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "81": {
            "code": "def cin():\n    in_ = -2\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "82": {
            "code": "def cin():\n    in_ = -92\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "83": {
            "code": "def cin():\n    in_ = 579\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "84": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "85": {
            "code": "def cin():\n    in_ = 1234\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "86": {
            "code": "def cin():\n    in_ = 1058\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "87": {
            "code": "def cin():\n    in_ = -58\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "88": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "89": {
            "code": "def cin():\n    in_ = 1765\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "90": {
            "code": "def cin():\n    in_ = 1880\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "91": {
            "code": "def cin():\n    in_ = -39\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "92": {
            "code": "def cin():\n    in_ = -13\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "93": {
            "code": "def cin():\n    in_ = 1488\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "94": {
            "code": "def cin():\n    in_ = 1619\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "95": {
            "code": "def cin():\n    in_ = 1659\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "96": {
            "code": "def cin():\n    in_ = 2000\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "97": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "98": {
            "code": "def cin():\n    in_ = 533\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "99": {
            "code": "def cin():\n    in_ = 867\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "100": {
            "code": "def cin():\n    in_ = 698\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "101": {
            "code": "def cin():\n    in_ = 1735\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "102": {
            "code": "def cin():\n    in_ = 1979\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "103": {
            "code": "def cin():\n    in_ = 1821\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "104": {
            "code": "def cin():\n    in_ = 575\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "105": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "106": {
            "code": "def cin():\n    in_ = 1883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "107": {
            "code": "def cin():\n    in_ = 1981\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "108": {
            "code": "def cin():\n    in_ = 1642\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "109": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "110": {
            "code": "def cin():\n    in_ = 1159\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "111": {
            "code": "def cin():\n    in_ = 1755\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "112": {
            "code": "def cin():\n    in_ = 1343\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "113": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "114": {
            "code": "def cin():\n    in_ = 626\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "115": {
            "code": "def cin():\n    in_ = 1632\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "116": {
            "code": "def cin():\n    in_ = 577\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "117": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "118": {
            "code": "def cin():\n    in_ = 1932\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "119": {
            "code": "def cin():\n    in_ = -46\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "120": {
            "code": "def cin():\n    in_ = 1902\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "121": {
            "code": "def cin():\n    in_ = 1893\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "122": {
            "code": "def cin():\n    in_ = 601\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "123": {
            "code": "def cin():\n    in_ = -5\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "124": {
            "code": "def cin():\n    in_ = 373\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "125": {
            "code": "def cin():\n    in_ = 1352\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "126": {
            "code": "def cin():\n    in_ = -76\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "127": {
            "code": "def cin():\n    in_ = 1910\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "128": {
            "code": "def cin():\n    in_ = 1650\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "129": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "130": {
            "code": "def cin():\n    in_ = 1987\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "131": {
            "code": "def cin():\n    in_ = 425\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "132": {
            "code": "def cin():\n    in_ = 881\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "133": {
            "code": "def cin():\n    in_ = 246\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "134": {
            "code": "def cin():\n    in_ = -39\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "135": {
            "code": "def cin():\n    in_ = 2000\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "136": {
            "code": "def cin():\n    in_ = -52\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "137": {
            "code": "def cin():\n    in_ = 1529\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "138": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "139": {
            "code": "def cin():\n    in_ = 888\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "140": {
            "code": "def cin():\n    in_ = 485\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "141": {
            "code": "def cin():\n    in_ = 22\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "142": {
            "code": "def cin():\n    in_ = 479\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "143": {
            "code": "def cin():\n    in_ = 3\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "144": {
            "code": "def cin():\n    in_ = 95\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "145": {
            "code": "def cin():\n    in_ = 113\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "146": {
            "code": "def cin():\n    in_ = 1984\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "147": {
            "code": "def cin():\n    in_ = 179\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "148": {
            "code": "def cin():\n    in_ = 578\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "149": {
            "code": "def cin():\n    in_ = -7\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "150": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "151": {
            "code": "def cin():\n    in_ = 1965\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "152": {
            "code": "def cin():\n    in_ = 1952\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "153": {
            "code": "def cin():\n    in_ = 1220\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "154": {
            "code": "def cin():\n    in_ = -97\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "155": {
            "code": "def cin():\n    in_ = 151\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "156": {
            "code": "def cin():\n    in_ = 1652\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "157": {
            "code": "def cin():\n    in_ = 851\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "158": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "159": {
            "code": "def cin():\n    in_ = 172\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "160": {
            "code": "def cin():\n    in_ = 9\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "161": {
            "code": "def cin():\n    in_ = 157\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "162": {
            "code": "def cin():\n    in_ = 1644\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "163": {
            "code": "def cin():\n    in_ = 370\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "164": {
            "code": "def cin():\n    in_ = 9\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "165": {
            "code": "def cin():\n    in_ = 1280\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "166": {
            "code": "def cin():\n    in_ = 874\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "167": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "168": {
            "code": "def cin():\n    in_ = 1224\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "169": {
            "code": "def cin():\n    in_ = 173\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "170": {
            "code": "def cin():\n    in_ = 1859\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "171": {
            "code": "def cin():\n    in_ = 134\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "172": {
            "code": "def cin():\n    in_ = 44\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "173": {
            "code": "def cin():\n    in_ = 1989\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "174": {
            "code": "def cin():\n    in_ = -8\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "175": {
            "code": "def cin():\n    in_ = 1186\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "176": {
            "code": "def cin():\n    in_ = 423\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "177": {
            "code": "def cin():\n    in_ = 114\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "178": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "179": {
            "code": "def cin():\n    in_ = 853\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "180": {
            "code": "def cin():\n    in_ = 598\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "181": {
            "code": "def cin():\n    in_ = 430\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "182": {
            "code": "def cin():\n    in_ = 166\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "183": {
            "code": "def cin():\n    in_ = 236\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "184": {
            "code": "def cin():\n    in_ = 535\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "185": {
            "code": "def cin():\n    in_ = 1284\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "186": {
            "code": "def cin():\n    in_ = -58\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "187": {
            "code": "def cin():\n    in_ = 1173\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "188": {
            "code": "def cin():\n    in_ = 1552\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "189": {
            "code": "def cin():\n    in_ = -28\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "190": {
            "code": "def cin():\n    in_ = 520\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "191": {
            "code": "def cin():\n    in_ = 27\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "192": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "193": {
            "code": "def cin():\n    in_ = -51\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "194": {
            "code": "def cin():\n    in_ = 1229\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "195": {
            "code": "def cin():\n    in_ = 1371\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "196": {
            "code": "def cin():\n    in_ = 1887\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "197": {
            "code": "def cin():\n    in_ = -53\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "198": {
            "code": "def cin():\n    in_ = 1140\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "199": {
            "code": "def cin():\n    in_ = 655\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "200": {
            "code": "def cin():\n    in_ = 100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "201": {
            "code": "def cin():\n    in_ = 568\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "202": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "203": {
            "code": "def cin():\n    in_ = 1791\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "204": {
            "code": "def cin():\n    in_ = 359\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "205": {
            "code": "def cin():\n    in_ = 553\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "206": {
            "code": "def cin():\n    in_ = 774\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "207": {
            "code": "def cin():\n    in_ = 419\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "208": {
            "code": "def cin():\n    in_ = 26\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "209": {
            "code": "def cin():\n    in_ = 396\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "210": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "211": {
            "code": "def cin():\n    in_ = 367\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "212": {
            "code": "def cin():\n    in_ = 1120\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "213": {
            "code": "def cin():\n    in_ = 493\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "214": {
            "code": "def cin():\n    in_ = 27\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "215": {
            "code": "def cin():\n    in_ = 824\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "216": {
            "code": "def cin():\n    in_ = 1597\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "217": {
            "code": "def cin():\n    in_ = 753\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "218": {
            "code": "def cin():\n    in_ = 1505\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "219": {
            "code": "def cin():\n    in_ = 1676\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "220": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "221": {
            "code": "def cin():\n    in_ = 950\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "222": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "223": {
            "code": "def cin():\n    in_ = 501\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "224": {
            "code": "def cin():\n    in_ = 1342\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "225": {
            "code": "def cin():\n    in_ = 1945\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "226": {
            "code": "def cin():\n    in_ = 582\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "227": {
            "code": "def cin():\n    in_ = 166\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "228": {
            "code": "def cin():\n    in_ = -27\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "229": {
            "code": "def cin():\n    in_ = 300\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "230": {
            "code": "def cin():\n    in_ = 420\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "231": {
            "code": "def cin():\n    in_ = 1013\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "232": {
            "code": "def cin():\n    in_ = 1755\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "233": {
            "code": "def cin():\n    in_ = 1701\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "234": {
            "code": "def cin():\n    in_ = 1935\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "235": {
            "code": "def cin():\n    in_ = 624\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "236": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "237": {
            "code": "def cin():\n    in_ = 1380\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "238": {
            "code": "def cin():\n    in_ = -36\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "239": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "240": {
            "code": "def cin():\n    in_ = -19\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "241": {
            "code": "def cin():\n    in_ = 447\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "242": {
            "code": "def cin():\n    in_ = 692\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "243": {
            "code": "def cin():\n    in_ = 366\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "244": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "245": {
            "code": "def cin():\n    in_ = 394\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "246": {
            "code": "def cin():\n    in_ = 641\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "247": {
            "code": "def cin():\n    in_ = 1893\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "248": {
            "code": "def cin():\n    in_ = -3\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "249": {
            "code": "def cin():\n    in_ = 605\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "250": {
            "code": "def cin():\n    in_ = 1314\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "251": {
            "code": "def cin():\n    in_ = 1764\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "252": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "253": {
            "code": "def cin():\n    in_ = -61\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "254": {
            "code": "def cin():\n    in_ = -42\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "255": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "256": {
            "code": "def cin():\n    in_ = -56\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "257": {
            "code": "def cin():\n    in_ = 387\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "258": {
            "code": "def cin():\n    in_ = 398\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "259": {
            "code": "def cin():\n    in_ = 908\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "260": {
            "code": "def cin():\n    in_ = 1981\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "261": {
            "code": "def cin():\n    in_ = 1488\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "262": {
            "code": "def cin():\n    in_ = 149\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "263": {
            "code": "def cin():\n    in_ = 895\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "264": {
            "code": "def cin():\n    in_ = 1644\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "265": {
            "code": "def cin():\n    in_ = 431\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "266": {
            "code": "def cin():\n    in_ = 1754\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "267": {
            "code": "def cin():\n    in_ = -98\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "268": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "269": {
            "code": "def cin():\n    in_ = -26\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "270": {
            "code": "def cin():\n    in_ = 291\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "271": {
            "code": "def cin():\n    in_ = 57\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "272": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "273": {
            "code": "def cin():\n    in_ = -22\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "274": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "275": {
            "code": "def cin():\n    in_ = -35\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "276": {
            "code": "def cin():\n    in_ = -36\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "277": {
            "code": "def cin():\n    in_ = 1878\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "278": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "279": {
            "code": "def cin():\n    in_ = 103\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "280": {
            "code": "def cin():\n    in_ = 1980\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "281": {
            "code": "def cin():\n    in_ = -63\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "282": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "283": {
            "code": "def cin():\n    in_ = 1883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "284": {
            "code": "def cin():\n    in_ = 155\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "285": {
            "code": "def cin():\n    in_ = 519\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "286": {
            "code": "def cin():\n    in_ = 1942\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "287": {
            "code": "def cin():\n    in_ = 1979\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "288": {
            "code": "def cin():\n    in_ = 1671\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "289": {
            "code": "def cin():\n    in_ = 848\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "290": {
            "code": "def cin():\n    in_ = 420\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "291": {
            "code": "def cin():\n    in_ = 157\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "292": {
            "code": "def cin():\n    in_ = -51\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "293": {
            "code": "def cin():\n    in_ = 563\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "294": {
            "code": "def cin():\n    in_ = -89\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "295": {
            "code": "def cin():\n    in_ = 1558\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "296": {
            "code": "def cin():\n    in_ = 1638\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "297": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "298": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "299": {
            "code": "def cin():\n    in_ = 221\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "300": {
            "code": "def cin():\n    in_ = 1084\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "301": {
            "code": "def cin():\n    in_ = 1639\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "302": {
            "code": "def cin():\n    in_ = -36\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "303": {
            "code": "def cin():\n    in_ = 1850\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "304": {
            "code": "def cin():\n    in_ = 1177\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "305": {
            "code": "def cin():\n    in_ = 408\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "306": {
            "code": "def cin():\n    in_ = -20\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "307": {
            "code": "def cin():\n    in_ = 1746\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "308": {
            "code": "def cin():\n    in_ = 1118\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "309": {
            "code": "def cin():\n    in_ = 1995\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "310": {
            "code": "def cin():\n    in_ = 1999\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "311": {
            "code": "def cin():\n    in_ = 1925\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "312": {
            "code": "def cin():\n    in_ = 487\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "313": {
            "code": "def cin():\n    in_ = 405\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "314": {
            "code": "def cin():\n    in_ = 1203\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "315": {
            "code": "def cin():\n    in_ = 220\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "316": {
            "code": "def cin():\n    in_ = 1024\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "317": {
            "code": "def cin():\n    in_ = -83\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "318": {
            "code": "def cin():\n    in_ = 43\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "319": {
            "code": "def cin():\n    in_ = 617\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "320": {
            "code": "def cin():\n    in_ = -100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "321": {
            "code": "def cin():\n    in_ = 462\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "322": {
            "code": "def cin():\n    in_ = 327\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "323": {
            "code": "def cin():\n    in_ = 789\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "324": {
            "code": "def cin():\n    in_ = 1729\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "325": {
            "code": "def cin():\n    in_ = 1273\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "326": {
            "code": "def cin():\n    in_ = 547\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "327": {
            "code": "def cin():\n    in_ = 198\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "328": {
            "code": "def cin():\n    in_ = 180\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "329": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "330": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "331": {
            "code": "def cin():\n    in_ = 1031\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "332": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "333": {
            "code": "def cin():\n    in_ = 351\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "334": {
            "code": "def cin():\n    in_ = -73\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "335": {
            "code": "def cin():\n    in_ = 763\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "336": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "337": {
            "code": "def cin():\n    in_ = 275\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "338": {
            "code": "def cin():\n    in_ = -9\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "339": {
            "code": "def cin():\n    in_ = 1883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "340": {
            "code": "def cin():\n    in_ = 1991\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "341": {
            "code": "def cin():\n    in_ = 308\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "342": {
            "code": "def cin():\n    in_ = 1952\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "343": {
            "code": "def cin():\n    in_ = 290\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "344": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "345": {
            "code": "def cin():\n    in_ = 436\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "346": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "347": {
            "code": "def cin():\n    in_ = 1687\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "348": {
            "code": "def cin():\n    in_ = 418\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "349": {
            "code": "def cin():\n    in_ = 1716\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "350": {
            "code": "def cin():\n    in_ = 959\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "351": {
            "code": "def cin():\n    in_ = -99\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "352": {
            "code": "def cin():\n    in_ = 115\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "353": {
            "code": "def cin():\n    in_ = -40\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "354": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "355": {
            "code": "def cin():\n    in_ = 1873\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "356": {
            "code": "def cin():\n    in_ = -92\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "357": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "358": {
            "code": "def cin():\n    in_ = 604\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "359": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "360": {
            "code": "def cin():\n    in_ = 273\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "361": {
            "code": "def cin():\n    in_ = 1957\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "362": {
            "code": "def cin():\n    in_ = -55\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "363": {
            "code": "def cin():\n    in_ = 989\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "364": {
            "code": "def cin():\n    in_ = 1953\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "365": {
            "code": "def cin():\n    in_ = 1980\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "366": {
            "code": "def cin():\n    in_ = 606\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "367": {
            "code": "def cin():\n    in_ = 1827\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "368": {
            "code": "def cin():\n    in_ = 286\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "369": {
            "code": "def cin():\n    in_ = 1931\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "370": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "371": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "372": {
            "code": "def cin():\n    in_ = -55\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "373": {
            "code": "def cin():\n    in_ = 406\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "374": {
            "code": "def cin():\n    in_ = 288\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "375": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "376": {
            "code": "def cin():\n    in_ = 445\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "377": {
            "code": "def cin():\n    in_ = 1509\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "378": {
            "code": "def cin():\n    in_ = 220\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "379": {
            "code": "def cin():\n    in_ = -98\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "380": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "381": {
            "code": "def cin():\n    in_ = 1715\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "382": {
            "code": "def cin():\n    in_ = 460\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "383": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "384": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "385": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "386": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "387": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "388": {
            "code": "def cin():\n    in_ = 883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "389": {
            "code": "def cin():\n    in_ = 1441\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "390": {
            "code": "def cin():\n    in_ = 925\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "391": {
            "code": "def cin():\n    in_ = 1007\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "392": {
            "code": "def cin():\n    in_ = 381\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "393": {
            "code": "def cin():\n    in_ = 1088\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "394": {
            "code": "def cin():\n    in_ = 1752\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "395": {
            "code": "def cin():\n    in_ = 614\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "396": {
            "code": "def cin():\n    in_ = 260\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "397": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "398": {
            "code": "def cin():\n    in_ = 1074\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "399": {
            "code": "def cin():\n    in_ = 1322\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "400": {
            "code": "def cin():\n    in_ = 262\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "401": {
            "code": "def cin():\n    in_ = 300\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "402": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "403": {
            "code": "def cin():\n    in_ = 433\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "404": {
            "code": "def cin():\n    in_ = 371\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "405": {
            "code": "def cin():\n    in_ = 1381\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "406": {
            "code": "def cin():\n    in_ = -73\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "407": {
            "code": "def cin():\n    in_ = -9\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "408": {
            "code": "def cin():\n    in_ = -58\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "409": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "410": {
            "code": "def cin():\n    in_ = -59\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "411": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "412": {
            "code": "def cin():\n    in_ = 1919\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "413": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "414": {
            "code": "def cin():\n    in_ = 185\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "415": {
            "code": "def cin():\n    in_ = 1787\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "416": {
            "code": "def cin():\n    in_ = 1054\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "417": {
            "code": "def cin():\n    in_ = 1808\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "418": {
            "code": "def cin():\n    in_ = 1114\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "419": {
            "code": "def cin():\n    in_ = 1869\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "420": {
            "code": "def cin():\n    in_ = 898\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "421": {
            "code": "def cin():\n    in_ = -94\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "422": {
            "code": "def cin():\n    in_ = 708\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "423": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "424": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "425": {
            "code": "def cin():\n    in_ = 1233\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "426": {
            "code": "def cin():\n    in_ = 1859\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "427": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "428": {
            "code": "def cin():\n    in_ = 1755\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "429": {
            "code": "def cin():\n    in_ = 859\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "430": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "431": {
            "code": "def cin():\n    in_ = 1800\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "432": {
            "code": "def cin():\n    in_ = 1879\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "433": {
            "code": "def cin():\n    in_ = 1789\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "434": {
            "code": "def cin():\n    in_ = 354\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "435": {
            "code": "def cin():\n    in_ = 420\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "436": {
            "code": "def cin():\n    in_ = -42\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "437": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "438": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "439": {
            "code": "def cin():\n    in_ = 1190\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "440": {
            "code": "def cin():\n    in_ = 1177\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "441": {
            "code": "def cin():\n    in_ = -61\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "442": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "443": {
            "code": "def cin():\n    in_ = 1924\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "444": {
            "code": "def cin():\n    in_ = 1660\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "445": {
            "code": "def cin():\n    in_ = 1460\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "446": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "447": {
            "code": "def cin():\n    in_ = 1755\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "448": {
            "code": "def cin():\n    in_ = 75\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "449": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "450": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "451": {
            "code": "def cin():\n    in_ = 1318\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "452": {
            "code": "def cin():\n    in_ = 615\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "453": {
            "code": "def cin():\n    in_ = 700\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "454": {
            "code": "def cin():\n    in_ = 249\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "455": {
            "code": "def cin():\n    in_ = 150\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "456": {
            "code": "def cin():\n    in_ = 34\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "457": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "458": {
            "code": "def cin():\n    in_ = 435\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "459": {
            "code": "def cin():\n    in_ = 367\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "460": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "461": {
            "code": "def cin():\n    in_ = 451\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "462": {
            "code": "def cin():\n    in_ = 1309\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "463": {
            "code": "def cin():\n    in_ = 1508\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "464": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "465": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "466": {
            "code": "def cin():\n    in_ = 1883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "467": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "468": {
            "code": "def cin():\n    in_ = 824\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "469": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "470": {
            "code": "def cin():\n    in_ = 1031\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "471": {
            "code": "def cin():\n    in_ = 356\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "472": {
            "code": "def cin():\n    in_ = 1194\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "473": {
            "code": "def cin():\n    in_ = -81\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "474": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "475": {
            "code": "def cin():\n    in_ = -44\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "476": {
            "code": "def cin():\n    in_ = 649\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "477": {
            "code": "def cin():\n    in_ = 475\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "478": {
            "code": "def cin():\n    in_ = -53\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "479": {
            "code": "def cin():\n    in_ = 1667\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "480": {
            "code": "def cin():\n    in_ = 1988\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "481": {
            "code": "def cin():\n    in_ = -98\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "482": {
            "code": "def cin():\n    in_ = 1852\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "483": {
            "code": "def cin():\n    in_ = -36\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "484": {
            "code": "def cin():\n    in_ = -74\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "485": {
            "code": "def cin():\n    in_ = 552\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "486": {
            "code": "def cin():\n    in_ = 51\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "487": {
            "code": "def cin():\n    in_ = -55\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "488": {
            "code": "def cin():\n    in_ = 1080\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "489": {
            "code": "def cin():\n    in_ = 1018\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "490": {
            "code": "def cin():\n    in_ = 796\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "491": {
            "code": "def cin():\n    in_ = 1358\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "492": {
            "code": "def cin():\n    in_ = -87\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "493": {
            "code": "def cin():\n    in_ = 185\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "494": {
            "code": "def cin():\n    in_ = 249\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "495": {
            "code": "def cin():\n    in_ = 1985\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "496": {
            "code": "def cin():\n    in_ = -68\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "497": {
            "code": "def cin():\n    in_ = 116\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "498": {
            "code": "def cin():\n    in_ = 1305\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "499": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "500": {
            "code": "def cin():\n    in_ = 1421\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "501": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "502": {
            "code": "def cin():\n    in_ = -2\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "503": {
            "code": "def cin():\n    in_ = -52\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "504": {
            "code": "def cin():\n    in_ = 1203\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "505": {
            "code": "def cin():\n    in_ = 1989\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "506": {
            "code": "def cin():\n    in_ = 238\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "507": {
            "code": "def cin():\n    in_ = 1880\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "508": {
            "code": "def cin():\n    in_ = 1599\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "509": {
            "code": "def cin():\n    in_ = 1362\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "510": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "511": {
            "code": "def cin():\n    in_ = 455\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "512": {
            "code": "def cin():\n    in_ = 243\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "513": {
            "code": "def cin():\n    in_ = -55\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "514": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "515": {
            "code": "def cin():\n    in_ = 1903\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "516": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "517": {
            "code": "def cin():\n    in_ = 765\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "518": {
            "code": "def cin():\n    in_ = -92\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "519": {
            "code": "def cin():\n    in_ = 1337\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "520": {
            "code": "def cin():\n    in_ = 1426\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "521": {
            "code": "def cin():\n    in_ = 667\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "522": {
            "code": "def cin():\n    in_ = 596\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "523": {
            "code": "def cin():\n    in_ = 1889\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "524": {
            "code": "def cin():\n    in_ = 1898\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "525": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "526": {
            "code": "def cin():\n    in_ = 808\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "527": {
            "code": "def cin():\n    in_ = 0\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "528": {
            "code": "def cin():\n    in_ = 855\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "529": {
            "code": "def cin():\n    in_ = -85\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "530": {
            "code": "def cin():\n    in_ = 537\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "531": {
            "code": "def cin():\n    in_ = 1825\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "532": {
            "code": "def cin():\n    in_ = 519\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "533": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "534": {
            "code": "def cin():\n    in_ = 327\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "535": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "536": {
            "code": "def cin():\n    in_ = 1982\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "537": {
            "code": "def cin():\n    in_ = 880\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "538": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "539": {
            "code": "def cin():\n    in_ = 197\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "540": {
            "code": "def cin():\n    in_ = 1918\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "541": {
            "code": "def cin():\n    in_ = 505\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "542": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "543": {
            "code": "def cin():\n    in_ = 1883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "544": {
            "code": "def cin():\n    in_ = 379\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "545": {
            "code": "def cin():\n    in_ = -74\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "546": {
            "code": "def cin():\n    in_ = 514\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "547": {
            "code": "def cin():\n    in_ = 1755\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "548": {
            "code": "def cin():\n    in_ = 1131\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "549": {
            "code": "def cin():\n    in_ = 561\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "550": {
            "code": "def cin():\n    in_ = 1529\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "551": {
            "code": "def cin():\n    in_ = 1897\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "552": {
            "code": "def cin():\n    in_ = 1381\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "553": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "554": {
            "code": "def cin():\n    in_ = -58\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "555": {
            "code": "def cin():\n    in_ = 134\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "556": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "557": {
            "code": "def cin():\n    in_ = -99\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "558": {
            "code": "def cin():\n    in_ = 965\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "559": {
            "code": "def cin():\n    in_ = -96\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "560": {
            "code": "def cin():\n    in_ = -4\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "561": {
            "code": "def cin():\n    in_ = 1790\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "562": {
            "code": "def cin():\n    in_ = 1298\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "563": {
            "code": "def cin():\n    in_ = -55\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "564": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "565": {
            "code": "def cin():\n    in_ = 740\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "566": {
            "code": "def cin():\n    in_ = 340\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "567": {
            "code": "def cin():\n    in_ = 224\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "568": {
            "code": "def cin():\n    in_ = 269\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "569": {
            "code": "def cin():\n    in_ = 403\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "570": {
            "code": "def cin():\n    in_ = 1275\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "571": {
            "code": "def cin():\n    in_ = 1883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "572": {
            "code": "def cin():\n    in_ = 413\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "573": {
            "code": "def cin():\n    in_ = 569\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "574": {
            "code": "def cin():\n    in_ = 1788\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "575": {
            "code": "def cin():\n    in_ = -26\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "576": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "577": {
            "code": "def cin():\n    in_ = 1650\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "578": {
            "code": "def cin():\n    in_ = 1973\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "579": {
            "code": "def cin():\n    in_ = 1804\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "580": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "581": {
            "code": "def cin():\n    in_ = -99\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "582": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "583": {
            "code": "def cin():\n    in_ = 1008\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "584": {
            "code": "def cin():\n    in_ = 1390\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "585": {
            "code": "def cin():\n    in_ = -99\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "586": {
            "code": "def cin():\n    in_ = 1757\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "587": {
            "code": "def cin():\n    in_ = 1848\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "588": {
            "code": "def cin():\n    in_ = 402\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "589": {
            "code": "def cin():\n    in_ = 1210\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "590": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "591": {
            "code": "def cin():\n    in_ = 717\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "592": {
            "code": "def cin():\n    in_ = -26\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "593": {
            "code": "def cin():\n    in_ = 193\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "594": {
            "code": "def cin():\n    in_ = 1989\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "595": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "596": {
            "code": "def cin():\n    in_ = 279\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "597": {
            "code": "def cin():\n    in_ = -60\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "598": {
            "code": "def cin():\n    in_ = 1265\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "599": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "600": {
            "code": "def cin():\n    in_ = 371\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "601": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "602": {
            "code": "def cin():\n    in_ = 743\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "603": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "604": {
            "code": "def cin():\n    in_ = -57\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "605": {
            "code": "def cin():\n    in_ = 1160\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "606": {
            "code": "def cin():\n    in_ = 466\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "607": {
            "code": "def cin():\n    in_ = 629\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "608": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "609": {
            "code": "def cin():\n    in_ = -26\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "610": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "611": {
            "code": "def cin():\n    in_ = 1752\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "612": {
            "code": "def cin():\n    in_ = 344\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "613": {
            "code": "def cin():\n    in_ = 1971\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "614": {
            "code": "def cin():\n    in_ = 1641\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "615": {
            "code": "def cin():\n    in_ = 293\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "616": {
            "code": "def cin():\n    in_ = 435\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "617": {
            "code": "def cin():\n    in_ = 1655\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "618": {
            "code": "def cin():\n    in_ = 578\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "619": {
            "code": "def cin():\n    in_ = 1603\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "620": {
            "code": "def cin():\n    in_ = 1470\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "621": {
            "code": "def cin():\n    in_ = 392\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "622": {
            "code": "def cin():\n    in_ = 1788\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "623": {
            "code": "def cin():\n    in_ = 668\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "624": {
            "code": "def cin():\n    in_ = 721\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "625": {
            "code": "def cin():\n    in_ = 1202\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "626": {
            "code": "def cin():\n    in_ = 1727\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "627": {
            "code": "def cin():\n    in_ = 250\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "628": {
            "code": "def cin():\n    in_ = 1768\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "629": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "630": {
            "code": "def cin():\n    in_ = 100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "631": {
            "code": "def cin():\n    in_ = 842\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "632": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "633": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "634": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "635": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "636": {
            "code": "def cin():\n    in_ = 1216\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "637": {
            "code": "def cin():\n    in_ = 695\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "638": {
            "code": "def cin():\n    in_ = 38\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "639": {
            "code": "def cin():\n    in_ = 1422\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "640": {
            "code": "def cin():\n    in_ = -6\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "641": {
            "code": "def cin():\n    in_ = 1516\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "642": {
            "code": "def cin():\n    in_ = 1635\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "643": {
            "code": "def cin():\n    in_ = 1967\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "644": {
            "code": "def cin():\n    in_ = 2000\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "645": {
            "code": "def cin():\n    in_ = 490\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "646": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "647": {
            "code": "def cin():\n    in_ = 1993\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "648": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "649": {
            "code": "def cin():\n    in_ = 1989\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "650": {
            "code": "def cin():\n    in_ = 745\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "651": {
            "code": "def cin():\n    in_ = 497\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "652": {
            "code": "def cin():\n    in_ = 1997\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "653": {
            "code": "def cin():\n    in_ = 1457\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "654": {
            "code": "def cin():\n    in_ = -36\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "655": {
            "code": "def cin():\n    in_ = 114\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "656": {
            "code": "def cin():\n    in_ = 1064\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "657": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "658": {
            "code": "def cin():\n    in_ = 823\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "659": {
            "code": "def cin():\n    in_ = 1516\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "660": {
            "code": "def cin():\n    in_ = 1261\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "661": {
            "code": "def cin():\n    in_ = 370\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "662": {
            "code": "def cin():\n    in_ = 1544\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "663": {
            "code": "def cin():\n    in_ = 201\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "664": {
            "code": "def cin():\n    in_ = 1154\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "665": {
            "code": "def cin():\n    in_ = 1850\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "666": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "667": {
            "code": "def cin():\n    in_ = 255\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "668": {
            "code": "def cin():\n    in_ = 973\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "669": {
            "code": "def cin():\n    in_ = 1391\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "670": {
            "code": "def cin():\n    in_ = 1999\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "671": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "672": {
            "code": "def cin():\n    in_ = 115\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "673": {
            "code": "def cin():\n    in_ = 462\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "674": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "675": {
            "code": "def cin():\n    in_ = 987\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "676": {
            "code": "def cin():\n    in_ = 1003\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "677": {
            "code": "def cin():\n    in_ = 1892\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "678": {
            "code": "def cin():\n    in_ = 1185\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "679": {
            "code": "def cin():\n    in_ = -41\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "680": {
            "code": "def cin():\n    in_ = 1753\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "681": {
            "code": "def cin():\n    in_ = 603\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "682": {
            "code": "def cin():\n    in_ = 15\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "683": {
            "code": "def cin():\n    in_ = 1129\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "684": {
            "code": "def cin():\n    in_ = 961\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "685": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "686": {
            "code": "def cin():\n    in_ = 1278\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "687": {
            "code": "def cin():\n    in_ = -34\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "688": {
            "code": "def cin():\n    in_ = 411\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "689": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "690": {
            "code": "def cin():\n    in_ = -4\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "691": {
            "code": "def cin():\n    in_ = -100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "692": {
            "code": "def cin():\n    in_ = 376\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "693": {
            "code": "def cin():\n    in_ = 1972\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "694": {
            "code": "def cin():\n    in_ = -100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "695": {
            "code": "def cin():\n    in_ = 1931\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "696": {
            "code": "def cin():\n    in_ = 1949\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "697": {
            "code": "def cin():\n    in_ = 1165\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "698": {
            "code": "def cin():\n    in_ = 775\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "699": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "700": {
            "code": "def cin():\n    in_ = 1845\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "701": {
            "code": "def cin():\n    in_ = 1725\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "702": {
            "code": "def cin():\n    in_ = 1175\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "703": {
            "code": "def cin():\n    in_ = 1930\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "704": {
            "code": "def cin():\n    in_ = 1993\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "705": {
            "code": "def cin():\n    in_ = -99\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "706": {
            "code": "def cin():\n    in_ = 444\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "707": {
            "code": "def cin():\n    in_ = 1584\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "708": {
            "code": "def cin():\n    in_ = 1481\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "709": {
            "code": "def cin():\n    in_ = 1544\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "710": {
            "code": "def cin():\n    in_ = -87\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "711": {
            "code": "def cin():\n    in_ = 1895\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "712": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "713": {
            "code": "def cin():\n    in_ = 1174\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "714": {
            "code": "def cin():\n    in_ = 1883\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "715": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "716": {
            "code": "def cin():\n    in_ = 958\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "717": {
            "code": "def cin():\n    in_ = 1102\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "718": {
            "code": "def cin():\n    in_ = 605\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "719": {
            "code": "def cin():\n    in_ = 1382\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "720": {
            "code": "def cin():\n    in_ = 1815\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "721": {
            "code": "def cin():\n    in_ = 328\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "722": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "723": {
            "code": "def cin():\n    in_ = 127\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "724": {
            "code": "def cin():\n    in_ = 1964\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "725": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "726": {
            "code": "def cin():\n    in_ = 763\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "727": {
            "code": "def cin():\n    in_ = 361\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "728": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "729": {
            "code": "def cin():\n    in_ = 159\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "730": {
            "code": "def cin():\n    in_ = 398\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "731": {
            "code": "def cin():\n    in_ = 361\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "732": {
            "code": "def cin():\n    in_ = 166\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "733": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "734": {
            "code": "def cin():\n    in_ = 404\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "735": {
            "code": "def cin():\n    in_ = -83\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "736": {
            "code": "def cin():\n    in_ = 1628\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "737": {
            "code": "def cin():\n    in_ = 575\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "738": {
            "code": "def cin():\n    in_ = 1370\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "739": {
            "code": "def cin():\n    in_ = 984\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "740": {
            "code": "def cin():\n    in_ = -9\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "741": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "742": {
            "code": "def cin():\n    in_ = 104\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "743": {
            "code": "def cin():\n    in_ = 304\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "744": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "745": {
            "code": "def cin():\n    in_ = 1785\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "746": {
            "code": "def cin():\n    in_ = -26\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "747": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "748": {
            "code": "def cin():\n    in_ = 720\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "749": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "750": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "751": {
            "code": "def cin():\n    in_ = 1884\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "752": {
            "code": "def cin():\n    in_ = 328\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "753": {
            "code": "def cin():\n    in_ = 1257\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "754": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "755": {
            "code": "def cin():\n    in_ = -74\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "756": {
            "code": "def cin():\n    in_ = 1889\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "757": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "758": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "759": {
            "code": "def cin():\n    in_ = 1336\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "760": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "761": {
            "code": "def cin():\n    in_ = 1112\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "762": {
            "code": "def cin():\n    in_ = 562\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "763": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "764": {
            "code": "def cin():\n    in_ = 1254\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "765": {
            "code": "def cin():\n    in_ = 300\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "766": {
            "code": "def cin():\n    in_ = -20\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "767": {
            "code": "def cin():\n    in_ = 1462\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "768": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "769": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "770": {
            "code": "def cin():\n    in_ = 1002\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "771": {
            "code": "def cin():\n    in_ = 59\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "772": {
            "code": "def cin():\n    in_ = 917\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "773": {
            "code": "def cin():\n    in_ = 771\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "774": {
            "code": "def cin():\n    in_ = 1738\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "775": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "776": {
            "code": "def cin():\n    in_ = 710\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "777": {
            "code": "def cin():\n    in_ = 1551\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "778": {
            "code": "def cin():\n    in_ = 169\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "779": {
            "code": "def cin():\n    in_ = 181\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "780": {
            "code": "def cin():\n    in_ = 961\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "781": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "782": {
            "code": "def cin():\n    in_ = 524\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "783": {
            "code": "def cin():\n    in_ = 791\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "784": {
            "code": "def cin():\n    in_ = 1681\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "785": {
            "code": "def cin():\n    in_ = 724\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "786": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "787": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "788": {
            "code": "def cin():\n    in_ = 224\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "789": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "790": {
            "code": "def cin():\n    in_ = 1474\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "791": {
            "code": "def cin():\n    in_ = 1725\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "792": {
            "code": "def cin():\n    in_ = 1693\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "793": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "794": {
            "code": "def cin():\n    in_ = 484\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "795": {
            "code": "def cin():\n    in_ = 1077\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "796": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "797": {
            "code": "def cin():\n    in_ = -44\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "798": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "799": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "800": {
            "code": "def cin():\n    in_ = 795\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "801": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "802": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "803": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "804": {
            "code": "def cin():\n    in_ = 837\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "805": {
            "code": "def cin():\n    in_ = 403\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "806": {
            "code": "def cin():\n    in_ = 1\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "807": {
            "code": "def cin():\n    in_ = 430\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "808": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "809": {
            "code": "def cin():\n    in_ = 1854\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "810": {
            "code": "def cin():\n    in_ = 1086\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "811": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "812": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "813": {
            "code": "def cin():\n    in_ = 33\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "814": {
            "code": "def cin():\n    in_ = -53\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "815": {
            "code": "def cin():\n    in_ = 680\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "816": {
            "code": "def cin():\n    in_ = 749\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "817": {
            "code": "def cin():\n    in_ = 1986\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "818": {
            "code": "def cin():\n    in_ = 263\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "819": {
            "code": "def cin():\n    in_ = 1694\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "820": {
            "code": "def cin():\n    in_ = 1903\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "821": {
            "code": "def cin():\n    in_ = -100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "822": {
            "code": "def cin():\n    in_ = -30\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "823": {
            "code": "def cin():\n    in_ = 417\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "824": {
            "code": "def cin():\n    in_ = 1598\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "825": {
            "code": "def cin():\n    in_ = -51\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "826": {
            "code": "def cin():\n    in_ = 1711\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "827": {
            "code": "def cin():\n    in_ = 1537\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "828": {
            "code": "def cin():\n    in_ = 553\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "829": {
            "code": "def cin():\n    in_ = 100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "830": {
            "code": "def cin():\n    in_ = 556\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "831": {
            "code": "def cin():\n    in_ = 31\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "832": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "833": {
            "code": "def cin():\n    in_ = 1685\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "834": {
            "code": "def cin():\n    in_ = -10\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "835": {
            "code": "def cin():\n    in_ = 65\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "836": {
            "code": "def cin():\n    in_ = -74\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "837": {
            "code": "def cin():\n    in_ = 417\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "838": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "839": {
            "code": "def cin():\n    in_ = -70\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "840": {
            "code": "def cin():\n    in_ = 644\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "841": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "842": {
            "code": "def cin():\n    in_ = -53\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "843": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "844": {
            "code": "def cin():\n    in_ = 1298\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "845": {
            "code": "def cin():\n    in_ = 236\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "846": {
            "code": "def cin():\n    in_ = -57\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "847": {
            "code": "def cin():\n    in_ = 775\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "848": {
            "code": "def cin():\n    in_ = 516\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "849": {
            "code": "def cin():\n    in_ = -62\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "850": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "851": {
            "code": "def cin():\n    in_ = 1261\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "852": {
            "code": "def cin():\n    in_ = 138\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "853": {
            "code": "def cin():\n    in_ = 464\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "854": {
            "code": "def cin():\n    in_ = -58\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "855": {
            "code": "def cin():\n    in_ = -85\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "856": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "857": {
            "code": "def cin():\n    in_ = 377\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "858": {
            "code": "def cin():\n    in_ = 1778\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "859": {
            "code": "def cin():\n    in_ = 1982\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "860": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "861": {
            "code": "def cin():\n    in_ = -94\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "862": {
            "code": "def cin():\n    in_ = 1526\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "863": {
            "code": "def cin():\n    in_ = 1307\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "864": {
            "code": "def cin():\n    in_ = -58\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "865": {
            "code": "def cin():\n    in_ = 84\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "866": {
            "code": "def cin():\n    in_ = 157\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "867": {
            "code": "def cin():\n    in_ = 124\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "868": {
            "code": "def cin():\n    in_ = -67\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "869": {
            "code": "def cin():\n    in_ = 540\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "870": {
            "code": "def cin():\n    in_ = -94\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "871": {
            "code": "def cin():\n    in_ = 743\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "872": {
            "code": "def cin():\n    in_ = 337\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "873": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "874": {
            "code": "def cin():\n    in_ = 1615\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "875": {
            "code": "def cin():\n    in_ = 1389\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "876": {
            "code": "def cin():\n    in_ = 1941\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "877": {
            "code": "def cin():\n    in_ = 137\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "878": {
            "code": "def cin():\n    in_ = 281\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "879": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "880": {
            "code": "def cin():\n    in_ = 1748\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "881": {
            "code": "def cin():\n    in_ = -7\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "882": {
            "code": "def cin():\n    in_ = 1687\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "883": {
            "code": "def cin():\n    in_ = -58\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "884": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "885": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "886": {
            "code": "def cin():\n    in_ = 1117\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "887": {
            "code": "def cin():\n    in_ = 22\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "888": {
            "code": "def cin():\n    in_ = 925\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "889": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "890": {
            "code": "def cin():\n    in_ = -69\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "891": {
            "code": "def cin():\n    in_ = 1299\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "892": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "893": {
            "code": "def cin():\n    in_ = 414\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "894": {
            "code": "def cin():\n    in_ = 1099\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "895": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "896": {
            "code": "def cin():\n    in_ = 1264\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "897": {
            "code": "def cin():\n    in_ = -100\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "898": {
            "code": "def cin():\n    in_ = 1171\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "899": {
            "code": "def cin():\n    in_ = 782\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "900": {
            "code": "def cin():\n    in_ = 834\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "901": {
            "code": "def cin():\n    in_ = 117\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "902": {
            "code": "def cin():\n    in_ = 1700\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "903": {
            "code": "def cin():\n    in_ = 900\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "904": {
            "code": "def cin():\n    in_ = 481\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "905": {
            "code": "def cin():\n    in_ = 969\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "906": {
            "code": "def cin():\n    in_ = 1224\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "907": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "908": {
            "code": "def cin():\n    in_ = 1906\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "909": {
            "code": "def cin():\n    in_ = -9\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "910": {
            "code": "def cin():\n    in_ = 450\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "911": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "912": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "913": {
            "code": "def cin():\n    in_ = 379\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "914": {
            "code": "def cin():\n    in_ = -28\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "915": {
            "code": "def cin():\n    in_ = 373\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "916": {
            "code": "def cin():\n    in_ = 425\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "917": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "918": {
            "code": "def cin():\n    in_ = 790\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "919": {
            "code": "def cin():\n    in_ = 14\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "920": {
            "code": "def cin():\n    in_ = -50\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "921": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "922": {
            "code": "def cin():\n    in_ = 1071\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "923": {
            "code": "def cin():\n    in_ = -19\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "924": {
            "code": "def cin():\n    in_ = 730\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "925": {
            "code": "def cin():\n    in_ = 108\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "926": {
            "code": "def cin():\n    in_ = 103\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "927": {
            "code": "def cin():\n    in_ = 1178\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "928": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "929": {
            "code": "def cin():\n    in_ = -99\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "930": {
            "code": "def cin():\n    in_ = 1714\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "931": {
            "code": "def cin():\n    in_ = 854\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "932": {
            "code": "def cin():\n    in_ = 133\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "933": {
            "code": "def cin():\n    in_ = 369\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "934": {
            "code": "def cin():\n    in_ = 830\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "935": {
            "code": "def cin():\n    in_ = 400\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "936": {
            "code": "def cin():\n    in_ = 587\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "937": {
            "code": "def cin():\n    in_ = -74\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "938": {
            "code": "def cin():\n    in_ = 475\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "939": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "940": {
            "code": "def cin():\n    in_ = 373\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "941": {
            "code": "def cin():\n    in_ = 507\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "942": {
            "code": "def cin():\n    in_ = 1949\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "943": {
            "code": "def cin():\n    in_ = 570\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "944": {
            "code": "def cin():\n    in_ = 891\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "945": {
            "code": "def cin():\n    in_ = 166\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "946": {
            "code": "def cin():\n    in_ = 412\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "947": {
            "code": "def cin():\n    in_ = 504\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "948": {
            "code": "def cin():\n    in_ = 579\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "949": {
            "code": "def cin():\n    in_ = 510\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "950": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "951": {
            "code": "def cin():\n    in_ = 1931\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "952": {
            "code": "def cin():\n    in_ = 746\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "953": {
            "code": "def cin():\n    in_ = 576\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "954": {
            "code": "def cin():\n    in_ = 339\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "955": {
            "code": "def cin():\n    in_ = -92\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "956": {
            "code": "def cin():\n    in_ = 1982\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "957": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "958": {
            "code": "def cin():\n    in_ = 586\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "959": {
            "code": "def cin():\n    in_ = 907\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "960": {
            "code": "def cin():\n    in_ = 440\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "961": {
            "code": "def cin():\n    in_ = 1253\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "962": {
            "code": "def cin():\n    in_ = 455\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "963": {
            "code": "def cin():\n    in_ = 620\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "964": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "965": {
            "code": "def cin():\n    in_ = 1325\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "966": {
            "code": "def cin():\n    in_ = 217\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "967": {
            "code": "def cin():\n    in_ = -26\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "968": {
            "code": "def cin():\n    in_ = 371\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "969": {
            "code": "def cin():\n    in_ = 113\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "970": {
            "code": "def cin():\n    in_ = -86\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "971": {
            "code": "def cin():\n    in_ = -1\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "972": {
            "code": "def cin():\n    in_ = 920\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "973": {
            "code": "def cin():\n    in_ = 850\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "974": {
            "code": "def cin():\n    in_ = 1497\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "975": {
            "code": "def cin():\n    in_ = 1924\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "976": {
            "code": "def cin():\n    in_ = 509\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "977": {
            "code": "def cin():\n    in_ = 1064\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "978": {
            "code": "def cin():\n    in_ = -3\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "979": {
            "code": "def cin():\n    in_ = 594\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "980": {
            "code": "def cin():\n    in_ = 623\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "981": {
            "code": "def cin():\n    in_ = 1948\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "982": {
            "code": "def cin():\n    in_ = 1324\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "983": {
            "code": "def cin():\n    in_ = 405\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "984": {
            "code": "def cin():\n    in_ = 713\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "985": {
            "code": "def cin():\n    in_ = 1095\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "986": {
            "code": "def cin():\n    in_ = 1795\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "987": {
            "code": "def cin():\n    in_ = 288\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "988": {
            "code": "def cin():\n    in_ = 604\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "989": {
            "code": "def cin():\n    in_ = 821\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "990": {
            "code": "def cin():\n    in_ = 1350\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "991": {
            "code": "def cin():\n    in_ = 610\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "992": {
            "code": "def cin():\n    in_ = 422\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "993": {
            "code": "def cin():\n    in_ = 113\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "994": {
            "code": "def cin():\n    in_ = 5\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "995": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "996": {
            "code": "def cin():\n    in_ = 1802\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "997": {
            "code": "def cin():\n    in_ = -90\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "998": {
            "code": "def cin():\n    in_ = 1245\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "999": {
            "code": "def cin():\n    in_ = 561\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        }
    },
    "18955": {
        "0": {
            "code": "import math\nN = -56\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "1": {
            "code": "import math\nN = 864\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "2": {
            "code": "import math\nN = 263\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "3": {
            "code": "import math\nN = -88\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "4": {
            "code": "import math\nN = 1680\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "5": {
            "code": "import math\nN = 1822\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "6": {
            "code": "import math\nN = 75\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "7": {
            "code": "import math\nN = 455\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "8": {
            "code": "import math\nN = 949\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "9": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "10": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "11": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "12": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "13": {
            "code": "import math\nN = 1179\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "14": {
            "code": "import math\nN = 1238\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "15": {
            "code": "import math\nN = 14\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "16": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "17": {
            "code": "import math\nN = 1239\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "18": {
            "code": "import math\nN = 1992\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "19": {
            "code": "import math\nN = 1735\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "20": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "21": {
            "code": "import math\nN = 940\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "22": {
            "code": "import math\nN = 676\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "23": {
            "code": "import math\nN = -100\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "24": {
            "code": "import math\nN = 1143\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "25": {
            "code": "import math\nN = -50\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "26": {
            "code": "import math\nN = 294\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "27": {
            "code": "import math\nN = 11\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "28": {
            "code": "import math\nN = 450\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "29": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "30": {
            "code": "import math\nN = 1879\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "31": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "32": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "33": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "34": {
            "code": "import math\nN = 1431\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "35": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "36": {
            "code": "import math\nN = 1679\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "37": {
            "code": "import math\nN = -58\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "38": {
            "code": "import math\nN = 765\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "39": {
            "code": "import math\nN = 1345\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "40": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "41": {
            "code": "import math\nN = 367\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "42": {
            "code": "import math\nN = -36\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "43": {
            "code": "import math\nN = 616\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "44": {
            "code": "import math\nN = 493\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "45": {
            "code": "import math\nN = -56\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "46": {
            "code": "import math\nN = 23\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "47": {
            "code": "import math\nN = 1407\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "48": {
            "code": "import math\nN = 1897\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "49": {
            "code": "import math\nN = 458\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "50": {
            "code": "import math\nN = 1216\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "51": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "52": {
            "code": "import math\nN = 1958\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "53": {
            "code": "import math\nN = -46\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "54": {
            "code": "import math\nN = 401\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "55": {
            "code": "import math\nN = 1437\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "56": {
            "code": "import math\nN = 1455\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "57": {
            "code": "import math\nN = 596\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "58": {
            "code": "import math\nN = 561\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "59": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "60": {
            "code": "import math\nN = 416\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "61": {
            "code": "import math\nN = -54\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "62": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "63": {
            "code": "import math\nN = 1407\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "64": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "65": {
            "code": "import math\nN = -35\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "66": {
            "code": "import math\nN = 1101\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "67": {
            "code": "import math\nN = 689\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "68": {
            "code": "import math\nN = -49\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "69": {
            "code": "import math\nN = -96\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "70": {
            "code": "import math\nN = 404\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "71": {
            "code": "import math\nN = 1441\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "72": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "73": {
            "code": "import math\nN = -53\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "74": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "75": {
            "code": "import math\nN = -89\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "76": {
            "code": "import math\nN = 649\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "77": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "78": {
            "code": "import math\nN = 502\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "79": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "80": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "81": {
            "code": "import math\nN = 445\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "82": {
            "code": "import math\nN = 485\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "83": {
            "code": "import math\nN = 667\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "84": {
            "code": "import math\nN = 381\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "85": {
            "code": "import math\nN = 24\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "86": {
            "code": "import math\nN = 1290\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "87": {
            "code": "import math\nN = -96\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "88": {
            "code": "import math\nN = 1165\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "89": {
            "code": "import math\nN = 530\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "90": {
            "code": "import math\nN = -68\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "91": {
            "code": "import math\nN = 774\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "92": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "93": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "94": {
            "code": "import math\nN = 1530\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "95": {
            "code": "import math\nN = 1728\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "96": {
            "code": "import math\nN = 1371\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "97": {
            "code": "import math\nN = 638\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "98": {
            "code": "import math\nN = 374\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "99": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "100": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "101": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "102": {
            "code": "import math\nN = -48\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "103": {
            "code": "import math\nN = 955\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "104": {
            "code": "import math\nN = -2\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "105": {
            "code": "import math\nN = 1159\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "106": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "107": {
            "code": "import math\nN = 363\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "108": {
            "code": "import math\nN = 1584\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "109": {
            "code": "import math\nN = -79\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "110": {
            "code": "import math\nN = 1108\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "111": {
            "code": "import math\nN = 1517\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "112": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "113": {
            "code": "import math\nN = 594\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "114": {
            "code": "import math\nN = -99\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "115": {
            "code": "import math\nN = 281\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "116": {
            "code": "import math\nN = 1819\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "117": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "118": {
            "code": "import math\nN = -16\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "119": {
            "code": "import math\nN = -55\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "120": {
            "code": "import math\nN = 779\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "121": {
            "code": "import math\nN = 166\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "122": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "123": {
            "code": "import math\nN = 1941\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "124": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "125": {
            "code": "import math\nN = 1221\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "126": {
            "code": "import math\nN = -89\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "127": {
            "code": "import math\nN = 405\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "128": {
            "code": "import math\nN = 205\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "129": {
            "code": "import math\nN = 746\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "130": {
            "code": "import math\nN = -100\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "131": {
            "code": "import math\nN = 1746\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "132": {
            "code": "import math\nN = 911\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "133": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "134": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "135": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "136": {
            "code": "import math\nN = 1620\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "137": {
            "code": "import math\nN = 1040\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "138": {
            "code": "import math\nN = 413\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "139": {
            "code": "import math\nN = 361\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "140": {
            "code": "import math\nN = 819\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "141": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "142": {
            "code": "import math\nN = 1794\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "143": {
            "code": "import math\nN = -65\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "144": {
            "code": "import math\nN = 193\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "145": {
            "code": "import math\nN = 1186\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "146": {
            "code": "import math\nN = 1419\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "147": {
            "code": "import math\nN = 946\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "148": {
            "code": "import math\nN = 1862\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "149": {
            "code": "import math\nN = 1779\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "150": {
            "code": "import math\nN = 1963\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "151": {
            "code": "import math\nN = 1540\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "152": {
            "code": "import math\nN = -21\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "153": {
            "code": "import math\nN = 0\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "154": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "155": {
            "code": "import math\nN = 1909\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "156": {
            "code": "import math\nN = -89\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "157": {
            "code": "import math\nN = 893\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "158": {
            "code": "import math\nN = 1075\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "159": {
            "code": "import math\nN = 360\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "160": {
            "code": "import math\nN = 1913\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "161": {
            "code": "import math\nN = 851\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "162": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "163": {
            "code": "import math\nN = 1615\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "164": {
            "code": "import math\nN = 857\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "165": {
            "code": "import math\nN = 1436\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "166": {
            "code": "import math\nN = 370\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "167": {
            "code": "import math\nN = 26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "168": {
            "code": "import math\nN = 385\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "169": {
            "code": "import math\nN = 422\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "170": {
            "code": "import math\nN = 1533\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "171": {
            "code": "import math\nN = -6\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "172": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "173": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "174": {
            "code": "import math\nN = 836\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "175": {
            "code": "import math\nN = -56\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "176": {
            "code": "import math\nN = 570\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "177": {
            "code": "import math\nN = 1472\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "178": {
            "code": "import math\nN = 1110\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "179": {
            "code": "import math\nN = -68\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "180": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "181": {
            "code": "import math\nN = 1770\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "182": {
            "code": "import math\nN = 1376\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "183": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "184": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "185": {
            "code": "import math\nN = 186\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "186": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "187": {
            "code": "import math\nN = 531\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "188": {
            "code": "import math\nN = 898\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "189": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "190": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "191": {
            "code": "import math\nN = 705\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "192": {
            "code": "import math\nN = 610\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "193": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "194": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "195": {
            "code": "import math\nN = 406\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "196": {
            "code": "import math\nN = 495\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "197": {
            "code": "import math\nN = 1688\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "198": {
            "code": "import math\nN = 621\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "199": {
            "code": "import math\nN = -94\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "200": {
            "code": "import math\nN = -89\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "201": {
            "code": "import math\nN = 568\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "202": {
            "code": "import math\nN = 1946\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "203": {
            "code": "import math\nN = -37\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "204": {
            "code": "import math\nN = -33\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "205": {
            "code": "import math\nN = 1652\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "206": {
            "code": "import math\nN = 24\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "207": {
            "code": "import math\nN = 1983\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "208": {
            "code": "import math\nN = 1915\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "209": {
            "code": "import math\nN = 929\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "210": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "211": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "212": {
            "code": "import math\nN = 359\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "213": {
            "code": "import math\nN = 1184\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "214": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "215": {
            "code": "import math\nN = 1784\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "216": {
            "code": "import math\nN = 918\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "217": {
            "code": "import math\nN = 1508\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "218": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "219": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "220": {
            "code": "import math\nN = 1354\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "221": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "222": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "223": {
            "code": "import math\nN = 1985\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "224": {
            "code": "import math\nN = 964\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "225": {
            "code": "import math\nN = -74\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "226": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "227": {
            "code": "import math\nN = 1827\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "228": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "229": {
            "code": "import math\nN = 581\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "230": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "231": {
            "code": "import math\nN = 393\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "232": {
            "code": "import math\nN = 1966\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "233": {
            "code": "import math\nN = 492\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "234": {
            "code": "import math\nN = 1622\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "235": {
            "code": "import math\nN = 1353\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "236": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "237": {
            "code": "import math\nN = 1132\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "238": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "239": {
            "code": "import math\nN = 1887\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "240": {
            "code": "import math\nN = 1978\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "241": {
            "code": "import math\nN = 1037\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "242": {
            "code": "import math\nN = -41\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "243": {
            "code": "import math\nN = 12\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "244": {
            "code": "import math\nN = 1397\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "245": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "246": {
            "code": "import math\nN = 1483\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "247": {
            "code": "import math\nN = 446\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "248": {
            "code": "import math\nN = 1498\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "249": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "250": {
            "code": "import math\nN = 1956\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "251": {
            "code": "import math\nN = 1871\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "252": {
            "code": "import math\nN = 1152\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "253": {
            "code": "import math\nN = 1921\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "254": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "255": {
            "code": "import math\nN = 666\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "256": {
            "code": "import math\nN = 1948\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "257": {
            "code": "import math\nN = 406\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "258": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "259": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "260": {
            "code": "import math\nN = 766\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "261": {
            "code": "import math\nN = 1728\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "262": {
            "code": "import math\nN = 1179\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "263": {
            "code": "import math\nN = 496\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "264": {
            "code": "import math\nN = 1406\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "265": {
            "code": "import math\nN = 195\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "266": {
            "code": "import math\nN = 1234\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "267": {
            "code": "import math\nN = 352\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "268": {
            "code": "import math\nN = 170\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "269": {
            "code": "import math\nN = 1939\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "270": {
            "code": "import math\nN = 1224\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "271": {
            "code": "import math\nN = 1037\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "272": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "273": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "274": {
            "code": "import math\nN = 1808\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "275": {
            "code": "import math\nN = 129\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "276": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "277": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "278": {
            "code": "import math\nN = -56\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "279": {
            "code": "import math\nN = 242\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "280": {
            "code": "import math\nN = 1474\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "281": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "282": {
            "code": "import math\nN = -36\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "283": {
            "code": "import math\nN = 1347\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "284": {
            "code": "import math\nN = 394\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "285": {
            "code": "import math\nN = -9\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "286": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "287": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "288": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "289": {
            "code": "import math\nN = 645\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "290": {
            "code": "import math\nN = -15\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "291": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "292": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "293": {
            "code": "import math\nN = 358\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "294": {
            "code": "import math\nN = 219\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "295": {
            "code": "import math\nN = 646\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "296": {
            "code": "import math\nN = 1162\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "297": {
            "code": "import math\nN = 937\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "298": {
            "code": "import math\nN = 601\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "299": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "300": {
            "code": "import math\nN = 1720\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "301": {
            "code": "import math\nN = 951\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "302": {
            "code": "import math\nN = 1637\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "303": {
            "code": "import math\nN = 952\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "304": {
            "code": "import math\nN = 605\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "305": {
            "code": "import math\nN = 611\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "306": {
            "code": "import math\nN = 368\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "307": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "308": {
            "code": "import math\nN = 240\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "309": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "310": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "311": {
            "code": "import math\nN = 751\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "312": {
            "code": "import math\nN = 452\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "313": {
            "code": "import math\nN = 990\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "314": {
            "code": "import math\nN = 1872\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "315": {
            "code": "import math\nN = 1341\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "316": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "317": {
            "code": "import math\nN = -83\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "318": {
            "code": "import math\nN = 1245\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "319": {
            "code": "import math\nN = 1123\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "320": {
            "code": "import math\nN = 649\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "321": {
            "code": "import math\nN = -51\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "322": {
            "code": "import math\nN = 721\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "323": {
            "code": "import math\nN = 484\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "324": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "325": {
            "code": "import math\nN = 1462\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "326": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "327": {
            "code": "import math\nN = 480\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "328": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "329": {
            "code": "import math\nN = 1923\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "330": {
            "code": "import math\nN = 1522\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "331": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "332": {
            "code": "import math\nN = -89\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "333": {
            "code": "import math\nN = 1637\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "334": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "335": {
            "code": "import math\nN = 1073\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "336": {
            "code": "import math\nN = 1626\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "337": {
            "code": "import math\nN = 432\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "338": {
            "code": "import math\nN = 1347\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "339": {
            "code": "import math\nN = 1622\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "340": {
            "code": "import math\nN = 1840\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "341": {
            "code": "import math\nN = 512\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "342": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "343": {
            "code": "import math\nN = -58\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "344": {
            "code": "import math\nN = 860\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "345": {
            "code": "import math\nN = 1615\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "346": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "347": {
            "code": "import math\nN = 540\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "348": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "349": {
            "code": "import math\nN = 982\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "350": {
            "code": "import math\nN = 1271\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "351": {
            "code": "import math\nN = 716\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "352": {
            "code": "import math\nN = -62\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "353": {
            "code": "import math\nN = 1921\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "354": {
            "code": "import math\nN = 696\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "355": {
            "code": "import math\nN = 1551\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "356": {
            "code": "import math\nN = 1996\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "357": {
            "code": "import math\nN = 519\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "358": {
            "code": "import math\nN = -64\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "359": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "360": {
            "code": "import math\nN = -56\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "361": {
            "code": "import math\nN = 1930\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "362": {
            "code": "import math\nN = 141\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "363": {
            "code": "import math\nN = 60\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "364": {
            "code": "import math\nN = -68\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "365": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "366": {
            "code": "import math\nN = 370\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "367": {
            "code": "import math\nN = 935\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "368": {
            "code": "import math\nN = 462\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "369": {
            "code": "import math\nN = -67\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "370": {
            "code": "import math\nN = 385\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "371": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "372": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "373": {
            "code": "import math\nN = 1688\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "374": {
            "code": "import math\nN = -98\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "375": {
            "code": "import math\nN = 1956\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "376": {
            "code": "import math\nN = 1345\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "377": {
            "code": "import math\nN = 516\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "378": {
            "code": "import math\nN = -78\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "379": {
            "code": "import math\nN = 162\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "380": {
            "code": "import math\nN = -74\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "381": {
            "code": "import math\nN = -85\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "382": {
            "code": "import math\nN = 1923\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "383": {
            "code": "import math\nN = 567\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "384": {
            "code": "import math\nN = 671\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "385": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "386": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "387": {
            "code": "import math\nN = 846\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "388": {
            "code": "import math\nN = -30\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "389": {
            "code": "import math\nN = 1327\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "390": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "391": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "392": {
            "code": "import math\nN = 522\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "393": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "394": {
            "code": "import math\nN = 859\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "395": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "396": {
            "code": "import math\nN = 196\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "397": {
            "code": "import math\nN = 1999\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "398": {
            "code": "import math\nN = 1901\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "399": {
            "code": "import math\nN = 1688\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "400": {
            "code": "import math\nN = 170\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "401": {
            "code": "import math\nN = 710\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "402": {
            "code": "import math\nN = -53\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "403": {
            "code": "import math\nN = 1\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "404": {
            "code": "import math\nN = 328\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "405": {
            "code": "import math\nN = 1159\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "406": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "407": {
            "code": "import math\nN = -94\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "408": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "409": {
            "code": "import math\nN = 455\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "410": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "411": {
            "code": "import math\nN = 616\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "412": {
            "code": "import math\nN = 365\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "413": {
            "code": "import math\nN = 1400\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "414": {
            "code": "import math\nN = 1670\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "415": {
            "code": "import math\nN = 1180\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "416": {
            "code": "import math\nN = 360\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "417": {
            "code": "import math\nN = 359\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "418": {
            "code": "import math\nN = 1764\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "419": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "420": {
            "code": "import math\nN = 384\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "421": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "422": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "423": {
            "code": "import math\nN = 1929\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "424": {
            "code": "import math\nN = 1384\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "425": {
            "code": "import math\nN = 308\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "426": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "427": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "428": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "429": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "430": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "431": {
            "code": "import math\nN = 799\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "432": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "433": {
            "code": "import math\nN = 1709\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "434": {
            "code": "import math\nN = 1439\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "435": {
            "code": "import math\nN = 405\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "436": {
            "code": "import math\nN = 1190\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "437": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "438": {
            "code": "import math\nN = -55\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "439": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "440": {
            "code": "import math\nN = 1359\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "441": {
            "code": "import math\nN = -36\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "442": {
            "code": "import math\nN = 1832\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "443": {
            "code": "import math\nN = 1981\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "444": {
            "code": "import math\nN = 1687\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "445": {
            "code": "import math\nN = 151\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "446": {
            "code": "import math\nN = 1964\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "447": {
            "code": "import math\nN = -38\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "448": {
            "code": "import math\nN = 1501\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "449": {
            "code": "import math\nN = 1997\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "450": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "451": {
            "code": "import math\nN = 1560\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "452": {
            "code": "import math\nN = 1410\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "453": {
            "code": "import math\nN = 278\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "454": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "455": {
            "code": "import math\nN = 1305\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "456": {
            "code": "import math\nN = -65\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "457": {
            "code": "import math\nN = 1520\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "458": {
            "code": "import math\nN = 359\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "459": {
            "code": "import math\nN = 256\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "460": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "461": {
            "code": "import math\nN = -72\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "462": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "463": {
            "code": "import math\nN = 585\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "464": {
            "code": "import math\nN = -87\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "465": {
            "code": "import math\nN = 1477\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "466": {
            "code": "import math\nN = 1546\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "467": {
            "code": "import math\nN = -99\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "468": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "469": {
            "code": "import math\nN = 1086\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "470": {
            "code": "import math\nN = 488\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "471": {
            "code": "import math\nN = 401\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "472": {
            "code": "import math\nN = 1234\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "473": {
            "code": "import math\nN = 575\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "474": {
            "code": "import math\nN = 26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "475": {
            "code": "import math\nN = 1919\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "476": {
            "code": "import math\nN = 1436\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "477": {
            "code": "import math\nN = 772\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "478": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "479": {
            "code": "import math\nN = 1334\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "480": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "481": {
            "code": "import math\nN = -74\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "482": {
            "code": "import math\nN = 1938\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "483": {
            "code": "import math\nN = 603\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "484": {
            "code": "import math\nN = -67\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "485": {
            "code": "import math\nN = 861\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "486": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "487": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "488": {
            "code": "import math\nN = 1339\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "489": {
            "code": "import math\nN = 10\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "490": {
            "code": "import math\nN = -54\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "491": {
            "code": "import math\nN = -59\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "492": {
            "code": "import math\nN = 1450\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "493": {
            "code": "import math\nN = 1887\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "494": {
            "code": "import math\nN = 1241\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "495": {
            "code": "import math\nN = 1412\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "496": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "497": {
            "code": "import math\nN = 652\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "498": {
            "code": "import math\nN = 483\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "499": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "500": {
            "code": "import math\nN = 819\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "501": {
            "code": "import math\nN = 1631\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "502": {
            "code": "import math\nN = 395\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "503": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "504": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "505": {
            "code": "import math\nN = -68\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "506": {
            "code": "import math\nN = 786\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "507": {
            "code": "import math\nN = 625\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "508": {
            "code": "import math\nN = 651\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "509": {
            "code": "import math\nN = 1245\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "510": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "511": {
            "code": "import math\nN = 1035\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "512": {
            "code": "import math\nN = 573\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "513": {
            "code": "import math\nN = 78\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "514": {
            "code": "import math\nN = 905\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "515": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "516": {
            "code": "import math\nN = 1599\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "517": {
            "code": "import math\nN = 931\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "518": {
            "code": "import math\nN = 1504\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "519": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "520": {
            "code": "import math\nN = 164\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "521": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "522": {
            "code": "import math\nN = 166\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "523": {
            "code": "import math\nN = 47\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "524": {
            "code": "import math\nN = 292\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "525": {
            "code": "import math\nN = 614\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "526": {
            "code": "import math\nN = -99\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "527": {
            "code": "import math\nN = 1611\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "528": {
            "code": "import math\nN = 1778\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "529": {
            "code": "import math\nN = -88\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "530": {
            "code": "import math\nN = 1746\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "531": {
            "code": "import math\nN = 1946\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "532": {
            "code": "import math\nN = -30\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "533": {
            "code": "import math\nN = -58\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "534": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "535": {
            "code": "import math\nN = -89\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "536": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "537": {
            "code": "import math\nN = -56\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "538": {
            "code": "import math\nN = 392\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "539": {
            "code": "import math\nN = 1711\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "540": {
            "code": "import math\nN = 1461\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "541": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "542": {
            "code": "import math\nN = 1337\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "543": {
            "code": "import math\nN = 885\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "544": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "545": {
            "code": "import math\nN = 1193\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "546": {
            "code": "import math\nN = 1964\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "547": {
            "code": "import math\nN = 1296\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "548": {
            "code": "import math\nN = 625\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "549": {
            "code": "import math\nN = 1832\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "550": {
            "code": "import math\nN = 22\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "551": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "552": {
            "code": "import math\nN = -67\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "553": {
            "code": "import math\nN = 1881\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "554": {
            "code": "import math\nN = 1309\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "555": {
            "code": "import math\nN = 823\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "556": {
            "code": "import math\nN = 1182\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "557": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "558": {
            "code": "import math\nN = -55\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "559": {
            "code": "import math\nN = -68\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "560": {
            "code": "import math\nN = 916\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "561": {
            "code": "import math\nN = 1841\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "562": {
            "code": "import math\nN = 1568\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "563": {
            "code": "import math\nN = 684\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "564": {
            "code": "import math\nN = 566\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "565": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "566": {
            "code": "import math\nN = 1737\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "567": {
            "code": "import math\nN = -98\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "568": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "569": {
            "code": "import math\nN = 44\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "570": {
            "code": "import math\nN = 966\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "571": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "572": {
            "code": "import math\nN = 14\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "573": {
            "code": "import math\nN = 1980\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "574": {
            "code": "import math\nN = 593\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "575": {
            "code": "import math\nN = 1648\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "576": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "577": {
            "code": "import math\nN = -58\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "578": {
            "code": "import math\nN = 399\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "579": {
            "code": "import math\nN = 516\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "580": {
            "code": "import math\nN = 619\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "581": {
            "code": "import math\nN = -98\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "582": {
            "code": "import math\nN = 130\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "583": {
            "code": "import math\nN = 415\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "584": {
            "code": "import math\nN = 1723\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "585": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "586": {
            "code": "import math\nN = 925\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "587": {
            "code": "import math\nN = 1677\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "588": {
            "code": "import math\nN = 395\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "589": {
            "code": "import math\nN = 1921\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "590": {
            "code": "import math\nN = 1707\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "591": {
            "code": "import math\nN = 373\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "592": {
            "code": "import math\nN = 1946\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "593": {
            "code": "import math\nN = 1758\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "594": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "595": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "596": {
            "code": "import math\nN = -98\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "597": {
            "code": "import math\nN = 1636\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "598": {
            "code": "import math\nN = 1317\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "599": {
            "code": "import math\nN = 590\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "600": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "601": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "602": {
            "code": "import math\nN = 1140\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "603": {
            "code": "import math\nN = -46\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "604": {
            "code": "import math\nN = 1473\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "605": {
            "code": "import math\nN = 144\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "606": {
            "code": "import math\nN = -15\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "607": {
            "code": "import math\nN = 408\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "608": {
            "code": "import math\nN = 545\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "609": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "610": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "611": {
            "code": "import math\nN = 1423\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "612": {
            "code": "import math\nN = 1676\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "613": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "614": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "615": {
            "code": "import math\nN = 349\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "616": {
            "code": "import math\nN = 394\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "617": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "618": {
            "code": "import math\nN = 274\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "619": {
            "code": "import math\nN = 557\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "620": {
            "code": "import math\nN = -74\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "621": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "622": {
            "code": "import math\nN = 423\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "623": {
            "code": "import math\nN = 1995\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "624": {
            "code": "import math\nN = 1072\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "625": {
            "code": "import math\nN = 396\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "626": {
            "code": "import math\nN = 1989\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "627": {
            "code": "import math\nN = 826\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "628": {
            "code": "import math\nN = -41\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "629": {
            "code": "import math\nN = 189\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "630": {
            "code": "import math\nN = 943\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "631": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "632": {
            "code": "import math\nN = 1391\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "633": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "634": {
            "code": "import math\nN = 1841\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "635": {
            "code": "import math\nN = 1437\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "636": {
            "code": "import math\nN = 467\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "637": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "638": {
            "code": "import math\nN = 1191\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "639": {
            "code": "import math\nN = 157\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "640": {
            "code": "import math\nN = 1017\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "641": {
            "code": "import math\nN = -41\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "642": {
            "code": "import math\nN = 1689\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "643": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "644": {
            "code": "import math\nN = 400\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "645": {
            "code": "import math\nN = 1746\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "646": {
            "code": "import math\nN = 323\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "647": {
            "code": "import math\nN = 1459\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "648": {
            "code": "import math\nN = -42\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "649": {
            "code": "import math\nN = 83\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "650": {
            "code": "import math\nN = 594\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "651": {
            "code": "import math\nN = 1954\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "652": {
            "code": "import math\nN = -59\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "653": {
            "code": "import math\nN = 1297\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "654": {
            "code": "import math\nN = 1375\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "655": {
            "code": "import math\nN = 662\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "656": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "657": {
            "code": "import math\nN = -19\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "658": {
            "code": "import math\nN = 1205\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "659": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "660": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "661": {
            "code": "import math\nN = 1513\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "662": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "663": {
            "code": "import math\nN = 478\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "664": {
            "code": "import math\nN = 157\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "665": {
            "code": "import math\nN = 251\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "666": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "667": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "668": {
            "code": "import math\nN = -98\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "669": {
            "code": "import math\nN = 1951\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "670": {
            "code": "import math\nN = 1846\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "671": {
            "code": "import math\nN = 412\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "672": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "673": {
            "code": "import math\nN = -58\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "674": {
            "code": "import math\nN = 1312\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "675": {
            "code": "import math\nN = 1487\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "676": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "677": {
            "code": "import math\nN = 1125\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "678": {
            "code": "import math\nN = 991\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "679": {
            "code": "import math\nN = 41\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "680": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "681": {
            "code": "import math\nN = 1513\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "682": {
            "code": "import math\nN = 388\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "683": {
            "code": "import math\nN = -80\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "684": {
            "code": "import math\nN = 1135\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "685": {
            "code": "import math\nN = -97\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "686": {
            "code": "import math\nN = 1186\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "687": {
            "code": "import math\nN = 1923\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "688": {
            "code": "import math\nN = 1993\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "689": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "690": {
            "code": "import math\nN = 450\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "691": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "692": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "693": {
            "code": "import math\nN = 955\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "694": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "695": {
            "code": "import math\nN = 1578\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "696": {
            "code": "import math\nN = 497\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "697": {
            "code": "import math\nN = 1519\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "698": {
            "code": "import math\nN = 678\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "699": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "700": {
            "code": "import math\nN = 406\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "701": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "702": {
            "code": "import math\nN = 1935\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "703": {
            "code": "import math\nN = 104\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "704": {
            "code": "import math\nN = -93\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "705": {
            "code": "import math\nN = 1042\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "706": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "707": {
            "code": "import math\nN = 818\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "708": {
            "code": "import math\nN = 1679\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "709": {
            "code": "import math\nN = -30\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "710": {
            "code": "import math\nN = 370\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "711": {
            "code": "import math\nN = 1791\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "712": {
            "code": "import math\nN = 1827\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "713": {
            "code": "import math\nN = 480\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "714": {
            "code": "import math\nN = 5\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "715": {
            "code": "import math\nN = 490\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "716": {
            "code": "import math\nN = 1837\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "717": {
            "code": "import math\nN = 866\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "718": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "719": {
            "code": "import math\nN = 1637\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "720": {
            "code": "import math\nN = 1633\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "721": {
            "code": "import math\nN = 767\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "722": {
            "code": "import math\nN = 851\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "723": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "724": {
            "code": "import math\nN = 464\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "725": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "726": {
            "code": "import math\nN = -58\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "727": {
            "code": "import math\nN = 622\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "728": {
            "code": "import math\nN = 937\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "729": {
            "code": "import math\nN = 408\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "730": {
            "code": "import math\nN = 148\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "731": {
            "code": "import math\nN = 1665\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "732": {
            "code": "import math\nN = 734\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "733": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "734": {
            "code": "import math\nN = 1425\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "735": {
            "code": "import math\nN = 184\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "736": {
            "code": "import math\nN = 1056\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "737": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "738": {
            "code": "import math\nN = 152\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "739": {
            "code": "import math\nN = 1779\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "740": {
            "code": "import math\nN = 814\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "741": {
            "code": "import math\nN = 761\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "742": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "743": {
            "code": "import math\nN = 245\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "744": {
            "code": "import math\nN = 1875\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "745": {
            "code": "import math\nN = 487\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "746": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "747": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "748": {
            "code": "import math\nN = 1974\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "749": {
            "code": "import math\nN = 1640\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "750": {
            "code": "import math\nN = 1735\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "751": {
            "code": "import math\nN = 1746\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "752": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "753": {
            "code": "import math\nN = 838\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "754": {
            "code": "import math\nN = 575\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "755": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "756": {
            "code": "import math\nN = 113\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "757": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "758": {
            "code": "import math\nN = 157\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "759": {
            "code": "import math\nN = 1080\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "760": {
            "code": "import math\nN = 399\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "761": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "762": {
            "code": "import math\nN = 5\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "763": {
            "code": "import math\nN = 655\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "764": {
            "code": "import math\nN = 1836\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "765": {
            "code": "import math\nN = 276\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "766": {
            "code": "import math\nN = -52\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "767": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "768": {
            "code": "import math\nN = 1675\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "769": {
            "code": "import math\nN = 1578\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "770": {
            "code": "import math\nN = 412\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "771": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "772": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "773": {
            "code": "import math\nN = 1540\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "774": {
            "code": "import math\nN = 2\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0,
                1
            ]
        },
        "775": {
            "code": "import math\nN = 787\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "776": {
            "code": "import math\nN = 1637\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "777": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "778": {
            "code": "import math\nN = -54\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "779": {
            "code": "import math\nN = 951\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "780": {
            "code": "import math\nN = 1569\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "781": {
            "code": "import math\nN = -42\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "782": {
            "code": "import math\nN = 1359\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "783": {
            "code": "import math\nN = -100\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "784": {
            "code": "import math\nN = 271\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "785": {
            "code": "import math\nN = 407\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "786": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "787": {
            "code": "import math\nN = 1514\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "788": {
            "code": "import math\nN = 119\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "789": {
            "code": "import math\nN = 1922\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "790": {
            "code": "import math\nN = 672\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "791": {
            "code": "import math\nN = 396\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "792": {
            "code": "import math\nN = 1437\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "793": {
            "code": "import math\nN = 300\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "794": {
            "code": "import math\nN = 24\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "795": {
            "code": "import math\nN = 774\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "796": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "797": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "798": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "799": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "800": {
            "code": "import math\nN = 422\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "801": {
            "code": "import math\nN = 798\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "802": {
            "code": "import math\nN = 691\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "803": {
            "code": "import math\nN = 593\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "804": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "805": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "806": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "807": {
            "code": "import math\nN = 1771\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "808": {
            "code": "import math\nN = 516\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "809": {
            "code": "import math\nN = -26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "810": {
            "code": "import math\nN = -54\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "811": {
            "code": "import math\nN = 64\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "812": {
            "code": "import math\nN = 660\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "813": {
            "code": "import math\nN = 1822\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "814": {
            "code": "import math\nN = 606\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "815": {
            "code": "import math\nN = 29\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "816": {
            "code": "import math\nN = 1228\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "817": {
            "code": "import math\nN = 1120\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "818": {
            "code": "import math\nN = 623\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "819": {
            "code": "import math\nN = 1299\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "820": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "821": {
            "code": "import math\nN = 438\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "822": {
            "code": "import math\nN = -36\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "823": {
            "code": "import math\nN = 16\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "824": {
            "code": "import math\nN = 395\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "825": {
            "code": "import math\nN = 1287\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "826": {
            "code": "import math\nN = -60\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "827": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "828": {
            "code": "import math\nN = 703\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "829": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "830": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "831": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "832": {
            "code": "import math\nN = 593\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "833": {
            "code": "import math\nN = 1788\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "834": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "835": {
            "code": "import math\nN = 132\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "836": {
            "code": "import math\nN = 1320\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "837": {
            "code": "import math\nN = 12\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "838": {
            "code": "import math\nN = 24\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "839": {
            "code": "import math\nN = -64\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "840": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "841": {
            "code": "import math\nN = 506\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "842": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "843": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "844": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "845": {
            "code": "import math\nN = 1186\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "846": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "847": {
            "code": "import math\nN = 497\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "848": {
            "code": "import math\nN = -67\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "849": {
            "code": "import math\nN = -66\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "850": {
            "code": "import math\nN = 826\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "851": {
            "code": "import math\nN = 769\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "852": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "853": {
            "code": "import math\nN = 849\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "854": {
            "code": "import math\nN = -98\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "855": {
            "code": "import math\nN = 611\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "856": {
            "code": "import math\nN = 645\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "857": {
            "code": "import math\nN = 1167\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "858": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "859": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "860": {
            "code": "import math\nN = 932\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "861": {
            "code": "import math\nN = 1689\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "862": {
            "code": "import math\nN = 805\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "863": {
            "code": "import math\nN = 134\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "864": {
            "code": "import math\nN = 166\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "865": {
            "code": "import math\nN = 1248\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "866": {
            "code": "import math\nN = 0\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "867": {
            "code": "import math\nN = -93\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "868": {
            "code": "import math\nN = 1420\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "869": {
            "code": "import math\nN = 1667\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "870": {
            "code": "import math\nN = 1470\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "871": {
            "code": "import math\nN = 412\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "872": {
            "code": "import math\nN = -92\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "873": {
            "code": "import math\nN = 1237\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "874": {
            "code": "import math\nN = 1075\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "875": {
            "code": "import math\nN = -74\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "876": {
            "code": "import math\nN = -58\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "877": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "878": {
            "code": "import math\nN = 21\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "879": {
            "code": "import math\nN = 101\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "880": {
            "code": "import math\nN = 1234\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "881": {
            "code": "import math\nN = 1746\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "882": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "883": {
            "code": "import math\nN = 1271\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "884": {
            "code": "import math\nN = 243\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "885": {
            "code": "import math\nN = 469\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "886": {
            "code": "import math\nN = 1879\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "887": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "888": {
            "code": "import math\nN = 908\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "889": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "890": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "891": {
            "code": "import math\nN = 497\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "892": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "893": {
            "code": "import math\nN = 1713\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "894": {
            "code": "import math\nN = 457\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "895": {
            "code": "import math\nN = 437\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "896": {
            "code": "import math\nN = 929\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "897": {
            "code": "import math\nN = 505\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "898": {
            "code": "import math\nN = -10\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "899": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "900": {
            "code": "import math\nN = -6\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "901": {
            "code": "import math\nN = 908\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "902": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "903": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "904": {
            "code": "import math\nN = 1530\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "905": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "906": {
            "code": "import math\nN = 1400\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "907": {
            "code": "import math\nN = 1585\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "908": {
            "code": "import math\nN = 185\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "909": {
            "code": "import math\nN = 628\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "910": {
            "code": "import math\nN = 263\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "911": {
            "code": "import math\nN = 1883\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "912": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "913": {
            "code": "import math\nN = 989\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "914": {
            "code": "import math\nN = 1240\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "915": {
            "code": "import math\nN = -36\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "916": {
            "code": "import math\nN = 89\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "917": {
            "code": "import math\nN = 1785\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "918": {
            "code": "import math\nN = 802\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "919": {
            "code": "import math\nN = 57\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "920": {
            "code": "import math\nN = 215\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "921": {
            "code": "import math\nN = 703\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "922": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "923": {
            "code": "import math\nN = 339\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "924": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "925": {
            "code": "import math\nN = 361\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "926": {
            "code": "import math\nN = 1933\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "927": {
            "code": "import math\nN = -86\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "928": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "929": {
            "code": "import math\nN = 107\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "930": {
            "code": "import math\nN = 1017\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "931": {
            "code": "import math\nN = 623\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "932": {
            "code": "import math\nN = 14\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "933": {
            "code": "import math\nN = 1900\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "934": {
            "code": "import math\nN = 1972\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "935": {
            "code": "import math\nN = 479\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "936": {
            "code": "import math\nN = 606\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "937": {
            "code": "import math\nN = 1949\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "938": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "939": {
            "code": "import math\nN = -99\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "940": {
            "code": "import math\nN = -7\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "941": {
            "code": "import math\nN = 1340\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "942": {
            "code": "import math\nN = 140\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "943": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "944": {
            "code": "import math\nN = 26\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "945": {
            "code": "import math\nN = 198\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "946": {
            "code": "import math\nN = -60\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "947": {
            "code": "import math\nN = 1554\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "948": {
            "code": "import math\nN = 1647\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "949": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "950": {
            "code": "import math\nN = 1722\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "951": {
            "code": "import math\nN = 312\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "952": {
            "code": "import math\nN = 420\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "953": {
            "code": "import math\nN = 1755\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "954": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "955": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "956": {
            "code": "import math\nN = 481\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "957": {
            "code": "import math\nN = 16\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "958": {
            "code": "import math\nN = 1800\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "959": {
            "code": "import math\nN = 1379\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "960": {
            "code": "import math\nN = -5\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "961": {
            "code": "import math\nN = 1879\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "962": {
            "code": "import math\nN = 697\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "963": {
            "code": "import math\nN = 466\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "964": {
            "code": "import math\nN = 263\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "965": {
            "code": "import math\nN = 745\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "966": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "967": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "968": {
            "code": "import math\nN = 1982\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "969": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "970": {
            "code": "import math\nN = 217\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "971": {
            "code": "import math\nN = 1809\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "972": {
            "code": "import math\nN = 1319\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "973": {
            "code": "import math\nN = -100\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "974": {
            "code": "import math\nN = 675\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "975": {
            "code": "import math\nN = -61\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "976": {
            "code": "import math\nN = 1558\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "977": {
            "code": "import math\nN = 337\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "978": {
            "code": "import math\nN = 413\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "979": {
            "code": "import math\nN = 710\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "980": {
            "code": "import math\nN = 718\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "981": {
            "code": "import math\nN = 1888\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "982": {
            "code": "import math\nN = 328\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "983": {
            "code": "import math\nN = 157\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "984": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "985": {
            "code": "import math\nN = -54\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "986": {
            "code": "import math\nN = -100\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "987": {
            "code": "import math\nN = 602\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "988": {
            "code": "import math\nN = 623\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "989": {
            "code": "import math\nN = 369\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "990": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "991": {
            "code": "import math\nN = 1850\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "992": {
            "code": "import math\nN = 467\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        },
        "993": {
            "code": "import math\nN = 454\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "994": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "995": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "996": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "997": {
            "code": "import math\nN = -90\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "998": {
            "code": "import math\nN = 28\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        },
        "999": {
            "code": "import math\nN = 99\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
            "execution_array": [
                1,
                1,
                1,
                1,
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1
            ]
        }
    }
}