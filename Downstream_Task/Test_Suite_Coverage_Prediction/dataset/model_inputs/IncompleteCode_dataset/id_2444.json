{
    "0": {
        "id": "0",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 433;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "1": {
        "id": "1",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "2": {
        "id": "2",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 361;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "3": {
        "id": "3",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "4": {
        "id": "4",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1911;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "5": {
        "id": "5",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 57;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "6": {
        "id": "6",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1558;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "7": {
        "id": "7",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "8": {
        "id": "8",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 719;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "9": {
        "id": "9",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "10": {
        "id": "10",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 367;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "11": {
        "id": "11",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 397;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "12": {
        "id": "12",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -36;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "13": {
        "id": "13",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "14": {
        "id": "14",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "15": {
        "id": "15",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "16": {
        "id": "16",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1632;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "17": {
        "id": "17",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "18": {
        "id": "18",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "19": {
        "id": "19",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1477;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "20": {
        "id": "20",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1277;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "21": {
        "id": "21",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -53;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "22": {
        "id": "22",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -72;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "23": {
        "id": "23",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 552;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "24": {
        "id": "24",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "25": {
        "id": "25",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1798;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "26": {
        "id": "26",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 552;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "27": {
        "id": "27",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1981;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "28": {
        "id": "28",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 607;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "29": {
        "id": "29",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 407;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "30": {
        "id": "30",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -55;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "31": {
        "id": "31",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1751;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "32": {
        "id": "32",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 400;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "33": {
        "id": "33",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1676;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "34": {
        "id": "34",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 304;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "35": {
        "id": "35",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -26;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "36": {
        "id": "36",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 317;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "37": {
        "id": "37",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -56;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "38": {
        "id": "38",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -51;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "39": {
        "id": "39",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "40": {
        "id": "40",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 870;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "41": {
        "id": "41",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1468;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "42": {
        "id": "42",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "43": {
        "id": "43",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1334;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "44": {
        "id": "44",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1899;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "45": {
        "id": "45",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -18;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "46": {
        "id": "46",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "47": {
        "id": "47",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 379;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "48": {
        "id": "48",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 41;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "49": {
        "id": "49",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -29;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "50": {
        "id": "50",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 819;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "51": {
        "id": "51",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1799;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "52": {
        "id": "52",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 297;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "53": {
        "id": "53",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "54": {
        "id": "54",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1251;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "55": {
        "id": "55",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -9;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "56": {
        "id": "56",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -26;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "57": {
        "id": "57",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1698;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "58": {
        "id": "58",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 986;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "59": {
        "id": "59",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -100;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "60": {
        "id": "60",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1649;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "61": {
        "id": "61",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 888;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "62": {
        "id": "62",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 450;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "63": {
        "id": "63",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 461;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "64": {
        "id": "64",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1847;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "65": {
        "id": "65",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 972;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "66": {
        "id": "66",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "67": {
        "id": "67",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "68": {
        "id": "68",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 833;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "69": {
        "id": "69",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 439;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "70": {
        "id": "70",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -35;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "71": {
        "id": "71",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "72": {
        "id": "72",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "73": {
        "id": "73",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1958;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "74": {
        "id": "74",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "75": {
        "id": "75",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -75;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "76": {
        "id": "76",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1900;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "77": {
        "id": "77",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1392;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "78": {
        "id": "78",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1988;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "79": {
        "id": "79",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1819;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "80": {
        "id": "80",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -92;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "81": {
        "id": "81",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 72;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "82": {
        "id": "82",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -57;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "83": {
        "id": "83",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1088;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "84": {
        "id": "84",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -12;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "85": {
        "id": "85",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1976;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "86": {
        "id": "86",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 160;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "87": {
        "id": "87",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "88": {
        "id": "88",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1732;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "89": {
        "id": "89",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "90": {
        "id": "90",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 6;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "91": {
        "id": "91",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -62;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "92": {
        "id": "92",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 481;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "93": {
        "id": "93",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "94": {
        "id": "94",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 0;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "95": {
        "id": "95",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 412;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "96": {
        "id": "96",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "97": {
        "id": "97",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -61;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "98": {
        "id": "98",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "99": {
        "id": "99",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1224;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "100": {
        "id": "100",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1516;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "101": {
        "id": "101",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "102": {
        "id": "102",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1597;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "103": {
        "id": "103",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1626;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "104": {
        "id": "104",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1578;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "105": {
        "id": "105",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "106": {
        "id": "106",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "107": {
        "id": "107",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "108": {
        "id": "108",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "109": {
        "id": "109",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 36;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "110": {
        "id": "110",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1393;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "111": {
        "id": "111",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 918;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "112": {
        "id": "112",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 455;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "113": {
        "id": "113",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 485;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "114": {
        "id": "114",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 157;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "115": {
        "id": "115",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 870;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "116": {
        "id": "116",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1251;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "117": {
        "id": "117",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -76;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "118": {
        "id": "118",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1834;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "119": {
        "id": "119",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1876;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "120": {
        "id": "120",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 193;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "121": {
        "id": "121",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1921;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "122": {
        "id": "122",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 774;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "123": {
        "id": "123",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -62;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "124": {
        "id": "124",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -36;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "125": {
        "id": "125",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "126": {
        "id": "126",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "127": {
        "id": "127",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "128": {
        "id": "128",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 362;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "129": {
        "id": "129",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 185;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "130": {
        "id": "130",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "131": {
        "id": "131",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "132": {
        "id": "132",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1753;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "133": {
        "id": "133",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1791;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "134": {
        "id": "134",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -61;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "135": {
        "id": "135",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 452;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "136": {
        "id": "136",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "137": {
        "id": "137",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -53;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "138": {
        "id": "138",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "139": {
        "id": "139",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 62;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "140": {
        "id": "140",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -39;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "141": {
        "id": "141",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "142": {
        "id": "142",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "143": {
        "id": "143",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 392;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "144": {
        "id": "144",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "145": {
        "id": "145",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 549;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "146": {
        "id": "146",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "147": {
        "id": "147",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1991;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "148": {
        "id": "148",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1413;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "149": {
        "id": "149",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1982;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "150": {
        "id": "150",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 660;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "151": {
        "id": "151",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 210;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "152": {
        "id": "152",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 133;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "153": {
        "id": "153",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 404;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "154": {
        "id": "154",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "155": {
        "id": "155",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "156": {
        "id": "156",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 37;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "157": {
        "id": "157",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "158": {
        "id": "158",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 38;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "159": {
        "id": "159",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "160": {
        "id": "160",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 483;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "161": {
        "id": "161",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1694;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "162": {
        "id": "162",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -10;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "163": {
        "id": "163",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "164": {
        "id": "164",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "165": {
        "id": "165",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 236;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "166": {
        "id": "166",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "167": {
        "id": "167",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "168": {
        "id": "168",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "169": {
        "id": "169",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "170": {
        "id": "170",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1750;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "171": {
        "id": "171",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1283;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "172": {
        "id": "172",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 433;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "173": {
        "id": "173",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "174": {
        "id": "174",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "175": {
        "id": "175",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1133;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "176": {
        "id": "176",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "177": {
        "id": "177",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -59;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "178": {
        "id": "178",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1793;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "179": {
        "id": "179",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "180": {
        "id": "180",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "181": {
        "id": "181",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "182": {
        "id": "182",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "183": {
        "id": "183",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1740;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "184": {
        "id": "184",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1426;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "185": {
        "id": "185",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -22;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "186": {
        "id": "186",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "187": {
        "id": "187",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1173;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "188": {
        "id": "188",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 907;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "189": {
        "id": "189",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "190": {
        "id": "190",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 35;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "191": {
        "id": "191",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 591;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "192": {
        "id": "192",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 916;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "193": {
        "id": "193",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "194": {
        "id": "194",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1882;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "195": {
        "id": "195",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -54;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "196": {
        "id": "196",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "197": {
        "id": "197",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "198": {
        "id": "198",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "199": {
        "id": "199",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1737;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "200": {
        "id": "200",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1314;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "201": {
        "id": "201",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 22;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "202": {
        "id": "202",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 767;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "203": {
        "id": "203",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 264;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "204": {
        "id": "204",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 406;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "205": {
        "id": "205",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1578;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "206": {
        "id": "206",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1914;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "207": {
        "id": "207",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 196;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "208": {
        "id": "208",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 510;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "209": {
        "id": "209",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 193;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "210": {
        "id": "210",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 433;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "211": {
        "id": "211",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1098;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "212": {
        "id": "212",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1220;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "213": {
        "id": "213",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -36;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "214": {
        "id": "214",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "215": {
        "id": "215",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "216": {
        "id": "216",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1006;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "217": {
        "id": "217",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 971;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "218": {
        "id": "218",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 367;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "219": {
        "id": "219",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 394;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "220": {
        "id": "220",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 955;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "221": {
        "id": "221",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1920;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "222": {
        "id": "222",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 613;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "223": {
        "id": "223",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 537;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "224": {
        "id": "224",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "225": {
        "id": "225",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "226": {
        "id": "226",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -87;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "227": {
        "id": "227",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1887;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "228": {
        "id": "228",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 429;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "229": {
        "id": "229",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 23;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "230": {
        "id": "230",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 361;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "231": {
        "id": "231",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1422;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "232": {
        "id": "232",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "233": {
        "id": "233",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 418;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "234": {
        "id": "234",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 370;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "235": {
        "id": "235",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 495;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "236": {
        "id": "236",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "237": {
        "id": "237",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "238": {
        "id": "238",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "239": {
        "id": "239",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 153;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "240": {
        "id": "240",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 245;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "241": {
        "id": "241",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "242": {
        "id": "242",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1505;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "243": {
        "id": "243",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1133;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "244": {
        "id": "244",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1641;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "245": {
        "id": "245",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1363;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "246": {
        "id": "246",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -64;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "247": {
        "id": "247",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1473;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "248": {
        "id": "248",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -4;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "249": {
        "id": "249",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "250": {
        "id": "250",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1224;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "251": {
        "id": "251",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -100;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "252": {
        "id": "252",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1931;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "253": {
        "id": "253",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -57;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "254": {
        "id": "254",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1375;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "255": {
        "id": "255",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 842;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "256": {
        "id": "256",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 593;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "257": {
        "id": "257",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 22;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "258": {
        "id": "258",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 601;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "259": {
        "id": "259",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 481;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "260": {
        "id": "260",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1282;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "261": {
        "id": "261",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 210;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "262": {
        "id": "262",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 493;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "263": {
        "id": "263",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1336;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "264": {
        "id": "264",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "265": {
        "id": "265",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 925;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "266": {
        "id": "266",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1641;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "267": {
        "id": "267",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "268": {
        "id": "268",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 491;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "269": {
        "id": "269",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1848;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "270": {
        "id": "270",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 377;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "271": {
        "id": "271",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1890;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "272": {
        "id": "272",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 598;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "273": {
        "id": "273",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1576;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "274": {
        "id": "274",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "275": {
        "id": "275",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1226;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "276": {
        "id": "276",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 313;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "277": {
        "id": "277",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "278": {
        "id": "278",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1994;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "279": {
        "id": "279",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "280": {
        "id": "280",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1659;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "281": {
        "id": "281",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1509;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "282": {
        "id": "282",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -80;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "283": {
        "id": "283",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "284": {
        "id": "284",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 170;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "285": {
        "id": "285",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 391;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "286": {
        "id": "286",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 494;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "287": {
        "id": "287",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "288": {
        "id": "288",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 870;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "289": {
        "id": "289",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1959;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "290": {
        "id": "290",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 610;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "291": {
        "id": "291",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1864;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "292": {
        "id": "292",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1729;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "293": {
        "id": "293",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "294": {
        "id": "294",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 898;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "295": {
        "id": "295",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1611;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "296": {
        "id": "296",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 924;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "297": {
        "id": "297",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1033;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "298": {
        "id": "298",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "299": {
        "id": "299",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1605;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "300": {
        "id": "300",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 831;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "301": {
        "id": "301",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -50;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "302": {
        "id": "302",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 237;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "303": {
        "id": "303",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 374;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "304": {
        "id": "304",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "305": {
        "id": "305",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -93;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "306": {
        "id": "306",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "307": {
        "id": "307",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -46;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "308": {
        "id": "308",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1086;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "309": {
        "id": "309",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 60;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "310": {
        "id": "310",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "311": {
        "id": "311",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "312": {
        "id": "312",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 141;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "313": {
        "id": "313",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1829;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "314": {
        "id": "314",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1908;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "315": {
        "id": "315",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 431;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "316": {
        "id": "316",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 101;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "317": {
        "id": "317",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "318": {
        "id": "318",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1867;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "319": {
        "id": "319",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1521;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "320": {
        "id": "320",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -18;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "321": {
        "id": "321",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 331;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "322": {
        "id": "322",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1811;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "323": {
        "id": "323",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -50;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "324": {
        "id": "324",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 368;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "325": {
        "id": "325",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 757;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "326": {
        "id": "326",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 434;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "327": {
        "id": "327",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1093;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "328": {
        "id": "328",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 414;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "329": {
        "id": "329",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1322;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "330": {
        "id": "330",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1733;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "331": {
        "id": "331",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "332": {
        "id": "332",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1209;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "333": {
        "id": "333",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "334": {
        "id": "334",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "335": {
        "id": "335",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 396;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "336": {
        "id": "336",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 450;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "337": {
        "id": "337",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1157;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "338": {
        "id": "338",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 499;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "339": {
        "id": "339",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1688;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "340": {
        "id": "340",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1096;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "341": {
        "id": "341",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1634;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "342": {
        "id": "342",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1313;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "343": {
        "id": "343",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 972;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "344": {
        "id": "344",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "345": {
        "id": "345",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "346": {
        "id": "346",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1074;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "347": {
        "id": "347",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "348": {
        "id": "348",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 187;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "349": {
        "id": "349",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "350": {
        "id": "350",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1150;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "351": {
        "id": "351",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "352": {
        "id": "352",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1780;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "353": {
        "id": "353",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -95;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "354": {
        "id": "354",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1436;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "355": {
        "id": "355",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "356": {
        "id": "356",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2000;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "357": {
        "id": "357",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -98;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "358": {
        "id": "358",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1971;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "359": {
        "id": "359",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 236;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "360": {
        "id": "360",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "361": {
        "id": "361",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "362": {
        "id": "362",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "363": {
        "id": "363",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "364": {
        "id": "364",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 914;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "365": {
        "id": "365",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 157;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "366": {
        "id": "366",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 134;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "367": {
        "id": "367",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -68;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "368": {
        "id": "368",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1230;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "369": {
        "id": "369",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 536;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "370": {
        "id": "370",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 435;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "371": {
        "id": "371",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1185;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "372": {
        "id": "372",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "373": {
        "id": "373",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1038;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "374": {
        "id": "374",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1494;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "375": {
        "id": "375",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 166;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "376": {
        "id": "376",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1091;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "377": {
        "id": "377",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1771;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "378": {
        "id": "378",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 422;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "379": {
        "id": "379",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 38;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "380": {
        "id": "380",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 145;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "381": {
        "id": "381",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -32;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "382": {
        "id": "382",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1424;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "383": {
        "id": "383",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "384": {
        "id": "384",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1069;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "385": {
        "id": "385",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1996;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "386": {
        "id": "386",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "387": {
        "id": "387",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1370;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "388": {
        "id": "388",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "389": {
        "id": "389",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "390": {
        "id": "390",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 225;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "391": {
        "id": "391",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -29;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "392": {
        "id": "392",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 157;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "393": {
        "id": "393",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "394": {
        "id": "394",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "395": {
        "id": "395",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "396": {
        "id": "396",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 367;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "397": {
        "id": "397",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1983;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "398": {
        "id": "398",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1537;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "399": {
        "id": "399",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 152;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "400": {
        "id": "400",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1078;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "401": {
        "id": "401",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 399;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "402": {
        "id": "402",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "403": {
        "id": "403",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "404": {
        "id": "404",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -55;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "405": {
        "id": "405",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "406": {
        "id": "406",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 187;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "407": {
        "id": "407",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 772;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "408": {
        "id": "408",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "409": {
        "id": "409",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 478;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "410": {
        "id": "410",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1345;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "411": {
        "id": "411",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1835;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "412": {
        "id": "412",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "413": {
        "id": "413",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1004;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "414": {
        "id": "414",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 47;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "415": {
        "id": "415",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "416": {
        "id": "416",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "417": {
        "id": "417",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 105;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "418": {
        "id": "418",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "419": {
        "id": "419",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1830;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "420": {
        "id": "420",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 992;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "421": {
        "id": "421",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -44;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "422": {
        "id": "422",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "423": {
        "id": "423",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 748;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "424": {
        "id": "424",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "425": {
        "id": "425",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1991;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "426": {
        "id": "426",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -60;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "427": {
        "id": "427",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "428": {
        "id": "428",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "429": {
        "id": "429",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -31;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "430": {
        "id": "430",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "431": {
        "id": "431",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -79;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "432": {
        "id": "432",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -32;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "433": {
        "id": "433",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 279;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "434": {
        "id": "434",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "435": {
        "id": "435",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1391;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "436": {
        "id": "436",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "437": {
        "id": "437",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 273;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "438": {
        "id": "438",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1960;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "439": {
        "id": "439",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 171;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "440": {
        "id": "440",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -76;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "441": {
        "id": "441",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "442": {
        "id": "442",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "443": {
        "id": "443",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "444": {
        "id": "444",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 520;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "445": {
        "id": "445",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 710;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "446": {
        "id": "446",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1054;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "447": {
        "id": "447",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "448": {
        "id": "448",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -26;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "449": {
        "id": "449",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -26;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "450": {
        "id": "450",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "451": {
        "id": "451",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1665;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "452": {
        "id": "452",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "453": {
        "id": "453",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "454": {
        "id": "454",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1850;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "455": {
        "id": "455",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1889;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "456": {
        "id": "456",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 455;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "457": {
        "id": "457",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 224;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "458": {
        "id": "458",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1043;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "459": {
        "id": "459",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1333;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "460": {
        "id": "460",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2000;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "461": {
        "id": "461",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "462": {
        "id": "462",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "463": {
        "id": "463",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "464": {
        "id": "464",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "465": {
        "id": "465",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -66;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "466": {
        "id": "466",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1963;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "467": {
        "id": "467",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 500;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "468": {
        "id": "468",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1967;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "469": {
        "id": "469",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1850;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "470": {
        "id": "470",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1355;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "471": {
        "id": "471",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 166;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "472": {
        "id": "472",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "473": {
        "id": "473",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "474": {
        "id": "474",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -93;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "475": {
        "id": "475",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 228;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "476": {
        "id": "476",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 485;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "477": {
        "id": "477",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1058;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "478": {
        "id": "478",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "479": {
        "id": "479",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "480": {
        "id": "480",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1203;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "481": {
        "id": "481",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -62;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "482": {
        "id": "482",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "483": {
        "id": "483",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "484": {
        "id": "484",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "485": {
        "id": "485",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 715;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "486": {
        "id": "486",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1169;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "487": {
        "id": "487",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1681;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "488": {
        "id": "488",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 692;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "489": {
        "id": "489",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "490": {
        "id": "490",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 263;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "491": {
        "id": "491",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -55;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "492": {
        "id": "492",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 659;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "493": {
        "id": "493",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 395;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "494": {
        "id": "494",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1188;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "495": {
        "id": "495",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "496": {
        "id": "496",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1479;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "497": {
        "id": "497",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -39;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "498": {
        "id": "498",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "499": {
        "id": "499",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1981;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "500": {
        "id": "500",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 414;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "501": {
        "id": "501",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 50;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "502": {
        "id": "502",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1903;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "503": {
        "id": "503",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 396;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "504": {
        "id": "504",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1380;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "505": {
        "id": "505",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 769;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "506": {
        "id": "506",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 787;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "507": {
        "id": "507",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "508": {
        "id": "508",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 606;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "509": {
        "id": "509",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "510": {
        "id": "510",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 29;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "511": {
        "id": "511",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 151;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "512": {
        "id": "512",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 843;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "513": {
        "id": "513",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1259;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "514": {
        "id": "514",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1901;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "515": {
        "id": "515",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1700;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "516": {
        "id": "516",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -98;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "517": {
        "id": "517",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 673;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "518": {
        "id": "518",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 417;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "519": {
        "id": "519",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -92;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "520": {
        "id": "520",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 150;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "521": {
        "id": "521",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1494;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "522": {
        "id": "522",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1502;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "523": {
        "id": "523",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 219;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "524": {
        "id": "524",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "525": {
        "id": "525",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 943;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "526": {
        "id": "526",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1439;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "527": {
        "id": "527",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "528": {
        "id": "528",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1496;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "529": {
        "id": "529",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -82;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "530": {
        "id": "530",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -100;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "531": {
        "id": "531",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -26;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "532": {
        "id": "532",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1795;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "533": {
        "id": "533",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "534": {
        "id": "534",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1917;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "535": {
        "id": "535",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1418;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "536": {
        "id": "536",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1921;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "537": {
        "id": "537",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "538": {
        "id": "538",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1670;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "539": {
        "id": "539",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1452;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "540": {
        "id": "540",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 617;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "541": {
        "id": "541",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 120;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "542": {
        "id": "542",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1437;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "543": {
        "id": "543",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2000;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "544": {
        "id": "544",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 751;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "545": {
        "id": "545",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1779;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "546": {
        "id": "546",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1791;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "547": {
        "id": "547",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 543;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "548": {
        "id": "548",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1390;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "549": {
        "id": "549",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1924;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "550": {
        "id": "550",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -35;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "551": {
        "id": "551",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 248;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "552": {
        "id": "552",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1574;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "553": {
        "id": "553",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 204;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "554": {
        "id": "554",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1851;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "555": {
        "id": "555",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 497;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "556": {
        "id": "556",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1046;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "557": {
        "id": "557",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 141;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "558": {
        "id": "558",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 409;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "559": {
        "id": "559",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1189;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "560": {
        "id": "560",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 899;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "561": {
        "id": "561",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1722;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "562": {
        "id": "562",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1541;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "563": {
        "id": "563",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 477;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "564": {
        "id": "564",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1457;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "565": {
        "id": "565",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -12;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "566": {
        "id": "566",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -50;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "567": {
        "id": "567",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 522;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "568": {
        "id": "568",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 407;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "569": {
        "id": "569",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 664;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "570": {
        "id": "570",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 538;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "571": {
        "id": "571",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1243;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "572": {
        "id": "572",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1576;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "573": {
        "id": "573",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "574": {
        "id": "574",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "575": {
        "id": "575",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 479;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "576": {
        "id": "576",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -34;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "577": {
        "id": "577",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1251;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "578": {
        "id": "578",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 954;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "579": {
        "id": "579",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 375;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "580": {
        "id": "580",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1742;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "581": {
        "id": "581",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -56;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "582": {
        "id": "582",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1235;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "583": {
        "id": "583",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "584": {
        "id": "584",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -92;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "585": {
        "id": "585",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 32;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "586": {
        "id": "586",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 427;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "587": {
        "id": "587",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -37;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "588": {
        "id": "588",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1980;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "589": {
        "id": "589",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "590": {
        "id": "590",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 990;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "591": {
        "id": "591",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "592": {
        "id": "592",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1554;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "593": {
        "id": "593",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 77;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "594": {
        "id": "594",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "595": {
        "id": "595",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1110;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "596": {
        "id": "596",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 894;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "597": {
        "id": "597",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1779;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "598": {
        "id": "598",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1731;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "599": {
        "id": "599",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1913;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "600": {
        "id": "600",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 971;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "601": {
        "id": "601",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 449;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "602": {
        "id": "602",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1880;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "603": {
        "id": "603",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 424;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "604": {
        "id": "604",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "605": {
        "id": "605",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 450;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "606": {
        "id": "606",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 242;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "607": {
        "id": "607",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "608": {
        "id": "608",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 514;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "609": {
        "id": "609",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -42;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "610": {
        "id": "610",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1623;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "611": {
        "id": "611",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1525;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "612": {
        "id": "612",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1422;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "613": {
        "id": "613",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -49;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "614": {
        "id": "614",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -86;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "615": {
        "id": "615",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 401;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "616": {
        "id": "616",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 422;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "617": {
        "id": "617",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1129;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "618": {
        "id": "618",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1968;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "619": {
        "id": "619",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 851;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "620": {
        "id": "620",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "621": {
        "id": "621",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 453;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "622": {
        "id": "622",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "623": {
        "id": "623",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -81;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "624": {
        "id": "624",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1869;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "625": {
        "id": "625",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "626": {
        "id": "626",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "627": {
        "id": "627",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1202;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "628": {
        "id": "628",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1507;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "629": {
        "id": "629",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "630": {
        "id": "630",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -35;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "631": {
        "id": "631",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 95;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "632": {
        "id": "632",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1401;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "633": {
        "id": "633",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1024;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "634": {
        "id": "634",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1736;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "635": {
        "id": "635",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 630;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "636": {
        "id": "636",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -91;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "637": {
        "id": "637",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 405;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "638": {
        "id": "638",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -11;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "639": {
        "id": "639",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1928;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "640": {
        "id": "640",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 145;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "641": {
        "id": "641",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 457;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "642": {
        "id": "642",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 39;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "643": {
        "id": "643",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "644": {
        "id": "644",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1164;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "645": {
        "id": "645",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "646": {
        "id": "646",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1768;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "647": {
        "id": "647",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -100;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "648": {
        "id": "648",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 613;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "649": {
        "id": "649",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1552;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "650": {
        "id": "650",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "651": {
        "id": "651",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1693;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "652": {
        "id": "652",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1746;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "653": {
        "id": "653",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1746;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "654": {
        "id": "654",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -56;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "655": {
        "id": "655",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "656": {
        "id": "656",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -37;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "657": {
        "id": "657",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -26;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "658": {
        "id": "658",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1810;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "659": {
        "id": "659",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 432;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "660": {
        "id": "660",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -42;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "661": {
        "id": "661",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1905;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "662": {
        "id": "662",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -4;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "663": {
        "id": "663",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -23;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "664": {
        "id": "664",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 184;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "665": {
        "id": "665",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "666": {
        "id": "666",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -54;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "667": {
        "id": "667",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 250;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "668": {
        "id": "668",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -59;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "669": {
        "id": "669",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -60;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "670": {
        "id": "670",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "671": {
        "id": "671",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "672": {
        "id": "672",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 394;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "673": {
        "id": "673",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1340;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "674": {
        "id": "674",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "675": {
        "id": "675",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1920;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "676": {
        "id": "676",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "677": {
        "id": "677",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "678": {
        "id": "678",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1919;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "679": {
        "id": "679",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 475;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "680": {
        "id": "680",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "681": {
        "id": "681",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1143;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "682": {
        "id": "682",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1304;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "683": {
        "id": "683",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1877;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "684": {
        "id": "684",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "685": {
        "id": "685",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 473;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "686": {
        "id": "686",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 768;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "687": {
        "id": "687",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1049;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "688": {
        "id": "688",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 225;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "689": {
        "id": "689",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 416;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "690": {
        "id": "690",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1867;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "691": {
        "id": "691",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -92;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "692": {
        "id": "692",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1087;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "693": {
        "id": "693",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 443;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "694": {
        "id": "694",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "695": {
        "id": "695",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1915;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "696": {
        "id": "696",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1980;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "697": {
        "id": "697",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "698": {
        "id": "698",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 359;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "699": {
        "id": "699",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1821;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "700": {
        "id": "700",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1675;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "701": {
        "id": "701",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -59;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "702": {
        "id": "702",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 705;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "703": {
        "id": "703",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1255;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "704": {
        "id": "704",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1745;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "705": {
        "id": "705",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1952;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "706": {
        "id": "706",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "707": {
        "id": "707",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 848;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "708": {
        "id": "708",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1008;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "709": {
        "id": "709",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 574;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "710": {
        "id": "710",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 959;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "711": {
        "id": "711",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "712": {
        "id": "712",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -77;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "713": {
        "id": "713",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 522;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "714": {
        "id": "714",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 836;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "715": {
        "id": "715",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1591;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "716": {
        "id": "716",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "717": {
        "id": "717",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "718": {
        "id": "718",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 520;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "719": {
        "id": "719",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 969;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "720": {
        "id": "720",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -61;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "721": {
        "id": "721",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -41;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "722": {
        "id": "722",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "723": {
        "id": "723",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 372;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "724": {
        "id": "724",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1899;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "725": {
        "id": "725",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1373;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "726": {
        "id": "726",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1307;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "727": {
        "id": "727",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "728": {
        "id": "728",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "729": {
        "id": "729",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1536;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "730": {
        "id": "730",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1292;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "731": {
        "id": "731",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 592;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "732": {
        "id": "732",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "733": {
        "id": "733",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 842;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "734": {
        "id": "734",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 294;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "735": {
        "id": "735",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -93;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "736": {
        "id": "736",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -60;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "737": {
        "id": "737",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -89;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "738": {
        "id": "738",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "739": {
        "id": "739",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1414;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "740": {
        "id": "740",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1622;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "741": {
        "id": "741",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "742": {
        "id": "742",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 507;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "743": {
        "id": "743",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "744": {
        "id": "744",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -64;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "745": {
        "id": "745",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1341;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "746": {
        "id": "746",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 557;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "747": {
        "id": "747",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "748": {
        "id": "748",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1233;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "749": {
        "id": "749",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 144;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "750": {
        "id": "750",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 166;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "751": {
        "id": "751",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 157;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "752": {
        "id": "752",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1885;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "753": {
        "id": "753",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "754": {
        "id": "754",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1560;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "755": {
        "id": "755",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "756": {
        "id": "756",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 940;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "757": {
        "id": "757",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 740;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "758": {
        "id": "758",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1400;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "759": {
        "id": "759",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -79;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "760": {
        "id": "760",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "761": {
        "id": "761",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 908;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "762": {
        "id": "762",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 672;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "763": {
        "id": "763",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "764": {
        "id": "764",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1246;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "765": {
        "id": "765",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1152;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "766": {
        "id": "766",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "767": {
        "id": "767",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 249;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "768": {
        "id": "768",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 111;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "769": {
        "id": "769",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 701;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "770": {
        "id": "770",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -52;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "771": {
        "id": "771",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1553;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "772": {
        "id": "772",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1556;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "773": {
        "id": "773",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 960;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "774": {
        "id": "774",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 118;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "775": {
        "id": "775",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "776": {
        "id": "776",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1983;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "777": {
        "id": "777",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 626;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "778": {
        "id": "778",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 336;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "779": {
        "id": "779",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -25;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "780": {
        "id": "780",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1797;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "781": {
        "id": "781",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 408;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "782": {
        "id": "782",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1799;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "783": {
        "id": "783",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1958;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "784": {
        "id": "784",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 595;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "785": {
        "id": "785",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 131;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "786": {
        "id": "786",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 544;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "787": {
        "id": "787",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1218;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "788": {
        "id": "788",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1441;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "789": {
        "id": "789",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "790": {
        "id": "790",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "791": {
        "id": "791",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 101;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "792": {
        "id": "792",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1756;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "793": {
        "id": "793",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "794": {
        "id": "794",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "795": {
        "id": "795",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1858;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "796": {
        "id": "796",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 264;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "797": {
        "id": "797",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -92;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "798": {
        "id": "798",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 175;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "799": {
        "id": "799",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 359;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "800": {
        "id": "800",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "801": {
        "id": "801",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 925;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "802": {
        "id": "802",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "803": {
        "id": "803",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -100;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "804": {
        "id": "804",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 955;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "805": {
        "id": "805",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 217;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "806": {
        "id": "806",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1716;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "807": {
        "id": "807",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1755;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "808": {
        "id": "808",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 60;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "809": {
        "id": "809",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "810": {
        "id": "810",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1463;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "811": {
        "id": "811",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1899;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "812": {
        "id": "812",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1400;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "813": {
        "id": "813",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "814": {
        "id": "814",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1900;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "815": {
        "id": "815",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1321;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "816": {
        "id": "816",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "817": {
        "id": "817",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 79;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "818": {
        "id": "818",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1152;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "819": {
        "id": "819",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 897;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "820": {
        "id": "820",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "821": {
        "id": "821",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 7;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "822": {
        "id": "822",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 301;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "823": {
        "id": "823",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -39;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "824": {
        "id": "824",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -20;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "825": {
        "id": "825",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 256;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "826": {
        "id": "826",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -30;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "827": {
        "id": "827",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1713;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "828": {
        "id": "828",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1318;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "829": {
        "id": "829",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "830": {
        "id": "830",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 653;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "831": {
        "id": "831",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "832": {
        "id": "832",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 403;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "833": {
        "id": "833",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 752;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "834": {
        "id": "834",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1745;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "835": {
        "id": "835",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1689;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "836": {
        "id": "836",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -45;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "837": {
        "id": "837",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1962;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "838": {
        "id": "838",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "839": {
        "id": "839",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1392;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "840": {
        "id": "840",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1624;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "841": {
        "id": "841",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "842": {
        "id": "842",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 373;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "843": {
        "id": "843",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 582;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "844": {
        "id": "844",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 41;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "845": {
        "id": "845",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -41;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "846": {
        "id": "846",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -79;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "847": {
        "id": "847",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1916;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "848": {
        "id": "848",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "849": {
        "id": "849",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -11;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "850": {
        "id": "850",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "851": {
        "id": "851",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 670;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "852": {
        "id": "852",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 594;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "853": {
        "id": "853",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 49;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "854": {
        "id": "854",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1717;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "855": {
        "id": "855",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -74;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "856": {
        "id": "856",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "857": {
        "id": "857",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -41;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "858": {
        "id": "858",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 704;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "859": {
        "id": "859",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1828;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "860": {
        "id": "860",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 771;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "861": {
        "id": "861",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 236;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "862": {
        "id": "862",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 759;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "863": {
        "id": "863",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 40;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "864": {
        "id": "864",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 205;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "865": {
        "id": "865",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1184;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "866": {
        "id": "866",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 47;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "867": {
        "id": "867",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "868": {
        "id": "868",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "869": {
        "id": "869",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1535;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "870": {
        "id": "870",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 127;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "871": {
        "id": "871",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -61;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "872": {
        "id": "872",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -62;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "873": {
        "id": "873",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1964;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "874": {
        "id": "874",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "875": {
        "id": "875",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "876": {
        "id": "876",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -93;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "877": {
        "id": "877",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 785;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "878": {
        "id": "878",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 208;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "879": {
        "id": "879",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 862;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "880": {
        "id": "880",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 471;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "881": {
        "id": "881",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -26;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "882": {
        "id": "882",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "883": {
        "id": "883",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 562;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "884": {
        "id": "884",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1488;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "885": {
        "id": "885",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1610;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "886": {
        "id": "886",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1997;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "887": {
        "id": "887",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 443;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "888": {
        "id": "888",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 349;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "889": {
        "id": "889",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 911;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "890": {
        "id": "890",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "891": {
        "id": "891",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 23;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "892": {
        "id": "892",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1248;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "893": {
        "id": "893",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1583;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "894": {
        "id": "894",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 754;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "895": {
        "id": "895",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1466;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "896": {
        "id": "896",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1972;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "897": {
        "id": "897",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -7;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "898": {
        "id": "898",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 220;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "899": {
        "id": "899",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -55;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "900": {
        "id": "900",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1561;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "901": {
        "id": "901",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 259;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "902": {
        "id": "902",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1190;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "903": {
        "id": "903",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1859;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "904": {
        "id": "904",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 330;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "905": {
        "id": "905",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "906": {
        "id": "906",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1382;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "907": {
        "id": "907",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 408;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "908": {
        "id": "908",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1883;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "909": {
        "id": "909",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 525;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "910": {
        "id": "910",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 827;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "911": {
        "id": "911",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 460;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "912": {
        "id": "912",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "913": {
        "id": "913",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1397;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "914": {
        "id": "914",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1602;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "915": {
        "id": "915",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 486;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "916": {
        "id": "916",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1485;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "917": {
        "id": "917",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "918": {
        "id": "918",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1880;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "919": {
        "id": "919",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 394;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "920": {
        "id": "920",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 723;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "921": {
        "id": "921",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 546;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "922": {
        "id": "922",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "923": {
        "id": "923",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 768;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "924": {
        "id": "924",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "925": {
        "id": "925",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 195;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "926": {
        "id": "926",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "927": {
        "id": "927",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1578;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "928": {
        "id": "928",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1940;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "929": {
        "id": "929",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1224;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "930": {
        "id": "930",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1692;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "931": {
        "id": "931",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1576;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "932": {
        "id": "932",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1777;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "933": {
        "id": "933",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1012;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "934": {
        "id": "934",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1919;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "935": {
        "id": "935",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 161;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "936": {
        "id": "936",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1423;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "937": {
        "id": "937",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -36;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "938": {
        "id": "938",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -100;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "939": {
        "id": "939",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1238;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "940": {
        "id": "940",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "941": {
        "id": "941",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1288;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "942": {
        "id": "942",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -98;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "943": {
        "id": "943",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 59;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "944": {
        "id": "944",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 527;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "945": {
        "id": "945",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 379;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "946": {
        "id": "946",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1138;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "947": {
        "id": "947",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 455;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "948": {
        "id": "948",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 579;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "949": {
        "id": "949",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1781;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "950": {
        "id": "950",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "951": {
        "id": "951",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -99;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "952": {
        "id": "952",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1985;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "953": {
        "id": "953",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1995;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "954": {
        "id": "954",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "955": {
        "id": "955",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -16;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "956": {
        "id": "956",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 498;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "957": {
        "id": "957",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "958": {
        "id": "958",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -92;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "959": {
        "id": "959",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1925;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "960": {
        "id": "960",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 695;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "961": {
        "id": "961",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1958;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "962": {
        "id": "962",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "963": {
        "id": "963",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 407;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "964": {
        "id": "964",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -18;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "965": {
        "id": "965",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 779;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "966": {
        "id": "966",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1203;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "967": {
        "id": "967",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "968": {
        "id": "968",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 652;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "969": {
        "id": "969",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "970": {
        "id": "970",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1025;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "971": {
        "id": "971",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "972": {
        "id": "972",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1224;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "973": {
        "id": "973",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "974": {
        "id": "974",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 406;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "975": {
        "id": "975",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 592;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "976": {
        "id": "976",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 695;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "977": {
        "id": "977",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 311;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "978": {
        "id": "978",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 829;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "979": {
        "id": "979",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -98;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "980": {
        "id": "980",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 721;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "981": {
        "id": "981",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -90;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "982": {
        "id": "982",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1948;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "983": {
        "id": "983",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 369;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "984": {
        "id": "984",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1910;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "985": {
        "id": "985",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1693;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "986": {
        "id": "986",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -18;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "987": {
        "id": "987",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 183;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "988": {
        "id": "988",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1728;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "989": {
        "id": "989",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -98;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "990": {
        "id": "990",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 878;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "991": {
        "id": "991",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1614;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "992": {
        "id": "992",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 989;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "993": {
        "id": "993",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = -58;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "994": {
        "id": "994",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 877;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "995": {
        "id": "995",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1057;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "996": {
        "id": "996",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1344;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "997": {
        "id": "997",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 692;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "998": {
        "id": "998",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 359;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    },
    "999": {
        "id": "999",
        "code": "def combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 411;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))",
        "coverage": [
            ">",
            ">",
            ">",
            ">",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">",
            "!",
            "!",
            "!",
            "!",
            "!",
            "!",
            ">"
        ]
    }
}