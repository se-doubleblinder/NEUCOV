{"3566": {"id": 3566, "code": "A = 20;B = 15\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "2281": {"id": 2281, "code": "N = 10;A = 3;B = 5\nX = min(A, B)\nY = max(0, A+B-N)\nprint(X, Y)", "coverage": [">", ">", ">", ">"]}, "8635": {"id": 8635, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(1,N): A[i]+=A[i-1]\nfor i in range(N-2,-1,-1): B[i]+=B[i+1]\nans=max(A[i]+B[i] for i in range(N))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2073": {"id": 2073, "code": "n = 10;a = 7;b = 5\nh = min(a, b)\nc = a+b-n\nif c < 0:\n    l = 0\nelse:\n    l = c\nprint(h, l)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "10534": {"id": 10534, "code": "a = 1;b = 1;k = 1\nm = b if a > b else a\nans = []\nfor i in range(1, m+1):\n  if a % i == 0 and b % i == 0:\n    ans.append(i)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9861": {"id": 9861, "code": "N = 6\nS = \")))())\"\nans = S\ncount = 0\nfor i in range(N):\n    if(S[i] == \"(\"):\n        count += 1\n    else:\n        count -= 1\n    if(count<0):\n        ans = \"(\" + ans\n        count += 1\ncount = 0\nfor i in range(N-1,-1,-1):\n    if(S[i] == \"(\"):\n        count += 1\n    else:\n        count -= 1\n    if(count>0):\n        ans = ans + \")\"\n        count -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "18318": {"id": 18318, "code": "h = 14\nw = 12\nx = 112\nm = max(h, w)\nprint((x+m-1)//m)", "coverage": [">", ">", ">", ">", ">"]}, "18285": {"id": 18285, "code": "import math\nsize = {}\nsize = {'H': 14}\nsize = {'H': 14, 'W': 12}\nN = 112\nif size['H'] > size['W']:\n    bigsize = 'H'\nelse:\n    bigsize = 'W'\nlines_num = math.ceil(N/size[bigsize])\nprint(lines_num)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14676": {"id": 14676, "code": "n = 45;p = 1\na = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]\non=a.count(1)\nze=a.count(0)\nans=0\nif on==0:\n    if p==0:\n        print(2**n)\n        exit()\n    if p==1:\n        print(0)\n        exit()\nprint(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "1676": {"id": 1676, "code": "n = 10;a = 3;b = 5\nif n>=(a+b):\n    MAX = min(a,b)\n    MIN = 0\nelse:\n    MAX = min(a,b)\n    MIN = a+b-n\nprint(str(MAX)+' '+str(MIN))", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "18562": {"id": 18562, "code": "from sys import stdin\nH = 2\nW = 100\nN = 200\nprint((N-1)//max(H, W) + 1)", "coverage": [">", ">", ">", ">", ">"]}, "15154": {"id": 15154, "code": "x = 12;y = 3;z = 1\nchair_len = x - 2 * z\nmax_count = 0\ni = 0\nwhile True:\n    if i%2==0:\n        if chair_len-y<0:\n            break\n        max_count += 1\n        chair_len -= y\n    else:\n        if chair_len-z<0:\n            break\n        chair_len -= z\n    i += 1\nprint(max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "467": {"id": 467, "code": "S = \"xyz\"\nK = 4\nrest = K\noz = ord('z')\noa = ord('a')\nans = list(S)\nfor ci in range(len(S)):\n    if S[ci] == 'a':\n        continue\n    check = oz - ord(S[ci]) + 1\n    if rest >= check:\n        ans[ci] = 'a'\n        rest -= check\nif rest >= 0:\n    for i in range(rest%26):\n        if oz == ord(ans[-1]):\n            ans[-1] = 'a'\n        else:\n            ans[-1] = chr(ord(ans[-1])+1)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "11708": {"id": 11708, "code": "s = \"SAT\"\nweek = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nfor i in range(6):\n    if s == week[i]:\n        print(6 - i)\nif s == \"SUN\":\n    print(\"7\")", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "17768": {"id": 17768, "code": "s = \"1905\"\na, b = int(s[:2]), int(s[2:])\nr = [\"AMBIGUOUS\", \"YYMM\", \"MMYY\", \"NA\"]\nprint(r[(0 if (0 < b < 13) else 2) + (0 if (0 < a < 13) else 1)])", "coverage": [">", ">", ">", ">"]}, "4553": {"id": 4553, "code": "S = \"smiles\"\na = len(S)\nprint(S[0]+ str(a-2) + S[-1])", "coverage": [">", ">", ">"]}, "93": {"id": 93, "code": "s = \"codefestival\"\nK = 100\nans = []\nfor i in s:\n    if i == \"a\":\n        ans.append(\"a\")\n        continue\n    if ord(i) + K >= ord(\"z\") + 1:\n        ans.append(\"a\")\n        K -= ord(\"z\") + 1 - ord(i)\n    else:\n        ans.append(i)\nlast = (K + ord(ans[-1]) - ord('a')) % 26\nans[-1] = chr(ord(\"a\") + last)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "11135": {"id": 11135, "code": "s = \"atcoder\"\ntarget = s[:(len(s)-1)//2]\ntarget2 = s[(len(s)+3)//2-1:]\nif target == target2:\n    l, r = 0, len(s)-1\n    flag = True\n    while l <= r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            print('No')\n            exit(0)\n    print(\"Yes\")\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11740": {"id": 11740, "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nM1=int(M1)\nM2=int(M2)\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "1073": {"id": 1073, "code": "N = 750\na=[111,222,333,444,555,666,777,888,999,1111]\nfor x in a:\n  if N<=x:\n    print(x)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "6793": {"id": 6793, "code": "h = 10;n = 3\na = [4, 5, 6]\nsum=0\nfor i in a:\n    sum += i\nif sum<h:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16370": {"id": 16370, "code": "import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nif n == 2:\n    print(a[1], a[0])\n    exit()\nx = a[-1]\nindex = bisect.bisect_left(a[:n-1], x/2)\nans = []\nans.append([abs(x/2-a[index-1]), a[index-1]])\nans.append([abs(x/2-a[index]), a[index]])\nans.append([abs(x/2-a[index+1]), a[index+1]])\nans.sort()\nprint(x, ans[0][1])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11600": {"id": 11600, "code": "s1 = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ns1.reverse()\ns2 = \"SAT\"\nprint(s1.index(s2) + 1)", "coverage": [">", ">", ">", ">"]}, "2684": {"id": 2684, "code": "n = {1, 4, 9, 7}\nif n == set({1, 7, 9, 4}):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "7948": {"id": 7948, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nif n == k:\n    cnt = 1\nelse:\n    cnt = (n - 2) // (k-1) + 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "13109": {"id": 13109, "code": "X = \"6\"\nprint(\"YES\" if X in \"357\" else \"NO\")", "coverage": [">", ">"]}, "1997": {"id": 1997, "code": "i = [10, 3, 5]\nprint(min(i[1], i[2]), max(i[1] + i[2] - i[0], 0))", "coverage": [">", ">"]}, "14213": {"id": 14213, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nstatus = 0\nprev = a[0]\nfor i in a:\n    diff = i - prev\n    if diff == 0:\n        pass\n    elif diff > 0:\n        if status >= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    else:\n        if status <= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "10095": {"id": 10095, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nco, cc = 0, 0\nfor ch in s:\n    if ch == '(':\n        co += 1\n    if ch == ')':\n        if co > 0:\n            co -= 1\n        else:\n            cc += 1\nans = \"(\" * cc + \"\".join(s) + \")\" * co\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "5527": {"id": 5527, "code": "x = 5\nprint(int(x/2)+ 1 if x % 2 != 0 else int(x/2))", "coverage": [">", ">"]}, "17603": {"id": 17603, "code": "S = \"1700\"\nYYMM = 0\nMMYY = 0\nstart = S[0:2]\nend = S[2:4]\ntmp1 = int(start)\ntmp2 = int(end)\nif(tmp2 <= 12 and tmp2 != 0):\n    YYMM = 1\nif(tmp1 <= 12 and tmp1 != 0):\n    MMYY = 1\nif(YYMM == 1 and MMYY == 1):\n    print(\"AMBIGUOUS\")\nelif(YYMM == 1):\n    print(\"YYMM\")\nelif(MMYY == 1):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "9670": {"id": 9670, "code": "from collections import deque\nN = 6\nS = \")))())\"\nans = deque([])\nemp = deque([])\nfor s in S[::-1]:\n    if s == \")\":\n        ans.append('(')\n    else:\n        if ans:\n            ans.pop()\n        else:\n            emp.append(')')\nans = list(ans)\nemp = list(emp)\nprint(\"\".join(ans)+S+\"\".join(emp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "1686": {"id": 1686, "code": "N = 10;A = 7;B = 5\nmini = A + B - N\nif mini < 0:\n    mini = 0\nmaxi = min(A,B)\nprint(maxi,mini)", "coverage": [">", ">", ">", "!", ">", ">"]}, "18036": {"id": 18036, "code": "s = \"1905\"\nmae = int(s[:2])\nusiro = int(s[2:])\nym = 0\nmy = 0\nif (1 <= usiro <= 12): ym = 1\nif (1 <= mae <= 12): my = 1\nif (ym and my): print(\"AMBIGUOUS\")\nelif (ym): print(\"YYMM\")\nelif (my): print(\"MMYY\")\nelse: print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11283": {"id": 11283, "code": "s = \"SUN\"\nls = {\"MON\": 0, \"TUE\": 1, \"WED\": 2, \"THU\": 3, \"FRI\": 4, \"SAT\": 5, \"SUN\": -1}\nprint(6-ls[s])", "coverage": [">", ">", ">"]}, "15856": {"id": 15856, "code": "x = 12;y = 3;z = 1\nprint(len(range(z+y,x-z+1,z+y)))", "coverage": [">", ">"]}, "13835": {"id": 13835, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nAd = [A[i] - A[i+1] for i in range(N-1)]\nans = 1\np = 0\nfor d in Ad:\n    if d * p < 0:\n        ans += 1\n        p = 0\n    elif d != 0:\n        p = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2757": {"id": 2757, "code": "a = \"1479\"\nprint(\"YES\" if a==\"1479\" else \"NO\")", "coverage": [">", ">"]}, "19256": {"id": 19256, "code": "n = 5\ni = 10\nans = 0\nwhile  i <= n:\n    ans += (n // i)\n    i *= 5\nprint(ans if n & 1 == 0 else 0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2554": {"id": 2554, "code": "from sys import exit, stdin\nN = {1, 4, 9, 7}\nif N == set([1,9,7,4]):\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "7008": {"id": 7008, "code": "h = 20;n = 3\na = [4, 5, 6]\nx = 0\nfor i in range(n):\n    x = x + a[i]\nprint(\"Yes\" if x >= h else \"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "3149": {"id": 3149, "code": "S = \"1111111111\";m = 10000\nfor i in range(len(S)-2):m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">"]}, "10731": {"id": 10731, "code": "S = \"level\"\nN=len(S)\ncon_2=S[:(N-1)//2]\ncon_3=S[((N+3)//2-1):]\nif S==S[::-1] and con_2==con_2[::-1] and con_3==con_3[::-1]:\n            print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "721": {"id": 721, "code": "k = 2\nif k % 7 == 0:\n    l = 9*k // 7\nelse:\n    l = 9*k\nif l % 2 == 0 or l % 5 == 0:\n    print(-1)\nelse:\n    pmo = 1\n    for i in range(1, l + 1):\n        mo = (pmo * 10) % l\n        if mo == 1:\n            print(i)\n            break\n        else:\n            pmo = mo", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5792": {"id": 5792, "code": "pages = 2\npapers=pages/2\nres=int(papers)\nif pages%2==0:\n    print(res)\nelse:\n    print(res+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3325": {"id": 3325, "code": "A = 12;B = 4\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "10824": {"id": 10824, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nf1 = s == list(reversed(s))\nf2 = s[:(len(s)-1)//2] == list(reversed(s[:(len(s)-1)//2]))\nf3 = s[(len(s)+2)//2:] == list(reversed(s[(len(s)+2)//2:]))\nprint(\"Yes\" if all([f1, f2, f3]) else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "2371": {"id": 2371, "code": "n = 1;m = 1\nans = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "16097": {"id": 16097, "code": "A = 20;B = 30\nif A-(B*2) > 0:\n    print(A-(B*2))\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "18802": {"id": 18802, "code": "h = 3\nw = 7\nn = 10\nif w>=h:\n    re=int(n/w)\n    if n%w>0:\n        re+=1\nelse:\n    re=int(n/h)\n    if n%h>0:\n        re+=1\nprint(re)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "10565": {"id": 10565, "code": "import math\nA = 100;B = 50;K = 4\ngcd_of_AB = math.gcd(A,B)\nl = []\nfor i in range(1,gcd_of_AB+1):\n    if gcd_of_AB % i == 0:\n        l.append(i)\nprint(l[len(l)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2655": {"id": 2655, "code": "a = {0, 9, 4, 8}\nif a=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "3916": {"id": 3916, "code": "x = 64145;y = 123;z = 456\nlong = x-z\nf = y+z\nans , b = divmod(long,f)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "14180": {"id": 14180, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc=1\ng=0\nfor i in range(n-1):\n  if (g==1 and a[i+1]<a[i]) or (g==-1 and a[i+1]>a[i]) :\n    c+=1\n    g=0\n  elif g==0:\n    if a[i+1]>a[i]:\n      g=1\n    elif a[i+1]<a[i]:\n      g=-1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1597": {"id": 1597, "code": "N = 100;A = 100;B = 100\nif N < A+B:\n  print(min(A,B),A+B-N)\nelse:\n  print(min(A,B),0)", "coverage": [">", ">", ">", "!", "!"]}, "7961": {"id": 7961, "code": "n = 4;k = 3\nar = [2, 3, 1, 4]\nfrom math import ceil\npos=ar.index(1)\na=n-1-pos\nb=pos\na1=(a//(k-1))\na2=b//(k-1)\nc=ceil((n-1-((a1+a2)*(k-1)))/(k-1))\nprint(a1+a2+c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3223": {"id": 3223, "code": "A = 20;B = 15\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "19404": {"id": 19404, "code": "import sys\nif sys.platform =='ios':\n    sys.stdin=open('input_file.txt')\nN = 10\nif N%2==0:\n\tN=N//2\nprint(N*2)", "coverage": [">", ">", "!", ">", ">", ">", ">"]}, "12544": {"id": 12544, "code": "from math import gcd\na = 8;b = 12;k = 2\ng = gcd(a, b)\nl = []\ni = 1\nwhile i * i <= g:\n    if g % i == 0:\n        l.append(i)\n        if i != g // i:\n            l.append(g // i)\n    i += 1\nl.sort()\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7446": {"id": 7446, "code": "H = 211;N = 5\nN_list = [31, 41, 59, 26, 53]\nfor i in range(0, N):\n    H -= N_list[i]\nif H <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7029": {"id": 7029, "code": "h = 210;n = 5\na = map(int, \"31 41 59 26 53\".split())\nprint('Yes' if h <= sum(a) else 'No')", "coverage": [">", ">", ">"]}, "12014": {"id": 12014, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == 12 and m2 == 1:\n\tprint(\"1\")\nelif m2 - m1 == 1:\n\tprint(\"1\")\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", ">", ">", "!", "!"]}, "14069": {"id": 14069, "code": "from collections import deque\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd=deque(a)\ntmp=[d[0]]\nd.popleft()\nans=1\nwhile d:\n    t=tmp[-1]-tmp[0]\n    if len(tmp)==1 or t==0:\n        tmp.append(d.popleft())\n    elif t>0 and d[0]>=tmp[-1]:\n        tmp.append(d.popleft())\n    elif t<0 and d[0]<=tmp[-1]:\n        tmp.append(d.popleft())\n    else:\n        ans+=1\n        tmp=[d.popleft()]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "6023": {"id": 6023, "code": "N = 2\nans = N // 2 + min(1, N % 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "17044": {"id": 17044, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    print(b)\nelse:\n    if b == 'D':\n        print('H')\n    else:\n        print('D')", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "13931": {"id": 13931, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nu = False\nd = False\nfor i in range(1, n):\n    if u:\n        if a[i] < a[i - 1]:\n            u = False\n            ans += 1\n    elif d:\n        if a[i] > a[i - 1]:\n            d = False\n            ans += 1\n    else:\n        if a[i] > a[i - 1]:\n            u = True\n        elif a[i] < a[i - 1]:\n            d = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15477": {"id": 15477, "code": "x = 64145;y = 123;z = 456\ntmp = (x-z)//(y+z)\namari = (x-z)%(y+z)\nprint(tmp)", "coverage": [">", ">", ">", ">"]}, "4782": {"id": 4782, "code": "s = \"xyz\"\nl = len(s)\nprint(f'{s[0]}{l-2}{s[l-1]}')", "coverage": [">", ">", ">"]}, "7334": {"id": 7334, "code": "H = 20;N = 3\nlst = [4, 5, 6]\nfor i in range (0, N):\n    H -= lst[i]\nif H <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "9937": {"id": 9937, "code": "n = 6\ns = \")))())\"\nans = s\nwhile s.count(\"()\")>0:\n    s = s.replace(\"()\", \"\")\ncnt_l = s.count(\")\")\ncnt_r = s.count(\"(\")\nprint(cnt_l * \"(\" + ans + cnt_r * \")\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11472": {"id": 11472, "code": "S = \"SAT\"\nif S==\"SUN\":\n  print('7')\nelif S==\"MON\":\n  print('6')\nelif S==\"TUE\":\n  print('5')\nelif S==\"WED\":\n  print('4')\nelif S==\"THU\":\n  print('3')\nelif S==\"FRI\":\n  print('2')\nelse:\n  print('1')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "1843": {"id": 1843, "code": "n = 10;a = 3;b = 5\nif n>=(a+b):\n    ans1=min(a,b)\n    ans2=0\nelse:\n    ans1=min(a,b)\n    ans2=(a+b)-n\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "14744": {"id": 14744, "code": "N = 2;P = 0\na_ls = [1, 3]\ndp = [[0,0] for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(1,N+1):\n    next = (a_ls[i-1])%2\n    if next == 0:\n        dp[i][0] += 2 * dp[i-1][0]\n        dp[i][1] += 2 * dp[i-1][1]\n    else:\n        dp[i][0] += dp[i-1][0] + dp[i-1][1]\n        dp[i][1] += dp[i-1][0] + dp[i-1][1]\nprint(dp[-1][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "6463": {"id": 6463, "code": "import bisect\nN = 3\nA = (1, 1, 1)\nB = (2, 2, 2)\nC = (3, 3, 3)\nres = 0\nfor i in range(N):\n\tres += bisect.bisect_left(A, B[i])*(N - bisect.bisect_right(C, B[i]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7663": {"id": 7663, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nsum = 0\nfor i in range(n):\n    sum += a[i]\nif sum >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10214": {"id": 10214, "code": "N = 3\nS = \"())\"\ndiff = [0] * (N + 1)\nfor i in range(N):\n    if S[i] == \"(\":\n        diff[i + 1] = diff[i] + 1\n    else:\n        diff[i + 1] = diff[i] - 1\nmin_diff = min(diff)\nprint(\"(\" * -min_diff + S + \")\" * (diff[N] - min_diff))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18289": {"id": 18289, "code": "h = 2\nw = 100\nn = 200\nc1=0\nc2=0\nt=0\nwhile t<n:\n  if h-c2<=w-c1:\n    t+=w-c1\n    c2+=1\n  else:\n    t+=h-c2\n    c1+=1\nprint(c1+c2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10205": {"id": 10205, "code": "from itertools import accumulate\nN = 3\nS = \"())\"\nSS = [1 if S[i]=='(' else -1 for i in range(N)]\nSSS = list(accumulate(SS))\nm = max(0,-min(SSS))\nM = SSS[-1]\nprint('('*m+S+')'*(M+m))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1852": {"id": 1852, "code": "n = 10;a = 3;b = 5\nc = min(a,b)\nd = max(0,(a+b)-n)\nprint(c,d)", "coverage": [">", ">", ">", ">"]}, "13413": {"id": 13413, "code": "data = \"haiku,atcoder,tasks\"\nx = data.replace(\",\",\" \")\nprint(x)", "coverage": [">", ">", ">"]}, "17512": {"id": 17512, "code": "S = \"0112\"\nmonths=['01','02','03','04','05','06','07','08','09','10','11','12']\nif S[0:2] in months and S[2:4] in months:\n    print('AMBIGUOUS')\nelif S[0:2] in months:\n    print('MMYY')\nelif S[2:4] in months:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "14386": {"id": 14386, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 1\nans = 1\nchange = [False,False]\nwhile i<n:\n    if change == [True,True]:\n        ans += 1\n        change = [False,False]\n    elif a[i]>a[i-1]:\n        change[0] = True\n        i += 1\n    elif a[i]<a[i-1]:\n        change[1] = True\n        i += 1\n    else:\n        i += 1\nif i==n and change==[True,True]:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17256": {"id": 17256, "code": "a = \"H\";b = \"H\"\nans = \"HD\"\nindex = ans.index(b)\nif ans.index(a):\n    print(ans[index-1])\nelse:\n    print(ans[index])", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "474": {"id": 474, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\ns = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n    num = (ord('z') - ord(s[i]) + 1) % 26\n    if num <= k:\n        k -= num\n        s[i] = 'a'\ns[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17455": {"id": 17455, "code": "s = \"0112\"\na = s[0] + s[1]\nb = s[2] + s[3]\np = 0\nq = 0\nif a == \"01\" or a == \"02\" or a == \"03\" or a == \"04\" or a == \"05\" or a == \"06\" or a == \"07\" or a == \"08\" or a == \"09\" or a == \"10\" or a == \"11\" or a == \"12\":\n    p = 1\nif b == \"01\" or b == \"02\" or b == \"03\" or b == \"04\" or b == \"05\" or b == \"06\" or b == \"07\" or b == \"08\" or b == \"09\" or b == \"10\" or b == \"11\" or b == \"12\":\n    q = 1  \nif p == 1 and q == 1:\n    print(\"AMBIGUOUS\")\nelif p == 1 and q == 0:\n    print(\"MMYY\")\nelif p == 0 and q == 1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3676": {"id": 3676, "code": "a = 20;b = 15\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "8466": {"id": 8466, "code": "n = 1\na1 = [2]\na2 = [3]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5189": {"id": 5189, "code": "a = \"smiles\"\nf=a[0]\nl=a[-1]\nle=len(a)-2\nprint(f+str(le)+l)", "coverage": [">", ">", ">", ">", ">"]}, "9814": {"id": 9814, "code": "s = \")))())\"\nt=0\nfor c in s:\n  if c=='(': t+=1\n  else: t-=1\n  if t<0: s='('+s; t+=1\nprint(s+')'*t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7577": {"id": 7577, "code": "h = 10;n = 3\nprint('No' if sum(list(map(int, \"4 5 6\".split())))<h else 'Yes')", "coverage": [">", ">"]}, "5060": {"id": 5060, "code": "s = \"smiles\"\nsize = len(s[1:-1])\nprint(s[0] + str(size) + s[-1])", "coverage": [">", ">", ">"]}, "14335": {"id": 14335, "code": "num = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nk = 1\nx = y = 0\nc = a[0]\nfor i in a[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9606": {"id": 9606, "code": "a = \"2017/01/07\"\ns=a[:3]+\"8\"+a[4:]\nprint(s)", "coverage": [">", ">", ">"]}, "15971": {"id": 15971, "code": "A = \"12\";B = \"4\"\n(A,B)=(int(A),int(B))\nAns=A-(2*B)\nif Ans<=0:\n  Ans=0\nprint(Ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "6047": {"id": 6047, "code": "n = 2\nprint((n+2-1)//2)", "coverage": [">", ">"]}, "7100": {"id": 7100, "code": "h = 20;n = 3\na = [4, 5, 6]\nif h<=sum(a):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "7256": {"id": 7256, "code": "h = 20;n = 3\nA = [4, 5, 6]\nattack = sum(A)\nif h > attack:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3213": {"id": 3213, "code": "s = \"1234567876\"\nn = len(s)\nret = 753\nfor i in range(n-2):\n    x = abs(753-int(s[i:i+3]))\n    ret = min(x, ret)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13070": {"id": 13070, "code": "x = 5\nans = 'NO'\nif x in [3, 5, 7]:\n    ans = 'YES'\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "8053": {"id": 8053, "code": "n = 3;k = 3\na = [1, 2, 3]\nfor i in range(n):\n    if a[i] == 1:\n        m = i\n        break\nl = [m - k + 1, m]\nans = 114514\nfor i in range(k):\n    x = l[0] + i\n    y = l[1] + i\n    if not x < 0 and not y >= n:\n        c = 1\n        while True:\n            if x <= 0:\n                break\n            x -= k - 1\n            c += 1\n        while True:\n            if y >= n - 1:\n                break\n            y += k - 1\n            c += 1\n        if c < ans:\n            ans = c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10308": {"id": 10308, "code": "A = 1;B = 1;K = 1\nif A>=B:\n    A^=B\n    B^=A\n    A^=B\na=[]\nfor i in range(1,A+1):\n    if A%i==0 and B%i==0:\n        a.append(i)\nprint(a[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9470": {"id": 9470, "code": "S = \"2017\";T = \"01\";U = \"07\"\nprint(\"2018/\"+T+\"/\"+U)", "coverage": [">", ">"]}, "7785": {"id": 7785, "code": "N = 3;K = 3\narr = [1, 2, 3]\nprint(-(-(N-1)//(K-1)))", "coverage": [">", ">", ">"]}, "6660": {"id": 6660, "code": "H = 20;N = 3\nA = [4, 5, 6]\nif sum(A)>=H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "4706": {"id": 4706, "code": "s = \"smiles\"\nS=s[0]+str(len(s)-2)+s[len(s)-1]\nprint(S)", "coverage": [">", ">", ">"]}, "7602": {"id": 7602, "code": "H = 20;N = 3\nA = [4, 5, 6]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!"]}, "13727": {"id": 13727, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nstart = a*60 + b\nend = c*60 + d\nprint(end - e - start)", "coverage": [">", ">", ">", ">"]}, "80": {"id": 80, "code": "s = \"codefestival\"\nk = 100\nans = \"\"\nl = 26\nfor i in range(len(s)-1):\n    if l - ord(s[i]) + 97 <= k and s[i] != \"a\":\n        k -= l - ord(s[i]) + 97\n        ans += \"a\"\n    else:\n        ans += s[i]\nans += (chr(((ord(s[-1]) - 97) + k + l) % l + 97))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "9753": {"id": 9753, "code": "N = 8\nS = \"))))((((\"\nb = 0\ne = 0\nfor s in S:\n    if s == ')':\n        e += 1\n    else:\n        b += 1\n    S = '(' * max(e-b, 0) + S\n    b += max(e-b, 0)\nS += ')' * max(b-e, 0)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13566": {"id": 13566, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5] + \" \" + s[6:13] + \" \" + s[14:19])", "coverage": [">", ">"]}, "6475": {"id": 6475, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nrui=[0]\nsm=0\nfor mid in b:\n    ind = bisect.bisect_left(c,mid+1)\n    sm+= (n-ind)\n    rui.append(sm)\nans=0\nfor top in a:\n    ind = bisect.bisect_left(b,top+1)\n    tmp = rui[-1] - rui[ind]\n    ans+=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16799": {"id": 16799, "code": "a = \"D\";b = \"D\"\nprint(\"DH\"[a == b])", "coverage": [">", ">"]}, "9376": {"id": 9376, "code": "s = ['2017', '01', '07']\nprint('2018/'+s[1]+'/'+s[2])", "coverage": [">", ">"]}, "6548": {"id": 6548, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nfrom bisect import bisect_left\nfrom itertools import accumulate\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncheck = [0] * n\nans = 0\nfor i in range(n):\n    index = bisect_left(c, b[i])\n    if index != n:\n        if c[index] == b[i]:\n            index = bisect_left(c, b[i] + 1)\n    check[i] = n - index\ncumsum = [0] + list(accumulate(check[::-1]))\nfor aa in a:\n    index = bisect_left(b, aa)\n    if index != n:\n        if b[index] == aa:\n            index = bisect_left(b, aa + 1)\n    ans += cumsum[n - index]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "18412": {"id": 18412, "code": "H = 2\nW = 100\nN = 200\nm = max(H,W)\nif N%m != 0:\n  ans = N/m +1\nelse:\n  ans = N/m\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "9133": {"id": 9133, "code": "date = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ndate[3] = \"8\"\nprint(\"\".join(map(str, date)))", "coverage": [">", ">", ">"]}, "2172": {"id": 2172, "code": "A = [100, 100, 100]\nif A[1] + A[2] < A[0]:\n  b = 0\nelse:\n  b = A[1] + A[2] - A[0]\nx = [A[1], A[2]]\nprint(min(x) ,b)", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "5325": {"id": 5325, "code": "n = 100\nprint(int(n/2)) if n%2 == 0 else print(int(n/2+1))", "coverage": [">", ">"]}, "10418": {"id": 10418, "code": "a = 1;b = 1;k = 1\nans = []\nfor i in range(1, min(a, b)+1):\n    if a % i == b % i == 0:\n        ans.append(i)\nans.sort(reverse=True)\nprint(ans[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12616": {"id": 12616, "code": "import sys\nA = 8;B = 12;K = 2\nmini = min(A, B)\ndivisors = []\nfor i in range(1, mini + 1):\n    if A % i == 0 and B % i == 0:\n        divisors.append(i)\ndivisors = divisors[::-1]\nprint(divisors[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14378": {"id": 14378, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ninc = False\ndec = False\np = A.pop(0)\nfor Ai in A:\n    if (not inc) and (not dec):\n        if Ai < p:\n            dec = True\n        elif Ai > p:\n            inc = True\n    elif inc:\n        if Ai < p:\n            cnt += 1\n            inc = False\n    elif dec:\n        if Ai > p:\n            cnt += 1\n            dec = False\n    p = Ai\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8037": {"id": 8037, "code": "n = 4;k = 3\naaa = [2, 3, 1, 4]\ncnt = 1\nb = n - k\nwhile b > 0:\n    b -= k - 1\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7900": {"id": 7900, "code": "n = 3;k = 3\nan = \"1 2 3\"\ncount = 1\nn -= k\nk -= 1\nwhile(n > 0):\n    n -= k\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15398": {"id": 15398, "code": "x = 13;y = 3;z = 1\nans = 0\nx -= z\nans += x // (y + z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17418": {"id": 17418, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 0 < a < 13:\n    if 0 < b < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 0 < b < 13:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "3311": {"id": 3311, "code": "a = 20;b = 15\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "3475": {"id": 3475, "code": "a = 12;b = 4\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15319": {"id": 15319, "code": "x = 12;y = 3;z = 1\nprint((x - 1 * z) // (y + z))", "coverage": [">", ">"]}, "16107": {"id": 16107, "code": "a = 12;b = 4\nif a<=(b*2):\n    print(0)\nelse:\n    print(a-(b*2))", "coverage": [">", ">", "!", "!", ">"]}, "6238": {"id": 6238, "code": "import bisect\nn = 6\nas_ = [3, 14, 159, 2, 6, 53]\nbs_ = [58, 9, 79, 323, 84, 6]\ncs_ = [2643, 383, 2, 79, 50, 288]\nas_.sort()\nbs_.sort()\ncs_.sort()\nans = 0\nfor b in bs_:\n  ans += bisect.bisect_left(as_, b) * (n-bisect.bisect_right(cs_, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4350": {"id": 4350, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nif H2 < H1:\n    H2 = H2 + 24\nif H1 == H2 and H2 < H1:\n    H2 = H2 + 24\ntime2m = H2 * 60 + M2\ntime1m = H1 * 60 + M1\nstudy_time = time2m - K - time1m\nif study_time <= 0:\n    print(0)\nelse:\n    print(study_time)", "coverage": [">", ">", "!", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "8552": {"id": 8552, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nlst = [0]*N\nfor i in range(N):\n    lst[i] = sum(A1[:i+1]) + sum(A2[i:])\nans = max(lst)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7937": {"id": 7937, "code": "nim = 4;mike = 3\narray = [2, 3, 1, 4]\nprint((nim+mike-3)//(mike-1))", "coverage": [">", ">", ">"]}, "1170": {"id": 1170, "code": "n = 111\nmul = lambda x: x * 100 + x * 10 + x\nif mul(n//100)>=n:ans = mul(n//100)\nelse :ans = mul(n//100+1)\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "2545": {"id": 2545, "code": "N = {'9', '4', '0', '8'}\nif '1' in N and '9' in N and '7' in N and '4' in N:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "19409": {"id": 19409, "code": "n = 10\nprint(n if n % 2 == 0 else 2 * n)", "coverage": [">", ">"]}, "14361": {"id": 14361, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nwhile i < N:\n    if i == N-1:\n        ans += 1\n        break\n    if A[i] == A[i+1]:\n        i += 1\n    elif A[i] > A[i+1]:\n        while i < N-1 and A[i] >= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\n    elif A[i] < A[i+1]:\n        while i < N-1 and A[i] <= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17269": {"id": 17269, "code": "a = \"D\";b = \"H\"\nif(a==b):print(\"H\")\nelse:print(\"D\")", "coverage": [">", ">", ">"]}, "499": {"id": 499, "code": "s = \"xyz\"\nk = 4\nasc = [0] * len(s)\nfor i in range(len(s)):\n    asc[i] = ord(s[i]) - ord(\"a\")\ni = 0\nfor i in range(len(s)):\n    if 26 - asc[i] <= k and asc[i] != 0:\n        x = 26 - asc[i]\n        asc[i] = 0\n        k -= x\nif k > 0:\n    asc[-1] += k % 26\nfor i in range(len(s)):\n    asc[i] += ord(\"a\")\n    asc[i] = chr(asc[i])\nprint(\"\".join(asc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "11631": {"id": 11631, "code": "S = \"SUN\"\nif S == 'SUN':\n    answer = 7\nelif S == 'MON':\n    answer = 6\nelif S == 'TUE':\n    answer = 5\nelif S == 'WED':\n    answer = 4\nelif S == 'THU':\n    answer = 3\nelif S == 'FRI':\n    answer = 2\nelif S == 'SAT':\n    answer = 1\nelse:\n    answer = '\u5165\u529b\u9593\u9055\u3044\u3010SUN\u3011\u3010MON\u3011\u3010TUE\u3011\u3010WED\u3011\u3010THU\u3011\u3010FRI\u3011\u3010SAT\u3011\u3092\u5165\u529b'\nprint(answer)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "12709": {"id": 12709, "code": "x = 6\nr = {3, 5, 7}\nif x in r:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "197": {"id": 197, "code": "import sys\ninput = sys.stdin.readline\nS = ['x', 'y']\nK = 4\na = ord(\"a\")\nN = len(S)\nfor i in range(N):\n  x = ord(S[i])\n  if K >= (a - x) % 26:\n    K -= (a - x) % 26\n    S[i] = \"a\"\nS[-1] = chr((ord(S[i]) - a + K % 26) % 26 + a)\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12665": {"id": 12665, "code": "if int(\"6\") in (3,5,7):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", "!", "!", ">"]}, "1547": {"id": 1547, "code": "n = \"111\";l = [1, 1, 1]\nfor i in range(min(set(l)),max(set(l))+1):\n  ans=int(str(i)*3)\n  if ans>=int(n):\n    print(ans)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "7229": {"id": 7229, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nans = ['No', 'Yes'][sum(A) >= H]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13731": {"id": 13731, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh=h2 - h1\nif h < 0:\n    h = 24+h\n    m=m2 - m1\n    du=h*60+m-k\nelif h == 0:\n    if m1 < m2:\n        du = m2-m1-k\n    else:\n        du = 24*60 +(m2-m1)-k\nelse:\n    du = h*60+(m2-m1)-k\nprint(du)", "coverage": [">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">"]}, "13697": {"id": 13697, "code": "line_data = \"10 0 15 0 30\"\nH1, M1, H2, M2, K = map(lambda x: int(x), line_data.split(' '))   \nminiutes = (H2 - H1) * 60 + (M2 - M1)                             \nprint(miniutes - K)                                               ", "coverage": [">", ">", ">", ">"]}, "15694": {"id": 15694, "code": "x = 13;y = 3;z = 1\nxx=x-z\nyy=y+z\nprint(int(xx/yy))", "coverage": [">", ">", ">", ">"]}, "18620": {"id": 18620, "code": "h = 3\nw = 7\nn = 10\nprint((n//(-(max(h,w))))*(-1))", "coverage": [">", ">", ">", ">"]}, "11376": {"id": 11376, "code": "s = \"SAT\"\ndays = ['SUN','MON','TUE','WED','THU','FRI','SAT' ]\nday = int(days.index(s))\nprint(7-day)", "coverage": [">", ">", ">", ">"]}, "12695": {"id": 12695, "code": "x = 6\nprint('YES') if x == 3 or x == 5 or x == 7 else print('NO')", "coverage": [">", ">"]}, "1": {"id": 1, "code": "s = ['a']\nK = 25\nfor i in range(len(s)):\n    if s[i] == \"a\":\n        continue\n    d = ord(\"z\")-ord(s[i]) + 1\n    if d <= K:\n        s[i] = \"a\"\n        K -= d\nx = (ord(s[-1])-ord(\"a\")+K)%26\ns[-1] = chr(ord(\"a\")+x)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "7853": {"id": 7853, "code": "n = 3;k = 3\na = [1, 2, 3]\nif n == k:\n    print(1)\nelif k == 2:\n    print(n-1)\nelse:\n    rem = n % (k-1)\n    m = (n - rem) / (k-1)\n    if rem <= 1:\n        print(int(m))\n    else:\n        print(int(m+1))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "19426": {"id": 19426, "code": "n = 10\nans = n\nif n%2:\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "19513": {"id": 19513, "code": "N = 999999999\nif N%2: print(2*N)\nelse: print(N)", "coverage": [">", ">", "!"]}, "11601": {"id": 11601, "code": "s1 = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ns1.reverse()\ns2 = \"SUN\"\nprint(s1.index(s2) + 1)", "coverage": [">", ">", ">", ">"]}, "1993": {"id": 1993, "code": "n = 100;a = 100;b = 100\nmax_value = min(a, b)\nif a + b - n < 0:\n    min_value = 0\nelse:\n    min_value = a + b - n\nprint(f'{max_value} {min_value}')", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "429": {"id": 429, "code": "sl = ['a']\nk = 25\nfor i in range(len(sl)):\n    ord_s = ord(sl[i])\n    use = 123 - ord_s\n    if k - use >= 0 and sl[i] != \"a\":\n        sl[i] = \"a\"\n        k -= use\nif k > 0:\n    sl[-1] = chr((ord(sl[-1]) + k - 97) % 26 + 97)\nprint(\"\".join(sl))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11345": {"id": 11345, "code": "s = \"SUN\"\nyoubi = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nindex = youbi.index(s)\nday = 7 - index\nif day == 0:\n  print('7')\nelse:\n  print(day)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4151": {"id": 4151, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nimport math\ntime1=H1*60+M1\ntime2=H2*60+M2\na=time2-K\nif a<=0:\n    print(0)\n    exit()\nif time1<=a:\n    print(a-time1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "13274": {"id": 13274, "code": "S = \"happy,newyear,enjoy\"\na = S.replace(',',' ')\nprint(a)", "coverage": [">", ">", ">"]}, "1256": {"id": 1256, "code": "n = 112\nwhile n % 111 != 0:\n  n += 1\nprint(n)", "coverage": [">", ">", ">", ">"]}, "8840": {"id": 8840, "code": "n = 5\nup = [3, 2, 2, 4, 1]\ndw = [1, 2, 2, 2, 1]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "637": {"id": 637, "code": "K = 2\nans = -1\ntmp = 0\nfor i in range(1, K + 1):\n    tmp = (tmp*10%K + 7) % K\n    if tmp == 0:\n        ans = i\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9584": {"id": 9584, "code": "s = \"2017/01/07\"\nprint(\"2018\" + s[4:])", "coverage": [">", ">"]}, "4336": {"id": 4336, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nTIME = (H2-H1)*60\nTIME = TIME+(M2-M1)\nprint(TIME-K)", "coverage": [">", ">", ">", ">"]}, "9920": {"id": 9920, "code": "N = 8\nS = [')', ')', ')', ')', '(', '(', '(', '(']\nans = []\ncount = 0\naddFlag = True\nfor i in range(N):\n    if addFlag:\n        if S[i] == ')':\n            ans.append(')')\n            ans.insert(0,'(')\n        else:\n            ans.append('(')\n            count += 1\n            addFlag = False\n    else:\n        if S[i] == '(':\n            ans.append('(')\n            count += 1\n        else:\n            ans.append(')')\n            count -= 1\n            if count == 0:\n                addFlag = True\nfor _ in range(count):\n    ans.append(')')\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "807": {"id": 807, "code": "K = 101\nif K%2==0 or K%5==0:\n    print(-1)\nelif K==1 or K==7:\n    print(1)\nelse:\n    B = 7\n    i = 1\n    while 1:\n        if B==0:\n            print(i)\n            break\n        else:\n            B = (10 * B + 7) % K\n            i = i + 1", "coverage": [">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "15863": {"id": 15863, "code": "X = 12;Y = 3;Z = 1\np=1;t=Y+2*Z\nwhile t<X:\n  t=t+Y+Z\n  if t>X:\n    break\n  p=p+1\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9281": {"id": 9281, "code": "S = \"2017/01/31\"\nif '2017/01/' == S[:8]:\n    print('2018/01/{}'.format(S[8:]))", "coverage": [">", ">", ">"]}, "510": {"id": 510, "code": "S = \"a\"\nK = 25\nz = ord('z') + 1\nres = \"\"\nflg = False\nfor i,c in enumerate(S):\n    if c == 'a':\n        res += 'a'\n        continue\n    elif z - ord(c) <= K:\n        res += 'a'\n        K -= z-ord(c)\n    else:\n        res += chr(ord(c))\nres = res[:-1] + chr((ord(res[-1])-ord('a') + K) % 26 + ord('a'))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "8853": {"id": 8853, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18518": {"id": 18518, "code": "h = 3\nw = 7\nn = 10\nif h<w:\n\tw,h=h,w\nfrom math import ceil\nprint(ceil(n/h))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7009": {"id": 7009, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nx = 0\nfor i in range(n):\n    x = x + a[i]\nprint(\"Yes\" if x >= h else \"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "6587": {"id": 6587, "code": "from bisect import bisect_right\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nb.sort()\nc.sort()\nans = 0\nbcb_cum = [0] * (n+1)\nfor i in range(n):\n    bcb_cum[i+1] = bcb_cum[i] + n - bisect_right(c, b[i])\nfor x in a:\n    l = bisect_right(b, x)\n    ans += bcb_cum[n] - bcb_cum[l]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5675": {"id": 5675, "code": "N = 2\nif N%2==0:\n    page=N/2\nelse:\n    page=N/2+1\nprint(int(page))", "coverage": [">", ">", ">", "!", "!", ">"]}, "7936": {"id": 7936, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ng = 1\nwhile N > K + (K - 1) * (g - 1):\n    g += 1\nprint(g)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7197": {"id": 7197, "code": "h = 10;n = 3\na = [4, 5, 6]\na.sort(reverse=True)\nans = 'No'\nfor s in a:\n    h -= s\n    if h <= 0:\n        ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14204": {"id": 14204, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nc=1\nd=0\nfor i in range(n-1):\n  e=d+A[i+1]-A[i]\n  if (d<e and d<0) or (d>e and d>0):\n    c+=1\n    e=0\n  d=e\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "157": {"id": 157, "code": "s = \"codefestival\"\nk = 100\nans = \"\"\nfor si in s:\n  if si == \"a\":\n    ans += \"a\"\n    continue\n  num = ord(\"z\") - ord(si) + 1\n  if num <= k:\n    ans += \"a\"\n    k -= num\n  else:\n    ans += si\nif k > 0:\n  num = k % 26\n  if ord(ans[-1]) + num <= ord(\"z\"):\n    new_c = chr(ord(ans[-1]) + num)\n  else:\n    num -= ord(\"z\") - ord(ans[-1])\n    new_c = chr(ord(\"a\") - 1 + num)\n  print(ans[:-1] + new_c)\nelse:\n  print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!"]}, "17918": {"id": 17918, "code": "s = \"1700\"\nans = 0\nfor i in range(0,3,2):\n  if s[i] == \"0\" and s[i+1] == \"0\":\n    continue\n  elif s[i] == \"0\":\n    ans += i+1\n  elif (s[i] == \"1\" and s[i+1] == \"0\") or (s[i] == \"1\" and s[i+1] == \"1\") or (s[i] == \"1\" and s[i+1] == \"2\"):\n    ans += i+1\nif ans == 1:\n  print(\"MMYY\")\nelif ans == 3:\n  print(\"YYMM\")\nelif ans == 4:\n  print(\"AMBIGUOUS\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17270": {"id": 17270, "code": "a = \"D\";b = \"D\"\nif(a==b):print(\"H\")\nelse:print(\"D\")", "coverage": [">", ">", "!"]}, "17220": {"id": 17220, "code": "a = \"H\";b = \"H\"\nprint(['D', 'H'][a==b])", "coverage": [">", ">"]}, "13081": {"id": 13081, "code": "X = \"6\"\nprint('YES' if X == '7' or X == '5' or X == '3' in X else 'NO') ", "coverage": [">", ">"]}, "2532": {"id": 2532, "code": "n1 = 1;n2 = 2;n3 = 9;n4 = 1\nif {n1, n2, n3, n4} == {1, 9, 7, 4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "12002": {"id": 12002, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1==12 and M2==1 or M1+1==M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1440": {"id": 1440, "code": "n = 112\nq, mod = divmod(n,111)\nif mod == 0:\n    print(q*111)\nelse:\n    print((q+1)*111)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1836": {"id": 1836, "code": "N = 100;A = 100;B = 100\nans1 = B if A>B else A\nans2 = A+B-N if A+B-N >= 0 else 0\nprint(\"{} {}\".format(ans1, ans2))", "coverage": [">", ">", ">", ">"]}, "8494": {"id": 8494, "code": "N = 7\narray1 = [3, 3, 4, 5, 4, 5, 3]\narray2 = [5, 3, 4, 4, 2, 3, 2]\nma = 0\nfor i in range(N):\n    candy = sum(array1[:i+1])+sum(array2[i:])\n    ma = max(ma,candy)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12480": {"id": 12480, "code": "S = \"atcoder\"\nm = len(list(S)) // 2\nl = m + 1\nprint('Yes' if (S == S[::-1]) & (S[:m] == S[:m:][::-1]) & (S[l:] == S[l::][::-1]) else 'No')", "coverage": [">", ">", ">", ">"]}, "5377": {"id": 5377, "code": "N = 5\nans = N // 2\nans += 1 if N % 2 != 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "7060": {"id": 7060, "code": "h = 20;n = 3\na = [4, 5, 6]\nfor i in range(n):\n    h=h-a[i]\nif h<=0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "10677": {"id": 10677, "code": "import sys\nA = 1;B = 1;K = 1\nif A < B: \n    A, B = B, A\nwhile A%B != 0:\n    A,B = B,A%B\ncount = 0\nfor I in range(B,0,-1):\n    if B % I == 0:\n        count += 1\n    if count == K:\n        print(I)\n        break", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "47": {"id": 47, "code": "s = [0]\nK = 25\ni = 0\nwhile K > 0 and i < len(s)-1:\n    if s[i] != 0 and 26-s[i] <= K:\n        K -= 26-s[i]\n        s[i] = 0\n    else:\n        i += 1\ns[-1] = (s[-1]+K)%26 \nprint(*[chr(x+97) for x in s], sep = '')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "18597": {"id": 18597, "code": "h = 14\nw = 12\nn = 112\nprint(-n//max(h,w)*-1)", "coverage": [">", ">", ">", ">"]}, "11122": {"id": 11122, "code": "S = \"level\"\nN = len(S)\nsubS1 = S[:int((N - 1) / 2)]\nsubS2 = S[int((N + 3) / 2) - 1:]\nif subS1 == subS1[::-1] and subS2 == subS2[::-1] and S == S[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "8049": {"id": 8049, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nN -= K\nprint(math.ceil(N/(K-1))+1)", "coverage": [">", ">", ">", ">", ">"]}, "1839": {"id": 1839, "code": "n = 100;a = 100;b = 100\nmaxi=min(a,b)\nmini=a+b-n\nif a+b-n<=0:\n    mini=0\nprint(maxi,mini)", "coverage": [">", ">", ">", ">", "!", ">"]}, "15229": {"id": 15229, "code": "X = 100000;Y = 1;Z = 1\np = X - Z\na = Z+Y\nans = p//a\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3868": {"id": 3868, "code": "A = 64145;B = 123;C = 456\nprint((A-C)//(B+C))", "coverage": [">", ">"]}, "15891": {"id": 15891, "code": "a = 64146;b = 123;c = 456\nn=a//(b+c)\nm=a-n*(b+c)\nif m//c==1:\n    print(n)\nelse:\n    print(n-1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9081": {"id": 9081, "code": "a = 15;e = 36\nif e - a <= int(\"18\"):\n  print('Yay!')\nelse:\n  print(':(')", "coverage": [">", ">", "!", "!", ">"]}, "3796": {"id": 3796, "code": "X = 64145;Y = 123;Z = 456\nX -= Z\nprint(X//(Y+Z))", "coverage": [">", ">", ">"]}, "13374": {"id": 13374, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "2578": {"id": 2578, "code": "n = {1, 2, 9}\nif n == {1, 4, 7, 9}:\n\tprint('YES')\nelse:\n\tprint('NO')", "coverage": [">", ">", "!", "!", ">"]}, "16139": {"id": 16139, "code": "import bisect\nN = 5\nA = [2, 4, 6, 9, 11]\nm = A[-1]\ni = bisect.bisect_left(A, m/2)\nif i == 0:\n  print(m, A[0])\n  exit()\nif i == N-1:\n  print(m, A[-2])\n  exit()\na, b = A[i-1], A[i]\nif abs(a*2-m) > abs(b*2-m):\n  print(m, b)\nelse:\n  print(m, a)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", "!", "!"]}, "17813": {"id": 17813, "code": "S = 1700\nif 0 < S//100 < 13:\n    if 0 < S%100 < 13:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 0 < S%100 < 13:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12106": {"id": 12106, "code": "a = ['11', '30']\nb = ['12', '1']\nif a[0] != b[0]:\n\tprint(\"1\")\nelse:\n\tprint(\"0\") ", "coverage": [">", ">", ">", ">", "!", "!"]}, "18355": {"id": 18355, "code": "h = 2\nw = 100\nn = 200\nif h >= w:\n    print(-(-n//h))\nelse:\n    print(-(-n//w))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3811": {"id": 3811, "code": "X = 64145;Y = 123;Z = 456\nW = X - Z*2\nif W < Y:\n    print(0)\nelse:\n    W -= Y\n    ans = 1\n    ans += W // (Y+Z)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "5348": {"id": 5348, "code": "x = 2\nprint((x+1)//2)", "coverage": [">", ">"]}, "2157": {"id": 2157, "code": "N = 100;A = 100;B = 100\nmaxv = min(A, B)\nminv =  max(0, maxv - (N-max(A, B)))\nprint(maxv, minv)", "coverage": [">", ">", ">", ">"]}, "9572": {"id": 9572, "code": "y = \"2017\";m = \"01\";d = \"07\"\nprint(\"{}/{}/{}\".format(int(y)+1,m,d))", "coverage": [">", ">"]}, "8281": {"id": 8281, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\ndivide_number = K - 1\nother_number = N - 1\nanswer = 0\nanswer = other_number // divide_number\nif other_number % divide_number != 0:\n    answer += 1\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7907": {"id": 7907, "code": "from math import ceil\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nn=n-k\nc=1\nif(n>0):\n    c+=ceil(n/(k-1))\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5701": {"id": 5701, "code": "i = \"5\"\na = int(i)//2\nb = int(i)%2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "4761": {"id": 4761, "code": "s = \"xyz\"\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">"]}, "11481": {"id": 11481, "code": "s = \"SUN\"\na=[\"A\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nfor i in range(8):\n    if s==a[i]:\n        print(i)", "coverage": [">", ">", ">", ">", ">"]}, "15994": {"id": 15994, "code": "a1 = \"20 30\"\na2=[i for i in a1.split()]\na3,a4=[a2[i] for i in (0,1)]\nA,B=int(a3),int(a4)\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">", ">"]}, "13388": {"id": 13388, "code": "s = \"happy,newyear,enjoy\"\nl=\" \".join(s.split(\",\"))\nprint(l)", "coverage": [">", ">", ">"]}, "3960": {"id": 3960, "code": "x = 13;y = 3;z = 1\ns = z\ncnt = 0\nwhile True:\n    s += y + z\n    if s > x:\n        break\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18477": {"id": 18477, "code": "h = 14\nw = 12\nn = 112\na = max(h,w)\nprint(-(-n//a))", "coverage": [">", ">", ">", ">", ">"]}, "1562": {"id": 1562, "code": "N = 112\nfor i in range(10):\n    if int(str(i)*3) < N <= int(str(i+1)*3):\n        break\nprint(str(i+1)*3)", "coverage": [">", ">", ">", ">", ">"]}, "5569": {"id": 5569, "code": "n = 5\nprint((n+1)//2)", "coverage": [">", ">"]}, "5068": {"id": 5068, "code": "s = \"internationalization\"\ns_len = len(s)\nhead, tail = s[0], s[s_len - 1]\nprint(head + str(s_len - 2) + tail)", "coverage": [">", ">", ">", ">"]}, "4056": {"id": 4056, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh = (h2 * 60 + m2) - (h1 * 60 + m1)\nans = h - k\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "14154": {"id": 14154, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nli = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n       li.append('+')\n    elif A[i+1] - A[i] < 0:\n        li.append('-')\n    else:\n        pass\nans = 1\np = 0\nm = 0\nfor i in li:\n    if i == '+':\n        p = 1\n    elif i == '-':\n        m = 1\n    if p == 1 & m == 1:\n        ans += 1\n        p = 0\n        m = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12864": {"id": 12864, "code": "X = 5\nans=[3,5,7]\nif X in ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "90": {"id": 90, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n    if s[i] == \"a\":\n        continue\n    c = ord(s[i]) - ord(\"a\")\n    if k >= (26 - c):\n        k -= 26 - c\n        s[i] = \"a\"\ns[-1] = chr(((ord(s[-1]) - ord(\"a\")) + k) % 26 + ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4385": {"id": 4385, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nans = 0\nif M1 <= M2:\n    ans = (H2-H1) * 60 + M2 - M1 - K\nelse:\n    ans = (H2-H1-1) * 60 + (60-M1) + M2 - K\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "9001": {"id": 9001, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif abs(a - e) > k:\n    print(':(')\nelse:\n    print('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6631": {"id": 6631, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncount = 0\nA.sort()\nC.sort()\nfor i in B:\n    t = bisect.bisect_left(A,i)\n    s = N - bisect.bisect_right(C,i)\n    count += t*s\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13392": {"id": 13392, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint('{} {} {}'.format(a, b, c))", "coverage": [">", ">"]}, "3026": {"id": 3026, "code": "S = \"1111111111\"\nL = len(S)\nres = float(\"inf\")\nfor i in range(L-2):\n    res = min(abs(int(S[i:i+3]) - 753), res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12298": {"id": 12298, "code": "s = \"akasaka\"\nflag = 1\nl = len(s)\nfor i in range((l-1)//2):\n    if s[i] == s[(l-1)//2 - 1-i]:\n        continue\n    else:\n        flag = 0\n        break\nif s[:(l-1)//2] != s[(l+3)//2-1:]:\n    flag = 0\nprint(\"Yes\" if flag == 1 else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "15503": {"id": 15503, "code": "X = 13;Y = 3;Z = 1\ncount=0\nwhile(X>=Y+2*Z):\n  count+=1\n  X-=Y+Z\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6589": {"id": 6589, "code": "import sys\nimport bisect\ninput = sys.stdin.buffer.readline\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA_B = [0] * n\nB_C = [0] * n\nans = 0\nfor idx, a in enumerate(A):\n    A_B[idx] = bisect.bisect_right(B, a)\nfor idx, b in enumerate(B):\n    B_C[idx] = n - bisect.bisect_right(C, b)\ncul_sum = [0] * (n + 1)\nfor i in range(1, n + 1):\n    cul_sum[i] = cul_sum[i - 1] + B_C[i - 1]\nfor idx in A_B:\n    ans += cul_sum[n] - cul_sum[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19073": {"id": 19073, "code": "import sys\ninput = sys.stdin.readline\nn = 5;x = 1;res = 0\nif n & 1: print(0)\nelse:\n    n //= 2\n    while x < n:\n        x *= 5\n        res += n // x\n    print(res)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16185": {"id": 16185, "code": "import bisect\nn = 5\nlis = [6, 9, 4, 2, 11]\nlis.sort()\nmid = (lis[-1] + 1) // 2\np = bisect.bisect_left(lis, mid)\nx = abs(lis[p] - mid)\ny = abs(lis[p-1] - mid)\nif x >= y:\n    print(lis[-1], lis[p-1])\nelse:\n    print(lis[-1], lis[p])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5080": {"id": 5080, "code": "S = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(S[0]+str(len(S)-2)+S[len(S)-1])", "coverage": [">", ">"]}, "1828": {"id": 1828, "code": "N = 10;A = 3;B = 5\nli = [A, B]\nif sum(li)<=N:\n  a = 0\nelse:\n  a = sum(li)-N\nprint(min(li),a)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12907": {"id": 12907, "code": "x = 6\nif [7,5,3].count(x) > 0:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "11924": {"id": 11924, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nl=[31,28,31,30,31,30,31,31,30,31,30,31]\nif D2==1:\n print(\"1\")\nelse:\n print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10620": {"id": 10620, "code": "A = 1;B = 1;K = 1\nc = []\nfor i in range(1,max(A,B)+1):\n  if A % i == 0 and B % i ==0:\n    c.append(i)\nc = c[::-1]\nprint(c[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15511": {"id": 15511, "code": "X = 12;Y = 3;Z = 1\ns=Z\nc=0\nwhile True:\n  s+=Y+Z\n  if s>X:\n    break\n  c+=1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18240": {"id": 18240, "code": "H = 3\nW = 7\nN = 10\nK=H\nif K<W: K=W\nsum = 0\nans= 0\nfor i in range(1,K+1):\n  if sum < N:\n    sum += K\n    ans = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1568": {"id": 1568, "code": "n = 750\nfor i in range(n,1000):\n    s=str(i)\n    if s[0]==s[1]==s[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "4102": {"id": 4102, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nstart = 60 * H1 + M1\nend = 60 * H2 + M2\nprint((end - K) - start)", "coverage": [">", ">", ">", ">"]}, "73": {"id": 73, "code": "s = \"a\"\nK = 25\nans = []\nfor ch in s:\n    v = ord(\"a\") + 26 - ord(ch)\n    if ch != \"a\" and v <= K:\n        K -= v\n        ans.append(\"a\")\n    else:\n        ans.append(ch)\nif K > 0:\n    ans[-1] = chr(ord(ans[-1]) + K % 26)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "7091": {"id": 7091, "code": "h = 10;a = 3\nA = [4, 5, 6]\nif sum(A) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12075": {"id": 12075, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nok = False\nif d1+1 != d2:\n    ok = True\nif ok:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "7682": {"id": 7682, "code": "h = 20;n = 3\na = [4, 5, 6]\nb=sum(a)\nif (b>=h):\n    print('Yes')\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7414": {"id": 7414, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11247": {"id": 11247, "code": "S = \"SUN\"\nL = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nans = 7 - L.index(S)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8938": {"id": 8938, "code": "n = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1383": {"id": 1383, "code": "a = 111\nfor i in range(10):\n  if i * 111 >= a:\n    print(i * 111)\n    break\n  else:\n    continue", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4511": {"id": 4511, "code": "a = \"smiles\"\nprint(f\"{a[0]}{len(a)-2}{a[len(a)-1]}\")", "coverage": [">", ">"]}, "13949": {"id": 13949, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nup = False\ndown = False\nprev = a.pop(0)\nfor i in a:\n    if (not up) and (not down):\n        if prev < i:\n            up = True\n        elif prev > i:\n            down = True\n    elif up:\n        if prev > i:\n            ans += 1\n            up = False\n    elif down:\n        if prev < i:\n            ans += 1\n            down = False\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16870": {"id": 16870, "code": "a = \"D\";b = \"H\"\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'H' and b == 'D':\n    print('D')\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6436": {"id": 6436, "code": "from bisect import bisect_left\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    ans += bisect_left(A, b) * (N - bisect_left(C, b + 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12355": {"id": 12355, "code": "S = \"level\"\nN = len(S)\ns = S[:(N-1)//2]\nt = S[(N+3)//2-1:]\nif s == t[::-1] and s == s[::-1] and t == t[::-1]:\n  ans = \"Yes\"\nelse:\n  ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11578": {"id": 11578, "code": "arr=['MON','TUE','WED','THU','FRI','SAT','SUN']\ns = \"SUN\"\nif s=='SUN':\n    print (7)\nelse:\n    k=arr.index(s)\n    print (6-k)", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "11923": {"id": 11923, "code": "m = 11;d = 30\nn = 12;e = 1\nprint(1 if m!=n else 0)", "coverage": [">", ">", ">"]}, "8145": {"id": 8145, "code": "N = 3;K = 3\nA = [1, 2, 3]\nans = 0\ni = 0\nwhile True:\n    if i*(K-1) >= N-1:\n        break\n    ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9644": {"id": 9644, "code": "N = 3\nS = ['(', ')', ')']\nd = []\nfor i in range(N+1):\n    partial = S[:i]\n    d.append(partial.count('(') - partial.count(')'))\na = -min(d)\nb = d[-1]\nprint('(' * a + \"\".join(S) + ')' * (b + a))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9469": {"id": 9469, "code": "S = \"2017/01/31\"\nZ = S.replace('2017', '2018')\nprint (Z)", "coverage": [">", ">", ">"]}, "2272": {"id": 2272, "code": "N = 10;A = 3;B = 5\nM = min(A,B)\nm = A + B - N\nif m < 0:\n    m = 0\nprint(M,m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "14058": {"id": 14058, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\naset=set(a)\nans=1\nif len(aset)>1:\n    num1=a[0]\n    num2=a[1]\n    num3=2 \n    if num1<num2:\n        num3=1\n    if num1>num2:\n        num3=0\n    for i in range(len(a)-2):\n        num=a[2+i]\n        if num3==2 and num2>num:\n            num3=0\n        if num3==2 and num2<num:\n            num3=1\n        if num3==0 and num2<num:\n            ans+=1\n            num3=2\n        if num3==1 and num2>num:\n            ans+=1\n            num3=2\n        num2=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18678": {"id": 18678, "code": "from math import ceil\nh = 14\nw = 12\nn = 112\nif h >= w:\n    print(ceil(n/h))\nelse:\n    print(ceil(n/w))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12690": {"id": 12690, "code": "l=[1,1,1,0,1,0,1,0,1,1]\nprint(\"YNEOS\"[l[int(\"5\")]::2])", "coverage": [">", ">"]}, "9634": {"id": 9634, "code": "n = 6\ns = \")))())\"\nl = []\nleft, right = 0, 0\nfor c in s:\n    if c == ')':\n        if l == []:\n            left += 1\n        else:\n            l.pop()\n    else:\n        l.append(1)\nright = len(l)\nprint('(' * left + s + ')' * right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "6353": {"id": 6353, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor i in range(N):\n    idxa=bisect_left(A,B[i])\n    idxc=bisect_right(C,B[i])\n    ans+=idxa*(N-idxc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6803": {"id": 6803, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nans = 'Yes' if H<=sum(A) else 'No'\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8472": {"id": 8472, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandy = []\nfor n in range(N):\n    candy.append(sum(A1[:n+1]) + sum(A2[n:]))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6032": {"id": 6032, "code": "N = 2\ndiv,mod=divmod(N,2)\nprint(div+mod)", "coverage": [">", ">", ">"]}, "8199": {"id": 8199, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(1 if n <= k else 1 + -(-(n - k) // (k - 1)))", "coverage": [">", ">", ">"]}, "18561": {"id": 18561, "code": "from sys import stdin\nH = 14\nW = 12\nN = 112\nprint((N-1)//max(H, W) + 1)", "coverage": [">", ">", ">", ">", ">"]}, "17619": {"id": 17619, "code": "s = \"1905\"\nhead = int(s[:2])\ntail = int(s[2:])\nis_mmyy = False\nis_yymm = False\nif 1 <= head <= 12:\n    is_mmyy = True\nif 1 <= tail <= 12:\n    is_yymm = True\nif is_yymm and is_mmyy:\n    print('AMBIGUOUS')\nelif is_yymm:\n    print('YYMM')\nelif is_mmyy:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "14326": {"id": 14326, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncounter=1\nres=0\nfor i in range(len(A)-1):\n    if (A[i+1]<A[i] and res>0) or (A[i+1]>A[i] and res<0):\n        counter+=1\n        res=0\n    elif A[i+1]!=A[i]:\n        res=A[i+1]-A[i]\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16444": {"id": 16444, "code": "n = 2\narr = [100, 0]\ni = max(arr)\narr.remove(i)\nj = min(arr, key=lambda a: abs(i/2-a))\nprint(i, j)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2365": {"id": 2365, "code": "a = 4;b = 3\nc = a * (a-1)/2\nd = b*(b-1)/2\nres = int(c+d)\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "18856": {"id": 18856, "code": "N = 2;x = 0\nvalues = map(int, \"5 5\".split())\ncount = 0\nv1 = next(values)\nfor v2 in values:\n    surplus = max(v1 + v2 - x, 0)\n    count += surplus\n    v1 = max(0, v2 - surplus)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6693": {"id": 6693, "code": "a = 210;b = 5\nn = [31, 41, 59, 26, 53]\nif sum(n) >= a:\n  print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", ">", "!"]}, "5107": {"id": 5107, "code": "S = \"internationalization\"\na=S[0]\nb=S[-1]\nc=len(S)-2\nt=a+'%s' %c +b\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17156": {"id": 17156, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    answer = b\nelif b == \"H\":\n    answer = \"D\"\nelse:\n    answer = \"H\"\nprint(answer)", "coverage": [">", ">", "!", ">", ">", "!", "!", ">"]}, "11574": {"id": 11574, "code": "S = \"SUN\"\nif S=='SUN':\n    print(int(7-0))\nelif S=='MON':\n    print(int(7-1))\nelif S=='TUE':\n    print(int(7-2))\nelif S=='WED':\n    print(int(7-3))\nelif S=='THU':\n    print(int(7-4))\nelif S=='FRI':\n    print(int(7-5))\nelif S=='SAT':\n    print(int(7-6))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "237": {"id": 237, "code": "s = \"a\";k = 25\nans = []\na = ord('z') + 1\nfor i in s:\n    if k == 0:\n        ans.append(ord(i))\n    elif a - ord(i) <= k and i != 'a':\n        k -= a - ord(i)\n        ans.append(ord('a'))\n    else:\n        ans.append(ord(i))\nans[-1] += k % 26\nif ans[-1] >= a:\n    ans[-1] -= 26\nprint(*map(chr, ans), sep='')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", "!", ">"]}, "5793": {"id": 5793, "code": "pages = 100\npapers=pages/2\nres=int(papers)\nif pages%2==0:\n    print(res)\nelse:\n    print(res+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5522": {"id": 5522, "code": "N = 2\nanswer = N / 2 if N % 2 == 0 else int(N / 2) + 1\nprint(int(answer))", "coverage": [">", ">", ">"]}, "2558": {"id": 2558, "code": "a = 1;b = 7;c = 9;d = 4\nprint(\"YES\" if {1,9,7,4} == set([a,b,c,d])else \"NO\")", "coverage": [">", ">"]}, "9115": {"id": 9115, "code": "y = \"2017\";m = \"01\";d = \"31\"\ns = \"2018\" + \"/\" + m + \"/\" + d\nprint(s)", "coverage": [">", ">", ">"]}, "18736": {"id": 18736, "code": "H = 3\nW = 7\nN = 10\nprint((N+max(H,W)-1)//max(H,W));", "coverage": [">", ">", ">", ">"]}, "4732": {"id": 4732, "code": "word = \"internationalization\"\nn=len(word)\nprint(word[0]+str(n-2)+word[n-1])", "coverage": [">", ">", ">"]}, "5740": {"id": 5740, "code": "n = 5\nif n % 2 == 0:\n    b = n // 2\nelse:\n    b = n // 2 + 1\nprint(b)", "coverage": [">", ">", "!", "!", ">", ">"]}, "6137": {"id": 6137, "code": "import sys\nreadline = sys.stdin.readline\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nimport bisect\nfor i in range(len(B)):\n  ind_a = bisect.bisect_left(A, B[i])\n  ind_c = bisect.bisect_right(C, B[i])\n  ans += ind_a * (len(C) - ind_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4035": {"id": 4035, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nm1 = 60*H1 + M1\nm2 = 60*H2 + M2\nprint(m2-m1-K)", "coverage": [">", ">", ">", ">"]}, "11962": {"id": 11962, "code": "M_1 = 11;D_1 = 16\nM_2 = 11;D_2 = 17\nif (M_1 != M_2):\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "2500": {"id": 2500, "code": "s = {'9', '2', '1'}\na = {'1','9','7','4'}\ns = s&a\nif len(s) == 4:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4548": {"id": 4548, "code": "w = \"xyz\"\nprint(w[0] + str(len(w)-2) + w[-1])", "coverage": [">", ">"]}, "9280": {"id": 9280, "code": "S = \"2017/01/07\"\nif '2017/01/' == S[:8]:\n    print('2018/01/{}'.format(S[8:]))", "coverage": [">", ">", ">"]}, "19335": {"id": 19335, "code": "N = 10\nprint(N+N%2*N)", "coverage": [">", ">"]}, "11794": {"id": 11794, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 != M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15424": {"id": 15424, "code": "x = 13;y = 3;z = 1\nseated = z\ncnt = 0\nwhile True:\n    seated += (y + z)\n    if(seated > x):\n        break\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6225": {"id": 6225, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\no = []\np = []\ni = 0\nk = 0\nfor j in range(N):\n    while i < N and A[i] < B[j]:\n        i = i + 1\n    o.append(i)\n    while k < N and B[j] >= C[k]:\n        k = k + 1\n    p.append(N-k)\nsum = 0\nfor x in range(N):\n    sum = sum + o[x] * p[x]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16710": {"id": 16710, "code": "input1 = ['H', 'H']\na = input1[0]\nb = input1[1]\nif a == \"H\":\n  if b == \"H\":\n    print(\"H\")\n  else:\n    print(\"D\")\nelse:\n  if b == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4039": {"id": 4039, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif h1 > h2:\n    h2 +=24\nh = h2 - h1\nm = m2 - m1\nif m < 0:\n    m = m + 60\n    h = h - 1\ntime = h*60 + m \nprint(time - k)", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "379": {"id": 379, "code": "s = \"codefestival\"\nK = 100\nns=len(s)\nls=list(s)\nfor i in range(ns):\n    if K==0:\n        break\n    if ls[i]==\"a\":\n        continue\n    toa=ord(\"z\")+1-ord(ls[i])\n    if toa<=K:\n        ls[i]=\"a\"\n        K-=toa\nls[-1]=chr(ord(ls[-1])+K%26)\nans=\"\".join(ls)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16960": {"id": 16960, "code": "a = \"D\";b = \"H\"\nif a == b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", "!", "!", ">"]}, "18162": {"id": 18162, "code": "s = \"0112\"\nv=0\nfor i in range(4):\n    v = v*10+int(s[i])\nv1 = v//100\nv2 = v%100\nif 12>=v1>=1 and 12>=v2>=1:\n    print(\"AMBIGUOUS\")\nelif (v1>=13 or v1==0) and 12>=v2>=1:\n    print(\"YYMM\")\nelif (v2>=13 or v2==0) and 12>=v1>=1:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7724": {"id": 7724, "code": "from math import ceil\na = 4;b = 3\nc = \"2 3 1 4\"\nprint(ceil((a-1)/(b-1)))", "coverage": [">", ">", ">", ">"]}, "16034": {"id": 16034, "code": "a = 12;b = 4\nres = a - b * 2\nif res < 0:\n    print(0)\nelse:\n    print(res)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4417": {"id": 4417, "code": "text = \"internationalization\"\nprint(text[0] + str(len(text)-2) + text[-1])", "coverage": [">", ">"]}, "13624": {"id": 13624, "code": "first = \"abcde\";middle = \"fghihgf\";last = \"edcba\"\nprint(first, middle, last)", "coverage": [">", ">"]}, "18160": {"id": 18160, "code": "s = \"1700\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a and a <= 12 and 1<= b and b <=12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <=12 and (12 < b or b < 1):\n    print(\"MMYY\")\nelif (12 < a or a < 1) and 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "3158": {"id": 3158, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    num = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n    if ans > abs(753-num):\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "28": {"id": 28, "code": "s = \"xyz\"\nl = len(s)\nn = 4\nans = [\"A\"]*l\nfor i in range(l-1):\n  if s[i]==\"a\":\n    ans[i]=\"a\"\n    continue\n  temp = ord(\"z\")-ord(s[i])+1\n  if temp <= n:\n    n-=temp\n    ans[i]=\"a\"\n  else:\n    ans[i]=s[i]\nlast = ord(s[l-1])+n\nwhile last>ord(\"z\"):\n  last-=26\nans[l-1]=chr(last)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "1468": {"id": 1468, "code": "n = 111\nl = list(range(111,1000,111))\nif n % 111 == 0:\n    print(n)\nelse:\n    print(l[n // 111])", "coverage": [">", ">", ">", ">", "!", "!"]}, "8092": {"id": 8092, "code": "import math\nn,k=map(int,\"8 3\".split());\"7 3 1 8 4 6 2 5\";print([math.ceil((n-k)/(k-1))+1,1][n==k])", "coverage": [">", ">"]}, "7692": {"id": 7692, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nh = 211;n = 5\na = [31, 41, 59, 26, 53]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18294": {"id": 18294, "code": "H = 14\nW = 12\nN = 112\nif H<=W: big=W\nelse: big=H\nif N%big==0: ans=N//big\nelse: ans=N//big+1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "8966": {"id": 8966, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif b-a<=k and c-b<=k and d-c<=k and e-d<=k and c-a<=k and d-a<=k and e-a<=k and d-b<=k and e-b<=k and e-c<=k:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7113": {"id": 7113, "code": "h = 210;n = 5\nprint('Yes' if sum(map(int, \"31 41 59 26 53\".split()))>=h else 'No' )", "coverage": [">", ">"]}, "11148": {"id": 11148, "code": "a = \"atcoder\"\nl = len(a)\nm = a[:l//2]\nn = a[l//2 + 1 :]\nif a[::-1] == a and m == m[::-1] and n == n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18599": {"id": 18599, "code": "import math\nH = 3\nW = 7\nN = 10\nif H >= W:\n    print(math.ceil(N / H))\nelse:\n    print(math.ceil(N / W))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "2585": {"id": 2585, "code": "a = {1, 4, 9, 7}\nprint('YES' if 1 in a and 9 in  a and 7 in a and 4 in a else 'NO')", "coverage": [">", ">"]}, "15773": {"id": 15773, "code": "X = 13;Y = 3;Z = 1\nans=0\nwhile ans*Y+(ans+1)*Z<=X:\n    ans+=1\nprint(ans-1)", "coverage": [">", ">", ">", ">", ">"]}, "4412": {"id": 4412, "code": "s = \"smiles\"\nprint(\"{}{}{}\".format(s[0], len(s) - 2, s[-1]))", "coverage": [">", ">"]}, "1405": {"id": 1405, "code": "N = \"750\"\nmax_digit = N[0]\nmin_tmp = ''\nmax_tmp = ''\nfor i in range(len(N)):\n    min_tmp += max_digit\n    max_tmp += str(int(max_digit) + 1)\nif  int(min_tmp) >= int(N):\n    print(min_tmp)\nelse:\n    print(max_tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9310": {"id": 9310, "code": "S = \"2017/01/07\"\nS_changed = S[:3] + \"8\" + S[4:]\nprint(S_changed)", "coverage": [">", ">", ">"]}, "2775": {"id": 2775, "code": "s = \"1111111111\"\nm = 1000\nfor i in range(len(s) - 2):\n\tif abs(int(s[i:i+3]) - 753) <=m:\n\t\tm = abs( int(s[i:i+3]) -753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15253": {"id": 15253, "code": "x = 64145;y = 123;z = 456\nc = x // (y + z)\nd = x % (y + z)\nif d >= z:\n    print(c)\nelse:\n    print(c - 1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13512": {"id": 13512, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5]+\" \"+s[6:13]+\" \"+s[14:])", "coverage": [">", ">"]}, "5198": {"id": 5198, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nx=int(len(s))\nprint(s[0],x-2,s[x-1],sep=\"\")", "coverage": [">", ">", ">"]}, "12077": {"id": 12077, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nend = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nif d1 == end[m1-1]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13336": {"id": 13336, "code": "s = \"abcde,fghihgf,edcba\"\ns=s.replace(',',' ')\nprint(s)", "coverage": [">", ">", ">"]}, "15163": {"id": 15163, "code": "X = 64146;Y = 123;Z = 456\nisu = X - Z\nhito = Y + Z\nprint(isu // hito)", "coverage": [">", ">", ">", ">"]}, "16887": {"id": 16887, "code": "a = \"H\";b = \"H\"\nif a == b:\n    TopCoDeer = 'H'\nelse:\n    TopCoDeer = 'D'\nprint(TopCoDeer)", "coverage": [">", ">", ">", "!", "!", ">"]}, "6111": {"id": 6111, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nans=0\nind=[0]\nfor i in range(n):\n  ind.append(n-bisect.bisect_right(c,b[i])+ind[i])\nfor i in a:\n  b_ind=bisect.bisect_right(b,i)\n  ans+=ind[n]-ind[b_ind]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3287": {"id": 3287, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 20;B = 30\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "11881": {"id": 11881, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(int(M1!=M2))", "coverage": [">", ">", ">"]}, "2135": {"id": 2135, "code": "N = 10;A = 7;B = 5\nmaxv = min(A, B)\nif A+B-N >= 0:\n    minv = A+B-N\nelse:\n    minv = 0\nprint(maxv, minv)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17962": {"id": 17962, "code": "S = \"0112\"\na = int(S[0:2])\nb = int(S[2:])\nif 1 <= a <= 12 and a <= b <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n  print(\"MMYY\")\nelif 1 <= b <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "1105": {"id": 1105, "code": "n = 750\nl = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nfor i in l:\n    if n<=i:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "10279": {"id": 10279, "code": "n = 8\nN = \"))))((((\"\nL = 0\nR = 0\nnum = 0\nfor c in N:\n    if c == '(':\n        num += 1\n    else:\n        if num:\n            num -= 1\n        else:\n            L += 1\nR = num\nprint('('*L+N+')'*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "19179": {"id": 19179, "code": "n = 12\ncnt=0\nif n%2==0:\n    for i in range(1,30):\n        cnt+=n//((5**i)*2)\n    print(cnt)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "19180": {"id": 19180, "code": "n = 5\ncnt=0\nif n%2==0:\n    for i in range(1,30):\n        cnt+=n//((5**i)*2)\n    print(cnt)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "13497": {"id": 13497, "code": "s = \"haiku,atcoder,tasks\"\ns1, s2, s3 = s.split(\",\")\nprint(s1, s2, s3)", "coverage": [">", ">", ">"]}, "8686": {"id": 8686, "code": "N = 1\nA1 = [2]\nA2 = [3]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "17635": {"id": 17635, "code": "S = \"0112\"\nl,r = int(S[:2]),int(S[2:])\nif 1 <= l <= 12 and 1 <= r <= 12:\n\tprint(\"AMBIGUOUS\")\nelif 1<=r<=12:\n\tprint(\"YYMM\")\nelif 1<=l<=12:\n\tprint(\"MMYY\")\nelse:\n\tprint(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3939": {"id": 3939, "code": "x = 12;y = 3;z = 1\nn = z\ncnt = 0\nwhile n + (y + z) <= x:\n  n += (y + z)\n  cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15858": {"id": 15858, "code": "x = 64146;y = 123;z = 456\nprint(len(range(z+y,x-z+1,z+y)))", "coverage": [">", ">"]}, "16037": {"id": 16037, "code": "from sys import stdin\nA = 12;B = 4\nif A > 2*B:\n    print(A - 2*B)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "531": {"id": 531, "code": "s = ['a']\nk = 25\nn = len(s)\nalph_map = {chr(ord('a') + i): (26 - i) % 26 for i in range(26)}\nfor i in range(n):\n    if k >= alph_map[s[i]]:\n        k -= alph_map[s[i]]\n        s[i] = 'a'\nif k > 0:\n    s[n-1] = chr((ord(s[n-1]) + k % 26) % 123)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15469": {"id": 15469, "code": "x = 13;y = 3;z = 1\nans = 0\nwhile (y + z) * ans <= (x - z):\n    ans += 1\nprint(ans-1)", "coverage": [">", ">", ">", ">", ">"]}, "9775": {"id": 9775, "code": "n = 3\ns = \"())\"\nR, L = 0, 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        R += 1\n    else:\n        if R:\n            R -= 1\n        else:\n            L += 1\nprint('('*L + s + ')'*R)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "16880": {"id": 16880, "code": "a = \"D\";b = \"D\"\nif a!=b:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", "!", "!", ">"]}, "2660": {"id": 2660, "code": "if sorted(list(map(int,\"1 7 9 4\".split())))==[1,4,7,9]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!"]}, "5630": {"id": 5630, "code": "n = 2\nprint(-(-n//2))", "coverage": [">", ">"]}, "2855": {"id": 2855, "code": "s = \"35753\"\nn = len(s)\nans = float(\"inf\")\nfor i in range(n-2):\n    ans = min(ans,abs(eval(s[i:i+3])-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9130": {"id": 9130, "code": "s = \"2017/01/07\"\nx = s[:3] + \"8\" + s[4:]\nprint(x)", "coverage": [">", ">", ">"]}, "10359": {"id": 10359, "code": "a = 1;b = 1;k = 1\nc = [1]\nfor i in range(min(a, b), 0, -1):\n    if a % i == 0 and b % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5953": {"id": 5953, "code": "N = 5\nif N % 2 == 0:\n    ans = N // 2\nelse:\n    ans = N // 2 + 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "6637": {"id": 6637, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor i in range(n):\n    num = b[i]\n    x = bisect.bisect_left(a, num)\n    y = bisect.bisect_right(c, num)\n    ans += x * (n - y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17915": {"id": 17915, "code": "S = \"1700\"\nif 0 < int(S[:2]) < 13 and 0 < int(S[2:]) < 13:\n    print('AMBIGUOUS')\nelif 0 < int(S[:2]) < 13:\n    print('MMYY')\nelif 0 < int(S[2:]) < 13:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "19117": {"id": 19117, "code": "N = 5\nif N % 2 == 1:\n  print(0)\nelse:\n  rlt = 0\n  i = 10\n  while N // i > 0:\n    rlt += N // i\n    i *= 5\n  print(rlt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "13907": {"id": 13907, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nvec=0\nfor i in range(N-1):\n  now=A[i+1]-A[i]\n  if vec*now<0:\n    ans+=1\n    vec=0\n  elif vec==0:\n    vec=now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7440": {"id": 7440, "code": "H = 20;N = 3\nAs = [4, 5, 6]\nsumA = sum(As)\nif sumA >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12191": {"id": 12191, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1!=m2:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12850": {"id": 12850, "code": "X = 5\nl = [3,5,7]\nif X in l:\n  r = 'YES'\nelse:\n  r = 'NO'\nprint(r)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7865": {"id": 7865, "code": "from math import ceil\nn = 3;k = 3\na = [1, 2, 3]\nm = a.index(1)\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "11795": {"id": 11795, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 != M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "8307": {"id": 8307, "code": "N = 8;K = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\ncnt = 1\nans = K\nwhile ans < N:\n    cnt += 1\n    ans += K-1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15407": {"id": 15407, "code": "a = \"100000\";b = \"1\";c = \"1\"\na=int(a)\nb=int(b)\nc=int(c)\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">"]}, "8101": {"id": 8101, "code": "import math\ntotal = 0\nN = 8;M = 3\nM = M-1\nn_l = \"73184625\"\nA = n_l.find(\"1\")\nbefore = A\nafter = N-A-1\nwhile before > 0:\n    before-=M\n    total +=1\nif before < 0:\n    before = abs(before)\n    after -= before\nwhile after > 0:\n    after-=M\n    total +=1\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "17404": {"id": 17404, "code": "s = \"0112\"\nsb = s[:2]\nsa = s[2:]\nif 1<=int(sb)<=12 and (13 <= int(sa) or int(sa)==0):\n    print('MMYY')\nelif 1<=int(sa)<=12 and (13 <= int(sb) or int(sb)==0):\n    print('YYMM')\nelif 1<=int(sb)<=12 and 1<=int(sb)<=12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "17238": {"id": 17238, "code": "a = \"H\";b = \"H\"\nchar_honest = \"H\"\nchar_dishonest = \"D\"\nif a == char_honest:\n    if b == char_honest:\n        print(char_honest)\n    else:\n        print(char_dishonest)\nelse:\n    if b == char_honest:\n        print(char_dishonest)\n    else:\n        print(char_honest)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "10186": {"id": 10186, "code": "n = 8\ns = \"))))((((\"\nminv = 0\nscore = 0\nfor i in range(n):\n    if s[i] == '(':\n        score += 1\n    else:\n        score -= 1\n    minv = min(minv, score)\nans = \"\"\nfor i in range(0, -minv):\n    ans += \"(\"\nans += s\nfor i in range(0, score-minv):\n    ans += \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15833": {"id": 15833, "code": "X = 12;Y = 3;Z = 1\nsum = 0\nfor i in range(1,X):\n    if sum > X:\n        ans = i-2\n        break\n    if sum == X:\n        ans = i-1\n        break\n    else:\n        sum = Y*i+Z*(i+1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14656": {"id": 14656, "code": "N = 1;P = 1\nA = [50]\nsu = 2 ** N\nguusu = True\nfor a in A:\n    if a % 2 == 1:\n        guusu = False\n        break\nif P == 0:\n    print(su if guusu else su//2)\nelse:\n    print(0 if guusu else su//2)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "2464": {"id": 2464, "code": "print('YES' if sorted(list(map(int, \"1 2 9 1\".split())))\n      == [1, 4, 7, 9] else 'NO')", "coverage": [">", ">"]}, "6357": {"id": 6357, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (n - bisect.bisect(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4106": {"id": 4106, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nT1 = 60 * H1 + M1\nT2 = 60 * H2 + M2\nprint(T2 - K - T1)", "coverage": [">", ">", ">", ">"]}, "2086": {"id": 2086, "code": "n = 10;a = 3;b = 5\nans = []\nans.append(min(a,b))\nans.append(max(0,a+b-n))\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "16124": {"id": 16124, "code": "a = 20;b = 30\nif a <= b or a - (b * 2) <= 0:\n    print(\"0\")\nelse:\n    print(a - (b * 2))", "coverage": [">", ">", ">", "!", "!"]}, "5826": {"id": 5826, "code": "n = 100\na = n//2 if n%2==0 else (n//2)+1\nprint(a)", "coverage": [">", ">", ">"]}, "5135": {"id": 5135, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nc = int(len(s)) - 2\nprint(s[0] + str(c) + s[-1])", "coverage": [">", ">", ">"]}, "6456": {"id": 6456, "code": "from bisect import bisect\nfrom collections import deque\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nBC_ruiseki = deque([0])\nfor i, b in enumerate(B):\n  BC_ruiseki.append(BC_ruiseki[i] + N - bisect(C, b))\nans = 0\nfor a in A:\n  idx = bisect(B, a)\n  ans += BC_ruiseki[-1] - BC_ruiseki[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7965": {"id": 7965, "code": "import math\nn = 3;k = 3;a = [1, 2, 3]\nprint([math.ceil((n-k)/(k-1))+1,1][n==k])", "coverage": [">", ">", ">"]}, "19016": {"id": 19016, "code": "n = 5\nres = 0\nif n % 2 == 0:\n  for i in range(1,30):\n    p = n // (5 ** i)\n    if p % 2 == 1:\n      res += (p-1) // 2\n    else:\n      res += p // 2\nprint(res)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "17122": {"id": 17122, "code": "S = \"D 0\"\nS = S.replace('D','1')\nS_list = list(map(int,S.split()))\nif  S_list[0] ^ S_list[1] == 0 :\n    result = \"H\"\nelse:\n    result = \"D\"\nprint(result)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "15235": {"id": 15235, "code": "a = 64146;s = 123;d = 456\nprint((a-d)//(s+d))", "coverage": [">", ">"]}, "14998": {"id": 14998, "code": "n = 2;p = 0\na = [1, 3]\nif all(i%2==0for i in a):print(0 if p%2else 2**n)\nelse:print(2**(n-1))", "coverage": [">", ">", ">", ">"]}, "9979": {"id": 9979, "code": "N = 8\nS = \"))))((((\"\nnS = S\nfor i in range(50):\n    nS = nS.replace(\"()\", \"\")\nr = nS.count(\")\")\nl = nS.count(\"(\")\nprint(\"(\" * r + S + \")\" * l)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2955": {"id": 2955, "code": "s = \"1234567876\"\nm=float('inf')\nfor i in range(len(s)-2):\n    v=int(s[i:i+3])\n    m=min(m,abs(753-v))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11269": {"id": 11269, "code": "ls = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7 - ls.index(str(\"SUN\")))", "coverage": [">", ">"]}, "1419": {"id": 1419, "code": "n = 112\nwhile(1):\n  a=str(n)\n  if a.count(a[0])==3:\n    break\n  n+=1\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1891": {"id": 1891, "code": "n = 10;a = 3;b = 5\nprint(\"{} {}\".format(min(a, b), max(a + b - n, 0)))", "coverage": [">", ">"]}, "14181": {"id": 14181, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc=1\ng=0\nfor i in range(n-1):\n  if (g==1 and a[i+1]<a[i]) or (g==-1 and a[i+1]>a[i]) :\n    c+=1\n    g=0\n  elif g==0:\n    if a[i+1]>a[i]:\n      g=1\n    elif a[i+1]<a[i]:\n      g=-1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6505": {"id": 6505, "code": "import bisect\nN = 6\na = map(int, \"3 14 159 2 6 53\".split(\" \"))\nb = map(int, \"58 9 79 323 84 6\".split(\" \"))\nc = map(int, \"2643 383 2 79 50 288\".split(\" \"))\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\nresult = 0\nfor i in b:\n    ta = bisect.bisect_left(a,i)\n    tc = bisect.bisect_right(c,i)\n    result += ta*(N-tc)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4421": {"id": 4421, "code": "x = \"s\";s = ['m', 'i', 'l', 'e'];y = \"s\"\nprint(x+str(len(s))+y)", "coverage": [">", ">"]}, "5270": {"id": 5270, "code": "n = {1, 2, 9}\nif n == set([1,4,7,9]):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "12352": {"id": 12352, "code": "S = \"level\"\nN = len(S)\nans = 'No'\nif S == S[::-1] and S[:(N-1)//2] == S[:(N-1)//2][::-1] and S[(N+1)//2:] == S[(N+1)//2:][::-1]:\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "12666": {"id": 12666, "code": "if int(\"5\") in {7,5,3}:print('YES')\nelse:print('NO')", "coverage": [">", "!"]}, "10522": {"id": 10522, "code": "a = 8;b = 12;k = 2\nshou = min(a,b)\ndai  = max(a,b)\nmin_list = []\nfor i in range(1,shou+1):\n    if shou % i == 0:\n        if dai % i == 0:\n            min_list.append(i)\nprint(min_list[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1238": {"id": 1238, "code": "n = 111\nfor i in range(n,1000):\n    one = i % 10\n    ten = i //10 % 10\n    hund = i // 100\n    if one == ten and ten == hund:\n        print(hund*100+ten*10+one)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5525": {"id": 5525, "code": "n = 2\nnum = int(n / 2)\nif n % 2 == 1:\n  num += 1\nprint(num)", "coverage": [">", ">", ">", "!", ">"]}, "10622": {"id": 10622, "code": "from math import *\na,b,k=map(int,\"1 1 1\".split())\ng=gcd(a,b)\nfor i in range(g,0,-1):\n    if(g%i==0):\n        k-=1\n    if(k==0):\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5340": {"id": 5340, "code": "import math\nprint((int)(math.ceil((int)(\"100\")/2)))", "coverage": [">", ">"]}, "2922": {"id": 2922, "code": "s = \"1234567876\"\nans = 753\nfor i in range(len(s) - 2):\n  x = int(s[i:i+3])\n  if abs(753 - x) < ans:\n    ans = abs(753-x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9626": {"id": 9626, "code": "N = 8\nS = \"))))((((\"\nA=0 \nB=0 \nfor s in S:\n    if s=='(':\n        A+=1\n    elif s==')' and A>0:\n        A-=1\n    else:\n        B+=1\nprint('('*B+S+')'*A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13763": {"id": 13763, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nans = H2*60 + M2 - H1*60 - M1 - K\nprint(ans)", "coverage": [">", ">", ">"]}, "7855": {"id": 7855, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nans=(n-1)//(k-1)\nif (n-1)%(k-1)!=0:\n  ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17357": {"id": 17357, "code": "l = ['D', 'D']\nprint(\"H\" if len(set(l)) == 1 else \"D\")", "coverage": [">", ">"]}, "15081": {"id": 15081, "code": "N = 2;P = 0\nA = [1, 3]\nev = 0\nod = 0\nfor a in A:\n    if a % 2 == 0:\n        ev += 1\n    else:\n        od += 1\nif P == 0 and od == 0:\n    print(2**ev)\nelse:\n    print(2**ev * (2**od//2))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "9691": {"id": 9691, "code": "N = 8\nS = [')', ')', ')', ')', '(', '(', '(', '(']\nc = 0\nl = []\nfor i in S:\n    if i == \"(\":\n        c += 1\n    else:\n        c -= 1\n    l.append(c)\nm = min(l)\nif m < 0:\n    for i in range(N):\n        l[i] += (-m)\n    M = l[-1]\n    ans = [\"(\"] *(-m) + S + [\")\"] *M\nelse:\n    M = l[-1]\n    ans = S + [\")\"] *M\noutput = \"\".join(ans)\nprint(output)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "16288": {"id": 16288, "code": "n = 5\na = [6, 9, 4, 2, 11]\nmax_a = max(a)\nans = 0\nfor i in range(n):\n    if abs(ans - max_a/2) > abs(a[i] - max_a/2):\n        ans = a[i]\nprint(max_a, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13204": {"id": 13204, "code": "s = \"abcde,fghihgf,edcba\"\nans=s.replace(\",\",\" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "2015": {"id": 2015, "code": "n = 10;a = 3;b = 5\nM=min(a,b)\nif a+b<=n:\n  m=0\nelse:\n  m=a+b-n\nprint(M,m)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3876": {"id": 3876, "code": "X = 100000;Y = 1;Z = 1\nX -= 2 * Z\nX -= Y\nans = 0\nif 0 <= X:\n    ans = 1 + X // (Y + Z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1768": {"id": 1768, "code": "n = 100;a = 100;b = 100\nans1 = min(a,b)\nans2 = a+b-n\nans2 = max(ans2,0)\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">", ">"]}, "6152": {"id": 6152, "code": "N = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nsorted_a = sorted(a)\nsorted_b = sorted(b)\nsorted_c = sorted(c)\nans = 0\nbefore_a = 0\nbefore_c = 0\ncount_a = 0\ncount_c_rest = 0\nfor each_b in sorted_b:\n    for ai in range(before_a, len(sorted_a)):\n        if each_b > sorted_a[ai]:\n            count_a += 1\n            before_a += 1\n        else:\n            before_a = ai\n            break\n    for ci in range(before_c, len(sorted_c)):\n        if sorted_c[ci] <= each_b:\n            count_c_rest += 1\n            before_c += 1\n        else:\n            before_c = ci\n            break\n    ans += count_a * (len(sorted_c)-count_c_rest)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "5175": {"id": 5175, "code": "s = \"xyz\"\nh = s[0]\nt = s[-1]\nn = str(len(s[1:-1]))\nprint(h+n+t)", "coverage": [">", ">", ">", ">", ">"]}, "5113": {"id": 5113, "code": "a = \"internationalization\"\nans=a[0]+str(len(a)-2)+a[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "8487": {"id": 8487, "code": "N = 1\na = [2]\nb = [3]\nA=[]\nB=[]\nsuma=0\nsumb=0\nfor n in range(N):\n    suma+=a[n]\n    A.append(suma)\nfor n in reversed(range(N)):\n    sumb+=b[n]\n    B.append(sumb)\nMAX=0\nfor n in range(N):\n    MAX=max(MAX,A[n]+B[N-n-1])\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9765": {"id": 9765, "code": "N = 8\nT = \"))))((((\"\nS = list(T)\nG = True\nwhile G:\n    G = False\n    for i in range(1, len(S)):\n        if S[i - 1] == '(' and S[i] == ')':\n            S.pop(i)\n            S.pop(i - 1)\n            G = True\n            break\nfor s in S:\n    if s == '(':\n        T = T + ')'\n    else:\n        T = '(' + T\nprint(T)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "3569": {"id": 3569, "code": "a = 20;b = 15\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", ">", "!", "!"]}, "15749": {"id": 15749, "code": "x = 13;y = 3;z = 1\nchair = (x - z) // (y + z)\nprint(chair)", "coverage": [">", ">", ">"]}, "11014": {"id": 11014, "code": "s1 = \"akasaka\"\ns1r = s1[::-1]\nn1 = len(s1)\ns2 = s1[:(n1-1)//2]\ns2r = s2[::-1]\ns3 = s1[-(n1-1)//2:]\ns3r = s3[::-1]\nif s1 == s1r and s2 == s2r and s3 == s3r:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10353": {"id": 10353, "code": "a = 1;b = 1;k = 1\nc = 0\ni = max(a,b)\nwhile i > 0:\n    if a % i == 0:\n        if b % i == 0:\n            c += 1\n    if c == k:\n        print(i)\n        break\n    i -= 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "14535": {"id": 14535, "code": "n = 2;p = 0\nA = [1, 3]\nfor a in A:\n  if a % 2 != 0:\n    break \nelse:\n  if p == 1: \n    print(0)\n    exit()\n  if p == 0: \n    print(2**n)\n    exit()\nans = 2**(n-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "18181": {"id": 18181, "code": "s = \"1700\"\ns1 = int(s[:2])\ns2 = int(s[2:])\nif 1 <= s1 <= 12 and 1 <= s2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= s1 <= 12:\n    print('MMYY')\nelif 1 <= s2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "13242": {"id": 13242, "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1 , s2 , s3)", "coverage": [">", ">"]}, "5856": {"id": 5856, "code": "n = 100\nprint(int((n + 1)/2))", "coverage": [">", ">"]}, "1373": {"id": 1373, "code": "n = 750\nwhile True:\n    s = str(n)\n    if s[0] == s[1] and s[0] == s[2]:\n        print(n)\n        break\n    n += 1", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14222": {"id": 14222, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = None\nup = False\ndown = False\nans = 1\nbase = A[0]\nfor i in range(1, n):\n    if base < A[i]:\n        up = True\n        base = A[i]\n    elif base > A[i]:\n        down = True\n    if (up == True) and (down == True):\n        up = False\n        down = False\n        ans += 1\n    base = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2837": {"id": 2837, "code": "S = \"35753\"\nN = len(S)\nans = 1000\nfor i in range(N-2):\n    ans = min(ans, abs(753-(int(S[i])*100+int(S[i+1])*10+int(S[i+2]))))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18577": {"id": 18577, "code": "h = 2\nw = 100\nn = 200\nif n % max(h, w) == 0:\n\tprint(n // max(h,w))\nelif n % max(h,w) !=0 :\n\tprint(n // max(h, w) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "406": {"id": 406, "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nN = 100\nfor i, s in enumerate(S):\n  if ord(s) - 97 > 0  and 122 - ord(s) < N:\n    S[i] = \"a\"\n    N -= 123 - ord(s)\nelse:\n  S[i] = chr(N % 26 + ord(S[i])) \nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2900": {"id": 2900, "code": "s = \"35753\"\nmin_v = 9999\nfor i in range(len(s) - 2):\n    n = int(s[i:i + 3])\n    min_v = min(min_v, abs(753 - n))\nprint(min_v)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16673": {"id": 16673, "code": "a = \"D\";b = \"D\"\nif a==\"H\"and b==\"H\":\n    print(\"H\")\nelif a==\"H\"and b==\"D\":\n    print(\"D\")\nelif a==\"D\"and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6313": {"id": 6313, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = n ** 3\nup = [0] * n\nmid = [0] * n\nbottom = [0] * n\np = 0\nfor i in range(n):\n    while p < n and A[i] >= B[p]:\n        p += 1\n    mid[i] = p\np = 0\nq = 0\nfor i in range(n):\n    while p < n and B[i] >= C[p]:\n        p += 1\n    while q < n and B[i] > A[q]:\n        q += 1\n    bottom[i] = p\n    up[i] = q\nfor m in mid:\n    ans -= m * n\nfor u, b in zip(up, bottom):\n    ans -= u * b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4122": {"id": 4122, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nhour = h2 - h1\nminute = m2 - m1\ntime = (hour * 60) + minute\nprint(time - k)", "coverage": [">", ">", ">", ">", ">"]}, "12247": {"id": 12247, "code": "s = \"level\"\nn = len(s)\nif s != s[::-1]:\n    print('No')\nelif s[:(n-1)//2] != s[:(n-1)//2][::-1]:\n    print('No')\nelif s[(n+3)//2-1:] != s[(n+3)//2-1:][::-1]:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "1402": {"id": 1402, "code": "n = \"750\"\nif n[0] >= n[1] and (n[0] >= n[2] or n[1] >= n[2]):\n    print(n[0]+n[0]+n[0])\nelse:\n    print(str(int(n[0])+1) + str(int(n[0])+1) + str(int(n[0])+1))", "coverage": [">", ">", ">", "!", "!"]}, "648": {"id": 648, "code": "k = 2\nmo = 7\nmo = mo % k\nfor i in range(1 , k + 1):\n  if mo == 0:\n    print(i)\n    break\n  if mo != 0:\n    mo = (mo * 10 + 7) % k\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "7333": {"id": 7333, "code": "H = 10;N = 3\nlst = [4, 5, 6]\nfor i in range (0, N):\n    H -= lst[i]\nif H <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "8227": {"id": 8227, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif (N-1)%(K-1) == 0:\n    print(int((N-1)/(K-1)))\nelse:\n    print(int((N-1)/(K-1)) + 1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3262": {"id": 3262, "code": "a = 20;b = 15\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "17036": {"id": 17036, "code": "a = \"D\";b = \"D\"\nif a == 'D':\n  b = 'D' if b == 'H' else 'H'\nprint(b)", "coverage": [">", ">", ">", ">"]}, "13570": {"id": 13570, "code": "S = \"abcde,fghihgf,edcba\"\nS=S.replace(',',' ')\nprint(S)", "coverage": [">", ">", ">"]}, "1214": {"id": 1214, "code": "N = 111\nf = 0\nfor i in range(1, 10):\n  if N <= i * 111:\n    print(i * 111)\n    f = 1\n    break\nif f == 0:\n  print(1111)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "7042": {"id": 7042, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nAS = sum(A)\nif AS >= H:\n\tprint('Yes')\nelse:\n\tprint('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3114": {"id": 3114, "code": "S = \"35753\"\nanswer = 1000000\nfor i in range(len(S) - 2):\n    answer = min(abs(753 - int(S[i:i + 3])), answer)\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "12272": {"id": 12272, "code": "S = \"level\"\nl = len(S) // 2\nformer = S[:l]\nlatter = S[l+1:]\nprint(\"Yes\" if S == S[::-1] and former == former[::-1] and latter == latter[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "3674": {"id": 3674, "code": "from sys import stdin\na = 20;b = 30\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1179": {"id": 1179, "code": "N = 111\na = N//100\nif N >(a*111):\n    b = a+1\n    print(b*111)\nelse:\n    print(a*111)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "17302": {"id": 17302, "code": "a = \"D\";b = \"H\"\nif (a == 'H' or a == 'D') and (b == 'H' or b == 'D'):\n    if a == 'H':\n        if b=='H':\n            print('H')\n        else:\n            print('D')\n    if a == 'D':\n        if b=='H':\n            print('D')\n        else:\n            print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "10045": {"id": 10045, "code": "n = \"3\"\ns = \"())\"\nss = s\nfor i in range(50):\n  s = s.replace('()','')\nl = s.count(')')\nr = s.count('(')\nprint('('*l+ss+')'*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7184": {"id": 7184, "code": "h = 211;a = 5\nwa = [31, 41, 59, 26, 53]\nif sum(wa)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "708": {"id": 708, "code": "K = 2\nfirst_mod = 7 % K\nold_mod = now_mod = first_mod\ncnt = 1\nif first_mod == 0:\n    print(1)\nelse:\n    flg = False\n    for i in range(2,K+1):\n        now_mod = ((old_mod * 10) + 7) % K\n        cnt += 1\n        old_mod = now_mod\n        if now_mod == 0:\n            flg = True\n            break\n        if now_mod == first_mod:\n            break\n    if flg:\n        print(cnt)\n    else:\n        print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "9618": {"id": 9618, "code": "S = \"2017/01/07\"\nprint(S.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "4012": {"id": 4012, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint((H2 * 60 + M2) - (H1 * 60 + M1) - K)", "coverage": [">", ">"]}, "4394": {"id": 4394, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nH = h2 - h1\nif m1 <= m2:\n    M = m2 - m1\nelse:\n    M = 60 - m1 + m2\n    H -= 1\nprint(H*60 + M - k)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "18213": {"id": 18213, "code": "h = 3\nw = 7\nn = 10\nans = 0\nif h >= w :\n  if n%h != 0:\n    ans = (n//h) +1\n  else:\n    ans = n//h\nelif  w > h:\n  if n%w != 0:\n    ans  = (n//w) +1\n  else:\n    ans = n//w\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "11305": {"id": 11305, "code": "s = \"SUN\"\nif s==\"SUN\":print(7)\nelif s==\"MON\":print(6)\nelif s==\"TUE\":print(5)\nelif s==\"WED\":print(4)\nelif s==\"THU\":print(3)\nelif s==\"FRI\":print(2)\nelif s==\"SAT\":print(1)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!"]}, "2251": {"id": 2251, "code": "N = 10;A = 3;B = 5\nprint(min(A,B),0 if min(A,B)-N+max(A,B) < 0 else min(A,B)-N+max(A,B))", "coverage": [">", ">"]}, "8975": {"id": 8975, "code": "a = int(\"15\")\ne = int(\"36\")\nk = int(\"18\")\nif e - a > k:\n    print(':(')\nelse:\n    print('Yay!')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13857": {"id": 13857, "code": "n = 6\nlis = [1, 2, 3, 2, 2, 1]\ncnt = 1\nflag = 0\nfor i in range(n-1):\n    if lis[i+1] - lis[i] >0:\n        if flag == 1:\n            pass\n        elif flag == -1:\n            flag = 0\n            cnt += 1\n        elif flag == 0:\n            flag = 1\n    elif lis[i+1] - lis[i] < 0:\n        if flag == 1:\n            flag = 0\n            cnt += 1\n        elif flag == -1:\n            pass\n        elif flag == 0:\n            flag = -1\n    elif lis[i+1] - lis[i] == 0:\n        pass\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10148": {"id": 10148, "code": "n = 3\ns = \"())\"\ncntr = 0\nfor i in range(n-1, -1, -1):\n    if s[i] == ')':\n        cntr += 1\n    elif cntr > 0:\n        cntr -= 1\ns = '(' * cntr + s\nn = len(s)\ncntl = 0\nfor i in range(n):\n    if s[i] == '(':\n        cntl += 1\n    elif cntl > 0:\n        cntl -= 1\ns += ')' * cntl\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15045": {"id": 15045, "code": "N = 3;P = 0\nA = [1, 1, 1]\nodd = False\nfor i in range(N):\n    if A[i] % 2 == 1:\n        odd = True\n        break\nif odd:\n    print(2**(N-1))\nelse:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "435": {"id": 435, "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nN=len(S)\nfor i in range(N):\n    if S[i]==\"a\":\n        continue\n    sa=ord(\"z\")-ord(S[i])+1\n    if sa<=K:\n        K-=sa\n        S[i]=\"a\"\nif K!=0:\n    K%=26\n    S[i]=chr(ord(S[i])+K)\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6950": {"id": 6950, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nif sum(A) < H:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "5110": {"id": 5110, "code": "s = \"internationalization\"\nl = len(s)\nprint(\"{}{}{}\".format(s[0], l - 2, s[l - 1]))", "coverage": [">", ">", ">"]}, "2801": {"id": 2801, "code": "s = \"35753\"\na = 1e9\nfor i in range(len(s)-2):\n  a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)       ", "coverage": [">", ">", ">", ">", ">"]}, "8406": {"id": 8406, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=[0]*N\ni=0\nwhile i<N:\n    ans[i]+=sum(A1[:i+1])\n    ans[i]+=sum(A2[i:])\n    i+=1\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16936": {"id": 16936, "code": "tmp = ['D', 'H']\nprint(\"H\") if tmp[0] == tmp[1] else print(\"D\")", "coverage": [">", ">"]}, "2136": {"id": 2136, "code": "N = 100;A = 100;B = 100\nmaxv = min(A, B)\nif A+B-N >= 0:\n    minv = A+B-N\nelse:\n    minv = 0\nprint(maxv, minv)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15492": {"id": 15492, "code": "x = 64145;y = 123;z = 456\nans = (x - z) // (y + z)\nprint(ans)", "coverage": [">", ">", ">"]}, "14044": {"id": 14044, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\ncnt = 0\nwhile i < N:\n    while i < N - 1 and A[i + 1] == A[i]:\n        i += 1\n    if i >= N - 1:\n        cnt += 1\n        print(cnt)\n        sys.exit()\n    if A[i + 1] < A[i]:\n        while i < N - 1 and A[i + 1] <= A[i]:\n            i += 1\n    else:\n        while i < N - 1 and A[i + 1] >= A[i]:\n            i += 1\n    cnt += 1\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3066": {"id": 3066, "code": "S = \"1111111111\"\nnum_len = 999\nfor i in range(len(S)-2):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15160": {"id": 15160, "code": "X = 13;Y = 3;Z = 1\nisu = X - Z\nhito = Y + Z\nprint(isu // hito)", "coverage": [">", ">", ">", ">"]}, "1334": {"id": 1334, "code": "n_list = ['1', '1', '2']\nn=[int(i) for i in n_list]\nans=str(n[0]+1)*3\nif n[0]>n[1]:\n    ans=str(n[0])*3\nelif n[0]==n[1]:\n    if n[1]>=n[2]:\n        ans=str(n[0])*3\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "17159": {"id": 17159, "code": "a = \"D\";b = \"H\"\nif a == \"H\"and b == 'H':\n  print('H')\nelif a == 'H' and b == 'D':\n  print('D')\nelif a == 'D' and b == 'H':\n  print('D')\nelif a == 'D' and b == 'D':\n  print('H')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "8388": {"id": 8388, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17038": {"id": 17038, "code": "a = ['D', 'H']\nprint(a[1] if a[0] == 'H' else ('D' if a[1] == 'H' else 'H'))", "coverage": [">", ">"]}, "14385": {"id": 14385, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni = 1\nans = 1\nchange = [False,False]\nwhile i<n:\n    if change == [True,True]:\n        ans += 1\n        change = [False,False]\n    elif a[i]>a[i-1]:\n        change[0] = True\n        i += 1\n    elif a[i]<a[i-1]:\n        change[1] = True\n        i += 1\n    else:\n        i += 1\nif i==n and change==[True,True]:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "6196": {"id": 6196, "code": "from bisect import bisect_right,bisect_left\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans=0\nfor b in B:\n    a_index=bisect_left(A,b)\n    c_index=bisect_right(C,b)\n    ans +=a_index*(n-c_index)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6687": {"id": 6687, "code": "h = 10;n = 3\na = [4, 5, 6]\nif sum(a) >= h :\n    print(\"Yes\")\nelse : print(\"No\")", "coverage": [">", ">", ">", ">", "!"]}, "4735": {"id": 4735, "code": "char = \"internationalization\"\nlength = len(char)\nprint('{}{}{}'.format(char[0], length-2, char[-1]))", "coverage": [">", ">", ">"]}, "12800": {"id": 12800, "code": "X = 5\nans = \"YES\" if X == 7 or X == 5 or X == 3 else \"NO\"\nprint(ans)", "coverage": [">", ">", ">"]}, "849": {"id": 849, "code": "K = 101\nnum = 7%K\nfor i in range(K):\n  if num%K ==0:\n    print(i+1)\n    break\n  else:\n    num = (num*10 + 7)%K\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!"]}, "876": {"id": 876, "code": "k = 2\nif k%2==0 or k%5==0:\n  print(-1)\nelse:\n  s=1\n  a=7\n  while a%k!=0:\n    a=(10*a+7)%k\n    s+=1\n  print(s)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "5450": {"id": 5450, "code": "n = 2\nprint(n//2 + n%2)", "coverage": [">", ">"]}, "1949": {"id": 1949, "code": "from sys import stdin\nN = 10;A = 7;B = 5\nprint(min(A, B), max(0, A+B-N))", "coverage": [">", ">", ">"]}, "7943": {"id": 7943, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint((N-1 + K-1 -1)//(K-1))", "coverage": [">", ">", ">"]}, "7583": {"id": 7583, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint(\"No\" if sum(a)<h else \"Yes\")", "coverage": [">", ">", ">"]}, "1763": {"id": 1763, "code": "if __name__ == '__main__':\n    N = 10;A = 3;B = 5\n    print(min(A, B), max(A+B - N, 0))", "coverage": [">", ">", ">"]}, "8669": {"id": 8669, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "628": {"id": 628, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n    if i==len(s)-1:\n        s[-1]=chr((ord(s[i])-97+k)%26+97)\n        break\n    if s[i]=='a':\n        continue\n    if 123-ord(s[i])<=k:\n        k-=123-ord(s[i])\n        s[i]='a'\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "781": {"id": 781, "code": "import sys\nK = 2\nx = 7\nfor ans in range(1, K*2):\n    if  x%K == 0:\n        print(ans)\n        sys.exit()\n    x = (x*10 + 7) % K\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "669": {"id": 669, "code": "k = 2\nif k % 2 == 0 or k % 5 == 0:\n    x = -1\nelse:\n    m = 7\n    n = 7\n    x = 1\n    while n % k != 0:\n        m = (m * 10) % k\n        n += m\n        x += 1\nprint(x)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "2782": {"id": 2782, "code": "s = \"1234567876\"\nans=753\nfor i in range(0,len(s)-3+1):\n    ans=min(abs(int(s[i:i+3])-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18639": {"id": 18639, "code": "import math\na = 14\nb = 12\nx = 112\nprint(math.ceil(x/max(a,b)))", "coverage": [">", ">", ">", ">", ">"]}, "9934": {"id": 9934, "code": "N = 6\nS = \")))())\"\nres = \"\"\nst = []\nfor s in S:\n    if s == \"(\":\n        st.append(\"(\")\n        res += \"(\"\n    else:\n        if st:\n            st.pop()\n            res += \")\"\n        else:\n            res = \"(\" + res + \")\"\nprint(res + \")\" * len(st))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "10818": {"id": 10818, "code": "s = \"level\"\nsi=s[::-1]\na=s[:(len(s)-1)//2]\nb=s[(len(s)+1)//2:]\nif s == si :\n    if a == a[::-1] and b == b[::-1]:\n        print((\"Yes\"))\n        exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7358": {"id": 7358, "code": "H = 20;N = 3\nN = [4, 5, 6]\nprint(\"Yes\") if(sum(N) >= H) else print(\"No\")", "coverage": [">", ">", ">"]}, "6941": {"id": 6941, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\naa = sum(a)\nif aa >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9407": {"id": 9407, "code": "s = \"2017/01/31\"\nres = []\nfor i in range(len(s)):\n    if i == 3:\n        res.append(8)\n    else:\n        res.append(s[i])\nprint(\"\".join(map(str, res)))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "16496": {"id": 16496, "code": "n = 2\na = [100, 0]\na.sort()\nmaxa=max(a)\nans=0\nch=0\nfor i in range(n-1):\n  b=maxa-a[i]\n  c=min(b,a[i])\n  if c>=ch:\n    ans=a[i]\n    ch=c\nprint(str(maxa)+' '+str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8789": {"id": 8789, "code": "n = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7970": {"id": 7970, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif (N-1)%(K-1)==0:\n    out=(N-1)//(K-1)\nelse:\n    out=(N-1)//(K-1)+1\nprint(out)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1027": {"id": 1027, "code": "n = 750\ni = n\nwhile True:\n    if str(i)[0] != str(i)[1] or str(i)[1] != str(i)[2]:\n        i += 1\n    else:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "100": {"id": 100, "code": "s = ['x', 'y', 'z']\nk = 4\nls = list(\"abcdefghijklmnopqrstuvwxyz\")\nls.sort(reverse=True)\nls = [\"a\"] + ls[:-1]\nfor i in range(len(s)):\n    if i != len(s)-1:\n        if k >= ls.index(s[i]):\n            k -= ls.index(s[i])\n            s[i] = \"a\"\n        else:\n            continue\n    else:\n        k %= 26\n        s[-1] = ls[(ls.index(s[-1])-k)%26]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "15101": {"id": 15101, "code": "import math\nN = 3;P = 0\nA = [1, 1, 1]\nevenL = []\noddL = []\nfor i in range(N):\n    if (A[i] % 2 == 0):\n        evenL.append(A[i])\n    else:\n        oddL.append(A[i])\neven = len(evenL)\nodd = len(oddL)\nsum_odd = 0\nnumL = []\nfor i in range(odd):\n    if ((i + 1) % 2 == 1):\n        numL.append(i + 1)\nfor i in numL:\n    sum_odd += (math.factorial(odd) //\n                math.factorial(odd - i) // math.factorial(i))\nnumevenL = []\nsum_even = 0\nfor i in range(odd):\n    if ((i + 1) % 2 == 0):\n        numevenL.append(i + 1)\nfor i in numevenL:\n    sum_even += ((math.factorial(odd) //\n                  math.factorial(odd - i) // math.factorial(i)))\nif (P % 2 == 1):\n    print(2 ** N - ((sum_even + 1) * (2 ** even)))\nelse:\n    print((sum_even + 1) * (2 ** even))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17570": {"id": 17570, "code": "S = 1700\na = S // 100\nb = S % 100\nif 0 < a < 13 :\n  if 0 < b < 13:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 0 < b < 13:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "7117": {"id": 7117, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nhitpoint=h\natack = a[:]\nfor e in atack:\n    hitpoint -= e\n    if hitpoint <= 0:\n        break\nif hitpoint <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15399": {"id": 15399, "code": "x = 12;y = 3;z = 1\nans = 0\nx -= z\nans += x // (y + z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "14599": {"id": 14599, "code": "N = 1;P = 1\nA = [50]\nodd = 0\nfor a in A:\n    if a % 2 != 0:\n        odd += 1\nif odd == 0:\n    if P == 1:\n        res = 0\n    else:\n        res = 2 ** N\nelse:\n    res = 2 ** (N - 1)\nprint(res)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "336": {"id": 336, "code": "s = \"a\"\nk = 25\nn = len(s)\nfor i in range(n):\n  num = ord(s[i])\n  if num == 97 or 123-num > k:\n    continue\n  k -= (123-num)\n  s = s[:i] + 'a' + s[i+1:]\nif k > 0:\n  t = k%26\n  s = s[:n-1] + chr(ord(s[n-1])+t)\nprint(s)  ", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "12931": {"id": 12931, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nx = 6\nprint('YES' if x in [3, 5, 7] else 'NO')", "coverage": [">", ">", ">", ">", ">", ">"]}, "16612": {"id": 16612, "code": "a = \"D\";b = \"H\"\nif a=='H' and b=='H'or a=='D' and b=='D':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "7201": {"id": 7201, "code": "H = 10;N = 3\nA = [4, 5, 6]\nprint('Yes' if sum(A) >= H else 'No')", "coverage": [">", ">", ">"]}, "4726": {"id": 4726, "code": "s = \"internationalization\"\nl = len(s)\nprint(s[0] + str(l-2) + s[-1])", "coverage": [">", ">", ">"]}, "15989": {"id": 15989, "code": "A = 12;B = 4\nprint('0') if A <= 2*B else print(A - 2*B)", "coverage": [">", ">"]}, "18860": {"id": 18860, "code": "n = 2;x = 0\nA = (5, 5)\npre = max(0, A[0] - x)\nans = pre\nfor i in range(n - 1):\n    a = A[i]\n    b = A[i + 1]\n    a -= pre\n    tmp = 0\n    if b > x:\n        tmp += b - x\n        b = x\n    if a + b > x:\n        tmp += a + b - x\n    ans += tmp\n    pre = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "16225": {"id": 16225, "code": "n = 5\na = [0, 2, 4, 6, 9, 11]\nx=a[-1]\nm=a[-1]\nfor i in a:\n  if m>abs(i-x/2):\n    y=i\n    m=abs(i-x/2)\nprint(x,y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11368": {"id": 11368, "code": "s = \"SAT\"\nw=['SUN','MON','TUE','WED','THU','FRI','SAT',]\nw=w[::-1]\nfor i in range(7):\n    if w[i]==s:\n        print(i+1)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9882": {"id": 9882, "code": "N = 6\nS_ = \")))())\"\ns=S_\ncount = 0\nnew_left = 0\nnew_right = 0\nfor si in s:\n    if si == '(':\n        count += 1\n    else:\n        count -= 1\n        if count == -1:\n            count = 0\n            new_left += 1\nnew_right = count\nprint('(' * new_left + s + ')' * new_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "1586": {"id": 1586, "code": "n = 10;a = 3;b = 5\nm=0\ns=0\nif a<b:\n  m=a\nelse:\n  m=b\nif a+b>n:\n  s=a+b-n\nprint(m,s)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "19366": {"id": 19366, "code": "n = 999999999\nprint(n*2 if n%2>0 else n)", "coverage": [">", ">"]}, "6270": {"id": 6270, "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    x = bisect_left(A,B[i])\n    y = bisect_right(C,B[i])\n    ans += x*(N-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18570": {"id": 18570, "code": "import math\na = 14\nb = 12\nn = 112\ndum = max(a,b)\nans = n/dum\nprint(math.ceil(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2645": {"id": 2645, "code": "a = 1;b = 9;c = 7;d = 4\nif a*b*c*d==1*9*7*4:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "2123": {"id": 2123, "code": "if __name__==\"__main__\":\n    n = \"10\";A = \"7\";B = \"5\"\n    n = int(n)\n    A = int(A)\n    B = int(B)\n    print(min(A, B),  max(B - (n - A), 0))", "coverage": [">", ">", ">", ">", ">", ">"]}, "5707": {"id": 5707, "code": "from sys import stdin\ninput = \"<function <lambda>>\"\nn = 5\nprint((n + 1) // 2)", "coverage": [">", ">", ">", ">"]}, "9029": {"id": 9029, "code": "import itertools\na = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nmax_distance = e - a\nif max_distance <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9101": {"id": 9101, "code": "s = ['2017', '01', '31']\ns[0] = '2018'\nprint(s[0]+'/'+s[1]+'/'+s[2])", "coverage": [">", ">", ">"]}, "16429": {"id": 16429, "code": "n = 5\na = [2, 4, 6, 9, 11]\nl=a[-1]\nb=[abs(i-l/2) for i in a]\nc=float(\"inf\")\nfor i in range(n-1):\n  c=min(c,b[i])\nprint(l,a[b.index(c)])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5702": {"id": 5702, "code": "i = \"2\"\na = int(i)//2\nb = int(i)%2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "9737": {"id": 9737, "code": "N = 6\nS = \")))())\"\nL = 0\nR = 0\ncnt = 0\nd = []\nfor s in S:\n    if s == \"(\":\n       cnt += 1\n    else:\n        cnt -= 1\n        if cnt < 0:\n            cnt = 0\n            L += 1\nR += cnt\nprint(L*\"(\" + S + R*\")\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "10512": {"id": 10512, "code": "a = 8;b = 12;k = 2\nans = [i for i in range(min(a, b), 0, -1) if a%i==0 and b%i==0]\nprint(ans[k-1])", "coverage": [">", ">", ">"]}, "6124": {"id": 6124, "code": "import bisect\na = 2\nb = [1, 5]\nb.sort()\nc = [2, 4]\nd = [3, 6]\nd.sort()\nans = 0\nfor i in range(a):\n    ans += bisect.bisect_left(b, c[i]) * (a - bisect.bisect_right(d, c[i]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10251": {"id": 10251, "code": "n = 6\ns = \")))())\"\nans = s\nwhile s.count(\"()\")>0:\n    s = s.replace(\"()\", \"\")\ncnt_l = s.count(\")\")\ncnt_r = s.count(\"(\")\nans = cnt_l * \"(\" + ans\nans += cnt_r * \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7645": {"id": 7645, "code": "h = 10;n = 3\na = [4, 5, 6]\nfor i in range(n):\n    h -= a[i]\nprint(\"Yes\" if h <=0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "12055": {"id": 12055, "code": "A = 11;B = 16\nC = 11;D = 17\nif C - A == 1:\n\tprint(1)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "5025": {"id": 5025, "code": "s = \"xyz\"\nN = len(s)\nx = s[0]+str(N-2)+s[-1]\nprint(x)", "coverage": [">", ">", ">", ">"]}, "4310": {"id": 4310, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif m2-k < 0:\n    m2 = 60+(m2-k)\n    h2 -= 1\nelse :\n    m2 -= k\nminute1 = h1*60+m1\nminute2 = h2*60+m2\nprint(minute2-minute1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8393": {"id": 8393, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nini = a1[0]+sum(a2)\nans = ini\nfor i in range(1, n):\n    s = ini - a2[i-1] + a1[i]\n    if s >= ans:\n        ans = s\n    ini = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1330": {"id": 1330, "code": "n = 111\na = n // 100\nb = a * 100 + a * 10 + a\nif(n > b):\n  ans = (a + 1) * 100 + (a + 1) * 10 + (a + 1)\nelse:\n  ans = a * 100 + a * 10 + a\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "4974": {"id": 4974, "code": "import sys\ns = ['x', 'y', 'z']\ni = s.pop(0)\nf = s.pop(-1)\nprint(i+str(len(s))+f)", "coverage": [">", ">", ">", ">", ">"]}, "17967": {"id": 17967, "code": "s = \"1905\"\na = int(s[0:2])\nb = int(s[2:])\nif 13 <= a or a == 0:\n    if 1 <= b and b <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nelse:\n    if 1<= b  and b<= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "5932": {"id": 5932, "code": "N = 5\nans = 0\nans = -(-N//2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4487": {"id": 4487, "code": "s = \"smiles\"\nprint(s[0],len(s)-2,s[len(s)-1], sep=\"\")", "coverage": [">", ">"]}, "2526": {"id": 2526, "code": "n = \"1 7 9 4\"\nif \"1\" in n and \"9\" in n and \"7\" in n and \"4\" in n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "2696": {"id": 2696, "code": "s = {1, 4, 9, 7}\nif s==set([1,7,9,4]):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "11047": {"id": 11047, "code": "s = \"akasaka\"\nn=len(s)\nx=n//2\na=s[0:x]\nb=s[x+1:]\nif a==b:print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "8239": {"id": 8239, "code": "from math import ceil\nN = 4;K = 3\nA = [2, 3, 1, 4]\nans = ceil((N-K)/(K-1)) + 1\nprint(ans) ", "coverage": [">", ">", ">", ">", ">"]}, "8114": {"id": 8114, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif N<=K:\n  print(1)\nelse:\n  i=K\n  a=1\n  while i<N:\n    i+=(K-1)\n    a+=1\n  print(a)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "4690": {"id": 4690, "code": "s = \"internationalization\"\nprint(s[0] + str(len(s)-2) + s[-1])", "coverage": [">", ">"]}, "816": {"id": 816, "code": "k = 2\ni = 0\ns = 0\nans = -1\nfor z in range(k):\n    i += 1\n    s = 7 + 10*s\n    if s % k != 0:\n        s = s % k\n    else:\n        ans = i\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "7156": {"id": 7156, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if sum(A) >= H else 'No')", "coverage": [">", ">", ">"]}, "18557": {"id": 18557, "code": "import math\nH = 3\nW = 7\nN = 10\nprint(math.ceil(N/max(H,W)))", "coverage": [">", ">", ">", ">", ">"]}, "12432": {"id": 12432, "code": "s = ['l', 'e', 'v', 'e', 'l']\nl = len(s)\nt = s[::-1]\nif s == t and (s[:(l-1)//2] == t[(l+1)//2:]) and (s[(l+1)//2:] == t[:(l-1)//2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16716": {"id": 16716, "code": "a = \"H\";b = \"H\"\nif a=='H': print('H' if b=='H' else 'D')\nelse: print('D' if b=='H' else 'H')", "coverage": [">", ">", "!"]}, "3232": {"id": 3232, "code": "icase=0\nif icase==0:\n    a = 20;b = 15\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "3077": {"id": 3077, "code": "s = \"35753\"\nl = len(s)\nd = 1000\nfor i in range(l):\n    tmp = abs(int(s[i:i+3]) - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4346": {"id": 4346, "code": "t = [10, 0, 12, 0, 120]\nm = (t[2] - t[0]) * 60 + (t[3] - t[1])\nprint(m - t[4])", "coverage": [">", ">", ">"]}, "13855": {"id": 13855, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstate = None\ncnt = 1\nfor i in range(1, n):\n    if state == None:\n        if a[i] > a[i-1]:\n            state = 'up'\n        elif a[i] < a[i-1]:\n            state = 'down'\n        else:\n            continue\n    elif state == 'up' and a[i] < a[i-1]:\n        cnt += 1\n        state = None\n    elif state == 'down' and a[i] > a[i-1]:\n        cnt += 1\n        state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "4400": {"id": 4400, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nH1 *= 60\nH2 *= 60\nstart = H1 + M1\nend = H2 + M2\ntime = end - start\nans = time - K\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9002": {"id": 9002, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif abs(a - e) > k:\n    print(':(')\nelse:\n    print('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2732": {"id": 2732, "code": "n = 1;a = 7;b = 9;c = 4\nans='NO'\nif n==1 or a==1 or b==1 or c==1:\n    if n==9 or a==9 or b==9 or c==9:\n        if n==7 or a==7 or b==7 or c==7:\n            if n==4 or a==4 or b==4 or c==4:\n                ans='YES'\nprint(ans)                ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15213": {"id": 15213, "code": "x = 12;y = 3;z = 1\nn = (x - z) / (y + z)\nprint(int(n))", "coverage": [">", ">", ">"]}, "13291": {"id": 13291, "code": "s = \"abcde,fghihgf,edcba\"\na = s[0:5]\nb = s[6:13]\nc = s[14:]\nprint(a, b, c)", "coverage": [">", ">", ">", ">", ">"]}, "4407": {"id": 4407, "code": "h = 10;m = 0;H = 15;M = 0;K = 30\nprint(H * 60 + M - h * 60 - m - K)", "coverage": [">", ">"]}, "6811": {"id": 6811, "code": "z = [210, 5]\nx = [31, 41, 59, 26, 53]\nd={}\nc=0\nfor i in x:\n       if d.get(i,0)==0:\n              c+=i\nif c>=z[0]:\n       print(\"Yes\")\nelse:\n       print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3986": {"id": 3986, "code": "x = 12;y = 3;z = 1\nif x < y+z*2:\n    print(0)\nelse:\n    ans = (x-(y+z*2))//(y+z)+1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "13550": {"id": 13550, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "2290": {"id": 2290, "code": "N = 10;A = 3;B = 5\nprint(str(min(A, B)) + \" \" + str(max(A + B - N, 0)))", "coverage": [">", ">"]}, "11208": {"id": 11208, "code": "S = \"SAT\"\nif S == \"SUN\":\n\tprint(\"7\")\nelif S == \"MON\":\n\tprint(\"6\")\nelif S == \"TUE\":\n\tprint(\"5\")\nelif S == \"WED\":\n\tprint(\"4\")\nelif S == \"THU\":\n\tprint(\"3\")\nelif S == \"FRI\":\n\tprint(\"2\")\nelif S == \"SAT\":\n\tprint(\"1\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "11560": {"id": 11560, "code": "D = {\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(D[\"SUN\".strip()])", "coverage": [">", ">"]}, "6507": {"id": 6507, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b) \n    c = N - bisect.bisect_right(C, b) \n    ans += a * c  \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2491": {"id": 2491, "code": "N = map(int, \"1 9 7 4\".split())\ndic = {1: False, 9: False, 7: False, 4: False}\nfor n in N:\n  dic[n] = True\nif all(dic.values()):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12073": {"id": 12073, "code": "l=[31,28,31,30,31,30,31,31,30,31,30,31]\ns = [11, 16]\nd = [11, 17]\nx=l[s[0]-1]\nif(x!=s[1]):\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18636": {"id": 18636, "code": "h = 14\nw = 12\nn = 112\nprint((n-1)//max(h,w)+1)", "coverage": [">", ">", ">", ">"]}, "11885": {"id": 11885, "code": "lst = [11, 30]\nlst2 = [12, 1]\nif lst2[1] == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3288": {"id": 3288, "code": "a = 12;b = 4\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12934": {"id": 12934, "code": "if int(\"5\") in [3,5,7]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!"]}, "14217": {"id": 14217, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n        cur = A[i]\n        continue\n    if(flag == 1 and A[i] < cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 1 and A[i] > cur):\n        cur = A[i]\n        continue\n    if(flag == 0 and A[i] > cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 0 and A[i] < cur):\n        cur = A[i]\n        continue\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "11993": {"id": 11993, "code": "month1 = 11;day1 = 30\nmonth2 = 12;day2 = 1\nif month1==month2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "4250": {"id": 4250, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nstart = H1*60 + M1\nfinish = H2*60 + M2 - K\nif finish - start >= 0:\n  print(finish - start)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "1130": {"id": 1130, "code": "N = 750\nfor i in range(10):\n    if 111*i < N <= 111*(i+1):\n        print(111*(i+1))", "coverage": [">", ">", ">", ">"]}, "2628": {"id": 2628, "code": "a = \"1 7 9 4\"\nif '1' in a and '7' in a and '9' in a and '4' in a:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "13954": {"id": 13954, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzougen = 4 \nans=1\nfor i in range(N-1):\n    if zougen==4:\n        if A[i]-A[i+1]<0:\n            zougen = 2\n        elif A[i]-A[i+1]>0:\n            zougen = 1\n        else:\n            zougen =0\n    if A[i]-A[i+1]<0:\n        if zougen == 1:\n            ans+=1\n            zougen=4\n        if zougen == 0:\n            zougen =2\n    if A[i]-A[i+1]>0:\n        if zougen == 2:\n            ans+=1\n            zougen=4\n        if zougen ==0:\n            zougen = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "15851": {"id": 15851, "code": "x = 13;y = 3;z = 1\ncnt=0\nx-=z\nwhile x>=0:\n    x=x-(y+z)\n    if x>=0:\n        cnt+=1\n    else:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "719": {"id": 719, "code": "K = 2\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\nelse:\n    x = 7 % K\n    for i in range(1, K + 1):\n        if x == 0:\n            print(i)\n            break\n        x = (x * 10 + 7) % K", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "5303": {"id": 5303, "code": "n = 2\nif n%2==1:\n    n+=1\nprint(n//2)", "coverage": [">", ">", "!", ">"]}, "15010": {"id": 15010, "code": "n = 3;p = 0\na = [1, 1, 1]\nb = [0]*n\nfor i in range(n):\n    b[i]=a[i]%2\nans=2**(n-1)\nif p==1 and sum(b)==0:\n    ans = 0\nif p==0 and sum(b)==0:\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "17542": {"id": 17542, "code": "S = \"0112\"\nif int(S[0: 2]) >= 13 or int(S[0: 2]) == 0:\n    if int(S[2: 4]) == 0 or int(S[2: 4]) >= 13:\n        print('NA')\n    else:\n        print('YYMM')\nelse:\n    if int(S[2: 4]) == 0 or int(S[2: 4]) >= 13:\n        print('MMYY')\n    else:\n        print('AMBIGUOUS')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12032": {"id": 12032, "code": "m1 = \"11\"\nm2 = \"12\"\nif m1==m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16702": {"id": 16702, "code": "a = \"D\";b = \"H\"\nif a == b:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "6162": {"id": 6162, "code": "from bisect import bisect_left, bisect\nn = 2\nla = [1, 5]\nlb = [2, 4]\nlc = [3, 6]\nans=0\nfor i in lb:\n    ans+=bisect_left(la,i)*(len(lc)-bisect(lc,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9313": {"id": 9313, "code": "str = \"2017/01/31\"\nprint(str.replace(\"2017\", \"2018\"))", "coverage": [">", ">"]}, "18543": {"id": 18543, "code": "H = 14\nW = 12\nN = 112\ncnt = 0\nres = 0\nwhile True:\n    if cnt >= N:\n        break\n    cnt += max(H, W)\n    res += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18190": {"id": 18190, "code": "S = \"1700\"\nyy = int(S[0:2])\nmm = int(S[2:])\nyymm = False\nmmyy = False\nif yy > 0 and yy < 13:\n    mmyy = True\nif mm > 0 and mm < 13:\n    yymm = True\nif yymm and mmyy :\n    print(\"AMBIGUOUS\")\nelif yymm and not mmyy:\n    print(\"YYMM\")\nelif not yymm and mmyy:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "2921": {"id": 2921, "code": "S = \"1111111111\"\nm=1000\nfor i in range(0,len(S)-2):\n    m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "10703": {"id": 10703, "code": "S = \"akasaka\"\nanswer = 'Yes'\nif S != S[::-1]:\n    answer = 'No'\nfirst = S[:len(S) // 2]\nlast = S[len(S) // 2 + 1:]\nif first != first[::-1]:\n    answer = 'No'\nif last != last[::-1]:\n    answer = 'No'\nprint(answer)", "coverage": [">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">"]}, "9800": {"id": 9800, "code": "n = 6\ns = \")))())\"\nwhile True:\n  c = 0\n  for i in range(len(s)):\n    if s[i] == \"(\":\n      c += 1\n    else:\n      c -= 1\n    if c < 0:\n      s = \"(\" + s\n      break\n  if c > 0:\n    s = s + \")\"\n  if c == 0:\n    print(s)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "10861": {"id": 10861, "code": "S = \"akasaka\"\nif S != S[::-1]:\n    print(\"No\")\n    exit()\nif S[:len(S)//2] != S[:len(S)//2][::-1]:\n    print(\"No\")\n    exit()\nprint(\"Yes\")", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "6509": {"id": 6509, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b) \n    c = N - bisect.bisect_right(C, b) \n    ans += a * c  \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2956": {"id": 2956, "code": "s = \"35753\"\nm=float('inf')\nfor i in range(len(s)-2):\n    v=int(s[i:i+3])\n    m=min(m,abs(753-v))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9779": {"id": 9779, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nans = \"\"\nl = 0\nfor i in range(n):\n    ans += s[i]\n    if s[i] == \")\":\n        if l == 0:\n            ans = \"(\" + ans\n        else:\n            l -= 1\n    else:\n        l += 1\nans += (\")\"*l)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "13138": {"id": 13138, "code": "n = 5\nif n in [7,5,3]: print('YES')\nelse: print('NO')", "coverage": [">", ">", "!"]}, "12908": {"id": 12908, "code": "n = 5\nprint(\"YES\" if n in [3, 5, 7] else \"NO\")", "coverage": [">", ">"]}, "12508": {"id": 12508, "code": "a = 8;b = 12;x = 2\ncount = 0\nfor i in range(max(a,b),0,-1):\n    if a % i == 0 and b % i == 0:\n        count += 1\n    if count == x:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10641": {"id": 10641, "code": "a = 1;b = 1;k = 1\nc = 0\nans = []\nif a > b:\n  c = b\nelse:\n  c = a\nfor i in range(1, c+1):\n  if a % i == 0 and b % i == 0:\n    ans.append(i)\n  else:\n    continue\nprint(ans[-k])", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "11981": {"id": 11981, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2==1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "380": {"id": 380, "code": "s = ['x', 'y', 'z']\nK = 4\ni=0\nwhile i<len(s):\n    if i==len(s)-1:\n        s[i]=chr(97+(ord(s[i])-97+K)%26)\n        break\n    if K<abs(123-ord(s[i]))%26:\n        i+=1\n    elif K>=abs(123-ord(s[i]))%26:\n        sub=abs(123-ord(s[i]))%26\n        s[i]=\"a\"\n        K-=sub\n        i+=1\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19504": {"id": 19504, "code": "R = 10\nif R%2==0:\n    print(R)\nelse:\n    print(R*2)", "coverage": [">", ">", ">", "!", "!"]}, "18217": {"id": 18217, "code": "import math\nh = 14\nw = 12\nn = 112\nif h>=w: print(math.ceil(n/h))\nelse: print(math.ceil(n/w))", "coverage": [">", ">", ">", ">", ">", "!"]}, "13568": {"id": 13568, "code": "S = \"happy,newyear,enjoy\"\nS=S.replace(',',' ')\nprint(S)", "coverage": [">", ">", ">"]}, "10030": {"id": 10030, "code": "n = 8\ns = \"))))((((\"\nleft=0\nright=0\nfor s_i in s:\n    if s_i=='(':\n        right+=1\n    elif s_i==')':\n        if right>0:\n            right-=1\n        else:\n            left+=1\nprint('('*left+s+')'*right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "7327": {"id": 7327, "code": "H = 210;N = 5\ndata = [31, 41, 59, 26, 53]\nsum = sum(data)\nif H - sum > 0:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6301": {"id": 6301, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt=0\nfor x in b:\n     a_=bisect.bisect_left(a,x)\n     c_=n-bisect.bisect_right(c,x)\n     cnt+=a_*c_\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10631": {"id": 10631, "code": "A = 8;B = 12;K = 2\nans = 0\ncurr = min(A, B)\nwhile K > 0:\n    if A % curr == 0 and B % curr == 0:\n        K -= 1\n        ans = curr\n    curr -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2489": {"id": 2489, "code": "n1 = {0, 9, 4, 8}\nn2 = set((1,7,9,4))\nans='YES' if n1==n2 else 'NO'\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "12634": {"id": 12634, "code": "X = \"5\"\nans = 'NO'\nif X in ['3','5','7']:\n  ans = 'YES'\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17899": {"id": 17899, "code": "s = \"0112\"\ntemp1 = int(s[0:2])\ntemp2 = int(s[2:4])\nif temp1 >= 1 and temp1 <= 12:\n    if (temp2 < 1 or temp2 > 12):\n        print(\"MMYY\")\n    else:\n        print(\"AMBIGUOUS\")\nelse:\n    if (temp2 >= 1 and temp2 <= 12):\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "922": {"id": 922, "code": "k = 101\nmod = 7 % k\ncounter = 1\nmemo = 1\nmod_map = set()\nmod_map.add(mod)\nwhile mod != 0:\n    mod = ((mod * 10) % k + 7) % k\n    if mod not in mod_map:\n        mod_map.add(mod)\n    else:\n        counter = -1\n        break\n    counter += 1\n    if mod == 0:\n        break\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "12259": {"id": 12259, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"akasaka\"\nn = len(s)\nt = s[0:(n-1)//2]\nq = s[(n+2)//2:n]\nif s == s[::-1] and t == t[::-1] and q == q[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10980": {"id": 10980, "code": "import sys\ninput = sys.stdin.readline\ns = \"leve\";n = 4\nprint('Yes' if s == s[::-1] and s[:(n-1)//2] == s[:(n-1)//2][::-1] and s[(n+1)//2:] == s[(n+1)//2:][::-1] else 'No')", "coverage": [">", ">", ">", ">"]}, "7597": {"id": 7597, "code": "h = 10;n = 3\na = [4, 5, 6]\nprint(\"Yes\" if sum(a) >= h else \"No\")", "coverage": [">", ">", ">"]}, "2002": {"id": 2002, "code": "n = 100;a = 100;b = 100\nma = min(a,b)\nif a+b <=n:\n  mi = 0\nelif a+b >n:\n  mi = abs(n-(a+b))\nprint(ma,mi)", "coverage": [">", ">", ">", "!", ">", ">", ">"]}, "9552": {"id": 9552, "code": "S = \"2017/01/07\"\nprint(S.replace(S[0:4],\"2018\"))", "coverage": [">", ">"]}, "16882": {"id": 16882, "code": "a = \"D\";b = \"H\"\nif a==b:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "16667": {"id": 16667, "code": "a = \"D\";b = \"D\"\nprint(\"DH\"[a==b])", "coverage": [">", ">"]}, "8668": {"id": 8668, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16635": {"id": 16635, "code": "a = \"H\";b = \"H\"\nif a==\"H\":\n    if b==\"H\":\n        ans=\"H\"\n    elif b==\"D\":\n        ans=\"D\"\nelif a==\"D\":\n    if b==\"H\":\n        ans=\"D\"\n    elif b==\"D\":\n        ans=\"H\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "7681": {"id": 7681, "code": "h = 10;n = 3\na = [4, 5, 6]\nb=sum(a)\nif (b>=h):\n    print('Yes')\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10902": {"id": 10902, "code": "S = \"akasaka\"\nprint(\"Yes\" if ( S==S[::-1] and S[:int((len(S)-1)/2)]==S[:int((len(S)-1)/2)][::-1] ) else \"No\")", "coverage": [">", ">"]}, "16857": {"id": 16857, "code": "s = \"H H\"\nprint(\"H\" if s==\"H H\" or s==\"D D\" else \"D\")", "coverage": [">", ">"]}, "14136": {"id": 14136, "code": "N = 6\nsrc = [1, 2, 3, 2, 2, 1]\nasc = None\nans=1\nfor i in range(N-1):\n    d = src[i+1]-src[i]\n    if d==0:\n        continue\n    if asc==None:\n        asc = d > 0\n        continue\n    if (asc and d<0) or (not asc and d>0):\n        asc = None\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13455": {"id": 13455, "code": "a = \"haiku,atcoder,tasks\"\nprint(a.replace(\",\",\" \"))", "coverage": [">", ">"]}, "12881": {"id": 12881, "code": "x = \"6\"\nif x in '753':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "14185": {"id": 14185, "code": "_ = \"6\"\nA = map(int, \"1 2 3 2 2 1\".split())\nprev = next(A)\nup = None\ncount = 1\nfor i in A:\n    if prev < i:\n        if up is None:\n            up = True\n        elif not up:\n            count += 1\n            up = None\n    elif prev > i:\n        if up is None:\n            up = False\n        elif up:\n            count += 1\n            up = None\n    prev = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8128": {"id": 8128, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif N == K:\n    print('1')\nelse:\n    print(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19047": {"id": 19047, "code": "n = 12\nif n%2 != 0:\n    print(0)\nelse:\n    ans = 0\n    n = n//10\n    ans += n\n    while n > 0:\n        n //= 5\n        ans += n\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4516": {"id": 4516, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\ntop=s[0]\ntail=s[-1]\nnum=str(len(s)-2)\nprint(top+num+tail)", "coverage": [">", ">", ">", ">", ">"]}, "3550": {"id": 3550, "code": "A = 12;B = 4\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10313": {"id": 10313, "code": "a = 1;b = 1;k = 1\nn=max(a,b)\nA=[]\nfor i in range(1,n+1):\n    if  a%i==b%i==0:\n         A.append(i)\nA.sort(reverse = True)\nprint(A[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18079": {"id": 18079, "code": "s = \"1905\"\nans = {(False, False): 'NA', (False, True): 'YYMM', (True, False): 'MMYY', (True, True): 'AMBIGUOUS'}\nprint(ans[1 <= int(s[:2]) <= 12, 1 <= int(s[2:]) <= 12])", "coverage": [">", ">", ">"]}, "1236": {"id": 1236, "code": "s = \"112\"\nans = 0\nif int(s[0]) >= int(s[1]) and int(s[0]) >= int(s[2]):\n    ans = int(s[0]) * 100 + int(s[0]) * 10 + int(s[0]) * 1\nelse:\n    ans = int(s[0]) * 100 + int(s[0]) * 10 + int(s[0]) * 1 + 111\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1386": {"id": 1386, "code": "n = 111\nstr_n = str(n)\nketa = len(str_n)\nsuji = [str(i) for i in range(10)]\nans = 0\nfor i in range(int(str_n[0]),10):\n    tmp = ''\n    for j in range(keta):\n        tmp += suji[i]\n    if int(tmp)>=n:\n        ans = int(tmp)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14434": {"id": 14434, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ntop = True\nfor i in range(1,N):\n    if A[i] == A[i-1]:\n        continue\n    if top == True:\n        inc = (A[i]>A[i-1])\n        top = False\n        continue\n    flag = (A[i]>A[i-1])\n    if inc != flag:\n        cnt += 1\n        top = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4547": {"id": 4547, "code": "w = \"smiles\"\nprint(w[0] + str(len(w)-2) + w[-1])", "coverage": [">", ">"]}, "10099": {"id": 10099, "code": "n = 8\ns = \"))))((((\"\ncountr, countl = 0, 0\nfor i in range(n-1, -1, -1):\n    if s[i] == ')': countr += 1\n    elif countr > 0: countr -= 1\ns = '('*countr+s\nn = len(s)\nfor i in range(n):\n    if s[i] == '(': countl += 1\n    elif countl > 0: countl -= 1\ns += ')'*countl\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16642": {"id": 16642, "code": "A = \"D\";B = \"H\"\nif A==B:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "12732": {"id": 12732, "code": "x = 5\na = set([7,5,3])\nprint('YES' if x in a else 'NO')", "coverage": [">", ">", ">"]}, "11813": {"id": 11813, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif (M1 != M2 and M2>M1) or M2 == 1 and M2<M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18141": {"id": 18141, "code": "S = \"0112\"\nans = [0,0]\nif 1<=int(S[:2]) and int(S[:2]) <= 12 :\n    ans[0] = 1\nif 1 <=int(S[2:]) and int(S[2:]) <= 12 :\n    ans[1] = 1\nif ans == [1,1] :\n    print('AMBIGUOUS')\nelif ans == [0,0] :\n    print('NA')\nelif ans == [0,1] :\n    print('YYMM')\nelif ans == [1,0] :\n    print('MMYY')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "15599": {"id": 15599, "code": "X = 64146;Y = 123;Z = 456\nprint(X//(Y+Z) if (X%(Y+Z))>=Z else (X//(Y+Z))-1)", "coverage": [">", ">"]}, "8083": {"id": 8083, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\npos = A.index(1)\ncount = 0\nnum_forward = pos  \nnum_backward = N - pos - 1  \nrest = num_forward % -(K - 1)\nnum_backward += rest\nwhile num_forward > 0:  \n    num_forward -= K - 1\n    count += 1\nwhile num_backward > 0:  \n    num_backward -= K - 1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9527": {"id": 9527, "code": "s = \"2017/01/31\"\nprint(s.replace('7', '8', 1))", "coverage": [">", ">"]}, "9251": {"id": 9251, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = '8'\nprint(''.join(S))", "coverage": [">", ">", ">"]}, "12383": {"id": 12383, "code": "S = \"level\"\nflag = True\nN = len(S)\nfor i in range(N // 2):\n    if S[i] != S[-1 * i-1]:\n        flag = False\nfor i in range((N-1)//2-1):\n    if S[i] != S[(N-1)//2-1-i]:\n        flag = False\nfor i in range((N+3)//2,N-1):\n    if S[i] != S[-1 * i-1]:\n        flag = False\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "19100": {"id": 19100, "code": "N = 12\nif N % 2:\n    print(0)\n    exit()\nans = 0\ntmp = 10\nwhile N >= tmp:\n    ans += N//tmp\n    tmp *= 10\ntmp = 50\ntmp_2 = 100\nwhile N >= tmp:\n    ans += N//tmp - N//tmp_2\n    tmp *= 5\n    tmp_2 *= 10\nprint(ans)\nans = 0", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "8364": {"id": 8364, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9080": {"id": 9080, "code": "a = 1;e = 9\nif e - a <= int(\"15\"):\n  print('Yay!')\nelse:\n  print(':(')", "coverage": [">", ">", ">", "!", "!"]}, "2332": {"id": 2332, "code": "N = 13;M = 3\na = N*(N-1) // 2\nb = M*(M-1) // 2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "3656": {"id": 3656, "code": "n = 12;m = 4\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "9390": {"id": 9390, "code": "s = \"2017/01/07\"\nprint(\"2018\"+s[4:])", "coverage": [">", ">"]}, "11055": {"id": 11055, "code": "s = \"level\"\nn=len(s)//2\nif s[:n]==s[n+1:]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "8927": {"id": 8927, "code": "N = 7\nA=[0,0]\nA = [[3, 3, 4, 5, 4, 5, 3], 0]\nA = [[3, 3, 4, 5, 4, 5, 3], [5, 3, 4, 4, 2, 3, 2]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15662": {"id": 15662, "code": "x = 64146;y = 123;z = 456\nnum = x//(y+z)\nmod = x%(y+z)\nif 0<=mod<z:num-=1\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "11748": {"id": 11748, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nans = 1 if d2 == 1 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3000": {"id": 3000, "code": "S = \"1234567876\"\nN = len(S)\na = int(S[:2])\nans = 753\nfor i in range(2, N):\n  a = 10 * a + int(S[i])\n  a %= 1000\n  ans = min( ans, abs(753-a) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2258": {"id": 2258, "code": "a = 10;b = 7;c = 5\nprint(min(b,c),b+c-a if b + c >= a else 0)", "coverage": [">", ">"]}, "15937": {"id": 15937, "code": "a = 20;b = 30\nc=a-2*b\nif c<0:\n    c=0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "11856": {"id": 11856, "code": "n = 11;m = 16\nx = 11;y = 17\nif n!=x:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "5236": {"id": 5236, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nL=[s[0]]\nL.append(str(len(s)-2))\nL.append(s[-1])\nprint(''.join(L))", "coverage": [">", ">", ">", ">", ">"]}, "16935": {"id": 16935, "code": "tmp = ['H', 'H']\nprint(\"H\") if tmp[0] == tmp[1] else print(\"D\")", "coverage": [">", ">"]}, "2457": {"id": 2457, "code": "a = \"4\";b = \"9\";c = \"0\";d = \"8\"\ns = set()\ns.add(a)\ns.add(b)\ns.add(c)\ns.add(d)\nif s == {\"1\",\"9\",\"7\",\"4\"}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4770": {"id": 4770, "code": "s = \"xyz\"\nss = s[0] + str(len(s)-2) + s[len(s)-1]\nprint(ss)", "coverage": [">", ">", ">"]}, "12516": {"id": 12516, "code": "A = 100;B = 50;K = 4\nl=[]\nfor i in range(1,min(A,B)+1):\n    if A%i==0 and B%i==0:\n        l.append(i)\nl=sorted(l)[::-1]\nprint(l[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6638": {"id": 6638, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor i in range(n):\n    num = b[i]\n    x = bisect.bisect_left(a, num)\n    y = bisect.bisect_right(c, num)\n    ans += x * (n - y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17035": {"id": 17035, "code": "a = \"D\";b = \"H\"\nif a == 'D':\n  b = 'D' if b == 'H' else 'H'\nprint(b)", "coverage": [">", ">", ">", ">"]}, "18981": {"id": 18981, "code": "import sys\nn = 12\nif n % 2 == 1:\n  print(0)\n  sys.exit()\nans = 0\nx = 2\nwhile n >= x:\n  x *= 5\n  ans += n // x\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18250": {"id": 18250, "code": "import math\nh = 2\nw = 100\nn = 200\na=max(h,w)\nprint(math.ceil(n/a))", "coverage": [">", ">", ">", ">", ">", ">"]}, "12137": {"id": 12137, "code": "n_1 = [11, 16]\nn_2 = [11, 17]\nif n_1[0] != n_2[0]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16410": {"id": 16410, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nx = a[-1]\ny1 = x//2\ny2 = x//2 + 1\nsa1, sa2 = float(\"inf\"), float(\"inf\")\nz1, z2 = 0, 0\nfor i in range(n-1):\n    if sa1 > abs(y1 - a[i]):\n        sa1 = abs(y1-a[i])\n        z1 = a[i]\n    if sa2 > abs(y2 - a[i]):\n        sa2 = abs(y2 - a[i])\n        z2 = a[i]\nif sa1 > sa2:\n    print(x, z2)\nelse:\n    print(x, z1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15144": {"id": 15144, "code": "N = 1;P = 1\nA = [50]\nA = sorted(A,reverse = False)\ndp = [[0]*2 for _ in range(N+1)]\ndp[0] = [1,0]\nfor v in range(1,N+1):\n    if A[v-1]%2 == 0:\n        dp[v][0] = dp[v-1][0]*2\n        dp[v][1] = dp[v-1][1]*2\n    else:\n        dp[v][0] = dp[v-1][1] + dp[v-1][0]\n        dp[v][1] = dp[v-1][0] + dp[v-1][1]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "17905": {"id": 17905, "code": "S = \"0112\"\nsform = int(S[:2])\nslatt = int(S[2:])\nif sform <= 12 and sform >= 1:\n    if slatt <= 12 and slatt >= 1:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if slatt <= 12 and slatt >= 1:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4334": {"id": 4334, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nT1=H1*60+M1\nT2=H2*60+M2\nprint(max(T2-T1-K,0))", "coverage": [">", ">", ">", ">"]}, "3804": {"id": 3804, "code": "x = 100000;y = 1;z = 1\nw=y+z\nprint(x//w if x%w>=z else x//w-1)", "coverage": [">", ">", ">"]}, "1907": {"id": 1907, "code": "n = 10;a = 7;b = 5\nif a+b <= n:\n    min_p = 0\nelse:\n    min_p = abs(n-a-b)\nmax_p = min([a,b])\nprint(max_p, min_p)", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "12403": {"id": 12403, "code": "S = \"akasaka\"\nS2=S[:(len(S)-1)//2]\nS3=S[(len(S)+3)//2-1:]\nif S==S[::-1] and S2==S2[::-1] and S3==S3[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "17275": {"id": 17275, "code": "a = \"D\";b = \"H\"\nif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "5310": {"id": 5310, "code": "n = 100\nprint(n//2 if n%2 == 0 else n//2+1)", "coverage": [">", ">"]}, "5410": {"id": 5410, "code": "from math import *\nx=int(\"5\")\nprint(ceil(x/2))", "coverage": [">", ">", ">"]}, "12450": {"id": 12450, "code": "S = ['l', 'e', 'v', 'e', 'l']\nN = len(S)\nif S == S[::-1] and S[:(N - 1) // 2] == S[:(N - 1) // 2][::-1] and S[(N - 1) // 2 + 1:] == S[(N - 1) // 2 + 1:][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "16252": {"id": 16252, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\ns=a[-1]/2\nb=[[i,abs(i-s)] for i in a]\nb.sort(key=lambda z:z[1])\nprint(a[-1],b[0][0])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16172": {"id": 16172, "code": "n = 5\nA = [6, 9, 4, 2, 11]\nmax_val = max(A)\nmid_val = max_val - max_val//2\nm = 0\nfor a in A:\n    if abs(a - mid_val) < abs(m - mid_val):\n        m = a\nprint(\"{} {}\".format(max_val, m))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9471": {"id": 9471, "code": "S = \"2017\";T = \"01\";U = \"31\"\nprint(\"2018/\"+T+\"/\"+U)", "coverage": [">", ">"]}, "11944": {"id": 11944, "code": "m1 = [11, 16]\nm2 = [11, 17]\nif m1[0]!=m2[0]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "6007": {"id": 6007, "code": "n = 5\nans = n//2\nif n%2 == 1:\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11655": {"id": 11655, "code": "S = \"SUN\"\nlis = ['SUN',\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7-lis.index(S))", "coverage": [">", ">", ">"]}, "1495": {"id": 1495, "code": "N = 111\ni=0\nwhile True:\n    listN = list(str(N))\n    if listN[0]==listN[1] and listN[1]==listN[2]:\n        print(N)\n        break\n    N+=1", "coverage": [">", ">", ">", ">", ">", ">", ">", "!"]}, "5855": {"id": 5855, "code": "n = 2\nprint(int((n + 1)/2))", "coverage": [">", ">"]}, "9986": {"id": 9986, "code": "n = \"6\"\ns = \")))())\"\ncount = 0\nmax_l = 0\nmax_r = 0\nfor c in s:\n    if c ==\"(\":\n        count -= 1\n    else:\n        count += 1\n    max_l = max(max_l, count)\ncount = 0\nfor c in s[::-1]:\n    if c ==\"(\":\n        count += 1\n    else:\n        count -= 1\n    max_r = max(max_r, count)\nprint(\"(\"*max_l + s + \")\"*max_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "5355": {"id": 5355, "code": "import math\nN = 100\nresult=math.ceil(N/2)\nprint(result)", "coverage": [">", ">", ">", ">"]}, "16666": {"id": 16666, "code": "a = \"D\";b = \"H\"\nprint(\"DH\"[a==b])", "coverage": [">", ">"]}, "4195": {"id": 4195, "code": "s = [10, 0, 12, 0, 120]\nh = 60 * (s[2]-s[0])\nm = s[3] - s[1]\nk = s[4]\nprint(h+m-k)", "coverage": [">", ">", ">", ">", ">"]}, "2906": {"id": 2906, "code": "a = \"35753\"\nans = 10000\nfor i in range(len(a)-2):\n  ans = min(abs(753-int(a[i:i+3])),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "16461": {"id": 16461, "code": "n = 2\na = [100, 0]\na.sort()\nai = a[-1]\naj = a[0]\nfor i in a[:-1]:\n    if abs(ai/2-i) < abs(ai/2-aj):\n        aj = i\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "6723": {"id": 6723, "code": "h = 10;n = 3\na = [4, 5, 6]\nsuma = sum(a)\nprint('Yes' if h - suma <= 0 else 'No')", "coverage": [">", ">", ">", ">"]}, "4603": {"id": 4603, "code": "N = \"internationalization\"\nprint(N[0]+str(len(N)-2)+N[-1])", "coverage": [">", ">"]}, "14777": {"id": 14777, "code": "n = 2;p = 0\na = [1, 3]\ncnt = [0] * 2\nfor num in a:\n    cnt[num % 2] += 1\nif cnt[1] == 0:\n    if p == 0:\n        print(2 ** n)\n    else:\n        print(0)\nelse:\n    print(2 ** ( n - 1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "5279": {"id": 5279, "code": "s = {'9', '4', '0', '8'}\nans = {'1', '9', '7', '4'}\nprint('YES' if s==ans else 'NO')", "coverage": [">", ">", ">"]}, "11734": {"id": 11734, "code": "m1 = 11;d = 16\nd = 17;m2 = 11\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "18932": {"id": 18932, "code": "N = 12\nif N%2:\n    print(0)\nelse:\n    ans=0\n    tmp=10\n    while tmp<=N:\n        ans+=N//tmp\n        tmp*=5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "5730": {"id": 5730, "code": "import math\nN = 100\nif N % 2 ==0:\n    print(math.floor(N/2))\nelse:\n    print(math.floor(N/2)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15748": {"id": 15748, "code": "X = 64145;Y = 123;Z = 456\nprint( (X-Z) // (Z+Y) )", "coverage": [">", ">"]}, "88": {"id": 88, "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n    if s[i] == \"a\":\n        continue\n    c = ord(s[i]) - ord(\"a\")\n    if k >= (26 - c):\n        k -= 26 - c\n        s[i] = \"a\"\ns[-1] = chr(((ord(s[-1]) - ord(\"a\")) + k) % 26 + ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "1716": {"id": 1716, "code": "n = 10;a = 7;b = 5\nv_max = min(n,a,b)\nv_min = max(a+b-n, 0)\nprint(v_max, v_min)", "coverage": [">", ">", ">", ">"]}, "14365": {"id": 14365, "code": "n = 9\nif n==1:\n  print(1)\n  exit()\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nif a[0]<a[1]:flag=1\nelif a[0]>a[1]:flag=-1\nelse:flag=0\nfor i in range(1,n-1):\n  if flag==1 and a[i]>a[i+1]:\n    ans+=1\n    flag=0\n  elif flag==-1 and a[i]<a[i+1]:\n    ans+=1\n    flag=0\n  else:\n    if a[i]>a[i+1]:flag=-1\n    elif a[i]<a[i+1]:flag=1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "6346": {"id": 6346, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    lenA = bisect.bisect_left(A,b)\n    lenC = N - bisect.bisect(C,b)\n    ans += lenA*lenC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12038": {"id": 12038, "code": "input1 = [11, 30]\ninput2 = [12, 1]\nm1 = input1[0]\nd1 = input1[1]\nm2 = input2[0]\nd2 = input2[1]\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2704": {"id": 2704, "code": "if sorted(list(map(int, \"1 7 9 4\".split()))) == [1, 4, 7, 9]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "13227": {"id": 13227, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0] + s[1] + s[2] + s[3] + s[4] + \" \" + s[6] + s[7] + s[8] + s[9] + s[10] + s[11] + s[12] + \" \" + s[14] + s[15] + s[16] + s[17] + s[18])", "coverage": [">", ">"]}, "5786": {"id": 5786, "code": "n = 2\nif n%2==0:\n    print(n//2)\nelse:print(n//2+1)", "coverage": [">", ">", ">", "!"]}, "7056": {"id": 7056, "code": "H = 20;N = 3\ndata = [4, 5, 6]\nif H <= sum(data):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "4319": {"id": 4319, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\na1 = 60*h1 + m1\na2 = 60*h2 + m2\nduration = abs(a2-a1)\nans = duration-k\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12033": {"id": 12033, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(c-a)", "coverage": [">", ">", ">"]}, "13126": {"id": 13126, "code": "check = [7,5,3]\nx = 5\nprint(\"YES\" if x in check else \"NO\")", "coverage": [">", ">", ">"]}, "3841": {"id": 3841, "code": "X = 12;Y = 3;Z = 1\nX -= 2 * Z\nans, r = divmod(X, Y + Z)\nif r >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "12074": {"id": 12074, "code": "l=[31,28,31,30,31,30,31,31,30,31,30,31]\ns = [11, 30]\nd = [12, 1]\nx=l[s[0]-1]\nif(x!=s[1]):\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7269": {"id": 7269, "code": "H = 210;N = 5\nA_list = map(int, \"31 41 59 26 53\".split())\nans = \"Yes\" if sum(A_list) >= H else \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8728": {"id": 8728, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5367": {"id": 5367, "code": "n = 100\nans = int(n/2) + n%2\nprint(ans)", "coverage": [">", ">", ">"]}, "17627": {"id": 17627, "code": "z = \"1700\"\nx = int(z[:2])\ny = int(z[2:])\nif (0<x <= 12):\n      if (0<y<= 12):\n            print(\"AMBIGUOUS\")\n      else:\n            print(\"MMYY\")\nelif (0<y <= 12):\n      if (0<x<= 12):\n            print(\"AMBIGUOUS\")\n      else:\n            print(\"YYMM\")\nelse:\n      print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">"]}, "4091": {"id": 4091, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nokiteiru = (h2*60+m2)-(h1*60+m1)\nprint(okiteiru - k)", "coverage": [">", ">", ">"]}, "2156": {"id": 2156, "code": "N = 10;A = 7;B = 5\nmaxv = min(A, B)\nminv =  max(0, maxv - (N-max(A, B)))\nprint(maxv, minv)", "coverage": [">", ">", ">", ">"]}, "14300": {"id": 14300, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nup,down = 1,1\nfor i in range(1,N):\n  if A[i-1] > A[i]:\n    up = 0\n    if down == 0:\n      count += 1\n      up,down = 1,1\n  elif A[i-1] < A[i]:\n    down = 0\n    if up == 0:\n      count += 1\n      up,down = 1,1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11294": {"id": 11294, "code": "d='SUN,MON,TUE,WED,THU,FRI,SAT'.split(',')\ns = \"SAT\"\nprint(7 - d.index(s))", "coverage": [">", ">", ">"]}, "7387": {"id": 7387, "code": "a = 10;b = 3\nl = [4, 5, 6]\nfor i in range(b):\n  a-=l[i]\nprint(\"Yes\" if a<=0 else\"No\")", "coverage": [">", ">", ">", ">", ">"]}, "12419": {"id": 12419, "code": "s = \"level\"\na=s[:len(s)//2+1//2]\nb=s[len(s)//2+1:]\nif s==s[::-1] and a==a[::-1] and b==b[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14973": {"id": 14973, "code": "N = 3;P = 0\nA = [1, 1, 1]\ndp=[0]*(N+2)\ndp[0]=(P+1)%2\nfor i in range(1,N+1):\n    if A[i-1]%2==0:\n        dp[i]=2*dp[i-1]\n    else:\n        dp[i]=(2**(i-1)-dp[i-1])+dp[i-1]\nprint(dp[N])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15626": {"id": 15626, "code": "x = 12;y = 3;z = 1\ncount = 0\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">", ">"]}, "5437": {"id": 5437, "code": "n = 5\nprint(n//2) if n%2==0 else print(n//2+1)", "coverage": [">", ">"]}, "16575": {"id": 16575, "code": "a = \"H\";b = \"H\"\na = (a == \"H\")\nb = (b == \"H\")\nif a and b:\n    print(\"H\")\nelif a and (not b):\n    print(\"D\")\nelif (not a) and b:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "14076": {"id": 14076, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ndr = 0\nsav = a[0]\nfor i in range(1, n):\n    if dr == 0:\n        if sav < a[i]:\n            dr = 1\n        elif sav > a[i]:\n            dr = -1\n    elif dr == 1:\n        if sav > a[i]:\n            cnt = cnt + 1\n            dr = 0\n    elif dr == -1:\n        if sav < a[i]:\n            cnt = cnt + 1\n            dr = 0\n    sav = a[i]\nans = cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9446": {"id": 9446, "code": "S = \"2017/01/07\"\nans = '2018/01/' + S[8:]\nprint(ans)", "coverage": [">", ">", ">"]}, "11554": {"id": 11554, "code": "week = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nS = \"SUN\"\nans = 7\nfor i in range(len(week)):\n    if S == week[i]:\n        ans -= i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4303": {"id": 4303, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nstart,end = 60*H1+M1,60*H2+M2\nprint(abs(start-end) - K) if end-K>0 else print(0)", "coverage": [">", ">", ">"]}, "843": {"id": 843, "code": "k = 2\na=7\nfor i in range(k):\n    if a%k==0:\n        print(i+1)\n        exit()\n    a=(a*10+7)%k\nprint(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "14285": {"id": 14285, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nres = 0\nwhile  i < N:\n    while i+1 < N and A[i] == A[i+1]: i += 1\n    if i+1 < N and A[i] <= A[i+1]:\n        while i+1 < N and A[i] <= A[i+1]: i += 1\n    elif i+1 < N and A[i] >= A[i+1]:\n        while i+1 < N and A[i] >= A[i+1]: i += 1\n    res += 1\n    i += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6380": {"id": 6380, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nfrom bisect import*\nans=0\nfor b in B:\n    x=bisect_left(A,b)\n    y=N-bisect_right(C,b)\n    ans+=x*y\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16969": {"id": 16969, "code": "a = \"D\";b = \"H\"\nok = [(\"H\", \"H\"), (\"D\", \"D\")]\nif (a, b) in ok:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "18369": {"id": 18369, "code": "from math import ceil\nh = 14\nw = 12\nn = 112\nres=ceil(n/max(h,w))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9708": {"id": 9708, "code": "n = 6\ns = \")))())\"\nwrittenC = 0\nwrittenD = 0\nfor i in range(n):\n    if s[i] == \")\" and writtenC == 0:\n        writtenD += 1\n    elif s[i] == \")\":\n        writtenC -= 1\n    else:\n        writtenC += 1\nprint(\"(\" * writtenD + s + \")\"*writtenC)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6724": {"id": 6724, "code": "h = 20;n = 3\na = [4, 5, 6]\nsuma = sum(a)\nprint('Yes' if h - suma <= 0 else 'No')", "coverage": [">", ">", ">", ">"]}, "7898": {"id": 7898, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nif (n==k):\n    print(1)\nelse:\n    print(1+(n-k-1)//(k-1)+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15636": {"id": 15636, "code": "x = 12;y = 3;z = 1\nans = 0\nx -= 2 * z\nwhile x >= y:\n    x -= y\n    ans += 1\n    x -= z\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15373": {"id": 15373, "code": "X = 64145;Y = 123;Z = 456\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "10094": {"id": 10094, "code": "n = 3\ns = ['(', ')', ')']\nco, cc = 0, 0\nfor ch in s:\n    if ch == '(':\n        co += 1\n    if ch == ')':\n        if co > 0:\n            co -= 1\n        else:\n            cc += 1\nans = \"(\" * cc + \"\".join(s) + \")\" * co\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "12819": {"id": 12819, "code": "X = 6\nx = [3, 5, 7]\nfor i in range(3):\n    if X == x[i]:\n        print('YES')\n        break\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "16105": {"id": 16105, "code": "a = 20;b = 15\nresult = a - (b * 2)\nif result <= 0:\n    result = 0\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "12556": {"id": 12556, "code": "a = 100;b = 50;k = 4\nminnum = min(a,b)\nmaxnum = max(a,b)\nlis = []\nfor mi in reversed(range(1,minnum+1)):\n  if minnum % mi == 0 and maxnum % mi == 0:\n    lis.append(mi)\nprint(lis[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6467": {"id": 6467, "code": "import bisect as bi\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in b:\n  ans+=bi.bisect_left(a,i)*(N-bi.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12042": {"id": 12042, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nans = 1 if M1 + 1 == M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "2996": {"id": 2996, "code": "S = \"1111111111\"\nm = float(\"inf\")\nfor i in range(len(S)-2):\n    m = min(m, abs(753 - int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "4020": {"id": 4020, "code": "x1 = 10;y1 = 0;x2 = 15;y2 = 0;t = 30\nprint((x2-x1)*60+(y2-y1)-t)", "coverage": [">", ">"]}, "14734": {"id": 14734, "code": "N = 2;P = 0\no = 2\nprint(2**(N-1) if o else 2**N if P==0 else 0)", "coverage": [">", ">", ">"]}, "3277": {"id": 3277, "code": "A = 20;B = 15\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16405": {"id": 16405, "code": "import bisect\nn = 2\na = [100, 0]\na.sort()\nnum=a[-1]/2\nb=bisect.bisect_left(a,num)\nif abs(num-a[b])<abs(num-a[b-1]):\n  print(a[-1],a[b])\nelse:\n  print(a[-1],a[b-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1425": {"id": 1425, "code": "x = [i * 111 for i in range(1, 10)]\nN = 112\nfor j in range(len(x)):\n  if 0 <= x[j] - N <= 110:\n    print(x[j])\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "5049": {"id": 5049, "code": "s = \"xyz\"\nprint(s[:1]+str(len(s)-2)+s[len(s)-1])", "coverage": [">", ">"]}, "102": {"id": 102, "code": "if __name__ == \"__main__\":\n    s = \"xyz\"\n    k = 4\n    s_num = [0] * len(s)\n    res = k\n    for i in range(len(s)):\n        tmp = ord(s[i]) - 97\n        if tmp != 0 and 26 - tmp <= res:\n            res -= (26 - tmp)\n            s_num[i] = 0\n        else:\n            s_num[i] = tmp\n    res %= 26\n    s_num[-1] += res\n    ans = ''\n    for i in s_num:\n        ans += chr(i + 97)\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4360": {"id": 4360, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh_dif = h2 - h1\nm_dif = m2 - m1\ntime = 60*h_dif + m_dif\nprint(time - k)", "coverage": [">", ">", ">", ">", ">"]}, "4293": {"id": 4293, "code": "H_1 = 10;M_1 = 0;H_2 = 15;M_2 = 0;K = 30\ntime_1 = H_1*60+M_1\ntime_2 = H_2*60+M_2\nprint(time_2-time_1-K)", "coverage": [">", ">", ">", ">"]}, "13785": {"id": 13785, "code": "import math\nh_one = 10;m_one = 0;h_two = 15;m_two = 0;k = 30\nhour = h_two - (h_one + 1)\nminute = (60 - m_one) + m_two\nprint(60*hour + minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "4639": {"id": 4639, "code": "s = \"internationalization\"\nle = len (s)-2\nle = str (le)\nprint (s[0]+le+s[-1])", "coverage": [">", ">", ">", ">"]}, "14469": {"id": 14469, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nsw=\"1\"\nans=1\nfor i in range(N-1):\n    if sw==\"1\":\n        if A[i]>A[i+1]:\n            sw=\"2\"\n        if A[i]<A[i+1]:\n            sw=\"3\"\n    elif sw==\"2\":\n        if A[i]<A[i+1]:\n            ans+=1\n            sw=\"1\"\n    elif sw==\"3\":\n        if A[i]>A[i+1]:\n            ans+=1\n            sw=\"1\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13101": {"id": 13101, "code": "A = [7,5,3]\nn = 6\nif n in A:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "16488": {"id": 16488, "code": "n = 5\na = [6, 9, 4, 2, 11]\nm = max(a)\nr = -1\nfor i in a:\n  if i != m and abs(m - 2 * i) < abs(m - 2 * r):\n    r = i\nprint(m, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14323": {"id": 14323, "code": "N = 7\nans = 1\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = A[0]\ntrend = 0\nfor a in A[1:]:\n    if (a - prev) * trend < 0:\n        ans += 1\n        trend = 0\n    elif trend == 0:\n        if a - prev > 0:\n            trend = 1\n        elif a - prev < 0:\n            trend = -1\n    prev = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8275": {"id": 8275, "code": "n = 4;k = 3\nk-=1\na = [2, 3, 1, 4]\ni=n-1\nprint(-(-i//k)-(-(n-i-1)//k))", "coverage": [">", ">", ">", ">", ">"]}, "9787": {"id": 9787, "code": "from collections import deque\nN = 3\nclosings = ['(', ')', ')']\nr_cnt = l_cnt = 0\nfor closing in closings:\n  if closing == ')':\n    if l_cnt > 0:\n      l_cnt -= 1\n    else:\n      r_cnt += 1\n  else:\n    l_cnt += 1\nanswer = ['(' for _ in range(r_cnt)] + closings + [')' for _ in range(l_cnt)] \nprint(''.join(answer))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "11652": {"id": 11652, "code": "S = \"SAT\"\nW = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\np = 0\nfor i in range(7):\n    p += 1\n    if S == W[i]:\n        break\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9229": {"id": 9229, "code": "S = \"2017/01/31\"\nprint(S.replace('7', '8', 1))", "coverage": [">", ">"]}, "2415": {"id": 2415, "code": "n = 4;m = 3\nx = n*(n-1)//2\nr = m*(m-1)//2\nprint(x+r)", "coverage": [">", ">", ">", ">"]}, "17154": {"id": 17154, "code": "a = \"D\";b = \"D\"\nprint(\"H\") if a==b else print(\"D\")", "coverage": [">", ">"]}, "6257": {"id": 6257, "code": "from bisect import bisect_right\nif __name__ == \"__main__\":\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a = sorted(a)\n    b = sorted(b)\n    c = sorted(c)\n    ans = 0\n    clist = [0] * n\n    clist[n-1] = n - bisect_right(c, b[n-1])\n    for i in range(n-2, -1, -1):\n        clist[i] = n - bisect_right(c, b[i]) + clist[i+1]\n    for aa in a:\n        b_pos = bisect_right(b, aa)\n        if b_pos != n:\n            ans += clist[b_pos]\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13454": {"id": 13454, "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(\",\",\" \"))", "coverage": [">", ">"]}, "19418": {"id": 19418, "code": "a = 999999999\nif int(a % 2) == 0:\n    print(a)\nelse:\n    print(a * 2)", "coverage": [">", ">", "!", "!", ">"]}, "7781": {"id": 7781, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nans = -(-(N-1) // (K-1))\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18751": {"id": 18751, "code": "import math\nH = 3\nW = 7\nN = 10\nBig = W if W > H else H\nprint(math.ceil(N / Big))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13480": {"id": 13480, "code": "s = \"abcde,fghihgf,edcba\"\nprint( s.replace(\",\", \" \") )", "coverage": [">", ">"]}, "17973": {"id": 17973, "code": "s = \"1905\"\nfirst = int(s[:2])\nsecond = int(s[2:])\nif (first>0) and (first<13) and (second>0) and (second<13):\n    print(\"AMBIGUOUS\")\nelif (first>0) and (first<13) and ((second==0) or (second>=13)):\n    print(\"MMYY\")\nelif (second>0) and (second<13) and ((first==0) or (first>=13)):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "17699": {"id": 17699, "code": "x = 1700\na = x // 100\nb = x % 100\na_is_month = 0 < a & a <= 12\nb_is_month = 0 < b & b <= 12\nif a_is_month:\n    if b_is_month:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if b_is_month:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "2264": {"id": 2264, "code": "n = 10;a = 7;b = 5\nif a+b < n:\n    max = min(a, b)\n    min = 0\nelse:\n    max = min(a, b)\n    min = (a+b)-n\nprint(max, min)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "13776": {"id": 13776, "code": "from datetime import*\na = 10;b = 0;c = 12;d = 0;k = 120\nf=datetime\nprint((f(1,1,1,c,d)-f(1,1,1,a,b)).seconds//60-k)", "coverage": [">", ">", ">", ">"]}, "15393": {"id": 15393, "code": "import math\nx = 100000;y = 1;z = 1\nprint(math.floor((x-z)/(y+z)))", "coverage": [">", ">", ">"]}, "11749": {"id": 11749, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nans = 1 if d2 == 1 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13027": {"id": 13027, "code": "X = 6\nif(X==7 or X==5 or X==3): print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", ">"]}, "7456": {"id": 7456, "code": "H = 20;N = 3\nA = [4, 5, 6]\nattack = sum(A)\nif H <= attack:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13648": {"id": 13648, "code": "text = \"abcde,fghihgf,edcba\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "15391": {"id": 15391, "code": "import math\nx = 13;y = 3;z = 1\nprint(math.floor((x-z)/(y+z)))", "coverage": [">", ">", ">"]}, "7190": {"id": 7190, "code": "a = 20;b = 3\nc = [4, 5, 6]\nd = sum(c)\nif d >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "666": {"id": 666, "code": "K = 101\nverbose = False\npath = set()\na = 0\nstep = 0\nwhile True:\n    step += 1\n    a = (a*10 + 7) % K\n    if verbose: print (step, ':', a)\n    if a == 0:\n        print (step)\n        break\n    if a in path:\n        print ('-1')\n        break\n    path.add(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9964": {"id": 9964, "code": "n = 8\ns = \"))))((((\"\nnow=0\nsen=0\nfor i in range(n):\n    if s[i]==\"(\":\n        now+=1\n    else:\n        now-=1\n    if now==-1:\n        sen+=1\n        now=0\nprint(\"(\"*sen + s + \")\"*now)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "18092": {"id": 18092, "code": "S = \"1905\"\nif 0<int(S[0]+S[1])<13: \n  if 0<int(S[2]+S[3])<13: \n    print('AMBIGUOUS')\n  else: \n    print('MMYY')\nelse: \n  if 0<int(S[2]+S[3])<13: \n    print('YYMM')\n  else: \n    print('NA')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "9632": {"id": 9632, "code": "N = 8\nS = \"))))((((\"\nleft = [] \nfor i, s in enumerate(S):\n    if s == \"(\":\n        left.append(\"(\")\n    else:\n        if len(left) > 0:\n            left.pop()\n        else:\n            S = \"(\" + S\nfor _ in range(len(left)):\n    S += \")\"\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "19357": {"id": 19357, "code": "u = 999999999\nif u % 2 == 1:\n  print (u*2)\nelse:\n  print (u)", "coverage": [">", ">", ">", "!", "!"]}, "15311": {"id": 15311, "code": "X = 64146;Y = 123;Z = 456\nX -= Y + 2 * Z\nans = X // (Y + Z) + 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18404": {"id": 18404, "code": "H = 3\nW = 7\nN = 10\nhi = max(H, W)\nprint((N+hi-1)//hi)", "coverage": [">", ">", ">", ">", ">"]}, "7935": {"id": 7935, "code": "N = 3;K = 3\nA = [1, 2, 3]\ng = 1\nwhile N > K + (K - 1) * (g - 1):\n    g += 1\nprint(g)", "coverage": [">", ">", ">", ">", "!", ">"]}, "15459": {"id": 15459, "code": "x = 64145;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "4741": {"id": 4741, "code": "s = \"internationalization\"\ns1 = s[0]\ns2 = s[-1]\nprint(s1+str(len(s[1:-1]))+s2)", "coverage": [">", ">", ">", ">"]}, "19228": {"id": 19228, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit()\ncnt = 0\nx = 1\nwhile n > 5**x:\n    cnt += n//5**x//2\n    x += 1\nprint(cnt) ", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9697": {"id": 9697, "code": "n = 8\ns = \"))))((((\"\ncntl=0\nfor i in range(n-1,-1,-1):\n    if s[i]==\")\":\n        cntl+=1\n    elif s[i]==\"(\" and cntl>0:\n        cntl-=1\nsl=\"(\"*cntl\ncntr=0\nfor i in range(n):\n    if s[i]==\"(\":\n        cntr+=1\n    elif s[i]==\")\" and cntr>0:\n        cntr-=1\nsr=\")\"*cntr\nprint(sl+s+sr)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13387": {"id": 13387, "code": "s = \"abcde,fghihgf,edcba\"\nS = \"\"\nfor i in range(len(s)):\n    if s[i] == ',':\n        S += \" \"\n    else:\n        S += s[i]\nprint(S)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "7078": {"id": 7078, "code": "MM = ['211', '5']\nH = int(MM[0])\nN = int(MM[1])\nAA = ['31', '41', '59', '26', '53']\ntotal = 0\nfor i in AA:\n  total += int(i)\nif total >= H:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8900": {"id": 8900, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandies = []\nfor i in range(N):\n    candies.append(sum(A1[:i+1])+sum(A2[i:]))\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "491": {"id": 491, "code": "s = \"xyz\"\nk = 4\nalpha=list('abcdefghijklmnopqrstuvwxyz')\nans=[]\nfor i in range(len(s)):\n    ki= 26-alpha.index(s[i]) if s[i]!='a' else 0\n    if(i==len(s)-1):\n        kn=k+alpha.index(s[i])\n        kn=kn%26\n        ans.append(alpha[kn])\n    elif(ki<=k):\n        ans.append('a')\n        k-=ki\n    else:\n        ans.append(s[i])\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12774": {"id": 12774, "code": "X = \"5\"\nprint(\"YES\" if (X in \"753\") else \"NO\")", "coverage": [">", ">"]}, "6190": {"id": 6190, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor b in B:\n    i = bisect.bisect_left(A,b)\n    j = bisect.bisect_right(C,b)\n    count += i * (N - j)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5574": {"id": 5574, "code": "a = 100\nprint((a+1)//2)", "coverage": [">", ">"]}, "2461": {"id": 2461, "code": "n = {'9', '4', '0', '8'}\ns=set([i for i in \"1974\"])\nprint(\"NO\" if n^s else \"YES\")", "coverage": [">", ">", ">"]}, "935": {"id": 935, "code": "k = 2\nnum=7\ni=1\nwhile True:\n    if k%2==0 or k%5==0:\n        i=-1\n        break\n    num%=k\n    if num==0:\n        break\n    else:\n        num*=10\n        num+=7\n        i+=1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "17555": {"id": 17555, "code": "s = \"1700\"\nflag1=0\nflag2=0\nif 0<int(s[:2])<13:\n  flag1=1\nelse:\n  pass\nif 0<int(s[2:])<13:\n  flag2=1\nelse:\n  pass\nif flag1==0 and flag2==0:\n  print(\"NA\")\nelif flag1==1 and flag2==0:\n  print(\"MMYY\")\nelif flag1==0 and flag2==1:\n  print(\"YYMM\")\nelse:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7911": {"id": 7911, "code": "from math import ceil\nN = 4;K = 3\nA = [2, 3, 1, 4]\nif N == K:\n    print(1)\nelif (N-1)%(K-1) == 0:\n    print((N-1)//(K-1))\nelif K == 2:\n    print(N-1)\nelse:\n    ans = ceil(N/(K-1))\n    print(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "8061": {"id": 8061, "code": "NK = [3, 3]\nA = [1, 2, 3]\nN = NK[0]\nK = NK[1]\nanswer = (N - 1) // (K - 1)\nremain = (N - 1) % (K - 1)\nif remain > 0:\n    answer = answer + 1\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8985": {"id": 8985, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nmax_num = a\nmin_num = a\nif b < min_num:\n    min_num = b\nif b > max_num:\n    max_num = b\nif c < min_num:\n    min_num = c\nif c > max_num:\n    max_num = c\nif d < min_num:\n    min_num = d\nif d > max_num:\n    max_num = d\nif e < min_num:\n    min_num = e\nif e > max_num:\n    max_num = e\nif max_num - min_num <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!"]}, "15397": {"id": 15397, "code": "z = 12;y = 3;x = 1\nz-=x*2+y\ncount=1\nwhile(1):\n  z-=y+x\n  if z<0:\n    break\n  count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10616": {"id": 10616, "code": "A = 8;B = 12;K = 2\ngcd=[]\nC=min(A,B)\nfor i in range(1,C+1):\n  if A%i==0 and B%i==0:\n    gcd.append(i)\nprint(gcd[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11953": {"id": 11953, "code": "day1 = ['11', '30']\nday2 = ['12', '1']\nif int(day2[1])==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18756": {"id": 18756, "code": "import math\nh = 2\nw = 100\nn = 200\nl = max(h, w)\nprint(math.ceil(n / l))", "coverage": [">", ">", ">", ">", ">", ">"]}, "5721": {"id": 5721, "code": "import sys\nN = 100\nif not ( 1 <= N <= 100 ): sys.exit()\nprint(N//2) if N % 2 == 0 else print(N//2 + 1)", "coverage": [">", ">", ">", ">"]}, "15366": {"id": 15366, "code": "import math\nx = 100000;y = 1;z = 1\nprint(int(math.floor((x - z) / (y + z))))", "coverage": [">", ">", ">"]}, "9944": {"id": 9944, "code": "n = 8\ndata = [')', ')', ')', ')', '(', '(', '(', '(']\nstack = []\nans = ''\nfor c in data:\n    if c == '(':\n        stack.append(c)\n        ans += '('\n    else:\n        if len(stack) == 0 or stack.pop() != '(':\n            ans = '(' + ans + c\n        else:\n            ans += ')'\nans += ')'*len(stack)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "15252": {"id": 15252, "code": "x = 64146;y = 123;z = 456\nc = x // (y + z)\nd = x % (y + z)\nif d >= z:\n    print(c)\nelse:\n    print(c - 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "14697": {"id": 14697, "code": "import sys\nN = 1;P = 1\nA = [50]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a % 2 == 1:\n        kisu += 1\n    else:\n        gusu += 1\ntotal = 2 ** N \nif kisu == 0:\n    ans = 2 ** gusu\nelse:   \n    ans = (2 ** gusu) * (2 ** (kisu - 1)) \nif P == 0:\n    print(ans)\nelse:\n    print(total - ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "11632": {"id": 11632, "code": "A = \"SAT\"\nS = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(7):\n  if A == S[i]:\n    print(7-i)\n    break\n  i+=1", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9918": {"id": 9918, "code": "N = 3\nS = ['(', ')', ')']\nans = []\ncount = 0\naddFlag = True\nfor i in range(N):\n    if addFlag:\n        if S[i] == ')':\n            ans.append(')')\n            ans.insert(0,'(')\n        else:\n            ans.append('(')\n            count += 1\n            addFlag = False\n    else:\n        if S[i] == '(':\n            ans.append('(')\n            count += 1\n        else:\n            ans.append(')')\n            count -= 1\n            if count == 0:\n                addFlag = True\nfor _ in range(count):\n    ans.append(')')\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">"]}, "3300": {"id": 3300, "code": "a = 20;b = 30\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "6755": {"id": 6755, "code": "H = 210;N = 5\na1 = ['31', '41', '59', '26', '53']\na2=[int(i) for i in a1]\nx=0\nfor i in a2:\n    x+=i\nprint('Yes' if x>=H else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11714": {"id": 11714, "code": "s = \"SAT\"\ndl = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n  if s == dl[i]:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "1601": {"id": 1601, "code": "n = 10;a = 3;b = 5\nprint(min(a, b), a + b - n if n <= a + b else 0)", "coverage": [">", ">"]}, "2014": {"id": 2014, "code": "n = 100;a = 100;b = 100\nif n >= a+b:\n    print(min(a, b), 0)\nelse:\n    print(min(a, b), min(a, b)-(n-max(a, b)))", "coverage": [">", ">", "!", "!", ">"]}, "17687": {"id": 17687, "code": "import sys\ninput = \"<function <lambda>>\"\nS = \"1700\"\nf = int(S[:2])\ns = int(S[2:])\nif (f <= 0 and s > 12) or (f > 12 and s <= 0) or (f <= 0 and s <= 0) or (f > 12 and s > 12):\n    print(\"NA\")  \nelif (f > 12 and 0 < s <= 12) or (f <= 0 and 0 < s <= 12):\n    print(\"YYMM\")\nelif (0 < f <= 12 and s > 12) or (0 < f <= 12 and s <= 0):\n    print(\"MMYY\")\nelif 0 < f <= 12 and 0 < s <= 12:\n    print(\"AMBIGUOUS\") ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "1564": {"id": 1564, "code": "n = 111\nli = [int(str(i)*3) for i in range(10)]\nimport bisect\nx = bisect.bisect_left(li,n)\nprint(li[x])", "coverage": [">", ">", ">", ">", ">"]}, "4591": {"id": 4591, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nfirst = s.pop(0)\nlast = s.pop(-1)\nprint(str(first)+str(len(s))+str(last))", "coverage": [">", ">", ">", ">"]}, "10921": {"id": 10921, "code": "s = \"level\"\nn = len(s)\nprint('Yes' if s==s[::-1] and s[:(n-1)//2]==s[:(n-1)//2][::-1] and s[(n+1)//2:] == s[(n+1)//2:][::-1] else 'No')", "coverage": [">", ">", ">"]}, "12828": {"id": 12828, "code": "x = 5\nif x == 3 or x == 5 or x == 7:\n    ans = 'YES'\nelse:\n    ans = 'NO'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "19163": {"id": 19163, "code": "n = 12\np = 10\na = 0\nif n % 2 == 0:\n    while p <= n:\n        a += n // p\n        p *= 5\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10000": {"id": 10000, "code": "N = 3\nS = ['(', ')', ')']\nL = 0\nout = []\nout2 = []\nfor i in range(N):\n    X = S[i]\n    if X==\"(\":\n        L += 1\n        out.append(\"(\")\n    elif X==\")\":\n        if L>0:\n            L += -1\n            out.append(\")\")\n        else:\n            out2.append(\"(\")\n            out.append(\")\")\nfor i in range(L):\n    out.append(\")\")\nprint(\"\".join(out2)+\"\".join(out))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "5493": {"id": 5493, "code": "N = 100\nif N&0b1:\n    ans=N//2+1\nelse:\n    ans=N//2\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "11730": {"id": 11730, "code": "D1 = [11, 16]\nD2 = [11, 17]\nif D1[1] < D2[1]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "17320": {"id": 17320, "code": "a = \"D\";b = \"H\"\nhd = \"HD\"\nprint(hd[(hd.index(a) + hd.index(b)) % 2])", "coverage": [">", ">", ">"]}, "9223": {"id": 9223, "code": "s = \"2017/01/31\"\na = s[5] + s[6]\nb = s[8] + s[9]\nd = \"2018/\" + a + \"/\" + b\nprint(d)", "coverage": [">", ">", ">", ">", ">"]}, "11061": {"id": 11061, "code": "s = \"level\"\nn = len(s)\nz = 'Yes'\nfor i in range(n//2):\n    if s[i] != s[-1-i]:\n        z = 'No'\nif z == 'Yes':\n    for h in range(len(s[:(n-1)//2])):\n        if s[:(n-1)//2][h] != s[:(n-1)//2][-1-h]:\n            z = 'No'\n            break\nif z == 'Yes':\n    for j in range(len(s[((n+3)//2)-1:])):\n        if s[((n+3)//2)-1:][j] != s[((n+3)//2)-1:][-1-j]:\n            z = 'No'\n            break\nprint(z)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "5423": {"id": 5423, "code": "n = 2\nans = (n//2) + (n%2)\nprint (ans)", "coverage": [">", ">", ">"]}, "15760": {"id": 15760, "code": "x = 12;y = 3;z = 1\nn = 0\nwhile (y+z)*n + z <= x:\n    n += 1\nprint(n-1)", "coverage": [">", ">", ">", ">", ">"]}, "19246": {"id": 19246, "code": "import math\nn = 5\nten_counter = 0\nexp_index = math.log(10 ** 18, 5)\nif n % 2 == 0:\n    n //= 2\n    for i in range(1, int(exp_index) + 1):\n        if n // (5 ** i) == 0:\n            break\n        else:\n            ten_counter += n // (5 ** i)\nelse:\n    pass\nprint(ten_counter)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "18149": {"id": 18149, "code": "import sys\nsys.setrecursionlimit(10**6)\ns = \"1905\"\nl = [i for i in range(1,13)]\nl = [str(i) if len(str(i))==2 else '0'+str(i) for i in l]\nif s[:2] not in l and s[2:] not in l:\n    print('NA')\nelif s[:2] not in l and s[2:] in l:\n    print('YYMM')\nelif s[:2] in l and s[2:] not in l:\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "17143": {"id": 17143, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "12341": {"id": 12341, "code": "s = \"akasaka\"\nn = len(s)\nn1 = (n-1)//2\nn2 = (n+1)//2\nif s == s[::-1]:\n    if s[:n1] == s[n2:]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "14247": {"id": 14247, "code": "N = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nflags = [False, False]\nfor i in range(N - 1):\n    da = a[i + 1] - a[i]\n    if da > 0:\n        flags[0] = True\n    elif da < 0:\n        flags[1] = True\n    if flags[0] == True and flags[1] == True:\n        ans += 1\n        flags = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16416": {"id": 16416, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\nnum = a[0]\ntmp = a[1]\nfor j in range(1, n):\n  if abs(tmp-num/2) >= abs(a[j]-num/2):\n    tmp = a[j]\n  else:\n    break\nans = [num, tmp]\nprint(*ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7249": {"id": 7249, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nattack = sum(A)\nif attack >= H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16298": {"id": 16298, "code": "n = 2\na = [100, 0]\nd = max(a)\nf = d\nfor v in a:\n  if abs(v-d/2) < abs(f-d/2):\n    f = v\n  elif abs(v-d/2) == abs(f-d/2):\n    f = min(f,v)\nprint(d,f)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "16771": {"id": 16771, "code": "a = \"D\";b = \"H\"\nif (a == b): print('H')\nelse:print('D')  ", "coverage": [">", ">", ">"]}, "1890": {"id": 1890, "code": "n = 100;a = 100;b = 100\nif a+b > n:\n  q = a+b-n\nelse :\n  q = 0\nprint( str(min(a,b)) +\" \"+ str(q))", "coverage": [">", ">", ">", "!", "!", ">"]}, "15349": {"id": 15349, "code": "import sys\ninput = sys.stdin.readline\nx = 64145;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "17356": {"id": 17356, "code": "l = ['D', 'H']\nprint(\"H\" if len(set(l)) == 1 else \"D\")", "coverage": [">", ">"]}, "784": {"id": 784, "code": "import sys\nK = 2\na = 7 % K\nfor k in range(K + 2):\n    if a == 0:\n        print(k + 1)\n        break\n    a = (a * 10 + 7) % K\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "13742": {"id": 13742, "code": "h_1 = 10;m_1 = 0;h_2 = 12;m_2 = 0;k = 120\nstudy_time = ((h_2*60 + m_2) - (h_1*60 + m_1))\nprint(study_time - k)", "coverage": [">", ">", ">"]}, "15553": {"id": 15553, "code": "x = 13;y = 3;z = 1\nx -= z\ny += z\nprint(x // y)", "coverage": [">", ">", ">", ">"]}, "17496": {"id": 17496, "code": "x = \"1905\"\na, b = int(x[0:2]), int(x[2:4])\nflag = 0\nans = [\"AMBIGUOUS\", \"YYMM\", \"MMYY\", \"NA\"]\nif (a >= 1 and a <= 12) and (b >= 1 and b <= 12):\n    flag = 0\nelif (a == 0 and b > 12) or (b == 0 and a > 12) or (b > 12 and a > 12) or (b == 0 and a == 0):\n    flag = 3\nelif ((a > 0 and a <= 12) and (b >= 13)) or (b == 0 and (a >= 1 and a <= 12)):\n    flag = 2\nelif ((a >= 13) and (b > 0 and b <= 12)) or (a == 0 and (b >= 1 and b <= 12)):\n    flag = 1\nprint(ans[flag])", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "6059": {"id": 6059, "code": "import math\nN = 2\nP = math.ceil(N/2)\nprint(P)", "coverage": [">", ">", ">", ">"]}, "9071": {"id": 9071, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nl = []\nl.append(a)\nl.append(b)\nl.append(c)\nl.append(d)\nl.append(e)\nans = 0\nfor i in range(5):\n    for j in range(i+1,5):\n        if l[j] - l[i] > k :\n            ans += 1\nif ans == 0 :\n    print(\"Yay!\")\nelse :\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "8214": {"id": 8214, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nx=a.index(1)\nif n==k:\n    print(1)\nelse:\n    if (n-k)%(k-1)==0:\n        ans=1+(n-k)//(k-1)\n    else:\n        ans=1+(n-k)//(k-1)+1\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]}, "8460": {"id": 8460, "code": "N = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nMAX=0\nfor i in range(N):\n  tmp = sum(a1[:i+1])+sum(a2[i:])\n  MAX = max(MAX,tmp)\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10346": {"id": 10346, "code": "A = \"8\";B = \"12\";C = \"2\"\nA, B, C = [int(A), int(B), int(C)]\nL=[]\nfor i in range(min(A,B)):\n    if A%(i+1) == 0 and B%(i+1) == 0:\n        L.append(i+1)\nprint(L[len(L)-C])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9535": {"id": 9535, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = '8'\nprint(\"\".join(S))", "coverage": [">", ">", ">"]}, "3281": {"id": 3281, "code": "a = 20;b = 30\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "11919": {"id": 11919, "code": "m1 = \"11\"\nm2 = \"12\"\nans = 0\nif m1 != m2:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7367": {"id": 7367, "code": "h = 210;n = 5\narr = [31, 41, 59, 26, 53]\nprint(\"No\" if h>sum(arr) else \"Yes\")", "coverage": [">", ">", ">"]}, "15781": {"id": 15781, "code": "x = 64145;y = 123;z = 456\ncnt=0\nif x>=y+2*z:\n  cnt+=1\n  x -= (y+2*z)\ncnt += (x//(y+z))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2462": {"id": 2462, "code": "print('YES' if sorted(list(map(int, \"1 7 9 4\".split())))\n      == [1, 4, 7, 9] else 'NO')", "coverage": [">", ">"]}, "9063": {"id": 9063, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nprint(':(' if e - a > k else 'Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15177": {"id": 15177, "code": "x = 100000;y = 1;z = 1\nx-=z\nprint((x-x%(y+z))//(y+z))", "coverage": [">", ">", ">"]}, "11309": {"id": 11309, "code": "weekdays = [\"\", \"SAT\", \"FRI\", \"THU\", \"WED\",\"TUE\",\"MON\", \"SUN\"]\nw = \"SUN\"\nprint(weekdays.index(w))", "coverage": [">", ">", ">"]}, "3718": {"id": 3718, "code": "A = 20;B = 15\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "1042": {"id": 1042, "code": "n = 750\nfor i in range(110):\n    if n % 111 == 0:\n        break\n    else:\n        n += 1\nprint(n)", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "9104": {"id": 9104, "code": "s = \"2017/01/07\"\nprint(''.join(['2018']+[s[4:]]))", "coverage": [">", ">"]}, "17007": {"id": 17007, "code": "a = \"H\";b = \"H\"\nprint(['D','H'][a==b])", "coverage": [">", ">"]}, "15342": {"id": 15342, "code": "X_all = 100000;Y_hito = 1;Z_interval = 1\nsyou = X_all // (Y_hito + Z_interval)\nif (syou * (Y_hito + Z_interval) + Z_interval <= X_all):\n    ans = syou\nelse:\n    ans = syou - 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "145": {"id": 145, "code": "s = ['a']\nk = 25\ndiff = [(ord(\"a\") + 26 - ord(x)) % 26 for x in s]\nfor i in range(len(s) - 1):\n    if diff[i] <= k:\n        s[i] = \"a\"\n        k -= diff[i]\n    else:\n        continue\ntmp = ord(s[-1]) + k % 26\nif tmp > 122:\n    tmp -= 26\ns[-1] = chr(tmp)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">"]}, "18914": {"id": 18914, "code": "N = 12\nif N % 2 or N < 10:\n  print(0)\n  exit()\nans = 0\ni = 1\nwhile 2*5**i<=N:\n  ans += N // (2*5**i)\n  i += 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15201": {"id": 15201, "code": "import io\nn = 64145;m = 123;k = 456\nprint((n-k)//(m+k))", "coverage": [">", ">", ">"]}, "11843": {"id": 11843, "code": "MD1 = [11, 30]\nMD2 = [12, 1]\nif MD1[0] == MD2[0]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17237": {"id": 17237, "code": "say = \"DD\"\nif say=='HH' or say== 'DD':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "6674": {"id": 6674, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if h-sum(a) <= 0 else 'No')", "coverage": [">", ">", ">"]}, "3639": {"id": 3639, "code": "A = 20;B = 15\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "18276": {"id": 18276, "code": "H = 14\nW = 12\nN = 112\na = max(H, W)\nprint(N // a + min(1, N % a))", "coverage": [">", ">", ">", ">", ">"]}, "15746": {"id": 15746, "code": "X = 100000;Y = 1;Z = 1\nprint( (X-Z) // (Z+Y) )", "coverage": [">", ">"]}, "18065": {"id": 18065, "code": "s = \"0112\"\nfirst = int(s[:2])\nsecond = int(s[2:])\nmonth = [False,False]\nif(1 <= first and first <= 12):\n    month[0] = True\nif(1 <= second and second <= 12):\n    month[1] = True\nif(month[0] & month[1]):\n    print('AMBIGUOUS')\nelif(month[0]):\n    print('MMYY')\nelif(month[1]):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12928": {"id": 12928, "code": "if \"5\" in [\"7\", \"5\", \"3\"]:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "4749": {"id": 4749, "code": "s = \"xyz\"\ns = list(s)\np = str(len(s) - 2)\nprint(s[0]+p+s[-1])", "coverage": [">", ">", ">", ">"]}, "18418": {"id": 18418, "code": "H = 2\nW = 100\nN = 200\nif H < W:\n    H, W = W, H\nans = 0\nwhile N > 0:\n    N -= H\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19084": {"id": 19084, "code": "import math\nn = 5\nans = 0\ni = 1\nif n % 2 == 0:\n    tmp = 5 ** i * 2\n    while tmp <= n:\n        tmp = 5 ** i * 2\n        ans += n //tmp\n        i += 1\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "17691": {"id": 17691, "code": "s = \"1905\"\nnum = ['01','02','03','04','05','06','07','08','09','10','11','12']\nif s[:2] in num and s[2:] in num:\n    print(\"AMBIGUOUS\")\nelif s[:2] in num:\n    print(\"MMYY\")\nelif s[2:] in num:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "19090": {"id": 19090, "code": "N = 12\nif (N % 2 == 1):\n    print(0)\n    exit()\nbunbo = 0\nsum_5 = 0\nwhile (10 * 5 ** bunbo) <= N:\n    sum_5 += N // (10 * 5**bunbo)\n    bunbo += 1\nprint(sum_5)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18840": {"id": 18840, "code": "H = 2\nW = 100\nN = 200\np = -1\nif H > W:\n    p = H\nelse:\n    p = W\ncount = 1\nresult = 1\nwhile True:\n    result = count * p\n    if result >= N:\n        print(count)\n        break\n    else:\n        count += 1", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13339": {"id": 13339, "code": "s = \"abcde,fghihgf,edcba\"\ns1 = s[0:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(\"{} {} {}\".format(s1,s2,s3))", "coverage": [">", ">", ">", ">", ">"]}, "5327": {"id": 5327, "code": "a = 2\nif a % 2 == 0:\n  print(str(int(a//2)))\nelse:\n  print(str(int(a//2)+1))", "coverage": [">", ">", ">", "!", "!"]}, "5217": {"id": 5217, "code": "input_ = \"xyz\"\nss = input_[0]\nsc = input_[1:-1]\nse = input_[-1]\nprint(ss + str(len(sc)) + se)", "coverage": [">", ">", ">", ">", ">"]}, "16607": {"id": 16607, "code": "a = \"D\";b = \"D\"\nprint(\"DH\"[a==b])", "coverage": [">", ">"]}, "16579": {"id": 16579, "code": "a = \"D\";b = \"H\"\nprint(\"H\" if (a == b) else \"D\")", "coverage": [">", ">"]}, "15934": {"id": 15934, "code": "A = 20;B = 30\nprint(0 if (B * 2) >= A else A - (B * 2))", "coverage": [">", ">"]}, "8436": {"id": 8436, "code": "N = 7\nA = [[],[]]\nA = [[3, 3, 4, 5, 4, 5, 3], []]\nA = [[3, 3, 4, 5, 4, 5, 3], [5, 3, 4, 4, 2, 3, 2]]\nresult = 0\nfor i in range(N+1):\n    result = max(sum(A[0][:i]) + sum(A[1][i-1:]), result)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9942": {"id": 9942, "code": "n = 3\ndata = ['(', ')', ')']\nstack = []\nans = ''\nfor c in data:\n    if c == '(':\n        stack.append(c)\n        ans += '('\n    else:\n        if len(stack) == 0 or stack.pop() != '(':\n            ans = '(' + ans + c\n        else:\n            ans += ')'\nans += ')'*len(stack)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "8919": {"id": 8919, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nresult = -1\nfor i in range(n):\n  a_sum = sum(a[0:i+1])\n  result = max(result, a_sum + sum(b[i:]))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6910": {"id": 6910, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nresult = sum(a)\nif h - result <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13195": {"id": 13195, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "5263": {"id": 5263, "code": "n = \"0489\"\nif n == '1479':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "11613": {"id": 11613, "code": "s = \"SUN\"\nweek = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = week.index(s)\ns = -s \nprint(s + 7)", "coverage": [">", ">", ">", ">", ">"]}, "6367": {"id": 6367, "code": "from bisect import bisect_left\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nd=[0]\ne=[]\nfor i in range(n):\n    d.append(bisect_left(a,b[i])+d[-1])\n    e.append(bisect_left(b,c[i]))\nans=0\nfor i in e:\n    ans+=d[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15335": {"id": 15335, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nx = 13;y = 3;z = 1\nq = x // (y + z)\nr = x % (y + z)\nans = q if z <= r else q - 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19120": {"id": 19120, "code": "N = 12\nif N%2==1:\n    print(0)\n    exit()\nelif N==0:\n    print(0)\n    exit()\nL=len(str(N))\nans=0\nnow=5\nwhile N//now>0:\n    ans+=((N//now)//2)\n    now*=5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13122": {"id": 13122, "code": "x = \"5\"\nans=[\"YES\",\"NO\"][x not in \"357\"]\nprint(ans)", "coverage": [">", ">", ">"]}, "10392": {"id": 10392, "code": "A = 8;B = 12;K = 2\nX = []\nfor i in range(1, min(A, B) + 1):\n  if A % i == 0 and B % i == 0:\n    X.append(i)\nprint(X[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "7001": {"id": 7001, "code": "H = 210;N = 5\nA = map(int, \"31 41 59 26 53\".split())\nprint('Yes' if H <= sum(A) else 'No')", "coverage": [">", ">", ">"]}, "8562": {"id": 8562, "code": "N = 1\nA1 = [2]\nA2 = [3]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3577": {"id": 3577, "code": "a = 12;b = 4\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "10267": {"id": 10267, "code": "n = 8\ns = \"))))((((\"\nstock_left = 0\nnum_new_l = 0\nfor i in range(n):\n    if s[i] == '(':\n        stock_left += 1\n    else:\n        if stock_left > 0:\n            stock_left -= 1\n        else:\n            num_new_l += 1\nstock_right = 0\nnum_new_r = 0\nfor i in range(-1,-n-1,-1):\n    if s[i] == ')':\n        stock_right += 1\n    else:\n        if stock_right > 0:\n            stock_right -= 1\n        else:\n            num_new_r += 1\nnew_l = '(' * num_new_l\nnew_r = ')' * num_new_r\nprint(new_l + s + new_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "16439": {"id": 16439, "code": "n = 5\na = [6, 9, 4, 2, 11]\nai = max(a)\na.sort(key=lambda x: abs(ai//2 - x))\naj = a[0]\nfor i in a:\n    if ai==i: continue\n    else:\n        aj = i\n        break\nprint('{} {}'.format(ai, aj))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8385": {"id": 8385, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5883": {"id": 5883, "code": "N = 100\na=N//2\nif N%2!=0:\n    a+=1\nprint(a)", "coverage": [">", ">", ">", "!", ">"]}, "6562": {"id": 6562, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b)\n    c = bisect.bisect_right(C, b)\n    ans += a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3848": {"id": 3848, "code": "X = 64146;Y = 123;Z = 456\nX = X - Z\nY = Y + Z\nprint(X//Y)", "coverage": [">", ">", ">", ">"]}, "13789": {"id": 13789, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;K = 30\nh = h2-(h1+1)\nm = m2+60-m1\nm += 60*h\nm -= K\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8897": {"id": 8897, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    s1 = sum(A1[:i+1])\n    s2 = sum(A2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5129": {"id": 5129, "code": "s = \"smiles\"\nprint(s[0] +str(len(s[1:-1]))+ s[-1])", "coverage": [">", ">"]}, "15526": {"id": 15526, "code": "x = 64145;y = 123;z = 456\nprint(x//(y+z) if x%(y+z)>=z else x//(y+z)-1)", "coverage": [">", ">"]}, "7960": {"id": 7960, "code": "x = 8;y = 3\nli = [7, 3, 1, 8, 4, 6, 2, 5]\nif (x-1)%(y-1) == 0:\n    print((x-1)//(y-1))\nelse:\n    print((x-1)//(y-1)+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "19028": {"id": 19028, "code": "n = 5\nif n % 2 > 0:\n    print(0)\nelse:\n    n //= 2\n    c = 0\n    while n > 0:\n        c += n // 5\n        n //= 5\n    print(c)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2084": {"id": 2084, "code": "n = 10;a = 7;b = 5\nhigh=min(a,b)\nlow=max(0,a+b-n)\nprint(high,low)", "coverage": [">", ">", ">", ">"]}, "11819": {"id": 11819, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D1 != D2 - 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "10193": {"id": 10193, "code": "n = 3\nS = \"())\"\nT = S.replace('()', '')\nfor _ in range(50):\n  T = T.replace('()', '')\nprint('(' * T.count(')') + S + ')' * T.count('('))", "coverage": [">", ">", ">", ">", ">", ">"]}, "4458": {"id": 4458, "code": "s = \"xyz\"\nmid = str(len(s) - 2)\nprint(s[0]+mid+s[-1])", "coverage": [">", ">", ">"]}, "3320": {"id": 3320, "code": "import sys\na = 20;b = 15\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "1649": {"id": 1649, "code": "n = 10;a = 3;b = 5\nif(a+b <= n):\n    print(str(min(a,b)) + \" 0\")\nelse:\n    print(str(min(a,b)) + \" \" + str(abs(a+b-n)))", "coverage": [">", ">", ">", "!", "!"]}, "11477": {"id": 11477, "code": "s = \"SUN\"\nyoubi = {\"SUN\":\"7\", \"MON\":\"6\", \"TUE\":\"5\", \"WED\":\"4\",\"THU\":\"3\",\"FRI\":\"2\", \"SAT\": \"1\"}\nprint(youbi[s])", "coverage": [">", ">", ">"]}, "5462": {"id": 5462, "code": "n = 2\nm = (n + 1) // 2\nprint(m)", "coverage": [">", ">", ">"]}, "19169": {"id": 19169, "code": "from  math import log,floor\nn = 12\nif n==0:\n  print(0)\n  exit(0)\nif n%2==1:\n  print(0)\n  exit(0)\nf=floor(log(n,5))\nans=0\nfor i in range(f):\n  t=n//(5**(f-i))\n  ans+=t//2\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "11653": {"id": 11653, "code": "S = \"SUN\"\nW = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\np = 0\nfor i in range(7):\n    p += 1\n    if S == W[i]:\n        break\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2819": {"id": 2819, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s)-2):\n  num = abs(753-(int(s[i]+s[i+1]+s[i+2])))\n  ans = min(ans,num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5228": {"id": 5228, "code": "s = \"smiles\"\ns_c = len(s)-2\nprint(\uff53[0] + str(s_c) +s[-1])", "coverage": [">", ">", ">"]}, "4616": {"id": 4616, "code": "s = \"smiles\"\nprint(s[:1]+str(len(s)-2)+s[-1:])", "coverage": [">", ">"]}, "17074": {"id": 17074, "code": "AB = \"D H\"\nres = {\"H H\":\"H\",\"H D\":\"D\",\"D H\":\"D\",\"D D\":\"H\"}\nprint(res[AB])", "coverage": [">", ">", ">"]}, "3801": {"id": 3801, "code": "import sys\nsys.setrecursionlimit(10**6)\nx = 64145;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "14061": {"id": 14061, "code": "N = 7\na_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nup_flag = None\nprev_a = a_list[0]\nfor a in a_list[1:]:\n  if up_flag is None:\n    if prev_a == a:\n      continue\n    up_flag = a > prev_a\n  if up_flag and a >= prev_a:\n    prev_a = a\n    continue\n  elif not up_flag and a <= prev_a:\n    prev_a = a\n    continue\n  else:\n    up_flag = None\n    count += 1\n    prev_a = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "11489": {"id": 11489, "code": "W = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nS = \"SUN\"\nprint(len(W) - W.index(S))", "coverage": [">", ">", ">"]}, "17763": {"id": 17763, "code": "s = \"0112\"\nb1 = 1 <= int(s[:2]) <= 12\nb2 = 1 <= int(s[2:]) <= 12\nans = ['NA', 'YYMM', 'MMYY', 'AMBIGUOUS']\nprint(ans[2*b1 + b2])", "coverage": [">", ">", ">", ">", ">"]}, "3646": {"id": 3646, "code": "a = 20;b = 30\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15323": {"id": 15323, "code": "x = 13;y = 3;z = 1\np = 1\nfor i in range(x//y):\n    if x-(p+2)*z-p*y<y:\n        break\n    else:\n        p+=1\nprint(p)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "12502": {"id": 12502, "code": "A = 1;B = 1;K = 1\nA_yaku=[]\nB_yaku=[]\nfor i in range(1,A+1):\n    if A % i == 0:\n        A_yaku.append(i)\nfor j in range(1,B+1):\n    if B % j == 0:\n        B_yaku.append(j)\nA_B_and_set = set(A_yaku) & set(B_yaku)\nA_B_and_list = list(A_B_and_set)\nans_list=sorted(A_B_and_list,reverse=True)\nans=ans_list[K-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9444": {"id": 9444, "code": "a = \"2017/01/07\"\nb=\"2018\"+a[4:]\nprint(b)", "coverage": [">", ">", ">"]}, "10023": {"id": 10023, "code": "n = 6\ns = \")))())\"\nleft = 0\nright = 0\nfor i in range(n):\n    if s[i] == '(':\n        right += 1\n    else:\n        if right > 0:\n            right -= 1\n        else:\n            left += 1\nprint(left * '(' + s + right * ')')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "5400": {"id": 5400, "code": "S = 100\nq , mod = divmod(S , 2)\nprint(q+mod)", "coverage": [">", ">", ">"]}, "15320": {"id": 15320, "code": "x = 100000;y = 1;z = 1\nprint((x - 1 * z) // (y + z))", "coverage": [">", ">"]}, "13286": {"id": 13286, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "18680": {"id": 18680, "code": "H = 3\nW = 7\nN = 10\ncnt, paint = 0, 0\nwhile paint < N:\n    paint += max(H,W)\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5959": {"id": 5959, "code": "n = 5\nprint(-(-n//2))", "coverage": [">", ">"]}, "3662": {"id": 3662, "code": "x = 20;y = 30\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", ">", "!", "!"]}, "7899": {"id": 7899, "code": "n = 4;k = 3\nan = \"2 3 1 4\"\ncount = 1\nn -= k\nk -= 1\nwhile(n > 0):\n    n -= k\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8229": {"id": 8229, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif (N-1)%(K-1) == 0:\n    print(int((N-1)/(K-1)))\nelse:\n    print(int((N-1)/(K-1)) + 1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1279": {"id": 1279, "code": "n = 111\nwhile True:\n    if n%111==0:\n        print(n)\n        break\n    n+=1", "coverage": [">", ">", ">", ">", ">", "!"]}, "8007": {"id": 8007, "code": "n = 3;k = 3\nA = [1, 2, 3]\nmin_a = A.index(min(A))\nleft = min_a\nright = n - min_a - 1\nmin_ = min(left, right)\nmax_ = max(left, right)\nt = 0\nmin_ = min_ - k\nt +=1\ntemp = 0\nif min_ > 0:\n    if min_ % (k - 1) != 0:\n        temp = min_ // (k - 1)\n    else:\n        temp = min_ // (k - 1) + 1\n    min_ -= temp * (k - 1)\nt += temp\nmax_ = max_ + min_ + 1\nif max_ % (k - 1) == 0:\n    t += max_ // (k - 1)\nelse:\n    t += max_ // (k - 1) + 1\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "5648": {"id": 5648, "code": "n = 2\ncount = n // 2\nif n % 2 == 0 :\n    print(count)\nelse :\n    count = count + 1\n    print(count)     ", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "17374": {"id": 17374, "code": "s = 112\na, b = s // 100, s % 100\nx = \"YY\" if a == 0 or a > 12 else \"MM\"\ny = \"YY\" if b == 0 or b > 12 else \"MM\"\nif x != y:\n    print(x + y)\nelse:\n    print(\"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11410": {"id": 11410, "code": "s = \"SAT\"\nl=['SUN','MON','TUE','WED','THU','FRI','SAT']\nd=[7,6,5,4,3,2,1]\nprint(d[l.index(s)])", "coverage": [">", ">", ">", ">"]}, "1483": {"id": 1483, "code": "n = 111\nfor i in range(1,10):\n  if i * 111 >= n:\n    print(i *111)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "17530": {"id": 17530, "code": "s = 112\ns1=s//100\ns2=s-s1*100\nif 0<s1<=12 and 0<s2<=12:\n    print(\"AMBIGUOUS\")\nelif (s1>12 or s1==0) and 0<s2<=12:\n    print(\"YYMM\")\nelif 0<s1<=12 and (s2>12 or s2==0):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6779": {"id": 6779, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes') if sum(a)>=h else print('No')", "coverage": [">", ">", ">"]}, "19108": {"id": 19108, "code": "n = 12\nif n%2==1:\n    print(0)\nelse:\n    i=1\n    cnt=0\n    while n//(5**i*2) > 0:\n        cnt += n//((5**i)*2)\n        i += 1\n    print(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "2742": {"id": 2742, "code": "N = (1, 2, 9, 1)\nif 1 in N and 9 in N and 7 in N and 4 in N:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "10797": {"id": 10797, "code": "S = \"level\"\ncount = 0\nN = len(S)\na = int((N-1)/2 )\nb = int((N +3)/2)\nif S[:a] ==S[b-1:]:\n  pass\nelse:\n  count +=1\nSS = S[b-1:]\nSSS =list(SS)\nfor i in range(len(SSS)):\n  if SSS[i] != SSS[-i-1]:\n    count +=1\nif count==0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15308": {"id": 15308, "code": "X = 13;Y = 3;Z = 1\nX -= Y + 2 * Z\nans = X // (Y + Z) + 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "16159": {"id": 16159, "code": "_=int(\"2\")\na = [100, 0]\na.sort()\nn=max(a)\na=a[:-1]\nrc=float('inf')\nrd=0\nr=0\nfor i in a:\n  if rc>abs(i-n/2):\n    r=i\n  rc=min(rc,abs(i-n/2))\nprint(n,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5430": {"id": 5430, "code": "N = 100\nif N % 2 == 1:\n    N += 1\nprint(N//2)", "coverage": [">", ">", "!", ">"]}, "2492": {"id": 2492, "code": "N = map(int, \"1 2 9 1\".split())\ndic = {1: False, 9: False, 7: False, 4: False}\nfor n in N:\n  dic[n] = True\nif all(dic.values()):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "5222": {"id": 5222, "code": "s = \"smiles\"\ns0 = s[0]\ns1 = s[-1:]\nprint(str(s0 + str(len(s[1:-1]))\n          + s1))", "coverage": [">", ">", ">", ">", ">"]}, "4262": {"id": 4262, "code": "H_1 = 10;M_1 = 0;H_2 = 15;M_2 = 0;K = 30\ntime =(H_2 * 60 + M_2)-(H_1 * 60 + M_1)\nif time <= K:\n    print(0)\n    exit(0)\nelse :\n    print(time-K)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "10501": {"id": 10501, "code": "a = 8;b = 12;K = 2\nans=[]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        ans.append(i)\nans=ans[::-1]\nprint(ans[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18258": {"id": 18258, "code": "H = 14\nW = 12\nN = 112\nA_div, A_mod = divmod(N, H)\nif A_mod != 0:\n    A_div += 1\nB_div, B_mod = divmod(N, W)\nif B_mod != 0:\n    B_div += 1\nprint(min(A_div, B_div))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "12656": {"id": 12656, "code": "a = 5\nprint(['NO','YES'][a == 7 or a==5 or a==3])", "coverage": [">", ">"]}, "3914": {"id": 3914, "code": "x = 100000;y = 1;z = 1\nlong = x-z\nf = y+z\nans , b = divmod(long,f)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "5158": {"id": 5158, "code": "s = \"internationalization\"\nn = len(s)\nprint(str(s[0]) + str(n - 2) + str(s[n - 1]))", "coverage": [">", ">", ">"]}, "10959": {"id": 10959, "code": "S = \"atcoder\"\nSkai1 = S[0:(len(S)-1)//2]\nSkai1 = Skai1[::-1]\nSkai2 = S[((len(S)+3)//2)-1:len(S)]\nSkai2 = Skai2[::-1]\nif S==S[::-1] and S[0:(len(S)-1)//2] ==Skai1 and S[((len(S)+3)//2)-1:len(S)] == Skai2: \n  print('Yes')\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10639": {"id": 10639, "code": "a = 8;b = 12;k = 2\nc = 0\nans = []\nif a > b:\n  c = b\nelse:\n  c = a\nfor i in range(1, c+1):\n  if a % i == 0 and b % i == 0:\n    ans.append(i)\n  else:\n    continue\nprint(ans[-k])", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "813": {"id": 813, "code": "k = 101\nif k % 2 == 0:\n    print(-1)\nelse:\n    mod = 7 % k\n    counter = 1\n    memo = 1\n    mod_map = set()\n    mod_map.add(mod)\n    while mod != 0:\n        memo = ((memo % k) * (10 % k)) % k\n        mod = (mod + 7 * memo) % k\n        if mod not in mod_map:\n            mod_map.add(mod)\n        else:\n            counter = -1\n            break\n        counter += 1\n        if mod == 0:\n            break\n    print(counter)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "2487": {"id": 2487, "code": "n1 = {1, 4, 9, 7}\nn2 = set((1,7,9,4))\nans='YES' if n1==n2 else 'NO'\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3542": {"id": 3542, "code": "a = 20;b = 15\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15049": {"id": 15049, "code": "N = 3;P = 0\na_li = [1, 1, 1]\nans = 0\no = 0\nfor a in a_li:\n    if a % 2 != 0:\n        o += 1\nif o == 0:\n    if P == 1:\n        ans = 0\n    else:\n        ans = 2 ** N\nelse:\n    ans = 2 ** (N - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "10673": {"id": 10673, "code": "A = 8;B = 12;K = 2\nl = []\nfor i in range(1, max(A+1, B+1)):\n  if (A%i==0) and (B%i==0):\n    l.append(i)\nprint(l[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "5680": {"id": 5680, "code": "n = \"5\"\nn = int(n)\nif(n==2):\n  print(1)\nelif(n%2==0):\n  print(int(n/2))\nelse:\n  print(int(n/2)+1)", "coverage": [">", ">", ">", "!", ">", "!", "!", ">"]}, "6540": {"id": 6540, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans = 0\nfor i in range(n):\n    abis = bisect.bisect_left(a, b[i])\n    cbis = bisect.bisect_right(c, b[i])\n    ans += abis*(n-cbis)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19252": {"id": 19252, "code": "n = 5\nif n%2!=0:\n    print(0)\nelse:\n    cnt = 0\n    n = n//2\n    while n>0:\n        cnt = cnt + (n//5)\n        n = n//5\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4480": {"id": 4480, "code": "voca = \"internationalization\"\na = len(voca) - 2\noutput = voca[0] + str(a) + voca[-1]\nprint(output)", "coverage": [">", ">", ">", ">"]}, "18566": {"id": 18566, "code": "h = 3\nw = 7\nn = 10\nl = max(h,w)\nprint(-(-n//l))", "coverage": [">", ">", ">", ">", ">"]}, "17173": {"id": 17173, "code": "a = \"H\";b = \"H\"\nif a==b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "67": {"id": 67, "code": "s = \"a\"\nK = 25\nrlt = ''\nfor i in range(len(s)-1):\n  c = (26-ord(s[i])+ord('a'))%26\n  if K >= c:\n    rlt += 'a'\n    K -= c\n  else:\n    rlt += s[i]\nrlt += chr((K + ord(s[-1]) - ord('a'))%26 + ord('a'))\nprint(rlt)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13026": {"id": 13026, "code": "X = 5\nif(X==7 or X==5 or X==3): print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", "!"]}, "277": {"id": 277, "code": "s = ['a']\nn = len(s)\nk = 25\nfor i in range(n):\n    x = ord(s[i]) - ord('a')\n    if x == 0 or 26 -x > k: continue\n    k -= 26 - x\n    s[i] = 'a'\nif k:\n    s[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "16654": {"id": 16654, "code": "a = \"D\";b = \"H\"\nif a == \"H\" and b == \"H\":print('H')\nelif a == \"H\" and b == \"D\":print('D')\nelif a == 'D' and b == \"H\":print(\"D\")\nelse : print(\"H\")", "coverage": [">", ">", ">", ">", "!"]}, "17053": {"id": 17053, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "13912": {"id": 13912, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nflag=True\ns=False\ne=0\nc=1\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        continue\n    if a[i]>a[i-1]:\n        flag=True\n        e=i\n        break\n    elif a[i]<a[i-1]:\n        flag=False\n        e=i\n        break\nif e==n:\n    print(1)\n    exit()\nfor i in range(e+1,n):\n    if a[i]==a[i-1]:\n        continue\n    if s==True:\n        if a[i]>a[i-1]:\n            s=False\n            flag=True\n        else:\n            s=False\n            flag=False\n    elif a[i]>a[i-1] and flag==False:\n        c+=1\n        s=True\n    elif a[i]<a[i-1] and flag==True:\n        c+=1\n        s=True\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "16903": {"id": 16903, "code": "lst = ['D', 'H']\na = lst[0]\nb = lst[1]\nif a == 'H': \n   if b == 'H': \n      print('H')\n   elif b == 'D': \n      print('D')\nelif a == 'D': \n   if b == 'H': \n      print('D')\n   elif b == 'D': \n      print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "920": {"id": 920, "code": "k = 2\nif k%2==0:\n    print(-1)\nelse:\n    n=7\n    cnt=1\n    l={}\n    while n%k!=0:\n        if n not in l:\n            l[n]=1\n        else:\n            print(-1)\n            exit()\n        n=(n*10+7)%k\n        cnt+=1\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6292": {"id": 6292, "code": "n = 6\nal = [3, 14, 159, 2, 6, 53]\nbl = [58, 9, 79, 323, 84, 6]\ncl = [2643, 383, 2, 79, 50, 288]\nal = sorted(al)\nbl = sorted(bl)\ncl = sorted(cl)\nimport bisect\nbl_ac = []\nfor b in bl:\n    idx = bisect.bisect_right(cl, b)\n    bl_ac.append(n-idx)\nimport itertools\nbl_ac = [0] + list(itertools.accumulate(bl_ac[::-1]))\nbl_ac = bl_ac\nans = 0\nfor a in al:\n    idx = bisect.bisect_right(bl, a)\n    ans += bl_ac[n-idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3850": {"id": 3850, "code": "MM = ['13', '3', '1']\nX = int(MM[0])\nY = int(MM[1])\nZ = int(MM[2])\nx = 0\nwhile True:\n  if x*(Y+Z)+Z >X:\n    break\n  else:\n    x +=1\nprint(x-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "15602": {"id": 15602, "code": "X = 12;Y = 3;Z = 1\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "13866": {"id": 13866, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncur = 0\ncnt = 0\nwhile cur<N:\n    cnt += 1\n    c = 0\n    cur1 = cur+1\n    for i in range(cur+1,N):\n        if A[i]>=A[i-1]:\n            cur1 = i+1\n        else:\n            cur1 = i\n            break\n    cur2 = cur+1\n    for i in range(cur+1,N):\n        if A[i]<=A[i-1]:\n            cur2 = i+1\n        else:\n            cur2 = i\n            break\n    cur = max(cur1,cur2)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "160": {"id": 160, "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nfor i, s in enumerate(S):\n    if s == \"a\":\n        pass\n    elif ord('z') - ord(s) + 1 <= K:\n        S[i] = 'a'\n        K -= ord('z') - ord(s) + 1\nK %= 26\nS[-1] = chr((ord(S[-1]) - ord('a') + K) % 26 + ord('a'))\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6419": {"id": 6419, "code": "import bisect\nN = 6\nJ = [3, 14, 159, 2, 6, 53]\nK = [58, 9, 79, 323, 84, 6]\nL = [2643, 383, 2, 79, 50, 288]\nJ.sort()\nK.sort()\nL.sort()\nS = 0\nfor i in range(N):\n  k = bisect.bisect_left(J,K[i])\n  l = N - bisect.bisect_right(L,K[i])  \n  S += k*l\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10358": {"id": 10358, "code": "a = 100;b = 50;k = 4\nc = [1]\nfor i in range(min(a, b), 0, -1):\n    if a % i == 0 and b % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1712": {"id": 1712, "code": "N = 10;A = 3;B = 5\nmx = min(A,B)\nmn = max(A+B-N,0)\nprint(mx,mn)", "coverage": [">", ">", ">", ">"]}, "17111": {"id": 17111, "code": "dic = {(\"H\", \"H\"): \"H\", (\"H\", \"D\"): \"D\", (\"D\", \"D\"): \"H\", (\"D\", \"H\"): \"D\"}\na = \"D\";b = \"D\"\nprint(dic[(a, b)])", "coverage": [">", ">", ">"]}, "1038": {"id": 1038, "code": "N = 112\nfor i in range(10):\n    num = 100*i+10*i+i\n    if num>=N:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "11074": {"id": 11074, "code": "S = \"level\"\nflag = 0\nfor i in range(0, len(S), 1):\n\tif S[i] != S[len(S)-1-i]:\n\t\tflag = 1\nfor i in range(0, len(S)//2, 1):\n\tif S[i] != S[len(S)//2-1-i]:\n\t\tflag = 1\nif flag == 0:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "9921": {"id": 9921, "code": "n = 3\ns = \"())\"\nc = 0\nd = 0\nfor i in range(n):\n    if s[i] == '(':\n        c += 1\n    else:\n        d += 1\nused_c = [True]*n\nused_d = [True]*n\nfor i in range(n):\n    if s[i] == '(':\n        for j in range(i+1, n):\n            if s[j] == ')' and used_c[j]:\n                c -= 1\n                used_c[j] = False\n                break\n    else:\n        for j in range(i):\n            if s[j] == '(' and used_d[j]:\n                d -= 1\n                used_d[j] = False\n                break\nprint('('*d+s+')'*c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "17241": {"id": 17241, "code": "a = \"H\";b = \"H\"\nif a == \"D\":\n    if b ==\"H\":\n        b =\"D\"\n    else:\n        b =\"H\"\nprint(b)", "coverage": [">", ">", "!", "!", "!", "!", ">"]}, "16727": {"id": 16727, "code": "a = \"D\";b = \"D\"\nx= (a==\"H\")\ny=(b==\"H\")\nif x and y or not x and not y:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16248": {"id": 16248, "code": "n = 5\nl = [6, 9, 4, 2, 11]\nm=max(l)\nl.remove(m)\nif m%2!=0:\n  med=(m+1)//2\nelse:\n  med=m//2\nmi=m\nfor ll in l:\n  mi=min(mi,abs(ll-med))\nif med+mi in l:\n  print(m,med+mi)\nelse:\n  print(m,med-mi)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "17037": {"id": 17037, "code": "a = ['H', 'H']\nprint(a[1] if a[0] == 'H' else ('D' if a[1] == 'H' else 'H'))", "coverage": [">", ">"]}, "13908": {"id": 13908, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nvec=0\nfor i in range(N-1):\n  now=A[i+1]-A[i]\n  if vec*now<0:\n    ans+=1\n    vec=0\n  elif vec==0:\n    vec=now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8186": {"id": 8186, "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint(-((1 - N) // (K - 1)))", "coverage": [">", ">", ">"]}, "16554": {"id": 16554, "code": "N = \"H\";M = \"H\"\nif N=='H':\n    N=0\nelse:\n    N=1\nif M=='H':\n    M=0\nelse:\n    M=1\nif N^M==0:\n    ans = 'H'\nelse:\n    ans = 'D'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "5010": {"id": 5010, "code": "code = \"xyz\"\nfirst_code = code[0]\nlast_code = code[len(code)-1]\nprint(first_code + str(len(code)-2) +last_code)", "coverage": [">", ">", ">", ">"]}, "18727": {"id": 18727, "code": "h = 3\nw = 7\nn = 10\nm=max(h,w)\nprint((n+m-1)//m)", "coverage": [">", ">", ">", ">", ">"]}, "11823": {"id": 11823, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nif(M1 != M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", "!"]}, "17343": {"id": 17343, "code": "a = \"H\";b = \"H\"\nif a == b:\n    print(\"H\")\nelif a != b:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "12756": {"id": 12756, "code": "x = \"5\"\nprint(\"YES\" if x in \"357\" else \"NO\")", "coverage": [">", ">"]}, "6566": {"id": 6566, "code": "import bisect\nn = 3\na = [1, 1, 1]\na = sorted(a)\nb = [2, 2, 2]\nb = sorted(b)\nc = [3, 3, 3]\nc = sorted(c)\nans = 0\nfor i in range(n):\n    B = b[i]\n    a_nums = bisect.bisect_left(a,B)\n    c_nums = n - bisect.bisect_right(c,B)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13197": {"id": 13197, "code": "s_in = \"haiku,atcoder,tasks\"\ns_out = s_in.replace(\",\", \" \", 2)\nprint(s_out)", "coverage": [">", ">", ">"]}, "4928": {"id": 4928, "code": "S = \"smiles\"\nprint(S[0] + str(S.__len__()-2) + S[-1])", "coverage": [">", ">"]}, "13605": {"id": 13605, "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(',',' '))", "coverage": [">", ">"]}, "78": {"id": 78, "code": "s = \"xyz\"\nk = 4\nans = \"\"\nl = 26\nfor i in range(len(s)-1):\n    if l - ord(s[i]) + 97 <= k and s[i] != \"a\":\n        k -= l - ord(s[i]) + 97\n        ans += \"a\"\n    else:\n        ans += s[i]\nans += (chr(((ord(s[-1]) - 97) + k + l) % l + 97))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "3855": {"id": 3855, "code": "x = 64146;y = 123;z = 456\nx -= z\ny += z\nprint(x//y)", "coverage": [">", ">", ">", ">"]}, "6713": {"id": 6713, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nans = \"No\"\nsum_ = sum(A)\nif H <= sum_:\n  ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3471": {"id": 3471, "code": "A = 20;B = 30\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3522": {"id": 3522, "code": "a = 20;b = 30\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "1870": {"id": 1870, "code": "N = 10;A = 3;B = 5\nmini = max(0,A+B-N)\nmaxi = min(A,B)\nprint(*[maxi,mini])", "coverage": [">", ">", ">", ">"]}, "8479": {"id": 8479, "code": "N = 4\nA_1 = [1, 1, 1, 1]\nA_2 = [1, 1, 1, 1]\nsum=0\nfor k in range(1,N+1):\n    sum_2=0\n    for i in range(0,k): \n        sum_2=sum_2+A_1[i]\n    for j in range(k-1,N):\n        sum_2=sum_2+A_2[j]\n    if sum<sum_2:    \n        sum=sum_2    \nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10538": {"id": 10538, "code": "A = 8;B = 12;K = 2\nlst=[]\na=min(A,B)\nfor i in range(1,a+1):\n    if A%i==0:\n        if B%i==0:\n            lst.append(i)\nlst.reverse()\nprint(lst[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14766": {"id": 14766, "code": "N = 1;P = 1\nA = [50]\nx,y=1,0\nfor a in A:\n    if a%2:\n        x,y=x+y,x+y\n    else:\n        x,y=x*2,y*2\nprint(y if P else x)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "461": {"id": 461, "code": "S = ['x', 'y', 'z']\nk = 4\nfor i in range(len(S)):\n    s=S[i]\n    if s==\"a\":continue\n    x=123-ord(s)\n    if k>=x:\n        k-=x\n        S[i]=\"a\"\n    else:continue\nk%=26\nfor i in range(len(S)):\n    if S[-1-i]!=\"a\":\n        S[-1-i]=chr((ord(S[-1-i])-97+k%26)+97)\n        print(\"\".join(S));break\nelse:\n    S[-1]=chr((ord(S[-1])-97+k%26)+97)\n    print(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!"]}, "16484": {"id": 16484, "code": "from bisect import bisect\nn = 5\nlst = [2, 4, 6, 9, 11]\nm=lst[-1]\nindex=bisect(lst,m/2)\nif m!=lst[index]:\n    q=lst[index]\n    if 0<=index-1:\n        p=lst[index-1]\n        if abs(m/2-p)>=abs(m/2-q):\n            print(m,q)\n        else:\n            print(m,p)\n    else:\n        print(m,q)\nelse:\n    print(m,lst[index-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2880": {"id": 2880, "code": "S = \"1111111111\"\nans = 10000\nfor i in range(len(S)-2):\n    tmp = abs(753-int(S[i:i+3]))\n    if tmp < ans:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7092": {"id": 7092, "code": "h = 20;a = 3\nA = [4, 5, 6]\nif sum(A) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "314": {"id": 314, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nzp1 = 1+ord('z')\nfor i in range(len(s)):\n    si = s[i]\n    cost = (zp1-ord(si))%26\n    if cost <= K:\n        K -= cost\n        s[i] = 'a'\ns[-1] = chr(ord('a') + (K + ord(s[-1]) - ord('a')) % 26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14045": {"id": 14045, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nfirst = True\nup = False\ndown = False\nfor i in range(n):\n    if first:\n        cnt += 1\n        now = a[i]\n        if i < n-1:\n            if a[i+1] > now:\n                up = True\n                down = False\n                first = False\n            elif a[i+1] < now:\n                down = True\n                up = False\n                first = False\n            else:\n                up = False\n                down = False\n                first = True\n                cnt -= 1\n    else:\n        now = a[i]\n        if i < n-1:\n            if up:\n                if now > a[i+1]:\n                    first = True\n            elif down:\n                if now < a[i+1]:\n                    first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "2049": {"id": 2049, "code": "n = 10;a = 7;b = 5\nans_max = min(a, b)\nans_min = max(0, a + b - n)\nprint(\"{} {}\".format(ans_max, ans_min))", "coverage": [">", ">", ">", ">"]}, "16644": {"id": 16644, "code": "a = \"H\";b = \"H\"\nprint(\"D\" if a!=b else \"H\")", "coverage": [">", ">"]}, "15485": {"id": 15485, "code": "X = 100000;Y = 1;Z = 1\nanswer = (X-Z) // (Y+Z)\nprint(answer)", "coverage": [">", ">", ">"]}, "9231": {"id": 9231, "code": "s = \"2017/01/31\"\nr = s[:3]+'8'+s[4:]\nprint(r)", "coverage": [">", ">", ">"]}, "8703": {"id": 8703, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7359": {"id": 7359, "code": "H = 210;N = 5\nN = [31, 41, 59, 26, 53]\nprint(\"Yes\") if(sum(N) >= H) else print(\"No\")", "coverage": [">", ">", ">"]}, "12815": {"id": 12815, "code": "n = 6\nprint('YES' if n in (3,5,7) else 'NO')", "coverage": [">", ">"]}, "4057": {"id": 4057, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh = (h2 * 60 + m2) - (h1 * 60 + m1)\nans = h - k\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11002": {"id": 11002, "code": "S = \"akasaka\"\nN = int(len(S))\nS1 = S[:int(N/2)]\nS2 = S[int(N/2)+1:N]\nfor i in range(int(N/2)):\n    if(S[i] != S[N-1-i]):\n        print(\"No\")\n        exit()\n    if(S1[i] != S1[int(N/2)-1-i]):\n        print(\"No\")\n        exit()\n    if(S2[i] != S2[int(N/2)-1-i]):\n        print(\"No\")\n        exit()\nprint(\"Yes\")        ", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">"]}, "14053": {"id": 14053, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nindex = 1\nans = 0\nwhile index < n:\n    ans += 1\n    if a[index-1] < a[index]:\n        flag = True\n    elif a[index-1] > a[index]:\n        flag = False\n    else:\n        flag3 = True\n        for i in range(index,n):\n            if a[index] != a[i]:\n                flag3 = False\n                if a[index] < a[i]:\n                    flag = True\n                    break\n                else:\n                    flag = False\n                    break\n        if flag3:\n            break\n    flag2 = True\n    for i in range(index,n):\n        if flag and a[i] < a[i-1]:\n            index = i+1\n            flag2 = False\n            break\n        elif a[i] > a[i-1] and flag == False:\n            index = i+1\n            flag2 = False\n            break\n    if flag2:\n        break\nif index == n:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1675": {"id": 1675, "code": "n = 100;a = 100;b = 100\nif n < a+b:\n    print(min(a, b),  a+b-n)\nelse:\n    print(min(a, b),  0)", "coverage": [">", ">", ">", "!", "!"]}, "16338": {"id": 16338, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\nans = a[1]\nfor i in range(1, n-1):\n  if abs(a[0]/2 - a[i]) > abs(a[0]/2 - a[i+1]):\n    ans = a[i+1]\n  else:\n    break\nprint(a[0], ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "16979": {"id": 16979, "code": "a = False;b = False\nif a ^ b:\n    print('D')\nelse:\n    print('H')", "coverage": [">", ">", "!", "!", ">"]}, "10261": {"id": 10261, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nc0 = 0\nc1 = 0\nz0 = 0\nz1 = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nz0 = c1\ns = s[::-1]\nc0 = 0\nc1 = 0\nfor i in range(n):\n    if s[i] == \")\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nz1 = c1\ns = s[::-1]\nans = [\"(\"]*z0 + s + [\")\"]*z1\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "766": {"id": 766, "code": "k = 101\na = 7%k\nflag = False\nfor i in range(k):\n    if a == 0:\n        flag = True\n        ans = i+1\n        break\n    a = (10*a+7)%k\nif flag:\n    print(ans)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4919": {"id": 4919, "code": "S = \"smiles\"\nx = len(S) - 2\nprint(S[0] + str(x) + S[-1])", "coverage": [">", ">", ">"]}, "10833": {"id": 10833, "code": "S = \"akasaka\"\nN = len(S)\na = S[:N // 2]\nb = S[N // 2 + 1:]\nprint('Yes' if a == a[::-1] == b == b[::-1] else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "4354": {"id": 4354, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nh = H2 - H1\nm = M2 - M1\ns = 0\ns = h * 60 + m\ns = s - K\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5533": {"id": 5533, "code": "n = 5\na = (n+1)/2\nprint(int(a))", "coverage": [">", ">", ">"]}, "4695": {"id": 4695, "code": "S = \"xyz\"\nprint(S[0] + str(len(S) - 2) + S[-1])", "coverage": [">", ">"]}, "4315": {"id": 4315, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nprint(c*60+d-a*60-b-e)", "coverage": [">", ">"]}, "3912": {"id": 3912, "code": "x = 13;y = 3;z = 1\nlong = x-z\nf = y+z\nans , b = divmod(long,f)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "83": {"id": 83, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n  dp = 26-ord(s[i])+97\n  if k >= dp and s[i] != \"a\":\n    k-=dp\n    s[i] = \"a\"\n    if k == 0:\n      break\nelse:\n  s[-1] = chr((ord(s[-1])-97+k)%26+97)\nprint(*s,sep=\"\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "174": {"id": 174, "code": "from bisect import *\nS = ['a']\nK = 25\nalp = list(\"abcdefghijklmnopqrstuvwxyz\")\nfor i in range(len(S)):\n  b = bisect_left(alp,S[i])\n  if i == len(S)-1:\n    S[i] = alp[(b+K)%26]\n  elif b == 0:\n    continue\n  elif 26 - b <= K:\n    K -= (26 - b)\n    S[i] = \"a\"\n  if K == 0:\n    break\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", ">"]}, "4815": {"id": 4815, "code": "n = \"xyz\"\nprint(n[0] + str((len(n)- 2)) + n[-1])", "coverage": [">", ">"]}, "17680": {"id": 17680, "code": "s = [0, 1, 1, 2]\na = s[0]*10+s[1]\nb = s[2]*10+s[3]\nif a == 0 and b == 0:\n    print('NA')\n    exit()\nif 0 < a<= 12 and (b>12 or b==0):\n    print('MMYY')\nelif (a > 12 or a==0) and 0 < b <= 12:\n    print('YYMM')\nelif a <= 12 and b <= 12:\n    print('AMBIGUOUS')\nelse:print('NA')", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", ">", "!", ">", ">", "!"]}, "13674": {"id": 13674, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;s = 120\nm = 60 * (h2 - h1) + (m2 - m1)\nprint(m - s)", "coverage": [">", ">", ">"]}, "6074": {"id": 6074, "code": "n = 2\na = n // 2 + n % 2\nprint(a)", "coverage": [">", ">", ">"]}, "13322": {"id": 13322, "code": "f = \"happy\";s = \"newyear\";ff = \"enjoy\"\nprint(f, s, ff)", "coverage": [">", ">"]}, "7891": {"id": 7891, "code": "n = 3;k = 3\nA = [1, 2, 3]\nimport math\nans = math.ceil(((n-1)/(k-1)))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11045": {"id": 11045, "code": "S = \"level\"\nl = len(S) // 2\nll = l // 2\nformer = S[:l]\nlatter = S[l+1:]\nfor i in range(l):\n  if S[i] != S[-i-1]:\n    print(\"No\")\n    break\nelse:\n  for i in range(ll):\n    if former[i] != former[-i-1] or latter[i] != latter[-i-1]:\n      print(\"No\")\n      break\n  else:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!"]}, "4707": {"id": 4707, "code": "s = \"xyz\"\nS=s[0]+str(len(s)-2)+s[len(s)-1]\nprint(S)", "coverage": [">", ">", ">"]}, "16253": {"id": 16253, "code": "n = 2\na = [100, 0]\na.sort()\ns=a[-1]/2\nb=[[i,abs(i-s)] for i in a]\nb.sort(key=lambda z:z[1])\nprint(a[-1],b[0][0])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9189": {"id": 9189, "code": "y = \"2017/01/31\"\nprint(y.replace(\"2017\", \"2018\"))", "coverage": [">", ">"]}, "6541": {"id": 6541, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans = 0\nfor i in range(n):\n    abis = bisect.bisect_left(a, b[i])\n    cbis = bisect.bisect_right(c, b[i])\n    ans += abis*(n-cbis)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6240": {"id": 6240, "code": "from bisect import bisect_left,bisect_right\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    num1 = bisect_left(A,b)\n    num2 = bisect_right(C,b)\n    ans += num1*(n-num2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3013": {"id": 3013, "code": "s = \"35753\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n  c = int(s[i])*100+int(s[i+1])*10+int(s[i+2])\n  ans = min(ans,abs(753-c))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18332": {"id": 18332, "code": "a = 3\nb = 7\nn = 10\nt = max(a, b)\nprint((n + t - 1) // t)", "coverage": [">", ">", ">", ">", ">"]}, "6189": {"id": 6189, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor b in B:\n    i = bisect.bisect_left(A,b)\n    j = bisect.bisect_right(C,b)\n    count += i * (N - j)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10650": {"id": 10650, "code": "a = 1;b = 1;k = 1\nlst = []\nend = min(a,b) \nfor i in range(1,end+1):\n    ra = a % i\n    rb = b % i\n    if ra == 0 and rb == 0:\n        lst.append(i)\nans = lst[-1*k]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11728": {"id": 11728, "code": "x = 11\ny = 11\nprint(1) if (x != y) else print(0)", "coverage": [">", ">", ">"]}, "16906": {"id": 16906, "code": "a = \"D\";b = \"H\"\ndic = {\"H\":True,\"D\":False}\na = dic[a]\nb = dic[b]\nprint(\"D\" if a^b else \"H\")", "coverage": [">", ">", ">", ">", ">"]}, "2839": {"id": 2839, "code": "S = \"1234567876\"\nans = 999\nfor s in range(len(S)-2):\n  ans = min(abs(753-int(S[:3])),ans)\n  S = S[1:]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1318": {"id": 1318, "code": "N = 111\nfor n in [111, 222, 333, 444, 555, 666, 777, 888, 999]:\n  if n >= N:\n    print(n)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "6001": {"id": 6001, "code": "N = 5\nans = N//2 + (1 if N % 2 == 1 else 0)\nprint(ans)", "coverage": [">", ">", ">"]}, "17549": {"id": 17549, "code": "a = \"1700\"\nb = int(a[:2])\nc = int(a[2:])\nif 0< b < 13:\n    a_month_flag = 1\nelif b == 0:\n    a_month_flag = 0    \nelse:\n    a_month_flag = 0\nif 0< c < 13:\n    b_month_flag = 1\nelif c == 0:\n    b_month_flag = 0\nelse:\n    b_month_flag = 0\nif a_month_flag ==1 and b_month_flag==1:\n    print(\"AMBIGUOUS\")\nelif a_month_flag == 1 and b_month_flag == 0:\n    print(\"MMYY\")\nelif a_month_flag == 0 and b_month_flag ==1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17010": {"id": 17010, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    a = 1\nelse:\n    a = -1\nif b == \"H\":\n    b = 1\nelse:\n    b = -1\nif a*b == 1:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!"]}, "15959": {"id": 15959, "code": "a = 12;b = 4\nc=0\nif a<=b:\n  print(0)\nelif a>b:\n  c=a-b*2\n  if c>0:\n    print(c)\n  elif c<=0:\n    print(0)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", "!", "!"]}, "18360": {"id": 18360, "code": "h = 14\nw = 12\nn = 112\nans = n // max(h, w)\nif n % max(h, w) > 0:\n    ans = ans + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "9355": {"id": 9355, "code": "char = \"2017/01/31\"\nindex = 3\nprint(char[:index] + '8' + char[index + 1:])", "coverage": [">", ">", ">"]}, "13970": {"id": 13970, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = n\nprev = a[0]\ntrend ='N'\nfor i in range(1, n):\n    if a[i] > prev:\n        if (trend == 'U' or trend == 'N'):\n            cnt -= 1\n            trend ='U'\n        else:\n            trend = 'N'\n    if a[i] < prev:\n        if (trend == 'D' or trend == 'N'):\n            cnt -= 1\n            trend = 'D'\n        else:\n            trend = 'N'\n    if a[i] == prev:\n        cnt -= 1\n    prev = a[i]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "1876": {"id": 1876, "code": "N = 10;A = 3;B = 5\nif A < B:\n  x = A\nelse:\n  x = B\nif A+B-N < 0:\n  y = 0\nelse:\n  y = A+B-N\nprint (x,y)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "17731": {"id": 17731, "code": "s = \"0112\"\na= s[0:2]\nb= s[2:4]\na = int(a)\nb= int(b)\nif a == 0 or b == 0:\n  if b!= 0 and b<13:\n    print('YYMM')\n  elif a!= 0 and a<13:\n    print('MMYY')\n  else:\n    print('NA')\nelif a<13 or b<13:\n  if a>12:\n    print('YYMM')\n  elif b>12:\n    print('MMYY')\n  else:\n    print('AMBIGUOUS')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", "!", "!", ">", "!", "!"]}, "19000": {"id": 19000, "code": "n = 12\nans = 0\nif n % 2 == 0:\n    denom = 2 * 5\n    while denom <= n:\n        ans += n // denom\n        denom *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7922": {"id": 7922, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif N == K:\n    print(1)\nelse:\n    print((N+K-3)//(K-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "13737": {"id": 13737, "code": "import datetime\nfrom sys import stdin\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nd1 = datetime.datetime(year=2018, month=1, day=7, hour=h1, minute=m1, second=0, microsecond=0)\nd2 = datetime.datetime(year=2018, month=1, day=7, hour=h2, minute=m2, second=0, microsecond=0)\ndelta = d2 - d1\ndt2 = delta.seconds / 60\ndt2 -= k\nif dt2 < 0 :\n\tdt2 = 0\nprint(int(dt2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1494": {"id": 1494, "code": "n = \"750\"\na = int(n[0]*3)\nif int(n) <= a:\n    print(a)\nelse:\n    print(str(int(n[0])+1)*3)", "coverage": [">", ">", ">", ">", "!", "!"]}, "5223": {"id": 5223, "code": "s = \"xyz\"\ns0 = s[0]\ns1 = s[-1:]\nprint(str(s0 + str(len(s[1:-1]))\n          + s1))", "coverage": [">", ">", ">", ">", ">"]}, "2434": {"id": 2434, "code": "N = 2;M = 1\na = N*(N-1)\nb = M*(M-1)\nprint(int((a+b)/2))", "coverage": [">", ">", ">", ">"]}, "7069": {"id": 7069, "code": "H = 210;N = 5\ndata = [31, 41, 59, 26, 53]\nS = 0\nfor i in range(0,len(data)):\n    S += data[i]\nif H > S:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1648": {"id": 1648, "code": "N = 100;A = 100;B = 100\nans1 = min(A,B)\nans2 = max(A + B - N, 0)\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">"]}, "17793": {"id": 17793, "code": "s = \"0112\"\na = s[:2]\nb = s[2:]\nb1 = 0\na1 = 0\nif b[0] == '0': b1 = int(b[1])\nelse: b1 = int(b)\nif a[0] == '0': a1 = int(a[1])\nelse: a1 = int(a)\nif (b1>=1 and b1<=12) and (a1>=1 and a1<=12): print(\"AMBIGUOUS\")\nelif b1>=1 and b1<=12: print(\"YYMM\")\nelif a1>=1 and a1<=12: print(\"MMYY\")\nelse: print(\"NA\") ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!"]}, "2042": {"id": 2042, "code": "x = 10;y = 3;z = 5\nprint(min(y,z), max(0,y+z-x))", "coverage": [">", ">"]}, "17594": {"id": 17594, "code": "S = \"1700\"\nl, r =  map(int, [S[:2], S[2:]])\nif 1 <= l <= 12 and 1 <= r <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= l <= 12 and (r == 0 or r > 12):\n  print(\"MMYY\")\nelif (l == 0 or l > 12) and 1 <= r <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "8555": {"id": 8555, "code": "N = 1\nA1 = [2]\nA2 = [3]\nlst = [0]*N\nfor i in range(N):\n    lst[i] = sum(A1[:i+1]) + sum(A2[i:])\nans = max(lst)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16381": {"id": 16381, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm = a[-1]\nres = m\ntemp = 0\nfor i in range(n):\n    if res > abs(m - 2*a[i]):\n        res = abs(m - 2*a[i])\n        temp = a[i]\nprint(m, temp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1663": {"id": 1663, "code": "n = 100;a = 100;b = 100\nab = a+b\nc = n < ab\nr = ab - n if c else 0\nprint(' '.join([str(i) for i in [min(a,b), r]]))", "coverage": [">", ">", ">", ">", ">"]}, "8223": {"id": 8223, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 0 - -(n - 1)//(k - 1)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "12415": {"id": 12415, "code": "a = \"akasaka\"\nb = len(a)\nc = (b-1)//2\nd = (b+3)//2\nif a[:(c)] == a[(d-1):]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9524": {"id": 9524, "code": "s = \"2017/01/07\"\nprint(s.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "879": {"id": 879, "code": "K = 101\nmod = 7\ncnt = 0\nfor i in range(K):\n    if mod % K == 0:\n        cnt += 1\n        break\n    else:\n        cnt += 1\n        mod = (mod * 10 + 7) % K\nif mod % K == 0:\n    print(cnt)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!"]}, "17972": {"id": 17972, "code": "S = \"1700\"\nif int(S[0]+S[1])>0 and int(S[0]+S[1])<13:\n  if int(S[2]+S[3])>0 and int(S[2]+S[3])<13:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if int(S[2]+S[3])>0 and int(S[2]+S[3])<13:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "11375": {"id": 11375, "code": "list = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = \"SUN\"\ni = list.index(s)\nanswer = 7 - i\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "19310": {"id": 19310, "code": "N = 10\nprint(2 * N if (N % 2 != 0) else N)", "coverage": [">", ">"]}, "19099": {"id": 19099, "code": "n = 12\nif n%2 == 1:\n    print(0)\n    exit()\nnum = 5\ni = 1\nans = 0\nwhile num**i < n:\n    ans += n//num**i//2\n    i += 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "7536": {"id": 7536, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nA.sort(reverse=True)\nS = sum(A[:N])\nif S >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "17510": {"id": 17510, "code": "S = \"1700\"\nhigh = int(S[0:2])\nlow = int(S[2:4])\nif 1<= high <= 12:\n    if 1<= low <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nif high < 1 or high > 12:\n    if 1<= low <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "14704": {"id": 14704, "code": "n = 3;p = 0\na = [1, 1, 1]\nif a.count(1)==0:\n  print((1-p)*2**n)\nelse:\n  print(2**(n-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "2399": {"id": 2399, "code": "N = 2;M = 1\nans = (N * (N-1)) // 2 + (M * (M-1)) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "11576": {"id": 11576, "code": "w=['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7-w.index(\"SUN\"))", "coverage": [">", ">"]}, "8333": {"id": 8333, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8736": {"id": 8736, "code": "n = 1\na1 = [2]\na2 = [3]\nb1 = [0] * n\nb2 = [0] * n\nc1 = 0\nc2 = 0\nfor i in range(n):\n    b1[i] = c1 + a1[i]\n    c1 += a1[i]\nfor i in range(n):\n    b2[- 1 - i] = c2 + a2[- 1 - i]\n    c2 += a2[- 1 - i]\nd = []\nfor i in range(n):\n    d.append(b1[i] + b2[i])\nprint(max(d))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7672": {"id": 7672, "code": "hp = 211;n = 5\narr = [31, 41, 59, 26, 53]\nif sum(arr) >= hp: print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">"]}, "4307": {"id": 4307, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nA1 = H1*60+M1\nA2 = H2*60+M2\nprint(max(0,A2-A1-K))", "coverage": [">", ">", ">", ">"]}, "2897": {"id": 2897, "code": "S = \"35753\"\nmabs = 2000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < mabs:\n        mabs = abs(int(S[i:i+3])-753)\nprint(mabs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16802": {"id": 16802, "code": "a = \"D\";b = \"D\"\nif a == \"H\" and b ==\"H\":\n    print(\"H\")\nelif a == \"H\" and b ==\"D\":\n    print(\"D\")\nelif a == \"D\" and b ==\"H\":\n    print(\"D\")\nelif a == \"D\" and b ==\"D\":\n    print(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "16749": {"id": 16749, "code": "a = \"H\";b = \"H\"\nif (a == b == 'H') or (a == b == 'D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "17765": {"id": 17765, "code": "s = \"1905\"\nans = [0,0]\nif 1 <=  int(s[:2]) <= 12:\n    ans[0] = 1\nif 1 <= int(s[2:]) <= 12:\n    ans[1] = 1\nprint([[\"NA\",\"YYMM\"],[\"MMYY\",\"AMBIGUOUS\"]][ans[0]][ans[1]])", "coverage": [">", ">", ">", "!", ">", ">", ">"]}, "18251": {"id": 18251, "code": "H = 3\nW = 7\nN = 10\nX = max(H, W)\nprint((N + X - 1) // X)", "coverage": [">", ">", ">", ">", ">"]}, "5511": {"id": 5511, "code": "import math\nprint(math.ceil(int(\"100\")/2))", "coverage": [">", ">"]}, "5444": {"id": 5444, "code": "n = 2\nif n%2 == 0:\n    print(n//2)\nif n%2 != 0:\n    print(n//2+1)", "coverage": [">", ">", ">", ">", "!"]}, "342": {"id": 342, "code": "S = \"codefestival\"\nK = 100\nA = [\" \" for _ in range(len(S))]\nzan = K\nfor i in range(len(S)):\n  n = (ord('z') - ord(S[i]) + 1) % 26 \n  if zan >= n:\n    zan -= n\n    A[i] = 'a'\n  else:\n    A[i] = S[i]\nif zan > 0:\n  A[-1] = chr((ord(A[-1]) - ord('a') + zan)%26 + ord('a'))\nprint(\"\".join(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4871": {"id": 4871, "code": "s = \"smiles\"\nanswer = ''\ns = list(s)\nanswer = s[0] + str(len(s)-2) + s[len(s)-1]\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "3443": {"id": 3443, "code": "a = 20;b = 15\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3680": {"id": 3680, "code": "a = 20;b = 30\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "13298": {"id": 13298, "code": "inp = \"happy,newyear,enjoy\"\nprint(inp.replace(',',' '))", "coverage": [">", ">"]}, "19232": {"id": 19232, "code": "N = 12\nif N<2 or N%2:\n    print(0)\nelse:\n    import math\n    ans=0\n    n=N//2\n    k=int(math.log(n,5))\n    for i in range(1,k+1):\n        ans+=n//(5**i)\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3273": {"id": 3273, "code": "a = 12;b = 4\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", "!", "!", ">"]}, "5343": {"id": 5343, "code": "from math import ceil\nn = 100\nans = ceil(n/2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "9085": {"id": 9085, "code": "s = \"2017/01/31\"\nprint(s.replace(s[3], '8', 1))", "coverage": [">", ">"]}, "19525": {"id": 19525, "code": "n = 3\nif n%2 !=0:\n    print(2*n)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "5052": {"id": 5052, "code": "s = \"xyz\"\nl = len(s)-2\ni = s[0] + str(l) + s[-1]\nprint(i)", "coverage": [">", ">", ">", ">"]}, "8434": {"id": 8434, "code": "N = 5\nA = [[],[]]\nA = [[3, 2, 2, 4, 1], []]\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\nresult = 0\nfor i in range(N+1):\n    result = max(sum(A[0][:i]) + sum(A[1][i-1:]), result)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18575": {"id": 18575, "code": "h = 3\nw = 7\nn = 10\nif n % max(h, w) == 0:\n\tprint(n // max(h,w))\nelif n % max(h,w) !=0 :\n\tprint(n // max(h, w) + 1)", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "15762": {"id": 15762, "code": "x = 12;y = 3;z = 1\nmitumori=x//(y+z)\nif x - mitumori*(y+z)>=z:print(mitumori)\nelse:print(mitumori-1)", "coverage": [">", ">", ">", ">"]}, "12444": {"id": 12444, "code": "s = \"level\"\nn=len(s)\nx=s[:(n-1)//2]\ny=s[(n+3)//2-1:]\nans=0\nfor i in range(3):\n    if s==s[::-1]:\n        ans +=1\n    if i==0:\n        s=x\n    elif i==1:\n        s=y\nprint(\"Yes\" if ans==3 else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15983": {"id": 15983, "code": "import itertools\na = 12;b = 4\nans= a-b*2\nif ans <=0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4294": {"id": 4294, "code": "H_1 = 10;M_1 = 0;H_2 = 12;M_2 = 0;K = 120\ntime_1 = H_1*60+M_1\ntime_2 = H_2*60+M_2\nprint(time_2-time_1-K)", "coverage": [">", ">", ">", ">"]}, "4816": {"id": 4816, "code": "S = \"internationalization\"\nl = int(len(S))\ns1 = S[0]\ns2 = S[-1]\nL = int(l-2)\nprint(s1 + str(L) + s2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2577": {"id": 2577, "code": "n = {1, 4, 9, 7}\nif n == {1, 4, 7, 9}:\n\tprint('YES')\nelse:\n\tprint('NO')", "coverage": [">", ">", ">", "!", "!"]}, "4920": {"id": 4920, "code": "S = \"xyz\"\nx = len(S) - 2\nprint(S[0] + str(x) + S[-1])", "coverage": [">", ">", ">"]}, "3087": {"id": 3087, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\ns = \"1111111111\"\nans = 1000\nfor i in range(len(s) - 2):\n    ans = min(ans, abs(753 - int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "105": {"id": 105, "code": "s = ['a']\nk = 25\nfor i, c in enumerate(s):\n    t = (ord(\"z\") - ord(c) + 1) % 26\n    if k >= t:\n        s[i] = \"a\"\n        k -= t\nt = k % 26\ns[-1] = chr(ord(s[-1]) + t)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16627": {"id": 16627, "code": "A1 = \"D\";A2 = \"H\"\nif A1 == \"H\":\n  print(A2)\nelse:\n  if A2 == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", "!", "!", ">", ">", "!", "!"]}, "7800": {"id": 7800, "code": "n = 3;k = 3\nk-=1\na = [1, 2, 3]\nfor i in range(n):\n    if a[i]==1:\n        index=i\nprint(-(-i//k)-(-(n-i-1)//k))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5808": {"id": 5808, "code": "import math\nn = 100\npaper = math.ceil(n/2)\nprint(paper)", "coverage": [">", ">", ">", ">"]}, "2169": {"id": 2169, "code": "n = 100;a = 100;b = 100\nif a+b>=n:\n    c = a+b-n\nelse:\n    c = 0\nprint(min(a,b), c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15300": {"id": 15300, "code": "X = 100000;Y = 1;Z = 1\nprint(int((X-Z)/(Y+Z)))", "coverage": [">", ">"]}, "3137": {"id": 3137, "code": "s = \"1111111111\"\nans = abs(753 - int(s[0] + s[1] + s[2]))\nfor i in range(1,len(s) - 2):\n    n = s[i]+ s[i + 1] + s[i + 2]\n    ans = min(ans,abs(int(n) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4429": {"id": 4429, "code": "s = \"internationalization\"\nprint('{}{}{}'.format(s[0],len(s)-2,s[-1]))", "coverage": [">", ">"]}, "18014": {"id": 18014, "code": "a = \"1700\"\nn=int(a[0:2])\nm=int(a[2:4])\nif 0<n<=12 and 0<m<=12:\n    print('AMBIGUOUS')\nelif 0<n<=12:\n    print('MMYY')\nelif 0<m<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "9010": {"id": 9010, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif (b - a <= k) and (c - a <= k) and (d - a <= k) and (e - a <= k) and (c - b <= k) and (d - b <= k) and (e - b <= k) and (d - c <= k) and (e - c <= k) and (e - d <= k):\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8398": {"id": 8398, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11553": {"id": 11553, "code": "week = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nS = \"SAT\"\nans = 7\nfor i in range(len(week)):\n    if S == week[i]:\n        ans -= i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14417": {"id": 14417, "code": "N = 7\nAs = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before < As[i]:\n        if zoka == 0 or zoka == 1:\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\n    elif before > As[i]:\n        if zoka == 0 or zoka == 2:\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "12464": {"id": 12464, "code": "s = \"akasaka\"\nn=len(s)//2\nprint('Yes'if s[:n]==s[n-1::-1]==s[-n:]else'No')", "coverage": [">", ">", ">"]}, "5326": {"id": 5326, "code": "a = 5\nif a % 2 == 0:\n  print(str(int(a//2)))\nelse:\n  print(str(int(a//2)+1))", "coverage": [">", ">", "!", "!", ">"]}, "12809": {"id": 12809, "code": "if \"6\" in '753':\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", "!", "!", ">"]}, "4060": {"id": 4060, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(H2*60+M2-H1*60-M1-K)", "coverage": [">", ">"]}, "18822": {"id": 18822, "code": "h = 2;w = 100;n = 200\nans = 0\ns = 0\nwhile s < n:\n  s += max(h,w)\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10271": {"id": 10271, "code": "n = 3\nS = \"())\"\nx=y=0\nfor i,s in enumerate(S):\n  y=y-1 if s=='(' else y+1\n  x=max(x,y)\nprint('('*x+S+')'*(x-y))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18374": {"id": 18374, "code": "H = 3\nW = 7\nN = 10\nif N % max(H, W) == 0 :\n    print(int(N / max(H, W)))\nelse :\n    print(int(N / max(H, W)) + 1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2535": {"id": 2535, "code": "a = 1;b = 9;c = 7;d = 4\nS={a,b,c,d}\nif S=={1,7,9,4}:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "10044": {"id": 10044, "code": "N = 8\nS = \"))))((((\"\nl = 0\nr = 0\nfor s in S:\n    if s == \"(\":\n        r += 1\n    else:\n        if r > 0:\n            r -= 1\n        else:\n            l += 1\nans = \"\".join([\"(\"*l , S, \")\"*r])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "13498": {"id": 13498, "code": "s = \"abcde,fghihgf,edcba\"\ns1, s2, s3 = s.split(\",\")\nprint(s1, s2, s3)", "coverage": [">", ">", ">"]}, "7410": {"id": 7410, "code": "h = 211;a = 5\nm = [31, 41, 59, 26, 53]\nans='No'\nif h<=sum(m): ans='Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "15972": {"id": 15972, "code": "A = \"20\";B = \"15\"\n(A,B)=(int(A),int(B))\nAns=A-(2*B)\nif Ans<=0:\n  Ans=0\nprint(Ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "613": {"id": 613, "code": "alp = \"abcdefghijklmnopqrstuvwxyz\"\ns = \"a\"\nK = 25\nN = len(s)\nT = \"\"\nfor i in range(N):\n    n = alp.index(s[i])\n    if i==N-1:\n        T+=alp[(n+K)%26]\n    else:\n        if n!=0 and K>=26-n:\n            T+=\"a\"\n            K-=(26-n)\n        else:T+=alp[n]\nprint(T)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "11264": {"id": 11264, "code": "s = \"SAT\"\nif \"M\" in s:\n    print(\"6\")\nelif \"D\" in s:\n    print(\"4\")\nelif \"E\" in s:\n    print(\"5\")\nelif \"H\" in s:\n    print(\"3\")\nelif \"F\" in s:\n    print(\"2\")\nelif \"A\" in s:\n    print(\"1\")\nelse:\n    print(\"7\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "7949": {"id": 7949, "code": "from math import ceil\nn = 4;k = 3\na = [2, 3, 1, 4]\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "10448": {"id": 10448, "code": "A = 1;B = 1;K = 1\nprint([n for n in range(1,min(A,B)+1) if A%n==B%n==0][-K])", "coverage": [">", ">"]}, "16021": {"id": 16021, "code": "import sys\ninput = sys.stdin.readline\na = 20;b = 30\nif a > b * 2:\n    ans = a - b * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "9256": {"id": 9256, "code": "s = \"2017/01/07\"\nprint(s.replace(\"7\",\"8\",1))", "coverage": [">", ">"]}, "8598": {"id": 8598, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=[0]*n\nfor i in range(n):\n  ans[i] += sum(A1[:i+1])+sum(A2[i:])\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "735": {"id": 735, "code": "import math\nk = 101\nif(k%2)==0:\n    print(\"-1\")\nelse:\n    flag=0\n    for x in range(1,1000001):\n        if (7%(9*k)*(pow(10,x,k*9)-1)%(9*k))==0:\n            print(x)\n            flag=1\n            break\n    if flag==0:\n        print(-1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!"]}, "11397": {"id": 11397, "code": "S = \"SUN\"\nDAY = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor num in range(7):\n  if DAY[num] == S:\n    print(7-num)", "coverage": [">", ">", ">", ">", ">"]}, "18928": {"id": 18928, "code": "N = 12\nif N%2 == 1:\n    print(0)\n    exit()\nans = 0\nfor i in range(30):\n    ans += N//(2*5**(i+1))\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "4623": {"id": 4623, "code": "s = \"xyz\"\nn = str(len(s)-2)\nprint(s[0]+n+s[-1])", "coverage": [">", ">", ">"]}, "15568": {"id": 15568, "code": "x = 12;y = 3;z = 1\nX = x - 2*z\nn = X//(y+z)\nif X - (y+z)*n >= y:\n  print(n+1)\nelse:\n  print(n)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16291": {"id": 16291, "code": "n = 2\na = [100, 0]\na.sort()\nm = a[-1]\nmid = m / 2\nd = 10 ** 9\nfor ai in a[:-1]:\n    x = abs(mid - ai)\n    if x < d:\n        ans = ai\n        d = x\nprint(m, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7255": {"id": 7255, "code": "h = 10;n = 3\nA = [4, 5, 6]\nattack = sum(A)\nif h > attack:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4744": {"id": 4744, "code": "s = \"internationalization\"\ns=list(s)\nresult=str(s[0])+str(len(s)-2)+str(s[len(s)-1])\nprint(result)", "coverage": [">", ">", ">", ">"]}, "2092": {"id": 2092, "code": "n = 10;a = 3;b = 5\nprint(*[min(a,b),max(a+b-n,0)],sep=' ')", "coverage": [">", ">"]}, "11320": {"id": 11320, "code": "li=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nday = \"SAT\"\nfor i in range(7):\n    if(li[i]==day):\n        print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "10911": {"id": 10911, "code": "S = \"akasaka\"\nN = len(S)\nflag = True\nif S!=S[::-1]:\n    flag=False\nif S[:int((N-1)/2)]!=S[:int((N-1)/2)][::-1]:\n    flag=False\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">"]}, "11883": {"id": 11883, "code": "a = \"11 30\"\nb = \"12 1\"\nmonth_a = int(a.split(\" \")[0])\nmonth_b = int(b.split(\" \")[0])\nif month_a != month_b:\n\tval = 1\nelse:\n\tval = 0\nprint(val)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7144": {"id": 7144, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nfor i in range(N) :\n    H = H - A[i]\nif H > 0 :\n    print(\"No\")\nelse :\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "33": {"id": 33, "code": "s = \"codefestival\"\nk = 100\nl=list(s)\nfor i in range(len(s)):\n  f=(-ord(s[i])+ord(\"z\")+1)%26\n  if f<=k:\n    l[i]=\"a\"\n    k-=f\nk=k%26\na=ord(l[-1])+k \nif a> ord(\"z\"):a-=26\nl[-1]=chr(a)\nprint(\"\".join(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10416": {"id": 10416, "code": "a = 8;b = 12;k = 2\nans = []\nfor i in range(1, min(a, b)+1):\n    if a % i == b % i == 0:\n        ans.append(i)\nans.sort(reverse=True)\nprint(ans[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18487": {"id": 18487, "code": "H = 2\nW = 100\nN = 200\na = max(H,W)\nif N%a == 0:\n    print(N//a)\nelse:\n    print(N//a+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12825": {"id": 12825, "code": "N = 6\nprint('YES' if N == 3 or N == 5 or N == 7 else 'NO')", "coverage": [">", ">"]}, "2205": {"id": 2205, "code": "n = 100;a = 100;b = 100\nboth_max = min(a, b)\nif a+b <= n:\n    both_min = 0\nelse:\n    both_min = a+b-n\nprint(both_max, both_min)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "19251": {"id": 19251, "code": "n = 12\nif n%2!=0:\n    print(0)\nelse:\n    cnt = 0\n    n = n//2\n    while n>0:\n        cnt = cnt + (n//5)\n        n = n//5\n    print(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "5653": {"id": 5653, "code": "N = 5\nprint(N // 2 + N % 2)", "coverage": [">", ">"]}, "10399": {"id": 10399, "code": "A = \"100\";B = \"50\";K = \"4\"\nA = int(A)\nB = int(B)\nK = int(K)\nmin = A if A <= B else B\nlist = []\nfor i in range(1, min+1):\n    if A % i == 0 and B % i == 0:\n        list.append(i)\nprint(list[len(list)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7732": {"id": 7732, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nfinal=min(a)\nans=0\nflag=-1\ncheck=0\nfor v in a:\n    if flag==-1 and v!=final:\n        flag=2\n        ans+=1\n        check=0\n        if flag==k:\n            flag=-1\n    elif flag>=0:\n        if check==0 and v==final:\n            flag-=1\n            check=1\n        flag+=1\n        if flag==k:\n            flag=-1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8190": {"id": 8190, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((N+K-3)//(K-1))", "coverage": [">", ">", ">"]}, "12407": {"id": 12407, "code": "S = \"level\"\nN=len(S)\nif S==S[::-1] and S[0:(N-1)//2]==S[(N-1)//2-1::-1] and S[(N+3)//2-1:]==S[-1:(N+3)//2-2:-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3194": {"id": 3194, "code": "s = \"1111111111\"\nd = 1001001\nfor i in range(len(s) - 1):\n    x = int(s[i : i + 3])\n    tmp = abs(x - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7685": {"id": 7685, "code": "H = 10;N = 3\nList = [4, 5, 6]\nList.sort(reverse=True)\nk = 0\nres = \"No\"\nfor i in range(N):\n  k += List[i]\n  if k >= H:\n    res = \"Yes\"\n    break\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10206": {"id": 10206, "code": "from itertools import accumulate\nN = 6\nS = \")))())\"\nSS = [1 if S[i]=='(' else -1 for i in range(N)]\nSSS = list(accumulate(SS))\nm = max(0,-min(SSS))\nM = SSS[-1]\nprint('('*m+S+')'*(M+m))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10208": {"id": 10208, "code": "n = 3\ns = \"())\"\nstack_len = 0\nans = \"\"\nstreak = 0\nfor i in s:\n    if i == \")\":\n        if stack_len:\n            stack_len -= 1\n            ans += \")\"\n        else:\n            ans = \"(\" + ans + \")\"\n    else:\n        ans += \"(\"\n        stack_len += 1\nans += \")\" * stack_len\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">"]}, "1241": {"id": 1241, "code": "for i in range(int(\"112\"),1000):\n  if i%111==0:\n    print(i)\n    break", "coverage": [">", ">", ">", ">"]}, "17743": {"id": 17743, "code": "s = \"0112\"\nn1 = int(s[0:2])\nn2 = int(s[2:4])\nif 1 <= n1 <= 12:\n  if 1 <= n2 <= 12:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelif 1 <= n2 <= 12:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9352": {"id": 9352, "code": "s = ['2017', '01', '07']\ns[0]=\"2018\"\nprint(\"/\".join(s))", "coverage": [">", ">", ">"]}, "18274": {"id": 18274, "code": "h = 2\nw = 100\nn = 200\np = max(h, w)\nprint((n+p-1)//p)", "coverage": [">", ">", ">", ">", ">"]}, "12576": {"id": 12576, "code": "a = 8;b = 12;k = 2\nt =[]\nfor i in range(1,max(a,b)+1):\n  if a % i == b % i == 0:\n    t.append(i)\nprint(t[-k])", "coverage": [">", ">", ">", ">", ">", ">"]}, "17896": {"id": 17896, "code": "s = \"0112\"\ns1, s2 = s[:2],s[2:]\nif s1>'12' and s2>'12':\n    print('NA')\nelif s1<='12' and s2<='12':\n    if s1 == '00' and s2!='00':\n        print('YYMM')\n    elif s2 == '00' and s1!='00':\n        print('MMYY')\n    elif s1 =='00' and s2 =='00':\n        print('NA')\n    else :\n        print('AMBIGUOUS')\nelif s1<='12' and s2>'12':\n    print('NA' if s1 == '00' else 'MMYY')   \nelif s2<='12' and s1>'12':\n    print('NA' if s2 == '00' else 'YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", ">", ">", "!", ">", "!", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!"]}, "14059": {"id": 14059, "code": "N = 6\na_list = [1, 2, 3, 2, 2, 1]\ncount = 1\nup_flag = None\nprev_a = a_list[0]\nfor a in a_list[1:]:\n  if up_flag is None:\n    if prev_a == a:\n      continue\n    up_flag = a > prev_a\n  if up_flag and a >= prev_a:\n    prev_a = a\n    continue\n  elif not up_flag and a <= prev_a:\n    prev_a = a\n    continue\n  else:\n    up_flag = None\n    count += 1\n    prev_a = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9929": {"id": 9929, "code": "from collections import deque\nn = 8\ns=deque(\"))))((((\")\nleft=0\nright=0\nfor i in range(n):\n  if s[i]==\"(\":\n    left+=1\n  else:\n    if left>0:\n      left-=1\n    else:\n      right+=1\nfor _ in range(left):\n    s.append(\")\")\nfor _ in range(right):\n    s.appendleft(\"(\")\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7489": {"id": 7489, "code": "h = 10;n = 3\na = [4, 5, 6]\nhoge = sum(a)\nh -= hoge\nif h <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18094": {"id": 18094, "code": "S = \"1700\"\nif 0<int(S[0]+S[1])<13: \n  if 0<int(S[2]+S[3])<13: \n    print('AMBIGUOUS')\n  else: \n    print('MMYY')\nelse: \n  if 0<int(S[2]+S[3])<13: \n    print('YYMM')\n  else: \n    print('NA')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "15537": {"id": 15537, "code": "x = 13;y = 3;z = 1\nans = 0\nfor i in range(x):\n    if y*i+z*(i+1) <= x:\n        ans=max(ans, i)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15869": {"id": 15869, "code": "x = 13;y = 3;z = 1\ntmp=x//(y+z)\nif tmp*(y+z)+z>x:\n    tmp-=1\nprint(tmp)", "coverage": [">", ">", ">", "!", ">"]}, "9746": {"id": 9746, "code": "n = 6\ns = \")))())\"\ndata = [0, 0]  \ntemp = -1\nfor i in range(n):\n    temp += 1\n    tar = s[temp]\n    if (tar == '('):\n        data[0] += 1\n    else:\n        if (data[0] > data[1]):\n            data[0] -= 1\n        else:\n            s = '(' + s\n            temp += 1\nadd = ')' * data[0]\ns = s + add\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14984": {"id": 14984, "code": "N = 1;P = 1\nA = [50]\nn0=0\nn1=0\nfor i in range(N):\n    if A[i]%2==0:\n        n0 += 1\nn1 = N-n0\nif P==0:\n    if n1==0:\n        print(2**n0)\n    else:\n        print(2**(n1-1)*2**n0)\nelse:\n    if n1==0:\n        print(0)\n    else:\n        print(2**(n1-1)*2**n0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "17692": {"id": 17692, "code": "s = \"0112\"\nnum = ['01','02','03','04','05','06','07','08','09','10','11','12']\nif s[:2] in num and s[2:] in num:\n    print(\"AMBIGUOUS\")\nelif s[:2] in num:\n    print(\"MMYY\")\nelif s[2:] in num:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17251": {"id": 17251, "code": "a = \"D\";b = \"H\"\nif a==b:print('H')\nelse:print('D')", "coverage": [">", ">", ">"]}, "2030": {"id": 2030, "code": "n = 10;a = 3;b = 5\nprint(\"{} {}\".format(min(n, min(a, b)), max(0, (a+b) - n)))", "coverage": [">", ">"]}, "1169": {"id": 1169, "code": "N = 750\nfor n in range(N, 1000):\n    if len(set(str(n))) == 1:\n        print(n)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "9205": {"id": 9205, "code": "line = \"2017/01/31\"\nprint(\"2018\" + line[4:10])", "coverage": [">", ">"]}, "3683": {"id": 3683, "code": "a = 20;b = 30\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11310": {"id": 11310, "code": "import sys\ninput = sys.stdin.readline\ns = \"SAT\"\nif s == \"MON\": print(6)\nelif s == \"SAT\": print(1)\nelif s == \"FRI\": print(2)\nelif s == \"THU\": print(3)\nelif s == \"WED\": print(4)\nelif s == \"TUE\": print(5)\nelse:\n    print(7)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8690": {"id": 8690, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1964": {"id": 1964, "code": "n = 10;a = 7;b = 5\nans = [min(a,b), max(0,(a+b)-n)]\nprint(*ans, sep=' ')", "coverage": [">", ">", ">"]}, "8089": {"id": 8089, "code": "N = 8;K = 3\nL = [7, 3, 1, 8, 4, 6, 2, 5]\nres = (N-1)//(K-1)\nif (N-1) % (K-1) != 0:\n  print(res+1)\nelse:\n  print(res)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "2432": {"id": 2432, "code": "even = 13;odd = 3\nprint(int(even * (even-1)/2 + odd * (odd-1)/2))", "coverage": [">", ">"]}, "16355": {"id": 16355, "code": "from bisect import bisect_right\nn = 2\na = [0, 100]\nx=a[-1]\nc=bisect_right(a,x//2)\nif x%2==0:\n    if x//2 in a:\n        print(\"{} {}\".format(x,x//2))\n    else:\n        if a[c]-x//2>=x//2-a[c-1]:\n            print(\"{} {}\".format(x,a[c-1]))\n        else:\n            print(\"{} {}\".format(x,a[c]))\nelse:\n    if x//2 in a :\n        print(\"{} {}\".format(x,x//2))\n    elif x//2+1 in a:\n        print(\"{} {}\".format(x,x//2+1))\n    else:\n        if a[c]-(x//2+1)>=x//2-a[c-1]:\n            print(\"{} {}\".format(x,a[c-1]))\n        else:\n            print(\"{} {}\".format(x,a[c]))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "2473": {"id": 2473, "code": "n1 = 4;n2 = 9;n3 = 0;n4 = 8\ns=set()\ns.add(n1)\ns.add(n2)\ns.add(n3)\ns.add(n4)\nif s=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3515": {"id": 3515, "code": "A = 20;B = 15\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "16780": {"id": 16780, "code": "a = \"D\";b = \"H\"\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "10091": {"id": 10091, "code": "n = 3\ns = \"())\"\nst=0\nm=0\nlv = 0\nfor x in s:\n    if x == '(':\n        lv+=1\n    else:\n        lv-=1\n    m=min(m,lv)\ngl=lv-m\nst-=m\nprint('('*st+s+')'*gl)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10826": {"id": 10826, "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nf1 = s == list(reversed(s))\nf2 = s[:(len(s)-1)//2] == list(reversed(s[:(len(s)-1)//2]))\nf3 = s[(len(s)+2)//2:] == list(reversed(s[(len(s)+2)//2:]))\nprint(\"Yes\" if all([f1, f2, f3]) else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "13154": {"id": 13154, "code": "x = 6\ndata = [7, 5, 3]\nif x in data:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "19387": {"id": 19387, "code": "n = 10\nc=n\nd=0\nfor i in range(n, 99999999999999, n):\n    if i%2==0 and i%c==0:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17942": {"id": 17942, "code": "s = \"1700\"\nmae=int(s[:2])\nushiro=int(s[2:])\nif 1<=mae<=12:\n    if 1<=ushiro<=12:\n        ans=\"AMBIGUOUS\"\n    else:\n        ans=\"MMYY\"\nelif 1<=ushiro<=12:\n    ans=\"YYMM\"\nelse:\n    ans=\"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "16734": {"id": 16734, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    print(b)\nelif b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "8261": {"id": 8261, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nimport bisect\nn = 3;k = 3\na = [1, 2, 3]\nix=a.index(1)\ni=math.ceil((n-k)/(k-1))+1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2858": {"id": 2858, "code": "S = \"35753\"\nnum = \"\"\nl = len(S)\ndis = float(\"inf\") \nfor i in range(l-2):\n    num = S[i:i+3]\n    if abs(753-int(num)) < dis:\n        dis = abs(753-int(num))\nprint(dis)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1976": {"id": 1976, "code": "n = 10;a = 3;b = 5\nprint(min(a,b))\nif a+b<n:print(0)\nelse:print(a+b-n)", "coverage": [">", ">", ">", "!"]}, "8416": {"id": 8416, "code": "N = 1\nA_list = []\nA_list.append(list(map(int, \"2\".split())))\nA_list.append(list(map(int, \"3\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14226": {"id": 14226, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nstate = -1\nfor i in range(1, N):\n    if state == -1:\n        if A[i] < A[i-1]:\n            state = 0\n        elif A[i] > A[i-1]:\n            state = 1\n    elif (state == 0 and A[i] > A[i-1]) or (state == 1 and A[i] < A[i-1]):\n        ans += 1\n        state = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4582": {"id": 4582, "code": "string = \"internationalization\"\nprint(string[0] + str(len(string) - 2) + string[-1])", "coverage": [">", ">"]}, "7182": {"id": 7182, "code": "h = 20;a = 3\nwa = [4, 5, 6]\nif sum(wa)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "1598": {"id": 1598, "code": "n = 10;a = 3;b = 5\nprint(\"{0} {1}\".format(min(a,b),max(a + b - n,0)))", "coverage": [">", ">"]}, "5690": {"id": 5690, "code": "import math\nN = 2\nprint (math.ceil(N/2))", "coverage": [">", ">", ">"]}, "17529": {"id": 17529, "code": "s = 1905\ns1=s//100\ns2=s-s1*100\nif 0<s1<=12 and 0<s2<=12:\n    print(\"AMBIGUOUS\")\nelif (s1>12 or s1==0) and 0<s2<=12:\n    print(\"YYMM\")\nelif 0<s1<=12 and (s2>12 or s2==0):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "5109": {"id": 5109, "code": "S = \"xyz\"\na=S[0]\nb=S[-1]\nc=len(S)-2\nt=a+'%s' %c +b\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17592": {"id": 17592, "code": "S = \"1905\"\nl, r =  map(int, [S[:2], S[2:]])\nif 1 <= l <= 12 and 1 <= r <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= l <= 12 and (r == 0 or r > 12):\n  print(\"MMYY\")\nelif (l == 0 or l > 12) and 1 <= r <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "2458": {"id": 2458, "code": "n = {'9', '4', '1', '7'}\ns=set([i for i in \"1974\"])\nprint(\"NO\" if n^s else \"YES\")", "coverage": [">", ">", ">"]}, "14295": {"id": 14295, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\n    sys.exit()\ninc = 0  \nans = 1\nfor i in range(N - 1):\n    if A[i] < A[i + 1]:\n        if inc == -1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = 1\n    elif A[i] > A[i + 1]:\n        if inc == 1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = -1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17097": {"id": 17097, "code": "li = ['H', 'H']\nif li==[\"H\",\"H\"] or li==[\"D\",\"D\"]:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "11420": {"id": 11420, "code": "s = \"SAT\"\nw=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n    if w[i]==s:\n        print(7-i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "12597": {"id": 12597, "code": "a = 1;b = 1;k = 1\nmin = a\nif b < min:\n  min = b\nans_lists = []\nfor i in range(1, min+1, 1):\n  if a%i == 0 and b%i == 0:\n    ans_lists.append(i)\nans_lists.reverse()\nans = ans_lists[k-1]\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "2111": {"id": 2111, "code": "n = 10;a = 7;b = 5\nans1=min(a,b)\nans2=max(0,a+b-n)\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">"]}, "10505": {"id": 10505, "code": "A = 100;B = 50;K = 4\nli = [x for x in range(1,A+1) if A%x == 0 and B%x == 0]\nprint(li[-K])", "coverage": [">", ">", ">"]}, "18632": {"id": 18632, "code": "h = 3\nw = 7\nn = 10\np=max(h,w)\nprint(n//p+(n%p!=0))", "coverage": [">", ">", ">", ">", ">"]}, "13272": {"id": 13272, "code": "a = \"haiku,atcoder,tasks\"\nb = a.replace(\",\", \" \")\nprint(b)", "coverage": [">", ">", ">"]}, "9146": {"id": 9146, "code": "s = \"2017/01/07\"\ny, m, d = s.split(\"/\")\nprint(\"2018/\" + m + \"/\" + d)", "coverage": [">", ">", ">"]}, "18105": {"id": 18105, "code": "s = \"0112\"\nif s[0:2] in \"01 02 03 04 05 06 07 08 09 10 11 12\":\n  l = \"m\"\nelse:\n  l = \"y\"\nif s[2:4] in \"01 02 03 04 05 06 07 08 09 10 11 12\":\n  r = \"m\"\nelse:\n  r = \"y\"\nif l+r == \"mm\":\n  print(\"AMBIGUOUS\")\nelif l+r == \"my\":\n  print(\"MMYY\")\nelif l+r == \"ym\":\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17081": {"id": 17081, "code": "s = \"D D\"\nif s==\"D D\" or s == \"H H\":print('H')\nelse:print('D')", "coverage": [">", ">", "!"]}, "4675": {"id": 4675, "code": "s = \"internationalization\"\nprint(f'{s[0]}{len(s[1:-1])}{s[-1]}')", "coverage": [">", ">"]}, "1142": {"id": 1142, "code": "n = ['7', '5', '0']\ni = n[0]\nj = n[1]\nk = n[2]\nif int(j + k) <= int(i+i):\n    print(i*3)\nelse:\n    print(str(int(i)+1)*3)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "5436": {"id": 5436, "code": "n = 100\na = int((n+2-1)/2)\nprint(a)", "coverage": [">", ">", ">"]}, "9454": {"id": 9454, "code": "S = \"2017/01/07\"\nprint(S.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "15539": {"id": 15539, "code": "A = 13;B = 3;C = 1\nans = 0\nif B + C * 2 > A:\n    print(ans)\n    exit()\nA -= B + C * 2\nans += 1\nwhile A // (B+C) >= 1:\n    A -= B + C \n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "5457": {"id": 5457, "code": "N = 100\nif N/2 == N//2:\n    print(N//2)\nelse:\n    print(N//2+1)", "coverage": [">", ">", ">", "!", "!"]}, "10363": {"id": 10363, "code": "A = 8;B = 12;K = 2\ncd = []\nfor i in range(min([A,B])):\n  if A % (i + 1) == 0 and B % (i + 1) == 0:\n    cd.append(i+1)\nprint(cd[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "18381": {"id": 18381, "code": "H = 14\nW = 12\nN = 112\nans = 0\nm = max([H, W])\nwhile N > 0:\n    N -= m\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5686": {"id": 5686, "code": "from math import ceil\nN = 5\nprint(ceil(N/2))", "coverage": [">", ">", ">"]}, "7192": {"id": 7192, "code": "a = 211;b = 5\nc = [31, 41, 59, 26, 53]\nd = sum(c)\nif d >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17700": {"id": 17700, "code": "s = 1905\nl, r = s / 100, s % 100\nif 1 <= l <= 12:\n    if 1 <= r <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelif 1 <= r <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!"]}, "10389": {"id": 10389, "code": "a = 1;b = 1;k = 1\noutput = []\nmins = min(a,b)\nfor divisor in range(1, mins+1):\n    if a % divisor == 0 and b % divisor == 0:\n        output.append(divisor)\nprint(output[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8823": {"id": 8823, "code": "n = 1\na = [2]\nb = [3]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "11663": {"id": 11663, "code": "a = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\na = a * 2\nc = 0\nz = \"SUN\"\nfor i in range(0,7):\n\tif z == a[i]:\n\t\tfor j in range(i + 1, 14):\n\t\t\tif a[j] == \"SUN\":\n\t\t\t\tprint(j - i )", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15451": {"id": 15451, "code": "x = 12;y = 3;z = 1\nrm = x % (y+z)\na = -1 if rm < z else 0\nprint(x // (y + z) + a)", "coverage": [">", ">", ">", ">"]}, "19158": {"id": 19158, "code": "n = 12\nif n%2==1:\n    print(0)\nelse:\n    cnt=1\n    ans=0\n    while 2*5**cnt<=n:\n        ans+=n//(2*5**cnt)\n        cnt+=1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10999": {"id": 10999, "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nn = len(s)\nflag = 0\nfor i in range(n//2):\n    if s[i] != s[n-i-1]:\n        flag = 1\nif flag == 0:\n    s2 = s[:(n-1)//2]\n    n2 = len(s2)\n    for i in range(n2//2):\n        if s2[i] != s2[n2-i-1]:\n            flag = 1\nif flag == 0:\n    if flag == 0:\n        s2 = s[(n+3)//2-1:]\n        n2 = len(s2)\n    for i in range(n2//2):\n        if s2[i] != s2[n2-i-1]:\n            flag = 1\nif flag == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12165": {"id": 12165, "code": "M = 11;D = 16\nm = 11;d = 17\nif m-M == 1 or m-M == -11:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17088": {"id": 17088, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    print(b)\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "622": {"id": 622, "code": "S = \"a\"\nK = 25\nlenS=len(S)\nfor i in range(lenS-1):\n    ordS_i=ord(S[i])\n    if (ord(\"a\")-ordS_i)%26<=K:\n        K-=(ord(\"a\")-ordS_i)%26\n        S=S[:i]+\"a\"+S[i+1:]\nordS_i=ord(S[lenS-1])\nmoda=(ordS_i-ord(\"a\")+K)%26\nS=S[:lenS-1]+chr(ord(\"a\")+moda)\nprint(S)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "17752": {"id": 17752, "code": "S = \"0112\"\nx=int(S[:2])\ny=int(S[2:])\nif 1<=x<=12 and 1<=y<=12:\n    print(\"AMBIGUOUS\")\nelif 1<=x<=12:\n    print(\"MMYY\")\nelif 1<=y<=12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "758": {"id": 758, "code": "K = 2\nres=1\nx=0\nfor i in range(K):\n    x+=7*res\n    x%=K\n    if x%K==0:\n        print(i+1)\n        break\n    res*=10\n    res%=K\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "5610": {"id": 5610, "code": "n = 100\nprint(int(n/2)+int(n%2))", "coverage": [">", ">"]}, "4757": {"id": 4757, "code": "s = \"smiles\"\nn = len(s)\na = n-2\nprint(s[0] + str(n-2) + s[n-1])", "coverage": [">", ">", ">", ">"]}, "9226": {"id": 9226, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3] = '8'\nprint(*s,sep=\"\")", "coverage": [">", ">", ">"]}, "2821": {"id": 2821, "code": "s = \"1234567876\"\nm = 100000\nfor i in range(len(s)-2):\n    a=(s[i:i+3])\n    m=min(abs(753-int(a)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16326": {"id": 16326, "code": "import bisect\nN = 5\na = {2, 4, 6, 9, 11}\nA = sorted(list(a))\nM = max(A)\nnum = M//2\nindex = bisect.bisect_right(A,num)\nif index > 0 and abs(num - A[index]) > abs(num - A[index-1]):\n    index = index-1\nif M != A[index]:\n    print(M,A[index])\nelse:\n    print(M,A[index-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "15302": {"id": 15302, "code": "X = 64145;Y = 123;Z = 456\nprint(int((X-Z)/(Y+Z)))", "coverage": [">", ">"]}, "3603": {"id": 3603, "code": "A = 20;B = 15\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "11846": {"id": 11846, "code": "A = 11;B = 16\nC = 11;D = 17\nif D == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "993": {"id": 993, "code": "N = 112\nx = 111\nwhile x < N:\n    x += 111\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "12007": {"id": 12007, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nans = 1\nif m1 == m2:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "1158": {"id": 1158, "code": "n = 111\nfor i in range(111, 1000, 111):\n    if i >= n:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "7080": {"id": 7080, "code": "H = 20;N = 3\na = [4, 5, 6]\nif H > sum(a):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "12677": {"id": 12677, "code": "if \"6\" in ['7', '5', '3']:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", "!", "!", ">"]}, "2966": {"id": 2966, "code": "S = \"1111111111\"\nans=754\nfor i in range(len(S)-2):\n  n=abs(753-int(''.join(list(S[i:i+3]))))\n  ans=min(ans,n)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11118": {"id": 11118, "code": "s = \"akasaka\"\nc = int((len(s) - 1)/2)\nans = (list(s) == list(reversed(s)) and list(s[:c]) == list(reversed(s[:c])) and list(s[(c+1):]) == list(reversed(s[(c+1):])))\nprint([\"No\", \"Yes\"][ans])", "coverage": [">", ">", ">", ">"]}, "2970": {"id": 2970, "code": "s = \"1234567876\"\nans = 999\nfor i in range(len(s) - 2):\n    x = int(s[i:i + 3])\n    diff = abs(753 - x)\n    ans = min(diff, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9427": {"id": 9427, "code": "S = \"2017/01/31\"\nS = \"2018\" + S[4:]\nprint(S)", "coverage": [">", ">", ">"]}, "295": {"id": 295, "code": "s = \"codefestival\"\nK = 100\nafter = []\nrem = K\nfor i in range(len(s)-1):\n    if s[i] == 'a':\n        after.append('a')\n        continue\n    c = ord('z') - ord(s[i]) + 1\n    if c <= rem:\n        rem -= c\n        after.append('a')\n    else:\n        after.append(s[i])\nlast = ord(s[-1])\nif rem > 0:\n    last += rem%26\n    if last > ord('z'):\n        last -= 26\nafter.append(chr(last))\nprint(''.join(after))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5007": {"id": 5007, "code": "s = \"xyz\"\nlong = len(s) - 2\nprint(s[0] + str(long) + s[len(s)-1])", "coverage": [">", ">", ">"]}, "7411": {"id": 7411, "code": "h = 10;n = 3\na = [4, 5, 6]\nif sum(a) >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7392": {"id": 7392, "code": "h = 20;n = 3\nprint(\"Yes\" if sum(map(int, \"4 5 6\".split())) >= h else \"No\")", "coverage": [">", ">"]}, "2334": {"id": 2334, "code": "N = 2;M = 1\nprint(int(N*max(N-1, 0)/2) + int(M*max(M-1, 0)/2))", "coverage": [">", ">"]}, "13071": {"id": 13071, "code": "x = 6\nans = 'NO'\nif x in [3, 5, 7]:\n    ans = 'YES'\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "1642": {"id": 1642, "code": "N = 100;A = 100;B = 100\nprint(min(A, B), max(0, (A + B) - N))", "coverage": [">", ">"]}, "10188": {"id": 10188, "code": "n = 6\ns = \")))())\"\nl, r, c = 0, 0, 0\nfor a in s:\n    if a == '(':\n        c += 1\n    elif c:\n        c -= 1\n    else:\n        l += 1\nr = c\nprint(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "5393": {"id": 5393, "code": "N = 2\nprint(int((N + 1) / 2))", "coverage": [">", ">"]}, "14057": {"id": 14057, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\naset=set(a)\nans=1\nif len(aset)>1:\n    num1=a[0]\n    num2=a[1]\n    num3=2 \n    if num1<num2:\n        num3=1\n    if num1>num2:\n        num3=0\n    for i in range(len(a)-2):\n        num=a[2+i]\n        if num3==2 and num2>num:\n            num3=0\n        if num3==2 and num2<num:\n            num3=1\n        if num3==0 and num2<num:\n            ans+=1\n            num3=2\n        if num3==1 and num2>num:\n            ans+=1\n            num3=2\n        num2=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "1354": {"id": 1354, "code": "if __name__ == '__main__':\n    n = 111\n    list =[111,222,333,444,555,666,777,888,999]\n    for i in list:\n        if i>= n:\n            print(i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9504": {"id": 9504, "code": "S = \"2017/01/07\"\nS = S[:3] + '8' + S[4:10]\nprint(S)", "coverage": [">", ">", ">"]}, "4321": {"id": 4321, "code": "h1 = 10;h2 = 0;h3 = 15;h4 = 0;k = 30\nh11 = h1 * 60 + h2\nh22 = h3 * 60 + h4\nprint(h22-h11-k)", "coverage": [">", ">", ">", ">"]}, "558": {"id": 558, "code": "s = \"a\"\nk = 25\nl = [(26 - (ord(c) - ord('a'))) % 26 for c in s]\nfor i in range(len(s) - 1):\n    if k >= l[i]:\n        k -= l[i]\n        s = s[:i] + 'a' + s[i + 1 :]\nk %= 26\ns = s[:-1] + chr(ord('a') + (ord(s[-1]) - ord('a') + k) % 26)\nprint(s)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "504": {"id": 504, "code": "s = ['a']\nK = 25\nfor i in range(len(s)):\n    if s[i] == 'a':\n        continue\n    n = ord('z') - ord(s[i]) + 1\n    if n <= K:\n        K -= n\n        s[i] = 'a'\nK %= 26\ns[-1] = chr((ord(s[-1]) - ord('a') + K) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "18706": {"id": 18706, "code": "H = 3\nW = 7\nN = 10\na = max(H, W)\nprint((N+a-1)//a)", "coverage": [">", ">", ">", ">", ">"]}, "7953": {"id": 7953, "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint((N-2)//(K-1)+1)", "coverage": [">", ">", ">"]}, "14705": {"id": 14705, "code": "n = 45;p = 1\na = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]\nif a.count(1)==0:\n  print((1-p)*2**n)\nelse:\n  print(2**(n-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "8026": {"id": 8026, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nif (n + k - 1) // k == 1:\n    print(1)\nelse:\n    res = ((n - k) + (k - 2)) // (k - 1) + 1\n    print(res)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "15301": {"id": 15301, "code": "X = 64146;Y = 123;Z = 456\nprint(int((X-Z)/(Y+Z)))", "coverage": [">", ">"]}, "18970": {"id": 18970, "code": "n = 5\nif n%2:\n    print(0)\nelse:\n    ans = 0\n    for i in range(1,100):\n        ans += (n//(5**i*2))\n        if n < 5**i:\n            break\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8772": {"id": 8772, "code": "N = 5\narray1 = [3, 2, 2, 4, 1]\narray2 = [1, 2, 2, 2, 1]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3444": {"id": 3444, "code": "a = 20;b = 30\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14593": {"id": 14593, "code": "n = 45;p = 1\nA = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nif all(a % 2 == 0 for a in A):\n    if p:\n        print(0)\n    else:\n        print(pow(2, n))\nelse:\n    print(pow(2, n-1))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "13419": {"id": 13419, "code": "s = \"haiku,atcoder,tasks\"\ns = s.replace(\",\", \" \")\nprint(s)", "coverage": [">", ">", ">"]}, "9448": {"id": 9448, "code": "date = \"2017/01/07\"\nnew_date = \"2018/01/\" + date[-2:]\nprint(new_date)", "coverage": [">", ">", ">"]}, "13820": {"id": 13820, "code": "n = 9\nal = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n == 1:\n    print(1)\n    exit()\nif al[1] > al[0]:\n    now = 'U'\nelif al[1] < al[0]:\n    now = 'D'\nelse:\n    now = 'E'\ncnt = 1\nfor i in range(2, n):\n    if now == 'U':\n        if al[i] > al[i-1] or al[i] == 'E':\n            now = 'U'\n        elif al[i] < al[i-1]:\n            cnt += 1\n            i += 1\n            now = 'E'\n    elif now == 'D':\n        if al[i] < al[i-1] or al[i] == 'E':\n            now = 'D'\n        elif al[i] > al[i-1]:\n            cnt += 1\n            now = 'E'\n    elif now == 'E':\n        if al[i] == al[i - 1]:\n            now = 'E'\n        elif al[i] > al[i - 1]:\n            now = 'U'\n        elif al[i] < al[i - 1]:\n            now = 'D'\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">"]}, "1864": {"id": 1864, "code": "n = 10;x = 3;y = 5\nr = x+y-n\nif r < 0:\n  r = 0\nprint(min(x,y),r)", "coverage": [">", ">", ">", ">", ">"]}, "18227": {"id": 18227, "code": "ans = 100\nH = 3\nW = 7\nN = 10\nfor i in range(H+1):\n    for j in range(W+1):\n        if i * W + j * H - i * j >= N:\n            ans = min(ans, i+j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2488": {"id": 2488, "code": "n1 = {1, 2, 9}\nn2 = set((1,7,9,4))\nans='YES' if n1==n2 else 'NO'\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3110": {"id": 3110, "code": "s = \"35753\"\nd = 999\nfor i in range(len(s) - 2):\n    n = int(s[i: i + 3])\n    d = min(d, abs(n - 753))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8632": {"id": 8632, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nx = 0\nC = []\nD = []\nif N == 1:\n    print(A[0] + B[0])\n    exit()\nfor i in range(N):\n    C = A[0:i]\n    D = B[i - 1:N]\n    x = sum(C) + sum(D)\n    ans = max(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "11717": {"id": 11717, "code": "S = \"SUN\"\nday = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(len(day)):\n  if S == day[i]:\n    print(7-i)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "15484": {"id": 15484, "code": "X = 12;Y = 3;Z = 1\nanswer = (X-Z) // (Y+Z)\nprint(answer)", "coverage": [">", ">", ">"]}, "19239": {"id": 19239, "code": "n = 12\nc=0\nm=n/2\nwhile m>=5:\n  m/=5\n  c+=1\nsm=0\nfor i in range(c):\n  sm+=(n//2)//(5**(i+1))\nprint(sm if n%2==0 else 0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8117": {"id": 8117, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\ni = a.index(1)\ns = n\nfor j in range(i-k+1, i+k):\n    if j < 0:\n        continue\n    elif j >= n:\n        continue\n    else:\n        l = j\n        u = (n-1-j)\n        t = (l+k-2) // (k-1) + (u+k-2) // (k-1)\n        s = min(s, t)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "2024": {"id": 2024, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 10;a = 3;b = 5\nprint(min(a,b), max(a+b-n, 0) )", "coverage": [">", ">", ">", ">", ">"]}, "19233": {"id": 19233, "code": "N = 5\nif N<2 or N%2:\n    print(0)\nelse:\n    import math\n    ans=0\n    n=N//2\n    k=int(math.log(n,5))\n    for i in range(1,k+1):\n        ans+=n//(5**i)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "3640": {"id": 3640, "code": "A = 20;B = 30\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "337": {"id": 337, "code": "s = \"codefestival\"\nk = 100\nn = len(s)\nfor i in range(n):\n  num = ord(s[i])\n  if num == 97 or 123-num > k:\n    continue\n  k -= (123-num)\n  s = s[:i] + 'a' + s[i+1:]\nif k > 0:\n  t = k%26\n  s = s[:n-1] + chr(ord(s[n-1])+t)\nprint(s)  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16584": {"id": 16584, "code": "s = \"H H\"\nt=s.split(' ')\nif t[0]==t[1]:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", ">", "!", "!"]}, "6949": {"id": 6949, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif sum(A) < H:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "7942": {"id": 7942, "code": "n = 8;k = 3\nlst = [7, 3, 1, 8, 4, 6, 2, 5]\nimport math\np=len(lst)\np-=k\nans=1\nans+=math.ceil(p/(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6394": {"id": 6394, "code": "import bisect\nn = 2\nalist = [1, 5]\nblist = [2, 4]\nclist = [3, 6]\nans = 0\nfor b in blist:\n  ai = bisect.bisect_left(alist, b)\n  ci = bisect.bisect_right(clist, b)\n  if ai == 0 or ci == len(clist):\n    continue\n  else:\n    ans += ai * (len(clist) - ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1947": {"id": 1947, "code": "n = 100;a = 100;b = 100\nmax=min(a,b)\nif n>a+b:\n  min=0\nelse:\n  min=a+b-n\nprint(int(max),int(min))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "12639": {"id": 12639, "code": "s = 6\nprint(\"YES\" if s == 3 or s == 5 or s == 7 else \"NO\")", "coverage": [">", ">"]}, "6559": {"id": 6559, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\ncnt = 0\nfor b in Bs:\n    ind_c = bisect_left(Cs,b+1)\n    ind_a = bisect_right(As,b-1)\n    if ind_c == N:continue\n    cnt += (N - ind_c) * (ind_a)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1358": {"id": 1358, "code": "n = \"112\"\nprint(n[0]*3) if int(n) <= int(n[0]*3) else print(str(int(n[0])+1)*3)", "coverage": [">", ">"]}, "15204": {"id": 15204, "code": "X = 100000;Y = 1;Z = 1\nans=X//(Y+Z)\nif X<ans*(Y+Z)+Z:\n  print(ans-1)\nelse:  \n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "2528": {"id": 2528, "code": "n = \"1 2 9 1\"\nif \"1\" in n and \"9\" in n and \"7\" in n and \"4\" in n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "11175": {"id": 11175, "code": "s = \"akasaka\"\nn = len(s)\nif s != s[::-1]:\n    print(\"No\")\nelse:\n    t = s[:int((n - 1) / 2)]\n    u = s[int((n + 1) / 2):]\n    if t == t[::-1] and u == u[::-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "7649": {"id": 7649, "code": "H = 10;N = 3\ndamege = map(int, \"4 5 6\".split())\ntotal_damege = sum(damege)\nif H - total_damege <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4422": {"id": 4422, "code": "x = \"x\";s = ['y'];y = \"z\"\nprint(x+str(len(s))+y)", "coverage": [">", ">"]}, "2766": {"id": 2766, "code": "s = \"1111111111\"\nz=753\nfor i in range(len(s)-2):\n  x=int(s[i:i+3])\n  y=abs(753-x)\n  z=min(z,y)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3060": {"id": 3060, "code": "S = \"1111111111\"\nN = len(S)\nans = 1000\nfor i in range(N - 2):\n    s = int(S[i:i + 3])\n    ans = min(ans, abs(753 - s))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16458": {"id": 16458, "code": "from math import ceil\nn = 5\ndata = [6, 9, 4, 2, 11]\nn = max(data)\nnn = n/2.0\nr = min((d for d in data if d != n), key=lambda x: abs(nn-x))\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5211": {"id": 5211, "code": "s = \"xyz\"\na = str(len(s)-2)\nprint(s[0] + a + s[-1])", "coverage": [">", ">", ">"]}, "13194": {"id": 13194, "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "18858": {"id": 18858, "code": "n = 6;x = 1\nA = (1, 6, 1, 2, 0, 4)\npre = max(0, A[0] - x)\nans = pre\nfor i in range(n - 1):\n    a = A[i]\n    b = A[i + 1]\n    a -= pre\n    tmp = 0\n    if b > x:\n        tmp += b - x\n        b = x\n    if a + b > x:\n        tmp += a + b - x\n    ans += tmp\n    pre = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7629": {"id": 7629, "code": "h = 10;n = 3\nl = [4, 5, 6]\nif sum(l)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "17464": {"id": 17464, "code": "s = ['0', '1', '1', '2']\na = int(s[0]+s[1])\nb = int(s[2]+s[3])\nif  1<=a<=12 and 1<=b<=12:\n  print('AMBIGUOUS')\nelif (a>12 or a==0) and 1<=b<=12:\n  print('YYMM')\nelif (b>12 or b==0) and 1<=a<=12:\n  print('MMYY')\nelif (a>12 or a==0) and (b>12 or b==0):\n  print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7344": {"id": 7344, "code": "n = 211;m = 5\nli = [31, 41, 59, 26, 53]\nif n>sum(li):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3702": {"id": 3702, "code": "A = 12;B = 4\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "15376": {"id": 15376, "code": "x = 100000;y = 1;z = 1\nans, mod = divmod(x, y+z)\nif mod >= z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "13013": {"id": 13013, "code": "x = 6\na = False\nif x == 7 or x == 5 or x == 3:\n  a = True\nprint('YES' if a else 'NO')", "coverage": [">", ">", ">", "!", ">"]}, "3185": {"id": 3185, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s)-2):\n  t = int(s[i:i+3])\n  a = abs(753 - t)\n  ans = min(ans, a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16588": {"id": 16588, "code": "a = \"D\";b = \"H\"\np = a + b\np1 = list(set(p))\nif len(p1) == 1:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6242": {"id": 6242, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nli = []\ni = 0\nfor bb in b:\n    while i<n and a[i]<bb:\n        i += 1\n    li.append(i)\nli2 = [0]\naccu = 0\nfor i in li:\n    accu += i\n    li2.append(accu)\nans = 0\ni = 0\nfor cc in c:\n    while i<n and b[i]<cc:\n        i += 1\n    ans += li2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14228": {"id": 14228, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nuf,df = True,True\nx = a[0]\nfor ai in a:\n    if x > ai:\n        uf = False\n    if x < ai:\n        df = False\n    if (uf or df) is False:\n        ans += 1\n        uf,df, = True,True\n    x = ai\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17985": {"id": 17985, "code": "S = \"1905\"\nf = int(S[:2])\nb = int(S[2:])\nif (not 0 < f <= 12) and 0 < b <= 12:\n    print('YYMM')\nelif (not 0 < b <= 12) and 0 < f <= 12:\n    print('MMYY')\nelif 0 < f <= 12 and 0 < b <= 12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16302": {"id": 16302, "code": "n = 2\na = [100, 0]\nnmax = max(a)\ntarget = nmax/2\ncur = a[0] if a[0] != nmax else a[1]\ncurdiff = abs(cur-target)\nfor i in range(n):\n    if a[i] == nmax:\n        continue\n    diff = abs(a[i]-target)\n    if diff < curdiff:\n        curdiff = diff\n        cur = a[i]\nprint(nmax, cur)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7807": {"id": 7807, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ncount =0\nfirst = True\nwhile N >=K:\n    if  first ==True:\n        count +=1\n        N-=K\n        first =False\n    else:\n        count+=1\n        N-=(K-1)\nif N!=0:\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5865": {"id": 5865, "code": "import math\nn = 100\nans = math.ceil(n/2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4263": {"id": 4263, "code": "if __name__ == '__main__':\n    a = [10, 0, 15, 0, 30]\n    print(a[2]*60 + a[3] -a[0]*60 - a[1] -a[4] )", "coverage": [">", ">", ">"]}, "7283": {"id": 7283, "code": "h = 10;m = 3\na = [4, 5, 6]\nhissatsu_hp = 0\nfor i in range(0, m):\n    hissatsu_hp += a[i]\nresult = \"\"\nif hissatsu_hp >= h:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11297": {"id": 11297, "code": "a=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\ns = \"SUN\"\nk=-1\nfor i in range(7):\n    if(a[i]==s):k=i\nk=(7-k)\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7973": {"id": 7973, "code": "import math\nn = 4;k = 3\nAs = [2, 3, 1, 4]\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "5556": {"id": 5556, "code": "n = 100\na=0\nif n%2==0:\n  a=int(n/2)\nelse:\n  a=int(n/2)+1\nprint(a)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9963": {"id": 9963, "code": "n = 6\ns = \")))())\"\nnow=0\nsen=0\nfor i in range(n):\n    if s[i]==\"(\":\n        now+=1\n    else:\n        now-=1\n    if now==-1:\n        sen+=1\n        now=0\nprint(\"(\"*sen + s + \")\"*now)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13466": {"id": 13466, "code": "S = \"happy,newyear,enjoy\"\nx = S[:5]+\" \"+S[6:13]+\" \"+S[14:]\nprint(x)", "coverage": [">", ">", ">"]}, "1427": {"id": 1427, "code": "a = 111\nb=a%100\nc=a//100\nif b<=c*11:\n  print(c*111)\nelse:\n  print((c+1)*111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "8337": {"id": 8337, "code": "N = 4\nAU = [1, 1, 1, 1]\nAD = [1, 1, 1, 1]\nAUS = [AU[0]]\nADS = [AD[-1]]\nfor i in range(1, N):\n  AUS.append(AUS[-1] + AU[i])\n  ADS.append(ADS[-1] + AD[-1-i])\nADS.reverse()\nans = 0\nfor i in range(N):\n  temp = AUS[i]+ADS[i]\n  ans = max(ans, temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1401": {"id": 1401, "code": "n = \"112\"\nif n[0] >= n[1] and (n[0] >= n[2] or n[1] >= n[2]):\n    print(n[0]+n[0]+n[0])\nelse:\n    print(str(int(n[0])+1) + str(int(n[0])+1) + str(int(n[0])+1))", "coverage": [">", ">", "!", "!", ">"]}, "10336": {"id": 10336, "code": "from math import gcd\na = 100;b = 50;k = 4\ng = gcd(a, b)\nfor i in range(g, 0, -1):\n    if g % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7817": {"id": 7817, "code": "n = 3;k = 3\na = [1, 2, 3]\nprint((n-1+k-2)//(k-1))", "coverage": [">", ">", ">"]}, "11392": {"id": 11392, "code": "week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SAT\"\nfor i, day in enumerate(week):\n    if day == s:\n        res = 7 - i\n        break\nres = 7 - i\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6171": {"id": 6171, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncur_l = 0\ncur_r = 0\np = 0\nfor cur_mid in B:\n    while cur_l < len(A):\n        if A[cur_l] >= cur_mid:\n            break\n        cur_l += 1\n    while cur_r < len(C):\n        if cur_mid < C[cur_r]:\n            break\n        cur_r += 1\n    p += cur_l * (len(C) - cur_r)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16617": {"id": 16617, "code": "a = \"H\";b = \"H\"\ncount = 0\nif a == \"D\" and b == \"H\":\n  count += 1\nelif a == \"H\" and b == \"D\":\n  count += 1\nif count == 1:\n  print(\"D\")\nelse:\n  print(\"H\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "2437": {"id": 2437, "code": "N = 13;M = 3\na = N*(N-1)\nb = M*(M-1)\nprint(int((a+b)/2))", "coverage": [">", ">", ">", ">"]}, "5490": {"id": 5490, "code": "import math\npages = 100\nprint(math.ceil(pages/2))", "coverage": [">", ">", ">"]}, "16448": {"id": 16448, "code": "N = 2\nA = [100, 0]\nA.sort()\nn = A[-1]\nd = n\nr = -1\nfor a in A[:-1]:\n    if n%2==0:\n        t = abs(a - n//2)\n        if t < d:\n            d = t\n            r = a\n    else:\n        t = min(abs(a - n//2), abs(a - (n//2+1)))\n        if t < d:\n            d = t\n            r = a\nprint(n,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "6163": {"id": 6163, "code": "from bisect import bisect_left, bisect\nn = 3\nla = [1, 1, 1]\nlb = [2, 2, 2]\nlc = [3, 3, 3]\nans=0\nfor i in lb:\n    ans+=bisect_left(la,i)*(len(lc)-bisect(lc,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15764": {"id": 15764, "code": "x = 64146;y = 123;z = 456\nmitumori=x//(y+z)\nif x - mitumori*(y+z)>=z:print(mitumori)\nelse:print(mitumori-1)", "coverage": [">", ">", ">", "!"]}, "27": {"id": 27, "code": "s = \"codefestival\"\nK = 100\nS = [ord(i)-97 for i in s]\nlast = K\nfor i in range(len(S)):\n    if S[i] != 0:\n        if 26 - S[i] <= last:\n            last -= 26 - S[i]\n            S[i] = 0\nif last > 0:\n    S[-1] += last\n    S[-1] %= 26\nS = [chr(i+97) for i in S]\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7591": {"id": 7591, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if H - sum(A) <= 0 else 'No')", "coverage": [">", ">", ">"]}, "8254": {"id": 8254, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\ncnt=0\nfor i in range(10**5+1):\n    N-=K\n    cnt+=1\n    if N<=0:\n        break\n    else:\n        N+=1\nprint(cnt)   ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "266": {"id": 266, "code": "s = ['x', 'y', 'z']\nk = 4\nn = len(s)\nal=[chr(ord('a') + i) for i in range(26)]\nfor i in range(n):\n    now = ord(s[i]) - ord('a')\n    if now != 0:\n        if k >= 26 - now:\n            s[i] = \"a\"\n            k -= 26 - now\ns[n-1] = al[(ord(s[n-1])-ord(\"a\") + k) % 26]\nfor i in s:\n    print(i,end=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11891": {"id": 11891, "code": "s1 = [11, 30]\ns2 = [12, 1]\nif int(s1[0])+1 == int(s2[0]):\n         print(1)\nelse:\n         print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12847": {"id": 12847, "code": "idade = 6\nif 1 <= idade <= 9:\n    if idade == 3 :\n        print(\"YES\")\n    elif idade == 5 :\n        print(\"YES\")\n    elif idade == 7 :\n        print(\"YES\")\n    else :\n        print(\"NO\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5096": {"id": 5096, "code": "s = \"smiles\"\nprint(s[0] + '{}'.format(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "4699": {"id": 4699, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\ncount = len(s)-2\nprint(s[0] + str(count) + s[-1])", "coverage": [">", ">", ">"]}, "10575": {"id": 10575, "code": "a = 1;b = 1;k = 1\nl = []\nc = a\nif (a > b):\n  c = b\nfor i in range(1, c+1):\n  if a % i == 0 and b % i == 0:\n    l.append(i)\nl.sort()\nprint(l[-k])", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "7465": {"id": 7465, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nfor i in range(N):\n    H -= A[i]\nprint(['No','Yes'][H <= 0])", "coverage": [">", ">", ">", ">", ">"]}, "7368": {"id": 7368, "code": "h = 211;n = 5\narr = [31, 41, 59, 26, 53]\nprint(\"No\" if h>sum(arr) else \"Yes\")", "coverage": [">", ">", ">"]}, "17945": {"id": 17945, "code": "s = \"1700\"\na = 1<= int(s[:2]) <=12\nb = 1<= int(s[2:]) <=12\nif a and b:\n    print(\"AMBIGUOUS\")\nelif a:\n    print('MMYY')\nelif b:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "729": {"id": 729, "code": "K = 2\nans=-1\np=10\nif K%7==0:\n  l=9*K//7\nelse:\n  l=9*K\nfor i in range(K):\n  if p%l==1:\n    ans=i+1\n    break\n  else:\n    p=(p%l)*10\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "7055": {"id": 7055, "code": "H = 10;N = 3\ndata = [4, 5, 6]\nif H <= sum(data):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "9105": {"id": 9105, "code": "s = \"2017/01/31\"\nprint(''.join(['2018']+[s[4:]]))", "coverage": [">", ">"]}, "15720": {"id": 15720, "code": "a = 13;b = 3;c = 1\nprint(int((a-c)/(b+c)))", "coverage": [">", ">"]}, "4378": {"id": 4378, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nprint((h2 - h1) * 60 + m2 - m1 - k)", "coverage": [">", ">"]}, "8306": {"id": 8306, "code": "N = 3;K = 3\na = [1, 2, 3]\ncnt = 1\nans = K\nwhile ans < N:\n    cnt += 1\n    ans += K-1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18625": {"id": 18625, "code": "h = 2\nw = 100\nn = 200\nma = max(h, w)\nprint(n // ma) if n // ma == n / ma else print(n // ma + 1)", "coverage": [">", ">", ">", ">", ">"]}, "7527": {"id": 7527, "code": "h = 210;hoge = 5\nl = [31, 41, 59, 26, 53]\nprint('Yes' if h <= sum(l) else 'No')", "coverage": [">", ">", ">"]}, "16066": {"id": 16066, "code": "a = 20;b = 30\nc = 2*b\nif a - c <= 0:\n  print(0)\nelse:\n  print(a - c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "299": {"id": 299, "code": "s = \"xyz\"\nk = 4\nresult=\"\"\nfor ss in s:\n    if ss==\"a\":\n        result+=\"a\"\n    else:\n        if k>= 123 - ord(ss):\n            k-=123-ord(ss)\n            result+=\"a\"\n        else:\n            result+=ss\nif k>0:\n    k=k%(123-97)\n    temp=chr((((ord(result[-1])-97)+k)%(123-97))+97)\n    print(result[:-1]+temp)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "1937": {"id": 1937, "code": "N = 10;A = 7;B = 5\nmaxN,minN = 0,0\nif N >= A + B:\n  minN = 0\n  maxN = min([A,B])\nelse:\n  minN = A + B - N\n  maxN = min([A,B])\nprint('{} {}'.format(maxN,minN))", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "13066": {"id": 13066, "code": "x = 5\nli753 = [7,5,3]\nif x in li753:\n    ans = \"YES\"\nelse:\n    ans = \"NO\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7905": {"id": 7905, "code": "from math import ceil\nn = 4;k = 3\na = [2, 3, 1, 4]\nn=n-k\nc=1\nif(n>0):\n    c+=ceil(n/(k-1))\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9785": {"id": 9785, "code": "n = 6\ns = \")))())\"\nneed_left = 0\npointer = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        pointer += 1\n    else:\n        if pointer == 0:\n            need_left += 1\n        else:\n            pointer -= 1\nres = \"\"\nfor i in range(need_left):\n    res += \"(\"\nres += s\nfor i in range(pointer):\n    res += \")\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "4440": {"id": 4440, "code": "S = \"xyz\"\nc=len(S)\nprint(S[0]+str(c-2)+S[-1])", "coverage": [">", ">", ">"]}, "7555": {"id": 7555, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\nans=0\npower=0\nfor i in range(n):\n    power+=a[i]\n    if power>=h:\n        ans=1\n        break\nif ans==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15445": {"id": 15445, "code": "X = 100000;Y = 1;Z = 1\nans = (((X-Z)//(Y+Z)))\nprint(ans)", "coverage": [">", ">", ">"]}, "13929": {"id": 13929, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nu = False\nd = False\nfor i in range(1, n):\n    if u:\n        if a[i] < a[i - 1]:\n            u = False\n            ans += 1\n    elif d:\n        if a[i] > a[i - 1]:\n            d = False\n            ans += 1\n    else:\n        if a[i] > a[i - 1]:\n            u = True\n        elif a[i] < a[i - 1]:\n            d = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "10646": {"id": 10646, "code": "temp = []\nl = []\na = 1;b = 1;k = 1\nfor i in range(1, a + 1):\n    if a % i == 0:\n        temp.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0 and i in temp:\n        l.append(i)\nprint(l[k * -1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1869": {"id": 1869, "code": "N = 100;A = 100;B = 100\nd = N - (A + B)\nprint(min(A, B), -d if d < 0 else 0)", "coverage": [">", ">", ">"]}, "11776": {"id": 11776, "code": "_ = list(map(int, \"11 16\".split()))\nn = 17\nif n == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12901": {"id": 12901, "code": "n = 6\nprint(\"YES\" if n == 3 or n == 5 or n == 7 else \"NO\")", "coverage": [">", ">"]}, "1129": {"id": 1129, "code": "N = 112\nfor i in range(10):\n    if 111*i < N <= 111*(i+1):\n        print(111*(i+1))", "coverage": [">", ">", ">", ">"]}, "10977": {"id": 10977, "code": "s = \"level\"\nn = len(s)\nsl = s[:n//2]\nsr = s[n//2+1:]\nif sl == sr and sr ==  sr[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "8898": {"id": 8898, "code": "n = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(n):\n    s1 = sum(A1[:i+1])\n    s2 = sum(A2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13465": {"id": 13465, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "6418": {"id": 6418, "code": "import bisect\nN = 3\nJ = [1, 1, 1]\nK = [2, 2, 2]\nL = [3, 3, 3]\nJ.sort()\nK.sort()\nL.sort()\nS = 0\nfor i in range(N):\n  k = bisect.bisect_left(J,K[i])\n  l = N - bisect.bisect_right(L,K[i])  \n  S += k*l\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16084": {"id": 16084, "code": "A = \"20\";B = \"30\"\nA=int(A)\nB=int(B)\nif A-2*B>=0:\n  print(A-2*B)\nelif A-2*B<0:\n  print(0)", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "4432": {"id": 4432, "code": "a = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(a[0] + str(len(a) - 2) + a[len(a) - 1])", "coverage": [">", ">"]}, "14161": {"id": 14161, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\ni = 0\nwhile n > i:\n    ans += 1\n    while n > i + 1 and a[i] == a[i+1]:\n        i += 1\n    if n == i + 1:\n        break\n    if a[i] < a[i+1]:\n        while n > i + 1 and a[i] <= a[i+1]:\n            i += 1\n    else:\n        while n > i + 1 and a[i] >= a[i+1]:\n            i += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10395": {"id": 10395, "code": "A = 8;B = 12;K = 2\nlim = min(A,B)\ncount = 0\nfor i in range(lim,0,-1):\n  if A%i == 0 and B%i == 0:\n    count += 1\n    if count == K:\n      print(i)\n      break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16301": {"id": 16301, "code": "n = 5\na = [6, 9, 4, 2, 11]\nnmax = max(a)\ntarget = nmax/2\ncur = a[0] if a[0] != nmax else a[1]\ncurdiff = abs(cur-target)\nfor i in range(n):\n    if a[i] == nmax:\n        continue\n    diff = abs(a[i]-target)\n    if diff < curdiff:\n        curdiff = diff\n        cur = a[i]\nprint(nmax, cur)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15147": {"id": 15147, "code": "from math import factorial\nn = 1;p = 1\nnums = [50]\nodd = 0\neven = 0\nfor num in nums:\n    if num % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nif p == 0:\n    e = 2 ** even\n    o = 0\n    for i in range(0, odd + 1, 2):\n        o += factorial(odd) // (factorial(odd - i) * factorial(i))\n    ans += e * o\nelif p == 1:\n    e = 2 ** even\n    o = 0\n    for i in range(1, odd + 1, 2):\n        o += factorial(odd) // (factorial(odd - i) * factorial(i))\n    ans += e * o\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "7104": {"id": 7104, "code": "n = 20;d = 3\ns = [4, 5, 6]\nv=0\nfor i in s:\n    v+=int(i)\nif v>=n:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4357": {"id": 4357, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\ntime=abs(H2-H1)*60+(M2-M1)\nans=time-K\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "772": {"id": 772, "code": "K = 101\nnum = 0\nfor i in range(0,K+1):\n    num = (num*10+7)%K\n    if num==0:\n        print(i+1,'\\n')\n        break\nif num:\n    print(\"-1\\n\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "12089": {"id": 12089, "code": "a = ['11', '16']\nm1 = int(a[0])\nb = ['11', '17']\nm2 = int(b[0])\nif m2 == m1+1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16653": {"id": 16653, "code": "a = \"H\";b = \"H\"\nif a == \"H\" and b == \"H\":print('H')\nelif a == \"H\" and b == \"D\":print('D')\nelif a == 'D' and b == \"H\":print(\"D\")\nelse : print(\"H\")", "coverage": [">", ">", "!", "!", "!"]}, "468": {"id": 468, "code": "S = \"a\"\nK = 25\nrest = K\noz = ord('z')\noa = ord('a')\nans = list(S)\nfor ci in range(len(S)):\n    if S[ci] == 'a':\n        continue\n    check = oz - ord(S[ci]) + 1\n    if rest >= check:\n        ans[ci] = 'a'\n        rest -= check\nif rest >= 0:\n    for i in range(rest%26):\n        if oz == ord(ans[-1]):\n            ans[-1] = 'a'\n        else:\n            ans[-1] = chr(ord(ans[-1])+1)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "6765": {"id": 6765, "code": "H = 10;N = 3\nA = [4, 5, 6]\nsum_A = sum(A)\nif H <= sum_A:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9329": {"id": 9329, "code": "N = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nN[3] = '8'\nN = \"\".join(N)\nprint(N)", "coverage": [">", ">", ">", ">"]}, "9715": {"id": 9715, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nc0 = 0\nc1 = 0\nz0 = 0\nz1 = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nans = [\"(\"]*c1 + s + [\")\"]*c0\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "1364": {"id": 1364, "code": "n = 112\nfor i in range(1,10):\n    if int(n)>int(str(i)*3):\n        continue\n    print(str(i)*3)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "17767": {"id": 17767, "code": "s = \"1700\"\nans = [0,0]\nif 1 <=  int(s[:2]) <= 12:\n    ans[0] = 1\nif 1 <= int(s[2:]) <= 12:\n    ans[1] = 1\nprint([[\"NA\",\"YYMM\"],[\"MMYY\",\"AMBIGUOUS\"]][ans[0]][ans[1]])", "coverage": [">", ">", ">", "!", ">", "!", ">"]}, "15019": {"id": 15019, "code": "n = 1;p = 1\na = [50]\nodds = sum(i%2 for i in a)\nif odds>0:\n    print(2**(n-1))\nelif p==0:\n    print(2**(n))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "15501": {"id": 15501, "code": "x = 64146;y = 123;z = 456\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "12575": {"id": 12575, "code": "A = 1;B = 1;K = 1\nC =min(A,B)\nlist =[]\nfor i in range(1,C+1):\n  if A%i == 0 and B%i == 0:\n    list.append(i)\nlist = sorted(list)\nans = list[-K]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8996": {"id": 8996, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nl = []\nl.append(b-a)\nl.append(c-a)\nl.append(d-a)\nl.append(e-a)\nl.append(c-b)\nl.append(d-b)\nl.append(e-b)\nl.append(d-c)\nl.append(e-c)\nl.append(e-d)\nif max(l) <= k:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "515": {"id": 515, "code": "N = 26\nord_a = ord('a')\nS = [23, 24, 25]\nK = 4\nfor i in range(len(S)):\n    r = (N - S[i]) % N\n    if K >= r:\n        K -= r\n        S[i] = 0\nS[-1] += K % N\nS[-1] %= N\nanswer = ''.join(chr(s + ord_a) for s in S)\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16944": {"id": 16944, "code": "a = \"H\";b = \"H\"\nif a == b:\n    ans = \"H\"\nelse:\n    ans = \"D\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4673": {"id": 4673, "code": "N = ['s', 'm', 'i', 'l', 'e', 's']\nprint(N[0] + str(len(N)-2) + N[-1])", "coverage": [">", ">"]}, "6175": {"id": 6175, "code": "n = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nimport bisect\nans=0\nfor i in range(n):\n    num_a=bisect.bisect_left(a,b[i])\n    idx_c=bisect.bisect_right(c,b[i])\n    num_c=n-idx_c\n    ans+=num_a*num_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5603": {"id": 5603, "code": "import math\nn = 2\nif n % 2 == 0:\n    print(int(n / 2))\nelif n % 2 == 1:\n    print(math.ceil(n / 2))", "coverage": [">", ">", ">", ">", "!", "!"]}, "5209": {"id": 5209, "code": "s = \"internationalization\"\na = str(len(s)-2)\nprint(s[0] + a + s[-1])", "coverage": [">", ">", ">"]}, "259": {"id": 259, "code": "t=\"abcdefghijklmnopqrstuvwxyz\"\ns = \"xyz\"\nk = 4\na=[t.index(i)for i in s]\nans=\"\"\nfor i in a:\n  j=i\n  if i==0:\n    ans+=\"a\"\n    continue\n  if k>=26-i:\n    k-=26-i\n    j=0\n  ans+=t[j]\nj+=k\nj%=26\nans=ans[:-1]+t[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "777": {"id": 777, "code": "K = 2\na = 7 % K\ncnt = 1\nwhile a:\n    a = (10*a+7) % K\n    cnt += 1\n    if K < cnt:\n        cnt = -1\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12662": {"id": 12662, "code": "x = 5\nif (x == 3 or x == 5 or x == 7):\n   print('YES')\nelse:\n   print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "13720": {"id": 13720, "code": "import sys\nreadline = sys.stdin.readline\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(max(0,(H2 * 60 + M2) - (H1 * 60 + M1 + K)))", "coverage": [">", ">", ">", ">"]}, "8507": {"id": 8507, "code": "n = 1\na1 = [2]\na2 = [3]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10142": {"id": 10142, "code": "n = 3\ns = \"())\"\nL = 0  \nR = 0  \ncnt = 0  \nfor i in s:\n    if i == \"(\":\n        cnt += 1\n    else:\n        if cnt > 0:\n            cnt -= 1\n        else:  \n            L += 1\nR = cnt\nprint(\"(\"*L + s + \")\"*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "2546": {"id": 2546, "code": "if {1,9,7,4}==set(map(int,\"1 7 9 4\".split())):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "6167": {"id": 6167, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(n):\n    mid = b[i]\n    hi = bisect.bisect_left(a, mid)\n    lo = n - bisect.bisect_right(c, mid)\n    ans += hi * lo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8198": {"id": 8198, "code": "n = 3;k = 3\na = [1, 2, 3]\nprint(1 if n <= k else 1 + -(-(n - k) // (k - 1)))", "coverage": [">", ">", ">"]}, "12169": {"id": 12169, "code": "a = [11, 16]\nb = [11, 17]\nou=b[0]-a[0]\nif ou == 1:\n  print(1)\nelif ou==0:\n  print(0)\nelif ou==1-12:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "2780": {"id": 2780, "code": "s = \"35753\"\nm=999999999\nfor i in range(0,len(s)-2):\n    k=int(s[i:i+3])\n    if abs(k-753)<m:\n        m=abs(k-753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16757": {"id": 16757, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    else:\n        print(\"D\")\nif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "2493": {"id": 2493, "code": "N = map(int, \"4 9 0 8\".split())\ndic = {1: False, 9: False, 7: False, 4: False}\nfor n in N:\n  dic[n] = True\nif all(dic.values()):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13170": {"id": 13170, "code": "s = \"haiku,atcoder,tasks\"\ns = s[:5] + \" \" + s[6:13] + \" \" + s[14:]\nprint(s)", "coverage": [">", ">", ">"]}, "10233": {"id": 10233, "code": "n = 6\ns = \")))())\"\nx=s\nfor i in range(50):\n  x=x.replace('()','')\nl=x.count(')')\nr=x.count('(')\nfor i in range(l):\n  s='('+s\nfor i in range(r):\n  s+=')'\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "16004": {"id": 16004, "code": "a = 12;b = 4\nif a <= b:\n    print(0)\nelif a - 2*b <= 0:\n    print(0)\nelif a - 2*b > 0:\n    print(a - 2 * b)", "coverage": [">", ">", "!", ">", "!", ">", ">"]}, "8758": {"id": 8758, "code": "N = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nmaxim = 0\nfor i in range(N):\n    count = 0\n    count += sum(a1[:i+1]) + sum(a2[i:])\n    if count > maxim:\n        maxim = count\nprint(maxim)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15214": {"id": 15214, "code": "x = 100000;y = 1;z = 1\nn = (x - z) / (y + z)\nprint(int(n))", "coverage": [">", ">", ">"]}, "10078": {"id": 10078, "code": "n = 3\ns = ['(', ')', ')']\nover=0\nleft=0\nright=0\ncenter=\"\"\nfor i in s:\n    if over==0 and i==\")\":\n        left+=1\n    elif over!=0 and i==\")\":\n        over-=1\n    else:\n        over+=1\n    center+=i\nright=over\nprint(\"(\"*left+center+\")\"*right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "16215": {"id": 16215, "code": "n = 5\na = [6, 9, 4, 2, 11]\nx = max(a)\ny = float(\"inf\")\nfor ai in a:\n    if abs(x / 2 - ai) < abs(x / 2 - y) and ai < x:\n        y = ai\nprint(x, y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3005": {"id": 3005, "code": "s = \"1111111111\"\nmin_abs = 1000\nfor i in range(len(s) - 2):\n    if abs(753 - int(s[i: i + 3])) < min_abs:\n        min_abs = abs(753 - int(s[i: i + 3]))\nprint(min_abs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6173": {"id": 6173, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\nans=0\nfor i in range(n):\n    num_a=bisect.bisect_left(a,b[i])\n    idx_c=bisect.bisect_right(c,b[i])\n    num_c=n-idx_c\n    ans+=num_a*num_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18389": {"id": 18389, "code": "import math\nH = 3\nW = 7\nN = 10\nprint(min(math.ceil(N / H), math.ceil(N / W)))", "coverage": [">", ">", ">", ">", ">"]}, "16204": {"id": 16204, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nleft = a.pop()\nyoi = left/2\nfor i in range(n-1):\n    if a[i] >= yoi:\n        a[i] = (abs(a[i]-yoi), 1)\n    else:\n        a[i] = (abs(a[i]-yoi), -1)\na.sort()\nright = abs(int(a[0][0]+a[0][1]*yoi))\nprint(left, right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15062": {"id": 15062, "code": "import itertools\nn = 2;p = 0\na = [1, 1]\ncnt0 = a.count(0)\ncnt1 = n - cnt0\nif p==0 and cnt0==n:\n    print(2**n)\nelif p==1 and cnt0==n:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "10223": {"id": 10223, "code": "N = 3\nS = \"())\"\nadd_left=0\nadd_right=0\nfor s in S:\n  if s==\"(\":\n    add_right+=1\n  elif add_right==0:\n    add_left+=1\n  else:\n    add_right-=1\nprint('(' * add_left + S + ')' * add_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "6112": {"id": 6112, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans=0\nfor mid in b:\n    ind_t = bisect.bisect_left(a,mid)\n    ind_b = bisect.bisect_right(c,mid)\n    ans+=ind_t*(n-ind_b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7329": {"id": 7329, "code": "h = 10;n = 3\nal = [4, 5, 6]\nprint(['No','Yes'][sum(al)>=h])", "coverage": [">", ">", ">"]}, "2376": {"id": 2376, "code": "n = 1;m = 1\nod_od = n*(n-1)/2\nev_ev = m*(m-1)/2\nprint(int(od_od+ev_ev))", "coverage": [">", ">", ">", ">"]}, "1805": {"id": 1805, "code": "import math\nimport itertools\nimport sys\nimport copy\nN = 10;A = 3;B = 5\nmaxN = min(A, B)\nminN = max(A+B-N, 0)\nprint (str(maxN) + \" \" + str(minN))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15098": {"id": 15098, "code": "n = 3;p = 0\nnum = [1, 1, 1]\nsemua_angka_genap = True\nfor i in num:\n  if i % 2 == 1:\n    semua_angka_genap = False\nif semua_angka_genap:\n  if p == 0:\n    print(2**n)\n  else:\n    print(0)\nelse:\n  print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "7005": {"id": 7005, "code": "H = 210;N = 5\nlsA = [31, 41, 59, 26, 53]\nprint('Yes' if H <= sum(lsA) else 'No')", "coverage": [">", ">", ">"]}, "17659": {"id": 17659, "code": "S = \"0112\"\nL = int(S[:2])\nR = int(S[2:])\nif 1<=L<=12 and 1<=R<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=L<=12:\n  print(\"MMYY\")\nelif 1<=R<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "13420": {"id": 13420, "code": "s = \"abcde,fghihgf,edcba\"\ns = s.replace(\",\", \" \")\nprint(s)", "coverage": [">", ">", ">"]}, "9938": {"id": 9938, "code": "n = 8\ns = \"))))((((\"\nans = s\nwhile s.count(\"()\")>0:\n    s = s.replace(\"()\", \"\")\ncnt_l = s.count(\")\")\ncnt_r = s.count(\"(\")\nprint(cnt_l * \"(\" + ans + cnt_r * \")\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "1802": {"id": 1802, "code": "N = 10;A = 3;B = 5\nprint(min(A,B),max(0,min(A,B)-(N-max(A,B))))", "coverage": [">", ">"]}, "9925": {"id": 9925, "code": "N = 6\nS = \")))())\"\nd = [0] * (N + 1)\nfor i in range(N):\n    d[i + 1] = d[i] + int(S[i] == \"(\") - int(S[i] == \")\")\na = d[-1]\nb = min(d)\nprint(\"(\" * -b + S + \")\" * (a - b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11766": {"id": 11766, "code": "m1 = 11\nm2 = 11\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3404": {"id": 3404, "code": "A = 20;B = 15\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "7548": {"id": 7548, "code": "H = 211;N = 5\nA = map(int, \"31 41 59 26 53\".split())\nprint(\"Yes\" if H <= sum(A) else \"No\")", "coverage": [">", ">", ">"]}, "12595": {"id": 12595, "code": "a = 8;b = 12;k = 2\nmin = a\nif b < min:\n  min = b\nans_lists = []\nfor i in range(1, min+1, 1):\n  if a%i == 0 and b%i == 0:\n    ans_lists.append(i)\nans_lists.reverse()\nans = ans_lists[k-1]\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "5085": {"id": 5085, "code": "s = \"xyz\"\nn = len(s)\nprint (s[0]+((str)(n-2))+s[n-1])", "coverage": [">", ">", ">"]}, "16621": {"id": 16621, "code": "a = \"D\";b = \"H\"\nif len(set((a,b))) == 1:\n    ans = \"H\"\nelse:\n    ans = \"D\"\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "6503": {"id": 6503, "code": "import bisect\nN = 2\na = map(int, \"1 5\".split(\" \"))\nb = map(int, \"2 4\".split(\" \"))\nc = map(int, \"3 6\".split(\" \"))\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\nresult = 0\nfor i in b:\n    ta = bisect.bisect_left(a,i)\n    tc = bisect.bisect_right(c,i)\n    result += ta*(N-tc)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1942": {"id": 1942, "code": "N = 10;A = 3;B = 5\nprint(min(A, B), (A + B - N if A + B > N else 0))", "coverage": [">", ">"]}, "5872": {"id": 5872, "code": "N = 5\ns = -( - N // 2 )\nprint(s)", "coverage": [">", ">", ">"]}, "2309": {"id": 2309, "code": "N = 10;A = 7;B = 5\n_max = min(A,B)\n_min = min(A,B) - (N - max(A,B))\nif _min < 0:\n    _min = 0\nprint(_max,_min)", "coverage": [">", ">", ">", ">", "!", ">"]}, "8380": {"id": 8380, "code": "n = 5\nla1 = [3, 2, 2, 4, 1]\nla2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15556": {"id": 15556, "code": "x = 64146;y = 123;z = 456\nx -= z\ny += z\nprint(x // y)", "coverage": [">", ">", ">", ">"]}, "15864": {"id": 15864, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 13;b = 3;c = 1\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">", ">"]}, "10203": {"id": 10203, "code": "n = 6\ns = \")))())\"\nl = 0\nr = 0\nfor si in s:\n  if si == \"(\":\n    r += 1\n  else:\n    if r == 0:\n      l += 1\n    else:\n      r -= 1\nans = \"\"\nfor _ in range(l):\n  ans += \"(\"\nans += s\nfor _ in range(r):\n  ans += \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "4968": {"id": 4968, "code": "s = \"xyz\"\ns_length = len(s)\ns_first = s[0]\ns_last = s[-1]\nanswer = s_first + str(len(s)-2) + s_last\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4208": {"id": 4208, "code": "H_1 = 10;M_1 = 0;H_2 = 15;M_2 = 0;K = 30\nprint((H_2-H_1)*60+(M_2-M_1)-K)", "coverage": [">", ">"]}, "15237": {"id": 15237, "code": "X = 13;Y = 3;Z = 1\nX = X-Z\nA = (X/(Y+Z))//1\nprint (round (A))", "coverage": [">", ">", ">", ">"]}, "17005": {"id": 17005, "code": "n = ['D', 'H']\na = n[0]\nb = n[1]\nif a == 'H':\n  if b == 'H':\n    print('H')\n  else:\n   print('D') \nelse:\n  if b == 'H':\n    print('D')\n  else:\n    print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "1174": {"id": 1174, "code": "a = 112\nwhile len(set(str(a)))!=1:\n  a+=1\nprint(a)", "coverage": [">", ">", ">", ">"]}, "6968": {"id": 6968, "code": "H = 20\nA = [4, 5, 6]\nif sum(A) < H:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7281": {"id": 7281, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= h: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", "!"]}, "12713": {"id": 12713, "code": "import sys\nimport math\nimport itertools\nn = 6\nif n==5 or n==7 or n==3 :\n\tprint(\"YES\")\nelse :\n\tprint(\"NO\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4522": {"id": 4522, "code": "s = \"internationalization\"\nprint(s[0]+'%d' % len(s[1:-1])+s[-1])", "coverage": [">", ">"]}, "8939": {"id": 8939, "code": "n = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5094": {"id": 5094, "code": "s = \"xyz\"\nx = len(s)\ny = x - 2\nprint(s[0] + str(y) + s[x-1])", "coverage": [">", ">", ">", ">"]}, "11442": {"id": 11442, "code": "day = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint((-day.index(\"SAT\")-1)%7+1)", "coverage": [">", ">"]}, "15561": {"id": 15561, "code": "x = 64146;y = 123;z = 456\nans = x // (y+z)\nif (x % (y+z) < z):\n    ans -= 1\nprint(max(0,ans))", "coverage": [">", ">", ">", "!", ">"]}, "5908": {"id": 5908, "code": "n = 5\ndiv, mod = divmod(n, 2)\nprint(div+mod)", "coverage": [">", ">", ">"]}, "9597": {"id": 9597, "code": "s = \"2017/01/31\"\ns1=s.replace('7','8',1)\nprint(s1)", "coverage": [">", ">", ">"]}, "8412": {"id": 8412, "code": "import itertools\nN = 1\nA1 = [2]\nA2 = [3]\ncsA1 = list(itertools.accumulate(A1))\ncsA2 = list(itertools.accumulate(A2))\nans = A1[0] + csA2[-1]\nfor i in range(N-1):\n    tmp = csA1[i] + (csA2[-1] - csA2[i]) + A2[i]\n    ans = max(ans,tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12017": {"id": 12017, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(['0','1'][M1!=M2])", "coverage": [">", ">", ">"]}, "18526": {"id": 18526, "code": "from math import ceil\nH = 2\nW = 100\nN = 200\nprint(ceil(N/max(H,W)))", "coverage": [">", ">", ">", ">", ">"]}, "17521": {"id": 17521, "code": "s = \"0112\"\nym=True if 0 < int(s[2:]) < 13 else False\nmy=True if 0 < int(s[:2]) < 13 else False\nif my and ym:\n  print('AMBIGUOUS')\nelif my:\n  print('MMYY')\nelif ym:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16500": {"id": 16500, "code": "import bisect\nn = 2\na = [100, 0]\na.sort()\nk=bisect.bisect_left(a,a[-1]/2)\nif k==n-1:\n    print(a[-1],a[-2])\nelif k==0:\n    print(a[-1],a[0])\nelse:\n    if a[-1]/2-a[k-1]<a[k]-a[-1]/2:\n        k-=1\n    print(a[-1],a[k])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16869": {"id": 16869, "code": "a = \"H\";b = \"H\"\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'H' and b == 'D':\n    print('D')\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "11785": {"id": 11785, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "7528": {"id": 7528, "code": "h = 211;hoge = 5\nl = [31, 41, 59, 26, 53]\nprint('Yes' if h <= sum(l) else 'No')", "coverage": [">", ">", ">"]}, "11360": {"id": 11360, "code": "days = ('SUN','MON','TUE','WED','THU','FRI','SAT')\nDay_of_the_week = \"SAT\"\nfor index, day in enumerate(days):\n    if Day_of_the_week == day:\n        print(7 - index)", "coverage": [">", ">", ">", ">", ">"]}, "16349": {"id": 16349, "code": "import bisect\nn = 2\na = [0, 100]\nx = a[-1]\nN = a[-1]//2\na = a[:-1]\ny = bisect.bisect_left(a,N)\nif len(a) <= y: ans = a[y-1]\nelse:\n    ans = a[y]\n    if 0 < y and abs(N-ans) > abs(N-a[y-1]): ans = a[y-1]\n    if y < len(a)-1 and abs(N-ans) > abs(N-a[y+1]): ans = a[y+1]\nprint(x,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14772": {"id": 14772, "code": "n = 1;p = 1\na = [50]\ndp=[[0]*2 for i in range(n+1)]\ndp[0][0]=1\nfor i in range(n):\n  if a[i]%2==0:\n    dp[i+1][0]=dp[i][0]*2\n    dp[i+1][1]=dp[i][1]*2\n  else:\n    dp[i+1][0]=dp[i][0]+dp[i][1]\n    dp[i+1][1]=dp[i][0]+dp[i][1]\nprint(dp[-1][p])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "13231": {"id": 13231, "code": "s = \"abcde,fghihgf,edcba\"\nfor i in range(len(s)):\n    if s[i]==\",\":\n        s=s[:i]+\" \"+s[i+1:]\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "16526": {"id": 16526, "code": "n = 2\na_list = [100, 0]\na_list.sort()\na_max = a_list[n - 1]\ntemp_max = [1, 0]\nbunbo = 1\nbunshi = 1\ncenter = int((a_max + 1) / 2)\na_set = set(a_list)\ndiff_min = a_max\nans = 0\nfor a in a_set:\n    diff = abs(a-center)\n    if diff_min > diff:\n        diff_min = diff\n        ans = a\nprint(a_max, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7639": {"id": 7639, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nsum =0\nfor i in range(len(A)):\n\tsum = sum + A[i]\nif sum >= H:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10676": {"id": 10676, "code": "import sys\nA = 100;B = 50;K = 4\nif A < B: \n    A, B = B, A\nwhile A%B != 0:\n    A,B = B,A%B\ncount = 0\nfor I in range(B,0,-1):\n    if B % I == 0:\n        count += 1\n    if count == K:\n        print(I)\n        break", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "12171": {"id": 12171, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nif a == c:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "8481": {"id": 8481, "code": "import sys\ninput = sys.stdin.readline\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17286": {"id": 17286, "code": "a = \"H\";b = \"H\"\nif a == 'H' and b == 'H':\n  print('H')\nelif a == 'D' and b == 'D':\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "13828": {"id": 13828, "code": "n = 6\nnum_list = [1, 2, 3, 2, 2, 1]\nans = 1\ncnt_list = [0] * n\na = int()\nfor i in range(1,n):\n    if num_list[i-1] > num_list[i]:\n        cnt_list[i] = -1\n    if num_list[i-1] < num_list[i]:\n        cnt_list[i] = 1\nwhile 1 in cnt_list and -1 in cnt_list:\n    del cnt_list[:max(cnt_list.index(1),cnt_list.index(-1))]\n    cnt_list[0] = 0\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6261": {"id": 6261, "code": "import bisect\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\ncnt = 0\nfor b in Bs:\n    a_b = bisect.bisect_left(As,b)\n    b_c = N - bisect.bisect_right(Cs, b)\n    cnt += a_b * b_c\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8244": {"id": 8244, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nimport math\nprint( math.ceil( (n-1)/(k-1) ) )", "coverage": [">", ">", ">", ">"]}, "16459": {"id": 16459, "code": "from math import ceil\nn = 2\ndata = [100, 0]\nn = max(data)\nnn = n/2.0\nr = min((d for d in data if d != n), key=lambda x: abs(nn-x))\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18743": {"id": 18743, "code": "H = 14\nW = 12\nN = 112\nprint(N//max(H,W) if N%max(H,W) == 0 else N//max(H,W)+1)", "coverage": [">", ">", ">", ">"]}, "19172": {"id": 19172, "code": "N = 12\nans=0\nif N%2==0:\n    N=N//2\nelse:\n    N=-1\ncnt=1\nwhile cnt<=N:\n    cnt*=5\n    ans+=N//cnt\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "17247": {"id": 17247, "code": "a = \"H\";b = \"H\"\nif b == 'H':\n    if a == 'H':\n        print('H')\n    else:\n        print('D')\nelif b == 'D':\n    if a == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17285": {"id": 17285, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    elif b ==\"D\":\n        print(\"D\")\nif a == \"D\":\n    if b ==\"H\":\n        print(\"D\")\n    elif b == \"D\":\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">"]}, "1631": {"id": 1631, "code": "N = 10;A = 3;B = 5\nprint(min(A,B))\nif A+B <= N:\n    print(0)\nelse:\n    print(A+B-N)", "coverage": [">", ">", ">", ">", "!", "!"]}, "7737": {"id": 7737, "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint((len(A)-1)//(K-1) + int(bool((len(A)-1)%(K-1))))", "coverage": [">", ">", ">"]}, "16573": {"id": 16573, "code": "import math\na = \"D\";b = \"H\"\nprint(\"H\" if a==b else \"D\")", "coverage": [">", ">", ">"]}, "4936": {"id": 4936, "code": "s = \"internationalization\"\nans = s[0] + str(len(s[1:-1])) + s[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "17454": {"id": 17454, "code": "s = \"1905\"\na = s[0] + s[1]\nb = s[2] + s[3]\np = 0\nq = 0\nif a == \"01\" or a == \"02\" or a == \"03\" or a == \"04\" or a == \"05\" or a == \"06\" or a == \"07\" or a == \"08\" or a == \"09\" or a == \"10\" or a == \"11\" or a == \"12\":\n    p = 1\nif b == \"01\" or b == \"02\" or b == \"03\" or b == \"04\" or b == \"05\" or b == \"06\" or b == \"07\" or b == \"08\" or b == \"09\" or b == \"10\" or b == \"11\" or b == \"12\":\n    q = 1  \nif p == 1 and q == 1:\n    print(\"AMBIGUOUS\")\nelif p == 1 and q == 0:\n    print(\"MMYY\")\nelif p == 0 and q == 1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "18351": {"id": 18351, "code": "H = 14\nW = 12\nN = 112\ncnt=wcnt=hcnt=0\nwhile N>0:\n    a = max(H-hcnt, W-wcnt)\n    N -= a\n    cnt+=1\n    if a==W:\n        H-=1\n        hcnt+=1\n    elif a==H:\n        W-=1\n        wcnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8677": {"id": 8677, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2610": {"id": 2610, "code": "if set(list(map(int, \"1 2 9 1\".split()))) == {1, 4, 7, 9}:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", "!", "!", ">"]}, "8391": {"id": 8391, "code": "n = 1\na1 = [2]\na2 = [3]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "9576": {"id": 9576, "code": "S = \"2017/01/07\"\nprint('2018' + S[4:])", "coverage": [">", ">"]}, "7059": {"id": 7059, "code": "h = 10;n = 3\na = [4, 5, 6]\nfor i in range(n):\n    h=h-a[i]\nif h<=0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "14444": {"id": 14444, "code": "n = 6\na_l = [1, 2, 3, 2, 2, 1]\nnum = 1\nflag = -1 \nfor i in range(1,n):\n    if a_l[i] > a_l[i-1]:\n        new_flag = 0\n    elif a_l[i] < a_l[i-1]:\n        new_flag = 1\n    else:\n        continue\n    if new_flag != flag:\n        if flag == -1:\n            flag = new_flag\n        else:\n            flag = -1\n            num += 1\nprint(max(num,1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "6869": {"id": 6869, "code": "h = \"10\";n = \"3\"\na = ['4', '5', '6']\nattack = 0\nfor i in range(int(n)):\n    attack += int(a[i])\nif int(h) - attack <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4125": {"id": 4125, "code": "h_1 = 10;m_1 = 0;h_2 = 12;m_2 = 0;k = 120\ntime_m = h_2*60 + m_2 - (h_1*60 + m_1) - k\nprint(time_m)", "coverage": [">", ">", ">"]}, "14071": {"id": 14071, "code": "n = 6\na_s = [1, 2, 3, 2, 2, 1]\nflag = 0\nans = 1\ntmp = 0\nfor i in range(n):\n    if i == 0:\n        continue\n    elif a_s[i] > a_s[i-1]:\n        if flag == -1:\n            ans += 1\n            flag = 0\n        else:\n            flag = 1\n    elif a_s[i] < a_s[i-1]:\n        if flag == 1:\n            ans += 1\n            flag = 0\n        else:\n            flag = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "19141": {"id": 19141, "code": "n = 12\nif n % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    for i in range(0,25):\n        ans += n//(10*5**i)\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "5589": {"id": 5589, "code": "n = 100\np = n % 2 + n // 2\nprint(p)", "coverage": [">", ">", ">"]}, "18199": {"id": 18199, "code": "n = 6\na=map(int,\"5 2 4 2 8 8\".split())\npulasu_i=dict()\nmainasu_i=dict()\nfor i,num in enumerate(a):\n    x=i+1\n    if num+x not in pulasu_i:\n        pulasu_i[num+x]=1\n    else:\n        pulasu_i[num+x]+=1\n    if num-x not in mainasu_i:\n        mainasu_i[num-x]=1\n    else:\n        mainasu_i[num-x]+=1\nans=0\nfor num,cnt in pulasu_i.items():\n    if -num not in mainasu_i:\n        continue\n    else:\n        ans+=cnt*mainasu_i[-num]\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "15810": {"id": 15810, "code": "x = 64146;y = 123;z = 456\nwidth = y + z\nprint((x-z) // width)", "coverage": [">", ">", ">"]}, "18761": {"id": 18761, "code": "h = 14\nw = 12\nn = 112\ncnt = 0\nans = 0\nwhile ans < n:\n    if h < w:\n        ans += w\n        h -= 1\n    else:\n        ans += h\n        w -= 1\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "7564": {"id": 7564, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nAA = sum(A)\nif AA >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13892": {"id": 13892, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nbol = 0\ncnt = 1\nfor i in range(N-1):\n    if bol == 0:\n        if A[i] > A[i+1]:\n            bol = -1\n        elif A[i] < A[i+1]:\n            bol = 1\n    elif bol == 1:\n        if A[i] > A[i+1]:\n            cnt += 1\n            bol = 0\n    else:\n        if A[i] < A[i+1]:\n            cnt += 1\n            bol = 0\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "11233": {"id": 11233, "code": "s = \"SUN\"\na = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nprint(7 - a.index(s))", "coverage": [">", ">", ">"]}, "14954": {"id": 14954, "code": "n = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nodd = [i for i in a if i % 2 == 1]\neven = [i for i in a if i % 2 == 0]\necnt = pow(2, len(even))\nocnt = pow(2, max(len(odd)-1,0))\nprint(0 if (len(odd) == 0 and p == 1) else ecnt * ocnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1035": {"id": 1035, "code": "n = 112\na = -(-n//111)\nif a == 10:\n    print(1111)\nelse:\n    print(a*111)", "coverage": [">", ">", ">", "!", "!", ">"]}, "5150": {"id": 5150, "code": "s = \"smiles\"\nstart = s[0]\nend = s[-1]\nlength = str(len(s[1:-1]))\nprint(start + length + end)", "coverage": [">", ">", ">", ">", ">"]}, "14643": {"id": 14643, "code": "N = 1;P = 1\nA = (50,)\ndp = [[0, 0] for _ in range(N + 1)]\ndp[0][0] = 1\nfor index, a in enumerate(A, start=1):\n    if a % 2 == 0:\n        dp[index][0] = dp[index - 1][0] * 2\n        dp[index][1] = dp[index - 1][1] * 2\n    else:\n        dp[index][0] = dp[index - 1][1] + dp[index - 1][0]\n        dp[index][1] = dp[index - 1][0] + dp[index - 1][1]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10943": {"id": 10943, "code": "s = \"atcoder\"\nn = len(s)\nf = s[:(n-1)//2]\nl = s[1+((n-1)//2):]\nprint(\"Yes\" if s==s[::-1] and f==f[::-1] and l==l[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "4413": {"id": 4413, "code": "s = \"xyz\"\nprint(\"{}{}{}\".format(s[0], len(s) - 2, s[-1]))", "coverage": [">", ">"]}, "6617": {"id": 6617, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\na.reverse()\nb.sort()\nb.reverse()\nc.sort()\nc.reverse()\nc.append(0)\ni=0\nl=[]\nfor j in b:\n  while c[i]>j:\n    i+=1\n  l.append(i)\nb.append(0)\ns=0\ncnt=0\ni=0\nfor j in a:\n  while b[i]>j:\n    s+=l[i]\n    i+=1\n  cnt+=s\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15778": {"id": 15778, "code": "x = 12;y = 3;z = 1\ncnt=0\nif x>=y+2*z:\n  cnt+=1\n  x -= (y+2*z)\ncnt += (x//(y+z))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4672": {"id": 4672, "code": "N = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(N[0] + str(len(N)-2) + N[-1])", "coverage": [">", ">"]}, "15370": {"id": 15370, "code": "X = 12;Y = 3;Z = 1\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "19295": {"id": 19295, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nn = 5\nif n%2==1:\n    ans = 0\nelse:\n    tmp = 2\n    v2 = 0\n    while n//tmp>0:\n        v2 += n//tmp\n        tmp *= 2\n    v5 = 0\n    tmp = 5\n    nn = n//2\n    while nn//tmp>0:\n        v5 += nn//tmp\n        tmp *= 5\n    ans = min(v2, v5)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "7155": {"id": 7155, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if sum(A) >= H else 'No')", "coverage": [">", ">", ">"]}, "8255": {"id": 8255, "code": "N = 3;K = 3\nA = [1, 2, 3]\ncnt=0\nfor i in range(10**5+1):\n    N-=K\n    cnt+=1\n    if N<=0:\n        break\n    else:\n        N+=1\nprint(cnt)   ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4449": {"id": 4449, "code": "s = ['x', 'y', 'z']\nresult = s[0] + str(len(s) - 2) + s[len(s) - 1]\nprint(result)", "coverage": [">", ">", ">"]}, "14086": {"id": 14086, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nup = 0\ndown = 0\ni=0\nwhile (i+1)<n:\n    if up == down:\n        if a[i+1] > a[i]:\n            up += 1\n            down = 0\n        elif a[i+1] < a[i]:\n            up = 0\n            down += 1\n        else:\n            up += 1\n            down += 1\n    elif up == 0 and down !=0:\n        if a[i+1] <= a[i]:\n            down += 1\n        else:\n            ans += 1\n            down = 0\n    elif down == 0 and up!= 0:\n        if a[i+1] >= a[i]:\n            up += 1\n        else:\n            ans += 1\n            up = 0\n    i += 1\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "4517": {"id": 4517, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\ntop=s[0]\ntail=s[-1]\nnum=str(len(s)-2)\nprint(top+num+tail)", "coverage": [">", ">", ">", ">", ">"]}, "8209": {"id": 8209, "code": "n = 4;m = 3\nl = [2, 3, 1, 4]\nprint(-(-(len(l)-m)//(m-1))+1) ", "coverage": [">", ">", ">"]}, "9906": {"id": 9906, "code": "N = 6\nX=0\nS = \")))())\"\nT,U='',''\nfor i in range(N):\n  if S[i]=='(':\n    X+=1\n  else:\n    if X==0:\n      T+='('\n    else:\n      X-=1\nU=')'*X\nprint(T+S+U)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "5176": {"id": 5176, "code": "S = \"internationalization\"\nprint(S[0]+str(len(S[1:-1]))+S[-1])", "coverage": [">", ">"]}, "6703": {"id": 6703, "code": "import sys\nH = 10;N = 3\narray = [4, 5, 6]\nif not ( 1 <= H <= 10**9 and 1 <= N <= 10**5 ): sys.exit()\nif not ( 1 <= min(array) and max(array) <= 10**4 ): sys.exit()\nprint('Yes') if sum(array) >= H else print('No')", "coverage": [">", ">", ">", ">", ">", ">"]}, "7780": {"id": 7780, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\ng=1\nwhile k+(k-1)*(g-1)< n:\n  g+=1\nprint(g)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12258": {"id": 12258, "code": "S = \"akasaka\"\nN = len(S)\nfor k in range(0, (N-1)//2):\n  if S[k] == S[(N-1)//2 - k -1] == S[(N-1)//2 + k + 1] == S[-k-1]:\n    continue\n  else:\n    print('No')\n    exit()\nprint('Yes')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13150": {"id": 13150, "code": "n = \"5\"\nif n=='3' or n=='5' or n=='7': print('YES')\nelse: print('NO')", "coverage": [">", ">", "!"]}, "14617": {"id": 14617, "code": "N = 2;P = 0\nA = map(int, \"1 3\".split())\nodds, evens = 0, 0\nfor i in A:\n    if i & 1:\n        odds += 1\n    else:\n        evens += 1\nfrom math import factorial\nif P == 0:\n    ans = 0\n    fo = factorial(odds)\n    for r in range(0, odds + 1, 2):\n        ans += fo // (factorial(odds - r) * factorial(r))\n    ans *= 2**evens\nelse:\n    ans = 0\n    fo = factorial(odds)\n    for r in range(1, odds + 1, 2):\n        ans += fo // (factorial(odds - r) * factorial(r))\n    ans *= 2**evens\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "16020": {"id": 16020, "code": "import sys\ninput = sys.stdin.readline\na = 20;b = 15\nif a > b * 2:\n    ans = a - b * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "16128": {"id": 16128, "code": "input_line = \"12 4\"\ninputs = input_line.split(' ')\ninputs = [int(input) for input in inputs]\nA = inputs[0]\nB = inputs[1]\ndual_B = 2 * B\nres = 0\nif A > dual_B:\n    res = A - dual_B\nelse:\n    res = 0\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6971": {"id": 6971, "code": "import sys\ninput = sys.stdin.readline\nH = 10;N = 3\nA = [4, 5, 6]\nprint('Yes' if sum(A)>=H else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "6651": {"id": 6651, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\nans=0\nfor i in range(n):\n    inda=bisect.bisect_left(a,b[i])\n    indc=bisect.bisect_right(c,b[i])\n    ans += inda*(n-indc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12039": {"id": 12039, "code": "N = 11;M = 16\nans = 0\nM = 17\nif M==1:\n  ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "18698": {"id": 18698, "code": "H = 14\nW = 12\nN = 112\nprint((N // max(H, W)) if N % max(H, W) == 0 else (N // max(H, W) + 1))", "coverage": [">", ">", ">", ">"]}, "17698": {"id": 17698, "code": "x = 112\na = x // 100\nb = x % 100\na_is_month = 0 < a & a <= 12\nb_is_month = 0 < b & b <= 12\nif a_is_month:\n    if b_is_month:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if b_is_month:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2521": {"id": 2521, "code": "N1 = 0;N2 = 4;N3 = 8;N4 = 9\nprint(\"YES\" if N1==1 and N2==4 and N3==7 and N4==9 else \"NO\")", "coverage": [">", ">"]}, "18729": {"id": 18729, "code": "h = 2\nw = 100\nn = 200\nm=max(h,w)\nprint((n+m-1)//m)", "coverage": [">", ">", ">", ">", ">"]}, "12040": {"id": 12040, "code": "N = 11;M = 30\nans = 0\nN = 12;M = 1\nif M==1:\n  ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17407": {"id": 17407, "code": "S = \"0112\"\nif (int(S[:2])>12 or int(S[:2])==0) and (int(S[2:])>12 or int(S[2:])==0):\n    print('NA')\nelif (int(S[:2])<=12 and int(S[:2])!=0) and (int(S[2:])>12 or int(S[2:])==0):\n    print('MMYY')\nelif (int(S[2:])<=12 and int(S[2:])!=0) and (int(S[:2])>12 or int(S[:2])==0):\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "13152": {"id": 13152, "code": "x = 6\nfor i in '753':\n    if x==int(i):\n        print('YES')\n        exit()\nprint('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "5816": {"id": 5816, "code": "n = 2\nif n % 2 == 0:\n  print(int(n//2))\nelse:\n  print(int(n//2+1))", "coverage": [">", ">", ">", "!", "!"]}, "10041": {"id": 10041, "code": "N = 6\nS = \")))())\"\nR=[0 for i in range(N)]\nL=[0 for i in range(N)]\nLL=0\nRR=0\nfor i in range(N):\n  if S[i]=='(':\n    LL+=1\n  else:\n    RR+=1\n  L[i]=LL\n  R[i]=RR\ns=0\nfor i in range(N):\n  s=max(s,R[i]-L[i])\nt=s+L[N-1]-R[N-1]\nprint('('*s+S+')'*t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8121": {"id": 8121, "code": "a = 3;b = 3\nc = \"1 2 3\"\nprint((a+b-3)//(b-1))", "coverage": [">", ">", ">"]}, "6103": {"id": 6103, "code": "import math\nN = 5\nO = N // 2 + N % 2\nprint(O)", "coverage": [">", ">", ">", ">"]}, "15830": {"id": 15830, "code": "x = 64146;y = 123;z = 456\nres = (x - z) // (y + z)\nprint(res)", "coverage": [">", ">", ">"]}, "16657": {"id": 16657, "code": "a = \"D\";b = \"H\"\nS = a+b\nif (S == 'DD') or (S == 'HH'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!", ">"]}, "10265": {"id": 10265, "code": "n = 3\ns = \"())\"\nstock_left = 0\nnum_new_l = 0\nfor i in range(n):\n    if s[i] == '(':\n        stock_left += 1\n    else:\n        if stock_left > 0:\n            stock_left -= 1\n        else:\n            num_new_l += 1\nstock_right = 0\nnum_new_r = 0\nfor i in range(-1,-n-1,-1):\n    if s[i] == ')':\n        stock_right += 1\n    else:\n        if stock_right > 0:\n            stock_right -= 1\n        else:\n            num_new_r += 1\nnew_l = '(' * num_new_l\nnew_r = ')' * num_new_r\nprint(new_l + s + new_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "4367": {"id": 4367, "code": "list = ['10', '0', '15', '0', '30']\nm1 = int(list[0])*60 + int(list[1])\nm2 = int(list[2])*60 + int(list[3])\nans = m2 - m1\nprint(ans-int(list[4]))", "coverage": [">", ">", ">", ">", ">"]}, "19488": {"id": 19488, "code": "n = 10\nif n%2:\n    print(n*2)\nelse:\n    print(n)", "coverage": [">", ">", "!", "!", ">"]}, "8105": {"id": 8105, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif (N-K)%(K-1)==0:\n    ans = 1+(N-K)//(K-1)\nelse:\n    ans = 2+(N-K)//(K-1)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "689": {"id": 689, "code": "k = 101\nif k&1==0 or k%5==0:\n  print(-1)\n  exit()\nelif 7%k==0:\n  print(1)\n  exit()\nm=7\na=b=1\nwhile(m>0):\n  a=a*10%k\n  m=(m+7*a)%k\n  b+=1\nprint(b)", "coverage": [">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "6223": {"id": 6223, "code": "from bisect import *\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nres = 0\nfor i in range(n):\n    temp = b[i]\n    res += bisect_left(a, temp) * (n - bisect_right(c, temp))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12874": {"id": 12874, "code": "import math\nx = \"5\"\nprint(\"YES\" if x in \"357\" else \"NO\")", "coverage": [">", ">", ">"]}, "163": {"id": 163, "code": "s = \"codefestival\"\nK = 100\nk = K\nans = \"\"\nfor i in range(len(s)-1):\n    if(s[i] == \"a\"):\n        ans += s[i]\n        continue\n    if(ord(s[i])+k >= ord(\"z\")+1):\n        ans += \"a\"\n        k -= ord(\"z\")+1-ord(s[i])\n    else:\n        ans += s[i]\na = ord(s[-1])+k%26\nif(a > ord(\"z\")):\n    a -= 26\nans += chr(a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "8697": {"id": 8697, "code": "N = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5554": {"id": 5554, "code": "n = 5\na=0\nif n%2==0:\n  a=int(n/2)\nelse:\n  a=int(n/2)+1\nprint(a)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "12453": {"id": 12453, "code": "s = ['l', 'e', 'v', 'e', 'l']\nn = len(s)\nl = s[: (n - 1) // 2]\nr = s[(n + 1) // 2 :]\nif l == l[::-1] and r == r[::-1] and s == s[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12238": {"id": 12238, "code": "w = \"level\"\nl = len(w)\nflag = True\nfor i in range((l - 1)//2):\n  if w[i] != w[l - i - 1]:\n    flag = False\n    break\nmid = (l - 1) // 2\nmid_mid = mid // 2\nfor i in range(mid_mid + 1):\n  if w[i] != w[mid - i - 1] or not flag:\n    flag = False\n    break\n  if w[i + mid + 1] != w[l - i - 1]:\n    flag = False\n    break\nif flag:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "7177": {"id": 7177, "code": "H = 10;N = 3\nprint('Yes' if H <= sum(map(int,\"4 5 6\".split())) else 'No')", "coverage": [">", ">"]}, "17135": {"id": 17135, "code": "a = \"D\";b = \"D\"\nif a == 'H' and b == 'H':\n    result = 'H'\nif a == 'D' and b == 'H':\n    result = 'D'\nif a == 'D' and b == 'D':\n    result = 'H'\nif a == 'H' and b == 'D':\n    result = 'D'\nprint(result)", "coverage": [">", ">", "!", ">", "!", ">", ">", ">", "!", ">"]}, "5756": {"id": 5756, "code": "n = 2\nans = n // 2\nif n % 2 == 0:\n  print(ans)\nelse:\n  print(ans + 1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13115": {"id": 13115, "code": "X = 6\nCel = [3,5,7]\nif X in Cel: print('YES')\nelse: print('NO')", "coverage": [">", ">", ">", ">"]}, "3762": {"id": 3762, "code": "X = 12;Y = 3;Z = 1\nN=(X-Z)//(Y+Z)\nprint(N)", "coverage": [">", ">", ">"]}, "11212": {"id": 11212, "code": "S = \"SAT\"\nif S == 'SUN':\n    answer = (7)\nelif S == 'MON':\n    answer = (6)\nelif S == 'TUE':\n    answer = (5)\nelif S == 'WED':\n    answer = (4)\nelif S == 'THU':\n    answer = (3)\nelif S == 'FRI':\n    answer = (2)\nelif S == 'SAT':\n    answer = (1)\nprint(answer)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "9647": {"id": 9647, "code": "n = 3\ns = \"())\"\ncnt=0\nans=str()\nfor i in range(n):\n    if s[i]==\"(\":\n        cnt+=1\n        ans+=\"(\"\n    elif s[i]==\")\":\n        if cnt>0:\n            cnt-=1\n            ans+=\")\"\n        else:\n            ans=ans[::-1]\n            ans+=\"(\"\n            ans=ans[::-1]\n            ans+=\")\"\n            cnt=0\nif cnt>0:\n    while cnt>0:\n        ans+=\")\"\n        cnt-=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "7920": {"id": 7920, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif N == K:\n    print(1)\nelse:\n    print((N+K-3)//(K-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "4559": {"id": 4559, "code": "s = \"smiles\"\nn = len(s[1:-1])\nprint(s[0]+str(n)+s[-1])", "coverage": [">", ">", ">"]}, "8091": {"id": 8091, "code": "import math\nn,k=map(int,\"3 3\".split());\"1 2 3\";print([math.ceil((n-k)/(k-1))+1,1][n==k])", "coverage": [">", ">"]}, "10227": {"id": 10227, "code": "N = 6\nS = \")))())\"\nl = 0\nr = 0\nfor i in range(N):\n    if S[i]==\")\":\n        r -= 1\n        if r<0:\n            l += 1\n            r = 0\n    else:\n        r += 1\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "17050": {"id": 17050, "code": "s = ['D', 'H']\nif s[0] == s[1]:print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", ">"]}, "14441": {"id": 14441, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nincrease = False\ndecrease = False\nfor i in range(1,N):\n    if A[i-1] == A[i]:\n        continue\n    elif increase and A[i-1] < A[i]:\n        continue\n    elif decrease and A[i-1] > A[i]:\n        continue\n    elif not increase and not decrease and A[i-1] < A[i]:\n        increase = True\n    elif not increase and not decrease and A[i-1] > A[i]:\n        decrease = True\n    else:\n        count += 1\n        increase = False\n        decrease = False\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9401": {"id": 9401, "code": "a = \"2018/01/31\"\nprint(a)", "coverage": [">", ">"]}, "11411": {"id": 11411, "code": "s = \"SUN\"\nl=['SUN','MON','TUE','WED','THU','FRI','SAT']\nd=[7,6,5,4,3,2,1]\nprint(d[l.index(s)])", "coverage": [">", ">", ">", ">"]}, "7902": {"id": 7902, "code": "import math\nn = 4;k = 3\nA = \"2 3 1 4\"\nprint(math.ceil((n-1) / (k-1)))", "coverage": [">", ">", ">", ">"]}, "6529": {"id": 6529, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in range(n):\n    num1 = bisect.bisect_left(a,b[i])\n    num2 = n - bisect.bisect(c,b[i])\n    ans += num1*num2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17939": {"id": 17939, "code": "s = \"1700\"\nl = int(s[0]) * 10 + int(s[1])\nr = int(s[2]) * 10 + int(s[3])\nres = \"NA\"\nif l == 0:\n    if 1 <= r <= 12:\n        res = \"YYMM\"\n    else:\n        res = \"NA\"\nelif 1 <= l <= 12:\n    if 1 <= r <= 12:\n        res =\"AMBIGUOUS\"\n    else:\n        res = \"MMYY\"\nelse:\n    if 1 <= r <= 12:\n        res = \"YYMM\"\n    else:\n        res = \"NA\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "18785": {"id": 18785, "code": "H = 14\nW = 12\nN = 112\nif N%max(H,W)==0:\n  print(N//max(H,W))\nelse:\n  print(N//max(H,W)+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12391": {"id": 12391, "code": "S1 = \"akasaka\"\nN = len(S1)\nS2 = S1[::-1]\na = S1 == S2\nS3 = S1[:int((N - 1) / 2)]\nS4 = S3[::-1]\nb = S3 == S4\nS5 = S1[int((N + 3) / 2) - 1:]\nS6 = S5[::-1]\nc = S5 == S6\nif a and b and c:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8826": {"id": 8826, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2026": {"id": 2026, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 100;a = 100;b = 100\nprint(min(a,b), max(a+b-n, 0) )", "coverage": [">", ">", ">", ">", ">"]}, "4142": {"id": 4142, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;K = 30\nif (h2 - h1)*60 + (m2-m1) < K:\n    print('{}'.format(0))\nelse:\n    print('{}'.format((h2 - h1)*60 + (m2-m1) - K))", "coverage": [">", ">", "!", "!", ">"]}, "272": {"id": 272, "code": "from collections import deque\ns = \"xyz\"\nk = 4\na = ord(\"a\")\nl = deque(list())\nl1 = []\nfor i in range(len(s)):\n  s1 = s[i]\n  l.append(((a+26)-ord(s1))%26)\nwhile k!=0:\n    if len(l)!=0:\n        t = l.popleft()\n        if k>=t:\n            l1.append(\"a\")\n            k -= t\n        else:\n          if t==\"a\":\n            l1.append(t)\n          else:\n            l1.append(chr((ord('a')-t+26)))\n    else:\n      k %= 26\n      l1[-1] = chr(int(ord(l1[-1])+k))\n      k = 0\nl2 = []\nif len(l)>=1:\n  for t in l:\n    t %= 26\n    if t==0:\n      l2.append(\"a\")\n    else:\n      l2.append(chr((ord('a')-t+26)))\n  l1 += l2\nprint(\"\".join(l1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "2013": {"id": 2013, "code": "n = 10;a = 7;b = 5\nif n >= a+b:\n    print(min(a, b), 0)\nelse:\n    print(min(a, b), min(a, b)-(n-max(a, b)))", "coverage": [">", ">", "!", "!", ">"]}, "1919": {"id": 1919, "code": "n = 10;a = 7;b = 5\nif n < a+b:\n\tmi=a+b-n\nelse:\n\tmi=0\nprint(min(a,b),mi)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18492": {"id": 18492, "code": "h = 14\nw = 12\nn = 112\nans = 0 - -n//(max(h, w))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "16214": {"id": 16214, "code": "n = 2\na = [100, 0]\na.sort()\nk = []\nmax_a = a[-1]\nmax_half = max_a / 2\nfor i in range(n):\n    if a[i] >= max_half:\n        if i == 0:\n            k.append(a[i])\n            break\n        k.append(a[i])\n        k.append(a[i-1])\n        break\nans = 0\nif len(k) == 1:\n    ans = k[0]\nelse:\n    if abs(max_half - k[0]) < abs(max_half - k[1]):\n        ans = k[0]\n    else:\n        ans = k[1]\nprint(max_a, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]}, "14807": {"id": 14807, "code": "n = 3;p = 0\na = [1, 1, 1]\nodd = 0\neven = 0\nfor i in range(n):\n  if a[i]%2 == 0:\n    even += 1\n  else:\n    odd += 1\nif odd == 0:\n  if p == 1:\n    print(0)\n  else:\n    print (2**n)\nelse:\n  print (2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14232": {"id": 14232, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\na.append(a[n - 1])\nans = 1\ns = 0\ni = 1\nwhile i < n:\n    if not(a[s] <= a[i] <= a[i + 1]) and not(a[s] >= a[i] >= a[i + 1]):\n        s = i + 1\n        ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6148": {"id": 6148, "code": "from bisect import *\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nres = 0\nfor i in b:\n    temp_a = bisect_left(a, i)\n    temp_c = n - bisect_right(c, i)\n    res += temp_a*temp_c\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15887": {"id": 15887, "code": "x = 64145;y = 123;z = 456\nr, q = divmod(x, y + z)\nif q >= z:\n    print(r)\nelse:\n    print(r - 1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2604": {"id": 2604, "code": "a = 1;b = 7;c = 9;d = 4\nans = set()\nans.add(a)\nans.add(b)\nans.add(c)\nans.add(d)\nif 1 in ans and 9 in ans and 7 in ans and 4 in ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "478": {"id": 478, "code": "s = \"xyz\"\nk = 4\nres=[]\nfor i in range(len(s)):\n    num = ord(s[i])-97\n    if i==len(s)-1:\n        res.append(chr((num+k)%26+97))\n    elif s[i] == \"a\":\n        res.append(\"a\")\n    elif 26 - num <= k:\n        res.append(\"a\")\n        k-=26-num\n    else:\n        res.append(s[i])\nprint(\"\".join(res))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "15196": {"id": 15196, "code": "X = 64145;Y = 123;Z = 456\nresult = X // (Y + Z) - 1\nwhile X >= (result + 1) * Y + (result + 2) * Z:\n    result += 1\nprint(result)", "coverage": [">", ">", ">", "!", ">"]}, "8336": {"id": 8336, "code": "N = 5\nAU = [3, 2, 2, 4, 1]\nAD = [1, 2, 2, 2, 1]\nAUS = [AU[0]]\nADS = [AD[-1]]\nfor i in range(1, N):\n  AUS.append(AUS[-1] + AU[i])\n  ADS.append(ADS[-1] + AD[-1-i])\nADS.reverse()\nans = 0\nfor i in range(N):\n  temp = AUS[i]+ADS[i]\n  ans = max(ans, temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1991": {"id": 1991, "code": "n = 10;a = 3;b = 5\nmax_value = min(a, b)\nif a + b - n < 0:\n    min_value = 0\nelse:\n    min_value = a + b - n\nprint(f'{max_value} {min_value}')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18271": {"id": 18271, "code": "h = 2\nw = 100\nn = 200\nans=min((n+h-1)//h,(n+w-1)//w)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13462": {"id": 13462, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "3229": {"id": 3229, "code": "a = 20;b = 15\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "11836": {"id": 11836, "code": "a = 11;b = 16\nc = 11;d = 17\nif a + 1 == c and d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16374": {"id": 16374, "code": "N = 2\nA = [100, 0]\nh = A[0]/2\nr = 10**9\nv = 0\nfor a in A[1:]:\n    if r > abs(a-h):\n        r = abs(a-h)\n        v = a\nprint(str(A[0]) + ' ' + str(v))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11066": {"id": 11066, "code": "S = \"atcoder\"\nflag = 0\nN = len(S)\ns1 = int((N-1)/2)\ns2 = int((N+3)/2)\nif S[0:s1] == S[s1+1:]:\n  flag = 1\nelse:\n  flag = 0    \nif S[s2-1:] == S[:s2-2]:\n  flag = 1\nelse:\n  flag = 0\nif flag == 1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "8033": {"id": 8033, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nx = A.index(1)\ny = N - x - 1\nans = math.ceil(x / (K - 1))\nif x % (K - 1) != 0:\n    y -= K - 1 - (x % (K - 1))\nans += math.ceil(y / (K - 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14118": {"id": 14118, "code": "N = 6\nnow=0\nans=1\nS=0\nl = [1, 2, 3, 2, 2, 1]\nfor i in range(1,N):\n   X=l[i]-l[i-1]\n   X=0 if X==0 else 1 if X>0 else -1\n   if X==0:\n      continue\n   elif S ==0:\n      S=X\n   elif S != X:\n      ans+=1\n      S=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15433": {"id": 15433, "code": "x = 100000;y = 1;z = 1\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "17144": {"id": 17144, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", ">", ">", "!", "!"]}, "15514": {"id": 15514, "code": "x = 100000;y = 1;z = 1\nn = int((x-z)/(y+z))\nprint(n)", "coverage": [">", ">", ">"]}, "18085": {"id": 18085, "code": "import sys\nS = [1, 7, 0, 0]\nif len(S) != 4: sys.exit()\nif 1 <= int(str(S[0])+str(S[1])) <= 12 and 1 <= int(str(S[2])+str(S[3])) <= 12: print('AMBIGUOUS');sys.exit()\nif int(str(S[0])+str(S[1])) >= 13 and 1 <= int(str(S[2])+str(S[3])) <= 12: print('YYMM');sys.exit()\nif 0 == int(str(S[0])+str(S[1])) and 1 <= int(str(S[2])+str(S[3])) <= 12: print('YYMM');sys.exit()\nif 1 <= int(str(S[0])+str(S[1])) <= 12 and 13 <= int(str(S[2])+str(S[3])): print('MMYY');sys.exit()\nif 1 <= int(str(S[0])+str(S[1])) <= 12 and 0 == int(str(S[2])+str(S[3])): print('MMYY');sys.exit()\nprint('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7742": {"id": 7742, "code": "N = 4;K = 3\nAN = [2, 3, 1, 4]\nAN.sort()\nN = N - AN.count(AN[0])\nprint( -(-N//(K-1)) )", "coverage": [">", ">", ">", ">", ">"]}, "724": {"id": 724, "code": "k = 101\nif(k%2 == 0 or k%5 == 0):\n    print('-1')\nelse:\n    if(k%7 == 0):\n        k = k // 7\n    num = 1\n    ans = 1\n    while(True):\n        if(num%k == 0):\n            print(ans)\n            break\n        else:\n            num %= k\n            num *= 10\n            num += 1\n            ans += 1", "coverage": [">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "17524": {"id": 17524, "code": "s = \"0112\"\nx = int(s) // 100\ny = int(s) % 100\nif 1 <= x <= 12:\n  if 1 <= y <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= y <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "19254": {"id": 19254, "code": "N = 5\nif N % 2 != 0:\n    print('0')\nelse:\n    count = 0\n    i = 1\n    while True:\n        dif = (N // 2) // (5 ** i)\n        count += dif\n        if dif == 0:\n            break\n        i += 1\n    print(count)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "9720": {"id": 9720, "code": "n = 8\nstring = \"))))((((\"\nstart_cnt = 0\nend_cnt = 0\ntmp = 0\nfor s in string:\n    if s == \")\":\n        if tmp == 0:\n            start_cnt += 1\n        else:\n            tmp -= 1\n    else:\n        tmp += 1\ntmp = 0\nfor s in string[::-1]:\n    if s == \"(\":\n        if tmp == 0:\n            end_cnt += 1\n        else:\n            tmp -= 1\n    else:\n        tmp += 1\nfor _ in range(start_cnt):\n    print(\"(\", end = \"\")\nprint(string, end = \"\")\nfor _ in range(end_cnt):\n    print(\")\", end = \"\")\nprint()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "12917": {"id": 12917, "code": "x = 6\nif (x == 3) or (x == 5) or (x == 7):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "11173": {"id": 11173, "code": "s = \"level\"\nn = len(s)\nt = s[:(n - 1) // 2]\nu = s[(n + 1) // 2:]\nprint(\"YNeos\"[any([s != s[::-1], t != t[::-1], u != u[::-1]])::2])", "coverage": [">", ">", ">", ">", ">"]}, "16206": {"id": 16206, "code": "n = 5\nL = [6, 9, 4, 2, 11]\nL .sort()\nmaxL = L[-1]\nli = [abs(x-maxL/2) for x in L]\na = li.index(min(li))\nprint(maxL,L[a])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4643": {"id": 4643, "code": "s = \"smiles\"\nhead, *center, tail = s\nprint(head + str(len(center)) + tail)", "coverage": [">", ">", ">"]}, "17069": {"id": 17069, "code": "h = \"D\";d = \"D\"\nif h == d:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "18773": {"id": 18773, "code": "h = 14\nw = 12\nn = 112\ntotal = h*w\nkesu = max(h, w)\nif n%kesu==0:\n    print(n//kesu)\nelse:\n    print(n // kesu + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3798": {"id": 3798, "code": "import sys\nsys.setrecursionlimit(10**6)\nx = 12;y = 3;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "3499": {"id": 3499, "code": "A = 12;B = 4\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", "!", "!", ">"]}, "19352": {"id": 19352, "code": "N = 3\nif N == 1:\n    print(2)\nelif N %2 == 0:\n    print(N)\nelse:\n    print(2*N)", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "12420": {"id": 12420, "code": "s = \"atcoder\"\na=s[:len(s)//2+1//2]\nb=s[len(s)//2+1:]\nif s==s[::-1] and a==a[::-1] and b==b[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6997": {"id": 6997, "code": "H = 210;N = 5\nl = [31, 41, 59, 26, 53]\ntotal=0\nfor k in range(N):\n  total+=l[k]\nif total>=H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2142": {"id": 2142, "code": "n = 100;a = 100;b = 100\nans_max=min(a,b)\nans_min=max(a+b-n,0)\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">"]}, "10341": {"id": 10341, "code": "a = 100;b = 50;k = 4\nN=[]\nfor i in range(1,min(a,b)+1):\n    if (a%i==0 and b%i==0):\n            N.append(i)\nN.reverse()\nprint(N[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5510": {"id": 5510, "code": "import math\nprint(math.ceil(int(\"2\")/2))", "coverage": [">", ">"]}, "7264": {"id": 7264, "code": "H = 20;N = 3\nA_list = map(int, \"4 5 6\".split())\nprint(\"Yes\" if sum(A_list) >= H else \"        No   \")", "coverage": [">", ">", ">"]}, "9627": {"id": 9627, "code": "n = 3\ns = \"())\"\nr_cnt, l_cnt = 0, 0\nfor i in range(n):\n    if s[i] == \"(\":\n        r_cnt += 1\n    else:\n        if r_cnt == 0:\n            l_cnt += 1\n        else:\n            r_cnt -= 1\nprint(l_cnt * \"(\" + s + r_cnt * \")\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "13753": {"id": 13753, "code": "i = [10, 0, 15, 0, 30]\nprint((i[2]-i[0])*60+(i[3]-i[1])-i[4])", "coverage": [">", ">"]}, "9486": {"id": 9486, "code": "s = \"2017/01/07\"\nprint(\"2018\"+s[4:])", "coverage": [">", ">"]}, "6305": {"id": 6305, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor j in range(N):\n    a=bisect_left(A, B[j])\n    c=bisect_right(C, B[j])\n    ans+=a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2333": {"id": 2333, "code": "N = 0;M = 3\na = N*(N-1) // 2\nb = M*(M-1) // 2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "15110": {"id": 15110, "code": "n = 3;p = 0\nA = [1, 1, 1]\nf = 0\nfor a in A:\n    if a%2:\n        f = 1\n        break\nif f:\n    ans = 2**(n-1)\nelse:\n    if p:\n        ans = 0\n    else:\n        ans = 2**n\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "3516": {"id": 3516, "code": "A = 20;B = 30\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15468": {"id": 15468, "code": "X = 12;Y = 3;Z = 1\ncount=0\nwhile Y*(count+1)+Z*(count+2)<=X:\n  count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "14654": {"id": 14654, "code": "n = 3;p = 0\nx = 1\ny = 0\na = [1, 1, 1]\nfor ai in a:\n  if ai%2 == 0:\n    x += x\n    y += y\n  else:\n    t = x\n    x += y\n    y += t\nif p == 0:\n  print(x)\nelse:\n  print(y)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "484": {"id": 484, "code": "S = ['x', 'y', 'z']\nK = 4\nN = len(S)\nord_a = ord('a')\nT = [0]*N\nfor i in range(N):\n    s = S[i]\n    a = ord(s)\n    r = (ord_a + 26 - a) % 26\n    if r <= K:\n        K -= r\n        s = 'a'\n    T[i] = s\nif K > 0:\n    t = T[N - 1]\n    a = ord(t)\n    a = ord_a + (a - ord_a + K) % 26\n    T[N - 1] = chr(a)\nprint(''.join(T))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "1844": {"id": 1844, "code": "n = 10;a = 7;b = 5\nif n>=(a+b):\n    ans1=min(a,b)\n    ans2=0\nelse:\n    ans1=min(a,b)\n    ans2=(a+b)-n\nprint(ans1,ans2)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "4323": {"id": 4323, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nA=60*a+b\nB=60*c+d\nprint(B-A-k)", "coverage": [">", ">", ">", ">"]}, "4694": {"id": 4694, "code": "S = \"smiles\"\nprint(S[0] + str(len(S) - 2) + S[-1])", "coverage": [">", ">"]}, "1548": {"id": 1548, "code": "n = \"112\";l = [1, 1, 2]\nfor i in range(min(set(l)),max(set(l))+1):\n  ans=int(str(i)*3)\n  if ans>=int(n):\n    print(ans)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "12688": {"id": 12688, "code": "X = 5\nprint(\"YES\") if X in [3,5,7] else print(\"NO\")", "coverage": [">", ">"]}, "6018": {"id": 6018, "code": "div = 50;rem = 0\nprint(div + bool(rem))", "coverage": [">", ">"]}, "12764": {"id": 12764, "code": "import sys\nX = 5\nif not ( 1 <= X <= 9 ): sys.exit()\nprint('YES') if X == 3 or X == 5 or X == 7 else print('NO')", "coverage": [">", ">", ">", ">"]}, "18391": {"id": 18391, "code": "import math\nH = 2\nW = 100\nN = 200\nprint(min(math.ceil(N / H), math.ceil(N / W)))", "coverage": [">", ">", ">", ">", ">"]}, "14760": {"id": 14760, "code": "n = 1;m = 1\nn -= 1\ndat = [50]\niseven = True\nfor i in range(len(dat)):\n    if dat[i] %2 == 1:\n        iseven = False\nif iseven:\n    if m == 0:\n        print(2**(n+1))\n    else:\n        print(0)\nelse:\n    if n == 0:\n        print(0)\n    else:\n        print(pow(2, n))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "5590": {"id": 5590, "code": "n = 5\ns=int(n/2+0.9)\nprint(s)", "coverage": [">", ">", ">"]}, "7298": {"id": 7298, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if sum(a)>=h else 'No')", "coverage": [">", ">", ">"]}, "14889": {"id": 14889, "code": "import math\nn = 1;p = 1\na = [50]\nodd=0\neven=0\nfor i in range(n):\n  if a[i]%2==0:\n    even+=1\n  else:\n    odd+=1\nans=0\nt=1\nwhile t<=odd:\n  res=math.factorial(odd)//(math.factorial(t)*math.factorial(odd-t))\n  t+=2\n  if even!=0:\n    w=0\n    while w<=even:\n      res1=math.factorial(even)//(math.factorial(w)*math.factorial(even-w))\n      w+=1\n      ans+=res*res1\n  else:\n    ans+=res\nif p==1:\n  print(ans)\nelse:\n  print(2**n-ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "120": {"id": 120, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n        if ord(\"z\")-ord(s[i])+1<=k:\n                k -= (ord(\"z\")-ord(s[i])+1)%26\n                s[i] = \"a\"\nif k: s[-1] = chr((ord(s[-1])+k-ord(\"a\"))%26+ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11562": {"id": 11562, "code": "S = \"SUN\"\nDAYS_TO_NUM = {'SUN':0, 'MON': 1, 'TUE': 2, 'WED': 3, 'THU': 4, 'FRI': 5, 'SAT': 6}\nprint(7 - DAYS_TO_NUM[S])", "coverage": [">", ">", ">"]}, "8280": {"id": 8280, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\np = min(a)\na += [p]\nans,i,temp = 0,0,0\nwhile i<n:\n  if a[i]==p:\n    m = -(-(i-temp)//(k-1))\n    ans += m\n    temp += m*(k-1)+1\n    i = temp\n  else:\n    i += 1\nans += -(-(n-temp)//(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "1308": {"id": 1308, "code": "n = \"111\"\nans_1 = 0\nans_2 = 0\nx = int(n[0])\nfor i in range(len(n)):\n    ans_1 += x * 10**i\n    ans_2 += (x+1)*10**i\nif ans_1 >= int(n):\n    print(ans_1)\nelse:\n    print(ans_2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5166": {"id": 5166, "code": "s = ['x', 'y', 'z']\nprint(s[0] + str(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "16221": {"id": 16221, "code": "n = 5\naa = [2, 4, 6, 9, 11]\nx = max(aa)\ny = aa[0]\nfor i in range(1, n - 1):\n    if abs(x / 2 - y) > abs(x / 2 - aa[i]):\n        y = aa[i]\nprint(\"{} {}\".format(x, y))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1567": {"id": 1567, "code": "n = 111\nfor i in range(n,1000):\n    s=str(i)\n    if s[0]==s[1]==s[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "16179": {"id": 16179, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nk = a[n-1]\nr = a[0]\ndis = abs(a[n-1]/2-a[0])\nfor i in range(n-1):\n    if dis > abs(a[n-1]/2-a[i]):\n        dis = abs(a[n-1]/2-a[i])\n        r = a[i]\nprint(k,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14920": {"id": 14920, "code": "n = 3;p = 0\na = [1, 1, 1]\nlength = len(a)\neven = len([i for i in a if i % 2 == 0])\nodd = len([i for i in a if i % 2 == 1])\nif length == even and p == 1:\n    print(0)\nelif length == even:\n    print(2 ** n)\nelse:\n    print(2 ** n // 2)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "8463": {"id": 8463, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18676": {"id": 18676, "code": "h = 2\nw = 100\nn = 200\na = max(h, w)\nif n%a == 0:\n    print(n//a)\nelse:\n    print(n//a + 1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "7586": {"id": 7586, "code": "H = 20;N = 3\nlist_A = [4, 5, 6]\nsum_list_A = sum(list_A)\nif sum_list_A >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16738": {"id": 16738, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    print(b)\nelif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    elif b == \"D\":\n        print(\"H\")", "coverage": [">", ">", "!", ">", ">", ">", "!", "!"]}, "16164": {"id": 16164, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\namax = a[-1]\ntmp1 = amax + 1\nfor i in a[:n-1]:\n    tmp2 = i - amax/2\n    if tmp2 > tmp1:\n        break\n    else:\n        r = i\n        tmp1 = abs(tmp2)\nprint(amax, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18336": {"id": 18336, "code": "H = 14\nW = 12\nN = 112\nA = max(H, W)\nans = (N + A - 1) // A\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9503": {"id": 9503, "code": "n = \"2017/01/31\"\nprint(n.replace('2017','2018'))", "coverage": [">", ">"]}, "4338": {"id": 4338, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt=(h2-h1)*60+m2-m1-k\nprint(t if t>=0 else 0)", "coverage": [">", ">", ">"]}, "14151": {"id": 14151, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nflg = -1\nfor i in range(1, n):\n    if a[i-1] == a[i]:\n        continue\n    elif a[i-1] < a[i]:\n        if flg == 1 or flg == -1:\n            flg = 1\n            continue\n        else:\n            ans += 1\n            flg = -1\n    else:\n        if flg == 0 or flg == -1:\n            flg = 0\n            continue\n        else:\n            ans += 1\n            flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "13872": {"id": 13872, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nsq = 0\na = A[0]\nfor i in range(1,n):\n    if sq == 0 and A[i] < a:\n        sq = -1\n    elif sq == 0 and A[i] > a:\n        sq = 1\n    elif (sq == 1 and A[i] < a) or (sq == -1 and A[i] > a):\n        ans += 1\n        sq = 0\n    a = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14481": {"id": 14481, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt,i = 0,0\nwhile i<n:\n    while i+1<n and a[i]==a[i+1]: i+=1\n    if i+1<n and a[i]<a[i+1]:\n        while i+1<n and a[i]<=a[i+1]: i+=1\n    elif i+1<n and a[i]>a[i+1]:\n        while i+1<n and a[i]>=a[i+1]: i+=1\n    cnt+=1\n    i+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7386": {"id": 7386, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nfor i in range(n):\n    h = h - a[i]\n    if h <= 0:\n        print('Yes')\n        exit(0)\nprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18600": {"id": 18600, "code": "import math\nH = 14\nW = 12\nN = 112\nif H >= W:\n    print(math.ceil(N / H))\nelse:\n    print(math.ceil(N / W))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "7228": {"id": 7228, "code": "H = 20;N = 3\nA = [4, 5, 6]\nans = ['No', 'Yes'][sum(A) >= H]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8595": {"id": 8595, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\ncandy=[a,b]\nn_i=0\nn_j=0\nscore=0\nfor i in range(n):\n    tmp_a = a[:i+1]\n    tmp_b = b[i:]\n    tmp_score = sum(tmp_a) + sum(tmp_b)\n    score = max(score,tmp_score)\nprint(score)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5118": {"id": 5118, "code": "s = \"xyz\"\nl=len(s)-2\nprint(str(s[0]),l,str(s[-1]),sep='')", "coverage": [">", ">", ">"]}, "14862": {"id": 14862, "code": "n = 3;p = 0\nA = [1, 1, 1]\nA0=A.count(0)\nA1=A.count(1)\nif p==1 and A1==0:\n    print(0)\nelif p==0 and A1==0:\n    print(2**A0)\nelse:\n    print((2**A0)*(2**A1)//2)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "6303": {"id": 6303, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\ncnt=0\nfor x in b:\n     a_=bisect.bisect_left(a,x)\n     c_=n-bisect.bisect_right(c,x)\n     cnt+=a_*c_\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9683": {"id": 9683, "code": "n = 3\ns = \"())\"\nlp=0\nrp=0\nfor i in range(n):\n  if s[i]=='(':\n    rp+=1\n  else:\n    rp=rp-min(rp,1)\nfor i in range(n-1,-1,-1):\n  if s[i]==')':\n    lp+=1\n  else:\n    lp=lp-min(lp,1)\nprint('('*max(0,lp)+s+max(0,rp)*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "8453": {"id": 8453, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [2, 3, 2, 4, 4, 3, 5]\nl = []\nfor i in range(N):\n    l.append(sum(A[:N-i])+sum(B[:i+1]))\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14941": {"id": 14941, "code": "inp1 = 2;inp2 = 0\nc = [1, 1]\nadd = sum(c)\nif add:\n    ans = 2**(inp1-1)\nelse:\n    ans = 2**inp1*(1-inp2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "8845": {"id": 8845, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nres = [[0]*N for _ in range(2)]\nres[0][0] = A1[0]\nres[1][N-1] = A2[N-1]\nfor i in range(1, N):\n    res[0][i] = res[0][i-1]+A1[i]\n    res[1][N-i-1] = res[1][N-i]+A2[N-i-1]\nr = 0\nfor i in range(N):\n    r = max(res[0][i]+res[1][i], r)\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17414": {"id": 17414, "code": "S = 1700\nx=S//100\ny=S%100\nyymm=1<=y<=12\nmmyy=1<=x<=12\nans=\"\"\nif yymm and mmyy:\n    ans=\"AMBIGUOUS\"\nelif yymm:\n    ans=\"YYMM\"\nelif mmyy:\n    ans=\"MMYY\"\nelse:\n    ans=\"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "18769": {"id": 18769, "code": "h = 3\nw = 7\nn = 10\nprint(int((n-1)/max(h, w))+1)", "coverage": [">", ">", ">", ">"]}, "10530": {"id": 10530, "code": "a = 100;b = 50;k = 4\ni=min(a,b)+1\nwhile(k):\n  i-=1\n  if max(a%i,b%i)==0:\n    k-=1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1357": {"id": 1357, "code": "n = \"111\"\nprint(n[0]*3) if int(n) <= int(n[0]*3) else print(str(int(n[0])+1)*3)", "coverage": [">", ">"]}, "19423": {"id": 19423, "code": "N = 10\nprint(N*(N%2+1))", "coverage": [">", ">"]}, "549": {"id": 549, "code": "a = \"a\"\nn=len(a)\nm = 25\nans=\"\"\nfor i in range(n-1):\n  if a[i]==\"a\":\n    ans += \"a\"\n    continue\n  x=ord(a[i])-97\n  if m>=26-x:\n    ans += \"a\"\n    m -= 26-x\n  else:\n    ans += a[i]\nans += chr((ord(a[n-1])-97+m)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "18827": {"id": 18827, "code": "import sys\nH = 14\nW = 12\nN = 112\nprint((N - 1) // max(H, W) + 1)", "coverage": [">", ">", ">", ">", ">"]}, "8195": {"id": 8195, "code": "from math import ceil\nn = 3;k = 3\na_list = [1, 2, 3]\nprint(ceil((n - 1) / (k - 1)))", "coverage": [">", ">", ">", ">"]}, "11507": {"id": 11507, "code": "week=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\ns = \"SUN\"\nif s in week:\n    x=week.index(s)\n    print(7-x)", "coverage": [">", ">", ">", ">", ">"]}, "4188": {"id": 4188, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt = (h2 - h1) * 60 + (m2 - m1)\nans = t - k\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4512": {"id": 4512, "code": "a = \"xyz\"\nprint(f\"{a[0]}{len(a)-2}{a[len(a)-1]}\")", "coverage": [">", ">"]}, "19225": {"id": 19225, "code": "N = 12\nif N % 2 == 1:\n    print(0)\n    exit()\nans = 0\nN //= 2\ni = 1\nwhile N >= 5 ** i:\n    ans += (N // 5 ** i)\n    i += 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "10220": {"id": 10220, "code": "n = 3\ns = \"())\"\np=0\nq=0\nfor i in s:\n  if i=='(':\n    p+=1\n  else:\n    if p>=1:\n      p-=1\n    else:\n      q+=1\n      p=0\nans='('*q+s+')'*p\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "3282": {"id": 3282, "code": "import sys\ninput = sys.stdin.readline\nA = 12;B = 4\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3367": {"id": 3367, "code": "A = 12;B = 4\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "11331": {"id": 11331, "code": "S = \"SUN\"\nif S == 'MON':\n    print(6)\nelif S == 'TUE':\n    print(5)\nelif S == 'WED':\n    print(4)\nelif S == 'THU':\n    print(3)\nelif S == 'FRI':\n    print(2)\nelif S == 'SAT':\n    print(1)\nelse:print(7)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">"]}, "10951": {"id": 10951, "code": "s = \"level\"\nn = len(s)\nsformer = s[:int((n - 1) / 2)]\nslatter = s[int((n + 1) / 2):]\nif s == s[-1::-1] and sformer == sformer[-1::-1] and slatter == slatter[-1::-1]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "9849": {"id": 9849, "code": "n = 3\ns = \"())\"\nl, r = 0, 0\nfor i in range(n):\n  if s[i] == \"(\":\n    r += 1\n  else:\n    if r:\n      r -= 1\n    else:\n      l += 1\nans = \"(\"*l + s + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "6428": {"id": 6428, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nd = 0\ne = 0\nans = 0\nfor i in b:\n    while i > a[min(d,n-1)] and d <= n-1:\n        d += 1\n    while i >= c[min(e,n-1)] and e < n:\n        e += 1\n    ans += d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "4913": {"id": 4913, "code": "s = \"smiles\"\nfir=s[0]\nlas=s[-1]\ns=s[1:]\ns=s[:-1]\nprint(fir+str(len(s))+las)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6957": {"id": 6957, "code": "h = 210;n = 5\nlist01 = ['31', '41', '59', '26', '53']\nlist02 = [int(a) for a in list01]\nif sum(list02) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16783": {"id": 16783, "code": "a = \"D\";b = \"H\"\nprint('H'if (a=='H' and b=='H') or (a=='D'and b=='D')else 'D')", "coverage": [">", ">"]}, "7556": {"id": 7556, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\nans=0\npower=0\nfor i in range(n):\n    power+=a[i]\n    if power>=h:\n        ans=1\n        break\nif ans==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "4300": {"id": 4300, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nT1 = H1 * 60 + M1\nT2 = H2 * 60 + M2\nif T2 < T1:\n  T2 = T2 + 24 * 60\nprint(T2-T1-K)", "coverage": [">", ">", ">", ">", "!", ">"]}, "5105": {"id": 5105, "code": "s = \"smiles\"\nfirst_letter = s[0]\nlast_letter = s[-1]\nnumber = str(len(s) - 2)\nprint(first_letter + number + last_letter)", "coverage": [">", ">", ">", ">", ">"]}, "9588": {"id": 9588, "code": "s = \"2017/01/07\"\nprint(s.replace(s[0:4], '2018'))", "coverage": [">", ">"]}, "3245": {"id": 3245, "code": "a = 20;b = 30\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", ">", "!", "!", ">"]}, "13640": {"id": 13640, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c)", "coverage": [">", ">"]}, "7944": {"id": 7944, "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint((N-1 + K-1 -1)//(K-1))", "coverage": [">", ">", ">"]}, "6791": {"id": 6791, "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\nA.sort(reverse=True)\nmax_point = sum(A[:n])\nans = 'Yes'\nif max_point < h:\n    ans = 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "18548": {"id": 18548, "code": "import math\nH = 3\nW = 7\nN = 10\nMax = max(H,W)\nprint(math.ceil(N/Max))", "coverage": [">", ">", ">", ">", ">", ">"]}, "842": {"id": 842, "code": "k = 101\nif k%2 == 0 or k%5 == 0:\n    print(-1)\n    exit()\ni = 0\nmod = 0\nwhile True:\n    mod = (mod*10 + 7)%k\n    i += 1\n    if mod == 0:\n        print(i)\n        break", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2831": {"id": 2831, "code": "s = \"35753\"\ninf = float('inf')\nmin_ = inf\nfor i in range(len(s)-2):\n    tmp = int(s[i:i+3])\n    if abs(753 - tmp) < min_:\n        min_ = abs(753 - tmp)\nprint(min_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8753": {"id": 8753, "code": "N = 4\nh = [1, 1, 1, 1]\nl = [1, 1, 1, 1]\nc = 0\nfor i in range(N):\n    c = max(sum(h[0:i+1])+sum(l[i:N+1]), c)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2515": {"id": 2515, "code": "n = \"1 9 7 4\"\nif '1' in n and '9' in n and '7' in n and '4' in n:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "7109": {"id": 7109, "code": "h = 210;n = 5\na = map(int,\"31 41 59 26 53\".split())\nif sum(a) >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "5045": {"id": 5045, "code": "S = \"smiles\"\nA=str(len(S)-2)\nprint(S[0]+A+S[len(S)-1])", "coverage": [">", ">", ">"]}, "826": {"id": 826, "code": "k = 101\ncount=1\nnum=7\nfor _ in range(k):\n    if num%k == 0:\n        print(count)\n        break\n    else:\n        count += 1\n        num = (num % k)*10 + 7\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "13054": {"id": 13054, "code": "c = \"5\"\nif c in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "11075": {"id": 11075, "code": "S = \"atcoder\"\nflag = 0\nfor i in range(0, len(S), 1):\n\tif S[i] != S[len(S)-1-i]:\n\t\tflag = 1\nfor i in range(0, len(S)//2, 1):\n\tif S[i] != S[len(S)//2-1-i]:\n\t\tflag = 1\nif flag == 0:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16094": {"id": 16094, "code": "n = 20;m = 30\nprint(max(n-2*m, 0))", "coverage": [">", ">"]}, "10518": {"id": 10518, "code": "a = 100;b = 50;k = 4\nmin_ = min(a,b)\ndivisors = []\nfor i in range(1,min_+1,1):\n    if(a%i == 0 and b%i == 0 ):\n        divisors.append(i)\nprint(sorted(divisors,reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "548": {"id": 548, "code": "a = \"xyz\"\nn=len(a)\nm = 4\nans=\"\"\nfor i in range(n-1):\n  if a[i]==\"a\":\n    ans += \"a\"\n    continue\n  x=ord(a[i])-97\n  if m>=26-x:\n    ans += \"a\"\n    m -= 26-x\n  else:\n    ans += a[i]\nans += chr((ord(a[n-1])-97+m)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "1680": {"id": 1680, "code": "N = 10;A = 7;B = 5\nS=min(A,B)\nT=0\nif A+B >N:\n  T=(A+B)-N\nprint(S,T)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12489": {"id": 12489, "code": "a = 1;b = 1;k = 1\nnum = min(a, b)\ncnt = 0\nwhile cnt < k:\n    if a%num == 0 and b%num == 0:\n        cnt += 1\n        num -= 1\n    else:\n        num -= 1\nprint(num + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1517": {"id": 1517, "code": "r = \"112\"\nn = list(r)\nx = int(n[0])*100 + int(n[0])*10 + int(n[0])\nif x < int(r):\n  print( ((int(n[0])+1)*100 + (int(n[0])+1)*10 + int(n[0])+1))\nelse:\n  print(x)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13703": {"id": 13703, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nif H1 == H2:\n    ans = M2 - M1\nelse:\n    ans = (H2 - H1) * 60\n    ans += M2 - M1\nans -= K\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "6382": {"id": 6382, "code": "import bisect\nfrom collections import defaultdict\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\nb_counts = []\nfor b in Bs[::-1]:\n    count = len(Cs) - bisect.bisect(Cs, b)\n    if len(b_counts) > 0:\n        count += b_counts[-1]\n    b_counts.append(count)\nb_counts = b_counts[::-1]\ntotal = 0\nfor a in As:\n    i = bisect.bisect(Bs, a)\n    if i >= len(Bs):\n        continue\n    total += b_counts[i]\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8713": {"id": 8713, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18640": {"id": 18640, "code": "import math\na = 2\nb = 100\nx = 200\nprint(math.ceil(x/max(a,b)))", "coverage": [">", ">", ">", ">", ">"]}, "6938": {"id": 6938, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nprint(\"Yes\" if sum(A)>=H else \"No\")", "coverage": [">", ">", ">"]}, "9287": {"id": 9287, "code": "li = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nli[3] = '8'\ns = ''.join(li)\nprint(s)", "coverage": [">", ">", ">", ">"]}, "4187": {"id": 4187, "code": "string = \"10 0 12 0 120\"\nX = 0\nli = []\nfor a in range(len(string)):\n    if string[a] == \" \":\n        li.append(string[X:a])\n        X = a+1\nli.append(string[X:])\nfor aa in range(len(li)):\n    li[aa] = int(li[aa])\nh1 = li[0]\nm1 = li[1]\nh2 = li[2]\nm2 = li[3]\nk = li[4]\nTime = (h2 * 60 + m2) - (h1 * 60 + m1) - k\nprint(int(Time))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10114": {"id": 10114, "code": "n = 8\ns = \"))))((((\"\nfrom collections import deque\nq = deque([])\ncnt = 0\nfor i in range(n):\n    if s[i]==')':\n        if cnt >0:\n            cnt-=1\n        else:\n            q.appendleft('(')\n        q.append(')')\n    else:\n        q.append('(')\n        cnt += 1\nif cnt:\n    for _ in range(cnt):\n        q.append(')')\nprint(''.join(q))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "10204": {"id": 10204, "code": "n = 8\ns = \"))))((((\"\nl = 0\nr = 0\nfor si in s:\n  if si == \"(\":\n    r += 1\n  else:\n    if r == 0:\n      l += 1\n    else:\n      r -= 1\nans = \"\"\nfor _ in range(l):\n  ans += \"(\"\nans += s\nfor _ in range(r):\n  ans += \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "19242": {"id": 19242, "code": "n = 12\nif n%2 == 1:\n    print(0)\nelse:\n    ans = 0\n    while n >= 5:\n        ans += (n//5)//2\n        n //= 5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "18188": {"id": 18188, "code": "S = \"1905\"\nyy = int(S[0:2])\nmm = int(S[2:])\nyymm = False\nmmyy = False\nif yy > 0 and yy < 13:\n    mmyy = True\nif mm > 0 and mm < 13:\n    yymm = True\nif yymm and mmyy :\n    print(\"AMBIGUOUS\")\nelif yymm and not mmyy:\n    print(\"YYMM\")\nelif not yymm and mmyy:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "19219": {"id": 19219, "code": "N = 5\nif N%2==1:\n  print(0)\nelse:\n  score=0\n  while N>=10:\n    score+=N//10\n    N=N//5\n  print(score)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8056": {"id": 8056, "code": "import math\ns = [8, 3]\nn=s[0]\nk=s[1]-1\ns = [7, 3, 1, 8, 4, 6, 2, 5]\nind=s.index(1)\nprint(math.ceil((n-1)/(k)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4193": {"id": 4193, "code": "import math\nimport re\nimport copy\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nw1 = h1*60 + m1\nw2 = h2 * 60 + m2\nw3 = (w2-w1+24*60)%(24*60)\nw3 = w3 - k\nprint(w3)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11677": {"id": 11677, "code": "s = \"SUN\"\nif s == \"SUN\":\n    print(7)\nelif s =='MON':\n    print(6)\nelif s == \"TUE\":\n    print(5)\nelif s == \"WED\":\n    print(4)\nelif s == \"THU\":\n    print(3)\nelif s == \"FRI\":\n    print(2)\nelif s == \"SAT\":\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "16341": {"id": 16341, "code": "n = 2\narr = [100, 0]\ni = max(arr)\narr.remove(i)\nj = min(arr, key=lambda a: min(abs(i//2-a), abs((i+1)//2-a)))\nprint(i, j)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3136": {"id": 3136, "code": "s = \"35753\"\nans = abs(753 - int(s[0] + s[1] + s[2]))\nfor i in range(1,len(s) - 2):\n    n = s[i]+ s[i + 1] + s[i + 2]\n    ans = min(ans,abs(int(n) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15904": {"id": 15904, "code": "a = 20;b = 30\nb2 = b * 2\nr = 0 if a <= b2 else a - b2\nprint(r)", "coverage": [">", ">", ">", ">"]}, "9191": {"id": 9191, "code": "S = \"2017/01/31\"\nprint('2018' + S[4:])", "coverage": [">", ">"]}, "13002": {"id": 13002, "code": "x = 5\nif x == 3:\n    print(\"YES\")\nelif x == 5:\n    print(\"YES\")\nelif x == 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "7216": {"id": 7216, "code": "H = 211;n = 5\nprint(\"Yes\" if H <= sum(map(int,\"31 41 59 26 53\".split())) else \"No\")", "coverage": [">", ">"]}, "11308": {"id": 11308, "code": "weekdays = [\"\", \"SAT\", \"FRI\", \"THU\", \"WED\",\"TUE\",\"MON\", \"SUN\"]\nw = \"SAT\"\nprint(weekdays.index(w))", "coverage": [">", ">", ">"]}, "7432": {"id": 7432, "code": "h = 20;n = 3\na = [4, 5, 6]\na.sort(reverse=True)\nfor v in a:\n  h -= v\n  if h <= 0:\n    print('Yes')\n    break\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "6239": {"id": 6239, "code": "from bisect import bisect_left,bisect_right\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    num1 = bisect_left(A,b)\n    num2 = bisect_right(C,b)\n    ans += num1*(n-num2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6866": {"id": 6866, "code": "H = 20;N = 3\nA = [4, 5, 6]\ntotal = sum(A)\nr = 'Yes' if H <= total else 'No'\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "18358": {"id": 18358, "code": "h = 2\nw = 100\nn = 200\nc = n // max(h,w)\nif(n % max(h,w) != 0):c+=1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7861": {"id": 7861, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nl=n-k\nr=k-1\nif l%r==0:\n  print(l//r+1)\nelse:\n  print(l//r+2)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "6320": {"id": 6320, "code": "import bisect\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ntotal = 0\nfor b in B:\n    total += bisect.bisect_left(A, b) * (len(C) - bisect.bisect_right(C, b))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3506": {"id": 3506, "code": "if __name__ == '__main__':\n    a = 20;b = 15\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "6748": {"id": 6748, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a)>=h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3271": {"id": 3271, "code": "a = 20;b = 15\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "17857": {"id": 17857, "code": "s = \"0112\"\na=\"Y\"\nb=\"Y\"\nif 0<int(s[0:2])<13:\n    a=\"MY\"\nif 0<int(s[2:5])<13:\n    b=\"MY\"\nif a==b==\"Y\":\n    ans=\"NA\"\nelif a==\"Y\" and b==\"MY\":\n    ans=\"YYMM\"\nelif a==\"MY\" and b==\"Y\":\n    ans=\"MMYY\"\nelse:\n    ans=\"AMBIGUOUS\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "12512": {"id": 12512, "code": "import math\na = 1;b = 1;k = 1\ng = math.gcd(a,b)\nc = 0\ni = 1\nfor i in range(g,0,-1) :\n    if g%i == 0 :\n        c+=1\n        if c==k :\n            break\nprint(i)     ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18169": {"id": 18169, "code": "s = \"1700\"\nmonths = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\nif s[:2] in months and s[2:] in months:\n\tprint(\"AMBIGUOUS\")\nelif s[:2] in months and s[2:] not in months:\n\tprint(\"MMYY\")\nelif s[:2] not in months and s[2:] in months:\n\tprint(\"YYMM\")\nelse:\n\tprint(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5117": {"id": 5117, "code": "s = \"smiles\"\nl=len(s)-2\nprint(str(s[0]),l,str(s[-1]),sep='')", "coverage": [">", ">", ">"]}, "2209": {"id": 2209, "code": "n = 10;a = 3;b = 5\nprint(a if a<b else b, 0 if a+b<n else a+b-n)", "coverage": [">", ">"]}, "3333": {"id": 3333, "code": "\u3042 = 20;\u3044 = 30\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "7837": {"id": 7837, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif N == K:\n    print(1)\nelse:\n    cnt = 1\n    N -= K\n    while N > 0:\n        cnt += 1\n        N -= K\n        N += 1\n    print(cnt)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "19539": {"id": 19539, "code": "N = 3\na = N\nwhile a % 2 != 0:\n    a += N\nelse:\n    print(a)", "coverage": [">", ">", ">", ">", "!", ">"]}, "2256": {"id": 2256, "code": "n = 100;a = 100;b = 100\nmn = None\nmx = None\nmx = min(a, b)\nif n >= a+b:\n    mn = 0\nelse:\n    mn = a+b-n\nprint(mx, mn)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "9804": {"id": 9804, "code": "n = 3\nx = ['(', ')', ')']\nsta = 0\nleft = 0\nfor i in range(n):\n    if x[i] == '(':\n        sta += 1\n    else:\n        if sta == 0:\n            left += 1\n        else:\n            sta -= 1\ns = []\nfor i in range(left):\n    s.append('(')\nfor i in range(n):\n    s.append(x[i])\nfor i in range(sta):\n    s.append(')')\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17545": {"id": 17545, "code": "S = [0, 1, 1, 2]\nif 1 <= S[0]*10 + S[1] <= 12 and 1 <= S[2]*10 + S[3] <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= S[0]*10 + S[1] <= 12 and (S[2]*10 + S[3] > 12 or S[2]*10 + S[3] == 0):\n    print(\"MMYY\")\nelif (S[0]*10 + S[1] > 12 or S[0]*10 + S[1] == 0)  and  1 <= S[2]*10 + S[3] <= 12:\n    print(\"YYMM\")\nelif (S[0]*10 + S[1] > 12 or S[0]*10 + S[1] == 0) and (S[2]*10 + S[3] > 12 or S[2]*10 + S[3] == 0):\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3460": {"id": 3460, "code": "a = 12;b = 4\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "6375": {"id": 6375, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor j in range(n):\n    bind = j\n    top = n\n    bot = -1\n    while top-bot > 1:\n        mid = (top+bot)//2\n        if b[bind] > a[mid]:bot = mid\n        else:top = mid\n    aind = bot\n    l = -1\n    r = n\n    while r-l> 1:\n        cen = (l+r)//2\n        if b[bind] < c[cen]:r = cen\n        else:l = cen\n    cind = r\n    ans +=(aind+1)*(n-cind)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7691": {"id": 7691, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nh = 210;n = 5\na = [31, 41, 59, 26, 53]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5323": {"id": 5323, "code": "n = 5\nprint(int(n/2)) if n%2 == 0 else print(int(n/2+1))", "coverage": [">", ">"]}, "10586": {"id": 10586, "code": "a = 8;b = 12;k = 2\nw_list=[]\nnum=min(a,b)+1\nfor i in range(1,num):\n    if a%i==0 and b%i==0:\n        w_list.append(i)\nw_list.sort(reverse=True)\nprint(w_list[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12664": {"id": 12664, "code": "if int(\"5\") in (3,5,7):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "16403": {"id": 16403, "code": "n = 2\na = [100, 0]\na.sort()\nm = max(a)\nb = [abs(i - m / 2) for i in a]\nprint(m, a[b.index(min(b))])", "coverage": [">", ">", ">", ">", ">", ">"]}, "6051": {"id": 6051, "code": "n = 100\nprint(int(n/2)+n%2)", "coverage": [">", ">"]}, "642": {"id": 642, "code": "k = 2\nok = False\nfor i in range(1, k+1):\n   if i == 1:\n      a = 7 % k\n   else:\n      anext = (a * 10 + 7) % k\n      a = anext\n   if a == 0:\n      print(i)\n      ok = True\n      break\nif not ok:\n   print(-1)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "10032": {"id": 10032, "code": "N = 6\nS = [')', ')', ')', '(', ')', ')']\ncount=0\nLR=[0,0]\nfor i in range(N):\n    if S[i]==\"(\":\n        count+=1\n    else:\n        if count==0:\n            LR[0]+=1\n            continue\n        count-=1\nLR[1]=count\nfor i in range(2):\n    for j in range(LR[i]):\n        if i==0:\n            S.insert(0,\"(\")\n        else:\n            S.append(\")\")\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8357": {"id": 8357, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=sum(a1)+a2[n-1]\nsum_a=ans\nfor i in range(n-1):\n  sum_a=sum_a-a1[n-1-i]+a2[n-2-i]\n  ans=max(ans,sum_a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16849": {"id": 16849, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n  print(b) \nelif a == \"D\" and b == \"H\":\n  print(\"D\")\nelse:\n  print(\"H\")", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "16440": {"id": 16440, "code": "n = 2\na = [100, 0]\nai = max(a)\na.sort(key=lambda x: abs(ai//2 - x))\naj = a[0]\nfor i in a:\n    if ai==i: continue\n    else:\n        aj = i\n        break\nprint('{} {}'.format(ai, aj))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15053": {"id": 15053, "code": "N = 2;P = 0\nAs = [1, 3]\ndic = {0:0, 1:0}\nfor a in As:\n  if a % 2 == 0:\n    dic[0] += 1\n  else:\n    dic[1] += 1\nif P == 1 and dic[1] == 0:\n  print(0)\n  exit()\nrlt = 2**dic[0]\ntmp = 0\nfor i in range(dic[1]+1):\n  if i == 0:\n    t = 1\n  else:\n    t = t*(dic[1]+1-i)//i\n  if (P == 0 and i%2==0) or (P == 1 and i%2==1):\n    tmp += t\nrlt *= tmp\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "1146": {"id": 1146, "code": "n = \"111\"\nif int(n) <= int(n[0]) * 111:\n    print(int(n[0]) * 111)\nelse:\n    print((int(n[0]) + 1) * 111)", "coverage": [">", ">", ">", "!", "!"]}, "17873": {"id": 17873, "code": "S = \"1700\"\nmonth_list = [\"01\",\"02\",\"03\",\"04\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif S[0:2] in month_list:\n    if S[2:4] in month_list:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if S[2:4] in month_list:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "18677": {"id": 18677, "code": "from math import ceil\nh = 3\nw = 7\nn = 10\nif h >= w:\n    print(ceil(n/h))\nelse:\n    print(ceil(n/w))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18737": {"id": 18737, "code": "H = 14\nW = 12\nN = 112\nprint((N+max(H,W)-1)//max(H,W));", "coverage": [">", ">", ">", ">"]}, "4156": {"id": 4156, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nans=0\nif m1>m2: ans=(h2-h1-1)*60+60-m1+m2\nelse: ans=(h2-h1)*60+m2-m1\nprint(ans-k)", "coverage": [">", ">", ">", ">", ">"]}, "16438": {"id": 16438, "code": "N = 2\na = [100, 0]\nn = max(a)\nr = 0\nfor i in range(N):\n  if(abs(a[i] -  (n/2)) < abs(r -  (n/2))):\n    r = a[i]\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "10922": {"id": 10922, "code": "s = \"atcoder\"\nn = len(s)\nprint('Yes' if s==s[::-1] and s[:(n-1)//2]==s[:(n-1)//2][::-1] and s[(n+1)//2:] == s[(n+1)//2:][::-1] else 'No')", "coverage": [">", ">", ">"]}, "5753": {"id": 5753, "code": "n = 2\nprint(int(n/2+0.9))", "coverage": [">", ">"]}, "19478": {"id": 19478, "code": "s = 999999999\nprint(s if s%2 == 0 else s*2)", "coverage": [">", ">"]}, "7112": {"id": 7112, "code": "h = 20;n = 3\nprint('Yes' if sum(map(int, \"4 5 6\".split()))>=h else 'No' )", "coverage": [">", ">"]}, "13482": {"id": 13482, "code": "t1 = \"haiku\";t2 = \"atcoder\";t3 = \"tasks\"\nprint(t1,t2,t3)", "coverage": [">", ">"]}, "12875": {"id": 12875, "code": "import math\nx = \"6\"\nprint(\"YES\" if x in \"357\" else \"NO\")", "coverage": [">", ">", ">"]}, "9344": {"id": 9344, "code": "S = \"2017/01/07\"\nday=S[-6:]\nprint(\"2018\"+day)", "coverage": [">", ">", ">"]}, "2807": {"id": 2807, "code": "s = \"35753\"\nm=1000\nfor i in range(len(s)-2):\n    tmp=s[i:i+3]\n    if abs(753-int(tmp))<m:\n        m=abs(753-int(tmp))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19088": {"id": 19088, "code": "n = 5\nans=0\nif n%2==1:\n  print(ans)\nelse:\n  i=10\n  while n>i-1:\n    ans+=n//i\n    i*=5\n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16510": {"id": 16510, "code": "import sys\ninput = sys.stdin.readline\nN = 2\nA = [0, 100]\ntmp = A[-1]\nans = 0\nfor i in A[:-1]:\n    if abs(A[-1] // 2 - i) < tmp:\n        tmp = abs(A[-1] // 2 - i)\n        ans = i\n    elif A[-1] % 2 != 0 and abs(A[-1] // 2 - i + 1) < tmp:\n        tmp = abs(A[-1] // 2 - i + 1)\n        ans = i\nprint(A[-1], ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14280": {"id": 14280, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\np = 0\nm = 0\npre = A[0]\nfor a in A[1:]:\n    if a > pre:\n        p = 1\n    elif a < pre:\n        m = 1\n    if p == 1 and m == 1:\n        ans += 1\n        p = 0\n        m = 0\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4251": {"id": 4251, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nstart = H1*60 + M1\nfinish = H2*60 + M2 - K\nif finish - start >= 0:\n  print(finish - start)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10742": {"id": 10742, "code": "S = \"akasaka\"\nt=len(S)\nprint(\"YNeos\"[sum(1for i in range(t) if S[i]!=S[~i] )!=0 or S[(t+2)//2:]!=S[:(t-1)//2]::2])", "coverage": [">", ">", ">"]}, "15544": {"id": 15544, "code": "x = 12;y = 3;z = 1\nx -= 2 * z\nprint(x // (y + z) + x % (y + z) // y)", "coverage": [">", ">", ">"]}, "12428": {"id": 12428, "code": "S = \"level\"\nn = len(S)\nconfS = S[::-1]\nflag1 = False\nflag2 = False\nflag3 = False\ns1 = S[0:int((n-1)/2)]\nconfs1 = s1[::--1]\ns2 = S[int((n+3)/2)-1:n]\nconfs2 = s2[::-1]\nif S == confS:\n  flag1 = True\nif s1 == confs1:\n  flag2 = True\nif s2 == confs2:\n  flag3 = True\nif flag1 and flag2 and flag3:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "16743": {"id": 16743, "code": "a = \"H\";b = \"H\"\nprint(\"H\" if (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\") else \"D\")", "coverage": [">", ">"]}, "8695": {"id": 8695, "code": "N = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2776": {"id": 2776, "code": "s = \"1234567876\"\nm = 1000\nfor i in range(len(s)):\n    x = int(s[i:i+3])\n    if m > abs(753-x):\n        m = abs(753-x)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5089": {"id": 5089, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nk=len(s)-2\nprint(s[0]+str(k)+s[-1])", "coverage": [">", ">", ">"]}, "12582": {"id": 12582, "code": "A = 1;B = 1;K = 1\nn = min(A, B)\nwhile K:\n  if A % n == 0 and B % n == 0:\n    K -= 1\n  if K == 0:\n    print(n)\n  n -= 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10879": {"id": 10879, "code": "s = \"atcoder\"\nn = len(s)\nif s[:(n-1)//2] ==s[:(n-1)//2][::-1] and s == s[::-1] and s[(n+3)//2-1:] == s[(n+3)//2-1:][::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "8651": {"id": 8651, "code": "N = 5\nA_1 = [3, 2, 2, 4, 1]\nA_2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2820": {"id": 2820, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s)-2):\n  num = abs(753-(int(s[i]+s[i+1]+s[i+2])))\n  ans = min(ans,num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11513": {"id": 11513, "code": "n = \"SAT\"\ndic = {\"SUN\":7,\n       \"MON\":6,\n       \"TUE\":5,\n       \"WED\":4,\n       \"THU\":3,\n       \"FRI\":2,\n       \"SAT\":1}\nprint(dic[str(n)])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14936": {"id": 14936, "code": "n = 1;p = 1\na = [0]\nodd = sum(a)\nans = 0\nif odd:\n    ans = 2**(n-1)\nelse:\n    ans = 2**n*(1-p)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10349": {"id": 10349, "code": "import math\na = 8;b = 12;k = 2\ncnt=0\nfor i in range(math.gcd(a,b),0,-1):\n    if a%i==0 and b%i==0:\n        cnt+=1\n    if cnt==k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4121": {"id": 4121, "code": "h = 10;m = 0;h2 = 12;m2 = 0;k = 120\nans = (h2 * 60 + m2) - (h * 60 + m) - k\nprint(ans)", "coverage": [">", ">", ">"]}, "9090": {"id": 9090, "code": "s = \"2017/01/07\"\nprint(\"2018/01/{}{}\".format(s[-2],s[-1]))", "coverage": [">", ">"]}, "18973": {"id": 18973, "code": "n = 5\nm = n//10\nf = []\nwhile m:\n    f.append(m%5)\n    m //= 5\nprint(0 if n%2 else sum(a*(5**(i+1)//4) for i, a in enumerate(f)))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14307": {"id": 14307, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nnb = 0\nda = 0\nfor i in range(len(A)-1):\n    if A[i] > A[i+1] and da > 0:\n        nb += 1\n        da = 0\n    elif A[i] < A[i+1] and da < 0:\n        nb += 1\n        da = 0\n    else:\n        if A[i+1] - A[i] != 0:\n            da = A[i+1] - A[i]\nprint(nb + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "13906": {"id": 13906, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans=1\nvec=0\nfor i in range(N-1):\n  now=A[i+1]-A[i]\n  if vec*now<0:\n    ans+=1\n    vec=0\n  elif vec==0:\n    vec=now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9415": {"id": 9415, "code": "S = \"2017/01/31\"\nprint(S.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "9435": {"id": 9435, "code": "a = \"2017/01/31\"\na = a.replace('2017','2018')\nprint(a)", "coverage": [">", ">", ">"]}, "3004": {"id": 3004, "code": "s = \"35753\"\nmin_abs = 1000\nfor i in range(len(s) - 2):\n    if abs(753 - int(s[i: i + 3])) < min_abs:\n        min_abs = abs(753 - int(s[i: i + 3]))\nprint(min_abs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9028": {"id": 9028, "code": "import itertools\na = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nmax_distance = e - a\nif max_distance <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9463": {"id": 9463, "code": "s = \"2017/01/31\"\nu=list(s)\nu[3]=\"8\"\nk=\"\".join(u)\nprint(k)", "coverage": [">", ">", ">", ">", ">"]}, "8988": {"id": 8988, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nm=min(a,b,c,d,e)\nM=max(a,b,c,d,e)\nif M-m<=k:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8374": {"id": 8374, "code": "n = 7\nlst1 = [3, 3, 4, 5, 4, 5, 3]\nlst2 = [5, 3, 4, 4, 2, 3, 2]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16528": {"id": 16528, "code": "n = 2\na = [100, 0]\nma = max(a)\na.sort(key=lambda x:abs(x-ma/2))\nr = a[0] if a[0]!=ma else a[1]\nprint(ma, r)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5053": {"id": 5053, "code": "s = \"internationalization\"\nprint(s[0] + str(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "7860": {"id": 7860, "code": "import math\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans = n - k\nc = 0\nif ans > 0:\n    c = math.ceil(ans / (k-1))\nprint(c+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2070": {"id": 2070, "code": "n = 10;a = 7;b = 5\nmx=min(a,b)\nmn=max(mx-(n-max(a,b)),0)\nprint(str(mx)+\" \"+str(mn))", "coverage": [">", ">", ">", ">"]}, "2905": {"id": 2905, "code": "a = \"1234567876\"\nans = 10000\nfor i in range(len(a)-2):\n  ans = min(abs(753-int(a[i:i+3])),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18915": {"id": 18915, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit()\nans = 0\ncnt = 0\nones = 0\nketa = []\ncnt = 5 * 2\nwhile n >= cnt:\n    ans += n // cnt\n    cnt *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17481": {"id": 17481, "code": "s = \"1905\"\nupper_input = int(s[:2])\nlower_input = int(s[2:])\nif upper_input >= 1 and upper_input<= 12:\n  if lower_input >= 1 and lower_input <= 12:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if lower_input >= 1 and lower_input <= 12:\n    print('YYMM')\n  else:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "4435": {"id": 4435, "code": "s = \"internationalization\"\ncount=0\nfor i in range(len(s)):\n    if i == 0 or i == len(s)-1:\n        continue\n    else:  \n        count=count+1\nr=s[0] + \"\" + str(count) + \"\" + s[len(s)-1]\nprint(r)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7221": {"id": 7221, "code": "H = 20;N = 3\nA = [4, 5, 6]\nA.sort(reverse = True)\nfor i in A:\n  H -= i\n  if H <= 0:\n    print('Yes')\n    exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19106": {"id": 19106, "code": "from math import ceil, log\nn = 12\nif n%2==1:\n    print(0)\nelse:\n    print(sum([n//(2*pow(5,i)) for i in range(1,ceil(log(n+1,5)))]))", "coverage": [">", ">", ">", "!", "!", ">"]}, "2999": {"id": 2999, "code": "s = \"1111111111\"\nans = 753\nfor i in range(len(s)-2):\n  x = abs(753 - int(s[i:i+3]))\n  ans = min(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6246": {"id": 6246, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    idx_a = bisect.bisect_left(A,b)\n    idx_c = bisect.bisect_right(C,b)\n    ans += idx_a * (N - idx_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15188": {"id": 15188, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\nx = 64146;y = 123;z = 456\nx-= 2*z\nans = x//(y+z)\nif x%(y+z)>=y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9609": {"id": 9609, "code": "s = \"2017/01/31\"\ns_right = s[4:]\nprint('2018' + s_right)", "coverage": [">", ">", ">"]}, "8120": {"id": 8120, "code": "a = 4;b = 3\nc = \"2 3 1 4\"\nprint((a+b-3)//(b-1))", "coverage": [">", ">", ">"]}, "16839": {"id": 16839, "code": "a = \"H\";b = \"H\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n    print('H')\nelif (a == 'H' and b == 'D') or (a == 'D' and b == 'H'):\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "10280": {"id": 10280, "code": "N = 3\nS = \"())\"\nl = 0\nr = 0\nfor c in S:\n    if c == '(':\n        l += 1\n    else:\n        if l != 0:\n            l -= 1\n        else:\n            r += 1\nprint('('*r + S + ')'*l)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "9418": {"id": 9418, "code": "s = \"2017/01/07\"\nprint(s[0:3] + \"8\" + s[4:])", "coverage": [">", ">"]}, "16260": {"id": 16260, "code": "n = 2\na = [100, 0]\na.sort()\nmx = a[-1]\nhalf = mx / 2\ndist = abs(half - a[0])\nans = 0\nfor i in range(1,n):\n    if dist > abs(half - a[i]):\n        dist = min(dist,abs(half - a[i]))\n        ans = a[i]\nprint(mx,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5969": {"id": 5969, "code": "import math\nN = 2\nans = math.ceil(N / 2.0)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "7230": {"id": 7230, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nans = ['No', 'Yes'][sum(A) >= H]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8444": {"id": 8444, "code": "N = 4\nA = [[],[]]\nA = [[1, 1, 1, 1], []]\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1655": {"id": 1655, "code": "n = 10;a = 3;b = 5\nif a < b:\n  max = a\nelse:\n  max = b\nmin = (a + b) - n\nif min < 0:\n  min = 0\nprint(max, min)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "5088": {"id": 5088, "code": "s = ['x', 'y', 'z']\nans = s[0]\nans += str(len(s[1:-1]))\nans += s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17541": {"id": 17541, "code": "S = \"1905\"\nif int(S[0: 2]) >= 13 or int(S[0: 2]) == 0:\n    if int(S[2: 4]) == 0 or int(S[2: 4]) >= 13:\n        print('NA')\n    else:\n        print('YYMM')\nelse:\n    if int(S[2: 4]) == 0 or int(S[2: 4]) >= 13:\n        print('MMYY')\n    else:\n        print('AMBIGUOUS')", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "7951": {"id": 7951, "code": "from math import ceil\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "4961": {"id": 4961, "code": "s = \"smiles\"\nm=len(s[1:-1])\nprint('{}{}{}'.format(s[0],m,s[-1]))", "coverage": [">", ">", ">"]}, "18252": {"id": 18252, "code": "H = 14\nW = 12\nN = 112\nX = max(H, W)\nprint((N + X - 1) // X)", "coverage": [">", ">", ">", ">", ">"]}, "6569": {"id": 6569, "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBnum=[]\na=0\nfor i in range(n):\n    while a!=n and B[i]>A[a] :\n        a+=1\n    Bnum.append(a)\nCnum=[]\nb=0\ns=0\nfor i in range(n):\n    while b!=n and C[i]>B[b]:\n        s+=Bnum[b]\n        b+=1\n    Cnum.append(s)\nprint(sum(Cnum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12043": {"id": 12043, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "15054": {"id": 15054, "code": "N = 3;P = 0\nAs = [1, 1, 1]\ndic = {0:0, 1:0}\nfor a in As:\n  if a % 2 == 0:\n    dic[0] += 1\n  else:\n    dic[1] += 1\nif P == 1 and dic[1] == 0:\n  print(0)\n  exit()\nrlt = 2**dic[0]\ntmp = 0\nfor i in range(dic[1]+1):\n  if i == 0:\n    t = 1\n  else:\n    t = t*(dic[1]+1-i)//i\n  if (P == 0 and i%2==0) or (P == 1 and i%2==1):\n    tmp += t\nrlt *= tmp\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3595": {"id": 3595, "code": "a = 20;b = 30\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "14587": {"id": 14587, "code": "n = 1;p = 1\na = [50]\nif all(i%2==0 for i in a):\n    print(0 if p==1 else 2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "5455": {"id": 5455, "code": "N = 5\nif N/2 == N//2:\n    print(N//2)\nelse:\n    print(N//2+1)", "coverage": [">", ">", "!", "!", ">"]}, "14918": {"id": 14918, "code": "n = 2;p = 0\na = [1, 3]\nlength = len(a)\neven = len([i for i in a if i % 2 == 0])\nodd = len([i for i in a if i % 2 == 1])\nif length == even and p == 1:\n    print(0)\nelif length == even:\n    print(2 ** n)\nelse:\n    print(2 ** n // 2)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "11302": {"id": 11302, "code": "s = \"SAT\"\ndict1={7:'SUN',6:'MON',5:'TUE',4:'WED',3:'THU',2:'FRI',1:'SAT'}\nkeys = [k for k, v in dict1.items() if v == s]\nprint(keys[0])", "coverage": [">", ">", ">", ">"]}, "4893": {"id": 4893, "code": "S = \"xyz\"\nS = list(S)\nn = len(S)\nprint(S[0] + str(n-2) + S[n-1])", "coverage": [">", ">", ">", ">"]}, "16506": {"id": 16506, "code": "n = 2\na = [100, 0]\na.sort(reverse=True)\nt2 = a[0]\nx = a[0]//2\nans = 1\nfor i in range(1,n):\n  t = abs(x - a[i])\n  if t < t2:\n    t2 = t\n    ans = i\nprint(a[0],a[ans])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6324": {"id": 6324, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nab = [0 for i in range(n)]\nans = 0\nfor i in range(n):\n  ab[i] = ab[i-1] + bisect.bisect_left(a, b[i])\nfor i in range(n):\n  tmp = bisect.bisect_left(b, c[i])\n  if tmp != 0:\n  \tans += ab[tmp-1] \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18919": {"id": 18919, "code": "n = 12\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "19115": {"id": 19115, "code": "n = 5\nans = 0\nif n >= 2 and n % 2 == 0:\n    j = 10\n    while n >= j:\n        ans += (n // j)\n        j *= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "5705": {"id": 5705, "code": "n = 2\nx = n // 2\ny = n % 2\nprint(x + y)", "coverage": [">", ">", ">", ">"]}, "16745": {"id": 16745, "code": "a = \"D\";b = \"D\"\nprint(\"H\" if (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\") else \"D\")", "coverage": [">", ">"]}, "12905": {"id": 12905, "code": "X = \"6\"\nif X in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "1365": {"id": 1365, "code": "n = 750\nfor i in range(1,10):\n    if int(n)>int(str(i)*3):\n        continue\n    print(str(i)*3)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "8615": {"id": 8615, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11818": {"id": 11818, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D1 != D2 - 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18961": {"id": 18961, "code": "N = 12\nif N % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    ind = 1\n    while True:\n        m = 5**ind\n        if m > N:\n            break\n        r = N//m\n        r //= 2\n        ans += r\n        ind += 1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14192": {"id": 14192, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nL = [A[0]]\nfor i in range(1, N):\n  if A[i] != A[i - 1]:\n    L.append(A[i])\nN = len(L)\nif N == 1:\n  print(1)\n  exit()\nf = L[1] > L[0]\nans = 1\ni = 2\nwhile i < N:\n  if (L[i] > L[i - 1]) != f:\n    ans += 1\n    if i == N - 1:\n      break\n    i += 1\n    f = L[i] > L[i - 1]\n  i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17124": {"id": 17124, "code": "a = \"H\";b = \"H\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n    print(\"H\")\nif (a == \"H\" and b == \"D\") or (a == \"D\" and b == \"H\"):\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!"]}, "17947": {"id": 17947, "code": "s = 112\nb = s%100\na = (s - b)//100\nif (0 < a <= 12 and 0 < b <= 12):\n    print(\"AMBIGUOUS\")\nelif (0 < a <= 12):\n    print(\"MMYY\")\nelif (0 < b <= 12):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "14715": {"id": 14715, "code": "N = 3;P = 0\nAlist = [1, 1, 1]\nguuki = [A%2 for A in Alist]\nodd = guuki.count(1)\neven = guuki.count(0)\nif odd == 0:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "7650": {"id": 7650, "code": "H = 20;N = 3\ndamege = map(int, \"4 5 6\".split())\ntotal_damege = sum(damege)\nif H - total_damege <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13669": {"id": 13669, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nt = c*60+d - (a*60+b)\nprint(max(0,t-k))", "coverage": [">", ">", ">"]}, "2542": {"id": 2542, "code": "N = {'9', '4', '1', '7'}\nif '1' in N and '9' in N and '7' in N and '4' in N:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "5257": {"id": 5257, "code": "c = \"i\";s = ['n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o'];d = \"n\"\nprint(c+str(len(s))+d)", "coverage": [">", ">"]}, "10939": {"id": 10939, "code": "s = \"level\"\nn = len(s)\nsd = s[::-1]\na = s[:int((n-1)/2)]\nad = a[::-1]\nb = s[int((n+3)/2-1):]\nbd = b[::-1]\nif s == sd and a == ad and b == bd:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4318": {"id": 4318, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nprint(60*(h2-h1)+m2-m1-k)", "coverage": [">", ">"]}, "13897": {"id": 13897, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans=1\ntemp=0\nfor i in range(1,n):\n  if a[i-1]<a[i] and temp==0:\n    temp=1\n  elif a[i-1]>a[i] and temp==0:\n    temp=2\n  elif a[i-1]>a[i] and temp==1:\n    temp=0\n    ans=ans+1\n  elif a[i-1]<a[i] and temp==2:\n    temp=0\n    ans=ans+1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1270": {"id": 1270, "code": "import math\nn = 111\nprint(math.ceil(n/111)*111)", "coverage": [">", ">", ">"]}, "17629": {"id": 17629, "code": "s = ['0', '1', '1', '2']\na = int(\"\".join(s[:2]))\nb = int(\"\".join(s[2:]))\nc = 0\nd = 0\nif a and a <= 12:\n    c = 1\nif b and b <= 12:\n    d = 1\nif c and d:\n    print(\"AMBIGUOUS\")\nelif c:\n    print(\"MMYY\")\nelif d:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6759": {"id": 6759, "code": "HP = 210;N = 5\nATK = [31, 41, 59, 26, 53]\nprint('Yes' if sum(ATK) >= HP else 'No')", "coverage": [">", ">", ">"]}, "1345": {"id": 1345, "code": "N = 111\nif N % 111:\n    print(111*(N//111 + 1))\nelse:\n    print(111*int((N/111)))", "coverage": [">", ">", "!", "!", ">"]}, "3272": {"id": 3272, "code": "a = 20;b = 30\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "3202": {"id": 3202, "code": "S = \"35753\"\nn = len(S)\nans = 10**9\nfor i in range(n - 2):\n    tmp = int(S[i:i + 3])\n    diff = abs(753 - tmp)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16897": {"id": 16897, "code": "a = \"D\";b = \"H\"\nx= a==\"H\"\ny= b==\"H\"\nif x^y:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11863": {"id": 11863, "code": "a = 11;b = 30\nc = 12;d = 1\nif a == 12:\n  if c == 1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if c == a + 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "2629": {"id": 2629, "code": "a = \"1 9 7 4\"\nif '1' in a and '7' in a and '9' in a and '4' in a:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "6235": {"id": 6235, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor b in B: \n    s = bisect.bisect_left(A,b) \n    t = bisect.bisect_right(C,b) \n    ans += s*(N-t)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6398": {"id": 6398, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBC = {}\nfor i in range(N):\n  rank = N - bisect.bisect_right(C, B[i])\n  BC[B[i]] = rank\nBCS = [0 for _ in range(N)]\nBCS[N-1] = BC[B[N-1]]\nfor i in range(N-2,-1,-1):\n  BCS[i] =  BCS[i+1] + BC[B[i]]\nans = 0\nfor i in range(N):\n  rank = bisect.bisect_right(B, A[i])\n  if rank < N:\n    ans += BCS[rank]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15402": {"id": 15402, "code": "x = 64145;y = 123;z = 456\nans = 0\nx -= z\nans += x // (y + z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "4924": {"id": 4924, "code": "s = \"internationalization\"\ns1, s2, s3 = s[0], s[1:-1], s[-1]\nans = s1 + str(len(s2)) + s3\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18733": {"id": 18733, "code": "h = 3\nw = 7\nn = 10\nm = max(w,h)\nif n > n //m * m:\n    ans = n // m + 1\nelse:\n    ans = n // m\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11079": {"id": 11079, "code": "s = \"akasaka\"\nn = len(s)\nn2 = (n+1)//2\nfor i in range(n):\n  if(s[i] != s[n-i-1]):\n    print(\"No\")\n    exit()\nfor i in range((n-1)//2):\n  if(s[i] != s[n2-2-i]):\n    print(\"No\")\n    exit()\n  if(s[n2+i] != s[n-i-1]):\n    print(\"No\")\n    exit()\nprint(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!", ">"]}, "1908": {"id": 1908, "code": "n = 100;a = 100;b = 100\nif a+b <= n:\n    min_p = 0\nelse:\n    min_p = abs(n-a-b)\nmax_p = min([a,b])\nprint(max_p, min_p)", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "4656": {"id": 4656, "code": "s = ['x', 'y', 'z']\nans = \"{0}{1}{2}\".format(s[0],len(s)-2,s[-1])\nprint(ans)", "coverage": [">", ">", ">"]}, "17550": {"id": 17550, "code": "s = \"1905\"\nif 1 <= int(s[2:4]) <= 12 and 1 <= int(s[0:2]) <= 12:\n    print('AMBIGUOUS')\nelif 1 <= int(s[2:4]) <= 12:\n    print('YYMM')\nelif 1 <= int(s[0:2]) <= 12:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "12313": {"id": 12313, "code": "s = \"atcoder\"\nn = len(s)\ns_re =s[::-1]\ns_first = s[:(n-1)//2]\ns_first_re = s_first[::-1]\ns_second = s[(n+3)//2-1:]\ns_second_re = s_second[::-1]\nprint(['No','Yes'][s == s_re and s_first==s_first_re and s_second == s_second_re])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4218": {"id": 4218, "code": "chr = ['10', '0', '15', '0', '30']\na = (int(chr[2]) - int(chr[0]))*60 + (int(chr[3]) - int(chr[1])) - int(chr[-1])\nprint(a)", "coverage": [">", ">", ">"]}, "3150": {"id": 3150, "code": "s = \"1234567876\"\np = 999\nfor i in range(len(s) - 2 ):\n    j = s[i:i+3]\n    j = int(j)\n    if p > abs(753 - j):\n        p = abs(753 - j)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18003": {"id": 18003, "code": "s = \"1905\"\nl = list(s)\nx = int(l[0]+l[1])\ny = int(l[2]+l[3])\nif 0 < x < 13 and (y > 12 or y == 0):\n    print(\"MMYY\")\nelif (x > 12 or x == 0) and 0 < y < 13:\n    print(\"YYMM\")\nelif x > 12 or y > 12 or (x == 0 and y == 0):\n    print(\"NA\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "7343": {"id": 7343, "code": "n = 210;m = 5\nli = [31, 41, 59, 26, 53]\nif n>sum(li):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "1439": {"id": 1439, "code": "n = 111\nq, mod = divmod(n,111)\nif mod == 0:\n    print(q*111)\nelse:\n    print((q+1)*111)", "coverage": [">", ">", ">", ">", "!", "!"]}, "7291": {"id": 7291, "code": "import random\nH = 10;N = 3\nA = ['4', '5', '6']\nfor i in range(N):\n    A[i] = int(A[i])\nif (1 <= H, H <= 10 ** 9) and (1 <= N, N <= 10 ** 5):\n    for j in range(len(A)):\n        H -= A[j]\n    if H <= 0:\n        print('Yes')\n    if H > 0:\n        print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "13612": {"id": 13612, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(',',' '))", "coverage": [">", ">"]}, "16360": {"id": 16360, "code": "from bisect import bisect_left, bisect_right\nn = 5\nal = [6, 9, 4, 2, 11]\nal.sort()\nai = al[-1]\nif ai%2 == 0:\n    aj_best = ai//2\n    ind = bisect_right(al, aj_best) - 1\n    ind = ind if 0 <= ind < n else None\n    val1 = al[ind] if ind is not None else 0\n    ind = bisect_left(al, aj_best)\n    ind = ind if 0 <= ind < n else None\n    val2 = al[ind] if ind is not None else ai\n    if abs(aj_best-val1) <= abs(aj_best-val2):\n        aj = val1\n    else:\n        aj = val2\nelse:\n    aj_best = ai//2\n    ind = bisect_right(al, aj_best) - 1\n    ind = ind if 0 <= ind < n else None\n    val1 = al[ind] if ind is not None else 0\n    ind = bisect_left(al, aj_best)\n    ind = ind if 0 <= ind < n else None\n    val2 = al[ind] if ind is not None else ai\n    if abs(aj_best-val1) <= abs(aj_best+1-val2):\n        aj = val1\n    else:\n        aj = val2\nprint(ai,aj)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15195": {"id": 15195, "code": "X = 64146;Y = 123;Z = 456\nresult = X // (Y + Z) - 1\nwhile X >= (result + 1) * Y + (result + 2) * Z:\n    result += 1\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "7193": {"id": 7193, "code": "v = 10;n = 3\narr = [4, 5, 6]\nprint(\"Yes\") if sum(arr[-n:]) >= v else print(\"No\")", "coverage": [">", ">", ">"]}, "14882": {"id": 14882, "code": "n = 2;p = 0\na_list = [1, 1]\ndp = [[0] * 2 for x in range(n+1)]\nif a_list[0] == 0:\n    dp[0][0] = 1\nelse:\n    dp[0][1] = 1\nfor i in range(n):\n    _a = a_list[i]\n    if _a == 0:\n        dp[i+1][0] = dp[i][0]*2\n        dp[i+1][1] = dp[i][1]*2\n    else:\n        dp[i+1][0] = dp[i][1]+dp[i][0]\n        dp[i+1][1] = dp[i][1]+dp[i][0]\nprint(dp[n][p])        ", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "16833": {"id": 16833, "code": "A = \"H\";B = \"H\"\nif A == B:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "3432": {"id": 3432, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 20;b = 30\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2247": {"id": 2247, "code": "N = 100;A = 100;B = 100\nMAX = min(A, B)\nMIN = max(0,A+B-N)\nprint(MAX,MIN)", "coverage": [">", ">", ">", ">"]}, "13248": {"id": 13248, "code": "a = \"haiku,atcoder,tasks\"\nb = a.replace(',', ' ')\nprint(b)", "coverage": [">", ">", ">"]}, "11325": {"id": 11325, "code": "s = \"SUN\"\nres = 0\nif s == \"SUN\":\n  res = 7\nelif s == \"MON\":\n  res = 6\nelif s == \"TUE\":\n  res = 5\nelif s == \"WED\":\n  res = 4\nelif s == \"THU\":\n  res = 3\nelif s == \"FRI\":\n  res = 2\nelif s == \"SAT\":\n  res = 1\nprint(res)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "3374": {"id": 3374, "code": "a = 20;b = 15\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "13814": {"id": 13814, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nup = None\nprev = None\nfor v in a:\n    if prev == v:\n        continue\n    if prev is not None:\n        if up is None:\n            up = (prev <= v)\n        else:\n            if (prev <= v) != up:\n                ans += 1\n                up = None\n    prev = v\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6208": {"id": 6208, "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nimport bisect\nfor b in B:\n    ia = bisect.bisect_left(A, b)\n    ic = n-bisect.bisect_right(C, b)\n    ans += ia*ic\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16669": {"id": 16669, "code": "a = \"D\";b = \"H\"\nif a==\"H\":\n  print(b)\nelse:\n  print([\"H\",\"D\"][b==\"H\"])", "coverage": [">", ">", "!", "!", ">"]}, "10451": {"id": 10451, "code": "import math\na = 8;b = 12;c = 2\nd=math.gcd(a,b)\nfor i in range(d,0,-1):\n  if d%i==0:\n    c-=1\n    if c==0:\n      print(i)\n      break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6241": {"id": 6241, "code": "from bisect import bisect_left,bisect_right\nn = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    num1 = bisect_left(A,b)\n    num2 = bisect_right(C,b)\n    ans += num1*(n-num2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13490": {"id": 13490, "code": "s = \"happy,newyear,enjoy\"\nprint (s[:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "6036": {"id": 6036, "code": "import sys\nimport math\ninput = sys.stdin.readline\nn = 100\nprint(math.ceil(n/2))", "coverage": [">", ">", ">", ">", ">"]}, "3370": {"id": 3370, "code": "A = 12;B = 4\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "5788": {"id": 5788, "code": "N = 5\nans = (N +1)//2\nprint(ans)", "coverage": [">", ">", ">"]}, "6926": {"id": 6926, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\na=0\nfor i in A:\n    a+=i\nif a>=H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7507": {"id": 7507, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif H - sum(A) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "6476": {"id": 6476, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\ni = 0\nj = 0\nfor b in B:\n    while i < N and A[i] < b:\n        i += 1\n    while j < N and C[j] <= b:\n        j += 1\n    ans += i * (N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1092": {"id": 1092, "code": "S = \"112\"\nif int(S[0]) >= int(S[1]) and int(S[0]) >= int(S[2]):\n    print(S[0]*3)\nelse:\n    print(str(int(S[0])+1)*3)", "coverage": [">", ">", "!", "!", ">"]}, "19353": {"id": 19353, "code": "N = 10\nif N == 1:\n    print(2)\nelif N %2 == 0:\n    print(N)\nelse:\n    print(2*N)", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "2348": {"id": 2348, "code": "N = 0;M = 3\nres = 0\nif N >= 2:\n  res += N * (N - 1) / 2\nif M >= 2:\n  res += M * (M - 1) / 2\nprint(int(res))", "coverage": [">", ">", ">", "!", ">", ">", ">"]}, "14821": {"id": 14821, "code": "N = 1;P = 1\na = [50]\nnum_odd = sum([i%2 == 1 for i in a])\nnum_even = N - num_odd\nce = 2 ** num_even\nco = 2 ** (num_odd - 1)\nif num_odd == 0:\n    co = P^1\nprint(co * ce)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10235": {"id": 10235, "code": "N = 3\nS = \"())\"\nd = [0]*(N+1) \nfor i in range(1, N+1):\n    d[i] = S[:i].count(\"(\") - S[:i].count(\")\")\nx = min(d)\nif x == 0 and d[N] == 0:\n    print(S)\n    exit()\nans = \"(\"*abs(x) + S + \")\"*(d[N]+abs(x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19293": {"id": 19293, "code": "N = 5\nif N%2:\n    print(0)\nelse:\n    a = 0\n    for i in range(1, 40):\n        a += N//2//5**i\n    print(a)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "884": {"id": 884, "code": "k = 101\nt = 7\nflag = True\nfor i in range(k):\n  if t % k == 0:\n    print(i + 1)\n    flag = False\n    break\n  else:\n    t = (t * 10 + 7) % k\nif flag:\n  print('-1')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!"]}, "14290": {"id": 14290, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nx=[]\nans=1\nfor i in range(n-1):\n  if a[i+1]==a[i]:\n    continue\n  x.append(a[i+1]-a[i])\nflag=True\nfor i in range(len(x)-1):\n  if flag==False:\n    flag=True\n    continue\n  if x[i]<0 and x[i+1]>0 or x[i]>0 and x[i+1]<0:\n    ans+=1\n    flag=False\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10691": {"id": 10691, "code": "S = \"akasaka\"\nN = len(S)\nreverse = S[::-1]\nfirst = S[:(N - 1) // 2]\nsecond = S[(N + 1) // 2:]\nif S == reverse and first == second:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12935": {"id": 12935, "code": "if int(\"6\") in [3,5,7]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", "!", "!", ">"]}, "4952": {"id": 4952, "code": "s = \"smiles\"\nprint(\"{}{}{}\".format(s[:1], len(s[1:-1]), s[-1:]))", "coverage": [">", ">"]}, "16803": {"id": 16803, "code": "A = \"H\";B = \"H\"\nif A==\"H\" and B==\"H\":\n  print(\"H\")\nelif A==\"H\" and B==\"D\":\n  print(\"D\")\nelif A==\"D\" and B==\"H\":\n  print(\"D\")\nelse:\n  print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6300": {"id": 6300, "code": "from bisect import bisect\nN = 6\naa = [2, 3, 6, 14, 53, 159]\nbb = [6, 9, 58, 79, 84, 323]\ncc = [2, 50, 79, 288, 383, 2643]\nb_cost = [0]\nfor i,b in enumerate(bb):\n  b_cost.append(N-bisect(cc, b)+b_cost[i])\nans = 0\nfor a in aa:\n  idx = bisect(bb, a)\n  ans += b_cost[-1]-b_cost[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14395": {"id": 14395, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N == 1:\n    print(1)\nelse:\n    pre = A[0]\n    flg = 0\n    ans = 1\n    for i in range(1, N):\n        now = A[i]\n        diff = now - pre\n        if flg == 1:\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        elif flg == -1:\n            if diff <= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        else:\n            if diff > 0:\n                flg = 1\n            elif diff < 0:\n                flg = -1\n            else:\n                pass\n        pre = now\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "11707": {"id": 11707, "code": "s = \"SUN\"\nS = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nprint(7-S.index(s))", "coverage": [">", ">", ">"]}, "13072": {"id": 13072, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ns = 5\nif s in [3,5,7]: print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "7561": {"id": 7561, "code": "H = 10;N = 3\nA = [4, 5, 6]\nAA = sum(A)\nif AA >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5842": {"id": 5842, "code": "import math\nN = 5\nAns = math.ceil(N/2)\nprint(Ans)", "coverage": [">", ">", ">", ">"]}, "14886": {"id": 14886, "code": "n = 1;p = 1\na = [50]\nm = len([x for x in a if x & 1])\nif m == 0:\n  if p == 0:\n    ans = 2 ** n\n  else:\n    ans = 0\nelse:\n  ans = 2 ** (n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "11621": {"id": 11621, "code": "yobi = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nS = \"SUN\"\nprint(7 - yobi.index(S))", "coverage": [">", ">", ">"]}, "1886": {"id": 1886, "code": "num = [10, 7, 5]\na = min(num[1],num[2])\nb = max(0,(num[1]+num[2]) - num[0])\nprint(a,b)", "coverage": [">", ">", ">", ">"]}, "17517": {"id": 17517, "code": "s = 1905\nf = s/100\nl = s%100\nif 1 <= f and f <= 12:\n    if 1 <= l and l <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= l and l <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "17234": {"id": 17234, "code": "a = \"D\";b = \"D\"\nif(a==\"H\"):\n    if(b==\"H\"):\n        print(\"H\")\n    elif(b==\"D\"):\n        print(\"D\")\nelif(a==\"D\"):\n    if(b==\"H\"):\n        print(\"D\")\n    elif(b==\"D\"):\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">"]}, "10494": {"id": 10494, "code": "A = 1;B = 1;K = 1\nC=[]\nfor i in range(1,(min(A,B))+1):\n    if A%i==0 and B%i==0:\n        C.append(i)\nC.sort()\nprint(C[len(C)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "670": {"id": 670, "code": "K = 101\nif(7%K == 0):\n    print(1)\nelse:\n    mod = 7%K\n    for i in range(2, K+1):\n        if(mod * 10 + 7)%K == 0:\n            print(i)\n            break\n        mod = (mod * 10 + 7)%K\n    else:\n        print(-1)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16751": {"id": 16751, "code": "a = \"D\";b = \"D\"\nif (a == b == 'H') or (a == b == 'D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "904": {"id": 904, "code": "K = 101\nimport sys\nnum = 0\nfor n in range(K):\n  num = num * 10 + 7\n  if num % K == 0:\n    print(n+1)\n    break\n  num = num % K\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9403": {"id": 9403, "code": "S = \"2017/01/31\"\nyear=int(S[:4])\nyear+=1\nprint(str(year)+\"/\"+S[5:])", "coverage": [">", ">", ">", ">"]}, "16363": {"id": 16363, "code": "N = 2\na = [100, 0]\na_max = max(a)\nhalf_a = a_max//2\ncomb = 1000000000\nfor i in range(N):\n    if a[i]==a_max:\n        continue\n    if comb>abs(half_a-a[i]):\n        idx =i\n        comb = abs(half_a-a[i])\nprint(str(a_max) + ' ' + str(a[idx]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17548": {"id": 17548, "code": "a = \"0112\"\nb = int(a[:2])\nc = int(a[2:])\nif 0< b < 13:\n    a_month_flag = 1\nelif b == 0:\n    a_month_flag = 0    \nelse:\n    a_month_flag = 0\nif 0< c < 13:\n    b_month_flag = 1\nelif c == 0:\n    b_month_flag = 0\nelse:\n    b_month_flag = 0\nif a_month_flag ==1 and b_month_flag==1:\n    print(\"AMBIGUOUS\")\nelif a_month_flag == 1 and b_month_flag == 0:\n    print(\"MMYY\")\nelif a_month_flag == 0 and b_month_flag ==1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4862": {"id": 4862, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nnum = len(s[1:len(s)-2]) + 1\nprint(s[0] + str(num) + s[len(s)-1])", "coverage": [">", ">", ">"]}, "1363": {"id": 1363, "code": "n = 111\nfor i in range(1,10):\n    if int(n)>int(str(i)*3):\n        continue\n    print(str(i)*3)\n    break", "coverage": [">", ">", ">", "!", ">", ">"]}, "18046": {"id": 18046, "code": "S = \"1905\"\na=1<=int(S[:2])<=12\nb=1<=int(S[-2:])<=12\nif a & b: print('AMBIGUOUS')\nelif a:   print('MMYY')\nelif b:   print('YYMM')\nelse:     print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "14261": {"id": 14261, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndp = (1, 1)\nfor i in range(1, N):\n    if A[i] > A[i-1]:\n        dp = min(dp)+1, min(dp[0]+1, dp[1])\n    elif A[i] == A[i-1]:\n        pass\n    else:\n        dp = min(dp[0], dp[1]+1), min(dp)+1\nprint(min(dp))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14249": {"id": 14249, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\np = 0\nres = 0\nwhile p < N:\n    while p + 1 < N and A[p] == A[p + 1]:\n        p += 1\n    if p + 1 < N and A[p] < A[p + 1]:\n        while p + 1 < N and A[p] <= A[p + 1]:\n            p += 1\n    elif p + 1 < N and A[p] > A[p + 1]:\n        while p + 1 < N and A[p] >= A[p + 1]:\n            p += 1\n    res += 1\n    p += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "16078": {"id": 16078, "code": "A = 20;B = 30\nif A - 2*B > 0 :\n    print(A-2*B)\nelse :\n    print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "16052": {"id": 16052, "code": "a = 12;b = 4\nn = max([a - 2 * b, 0])\nprint(n)", "coverage": [">", ">", ">"]}, "3829": {"id": 3829, "code": "x = 13;y = 3;z = 1\nx -= z\nans = 0\nwhile x > 0:\n    ans += 1\n    x -= y\n    x -= z\n    if x < 0:\n        ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14840": {"id": 14840, "code": "N = 3;P = 0\nA = [1, 1, 1]\ndp0 = 1\ndp1 = 0\nfor a in A:\n    if a & 1:\n        new0 = dp0 + dp1\n        new1 = new0\n    else:\n        new0 = dp0 * 2\n        new1 = dp1 * 2\n    dp0 = new0\n    dp1 = new1\nprint(dp1 if P & 1 else dp0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "9428": {"id": 9428, "code": "s = \"2017/01/07\"\ns = s.split('/', 1)\nprint('2018/'+s[1])", "coverage": [">", ">", ">"]}, "8950": {"id": 8950, "code": "N = 1\nA = [2]\nB = [3]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8210": {"id": 8210, "code": "n = 3;m = 3\nl = [1, 2, 3]\nprint(-(-(len(l)-m)//(m-1))+1) ", "coverage": [">", ">", ">"]}, "5734": {"id": 5734, "code": "N = 5\nprint(N // 2 + 1 if N % 2 else N // 2)", "coverage": [">", ">"]}, "9195": {"id": 9195, "code": "S = \"2017/01/31\"\nS = list(S)\nS[3] = \"8\"\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">"]}, "3629": {"id": 3629, "code": "A = 12;B = 4\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "8828": {"id": 8828, "code": "NN = 5\nAA1 = [3, 2, 2, 4, 1]\nAA2 = [1, 2, 2, 2, 1]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14492": {"id": 14492, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N<=2:\n    ans=1\nelse:\n    ans=1\n    count=(A[0]<A[1])-(A[0]>A[1])\n    i=2\n    while i<N:\n        if count*((A[i-1]<A[i])-(A[i-1]>A[i]))<0:\n            ans+=1\n            count=0\n        else:\n            if count==0:\n                count=(A[i-1]<A[i])-(A[i-1]>A[i])\n        i+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15283": {"id": 15283, "code": "x = 12;y = 3;z = 1\nans=int(x/(y+z))\nif x-ans*(y+z)>=z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3145": {"id": 3145, "code": "import sys\nS = \"35753\"\nmin = 1000\nfor I in range(len(S)):\n    if min > abs(753 - int(S[I:I+3])):\n        min = abs(753 - int(S[I:I+3]))\nprint(min)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2439": {"id": 2439, "code": "if __name__ == '__main__':\n    n = 2;m = 1\n    eve = (n*(n-1)) // 2\n    odd = (m*(m-1)) // 2\n    print(eve+odd)", "coverage": [">", ">", ">", ">", ">"]}, "16571": {"id": 16571, "code": "a = \"D\";b = \"D\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "9682": {"id": 9682, "code": "n = 8\ns = \"))))((((\"\nd = [0]*(n+1)\nfor i in range(1, n+1):\n    d[i] = s[:i].count('(') - s[:i].count(')')\nx = min(d)\ns = '('*(-x) + s + ')'*(d[n]-x)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3252": {"id": 3252, "code": "a = 12;b = 4\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "4032": {"id": 4032, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nM1 += H1*60\nM2 += H2*60\nprint(M2-M1-K)", "coverage": [">", ">", ">", ">"]}, "2799": {"id": 2799, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s) -2):\n  ans = min(abs(int(s[i:i+3])- 753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17881": {"id": 17881, "code": "S = \"0112\"\nif int(S[0:2]) > 12 or S[0:2] == \"00\":\n    if 0 < int(S[2:4]) <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelse:\n    if 0 < int(S[2:4]) <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "18910": {"id": 18910, "code": "n = 12\nif n%2 == 1:\n    print(0)\nelse:\n    answer = 0\n    count = 1\n    n=n//2\n    while 5**count <= n:\n        answer += n//pow(5,count)\n        count+=1\n    print(answer)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "2973": {"id": 2973, "code": "import sys\ninput = sys.stdin.readline\nS = \"1234567876\"\nans = 999\nfor i in range(len(S) - 3):\n    ans = min(abs(int(S[i:i+3])-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16895": {"id": 16895, "code": "A = \"D\";B = \"D\"\nif A == B:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "17096": {"id": 17096, "code": "a = \"D\";b = \"D\"\nif a==\"H\":\n  print(b)\nelse:\n  if b==\"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "17054": {"id": 17054, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "4709": {"id": 4709, "code": "s = \"smiles\"\nlen_s = str(len(s)-2)\nprint(s[0]+len_s+s[-1])", "coverage": [">", ">", ">"]}, "3765": {"id": 3765, "code": "X = 64145;Y = 123;Z = 456\nN=(X-Z)//(Y+Z)\nprint(N)", "coverage": [">", ">", ">"]}, "10528": {"id": 10528, "code": "A = 1;B = 1;K = 1\nc = 0\nfor i in range(min(A,B), 0, -1):\n  if A % i == 0 and B % i == 0:\n    c += 1\n    if c == K:\n      ans = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2079": {"id": 2079, "code": "n = 100;a = 100;b = 100\nx=a+b-n\nif x>=0:\n  x+=0\nelse:\n  x=0\nprint(min(a,b),x)  ", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10526": {"id": 10526, "code": "A = 8;B = 12;K = 2\nc = 0\nfor i in range(min(A,B), 0, -1):\n  if A % i == 0 and B % i == 0:\n    c += 1\n    if c == K:\n      ans = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6464": {"id": 6464, "code": "import bisect\nN = 6\nA = (2, 3, 6, 14, 53, 159)\nB = (58, 9, 79, 323, 84, 6)\nC = (2, 50, 79, 288, 383, 2643)\nres = 0\nfor i in range(N):\n\tres += bisect.bisect_left(A, B[i])*(N - bisect.bisect_right(C, B[i]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18302": {"id": 18302, "code": "H = 3\nW = 7\nN = 10\nif N // H > N // W:\n\tprint((N // W) + 1 ) if N % W != 0 else print(N // W)\nelse:\n\tprint((N // H) + 1 ) if N % H != 0 else print(N // H)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4001": {"id": 4001, "code": "import math\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif h2 < h1:\n    h2 += 24\nif m2 < m1:\n    h2 -= 1\n    m2 += 60\nallMin = (h2 - h1) * 60 + (m2 - m1)\nres = allMin - k\nif res < 0:\n    res = 0\nprint(res)", "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", ">"]}, "8355": {"id": 8355, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16567": {"id": 16567, "code": "a = \"D\";b = \"H\"\nif a==\"H\":\n    if b==\"H\": print(\"H\")\n    else: print(\"D\")\nelse:\n    if b==\"H\": print(\"D\")\n    else: print(\"H\")", "coverage": [">", ">", "!", "!", "!", ">", "!"]}, "12449": {"id": 12449, "code": "S = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nN = len(S)\nif S == S[::-1] and S[:(N - 1) // 2] == S[:(N - 1) // 2][::-1] and S[(N - 1) // 2 + 1:] == S[(N - 1) // 2 + 1:][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7510": {"id": 7510, "code": "H = 20;N = 3\nattack = [4, 5, 6]\ntotal = sum(attack)\nif H - total <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18738": {"id": 18738, "code": "H = 2\nW = 100\nN = 200\nprint((N+max(H,W)-1)//max(H,W));", "coverage": [">", ">", ">", ">"]}, "207": {"id": 207, "code": "li_s = ['x', 'y', 'z']\nk = 4\nz = ord('z')\nans = ''\nfor i in range(len(li_s)):\n    if i < len(li_s) - 1 and li_s[i] == 'a':\n        ans += 'a'\n    elif i < len(li_s)-1 and k-(z-ord(li_s[i])+1) >= 0:\n        k -= z-ord(li_s[i])+1\n        ans = ans + 'a'\n    elif i < len(li_s)-1:\n        ans = ans + li_s[i]\n    elif i == len(li_s) - 1:\n        p = ord(li_s[i])  + k\n        p %= 26\n        p += 78\n        if 97 <= p:\n            ans = ans + chr(p)\n        else:\n            ans = ans + chr(p+26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9852": {"id": 9852, "code": "n = 3\nS = \"())\"\nleftstack = 0\nremrights = 0\nfor s in S:\n    if s == '(':\n        leftstack += 1\n    else:\n        if leftstack > 0:\n            leftstack -= 1\n        else:\n            remrights += 1\nprint('('*remrights + S + ')'*leftstack)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "11448": {"id": 11448, "code": "x = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ny = \"SAT\"\nprint(7-x.index(y))", "coverage": [">", ">", ">"]}, "4249": {"id": 4249, "code": "wake_h = 10;wake_m = 0;sleep_h = 12;sleep_m = 0;k = 120\nwake_m_all = wake_h * 60 + wake_m\nsleep_m_all = sleep_h * 60 + sleep_m\nsleep_m_all -= k\nprint(sleep_m_all - wake_m_all)", "coverage": [">", ">", ">", ">", ">"]}, "16491": {"id": 16491, "code": "import bisect\nN = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nt, r = divmod(A[-1], 2)\nidx = bisect.bisect_left(A, t)\nif r == 1:\n    if idx != 0:\n        if abs(A[idx - 1] - t) < abs(A[idx] - t):\n            idx = idx - 1\nelse:\n    if idx != 0:\n        if abs(A[idx - 1] - t) <= abs(A[idx] - t):\n            idx = idx - 1\nprint(' '.join([str(A[-1]), str(A[idx])]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "5160": {"id": 5160, "code": "s = \"xyz\"\nn = len(s)\nprint(str(s[0]) + str(n - 2) + str(s[n - 1]))", "coverage": [">", ">", ">"]}, "9559": {"id": 9559, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3] = '8'\nprint(''.join([str(i) for i in s]))", "coverage": [">", ">", ">"]}, "14771": {"id": 14771, "code": "n = 2;p = 0\na = [1, 3]\ndp=[[0]*2 for i in range(n+1)]\ndp[0][0]=1\nfor i in range(n):\n  if a[i]%2==0:\n    dp[i+1][0]=dp[i][0]*2\n    dp[i+1][1]=dp[i][1]*2\n  else:\n    dp[i+1][0]=dp[i][0]+dp[i][1]\n    dp[i+1][1]=dp[i][0]+dp[i][1]\nprint(dp[-1][p])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "4545": {"id": 4545, "code": "x = ['x', 'y', 'z']\nprint(x[0],len(x)-2,x[-1],sep='')", "coverage": [">", ">"]}, "19113": {"id": 19113, "code": "N = 5\nout=0\nif N%2 ==1:\n    out=0\nelse:\n    k=5\n    while k<10**18:\n        out+= (N//k)//2\n        k*=5\nprint(out)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "2044": {"id": 2044, "code": "x = 100;y = 100;z = 100\nprint(min(y,z), max(0,y+z-x))", "coverage": [">", ">"]}, "9359": {"id": 9359, "code": "S = \"2017/01/31\"\ns=list(S)\ns[3]='8'\na=''.join(s)\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "2430": {"id": 2430, "code": "even = 4;odd = 3\nprint(int(even * (even-1)/2 + odd * (odd-1)/2))", "coverage": [">", ">"]}, "5029": {"id": 5029, "code": "word = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nrep_word = []\nnum_abb = len(word) - 2\nrep_word.append(word[0])\nrep_word.append(str(num_abb))\nrep_word.append(word[-1])\nprint(''.join(rep_word))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "710": {"id": 710, "code": "K = 2\nsevens=7\nresult=1\nif K%2==0 or K%5==0:\n    print(-1)\nelse:\n    while sevens%K!=0:\n        sevens%=K\n        sevens=sevens*10+7\n        result+=1\n    print(result)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16801": {"id": 16801, "code": "a = \"D\";b = \"H\"\nif a == \"H\" and b ==\"H\":\n    print(\"H\")\nelif a == \"H\" and b ==\"D\":\n    print(\"D\")\nelif a == \"D\" and b ==\"H\":\n    print(\"D\")\nelif a == \"D\" and b ==\"D\":\n    print(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9172": {"id": 9172, "code": "S = \"2017/01/07\"\nS = S.replace(\"2017\",\"2018\")\nprint(S)", "coverage": [">", ">", ">"]}, "9193": {"id": 9193, "code": "a = \"2017\";b = \"01\";c = \"31\"\nprint(int(a)+1,b,c,sep=(\"/\"))", "coverage": [">", ">"]}, "19004": {"id": 19004, "code": "N = 12\nif N%2 ==1:\n    print(0)\nelse:\n    ans = 0\n    cnt = 10\n    while N >= cnt:\n       ans += N//cnt\n       cnt *= 5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16889": {"id": 16889, "code": "a = \"D\";b = \"D\"\nif a == b:\n    TopCoDeer = 'H'\nelse:\n    TopCoDeer = 'D'\nprint(TopCoDeer)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12731": {"id": 12731, "code": "X = 6\nwk = (X-7)*(X-5)*(X-3)\nif wk == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "14137": {"id": 14137, "code": "N = 9\nsrc = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nasc = None\nans=1\nfor i in range(N-1):\n    d = src[i+1]-src[i]\n    if d==0:\n        continue\n    if asc==None:\n        asc = d > 0\n        continue\n    if (asc and d<0) or (not asc and d>0):\n        asc = None\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14995": {"id": 14995, "code": "n = 2;p = 0\nA = [1, 3]\ncheck = all(a%2 == 0 for a in A)\nans = 0\nif check and p == 0:\n  ans = 1 << n\nif not check:\n  ans = 1 << (n-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "1293": {"id": 1293, "code": "n = 750\nl=[111,222,333,444,555,666,777,888,999]\nfor i in range(len(l)):\n    if n<= l[i]:\n        print(l[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "15984": {"id": 15984, "code": "import itertools\na = 20;b = 15\nans= a-b*2\nif ans <=0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4962": {"id": 4962, "code": "s = \"xyz\"\nm=len(s[1:-1])\nprint('{}{}{}'.format(s[0],m,s[-1]))", "coverage": [">", ">", ">"]}, "17359": {"id": 17359, "code": "res = {\n  ('H', 'H'): 'H',\n  ('H', 'D'): 'D',\n  ('D', 'H'): 'D',\n  ('D', 'D'): 'H'\n}\nprint(res[tuple(\"D H\".split())])", "coverage": ["!", ">", ">", ">", ">", "!", ">"]}, "8432": {"id": 8432, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nA2.reverse()\nA1_=[]\nA2_=[]\na1_=0\na2_=0\nfor n in range(N):\n    a1_ = a1_+A1[n]\n    a2_ = a2_+A2[n]\n    A1_.append(a1_)\n    A2_.append(a2_)\nA2_.reverse()\nans=0\nfor n in range(N):\n    if ans < A1_[n]+A2_[n]:\n        ans = A1_[n]+A2_[n]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11693": {"id": 11693, "code": "s = \"SUN\"\nif s == \"SUN\":\n    print(7)\nelif s == \"MON\":\n    print(6)\nelif s == \"TUE\":\n    print(5)\nelif s == \"WED\":\n    print(4)\nelif s == \"THU\":\n    print(3)\nelif s == \"FRI\":\n    print(2)\nelif s == \"SAT\":\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "46": {"id": 46, "code": "s = [23, 24, 25]\nK = 4\ni = 0\nwhile K > 0 and i < len(s)-1:\n    if s[i] != 0 and 26-s[i] <= K:\n        K -= 26-s[i]\n        s[i] = 0\n    else:\n        i += 1\ns[-1] = (s[-1]+K)%26 \nprint(*[chr(x+97) for x in s], sep = '')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15243": {"id": 15243, "code": "x = 12;y = 3;z = 1\nhito=x//(y+z)\nif x%(y+z)<z:\n    hito -=1\n    print(hito)\nelse:\n    print(hito)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16346": {"id": 16346, "code": "n = 5\na = [6, 9, 4, 2, 11]\nn = max(a)\ntmp = n / 2\nr = n + 1\nd = n + 1\nfor num in a:\n    if num == n:\n        continue\n    d_tmp = abs(num - tmp)\n    if d_tmp < d:\n        d = d_tmp\n        r = num\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5763": {"id": 5763, "code": "N = 100\nif N%2==0: print(N//2)\nelse: print(N//2+1)", "coverage": [">", ">", "!"]}, "19489": {"id": 19489, "code": "n = 999999999\nif n%2:\n    print(n*2)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "18268": {"id": 18268, "code": "import math\nh = 2\nw = 100\nn = 200\nprint(math.ceil(n / h) if h > w else math.ceil(n / w))", "coverage": [">", ">", ">", ">", ">"]}, "6792": {"id": 6792, "code": "h = 211;n = 5\nA = [31, 41, 59, 26, 53]\nA.sort(reverse=True)\nmax_point = sum(A[:n])\nans = 'Yes'\nif max_point < h:\n    ans = 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "565": {"id": 565, "code": "s = \"xyz\"\nK = 4\nc = []\nfor i in range(len(s)):\n    if s[i]=='a':\n        c.append(0)\n    else:\n        c.append(123-ord(s[i]))\nfor i in range(len(s)):\n    if c[i] <= K:\n        K -= c[i]\n        c[i]=0\n    else:\n        continue\nif K >0 and c[-1]==0:\n    c[i]+= K%26\nelse:\n    c[i] = (-c[i] +K)%26\nsi = ''\nfor i in range(len(c)-1):\n    if c[i]==0:\n        si += 'a'\n    else:\n        si += s[i]\nsi += chr(97+c[-1])\nprint(si)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7553": {"id": 7553, "code": "h = 10;n = 3\na = [4, 5, 6]\na.sort(reverse=True)\nans=0\npower=0\nfor i in range(n):\n    power+=a[i]\n    if power>=h:\n        ans=1\n        break\nif ans==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16383": {"id": 16383, "code": "import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nci = a[-1]\nindex = bisect.bisect_left(a, ci/2)\nif abs(a[index]-ci/2)<abs(a[index-1]-ci/2):\n    print(ci, a[index])\nelse:\n    print(ci, a[index-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "18662": {"id": 18662, "code": "H = 3\nW = 7\nN = 10\nprint(int((N+max(H,W)-1)/max(H,W)))", "coverage": [">", ">", ">", ">"]}, "15777": {"id": 15777, "code": "x = 13;y = 3;z = 1\ncnt=0\nif x>=y+2*z:\n  cnt+=1\n  x -= (y+2*z)\ncnt += (x//(y+z))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16400": {"id": 16400, "code": "n = 5\na = [6, 9, 4, 2, 11]\na=sorted(a)\nb=a.pop(-1)\nmid=b/2\ndist=10**9\nfor i in range(n-1):\n    d=abs(mid-a[i])\n    if d <dist:\n        dist=d\n        ans=a[i]\nprint(b,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9109": {"id": 9109, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[0],s[1],s[2],s[3]='2','0','1','8'\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "12762": {"id": 12762, "code": "n = 5\nprint([\"NO\",\"YES\"][n==7 or n==5 or n==3])", "coverage": [">", ">"]}, "10740": {"id": 10740, "code": "s = \"level\"\nans=0\nif s==s[::-1] and s[:(len(s)-1)//2]==s[(len(s)-1)//2-1::-1] and s[(len(s)+3)//2-1:]==s[:(len(s)+3)//2-2:-1]:\n    ans+=1\nprint(\"NYoe s\"[ans::2])", "coverage": [">", ">", ">", "!", ">"]}, "6984": {"id": 6984, "code": "H = 20;N = 3\nlst = [4, 5, 6]\ns=sum(lst)\nif s>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11859": {"id": 11859, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "2043": {"id": 2043, "code": "x = 10;y = 7;z = 5\nprint(min(y,z), max(0,y+z-x))", "coverage": [">", ">"]}, "524": {"id": 524, "code": "s = ['x', 'y', 'z']\nK = 4\nfor i in range(len(s)):\n    need = (123-ord(s[i]))%26\n    if need <= K:\n        s[i] = \"a\"\n        K -= need\nif 0 < K:\n    tmp = ord(s[-1]) + K%26\n    tmp -= 26 if 123 <= tmp else 0\n    s[-1] = chr(tmp)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10162": {"id": 10162, "code": "N = 8\nS = \"))))((((\"\nleft=0\ncnt1=0\ncnt2=0\nfor i in range(N):\n    if S[i]==\"(\":\n        cnt1+=1\n    elif S[i]==\")\":\n        cnt2+=1\n        if i<N-2 and S[i+1]==\"(\":\n            if cnt2>=cnt1+left:\n                left=cnt2-cnt1\nres=S.count(\"(\")+left-S.count(\")\")\nif res>=0:\n    print(\"(\"*left+S+\")\"*res)\nelse:\n    print(\"(\"*(left+abs(res))+S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9796": {"id": 9796, "code": "N = 3\nS = \"())\"\nstock = 0\nL_cnt = 0\nfor s in S:\n    if s == \"(\":\n        stock += 1\n    if s == \")\":\n        if stock == 0:\n            L_cnt += 1\n        else:\n            stock -= 1\nprint(\"(\" * L_cnt + S + \")\" * stock)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "518": {"id": 518, "code": "s = \"xyz\"\nk = 4\nans=''\nfor c in s:\n    t=ord('z')-ord(c)+1\n    if t<26 and t<=k:\n        k-=t\n        ans+='a'\n    else:\n        ans+=c\nif k>0:\n    ans=ans[:-1]+chr(ord('a')+(ord(ans[-1])-ord('a')+k)%26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "9526": {"id": 9526, "code": "s = \"2017/01/07\"\nprint(s.replace('7', '8', 1))", "coverage": [">", ">"]}, "7976": {"id": 7976, "code": "n = 4;k = 3\nal = [2, 3, 1, 4]\nif n==k:\n    print(1)\n    exit()\nx = 1+(n-k)//(k-1)\ny = (n-k)%(k-1)\nif y >0:\n    print(x+1)\nelse:\n    print(x)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "13618": {"id": 13618, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a, b, c)", "coverage": [">", ">"]}, "7302": {"id": 7302, "code": "h = 211\na = [31, 41, 59, 26, 53]\nprint([\"Yes\", \"No\"][sum(a) < h])", "coverage": [">", ">", ">"]}, "15560": {"id": 15560, "code": "x = 100000;y = 1;z = 1\nans = x // (y+z)\nif (x % (y+z) < z):\n    ans -= 1\nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">"]}, "6224": {"id": 6224, "code": "from collections import defaultdict\nA = defaultdict(int)\nB = defaultdict(int)\nC = defaultdict(int)\nN = int(\"3\")\na = [k for k in map(int, \"1 1 1\".split())]\nb = [k for k in map(int, \"2 2 2\".split())]\nc = [k for k in map(int, \"3 3 3\".split())]\nfor k in range(N):\n  A[a[k]] += 1\n  B[b[k]] += 1\n  C[c[k]] += 1\nAset = sorted(set(a))\nBset = sorted(set(b))\nCset = sorted(set(c))\ncnt = 0\nindex_a = 0\nindex_c = 0\na = 0\nc = N\nfor b in Bset:\n  flag_a = False\n  flag_c = False\n  if a < N:\n    for k in range(index_a, len(Aset)):\n      if Aset[k] < b:\n        a += A[Aset[k]] \n      else:\n        index_a = k\n        flag_a = True\n        break\n  for k in range(index_c, len(Cset)):\n    if Cset[k] <= b:\n      c -= C[Cset[k]]\n    else:\n      index_c = k\n      flag_c = True\n      break\n  if flag_a == False:\n    a = N\n  if flag_c == False:\n    break\n  cnt += a*c*B[b]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "7686": {"id": 7686, "code": "H = 20;N = 3\nList = [4, 5, 6]\nList.sort(reverse=True)\nk = 0\nres = \"No\"\nfor i in range(N):\n  k += List[i]\n  if k >= H:\n    res = \"Yes\"\n    break\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10138": {"id": 10138, "code": "n = 8\ns = \"))))((((\"\nleft=0\nleft_cnt=0\nfor i in s:\n    if i==\"(\":\n        left+=1\n    else:\n        if left>=1:\n            left-=1\n        else:\n            left_cnt+=1\nright=0\nright_cnt=0\nfor i in s[::-1]:\n    if i==\")\":\n        right+=1\n    else:\n        if right>=1:\n            right-=1\n        else:\n            right_cnt+=1\nprint(\"(\"*left_cnt+s+\")\"*right_cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "13549": {"id": 13549, "code": "s = \"abcde,fghihgf,edcba\"\ns1 = s[:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(s1 + ' ' + s2 + ' ' + s3)", "coverage": [">", ">", ">", ">", ">"]}, "19202": {"id": 19202, "code": "N = 12\nans=0\nif ~N%2:\n    for i in range(1,30):\n        ans+=N//(2*5**i)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4311": {"id": 4311, "code": "hour1 = 10;min1 = 0;hour2 = 15;min2 = 0;ben = 30\nans=(hour2-hour1)*60+min2-min1-ben\nprint(ans)", "coverage": [">", ">", ">"]}, "4492": {"id": 4492, "code": "a = \"internationalization\"\nb=a[0]+str(len(a)-2)+a[-1]\nprint(b)", "coverage": [">", ">", ">"]}, "16180": {"id": 16180, "code": "n = 2\na = [100, 0]\na.sort()\nk = a[n-1]\nr = a[0]\ndis = abs(a[n-1]/2-a[0])\nfor i in range(n-1):\n    if dis > abs(a[n-1]/2-a[i]):\n        dis = abs(a[n-1]/2-a[i])\n        r = a[i]\nprint(k,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9977": {"id": 9977, "code": "N = 3\nS = \"())\"\nnS = S\nfor i in range(50):\n    nS = nS.replace(\"()\", \"\")\nr = nS.count(\")\")\nl = nS.count(\"(\")\nprint(\"(\" * r + S + \")\" * l)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15241": {"id": 15241, "code": "X = 64145;Y = 123;Z = 456\nX = X-Z\nA = (X/(Y+Z))//1\nprint (round (A))", "coverage": [">", ">", ">", ">"]}, "6517": {"id": 6517, "code": "from bisect import bisect_right, bisect_left\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor x in b:\n  ans += bisect_left(a, x) * (n - bisect_right(c, x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11323": {"id": 11323, "code": "x = \"SUN\"\nyoubi = {\n  'SUN': 7\n  , 'MON': 6\n  , 'TUE': 5\n  , 'WED': 4\n  , 'THU': 3\n  , 'FRI': 2\n  , 'SAT': 1\n}\nprint(youbi[x])", "coverage": [">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11994": {"id": 11994, "code": "a = 11;b = 16\nc = 11;d = 17\nprint([0,1][a==c-1])", "coverage": [">", ">", ">"]}, "19125": {"id": 19125, "code": "n = 12\nif(n % 2 !=0):\n    print(0)\n    exit()\nketasu = len(str(n))\nans = 0\nfor i in range(1, 100):\n    ans += n // (2 * 5 **i)\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "3930": {"id": 3930, "code": "x = 12;y = 3;z = 1\nans = int((x-z)//(y+z))\nprint(ans)", "coverage": [">", ">", ">"]}, "5372": {"id": 5372, "code": "a = 2\nres = 0\nif a%2 ==0:\n  res = int(a/2)\nelse:\n  a +=1\n  res = int(a/2)\nprint(res)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "12886": {"id": 12886, "code": "a = 5\nlist753 = [3,5,7]\nif a in list753:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "273": {"id": 273, "code": "from collections import deque\ns = \"a\"\nk = 25\na = ord(\"a\")\nl = deque(list())\nl1 = []\nfor i in range(len(s)):\n  s1 = s[i]\n  l.append(((a+26)-ord(s1))%26)\nwhile k!=0:\n    if len(l)!=0:\n        t = l.popleft()\n        if k>=t:\n            l1.append(\"a\")\n            k -= t\n        else:\n          if t==\"a\":\n            l1.append(t)\n          else:\n            l1.append(chr((ord('a')-t+26)))\n    else:\n      k %= 26\n      l1[-1] = chr(int(ord(l1[-1])+k))\n      k = 0\nl2 = []\nif len(l)>=1:\n  for t in l:\n    t %= 26\n    if t==0:\n      l2.append(\"a\")\n    else:\n      l2.append(chr((ord('a')-t+26)))\n  l1 += l2\nprint(\"\".join(l1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "4820": {"id": 4820, "code": "s = \"smiles\"\nf = s[0]\ne = s[-1]\nprint(f + str(len(s)-2) + e)", "coverage": [">", ">", ">", ">"]}, "2388": {"id": 2388, "code": "n = 0;m = 3\ntot = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(tot)", "coverage": [">", ">", ">"]}, "18386": {"id": 18386, "code": "H = 3\nW = 7\nN = 10\ntmp1 = min(H, W)\ntmp2 = max(H, W)\nfor i in range(tmp1):\n  N = N - tmp2\n  if N <= 0:\n    print(i + 1)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1461": {"id": 1461, "code": "n = 750\nfor i in range(10):\n  if 111* i < n and n <= 111*(i+1):\n    print(111*(i+1))", "coverage": [">", ">", ">", ">"]}, "7525": {"id": 7525, "code": "h = 10;hoge = 3\nl = [4, 5, 6]\nprint('Yes' if h <= sum(l) else 'No')", "coverage": [">", ">", ">"]}, "5644": {"id": 5644, "code": "import math\nn = 5\nm = n//2\nif n % 2 == 0:\n    print(m)\nelse:\n    print(m+1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10617": {"id": 10617, "code": "A = 100;B = 50;K = 4\ngcd=[]\nC=min(A,B)\nfor i in range(1,C+1):\n  if A%i==0 and B%i==0:\n    gcd.append(i)\nprint(gcd[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4202": {"id": 4202, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nif(M2 < M1):\n    m = 60-(M1-M2)\n    print((H2-H1-1)*60+m-K)\nelse:\n    print((H2-H1)*60+(M2-M1)-K)", "coverage": [">", ">", "!", "!", "!", ">"]}, "14596": {"id": 14596, "code": "n = 3;p = 0\na = [1, 1, 1]\nflg = True\nfor i in a:\n    if i % 2 != 0:\n        flg = False\n        break\nif flg:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "8452": {"id": 8452, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nl = []\nfor i in range(N):\n    l.append(sum(A[:N-i])+sum(B[:i+1]))\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4554": {"id": 4554, "code": "S = \"xyz\"\na = len(S)\nprint(S[0]+ str(a-2) + S[-1])", "coverage": [">", ">", ">"]}, "12346": {"id": 12346, "code": "s = \"level\"\nk = int((len(s) -1)/2) \nl = int((len(s) + 3)/2) - 1\nn = list(s)\nif n[0:k] == n[l:]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16369": {"id": 16369, "code": "from bisect import bisect_left,bisect\nn = 2\na = [100, 0]\na.sort()\nai=max(a)\nai2=ai/2\njj=bisect(a,ai2)\nif jj+1<n:\n    if abs(a[jj]-ai2)>abs(a[jj+1]-ai2):\n        jj=jj+1\nif jj-1>=0:\n    if abs(a[jj]-ai2)>abs(a[jj-1]-ai2):\n        jj=jj-1\nif jj==n-1:\n    jj=jj-1\naj=a[jj]\nprint(ai,aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "11369": {"id": 11369, "code": "s = \"SUN\"\nw=['SUN','MON','TUE','WED','THU','FRI','SAT',]\nw=w[::-1]\nfor i in range(7):\n    if w[i]==s:\n        print(i+1)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12739": {"id": 12739, "code": "X = 6\nprint('YES' if X in (3, 5, 7) else 'NO')", "coverage": [">", ">"]}, "5638": {"id": 5638, "code": "N = 5\npage = int((N - 1 + 2) / 2)\nprint(page)", "coverage": [">", ">", ">"]}, "8689": {"id": 8689, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18184": {"id": 18184, "code": "S = 1700\nL = S // 100 \nR = S % 100 \nif 1 <= L <= 12:\n  if 1 <= R <= 12: print('AMBIGUOUS')\n  else: print('MMYY')\nelse:\n  if 1 <= R <= 12: print('YYMM')\n  else: print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "11517": {"id": 11517, "code": "import sys\nbase = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nS = \"SAT\"\nif not ( S in base ): sys.exit()\nprint(7 - base.index(S))", "coverage": [">", ">", ">", ">", ">"]}, "15995": {"id": 15995, "code": "a = 12;b = 4\nif a<=b*2:\n    print(0)\nelse:\n    print(a-b*2)", "coverage": [">", ">", "!", "!", ">"]}, "9057": {"id": 9057, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nf=0\nfor i in [a,b,c,d,e]:\n  for j in [a,b,c,d,e]:\n    if abs(i-j)>k:\n      f=f+1\nif f>0:\n  print(':(')\nelse:\n  print('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "19485": {"id": 19485, "code": "i = 10\nif i%2==0:\n    print(i)\nelse:\n    print(2*i)", "coverage": [">", ">", ">", "!", "!"]}, "10400": {"id": 10400, "code": "A = \"1\";B = \"1\";K = \"1\"\nA = int(A)\nB = int(B)\nK = int(K)\nmin = A if A <= B else B\nlist = []\nfor i in range(1, min+1):\n    if A % i == 0 and B % i == 0:\n        list.append(i)\nprint(list[len(list)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4489": {"id": 4489, "code": "s = \"internationalization\"\nprint('%s%d%s' % (s[0], len(s[1:-1]), s[-1]))", "coverage": [">", ">"]}, "18151": {"id": 18151, "code": "import sys\nsys.setrecursionlimit(10**6)\ns = \"1700\"\nl = [i for i in range(1,13)]\nl = [str(i) if len(str(i))==2 else '0'+str(i) for i in l]\nif s[:2] not in l and s[2:] not in l:\n    print('NA')\nelif s[:2] not in l and s[2:] in l:\n    print('YYMM')\nelif s[:2] in l and s[2:] not in l:\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "15510": {"id": 15510, "code": "X = 13;Y = 3;Z = 1\ns=Z\nc=0\nwhile True:\n  s+=Y+Z\n  if s>X:\n    break\n  c+=1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4457": {"id": 4457, "code": "s = \"smiles\"\nmid = str(len(s) - 2)\nprint(s[0]+mid+s[-1])", "coverage": [">", ">", ">"]}, "11536": {"id": 11536, "code": "S = \"SUN\"\nif S==\"SUN\":\n    print(7)\nelif S==\"MON\":\n    print(6)\nelif S==\"TUE\":\n    print(5)\nelif S==\"WED\":\n    print(4)\nelif S==\"THU\":\n    print(3)\nelif S==\"FRI\":\n    print(2)\nelif S==\"SAT\":\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8062": {"id": 8062, "code": "NK = [8, 3]\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nN = NK[0]\nK = NK[1]\nanswer = (N - 1) // (K - 1)\nremain = (N - 1) % (K - 1)\nif remain > 0:\n    answer = answer + 1\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11606": {"id": 11606, "code": "S = \"SAT\"\nM = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nt = M.index(S)\nprint(7 - t)", "coverage": [">", ">", ">", ">"]}, "17446": {"id": 17446, "code": "S = \"0112\"\nL = int(S[0:2])\nR = int(S[2:4])\nif 0 < L <= 12 and 0 < R <= 12:\n    print(\"AMBIGUOUS\")\nelif 0 < L <= 12:\n    print(\"MMYY\")\nelif 0 < R <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "5039": {"id": 5039, "code": "s = \"smiles\"\nN=len(s)-2\nprint(s[0]+str(N)+s[-1])", "coverage": [">", ">", ">"]}, "4215": {"id": 4215, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nans = H2 * 60 + M2 - H1 * 60 - M1\nif ans <= 0:\n  ans += 24 * 60\nprint(ans - K)", "coverage": [">", ">", ">", "!", ">"]}, "1977": {"id": 1977, "code": "n = 10;a = 7;b = 5\nprint(min(a,b))\nif a+b<n:print(0)\nelse:print(a+b-n)", "coverage": [">", ">", ">", ">"]}, "16226": {"id": 16226, "code": "n = 2\na = [0, 0, 100]\nx=a[-1]\nm=a[-1]\nfor i in a:\n  if m>abs(i-x/2):\n    y=i\n    m=abs(i-x/2)\nprint(x,y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12162": {"id": 12162, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 != 12:\n  if m2 == m1+1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if m2 == 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17988": {"id": 17988, "code": "S = ['1', '9', '0', '5']\nx = int(\"\".join(S[0:2]))\ny = int(\"\".join(S[2:4]))\nif 1 <= x <= 12:\n    if 1 <= y <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= y <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\npass", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "18395": {"id": 18395, "code": "h = 3\nw = 7\nn = 10\nif h >= w and n%h != 0:\n    print(n//h+1)\nelif h >= w and n%h == 0:\n    print(n//h)\nelif w >= h and n%w != 0:\n    print(n//w+1)\nelse:\n    print(n//w)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "15680": {"id": 15680, "code": "X = 12;Y = 3;Z = 1\nwidth = X - 2 * Z\nif width < Y:\n  print(0)\n  exit()\nnum = (width - Y) // ( Y + Z)\nprint(num + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3567": {"id": 3567, "code": "A = 20;B = 30\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "16404": {"id": 16404, "code": "import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nnum=a[-1]/2\nb=bisect.bisect_left(a,num)\nif abs(num-a[b])<abs(num-a[b-1]):\n  print(a[-1],a[b])\nelse:\n  print(a[-1],a[b-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "86": {"id": 86, "code": "s = \"a\"\nk = 25\nlen_s = len(s)\nmoji = [0]*(len_s)\nfor i in range(len_s):\n    num = 26-(ord(s[i])-ord('a'))\n    if num <= k and num != 26:\n        moji[i] = 'a'\n        k -= num\n    else:\n        moji[i] = s[i]\nif k != 0:\n    moji[len_s-1] = chr(ord(moji[len_s-1])+k%26)\nprint(*moji,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "4530": {"id": 4530, "code": "s = \"xyz\"\na=len(s)-2\nprint(s[0]+str(a)+s[len(s)-1])", "coverage": [">", ">", ">"]}, "7198": {"id": 7198, "code": "h = 20;n = 3\na = [4, 5, 6]\na.sort(reverse=True)\nans = 'No'\nfor s in a:\n    h -= s\n    if h <= 0:\n        ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "16470": {"id": 16470, "code": "import sys\nreadline = sys.stdin.readline\nN = 5\nA = [6, 9, 4, 2, 11]\nA = sorted(A, reverse = True)\none = A[0]\ndiff = one\nans = -1\nfor i in range(1,len(A)):\n  if abs(one / 2 - A[i]) < diff:\n    diff = abs(one / 2 - A[i])\n    ans = A[i]\nprint(one, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1160": {"id": 1160, "code": "n = 750\nfor i in range(111, 1000, 111):\n    if i >= n:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "552": {"id": 552, "code": "s = \"a\"\nk = 25\nans = \"\"\nfor i in range(len(s)-1):\n    cost = ord(\"z\")+1-ord(s[i])\n    if s[i] == \"a\" or k < cost:\n        ans += s[i]\n    else:\n        ans += \"a\"\n        k -= cost\nc = s[-1]\nk %= 26\nfor _ in range(k):\n    if c == \"z\": c = \"a\"\n    else: c = chr(ord(c)+1)\nans += c\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "2045": {"id": 2045, "code": "N = 10;A = 3;B = 5\nX = 0\nif N<A+B:\n  X = A+B-N\nelse:\n  X = 0\nprint(min(A,B),X)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "8470": {"id": 8470, "code": "N = 1\nA = [2]\nB = [3]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "1187": {"id": 1187, "code": "n = 750\nwhile True:\n  if len(set(str(n)))==1:\n    print(n)\n    break\n  n+=1", "coverage": [">", ">", ">", ">", ">", ">"]}, "1155": {"id": 1155, "code": "n = \"111\"\nmemo = int( n[0] + n[0] + n[0] )\nif int(n) <= memo:\n\tprint(memo)\nelse:\n\tprint(memo + 111)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6656": {"id": 6656, "code": "from bisect import bisect,bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    ca = bisect_left(A,b)\n    cc = N - bisect(C,b)\n    ans += ca*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19487": {"id": 19487, "code": "n = 3\nif n%2:\n    print(n*2)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "14366": {"id": 14366, "code": "n = 7\nif n==1:\n  print(1)\n  exit()\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nif a[0]<a[1]:flag=1\nelif a[0]>a[1]:flag=-1\nelse:flag=0\nfor i in range(1,n-1):\n  if flag==1 and a[i]>a[i+1]:\n    ans+=1\n    flag=0\n  elif flag==-1 and a[i]<a[i+1]:\n    ans+=1\n    flag=0\n  else:\n    if a[i]>a[i+1]:flag=-1\n    elif a[i]<a[i+1]:flag=1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "2536": {"id": 2536, "code": "a = 1;b = 2;c = 9;d = 1\nS={a,b,c,d}\nif S=={1,7,9,4}:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "964": {"id": 964, "code": "n = 750\nif n%111==0:\n    print(n)\nelse:\n    x=n//111\n    print((x+1)*111)", "coverage": [">", ">", "!", "!", ">", ">"]}, "18074": {"id": 18074, "code": "s = \"0112\"\ns_a = int(s[:2])\ns_b = int(s[2:])\nif s_a >= 1 and s_a <=12 and s_b >= 1 and s_b <=12:\n  ans = \"AMBIGUOUS\"\nelif (s_a > 12 or s_a == 0) and s_b >= 1 and s_b <=12:\n  ans = \"YYMM\"\nelif (s_b > 12 or s_b == 0) and s_a >= 1 and s_a <=12:\n  ans = \"MMYY\"\nelse:\n  ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "17566": {"id": 17566, "code": "a = 112\nl=a/100\nr=a%100\nif 1<=l and l<=12:\n    if 1<=r and  r<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=r and r<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "18854": {"id": 18854, "code": "N = 6;x = 1\nvalues = map(int, \"1 6 1 2 0 4\".split())\ncount = 0\nv1 = next(values)\nfor v2 in values:\n    surplus = max(v1 + v2 - x, 0)\n    count += surplus\n    v1 = max(0, v2 - surplus)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12922": {"id": 12922, "code": "x = 5\nif x == 3 or x == 5 or x == 7:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "7088": {"id": 7088, "code": "r = ['20', '3']\nH=int(r[0])\nN=int(r[1])\ndata_pre = ['4', '5', '6']\ndata=[int(s) for s in data_pre]\nif sum(data)>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17613": {"id": 17613, "code": "S = \"1905\"\nmm = [\"0\"+str(x) for x in range(1,10)]+[\"10\",\"11\",\"12\"]\nmmyy = (S[:2] in mm)\nyymm = (S[2:] in mm)\na = \"NA\"\nif yymm and mmyy:\n  a = \"AMBIGUOUS\"\nelif yymm:\n  a = \"YYMM\"\nelif mmyy:\n  a = \"MMYY\"\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "9012": {"id": 9012, "code": "a = int(\"1\")\ne = int(\"9\")\nk = int(\"15\")\nprint(\"Yay!\" if e - a <= k else \":(\")", "coverage": [">", ">", ">", ">"]}, "162": {"id": 162, "code": "s = \"a\"\nK = 25\nk = K\nans = \"\"\nfor i in range(len(s)-1):\n    if(s[i] == \"a\"):\n        ans += s[i]\n        continue\n    if(ord(s[i])+k >= ord(\"z\")+1):\n        ans += \"a\"\n        k -= ord(\"z\")+1-ord(s[i])\n    else:\n        ans += s[i]\na = ord(s[-1])+k%26\nif(a > ord(\"z\")):\n    a -= 26\nans += chr(a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">"]}, "377": {"id": 377, "code": "s = \"xyz\"\nK = 4\nns=len(s)\nls=list(s)\nfor i in range(ns):\n    if K==0:\n        break\n    if ls[i]==\"a\":\n        continue\n    toa=ord(\"z\")+1-ord(ls[i])\n    if toa<=K:\n        ls[i]=\"a\"\n        K-=toa\nls[-1]=chr(ord(ls[-1])+K%26)\nans=\"\".join(ls)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "16031": {"id": 16031, "code": "A = 12;B = 4\nprint(max(0, A - 2 * B))", "coverage": [">", ">"]}, "4599": {"id": 4599, "code": "s = \"xyz\"\nm = str(len(s) -2)\nprint(s[0] + m + s[-1])", "coverage": [">", ">", ">"]}, "16539": {"id": 16539, "code": "a = \"H\";b = \"H\"\nif a=='H' and b=='H':print('H')\nelif a=='D' and b=='D':print('H')\nelse:print('D')", "coverage": [">", ">", "!", "!"]}, "17935": {"id": 17935, "code": "s = \"0112\"\nf1=1<=int(s[:2])<=12\nf2=1<=int(s[2:4])<=12\nif f1 and f2:print(\"AMBIGUOUS\")\nelif not f1 and not f2:print(\"NA\")\nelif f1:print(\"MMYY\")\nelse:print(\"YYMM\")", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "18709": {"id": 18709, "code": "h = 3\nw = 7\nn = 10\nif n % max(h, w) == 0:\n    print(int(n//max(h, w)))\nelse:\n    print(int(n//max(h, w))+1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6620": {"id": 6620, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfrom bisect import bisect_left,bisect_right\nfor i in B:\n   ans+=(bisect_left(A,i))*(N-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1090": {"id": 1090, "code": "n = 750\nif n<=111:\n    print(111)\nfor i in range(1,10):\n    if 111*i<n<=111*(i+1):\n        print(111*(i+1))", "coverage": [">", ">", "!", ">", ">", ">"]}, "18659": {"id": 18659, "code": "h = 3\nw = 7\nn = 10\nans = 0\nsum = 0\nwhile(sum < n):\n  if h >= w :\n    sum += h\n    ans += 1\n    w -= 1\n  else :\n    sum += w\n    ans += 1\n    h -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "1895": {"id": 1895, "code": "n = 10;a = 7;b = 5\nif a+b-n > 0:\n  result = a +b-n\nelse:\n  result = 0\nprint(min(a,b),result)", "coverage": [">", ">", ">", "!", "!", ">"]}, "874": {"id": 874, "code": "k = 101\nans = 1\na = 7 % k\nwhile a != 0:\n  ans += 1\n  a = (10*a + 7) % k\n  if ans == 10**6:\n    ans = -1\n    break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5112": {"id": 5112, "code": "s = \"xyz\"\nl = len(s)\nprint(\"{}{}{}\".format(s[0], l - 2, s[l - 1]))", "coverage": [">", ">", ">"]}, "7592": {"id": 7592, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if H - sum(A) <= 0 else 'No')", "coverage": [">", ">", ">"]}, "1909": {"id": 1909, "code": "n = 10;a = 3;b = 5\nx = min(a, b)\nif (a + b) > n:\n    y = (a + b) - n\nelse:\n    y = 0 \nprint(x, y)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "15161": {"id": 15161, "code": "X = 12;Y = 3;Z = 1\nisu = X - Z\nhito = Y + Z\nprint(isu // hito)", "coverage": [">", ">", ">", ">"]}, "16382": {"id": 16382, "code": "n = 2\na = [100, 0]\na.sort()\nm = a[-1]\nres = m\ntemp = 0\nfor i in range(n):\n    if res > abs(m - 2*a[i]):\n        res = abs(m - 2*a[i])\n        temp = a[i]\nprint(m, temp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9505": {"id": 9505, "code": "S = \"2017/01/31\"\nS = S[:3] + '8' + S[4:10]\nprint(S)", "coverage": [">", ">", ">"]}, "6927": {"id": 6927, "code": "h = 10;n = 3\na=map(int,\"4 5 6\".split())\ns=sum(a)\nif s>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16202": {"id": 16202, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nn = A[-1]\nr1 = n / 2\ntemp = 10 ** 9\nr = 0\nfor i, x in enumerate(A):\n  if abs(r1 - x) <= temp and i != N-1:\n    r = x\n    temp = abs(r1 - x)\nprint(str(n)+\" \"+str(r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12080": {"id": 12080, "code": "M = 11;D = 30\nm = 12;d = 1\nif M != m:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "2982": {"id": 2982, "code": "S = \"1234567876\"\nmini = 1000\nfor i in range(len(S)-2):\n    X = int(S[i] + S[i+1] + S[i+2])\n    mini = min(abs(X-753), mini)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3327": {"id": 3327, "code": "A = 20;B = 30\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3426": {"id": 3426, "code": "a = 20;b = 30\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "16993": {"id": 16993, "code": "a = \"D\";b = \"H\"\nif a==b: print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", ">"]}, "11226": {"id": 11226, "code": "s = \"SAT\"\nif s == 'SUN':\n    print(7)\nelif s == 'MON':\n    print(6)\nelif s == 'TUE':\n    print(5)\nelif s == 'WED':\n    print(4)\nelif s == 'THU':\n    print(3)\nelif s == 'FRI':\n    print(2)\nelse:\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5683": {"id": 5683, "code": "from math import ceil\nprint(ceil(int(\"5\")/2))", "coverage": [">", ">"]}, "10092": {"id": 10092, "code": "n = 6\ns = \")))())\"\nst=0\nm=0\nlv = 0\nfor x in s:\n    if x == '(':\n        lv+=1\n    else:\n        lv-=1\n    m=min(m,lv)\ngl=lv-m\nst-=m\nprint('('*st+s+')'*gl)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "9276": {"id": 9276, "code": "a = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\na[3] = \"8\"\nprint(\"\".join(a))", "coverage": [">", ">", ">"]}, "4472": {"id": 4472, "code": "if __name__ == '__main__':\n    a = \"smiles\"\n    print(a[0] + str(len(a)-2)+a[len(a)-1])", "coverage": [">", ">", ">"]}, "805": {"id": 805, "code": "K = 101\ntmp = 1\nans = -1\nif K % 7 == 0:\n    L = 9 * K // 7\nelse:\n    L = 9 * K\nfor i in range(10 ** 7):\n    tmp *= 10\n    tmp = tmp % L\n    if tmp == 1:\n        ans = i + 1\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5719": {"id": 5719, "code": "import sys\nN = 5\nif not ( 1 <= N <= 100 ): sys.exit()\nprint(N//2) if N % 2 == 0 else print(N//2 + 1)", "coverage": [">", ">", ">", ">"]}, "7222": {"id": 7222, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nA.sort(reverse = True)\nfor i in A:\n  H -= i\n  if H <= 0:\n    print('Yes')\n    exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1857": {"id": 1857, "code": "N = 100;A = 100;B = 100\nif A < B:\n    print(A)\nelse:\n    print(B)\nif ((A + B) - N) >= 0:\n    print((A + B) - N)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "9985": {"id": 9985, "code": "n = \"3\"\ns = \"())\"\ncount = 0\nmax_l = 0\nmax_r = 0\nfor c in s:\n    if c ==\"(\":\n        count -= 1\n    else:\n        count += 1\n    max_l = max(max_l, count)\ncount = 0\nfor c in s[::-1]:\n    if c ==\"(\":\n        count += 1\n    else:\n        count -= 1\n    max_r = max(max_r, count)\nprint(\"(\"*max_l + s + \")\"*max_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7683": {"id": 7683, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nb=sum(a)\nif (b>=h):\n    print('Yes')\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "8415": {"id": 8415, "code": "N = 7\nA_list = []\nA_list.append(list(map(int, \"3 3 4 5 4 5 3\".split())))\nA_list.append(list(map(int, \"5 3 4 4 2 3 2\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16333": {"id": 16333, "code": "n = 2\na = [100, 0]\na.sort(reverse=True)\nmax_a = max(a)\na.remove(max_a)\nda = [abs(ai - max_a / 2) for ai in a]\nmed_i = da.index(min(da))\nprint(\"%d %d\" % (max_a, a[med_i]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9232": {"id": 9232, "code": "s = ['2017', '01', '07']\ns[0] = '2018'\nprint('/'.join(s))", "coverage": [">", ">", ">"]}, "1518": {"id": 1518, "code": "r = \"750\"\nn = list(r)\nx = int(n[0])*100 + int(n[0])*10 + int(n[0])\nif x < int(r):\n  print( ((int(n[0])+1)*100 + (int(n[0])+1)*10 + int(n[0])+1))\nelse:\n  print(x)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11695": {"id": 11695, "code": "D=['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']\nS = \"SUN\"\nans=6-D.index(S)\nif ans == 0:\n\tans=7\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16577": {"id": 16577, "code": "a = \"D\";b = \"D\"\na = (a == \"H\")\nb = (b == \"H\")\nif a and b:\n    print(\"H\")\nelif a and (not b):\n    print(\"D\")\nelif (not a) and b:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "7183": {"id": 7183, "code": "h = 210;a = 5\nwa = [31, 41, 59, 26, 53]\nif sum(wa)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "8414": {"id": 8414, "code": "N = 4\nA_list = []\nA_list.append(list(map(int, \"1 1 1 1\".split())))\nA_list.append(list(map(int, \"1 1 1 1\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10955": {"id": 10955, "code": "S = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nN = len(S)\nS_1=S[:N//2]\nS_2=S[N//2+1:]\nN_=len(S_1)\nans='Yes'\nfor n in range(N_):\n    if S_1[n] != S_1[-(n+1)]:\n        ans='No'\n        break\n    if S_2[n] != S_2[-(n+1)]:\n        ans='No'\n        break   \nfor n in range(N):\n    if S[n] != S[-(n+1)]:\n        ans='No'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "5314": {"id": 5314, "code": "N = 5\nprint((N+1)//2)", "coverage": [">", ">"]}, "13709": {"id": 13709, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ns = (h1*60)+m1\ne = (h2*60)+m2\nprint(e-s-k)", "coverage": [">", ">", ">", ">"]}, "8604": {"id": 8604, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16556": {"id": 16556, "code": "N = \"D\";M = \"D\"\nif N=='H':\n    N=0\nelse:\n    N=1\nif M=='H':\n    M=0\nelse:\n    M=1\nif N^M==0:\n    ans = 'H'\nelse:\n    ans = 'D'\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "3101": {"id": 3101, "code": "s = \"35753\"\nans = 10**8\nfor i in range(len(s)-2):\n  ans = min(ans, abs(753-int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2150": {"id": 2150, "code": "N = 10;A = 7;B = 5\nans_max = min(A, B)\nans_min = max(-(N - A - B), 0)\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">"]}, "12424": {"id": 12424, "code": "s = \"akasaka\"\nl = len(s)\na = s[0:(l-1)//2]\nb = len(a)\nprint(\"Yes\" if s == s[::-1] and a == a[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "3781": {"id": 3781, "code": "x = 12;y = 3;z = 1\nif x%(y+z)>=z :\n  print(x//(y+z))\nelse:\n  print(x//(y+z)-1)", "coverage": [">", ">", "!", "!", ">"]}, "7558": {"id": 7558, "code": "h = 20;n = 3\nli = [4, 5, 6]\nif sum(li) >= h:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "13668": {"id": 13668, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nst = h1 * 60 + m1\nen = h2 * 60 + m2\nprint(max(0, en - st - k))", "coverage": [">", ">", ">", ">"]}, "652": {"id": 652, "code": "K = 2\nnum = 0\ncnt = 0\nans = -1\nfor i in range(K):\n    num = num*10 +7\n    cnt += 1\n    if num%K != 0:\n        num = num%K\n    else:\n        ans = cnt\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "2288": {"id": 2288, "code": "n = 10;a = 7;b = 5\nprint(min(a,b),a+b-n) if a+b>n else print(min(a,b),0)", "coverage": [">", ">"]}, "13402": {"id": 13402, "code": "lst = \"abcde,fghihgf,edcba\"\nprint(lst.replace(',',' '))", "coverage": [">", ">"]}, "526": {"id": 526, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nfor i in range(len(s)):\n    need = (123-ord(s[i]))%26\n    if need <= K:\n        s[i] = \"a\"\n        K -= need\nif 0 < K:\n    tmp = ord(s[-1]) + K%26\n    tmp -= 26 if 123 <= tmp else 0\n    s[-1] = chr(tmp)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18715": {"id": 18715, "code": "from sys import stdin\nH = 3\nW = 7\nN = 10\nif N%(max(H,W))==0:\n    print(N//(max(H,W)))\nelse:\n    print(N//(max(H,W))+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18513": {"id": 18513, "code": "h = 14\nw = 12\nn = 112\nprint(n // max(h,w)  + (1 if n%max(h,w) != 0 else 0))", "coverage": [">", ">", ">", ">"]}, "16487": {"id": 16487, "code": "n = 2\na = [100, 0]\nx = max(a)\nm = x/2\na.remove(x)\na.sort()\nans = x\nfor i in a:\n    y = abs(i - m)\n    if ans >= y:\n        ans = y\n    else:\n        break    \n    z = i\nprint(x, z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3921": {"id": 3921, "code": "x = 64145;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "13000": {"id": 13000, "code": "X = 5\nprint(['NO', 'YES'][[7, 5, 3].count(X)])", "coverage": [">", ">"]}, "1074": {"id": 1074, "code": "n = 111\nhyaku=(n-n%100)/100\nif n%100>hyaku*10+hyaku:\n    hyaku+=1\n    print(int(hyaku*100+hyaku*10+hyaku))\nelse:\n    print(int(hyaku*100+hyaku*10+hyaku))", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "11433": {"id": 11433, "code": "D = dict()\nD['SUN'] = 7\nD['MON'] = 6\nD['TUE'] = 5\nD['WED'] = 4\nD['THU'] = 3\nD['FRI'] = 2\nD['SAT'] = 1\nprint(D[\"SUN\"])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7508": {"id": 7508, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nif H - sum(A) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "16883": {"id": 16883, "code": "a = \"D\";b = \"D\"\nif a==b:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "1353": {"id": 1353, "code": "n = [7, 5, 0]\nif n[0]<n[1] or (n[0]==n[1] and n[0]<n[2]):\n  print(str(n[0]+1)*3)\nelse:\n  print(str(n[0])*3)", "coverage": [">", ">", "!", "!", ">"]}, "12511": {"id": 12511, "code": "import math\na = 100;b = 50;k = 4\ng = math.gcd(a,b)\nc = 0\ni = 1\nfor i in range(g,0,-1) :\n    if g%i == 0 :\n        c+=1\n        if c==k :\n            break\nprint(i)     ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4306": {"id": 4306, "code": "h = 10;m = 0;h2 = 12;m2 = 0;k = 120\ng = h2 * 60 + m2\ns = h * 60 + m\nans = g - k - s\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "4051": {"id": 4051, "code": "import math\nS = [10, 0, 12, 0, 120]\na = (S[2]-S[0])*60+(S[3]-S[1])\nb = a - S[4]\nif(b>0):\n  print(b)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16988": {"id": 16988, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    print(b)\nelif a == 'D':\n    print('HD'[int(not 'HD'.index(b))])", "coverage": [">", ">", "!", ">", ">"]}, "2127": {"id": 2127, "code": "N = 100;A = 100;B = 100\nif A + B <= N :\n    print(str(min(A, B)) + \" 0\")\nelse :\n    print(str(min(A, B)) + \" \" + str(abs(N - (2 * N - A - B))))", "coverage": [">", ">", "!", "!", ">"]}, "9761": {"id": 9761, "code": "N = 6\nS = \")))())\"\nx=0\nm=0\nfor i in range(N):\n    if S[i]=='(':\n        x+=1\n    else:\n        x-=1\n        m=min(x,m)\na=-m\nb=x-m\nprint('('*a+S+')'*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "9315": {"id": 9315, "code": "S = \"2017/01/31\"\nout = '2018' + S[4:]\nprint(out) ", "coverage": [">", ">", ">"]}, "6154": {"id": 6154, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nbc = [None]*(N+1)\nbc[N] = 0\nfor i in range(N-1, -1, -1):\n    bc[i] = bc[i+1] + N - bisect.bisect_right(C, B[i])\nans = 0\nfor i in range(N):\n    ans += bc[bisect.bisect_right(B, A[i])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15174": {"id": 15174, "code": "X = 64145;Y = 123;Z = 456\nX -= 2*Z\nans = X // (Y+Z)\nX %= (Y+Z)\nif X >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "7733": {"id": 7733, "code": "N = 4;K = 3\nList = [2, 3, 1, 4]\nk=K-1\nn = (N-1)/k\nnn = int(n)\nif n-nn > 0:\n  nn = nn+1\nprint(nn)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "990": {"id": 990, "code": "n = 112\na = [str(i+1)*3 for i in range(9)]\nfor i in a:\n    if n<=int(i):\n        print(int(i))\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "5803": {"id": 5803, "code": "n = 5\nif n % 2 == 0:\n    print(int(n/2))\nelse:\n    print(n//2 + 1)", "coverage": [">", ">", "!", "!", ">"]}, "1426": {"id": 1426, "code": "x = [i * 111 for i in range(1, 10)]\nN = 750\nfor j in range(len(x)):\n  if 0 <= x[j] - N <= 110:\n    print(x[j])\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "2901": {"id": 2901, "code": "s = \"1111111111\"\nmin_v = 9999\nfor i in range(len(s) - 2):\n    n = int(s[i:i + 3])\n    min_v = min(min_v, abs(753 - n))\nprint(min_v)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4942": {"id": 4942, "code": "s = \"internationalization\"\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">"]}, "12644": {"id": 12644, "code": "x = 5\nli = [3,5,7]\nif x in li:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11370": {"id": 11370, "code": "S = \"SAT\"\nweek= ['SUN','MON','TUE','WED','THU','FRI','SAT']\nans=7-week.index(S)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18552": {"id": 18552, "code": "H = 14\nW = 12\nN = 112\nc=0\nch=0\ncw=0\nwhile c<N:\n    if H-cw>W-ch:\n        c+=H-cw\n        ch+=1\n    else:\n        c+=W-ch\n        cw+=1\nprint(ch+cw)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "9129": {"id": 9129, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3]=8\nstr_s=''.join(map(str,S))\nprint(str_s)", "coverage": [">", ">", ">", ">"]}, "8627": {"id": 8627, "code": "n = 4\nx = [1, 1, 1, 1]\ny = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    ans=max(ans,sum(x[:i+1])+sum(y[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10419": {"id": 10419, "code": "a = 8;b = 12;k = 2\ncnt = 0\nfor i in range(min(a,b),0,-1):\n    if a%i == 0 and b%i == 0:\n        cnt += 1\n    if cnt == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13651": {"id": 13651, "code": "x = \"abcde\";y = \"fghihgf\";z = \"edcba\"\nprint(x,y,z)", "coverage": [">", ">"]}, "18641": {"id": 18641, "code": "h = 3\nw = 7\nn = 10\nprint(min((n+h-1)//h,(n+w-1)//w))", "coverage": [">", ">", ">", ">"]}, "6528": {"id": 6528, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in range(n):\n    num1 = bisect.bisect_left(a,b[i])\n    num2 = n - bisect.bisect(c,b[i])\n    ans += num1*num2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11943": {"id": 11943, "code": "md = [11, 30]\nmmd = [12, 1]\nif md[0] != mmd[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11529": {"id": 11529, "code": "s = \"SAT\"\nday = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\na = day.index(s)\nans = 7 - a\nif ans == 0:\n    print(7)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "2509": {"id": 2509, "code": "n = {'9', '4', '0', '8'}\na = {\"1\", \"9\", \"7\", \"4\"}\nprint(\"YES\" if n == a else \"NO\")", "coverage": [">", ">", ">"]}, "8028": {"id": 8028, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nif (n + k - 1) // k == 1:\n    print(1)\nelse:\n    res = ((n - k) + (k - 2)) // (k - 1) + 1\n    print(res)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "11245": {"id": 11245, "code": "S = \"SUN\"\nlis=['SUN','MON','TUE','WED','THU','FRI','SAT']\ni=lis.index(S)\nif S=='SUN':\n    print(7)\nelse:\n    for j in range(1,8):\n        if lis[i-j]=='SUN':\n            print(7-j)\n            break", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "183": {"id": 183, "code": "s = \"codefestival\"\nk = 100\nans=\"\"\nfor i in s[:-1]:\n    if i==\"a\":\n        ans+=i\n        continue\n    if k>=123-ord(i):\n        k-=123-ord(i)\n        ans+=\"a\"\n    else:\n        ans+=i\ni=s[-1]\nans+=chr((ord(i)+k-97)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "5530": {"id": 5530, "code": "n = 5\nprint(n//2+n%2)", "coverage": [">", ">"]}, "8527": {"id": 8527, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12095": {"id": 12095, "code": "m1 = 11\nm2 = 11\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "5163": {"id": 5163, "code": "s = \"xyz\"\nprint('%c%d%c'%(s[0],len(s)-2,s[-1]))", "coverage": [">", ">"]}, "4061": {"id": 4061, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(H2*60+M2-H1*60-M1-K)", "coverage": [">", ">"]}, "4009": {"id": 4009, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nt1=H1*60+M1\nt2=H2*60+M2\nprint(t2-K-t1)", "coverage": [">", ">", ">", ">"]}, "9385": {"id": 9385, "code": "a = \"2017/01/31\"\nprint('2018'+a[4:])", "coverage": [">", ">"]}, "17087": {"id": 17087, "code": "a = \"D\";b = \"D\"\nif a == b:\n  ans = 'H'\nelse:\n  ans = 'D'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16367": {"id": 16367, "code": "import sys\nN = 2\nA = [100, 0]\nn = max(A)\nmid = n / 2\nr = float(\"inf\")\nfor a in A:\n    if a == n:\n        continue\n    if abs(mid - r) > abs(mid - a):\n        r = a\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4734": {"id": 4734, "code": "word = \"xyz\"\nn=len(word)\nprint(word[0]+str(n-2)+word[n-1])", "coverage": [">", ">", ">"]}, "5654": {"id": 5654, "code": "N = 2\nprint(N // 2 + N % 2)", "coverage": [">", ">"]}, "11452": {"id": 11452, "code": "day = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\" ]\ns = \"SAT\"\npos = day.index(s)\nprint(7-pos)", "coverage": [">", ">", ">", ">"]}, "8162": {"id": 8162, "code": "N = 4;K = 3\nalist = [2, 3, 1, 4]\nans = 1\nN -= K\nwhile N > 0:\n    N -= K-1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16287": {"id": 16287, "code": "import sys\nimport bisect\nn = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nm = A[-1]\nif n == 2:\n    print(A[-1],A[0])\n    sys.exit()\ni = bisect.bisect_left(A,m//2)\nif i == 0:\n    print(m,A[0])\nelse:\n    if m - A[i] < A[i-1]:\n        print(m,A[i-1])\n    else:\n        print(m,A[i])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!", ">"]}, "3763": {"id": 3763, "code": "X = 100000;Y = 1;Z = 1\nN=(X-Z)//(Y+Z)\nprint(N)", "coverage": [">", ">", ">"]}, "17546": {"id": 17546, "code": "S = [1, 7, 0, 0]\nif 1 <= S[0]*10 + S[1] <= 12 and 1 <= S[2]*10 + S[3] <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= S[0]*10 + S[1] <= 12 and (S[2]*10 + S[3] > 12 or S[2]*10 + S[3] == 0):\n    print(\"MMYY\")\nelif (S[0]*10 + S[1] > 12 or S[0]*10 + S[1] == 0)  and  1 <= S[2]*10 + S[3] <= 12:\n    print(\"YYMM\")\nelif (S[0]*10 + S[1] > 12 or S[0]*10 + S[1] == 0) and (S[2]*10 + S[3] > 12 or S[2]*10 + S[3] == 0):\n    print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "7464": {"id": 7464, "code": "H = 20;N = 3\nA = [4, 5, 6]\nfor i in range(N):\n    H -= A[i]\nprint(['No','Yes'][H <= 0])", "coverage": [">", ">", ">", ">", ">"]}, "4754": {"id": 4754, "code": "s = \"smiles\"\na = len(s)\ns1 = s[0]\ns2 = s[a-1]\nb = str(a-2)\nprint(s1+b+s2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9099": {"id": 9099, "code": "date = \"2017/01/31\"\nprint(date.replace(\"2017\",\"2018\",1))", "coverage": [">", ">"]}, "15713": {"id": 15713, "code": "a = 13;b = 3;c = 1\nprint((a-b-2*c)//(b+c)+1)", "coverage": [">", ">"]}, "10457": {"id": 10457, "code": "import math\nA = 1;B = 1;K = 1\nanslist=[]\nfor i in range(1,max(A,B)+1):\n    if (A%i==0)&(B%i==0):\n        anslist.append(i)\nprint(anslist[0-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18244": {"id": 18244, "code": "H = 2\nW = 100\nN = 200\nA = H if H > W else W\nif N%A == 0:\n    print(N//A)\nelse:\n    print(N//A+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3877": {"id": 3877, "code": "X = 64146;Y = 123;Z = 456\nX -= 2 * Z\nX -= Y\nans = 0\nif 0 <= X:\n    ans = 1 + X // (Y + Z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9694": {"id": 9694, "code": "n = \"8\"\ns = \"))))((((\"\nl = \"(\"\nr = \")\"\nadd_right, add_left = 0, 0\nfor c in s:\n    if c == l:\n        add_right += 1\n    else:\n        if add_right:\n            add_right -= 1\n        else:\n            add_left += 1\nprint(l * add_left + s + r * add_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "18123": {"id": 18123, "code": "S = ['0', '1', '1', '2']\na = int(\"\".join(S[0:2]))\nb = int(\"\".join(S[2:4]))\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n    print(\"MMYY\")\nelif 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "1376": {"id": 1376, "code": "n = ['7', '5', '0']\nx = int(n[0]*3)\ny = int(n[0]+n[1]+n[2])\nif x >= y:\n  print(x)\nelse:\n  print(x+111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "18853": {"id": 18853, "code": "N = 3;x = 3\nvalues = map(int, \"2 2 2\".split())\ncount = 0\nv1 = next(values)\nfor v2 in values:\n    surplus = max(v1 + v2 - x, 0)\n    count += surplus\n    v1 = max(0, v2 - surplus)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17016": {"id": 17016, "code": "i = ['H', 'H']\na = i[0]\nb = i[1]\nif a == b:\n    if a == \"H\":\n        print(\"H\")\n    else:\n        print(\"H\")\nelif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6038": {"id": 6038, "code": "import math\nn = 2\nprint(math.ceil(n/2))", "coverage": [">", ">", ">"]}, "16282": {"id": 16282, "code": "n = \"2\"\na = [100, 0]\nmax_ele = 0\nfor i in range(len(a)):\n    if a[i] > max_ele:\n        max_ele = a[i]\nmid = 0\nmid_val = max_ele / 2\nfor j in range(len(a)):\n    if abs(mid_val - a[j]) < abs(mid_val - mid):\n        mid = a[j]\nprint(str(max_ele) + \" \" + str(mid))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "7071": {"id": 7071, "code": "h = 10;n = 3\na_list = [4, 5, 6]\nif sum(a_list)>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "9869": {"id": 9869, "code": "N = 3\nS = \"())\"\nl = r = 0\nL = \"\"\nfor i in S:\n    if i == \"(\":\n        l += 1\n    else:\n        r += 1\n    if l < r:\n        L += \"(\"\n        l += 1\nR = \")\"* (l-r)\nprint(L+S+R)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "566": {"id": 566, "code": "s = \"a\"\nK = 25\nc = []\nfor i in range(len(s)):\n    if s[i]=='a':\n        c.append(0)\n    else:\n        c.append(123-ord(s[i]))\nfor i in range(len(s)):\n    if c[i] <= K:\n        K -= c[i]\n        c[i]=0\n    else:\n        continue\nif K >0 and c[-1]==0:\n    c[i]+= K%26\nelse:\n    c[i] = (-c[i] +K)%26\nsi = ''\nfor i in range(len(c)-1):\n    if c[i]==0:\n        si += 'a'\n    else:\n        si += s[i]\nsi += chr(97+c[-1])\nprint(si)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "11029": {"id": 11029, "code": "s = \"akasaka\"\nn = len(s)\nlist_s = list(s)\nlist_s_part1 = list_s[0:(n - 1) // 2]\nlist_s_part2 = list_s[(n + 1) // 2:n]\nlist_s_rev = list(reversed(list_s))\nlist_s_part1_rev = list(reversed(list_s_part1))\nlist_s_part2_rev = list(reversed(list_s_part2))\nif ''.join(list_s) == ''.join(list_s_rev) and    ''.join(list_s_part1) == ''.join(list_s_part1_rev) and    ''.join(list_s_part2) == ''.join(list_s_part2_rev):\n    print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "11604": {"id": 11604, "code": "D = \"SAT\"\nW = ['SUN','MON','TUE','WED','THU','FRI','SAT'] \nprint(7 - W.index(D))", "coverage": [">", ">", ">"]}, "18707": {"id": 18707, "code": "H = 14\nW = 12\nN = 112\na = max(H, W)\nprint((N+a-1)//a)", "coverage": [">", ">", ">", ">", ">"]}, "15448": {"id": 15448, "code": "x = 13;y = 3;z = 1\nx -= z\ncount = 0\nwhile x >= y + z:\n    x -= y + z\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9234": {"id": 9234, "code": "import sys\nS = \"2017/01/07\"\nif len(S) != 10:\n    sys.exit()\nif S[0:8] != '2017/01/':\n    sys.exit()\nif not (1 <= int(S[-2:]) <= 31):\n    sys.exit()\nprint(S.replace('2017','2018'))", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "5898": {"id": 5898, "code": "n = 100\nprint(-1*(n//(-2)))", "coverage": [">", ">"]}, "9916": {"id": 9916, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nsurplus_left, surplus_right = 0, 0\nright_count, left_count = 0, 0\nfor i in range(n - 1, -1, -1):\n    if s[i] == \"(\":\n        if left_count > 0:\n            left_count -= 1\n        else:\n            surplus_left += 1\n    else:\n        left_count += 1\nfor i in range(n):\n    if s[i] == \")\":\n        if right_count > 0:\n            right_count -= 1\n        else:\n            surplus_right += 1\n    else:\n        right_count += 1\nprint(\"(\" * surplus_right + \"\".join(s) + \")\" * surplus_left)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">"]}, "18176": {"id": 18176, "code": "s = \"1905\"\na, b = s[:2], s[2:]\nif '01' <= a <= '12':\n    if '01' <= b <= '12':\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if '01' <= b <= '12':\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "19437": {"id": 19437, "code": "n = 10\nif n%2:print(2*n)\nelse:print(n)", "coverage": [">", ">", ">"]}, "17290": {"id": 17290, "code": "s = \"D H\"\nd = {'H H': 'H', 'H D': 'D', 'D H': 'D', 'D D': 'H'}\nprint(d[s])", "coverage": [">", ">", ">"]}, "3689": {"id": 3689, "code": "a = 20;b = 30\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "6307": {"id": 6307, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nlenC = len(C)\nans = 0\nfor b in B:\n  idxA = bisect.bisect_left(A, b)\n  idxC = lenC - bisect.bisect_right(C, b)\n  ans += idxA * idxC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12461": {"id": 12461, "code": "S = \"akasaka\"\nN = len(S)\nflag = True\nif S!=\"\".join(reversed(list(S))):\n    flag=False\nif S[:int((N-1)/2)]!=\"\".join(reversed(list(S[:int((N-1)/2)]))):\n    flag=False\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">"]}, "13376": {"id": 13376, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "11921": {"id": 11921, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(1 if M1 != M2 else 0)", "coverage": [">", ">", ">"]}, "10900": {"id": 10900, "code": "s = \"atcoder\"\nn=len(s)\ns2=s[:(n-1)//2]\ns3=s[(n+3)//2-1:]\ncount=0\nfor i in range(n//2):\n    if s[i]==s[-(i+1)]:\n        count+=1\nfor i in range((n-1)//2):\n    if s2[i]==s2[-(i+1)]:\n        count+=1\nfor i in range(n-(n+3)//2+1):\n    if s3[i]==s3[-(i+1)]:\n        count+=1\nif count==n//2+(n-1)//2+n-(n+3)//2+1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10871": {"id": 10871, "code": "S = \"akasaka\"\nflag = 0\nfor i in range(0,len(S)//2):\n    if S[i] == S[-1-i]:\n        continue\n    else:\n        flag = 1\n        print(\"No\")\n        break\nif flag == 0:\n    S = S[:((len(S)-1)//2)]\n    for i in range(0,len(S)//2):\n        if S[i] == S[-1-i]:\n            continue\n        else:\n            flag = 1\n            print(\"No\")\n            break\nif flag == 0:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "4594": {"id": 4594, "code": "s = \"internationalization\"\nfirst_s = s[0]\nlast_s = s[-1]\nmiddle_s = str(len(s) - 2)\nans = first_s + middle_s + last_s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2271": {"id": 2271, "code": "n = 100;a = 100;b = 100\nans1 = min(a, b)\nans2 = max(a + b - n, 0)\nans = ' '.join([str(ans1), str(ans2)]) \nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "9114": {"id": 9114, "code": "y = \"2017\";m = \"01\";d = \"07\"\ns = \"2018\" + \"/\" + m + \"/\" + d\nprint(s)", "coverage": [">", ">", ">"]}, "222": {"id": 222, "code": "S = \"a\"\nK = 25\nN = len(S)\nT = list(S)\nfor i in range(N - 1):\n    if T[i] == 'a':\n        continue\n    if K >= ord('z') - ord(T[i]) + 1:\n        K -= ord('z') - ord(T[i]) + 1\n        T[i] = 'a'\nT[N - 1] = chr(ord('a') + (ord(T[N - 1]) - ord('a') + K) % 26)\nprint(\"\".join(T))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "17724": {"id": 17724, "code": "s = \"1905\"\na=int(s[0:2])\nb=int(s[2:4])\nif 0<a<13:\n  if 0<b<13:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if 0<b<13:\n    print('YYMM')\n  else:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "16744": {"id": 16744, "code": "a = \"D\";b = \"H\"\nprint(\"H\" if (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\") else \"D\")", "coverage": [">", ">"]}, "17189": {"id": 17189, "code": "a = \"D\";b = \"H\"\nif a==b==\"H\" or a==b==\"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "6806": {"id": 6806, "code": "HP = 20;n = 3\na = [4, 5, 6]\ncount = 0\nfor i in a:\n  count += i\nif count >= HP:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6671": {"id": 6671, "code": "h = 10;n = 3\na = [4, 5, 6]\nprint('Yes' if h-sum(a) <= 0 else 'No')", "coverage": [">", ">", ">"]}, "11998": {"id": 11998, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D1>D2 and M2>M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14869": {"id": 14869, "code": "N = 3;P = 0\nA = [1, 1, 1]\nf=0\nfor i in range(N):\n  if A[i]%2==1:\n    f=1\nif f==0:\n  if P==0:\n    print(2**N)\n  else:\n    print(0)\nelse:\n  print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "883": {"id": 883, "code": "k = 2\nseven = 0\ni = 0\nif k % 2 == 0:\n    print(-1)\nelse:\n    while True:\n        i += 1\n        seven = seven * 10 + 7\n        seven = seven % k\n        if seven == 0:\n            print(i)\n            break\n        if i>1000000:\n            print(-1)\n            break", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "19211": {"id": 19211, "code": "n = 5\nif n % 2 == 1:\n    print(0)\nelif n % 2 == 0:\n    ans = 0\n    k = 10\n    while n >= k:\n        ans += n//k\n        k *= 5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17448": {"id": 17448, "code": "n = 1905\nd2 = n % 100\nu2 = n // 100\nif 1 <= d2 <= 12 and 1 <= u2 <= 12:\n    print(\"AMBIGUOUS \")\nelif 1 <= d2 <= 12:\n    print(\"YYMM\")\nelif 1 <= u2 <= 12:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "18590": {"id": 18590, "code": "h = 3\nw = 7\nn = 10\nif h >= w:\n  print(-(-n//h))\nelif w > h:\n  print(-(-n//w))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "6847": {"id": 6847, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nx = sum(a)\nif h <= x: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", "!"]}, "19238": {"id": 19238, "code": "N = 5\nif N % 2 == 0:\n    Ans = 0\n    p = 1\n    check = 0\n    while check != 0 or p == 1:\n        check = N // (2 * 5**p)\n        Ans += check\n        p += 1\n    print(Ans)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "7972": {"id": 7972, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif (N-1)%(K-1)==0:\n    out=(N-1)//(K-1)\nelse:\n    out=(N-1)//(K-1)+1\nprint(out)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "12785": {"id": 12785, "code": "n = 6\nif(3<=n<=7 and n%2==1):print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", ">"]}, "1163": {"id": 1163, "code": "n = 750\nans = 0\nif 100 <= n <= 111:\n  ans = 111\nelif 112 <= n <= 222:\n  ans = 222\nelif 223 <= n <= 333:\n  ans = 333\nelif 334 <= n <= 444:\n  ans = 444\nelif 445 <= n <= 555:\n  ans = 555\nelif 556 <= n <= 666:\n  ans = 666\nelif 667 <= n <= 777:\n  ans = 777\nelif 778 <= n <= 888:\n  ans = 888\nelif 889 <= n <= 999:\n  ans = 999\nprint(ans)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "8834": {"id": 8834, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17026": {"id": 17026, "code": "N = ['D', 'H']\nprint('H' if (N[0]=='H' and N[1] == 'H') or (N[0]=='D' and N[1] == 'D') else 'D')", "coverage": [">", ">"]}, "14103": {"id": 14103, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nflag=0\ncount=1\nfor i in range(1,N):\n    if A[i-1]<A[i]:\n        if flag==-1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=1\n    elif A[i-1]>A[i]:\n        if flag==1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=-1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18077": {"id": 18077, "code": "S = 112\nA = S//100\nB = S%100\nif 0 < A <= 12 and 0 < B <= 12:\n    print(\"AMBIGUOUS\")\nelif 0 < A <= 12:\n    print(\"MMYY\")\nelif 0 < B <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4119": {"id": 4119, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nstart = (60 * h1) + m1\nend = (60 * h2) + m2 - k\nprint(end - start)", "coverage": [">", ">", ">", ">"]}, "11185": {"id": 11185, "code": "S = \"akasaka\"\nN = len(S)\nT = S[:(N-1)//2]\nU = S[(N+3)//2-1:]\nif S==S[::-1] and T == T[::-1] and U == U[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "2560": {"id": 2560, "code": "a = 1;b = 2;c = 9;d = 1\nprint(\"YES\" if {1,9,7,4} == set([a,b,c,d])else \"NO\")", "coverage": [">", ">"]}, "7267": {"id": 7267, "code": "H = 10;N = 3\nA_list = map(int, \"4 5 6\".split())\nans = \"Yes\" if sum(A_list) >= H else \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10173": {"id": 10173, "code": "n = 6\ns = \")))())\"\ncnt=0\nfor i in s:\n    if i==\"(\": cnt+=1\n    elif cnt>=1: cnt-=1\ncnt2=0\nfor i in range(n-1,-1,-1):\n    if s[i]==\")\": cnt2+=1\n    elif cnt2>=1: cnt2-=1\nprint(\"(\"*cnt2+s+\")\"*cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1893": {"id": 1893, "code": "n = 100;a = 100;b = 100\nprint(\"{} {}\".format(min(a, b), max(a + b - n, 0)))", "coverage": [">", ">"]}, "8829": {"id": 8829, "code": "NN = 4\nAA1 = [1, 1, 1, 1]\nAA2 = [1, 1, 1, 1]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9220": {"id": 9220, "code": "S = \"2017/01/07\"\nS_array=S.split('/')\nprint('2018/'+S_array[1]+'/'+S_array[2])", "coverage": [">", ">", ">"]}, "14340": {"id": 14340, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndir = 0\nold = a[0]\nans = 1\nfor i in range(1, len(a)):\n    now = a[i]\n    if dir == 0:\n        if old < now:\n            dir = 1\n        elif old > now:\n            dir = -1\n    elif dir == 1:\n        if old > now:\n            dir = 0\n            ans += 1\n    elif dir == -1:\n        if old < now:\n            dir = 0\n            ans += 1\n    old = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4445": {"id": 4445, "code": "from sys import stdin\ns = \"smiles\"\nprint(\"%s%d%s\" % (s[:1], len(s)-2, s[-1]))", "coverage": [">", ">", ">"]}, "11746": {"id": 11746, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(m2 - m1)", "coverage": [">", ">", ">"]}, "8096": {"id": 8096, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif (A.index(1)+1)>=K and (N-A.index(1))>=K:\n  ans=-(-A.index(1))//(K-1)-(-N+A.index(1)+1)//(K-1)\nelse:\n  ans=1-(-N+K)//(K+1)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1482": {"id": 1482, "code": "n = 750\nwhile True:\n    n_s = str(n)\n    if n_s[0] == n_s[1] == n_s[2]:\n        break\n    n += 1\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7063": {"id": 7063, "code": "n1 = 10;n2 = 3\nn3 = [4, 5, 6]\nfor i1 in range(n2):\n    n1 -= n3[i1]\nif n1 <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11537": {"id": 11537, "code": "s = \"SAT\"\nList=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nres = 0\nfor i in range(7):\n  if s == List[i]:\n    res = 7-i\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10163": {"id": 10163, "code": "import sys\ninput = sys.stdin.readline\nn = 3\nS = \"())\"\nb = 0\nq = 0\nfor s in S:\n    if s == '(':\n        b +=1\n    else:\n        if b>0:\n            b -= 1\n        else:\n            q += 1\nprint('('*q+S+')'*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "2522": {"id": 2522, "code": "s = {1, 4, 9, 7}\nprint(\"YES\" if s=={1,7,9,4} else \"NO\")", "coverage": [">", ">"]}, "9971": {"id": 9971, "code": "n = 3\nt = \"())\"\nlef = 0\nrig = 0\ncl = 0\ncr = 0\nfor i in range(n):\n    if t[i] == \")\":\n        rig += 1\n        if rig > lef+cl:\n            cl += 1\n    if t[i] == \"(\":\n        lef += 1\nlef = 0\nrig = 0\nfor i in reversed(range(n)):\n    if t[i] == \"(\":\n        lef += 1\n        if lef > rig+cr:\n            cr += 1\n    if t[i] == \")\":\n        rig += 1\nfor i in range(cl):\n    print(\"(\",end=\"\")\nprint(t,end=\"\")\nfor i in range(cr):\n    print(\")\",end=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "8809": {"id": 8809, "code": "from itertools import accumulate\nn = 4\nau = [1, 1, 1, 1]\nal = [1, 1, 1, 1]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15600": {"id": 15600, "code": "X = 64145;Y = 123;Z = 456\nprint(X//(Y+Z) if (X%(Y+Z))>=Z else (X//(Y+Z))-1)", "coverage": [">", ">"]}, "18638": {"id": 18638, "code": "import math\na = 3\nb = 7\nx = 10\nprint(math.ceil(x/max(a,b)))", "coverage": [">", ">", ">", ">", ">"]}, "6285": {"id": 6285, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor i in range(len(B)):\n    a_b = bisect.bisect_left(A,B[i])\n    c_b = bisect.bisect_right(C,B[i])\n    count += a_b * (N - c_b)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3146": {"id": 3146, "code": "import sys\nS = \"1111111111\"\nmin = 1000\nfor I in range(len(S)):\n    if min > abs(753 - int(S[I:I+3])):\n        min = abs(753 - int(S[I:I+3]))\nprint(min)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13133": {"id": 13133, "code": "X = \"6\"\nif X in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "2478": {"id": 2478, "code": "N = {'9', '4', '1', '7'}\nprint('YES' if N == {'1', '4', '7', '9'} else 'NO')", "coverage": [">", ">"]}, "14001": {"id": 14001, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = down = 0\ncur = a[0]\nans = 0\nfor x in a:\n    if cur < x:\n        up = 1\n    elif cur > x:\n        down = 1\n    if up and down:\n        ans += 1\n        up = down = 0\n    cur = x\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6913": {"id": 6913, "code": "h = 210;n = 5\nif h <= sum(list(map(int, \"31 41 59 26 53\".split()))):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!"]}, "3164": {"id": 3164, "code": "import sys\ninint = \"<function <lambda>>\"\ninintm = \"<function <lambda>>\"\ninintl = lambda: list(inintm())\ninstrm = \"<function <lambda>>\"\ninstrl = lambda: list(instrm())\ns = \"1111111111\"\nbase = 753\nans = 1000\nfor i in range(len(s)-2):\n    if abs(base - int(s[i:i+3])) < ans:\n        ans = abs(base - int(s[i:i+3]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19147": {"id": 19147, "code": "n = 12\nif n%2==1:\n    print(0)\nelse:\n    ans=0\n    n5 = 10\n    while(n>=n5):\n        ans+=n//n5\n        n5*=5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16967": {"id": 16967, "code": "icase=0\nif icase==0:\n    a = \"D\";b = \"D\"\n    if a==\"H\":\n        print(b)\n    elif a==\"D\":\n        if b==\"H\":\n            print(\"D\")\n        elif b==\"D\":\n            print(\"H\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "8787": {"id": 8787, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3917": {"id": 3917, "code": "x = 13;y = 3;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "5739": {"id": 5739, "code": "import sys\nimport math\nfrom math import ceil\ninput = sys.stdin.readline\nprint(ceil(int(\"100\") / 2))", "coverage": [">", ">", ">", ">", ">"]}, "3703": {"id": 3703, "code": "A = 20;B = 15\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "14832": {"id": 14832, "code": "from math import factorial\nn = 2;p = 0\nA = [1, 3]\na,b=0,0\nfor i in A:\n    if i%2==0:a +=1\n    else:b +=1\ncnt=0 if p==1 else 1\nfor i in range(p,b+1,2):\n    if i==0:continue\n    cnt +=factorial(b)//(factorial(i)*factorial(b-i))\nprint(cnt*(2**a))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11241": {"id": 11241, "code": "s = \"SUN\"\nif s==\"SUN\":\n    print(7)\nelif s==\"MON\":\n    print(6)\nelif s==\"TUE\":\n    print(5)\nelif s==\"WED\":\n    print(4)\nelif s==\"THU\":\n    print(3)\nelif s==\"FRI\":\n    print(2)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5106": {"id": 5106, "code": "s = \"xyz\"\nfirst_letter = s[0]\nlast_letter = s[-1]\nnumber = str(len(s) - 2)\nprint(first_letter + number + last_letter)", "coverage": [">", ">", ">", ">", ">"]}, "16071": {"id": 16071, "code": "a = \"20\";b = \"15\"\nc = int(a)-(2*int(b))\nif c >= 0:\n    print(c)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "6437": {"id": 6437, "code": "from bisect import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nbb = [n-bisect(c, b[i])  for i in range(n)]\nbbb = []\ntmp = 0\nfor i in range(n)[::-1]:\n    tmp += bb[i]\n    bbb.append(tmp)\nbbb = bbb[::-1]\nj = 0\nwhile i < n:\n    j = bisect(b, a[i], j,n-1)\n    if b[j] <= a[i]:\n        break\n    ans += bbb[j]\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15487": {"id": 15487, "code": "X = 64145;Y = 123;Z = 456\nanswer = (X-Z) // (Y+Z)\nprint(answer)", "coverage": [">", ">", ">"]}, "17667": {"id": 17667, "code": "S = \"1905\"\nx=int(S[:2])\ny=int(S[2:])\nif x==0:\n    if 0<y<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif 0<x<=12:\n    if 0<y<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelif x>=13:\n    if 0<y<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "10482": {"id": 10482, "code": "a = 1;b = 1;k = 1\nfor i in reversed(range(1,min(a,b)+1)):\n  if a%i==0 and b%i==0 :\n    k=k-1\n  if k==0:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13837": {"id": 13837, "code": "n = 6\na_li = [1, 2, 3, 2, 2, 1]\nif n < 3:\n    print(1)\n    exit()\nans = 1\nflag = \"flat\"\nfor i in range(1,n):\n    if a_li[i-1] > a_li[i]:\n        if flag == \"up\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"down\"\n    elif a_li[i-1] < a_li[i]:\n        if flag == \"down\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"up\"\n    else:\n        if flag == \"flat\":\n            flag = \"flat\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">"]}, "12913": {"id": 12913, "code": "N = \"6\"\nN_List = [\"3\",\"5\",\"7\"]\nif N in N_List:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "18078": {"id": 18078, "code": "S = 1700\nA = S//100\nB = S%100\nif 0 < A <= 12 and 0 < B <= 12:\n    print(\"AMBIGUOUS\")\nelif 0 < A <= 12:\n    print(\"MMYY\")\nelif 0 < B <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12147": {"id": 12147, "code": "x = 11;y = 16\na = 11;b = 17\nif y+1 == b:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "4722": {"id": 4722, "code": "s = \"xyz\"\nn=len(s)\nS=list(s)\nt=S[0]+str(n-2)+S[n-1]\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "18682": {"id": 18682, "code": "H = 2\nW = 100\nN = 200\ncnt, paint = 0, 0\nwhile paint < N:\n    paint += max(H,W)\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7908": {"id": 7908, "code": "n = 4;k = 3\nan = [2, 3, 1, 4]\nmini = min(an)\nneed = 0\nfor a in an:\n    if a != mini:\n        need += 1\nprint(-(-need//(k-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19082": {"id": 19082, "code": "n = 5\nans = 0\nif n % 2 == 1:\n    ans = 0\nelse:\n    ans += n//10\n    n = n//10\n    while n > 1:\n        ans += n//5\n        n = n//5\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "17201": {"id": 17201, "code": "a = \"D\";b = \"D\"\nprint('H' if (a == 'H') ^ (b == 'D') else 'D')", "coverage": [">", ">"]}, "18603": {"id": 18603, "code": "import math\nh = 14\nw = 12\nn = 112\nm = max(h,w)\nprint(math.ceil(n/m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "2672": {"id": 2672, "code": "a = 1;b = 7;c = 9;d = 4\ndict = {}\ndict[a] = 1\ndict[b] = 1\ndict[c] = 1\ndict[d] = 1\nif 1 in dict and 9 in dict and 7 in dict and 4 in dict:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "584": {"id": 584, "code": "s = \"a\"\nls = len(s)\nk = 25\nfor i in range(ls-1):\n    tn = ord('z')-ord(s[i])+1\n    if k>=tn and s[i]!='a':\n        k-=tn\n        print('a',end='')\n    else:\n        print(s[i],end='')\nik = (k + ord(s[-1])-ord('a')) % 26\nprint(chr(ord('a')+ik))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "18106": {"id": 18106, "code": "s = \"1700\"\nif s[0:2] in \"01 02 03 04 05 06 07 08 09 10 11 12\":\n  l = \"m\"\nelse:\n  l = \"y\"\nif s[2:4] in \"01 02 03 04 05 06 07 08 09 10 11 12\":\n  r = \"m\"\nelse:\n  r = \"y\"\nif l+r == \"mm\":\n  print(\"AMBIGUOUS\")\nelif l+r == \"my\":\n  print(\"MMYY\")\nelif l+r == \"ym\":\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18926": {"id": 18926, "code": "n = 12\nif n%2 != 0:\n    print(0)\nelse:\n    ans = 0\n    dum = 5\n    while n > dum:\n        ans += (n//dum)//2\n        dum = dum*5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "6750": {"id": 6750, "code": "attack = []\nh = 20;n = 3\na = ['4', '5', '6']\nfor move in a:\n    move = int(move)\n    attack.append(move)\nresult = h - sum(attack)\nif result <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10125": {"id": 10125, "code": "from collections import deque\nN = 6\nS = \")))())\"\ns = deque(S)\nans = []\nr, l, cnt = 0, 0, 0\nwhile s:\n    q = s.popleft()\n    if q == ')':\n        cnt -= 1\n        if cnt < 0:\n            l += 1\n            cnt += 1\n    else:\n        cnt += 1\nif cnt > 0: r += cnt\nprint('('*l + S + ')'*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "17426": {"id": 17426, "code": "s = 1700\na = s // 100\nb = s % 100\nif 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= b <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "13488": {"id": 13488, "code": "s = \"haiku,atcoder,tasks\"\nprint(*s.split(','))", "coverage": [">", ">"]}, "8674": {"id": 8674, "code": "n = 1\na1 = [2]\na2 = [3]\nres = 0\ntmp1 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    tmp2 = 0\n    for j in range(i, n):\n        tmp2 += a2[j]\n    res = max(res, tmp1+tmp2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13728": {"id": 13728, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nstart = a*60 + b\nend = c*60 + d\nprint(end - e - start)", "coverage": [">", ">", ">", ">"]}, "15598": {"id": 15598, "code": "X = 100000;Y = 1;Z = 1\nprint(X//(Y+Z) if (X%(Y+Z))>=Z else (X//(Y+Z))-1)", "coverage": [">", ">"]}, "1153": {"id": 1153, "code": "N = 112\nprint(111*(0--N//111))", "coverage": [">", ">"]}, "12144": {"id": 12144, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == m2:\n    print('0')\nelse:print('1')", "coverage": [">", ">", ">", "!", ">"]}, "17676": {"id": 17676, "code": "s = \"1905\"\na = 0\nb = 0\nif s[2] == '0': b = int(s[3])\nelse: b = int(s[2:])\nif s[0] == '0': a = int(s[1])\nelse: a = int(s[:2])\nif (b>=1 and b<=12) and (a>=1 and a<=12): print(\"AMBIGUOUS\")\nelif b>=1 and b<=12: print(\"YYMM\")\nelif a>=1 and a<=12: print(\"MMYY\")\nelse: print(\"NA\") ", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!"]}, "10101": {"id": 10101, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\na=0\nb=0\nc=0\nfor i in range(n):\n    d=s[i]\n    if d=='(':\n        a+=1\n    else:\n        b+=1\n        if b-c>a:\n            c+=1\nprint('('*c+''.join(s)+')'*(a-b+c))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9911": {"id": 9911, "code": "N = 3\nS = \"())\"\nans = S\ncnt = 0\nnow = \"\"\nfor s in S:\n    now = s\n    if s == \"(\":\n        cnt += 1\n    elif s == \")\":\n        cnt -= 1\n    if cnt == -1:\n        ans = \"(\" + ans\n        cnt = 0\nif cnt > 0:\n    ans = ans + \")\"*cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8889": {"id": 8889, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))", "coverage": [">", ">", ">", ">"]}, "2145": {"id": 2145, "code": "n = 100;a = 100;b = 100\nmaxab = min(a, b)\nminab = (a+b)-n\nif minab < 0:\n  minab = 0\nprint(maxab, minab)", "coverage": [">", ">", ">", ">", "!", ">"]}, "16385": {"id": 16385, "code": "n = 5\nA = [6, 9, 4, 2, 11]\nB = A.copy()\nA_max = max(A)\nans = 100\nfor i in range(n):\n    if B[i] > A_max // 2:\n        B[i] = A_max-B[i]\nB.sort()\nif B[-1] in A:\n    print(str(A_max)+\" \"+str(B[-1]))\nelse:\n    print(str(A_max)+\" \"+str(A_max-B[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17039": {"id": 17039, "code": "a = ['D', 'D']\nprint(a[1] if a[0] == 'H' else ('D' if a[1] == 'H' else 'H'))", "coverage": [">", ">"]}, "8167": {"id": 8167, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nfor i_1 in range(n):\n    if a[i_1]==1:\n        break\nif len(a[:i_1])==0:\n    ans = len(a[i_1+1:])//(k-1)\n    if len(a[i_1+1:])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)\nelif len(a[i_1+1:])==0:\n    ans = len(a[:i_1])//(k-1)\n    if len(a[:i_1])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)\nelse:\n    ans = len(a[:i_1])//(k-1) + 1\n    tmp = ans * (k-1)\n    ans += len(a[tmp+1:])//(k-1)\n    if len(a[tmp+1:])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "10285": {"id": 10285, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nx = 0\ny = 0\nfor i in range(n):\n    if s[i] == '(':\n        x += 1\n    if s[i] == ')':\n        if x >= 1:\n            x -= 1\n        else:\n            y += 1\nfor _ in range(x):\n    s.append(')')\nfor _ in range(y):\n    s.insert(0,'(')\nans = ''.join(s)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11155": {"id": 11155, "code": "s = \"atcoder\"\nn = len(s)\nfront = (n-1) // 2\nrear = (n+2) // 2\nsf = s[:front]\nsr = s[rear:]\nsrev = s[::-1]\nsfrev = sf[::-1]\nsrrev = sr[::-1]\nif sfrev == sf and srrev == sr and srev == s:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15232": {"id": 15232, "code": "a = 13;s = 3;d = 1\nprint((a-d)//(s+d))", "coverage": [">", ">"]}, "7072": {"id": 7072, "code": "h = 20;n = 3\na_list = [4, 5, 6]\nif sum(a_list)>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "8901": {"id": 8901, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandies = []\nfor i in range(N):\n    candies.append(sum(A1[:i+1])+sum(A2[i:]))\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5451": {"id": 5451, "code": "n = 100\nprint(n//2 + n%2)", "coverage": [">", ">"]}, "279": {"id": 279, "code": "s = \"xyz\"\nk = 4\nl = \"abcdefghijklmnopqrstuvwxyz\"\nans = \"\"\nfor i in range(len(s) - 1):\n    num = (26 - l.index(s[i])) % 26\n    if k >= num:\n        ans += \"a\"\n        k -= num\n    else:\n        ans += s[i]\nans += l[(l.index(s[-1]) + k) % 26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13943": {"id": 13943, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ntrend = '-'\npre = a[0]\nfor now in a:\n    if (trend=='<' and pre>now) or (trend=='>' and pre<now):\n        ans += 1\n        trend = '-'\n    else:\n        if pre<now:\n            trend = '<'\n        elif pre>now:\n            trend = '>'\n    pre = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "3419": {"id": 3419, "code": "a = 20;b = 15\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "1004": {"id": 1004, "code": "N = 750\nfor i in range(N,1000):\n    x = str(i)\n    if x[0]==x[1]==x[2]:\n        break\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8506": {"id": 8506, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18416": {"id": 18416, "code": "H = 3\nW = 7\nN = 10\nif H < W:\n    H, W = W, H\nans = 0\nwhile N > 0:\n    N -= H\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17581": {"id": 17581, "code": "S = \"0112\"\ns=list(S)\nleft=int(s[0])*10+int(s[1])\nright=int(s[2])*10+int(s[3])\nif 1<=left<=12:\n    if 1<=right<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=right<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "13148": {"id": 13148, "code": "X = 5\nif 105 % X == 0 and X != 1: print(\"YES\")\nelse:print(\"NO\")  ", "coverage": [">", ">", "!"]}, "9862": {"id": 9862, "code": "N = 8\nS = \"))))((((\"\nans = S\ncount = 0\nfor i in range(N):\n    if(S[i] == \"(\"):\n        count += 1\n    else:\n        count -= 1\n    if(count<0):\n        ans = \"(\" + ans\n        count += 1\ncount = 0\nfor i in range(N-1,-1,-1):\n    if(S[i] == \"(\"):\n        count += 1\n    else:\n        count -= 1\n    if(count>0):\n        ans = ans + \")\"\n        count -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15956": {"id": 15956, "code": "a = 12;b = 4\nans = a - b * 2\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "11552": {"id": 11552, "code": "s = \"SUN\"\nl = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ni = 7-l.index(s)\nprint(i)", "coverage": [">", ">", ">", ">"]}, "7272": {"id": 7272, "code": "h = 20;n = 3\na = [4, 5, 6]\nif h<=sum(a):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12517": {"id": 12517, "code": "A = 1;B = 1;K = 1\nl=[]\nfor i in range(1,min(A,B)+1):\n    if A%i==0 and B%i==0:\n        l.append(i)\nl=sorted(l)[::-1]\nprint(l[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5584": {"id": 5584, "code": "import math\nn = 5\nx = math.ceil(n/2)\nprint(x)", "coverage": [">", ">", ">", ">"]}, "17925": {"id": 17925, "code": "S = 1905\nb=S%100\na=S//100\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12:\n    print('MMYY')\nelif 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6925": {"id": 6925, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\na=0\nfor i in A:\n    a+=i\nif a>=H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "17258": {"id": 17258, "code": "a = \"D\";b = \"D\"\nans = \"HD\"\nindex = ans.index(b)\nif ans.index(a):\n    print(ans[index-1])\nelse:\n    print(ans[index])", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15688": {"id": 15688, "code": "import sys\ninput = sys.stdin.readline\nX = 64145;Y = 123;Z = 456\nans = 0\nX -= Z\nans += (X // (Y + Z))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "442": {"id": 442, "code": "s = ['a']\nN=len(s)\nK = 25\nnum=123\nfor i in range(N):\n    diff=(num-ord(s[i]))%26\n    if K==0:\n        break\n    if diff<=K:\n        s[i]=\"a\"\n        K=K-diff\nif K>0:\n    K=K%26\n    s[N-1]=chr(ord(s[N-1])+K)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "18293": {"id": 18293, "code": "H = 3\nW = 7\nN = 10\nif H<=W: big=W\nelse: big=H\nif N%big==0: ans=N//big\nelse: ans=N//big+1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "13941": {"id": 13941, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\ntrend = '-'\npre = a[0]\nfor now in a:\n    if (trend=='<' and pre>now) or (trend=='>' and pre<now):\n        ans += 1\n        trend = '-'\n    else:\n        if pre<now:\n            trend = '<'\n        elif pre>now:\n            trend = '>'\n    pre = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "3988": {"id": 3988, "code": "x = 64146;y = 123;z = 456\nif x < y+z*2:\n    print(0)\nelse:\n    ans = (x-(y+z*2))//(y+z)+1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "17306": {"id": 17306, "code": "a = \"D\";b = \"D\"\nh = 'H'\nd = 'D'\nresult = h\nif a == h:\n    if b == d:\n        result = d\nelse:\n    if b == h:\n        result = d\n    else:\n        result = h\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">"]}, "16589": {"id": 16589, "code": "a = \"D\";b = \"D\"\np = a + b\np1 = list(set(p))\nif len(p1) == 1:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10167": {"id": 10167, "code": "n = 6\ns = \")))())\"\nm = 0\nnow = 0\nfor i in s:\n    if i == ')':\n        now += 1\n        if m < now:\n            m = now\n    else:\n        now -= 1\nprint('('*m + s + ')'*(m + 2*s.count('(') - len(s)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "16115": {"id": 16115, "code": "A = ['20', '30']\nB = int(A[0]) - 2 * int(A[1])\nprint(0 if B < 0 else B)", "coverage": [">", ">", ">"]}, "13685": {"id": 13685, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nhm = ((h2-h1)*60)-(m1-m2)-k\nprint(hm)", "coverage": [">", ">", ">"]}, "1719": {"id": 1719, "code": "n = 10;x = 7;y = 5\nif (x+y)>n:\n  mn=(x+y)-n\nelse:\n  mn=0\nmx=min(x,y)\nprint('{} {}'.format(mx,mn))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "29": {"id": 29, "code": "s = \"a\"\nl = len(s)\nn = 25\nans = [\"A\"]*l\nfor i in range(l-1):\n  if s[i]==\"a\":\n    ans[i]=\"a\"\n    continue\n  temp = ord(\"z\")-ord(s[i])+1\n  if temp <= n:\n    n-=temp\n    ans[i]=\"a\"\n  else:\n    ans[i]=s[i]\nlast = ord(s[l-1])+n\nwhile last>ord(\"z\"):\n  last-=26\nans[l-1]=chr(last)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">"]}, "17970": {"id": 17970, "code": "S = \"1905\"\nif int(S[0]+S[1])>0 and int(S[0]+S[1])<13:\n  if int(S[2]+S[3])>0 and int(S[2]+S[3])<13:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if int(S[2]+S[3])>0 and int(S[2]+S[3])<13:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "8335": {"id": 8335, "code": "n = 1\na1 = [2]\na2 = [3]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2411": {"id": 2411, "code": "n = 1;m = 1\nimport math \nif n>=2 and m>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2) + math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif n<2 and m>=2 :\n  ans =  math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif m<2 and n>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2)\nelse:\n  ans = 0\nprint(int(ans))", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "12587": {"id": 12587, "code": "A = 100;B = 50;K = 4\nans=0\nres=0\nfor i in range(min(A, B), 0, -1):\n    if A%i==0 and B%i==0:\n        res+=1\n        if res==K:\n            ans=i\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7795": {"id": 7795, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">"]}, "4579": {"id": 4579, "code": "s = \"internationalization\"\ns_len = len(s)\nprint(s[0]+str(s_len-2)+s[s_len-1])", "coverage": [">", ">", ">"]}, "2933": {"id": 2933, "code": "S = \"1111111111\"\nt = 1000\nfor s in range(len(S)-2):\n    t = min(abs(753 - int(S[s:s+3])),t)\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "5709": {"id": 5709, "code": "from sys import stdin\ninput = \"<function <lambda>>\"\nn = 100\nprint((n + 1) // 2)", "coverage": [">", ">", ">", ">"]}, "17941": {"id": 17941, "code": "s = \"0112\"\nmae=int(s[:2])\nushiro=int(s[2:])\nif 1<=mae<=12:\n    if 1<=ushiro<=12:\n        ans=\"AMBIGUOUS\"\n    else:\n        ans=\"MMYY\"\nelif 1<=ushiro<=12:\n    ans=\"YYMM\"\nelse:\n    ans=\"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "5087": {"id": 5087, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nans = s[0]\nans += str(len(s[1:-1]))\nans += s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "7812": {"id": 7812, "code": "N = 3;K = 3\nA = [1, 2, 3]\nidx = A.index(1)\nans = N\nfor k in range(K + 1):\n    L = idx - (K - k - 1)\n    R = (N - 1 - idx) - k\n    cntL = 0\n    cntR = 0\n    while L > 0:\n        cntL += 1\n        L -= K - 1\n    while R > 0:\n        cntR += 1\n        R -= K - 1\n    ans = min(ans, cntL + cntR + 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15846": {"id": 15846, "code": "x = 13;y = 3;z = 1\na = x-z\nb = a//(y+z)\nprint(b)", "coverage": [">", ">", ">", ">"]}, "12163": {"id": 12163, "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "15839": {"id": 15839, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nX = 13;Y = 3;Z = 1\nprint((X - Z) // (Z + Y))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1505": {"id": 1505, "code": "N = 750\nL = [111*i for i in range(1,10)]\nans = 0\nfor l in L:\n    if N <= l:\n        ans = l\n        break\nprint(l)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11674": {"id": 11674, "code": "d = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SAT\"\nidx = d.index(s)\nprint(7-idx)", "coverage": [">", ">", ">", ">"]}, "12914": {"id": 12914, "code": "X = 5\nif (X%2==1)and(not(X==1))and(not(X==9)):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "18153": {"id": 18153, "code": "s = \"0112\"\nA = int(s[0:2]); B = int(s[2:4])\nif 1 <= A <= 12 and 1 <= B <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= A <= 12 and 0 <= B <= 99:\n    print(\"MMYY\")\nelif 1 <= B <= 12 and 0 <= A <= 99:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8945": {"id": 8945, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7689": {"id": 7689, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nh = 10;n = 3\na = [4, 5, 6]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9923": {"id": 9923, "code": "n = 8\ns = \"))))((((\"\nc = 0\nd = 0\nfor i in range(n):\n    if s[i] == '(':\n        c += 1\n    else:\n        d += 1\nused_c = [True]*n\nused_d = [True]*n\nfor i in range(n):\n    if s[i] == '(':\n        for j in range(i+1, n):\n            if s[j] == ')' and used_c[j]:\n                c -= 1\n                used_c[j] = False\n                break\n    else:\n        for j in range(i):\n            if s[j] == '(' and used_d[j]:\n                d -= 1\n                used_d[j] = False\n                break\nprint('('*d+s+')'*c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", "!", ">"]}, "3023": {"id": 3023, "code": "S = \"1111111111\"\nans = 10**9\nfor i in range(len(S) - 2):\n    x = S[i:i+3]\n    now = abs(int(x) - 753)\n    ans = min(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12114": {"id": 12114, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "464": {"id": 464, "code": "s = \"xyz\";k = 4\nans = []\na = ord('z') + 1\nfor i in s:\n    if a - ord(i) <= k and i != 'a':\n        k -= a - ord(i)\n        ans.append(ord('a'))\n    else:\n        ans.append(ord(i))\nans[-1] += k % 26\nif ans[-1] >= a:\n    ans[-1] -= 26\nprint(*map(chr, ans), sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "8954": {"id": 8954, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12159": {"id": 12159, "code": "targetDay = ['11', '16']\nnextDay = ['11', '17']\nif targetDay[0] != nextDay[0]:\n\tprint(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3169": {"id": 3169, "code": "s = \"35753\"\nans=1000\nfor i in range(1,len(s)-1):\n    x=int(s[i-1]+s[i]+s[i+1])\n    if abs(x-753)<ans:\n        ans=abs(x-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1449": {"id": 1449, "code": "n = 750\ncount = 0\nwhile n > count:\n  count = count + 111\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "624": {"id": 624, "code": "s = ['x', 'y', 'z']\nk = 4\nn = len(s)\nmap = {(chr(ord(\"a\") + i)): (26-i)%26 for i in range(26)}\nfor i in range(n):\n    if k >= map[s[i]]:\n        k -= map[s[i]]\n        s[i] = \"a\"\nif k > 0:\n    s[n-1] = chr((ord(s[n-1])+k%26)%123)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17059": {"id": 17059, "code": "import math\na = \"D\";b = \"H\"\nif a=='H':\n    print(b)\nelse:\n    if b=='H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "13407": {"id": 13407, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(\" \".join([a,b,c]))", "coverage": [">", ">"]}, "7378": {"id": 7378, "code": "n = 20;k = 3\na = [4, 5, 6]\na.sort(reverse=True)\ns=0\nfor i in range(k):\n  s+=a[i]\nprint('Yes' if s >= n else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9393": {"id": 9393, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[:4] = list('2018')\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "319": {"id": 319, "code": "from string import ascii_lowercase\ns = \"a\"\nk = 25\nd = {c: (26 - i) % 26 for i, c in enumerate(ascii_lowercase)}\nret = ''\nfor c in s[:-1]:\n    if d[c] <= k:\n        k -= d[c]\n        ret += 'a'\n    else:\n        ret += c\nk %= 26\nidx = (ascii_lowercase.index(s[-1]) + k) % 26\nc = ascii_lowercase[idx]\nret += c\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14114": {"id": 14114, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ncur = 'N'\ni = 1\nwhile i < N:\n    if cur == 'U':\n        if A[i] < A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'D':\n        if A[i] > A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'N':\n        if A[i] > A[i-1]:\n            cur = 'U'\n        elif A[i] < A[i-1]:\n            cur = 'D'\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "690": {"id": 690, "code": "k = 101\na = 7\nflag = 0\nfor i in range(1,k+1):\n    if a % k == 0:\n        print(i)\n        flag = 1\n        break\n    a = 10*(a%k) + 7\nif flag == 0:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "4084": {"id": 4084, "code": "string = \"10 0 15 0 30\"\nnums = string.split(' ')\nhour = int(nums[2]) - int(nums[0])\nminute = int(nums[3]) - int(nums[1])\ntime = hour * 60 + minute - int(nums[4])\nprint(time)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8647": {"id": 8647, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "6776": {"id": 6776, "code": "hp_m = 211;n = 5\nattack = [31, 41, 59, 26, 53]\ntotal_attack = sum(attack)\nif total_attack >= hp_m:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17171": {"id": 17171, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    print(b)\nelif a == 'D':\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", ">", ">", ">", "!", "!"]}, "11875": {"id": 11875, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9113": {"id": 9113, "code": "s1 = \"2017\";s2 = \"01\";s3 = \"31\"\ns1 = 2018\nprint(s1, s2, s3, sep=\"/\")", "coverage": [">", ">", ">"]}, "18319": {"id": 18319, "code": "h = 2\nw = 100\nx = 200\nm = max(h, w)\nprint((x+m-1)//m)", "coverage": [">", ">", ">", ">", ">"]}, "8820": {"id": 8820, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "5710": {"id": 5710, "code": "i = 5\nprint(i//2+i%2)", "coverage": [">", ">"]}, "2520": {"id": 2520, "code": "N1 = 1;N2 = 1;N3 = 2;N4 = 9\nprint(\"YES\" if N1==1 and N2==4 and N3==7 and N4==9 else \"NO\")", "coverage": [">", ">"]}, "11731": {"id": 11731, "code": "D1 = [11, 30]\nD2 = [12, 1]\nif D1[1] < D2[1]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15548": {"id": 15548, "code": "x = 13;y = 3;z = 1\nyz = y + z\nx -= z\nprint(x // yz)", "coverage": [">", ">", ">", ">"]}, "17423": {"id": 17423, "code": "a = \"1700\"\nb = int(a[:2])\nc = int(a[2:])\nif 0< b < 13:\n    a_month_flag = 1\n    a_year_flag = 1\nelif b == 0:\n    a_month_flag = 0\n    a_year_flag = 0\nelse:\n    a_month_flag = 0\n    a_year_flag = 1\nif 0< c < 13:\n    b_month_flag = 1\n    b_year_flag = 1\nelif c == 0:\n    b_month_flag = 0\n    b_year_flag = 0\nelse:\n    b_month_flag = 0\n    b_year_flag = 1\nif a_month_flag ==1 and b_month_flag==1:\n    print(\"AMBIGUOUS\")\nelif a_month_flag == 1 and b_month_flag == 0:\n    print(\"MMYY\")\nelif a_month_flag == 0 and b_month_flag ==1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "126": {"id": 126, "code": "s = [120, 121, 122]\nK = 4\nret = []\nfor c in s[:-1] :\n    if c == 97 :\n        ret.append('a')\n        continue\n    if c + K > 122 :\n        ret.append('a')\n        K -= 123 - c\n    else :\n        ret.append(chr(c))\nK %= 26\nret.append(chr((s[-1] + K - 97) % 26 + 97))\nprint(''.join(ret))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15941": {"id": 15941, "code": "a = 12;b = 4\nc=b+b\nif(a-c!=0)and(a-c>=0):\n    print(a-c)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "17043": {"id": 17043, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    print(b)\nelse:\n    if b == 'D':\n        print('H')\n    else:\n        print('D')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "5954": {"id": 5954, "code": "N = 2\nif N % 2 == 0:\n    ans = N // 2\nelse:\n    ans = N // 2 + 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7459": {"id": 7459, "code": "n = 10;m = 3\nl = [4, 5, 6]\ns=sum(l)\nif(s>=n):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13578": {"id": 13578, "code": "Word1 = \"haiku\";Word2 = \"atcoder\";Word3 = \"tasks\"\nprint(Word1 + ' ' + Word2 + ' ' + Word3)", "coverage": [">", ">"]}, "7827": {"id": 7827, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nmin_num=min(A)\ncount=A.count(min_num)\ntarget=len(A)-count\nK_num=K-1\nprint(int(-(-target//K_num)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5390": {"id": 5390, "code": "n = 1.01\nprint(int(round(n)))", "coverage": [">", ">"]}, "11821": {"id": 11821, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2: print(0)\nelse: print(1)", "coverage": [">", ">", ">", ">"]}, "2061": {"id": 2061, "code": "n = 10;a = 7;b = 5\nif a+b-n>0:\n  ans=a+b-n\nelse:\n  ans=0\nprint(min(a,b),ans,sep=' ')", "coverage": [">", ">", ">", "!", "!", ">"]}, "4980": {"id": 4980, "code": "S = \"xyz\"\nnum = len(S) - 2\nnew = (S[0] + str(num) + S[len(S)-1])\nprint(new)", "coverage": [">", ">", ">", ">"]}, "11532": {"id": 11532, "code": "from sys import stdin\nfrom sys import setrecursionlimit\nimport bisect\nsetrecursionlimit(10 ** 7)\ns = \"SUN\"\nli = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7-li.index(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12929": {"id": 12929, "code": "if \"6\" in [\"7\", \"5\", \"3\"]:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", "!", "!", ">"]}, "14299": {"id": 14299, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nup,down = 1,1\nfor i in range(1,N):\n  if A[i-1] > A[i]:\n    up = 0\n    if down == 0:\n      count += 1\n      up,down = 1,1\n  elif A[i-1] < A[i]:\n    down = 0\n    if up == 0:\n      count += 1\n      up,down = 1,1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10915": {"id": 10915, "code": "S = \"level\"\nN = len(S)\nS1 = S[0:(N-1)//2]\nS2 = S[(N+3)//2-1:]\nprint('Yes' if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1] else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "11440": {"id": 11440, "code": "S = \"SAT\"\nif 'SUN'in S:\n    print(7)\nelif 'MON' in S:\n    print(6)\nelif 'TUE' in S:\n    print(5)\nelif 'WED' in S:\n    print(4)\nelif 'THU' in S:\n    print(3)\nelif 'FRI' in S:\n    print(2)\nelif 'SAT' in S:\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "13047": {"id": 13047, "code": "X = 6\nlistage = [ 7, 5, 3 ]\nprint( [ \"NO\", \"YES\" ][ X in listage ] )", "coverage": [">", ">", ">"]}, "276": {"id": 276, "code": "s = ['x', 'y', 'z']\nn = len(s)\nk = 4\nfor i in range(n):\n    x = ord(s[i]) - ord('a')\n    if x == 0 or 26 -x > k: continue\n    k -= 26 - x\n    s[i] = 'a'\nif k:\n    s[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14401": {"id": 14401, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflg = 0\nans=1\nfor i in range(1,n):\n  tmp = a[i-1]\n  if a[i] == tmp:\n    pass\n  elif a[i] > tmp:\n    if flg == 1:\n      pass\n    elif flg == -1:\n      ans += 1\n      flg = 0\n    else:\n      flg = 1\n  else:\n    if flg == -1:\n      pass\n    elif flg == 1:\n      ans += 1\n      flg = 0\n    else:\n      flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">"]}, "15962": {"id": 15962, "code": "import sys\ninput = sys.stdin.readline\nA = 12;B = 4\nprint(A - B * 2) if A > B * 2 else print(0)", "coverage": [">", ">", ">", ">"]}, "14081": {"id": 14081, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = [0 for _ in range(n-1)]\nfor i in range(n-1):\n    d[i] = a[i+1]-a[i]\nans = 1 \nstate = 'flat'\nfor i in range(n-1):\n    if i == 0:\n        if d[i] > 0:\n            state = 'up'    \n        elif d[i] < 0:\n            state = 'down'\n    else:\n        if d[i] > 0:\n            if state == 'flat':\n                state = 'up'\n            elif state == 'down':\n                state = 'flat'\n                ans += 1\n        elif d[i] < 0:\n            if state == 'flat':\n                state = 'down'\n            elif state == 'up':\n                state = 'flat'\n                ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8969": {"id": 8969, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nprint(\":(\" if max(a,b,c,d,e) - min(a,b,c,d,e) > k else \"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18637": {"id": 18637, "code": "h = 2\nw = 100\nn = 200\nprint((n-1)//max(h,w)+1)", "coverage": [">", ">", ">", ">"]}, "3727": {"id": 3727, "code": "X = 12;Y = 3;Z = 1\ns = X - (X//(Y+Z))*(Y+Z)\nprint(X//(Y+Z) if s >= Z else X//(Y+Z)-1)", "coverage": [">", ">", ">"]}, "17595": {"id": 17595, "code": "s = \"1905\"\nym = 1 <= int(s[2:]) <= 12\nmy = 1 <= int(s[:2]) <= 12\nif ym and my:\n    print('AMBIGUOUS')\nelif ym:\n    print('YYMM')\nelif my:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "1217": {"id": 1217, "code": "n = 111\ndiv, mod = divmod(n, 111)\nans = div * 111 if mod == 0 else (div + 1) * 111\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "12353": {"id": 12353, "code": "S = \"atcoder\"\nN = len(S)\nans = 'No'\nif S == S[::-1] and S[:(N-1)//2] == S[:(N-1)//2][::-1] and S[(N+1)//2:] == S[(N+1)//2:][::-1]:\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "9036": {"id": 9036, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nresult='Yay!'\nq=[a,b,c,d,e]\nfor i in q:\n    for x in q:\n        if i-x>k:\n            result=':('\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "4759": {"id": 4759, "code": "s = \"internationalization\"\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">"]}, "13749": {"id": 13749, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh = h2 - h1\nm = m2 - m1\nm += 60 * h\nprint(m - k)", "coverage": [">", ">", ">", ">", ">"]}, "1506": {"id": 1506, "code": "n = 111\nans = 111\nwhile ans < n:\n    ans += 111\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3097": {"id": 3097, "code": "a = \"1234567876\"\nb=753\nfor i in range(len(a)-2):\n  if abs(int(a[i]+a[i+1]+a[i+2])-753)<b:\n    b=abs(int(a[i]+a[i+1]+a[i+2])-753)\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12981": {"id": 12981, "code": "a = \"6\"\nif a in \"753\":\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "17848": {"id": 17848, "code": "S = \"0112\"\nl=len(S)\nY=0\nM=0\nfor i in range(l):\n    if i==3:\n        if int(S[i-1])==0 and 1<=int(S[i])<=9:\n            Y=1\n        elif int(S[i-1])==1 and 0<=int(S[i])<=2:\n            Y=1\nfor i in range(l):\n    if i==1:\n        if int(S[i-1])==0 and 1<=int(S[i])<=9:\n            M=1\n        elif int(S[i-1])==1 and 0<=int(S[i])<=2:\n            M=1\nif Y==1 and M==1:\n    print('AMBIGUOUS')\nelif Y==1 and M==0:\n    print('YYMM')\nelif Y==0 and M==1:\n    print('MMYY')\nelif Y==0 and M==0:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8304": {"id": 8304, "code": "n = 8;k = 3\nlist_A = [7, 3, 1, 8, 4, 6, 2, 5]\na = list_A.index(1) + 1\nans = 0\ncnt = 0\namari = 0\nif a == 1:\n    ans += 0\nelse:\n    ans += (a-1)//(k-1)\n    if (a-1)%(k-1) != 0:\n        ans += 1\n        cnt += 1\n        amari += (a-1)%(k-1)\nif a == n:\n    ans += 0\nelse:\n    ans += (n-a)//(k-1)\n    if (n-a)%(k-1) != 0:\n        ans += 1\n        cnt += 1\n        amari += (n-a)%(k-1)\nif cnt == 2 and amari <= k-1:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "16557": {"id": 16557, "code": "a = \"H\";b = \"H\"\nif a=='H': print(b)\nelif b=='H': print(a)\nelse:print('H')", "coverage": [">", ">", "!", "!"]}, "16384": {"id": 16384, "code": "import bisect\nn = 2\na = [100, 0]\na.sort()\nci = a[-1]\nindex = bisect.bisect_left(a, ci/2)\nif abs(a[index]-ci/2)<abs(a[index-1]-ci/2):\n    print(ci, a[index])\nelse:\n    print(ci, a[index-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3802": {"id": 3802, "code": "x = 13;y = 3;z = 1\nw=y+z\nprint(x//w if x%w>=z else x//w-1)", "coverage": [">", ">", ">"]}, "15932": {"id": 15932, "code": "A = 12;B = 4\nprint(0 if (B * 2) >= A else A - (B * 2))", "coverage": [">", ">"]}, "15442": {"id": 15442, "code": "x = 12;y = 3;z = 1\nisu = z\ncount = 0\nwhile isu<=x-z:\n    if isu+y<=x-z:\n        isu += y\n        isu += z\n        count += 1\n    else:\n        break\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "9705": {"id": 9705, "code": "N = 6\nS = \")))())\"\na = 0\nb = 0\nfor i in S:\n    if i == \"(\":\n        a += 1\n    else:\n        if a <= 0:\n            b += 1\n        else:\n            a -= 1\nprint(\"(\"*b+S+\")\"*a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "7215": {"id": 7215, "code": "H = 210;n = 5\nprint(\"Yes\" if H <= sum(map(int,\"31 41 59 26 53\".split())) else \"No\")", "coverage": [">", ">"]}, "6681": {"id": 6681, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\na_sum = sum(a)\nif h <= a_sum:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16925": {"id": 16925, "code": "a = \"D\";b = \"D\"\nif (a=='H') ^ (b=='H'): print(\"D\")\nelse: print(\"H\")", "coverage": [">", ">", ">"]}, "16035": {"id": 16035, "code": "a = 20;b = 15\nres = a - b * 2\nif res < 0:\n    print(0)\nelse:\n    print(res)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11084": {"id": 11084, "code": "S = \"level\"\nN = len(S)\nr_S = S[::-1]\nhead_S = S[0: int((N - 1) / 2)]\nr_head_S = head_S[::-1]\nend_S = S[int((N+3)/2 - 1) : N+1]\nr_end_S = end_S[::-1]\nif S == r_S and head_S == r_head_S and end_S == r_end_S:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "561": {"id": 561, "code": "from sys import stdin\nimport string\ns = \"a\"\nK = 25\nalp = string.ascii_lowercase*3\nans = \"\"\nfor i in s:\n    ind = alp.index(i)\n    cnt = 0\n    if i == \"a\":\n        ans += \"a\"\n        continue\n    for j in alp[ind+1:]:\n        cnt += 1\n        if K - cnt < 0:\n            ans += i\n            cnt = 0\n            break\n        if j == \"a\":\n            ans += \"a\"\n            K = K - cnt\n            cnt = 0\n            break\nif K != 0:\n    ind = (K % 26) + alp.index(ans[-1])\n    ans = ans[:-1]+alp[ind]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "10730": {"id": 10730, "code": "S = \"akasaka\"\nN=len(S)\ncon_2=S[:(N-1)//2]\ncon_3=S[((N+3)//2-1):]\nif S==S[::-1] and con_2==con_2[::-1] and con_3==con_3[::-1]:\n            print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "4007": {"id": 4007, "code": "import datetime\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nend = datetime.datetime(2020,6,6,h2,m2)\nstart = datetime.datetime(2020,6,6,h1,m1)\nsub = end-start-datetime.timedelta(minutes=k)\nprint(sub.seconds//60)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3976": {"id": 3976, "code": "X = 13;Y = 3;Z = 1\ncount = 0\nwide = Z+Y+Z\nwhile X >= wide:\n    count+=1\n    wide +=Z+Y\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10681": {"id": 10681, "code": "a = 100;b = 50;k = 4\nans = [1]\nn = min(a, b)\nfor i in range(2, n+1):\n    if a%i == 0 and b%i == 0:\n        ans += [i]\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9892": {"id": 9892, "code": "N = 8\nS = \"))))((((\"\nsl = 0\nsr = 0\nslmax = 0\nsrmax = 0\nfor i in range(N):\n  if(S[i] == '('):\n    sl -= 1\n  else:\n    sl += 1\n  slmax = max(slmax, sl)\nfor i in range(N):\n  if(S[N-i-1] == '('):\n    sr += 1\n  else:\n    sr -= 1\n  srmax = max(srmax, sr)\nfor i in range(slmax):\n  S = '(' + S\nfor i in range(srmax):\n  S = S + ')'\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4727": {"id": 4727, "code": "s = \"smiles\"\nl = len(s)\nprint(s[0] + str(l-2) + s[-1])", "coverage": [">", ">", ">"]}, "13313": {"id": 13313, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "3336": {"id": 3336, "code": "A = 20;B = 30\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", "!", ">", ">"]}, "18549": {"id": 18549, "code": "import math\nH = 14\nW = 12\nN = 112\nMax = max(H,W)\nprint(math.ceil(N/Max))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13690": {"id": 13690, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndifh = h2 - h1\ndifm = m2 - m1\nt = 60 * difh + difm\nprint(max(0, t - k))", "coverage": [">", ">", ">", ">", ">"]}, "753": {"id": 753, "code": "k = 101\nt = 7\nt %= k\nfor i in range(k+1):\n    if t == 0:\n        print(i+1)\n        break\n    t = (t*10 + 7)%k\nelse:print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "18957": {"id": 18957, "code": "N = 5\nn = 0\nif not N%2:\n    s = 5\n    N = N//2\n    while N>=s:\n        n += N//s\n        s *= 5\nprint(n)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "11518": {"id": 11518, "code": "import sys\nbase = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nS = \"SUN\"\nif not ( S in base ): sys.exit()\nprint(7 - base.index(S))", "coverage": [">", ">", ">", ">", ">"]}, "9529": {"id": 9529, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = '8'\nS = \"\".join(S)\nprint(S)", "coverage": [">", ">", ">", ">"]}, "3929": {"id": 3929, "code": "x = 13;y = 3;z = 1\nans = int((x-z)//(y+z))\nprint(ans)", "coverage": [">", ">", ">"]}, "2770": {"id": 2770, "code": "s = \"1234567876\"\nnum = 10**9\nfor i in range(len(s)-2):\n    t = abs(int(s[i:i+3])-753)\n    if t < num:\n        num = t\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6590": {"id": 6590, "code": "import sys\nimport bisect\ninput = sys.stdin.buffer.readline\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA_B = [0] * n\nB_C = [0] * n\nans = 0\nfor idx, a in enumerate(A):\n    A_B[idx] = bisect.bisect_right(B, a)\nfor idx, b in enumerate(B):\n    B_C[idx] = n - bisect.bisect_right(C, b)\ncul_sum = [0] * (n + 1)\nfor i in range(1, n + 1):\n    cul_sum[i] = cul_sum[i - 1] + B_C[i - 1]\nfor idx in A_B:\n    ans += cul_sum[n] - cul_sum[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12872": {"id": 12872, "code": "rStr = \"5\"\nA = int(rStr.split(' ')[0])\nif A == 7 or A == 5 or A == 3 :\n    print(\"YES\")\nelse :\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11123": {"id": 11123, "code": "S = \"atcoder\"\nN = len(S)\nsubS1 = S[:int((N - 1) / 2)]\nsubS2 = S[int((N + 3) / 2) - 1:]\nif subS1 == subS1[::-1] and subS2 == subS2[::-1] and S == S[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7377": {"id": 7377, "code": "n = 10;k = 3\na = [4, 5, 6]\na.sort(reverse=True)\ns=0\nfor i in range(k):\n  s+=a[i]\nprint('Yes' if s >= n else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "528": {"id": 528, "code": "S = \"a\"\nK = 25\nans = \"\"\nfor s in S:\n    if s == \"a\":\n        ans += s\n    elif 123-ord(s) <= K:\n        ans += \"a\"\n        K -= 123-ord(s)\n    else:\n        ans += s\nif K > 0:\n    ans = ans[:-1] + chr((ord(ans[-1])-97+K)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "9243": {"id": 9243, "code": "s = \"2017/01/31\"\nprint(s.replace(\"2017\", \"2018\"))", "coverage": [">", ">"]}, "2718": {"id": 2718, "code": "k = \"1 2 9 1\"\nif (\"1\" in k) & (\"9\" in k) & (\"7\" in k) & (\"4\" in k):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "789": {"id": 789, "code": "k = 101\nif k % 2 == 0 or k % 5 == 0:\n    print(-1)\n    exit()\ncnt, yep = 0, 0\nwhile True:\n    yep = (yep * 10 + 7) % k\n    cnt += 1\n    if yep == 0:\n        break\nprint(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17579": {"id": 17579, "code": "S = \"1700\"\nA=int(S[0:2])\nB=int(S[2:4])\nif (1<=A and A<=12) and (1<=B and B<=12):\n  print(\"AMBIGUOUS\")\nelif (1<=A and A<=12) and not(1<=B and B<=12):\n  print(\"MMYY\")\nelif not(1<=A and A<=12) and (1<=B and B<=12):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12838": {"id": 12838, "code": "age = 5\nprint(\"YES\") if age in (3,5,7) else print(\"NO\")", "coverage": [">", ">"]}, "17694": {"id": 17694, "code": "s = \"1905\"\ns1=s[0]+s[1]\ns2=s[2]+s[3]\nn1=int(s1)\nn2=int(s2)\nif 1<=n1<=12:\n    if 1<=n2<=12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1<=n2<=12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "7189": {"id": 7189, "code": "a = 10;b = 3\nc = [4, 5, 6]\nd = sum(c)\nif d >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "970": {"id": 970, "code": "n = 750\nv = [999,888,777,666,555,444,333,222,111]\nans = 0\nfor i in range(9):\n    if v[i] >= n:\n        ans = v[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "503": {"id": 503, "code": "s = ['x', 'y', 'z']\nK = 4\nfor i in range(len(s)):\n    if s[i] == 'a':\n        continue\n    n = ord('z') - ord(s[i]) + 1\n    if n <= K:\n        K -= n\n        s[i] = 'a'\nK %= 26\ns[-1] = chr((ord(s[-1]) - ord('a') + K) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "7963": {"id": 7963, "code": "n = 8;k = 3\nar = [7, 3, 1, 8, 4, 6, 2, 5]\nfrom math import ceil\npos=ar.index(1)\na=n-1-pos\nb=pos\na1=(a//(k-1))\na2=b//(k-1)\nc=ceil((n-1-((a1+a2)*(k-1)))/(k-1))\nprint(a1+a2+c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1487": {"id": 1487, "code": "N = 112\nif N % 111 == 0:\n  print(N)\nelse:\n  for i in range(110):\n    N += 1\n    if N % 111 == 0:\n      break\n  print(N)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "2940": {"id": 2940, "code": "s = \"1234567876\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    if abs(753-num) < ans:\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7612": {"id": 7612, "code": "H = 211;N = 5\ndeathblows=map(int,\"31 41 59 26 53\".split())\nif sum(deathblows) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "6911": {"id": 6911, "code": "h = 10;n = 3\nif h <= sum(list(map(int, \"4 5 6\".split()))):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!"]}, "9397": {"id": 9397, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = \"8\"\nprint(\"\".join(S))", "coverage": [">", ">", ">"]}, "18006": {"id": 18006, "code": "S = \"1905\"\nfront = int(S[:2])\nback = int(S[2:])\nif front > 12 or front == 0:\n    if 0 < back <= 12 :\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif front <= 12 or front == 0:\n    if 0 < back <= 12: \n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "9365": {"id": 9365, "code": "a = \"2017\";b = \"01\";c = \"31\"\na='2018'\nprint(a,b,c,sep='/')", "coverage": [">", ">", ">"]}, "3278": {"id": 3278, "code": "A = 20;B = 30\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "13539": {"id": 13539, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a, b, c)", "coverage": [">", ">"]}, "2716": {"id": 2716, "code": "k = \"1 7 9 4\"\nif (\"1\" in k) & (\"9\" in k) & (\"7\" in k) & (\"4\" in k):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "6729": {"id": 6729, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\ns = sum(a)\nif h > s:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16072": {"id": 16072, "code": "a = \"20\";b = \"30\"\nc = int(a)-(2*int(b))\nif c >= 0:\n    print(c)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18201": {"id": 18201, "code": "from collections import defaultdict\nN = 6\nA = map(int,\"5 2 4 2 8 8\".split())\ns = defaultdict(lambda :0)\nb = defaultdict(lambda :0)\nfor i,a in enumerate(A):\n    s[i-a] = s[i-a] + 1\n    b[i+a] = b[i+a] + 1\nc = 0\nfor k in s:\n    if k in b:\n        c += b[k]*s[k]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12062": {"id": 12062, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M2==M1+1 and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13988": {"id": 13988, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nprev = A[0]\nup = False\ndown = False\nfor a in A[1:]:\n    if prev < a:\n        if up:\n            count += 1\n            up = False\n        elif down:\n            pass\n        else: \n            down = True\n    elif prev > a:\n        if up:\n           pass\n        elif down:\n            count += 1\n            down = False\n        else: \n            up = True\n    else:\n        pass\n    prev = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "350": {"id": 350, "code": "s = \"a\"\nk = 25\nlens=len(s)\nalp=\"azyxwvutsrqponmlkjihgfedcb\"\nans=[]\nfor i in range(lens):\n    d=alp.index(s[i])\n    if k>=d:\n        k-=d\n        ans.append(\"a\")\n    else:\n        ans.append(s[i])\nlas=ans.pop()\nalp=\"abcdefghijklmnopqrstuvwxyz\"\nans.append(alp[(alp.index(las)+k)%26])\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "4612": {"id": 4612, "code": "a = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nn = len(a)-2\nprint(a[0],n,a[-1],sep=(\"\"))", "coverage": [">", ">", ">"]}, "12146": {"id": 12146, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nif m1==m2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11005": {"id": 11005, "code": "s = \"atcoder\"\nl = len(s)\nokey = 1\nll = l//2\nfor i in range(0,l//2):\n    if s[i] != s[l-i-1]:\n        okey = 0\n        break\nif okey == 1: \n    for i in range(0,ll//2):\n        if s[i] != s[ll-i-1]:\n            okey = 0\n            break\nif okey == 1:\n    for i in range(ll+1, ll+ll//2):\n        if s[i] != s[l-i-1]:\n            okey = 0\n            break\nif okey == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "2889": {"id": 2889, "code": "S = \"1111111111\"\nans = 754\nfor i in range(len(S)-2):\n  ans = min(ans,abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "152": {"id": 152, "code": "import string\nS = \"codefestival\"\nK = 100\nLEN = len(S)\nans = ''\nfor pos, s in enumerate(S, 1):\n    idx = string.ascii_lowercase.find(s)\n    if pos < LEN:\n        if idx > 0 and 26-idx <= K:\n            ans += 'a'\n            K -= (26 - idx)\n        else:\n            ans += s\n    else:\n        ans += string.ascii_lowercase[(idx + K)%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "18388": {"id": 18388, "code": "H = 2\nW = 100\nN = 200\ntmp1 = min(H, W)\ntmp2 = max(H, W)\nfor i in range(tmp1):\n  N = N - tmp2\n  if N <= 0:\n    print(i + 1)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13782": {"id": 13782, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\ntotal = (c - a) * 60 + d - b\nprint(total - k)", "coverage": [">", ">", ">"]}, "13425": {"id": 13425, "code": "s = \"haiku,atcoder,tasks\"\na=s[:5]\nb=s[6:13]\nc=s[14:]\nprint(a,b,c)", "coverage": [">", ">", ">", ">", ">"]}, "720": {"id": 720, "code": "k = 101\nif k % 7 == 0:\n    l = 9*k // 7\nelse:\n    l = 9*k\nif l % 2 == 0 or l % 5 == 0:\n    print(-1)\nelse:\n    pmo = 1\n    for i in range(1, l + 1):\n        mo = (pmo * 10) % l\n        if mo == 1:\n            print(i)\n            break\n        else:\n            pmo = mo", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12096": {"id": 12096, "code": "m1 = 11\nm2 = 12\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18953": {"id": 18953, "code": "n = 12\nif n%2==1:\n    print(0)\n    exit(0)\nn//=2\nfrom math import floor,factorial\nans=0\ndeno=5\nwhile deno<=n:\n    ans+=n//deno\n    deno*=5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6472": {"id": 6472, "code": "from bisect import bisect_right, bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor bi in range(N):\n    ai_max = bisect_left(A, B[bi])\n    ci_min = bisect_right(C, B[bi])\n    ans += (ai_max) * (N - ci_min)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7314": {"id": 7314, "code": "h = 20;n = 3\nA = [4, 5, 6]\nfor i in range(n):\n  h-= A[i]\nif h>0:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18473": {"id": 18473, "code": "d = 7\nprint((int(\"10\")+(d-1))//d)", "coverage": [">", ">"]}, "18902": {"id": 18902, "code": "n = 5\nif n<2:\n    print(0)\nelse:\n    ans=0\n    if n%2==1:\n        print(0)\n    else:\n        ans+=n//10\n        for i in range(100):\n            ans+=n//(10*(5**(i+1)))\n        print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!"]}, "2200": {"id": 2200, "code": "n = 10;a = 3;b = 5\nt1 = min(a, b)\nt2 = max(0, b-(n-a))\nprint(t1, t2)", "coverage": [">", ">", ">", ">"]}, "13812": {"id": 13812, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nleft = 0\nright = 1\ncou = 0\nf = 2\nwhile right!=n and right!=n+1:\n  if l[left]==l[right]:\n    left += 1\n    right += 1\n  elif l[left]<l[right]:\n    while right!=n and l[left]<=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left +=1\n    right += 1\n    f = 1\n  else:\n    while right!=n and l[left]>=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left += 1\n    right += 1\n    f = 0\nif f==2:\n  cou += 1\nelif f==1 and l[-2]>l[-1]:\n  cou += 1\nelif f==0 and l[-2]<l[-1]:\n  cou += 1\nprint(cou)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "15905": {"id": 15905, "code": "A = 12;B = 4\nprint(A - 2 * B if A - 2 * B > 0 else 0)", "coverage": [">", ">"]}, "11701": {"id": 11701, "code": "S = \"SUN\"\ndays = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ni = 0\nfor d in reversed(days):\n    i += 1\n    if d == S:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "929": {"id": 929, "code": "K = 2\nS=set()\nans=0\nx=7%K\ni=1\nwhile True:\n    if x==0:\n        ans=1\n        break\n    if x in S:\n        break\n    else:\n        S.add(x)\n    x=(x*10+7)%K\n    i+=1\nprint(i if ans else -1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "18099": {"id": 18099, "code": "s = \"0112\"\na=int(s[:2])\nb=int(s[2:])\nac=0\nbc=0\nif 0<a and a<13:\n  ac=1\nif 0<b and b<13:\n  bc=1\nif ac and bc:\n  print(\"AMBIGUOUS\")\nelif ac:\n  print(\"MMYY\")\nelif bc:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16046": {"id": 16046, "code": "a = \"12\";b = \"4\"\na = int(a)\nb = int(b)\nif a <= b:\n    print(\"0\")\nelif a <= b*2:\n    print(\"0\")\nelse:\n    print(a-b*2)", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "16718": {"id": 16718, "code": "a = \"D\";b = \"D\"\nif a=='H': print('H' if b=='H' else 'D')\nelse: print('D' if b=='H' else 'H')", "coverage": [">", ">", ">"]}, "1715": {"id": 1715, "code": "n = 10;a = 3;b = 5\nv_max = min(n,a,b)\nv_min = max(a+b-n, 0)\nprint(v_max, v_min)", "coverage": [">", ">", ">", ">"]}, "10464": {"id": 10464, "code": "a = 8;b = 12;k = 2\nans_list = []\nif a > b:\n    a, b = b, a\nfor i in range(a, 0, -1):\n    if a % i == 0 and b % i == 0:\n        ans_list.append(i)\n        if len(ans_list) == k:\n            print(i)\n            break", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "15292": {"id": 15292, "code": "x = 64146;y = 123;z = 456\nx-=(y+2*z)\nc=1\nc+=x//(y+z)\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "12470": {"id": 12470, "code": "S = \"level\"\nN = len(S)\none = S[:(N-1) // 2]\ntwo = S[(N+3) // 2 - 1:]\nif S == S[::-1]:\n    if one == one[::-1]:\n        if two == two[::-1]:\n            print('Yes')\n            exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "12466": {"id": 12466, "code": "s = \"atcoder\"\nn=len(s)//2\nprint('Yes'if s[:n]==s[n-1::-1]==s[-n:]else'No')", "coverage": [">", ">", ">"]}, "9018": {"id": 9018, "code": "antennas = [\n    int(\"1\"),\n    int(\"2\"),\n    int(\"4\"),\n    int(\"8\"),\n    int(\"9\")\n]\nk = 15\nmessage = 'Yay!'\nfor i in range(0, 5 - 1):\n    if message == ':(':\n        break\n    for j in range(i + 1, 5):\n        if (antennas[j] - antennas[i]) > k:\n            message = ':('\n            break\nprint(message)", "coverage": ["!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "8916": {"id": 8916, "code": "n = 1\na = [2]\nb = [3]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7622": {"id": 7622, "code": "H = 20;N = 3\nA=map(int,\"4 5 6\".split())\nif H<=sum(A):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "10070": {"id": 10070, "code": "s = \"))))((((\";t = \"))))((((\"\nwhile'()'in t:t=t.replace('()','')\nc=t.count;print('('*c(')')+s+')'*c('('))", "coverage": [">", ">", ">"]}, "6854": {"id": 6854, "code": "h = 20;n = 3\nlst = [4, 5, 6]\nif sum(lst) < h:\n  print('No')\nelse:\n  print('Yes')", "coverage": [">", ">", ">", ">", "!", "!"]}, "855": {"id": 855, "code": "k = 101\nrep = 0\nf = 0\nfor i in range(k):\n    rep=  rep*10 + 7\n    if(rep%k == 0):\n        f = 1\n        break\n    rep = rep%k\nprint(-1 if(f == 0) else i+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7815": {"id": 7815, "code": "n = 8;k = 3\nAs = [7, 3, 1, 8, 4, 6, 2, 5]\nidx = As.index(min(As))\nleft = idx\nn_l = (left + k - 2) // (k - 1)\nright = n - ((n_l) * (k-1)) - 1\nn_r = (right + k - 2) // (k - 1)\nprint(n_l + n_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6621": {"id": 6621, "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfrom bisect import bisect_left,bisect_right\nfor i in B:\n   ans+=(bisect_left(A,i))*(N-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9314": {"id": 9314, "code": "S = \"2017/01/07\"\nout = '2018' + S[4:]\nprint(out) ", "coverage": [">", ">", ">"]}, "2792": {"id": 2792, "code": "S = \"35753\"\nans=10**3\nfor i in range(len(S)-2):\n  x=int(S[i])*100+int(S[i+1])*10+int(S[i+2])\n  ans=min(abs(x-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18882": {"id": 18882, "code": "n = 5\nans=0\ntmp=0\np=1\nif n%2==0:\n    k=n//2\n    while True:\n        tmp =k//pow(5,p)\n        ans+=tmp\n        p+=1\n        if tmp==0:\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16446": {"id": 16446, "code": "n = 2\na = [100, 0]\nm = max(a)\nres = 1e10\nans = 0\nfor i in a:\n    if i != m:\n        if abs(m//2-i) < res:\n            res = abs(m//2-i)\n            ans = i\nprint(m,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9988": {"id": 9988, "code": "N = 3\nS = \"())\"\nwhile True:\n    lv = 0\n    lmin = len(S)\n    for i in range(len(S)):\n        if S[i]==\"(\":\n            lv += 1\n        else:\n            lv -= 1\n        lmin = min(lmin,lv)\n    if lmin<0:\n        S = \"(\"*(-lmin)+S\n    else:break\nlv = 0\nfor i in range(len(S)):\n    if S[i]==\"(\":\n        lv += 1\n    else:\n        lv -= 1\nif lv>0:\n    S = S+\")\"*lv\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "4118": {"id": 4118, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nstart = (60 * h1) + m1\nend = (60 * h2) + m2 - k\nprint(end - start)", "coverage": [">", ">", ">", ">"]}, "443": {"id": 443, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nN=len(s)\nK = 100\nnum=123\nfor i in range(N):\n    diff=(num-ord(s[i]))%26\n    if K==0:\n        break\n    if diff<=K:\n        s[i]=\"a\"\n        K=K-diff\nif K>0:\n    K=K%26\n    s[N-1]=chr(ord(s[N-1])+K)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14589": {"id": 14589, "code": "n = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nif all(i%2==0 for i in a):\n    print(0 if p==1 else 2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "16564": {"id": 16564, "code": "s = \"D H\"\nif s == \"H H\" or s == \"D D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "15275": {"id": 15275, "code": "X = 13;Y = 3;Z = 1\nX -= Z\npeople = 0\nwhile X >= 0:\n    X -= (Y + Z)\n    if X >= 0:\n        people += 1\nprint(people)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18994": {"id": 18994, "code": "n = 5\nif n%2==1:\n    print(0)\nelse:\n    m=n//2\n    ans=0\n    while m>0:\n        ans+=m//5\n        m=m//5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3645": {"id": 3645, "code": "a = 20;b = 15\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12649": {"id": 12649, "code": "X = 6\nif X==3 or X==5 or X==7: print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", ">"]}, "17640": {"id": 17640, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif (a == 0 or 13 <= a <= 99) and 1 <= b <= 12:\n    print(\"YYMM\")\nelif 1 <= a <= 12 and (b == 0 or 13 <= b <= 99):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "18060": {"id": 18060, "code": "S = \"1700\"\na,b = int(S[:2]),int(S[2:])\nif (1<=a and a<=12) or (1<=b and b<=12):\n    if (1<=a and a<=12) and (1<=b and b<=12): \n        print(\"AMBIGUOUS\")\n    elif (1<=b and b<=12):\n        print(\"YYMM\")\n    elif  (1<=a and a<=12): \n        print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "2646": {"id": 2646, "code": "a = 1;b = 2;c = 9;d = 1\nif a*b*c*d==1*9*7*4:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "10576": {"id": 10576, "code": "a = 8;b = 12;k = 2\nfor i in range(max(a, b), 0, -1):\n  if a%i ==0 and b%i ==0:\n    k -= 1\n    if k==0:\n      print(i)\n      break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19164": {"id": 19164, "code": "n = 5\np = 10\na = 0\nif n % 2 == 0:\n    while p <= n:\n        a += n // p\n        p *= 5\nprint(a)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "18745": {"id": 18745, "code": "H = 3\nW = 7\nN = 10\na=0\ncount=0\nif H>W:\n    for i in range(W):\n        a+=H\n        count+=1\n        if a>=N:\n            break\nelse:\n    for i in range(H):\n        a+=W\n        count+=1\n        if a>=N:\n            break\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18499": {"id": 18499, "code": "h = 2\nw = 100\nn = 200\nx = max(h, w)\nans = (n + x - 1) // x\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3584": {"id": 3584, "code": "A = 20;B = 15\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "2112": {"id": 2112, "code": "n = 100;a = 100;b = 100\nans1=min(a,b)\nans2=max(0,a+b-n)\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">"]}, "15965": {"id": 15965, "code": "a = 12;b = 4\nif a >= (b * 2):\n    print(a - (b * 2))\nelif a < (b * 2):\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "14536": {"id": 14536, "code": "n = 3;p = 0\nA = [1, 1, 1]\nfor a in A:\n  if a % 2 != 0:\n    break \nelse:\n  if p == 1: \n    print(0)\n    exit()\n  if p == 0: \n    print(2**n)\n    exit()\nans = 2**(n-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "9254": {"id": 9254, "code": "s = \"2017/01/07\"\nans = \"2018\" + s[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "13207": {"id": 13207, "code": "s = \"abcde\";t = \"fghihgf\";u = \"edcba\"\nprint(s+\" \"+t+\" \"+u)", "coverage": [">", ">"]}, "2800": {"id": 2800, "code": "s = \"1234567876\"\na = 1e9\nfor i in range(len(s)-2):\n  a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)       ", "coverage": [">", ">", ">", ">", ">"]}, "4728": {"id": 4728, "code": "s = \"xyz\"\nl = len(s)\nprint(s[0] + str(l-2) + s[-1])", "coverage": [">", ">", ">"]}, "8732": {"id": 8732, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nA2.reverse()\nfor i in range(1, N):\n    A1[i] += A1[i - 1]\n    A2[i] += A2[i - 1]\nA2.reverse()\nans = 0\nfor i in range(N):\n    ans = max(ans, A1[i] + A2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9700": {"id": 9700, "code": "from collections import deque\nn = 8\ns = \"))))((((\"\nl, que = 0, deque([])\nfor i in s:\n    que.append(i)\n    if i == '(':\n        l += 1\n    elif i == ')':\n        if l == 0:\n            que.appendleft('(')\n            l += 1\n        l -= 1\nprint(*que, ')' * l, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2124": {"id": 2124, "code": "if __name__==\"__main__\":\n    n = \"100\";A = \"100\";B = \"100\"\n    n = int(n)\n    A = int(A)\n    B = int(B)\n    print(min(A, B),  max(B - (n - A), 0))", "coverage": [">", ">", ">", ">", ">", ">"]}, "14191": {"id": 14191, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nL = [A[0]]\nfor i in range(1, N):\n  if A[i] != A[i - 1]:\n    L.append(A[i])\nN = len(L)\nif N == 1:\n  print(1)\n  exit()\nf = L[1] > L[0]\nans = 1\ni = 2\nwhile i < N:\n  if (L[i] > L[i - 1]) != f:\n    ans += 1\n    if i == N - 1:\n      break\n    i += 1\n    f = L[i] > L[i - 1]\n  i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "1168": {"id": 1168, "code": "N = 112\nfor n in range(N, 1000):\n    if len(set(str(n))) == 1:\n        print(n)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "4120": {"id": 4120, "code": "h = 10;m = 0;h2 = 15;m2 = 0;k = 30\nans = (h2 * 60 + m2) - (h * 60 + m) - k\nprint(ans)", "coverage": [">", ">", ">"]}, "18272": {"id": 18272, "code": "h = 3\nw = 7\nn = 10\np = max(h, w)\nprint((n+p-1)//p)", "coverage": [">", ">", ">", ">", ">"]}, "8330": {"id": 8330, "code": "N = 7\ncandies_i = [3, 3, 4, 5, 4, 5, 3]\ncandies_j = [5, 3, 4, 4, 2, 3, 2]\nl = []\nfor i in range(N):\n    total_li = sum(candies_i[:i+1])\n    total_lj = sum(candies_j[i:])\n    total = total_li + total_lj\n    l.append(total)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11713": {"id": 11713, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\ns = \"SUN\"\nd = {\"SUN\": 7, \"MON\": 6, \"TUE\": 5,\"WED\": 4, \"THU\": 3,\"FRI\":2,\"SAT\":1}\nprint(d[s])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "621": {"id": 621, "code": "S = \"xyz\"\nK = 4\nlenS=len(S)\nfor i in range(lenS-1):\n    ordS_i=ord(S[i])\n    if (ord(\"a\")-ordS_i)%26<=K:\n        K-=(ord(\"a\")-ordS_i)%26\n        S=S[:i]+\"a\"+S[i+1:]\nordS_i=ord(S[lenS-1])\nmoda=(ordS_i-ord(\"a\")+K)%26\nS=S[:lenS-1]+chr(ord(\"a\")+moda)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17645": {"id": 17645, "code": "S = \"1700\"\nA = int(S[:2])\nB = int(S[2:])\nif 1<=A<=12 and 1<=B<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=A<=12:\n  print(\"MMYY\")\nelif 1<=B<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "300": {"id": 300, "code": "s = \"a\"\nk = 25\nresult=\"\"\nfor ss in s:\n    if ss==\"a\":\n        result+=\"a\"\n    else:\n        if k>= 123 - ord(ss):\n            k-=123-ord(ss)\n            result+=\"a\"\n        else:\n            result+=ss\nif k>0:\n    k=k%(123-97)\n    temp=chr((((ord(result[-1])-97)+k)%(123-97))+97)\n    print(result[:-1]+temp)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!"]}, "6568": {"id": 6568, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBnum=[]\na=0\nfor i in range(n):\n    while a!=n and B[i]>A[a] :\n        a+=1\n    Bnum.append(a)\nCnum=[]\nb=0\ns=0\nfor i in range(n):\n    while b!=n and C[i]>B[b]:\n        s+=Bnum[b]\n        b+=1\n    Cnum.append(s)\nprint(sum(Cnum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17992": {"id": 17992, "code": "n = \"0112\"\nn1,n2=int(n[:2]),int(n[2:])\nif (n1!=0 and n1<=12) and (n2!=0 and n2<=12):\n    print(\"AMBIGUOUS\")\nelif n1!=0 and n1<=12:\n    print(\"MMYY\")\nelif n2!=0 and n2<=12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7449": {"id": 7449, "code": "a = \"210\";b = \"5\"\na=int(a)\nb=int(b)\nc = [31, 41, 59, 26, 53]\nif sum(c)>=a:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "17244": {"id": 17244, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        print('H') \n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "9269": {"id": 9269, "code": "S = \"2017/01/31\"\nS=\"2018\"+S[4:]\nprint(S)", "coverage": [">", ">", ">"]}, "14258": {"id": 14258, "code": "p = -1\nxp = -1\nans = 1\nfor i in \"1 2 1 2 1 2 1 2 1\".split(\" \"):\n  i = \"1\"\n  if i == p: continue\n  if p != -1:\n    x = p < i\n    if xp != -1:\n      ans += x != xp\n    if xp != -1 and x != xp:\n      xp = -1\n    else:\n      xp = x\n  p = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "17811": {"id": 17811, "code": "S = 1905\nif 0 < S//100 < 13:\n    if 0 < S%100 < 13:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 0 < S%100 < 13:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "4544": {"id": 4544, "code": "x = ['s', 'm', 'i', 'l', 'e', 's']\nprint(x[0],len(x)-2,x[-1],sep='')", "coverage": [">", ">"]}, "7847": {"id": 7847, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nif n == k:\n    print(1)\n    exit()\nimport math\nprint(1 + math.ceil(((n - k) / (k-1))))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1887": {"id": 1887, "code": "num = [100, 100, 100]\na = min(num[1],num[2])\nb = max(0,(num[1]+num[2]) - num[0])\nprint(a,b)", "coverage": [">", ">", ">", ">"]}, "17634": {"id": 17634, "code": "S = \"1905\"\nl,r = int(S[:2]),int(S[2:])\nif 1 <= l <= 12 and 1 <= r <= 12:\n\tprint(\"AMBIGUOUS\")\nelif 1<=r<=12:\n\tprint(\"YYMM\")\nelif 1<=l<=12:\n\tprint(\"MMYY\")\nelse:\n\tprint(\"NA\")", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "13667": {"id": 13667, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nst = h1 * 60 + m1\nen = h2 * 60 + m2\nprint(max(0, en - st - k))", "coverage": [">", ">", ">", ">"]}, "18545": {"id": 18545, "code": "h = 3\nw = 7\nn = 10\ni=1\nwhile n > max(h,w)*i:\n    i += 1\nelse: print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8036": {"id": 8036, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nb = a.index(1) \nans = 0\nb -= (k-1)\nif b < 0:\n    b = a.index(1) + abs(b)\nif b > n-1 -(k-1):\n    b -= b- (k-1)\nc,d = divmod(b,k-1)\nans += c\nif d != 0:\n    ans +=1\ne,f = divmod(n-1 - b,k-1)\nans += e\nif f != 0:\n    ans +=1\nif d != 0 and f != 0 and d + f <= k-1:\n    ans -=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "15696": {"id": 15696, "code": "x = 100000;y = 1;z = 1\nxx=x-z\nyy=y+z\nprint(int(xx/yy))", "coverage": [">", ">", ">", ">"]}, "15138": {"id": 15138, "code": "n = 2;p = 0\nA = [1, 3]\neven = 0\nodd = 0\nfor a in A:\n    if a % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nif odd == 0:\n    if p == 0:\n        ans = 2 ** n\n    else:\n        ans = 0\nelse:\n    ans = 2 ** (n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "7225": {"id": 7225, "code": "hp = \"210\";sp = \"5\"\nhp = int(hp)\nsp = int(sp)\nattack = ['31', '41', '59', '26', '53']\ndamage = 0\nfor i, new in enumerate(attack):\n    attack[i] = int(attack[i])\nfor i in range(0,sp):\n    damage += attack[i]\nif damage >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5494": {"id": 5494, "code": "n = 5\nprint(n//2 if n % 2 == 0 else (n+1)//2)", "coverage": [">", ">"]}, "1559": {"id": 1559, "code": "N = 112\nif N%111==0:\n    print(N)\nelse:\n    print((N//111+1)*111)", "coverage": [">", ">", "!", "!", ">"]}, "4184": {"id": 4184, "code": "HM = [10, 0, 15, 0, 30]\nhours = HM[2]-HM[0]\nminutes = HM[3]-HM[1]\nK = HM[4]\ntotalTimes = hours*60+minutes\nprint(totalTimes-K)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4076": {"id": 4076, "code": "import sys\nreadline = sys.stdin.buffer.readline\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nprint(60 * (h2 - h1) + m2 - m1 - k)", "coverage": [">", ">", ">", ">"]}, "15907": {"id": 15907, "code": "A = 20;B = 30\nprint(A - 2 * B if A - 2 * B > 0 else 0)", "coverage": [">", ">"]}, "258": {"id": 258, "code": "s = ['a']\nk = 25\nA = 'abcdefghijklmnopqrstuvwxyz'\nDa = {a:i for i,a in enumerate(A)}\nc = 0\nfor i in range(len(s)):\n    if s[i]!='a' and 26-Da[s[i]]<=k:\n        k -= 26-Da[s[i]]\n        s[i] = 'a'\nif k:\n    s[i] = A[Da[s[i]]+k%26]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10467": {"id": 10467, "code": "a = 8;b = 12;k = 2\nn = []\nfor i in range(1, min(a, b) + 1):\n  if a % i == 0 and b % i == 0:\n    n.append(i)\nprint(n[::-1][k-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "830": {"id": 830, "code": "k = 101\nnum=0\nfor i in range(k+1):\n    num=(num*10+7)%k\n    if num==0:\n        print(i+1)\n        break\nif num:\n    print(\"-1\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "8368": {"id": 8368, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nma = 0\nfor i in range(N):\n    c = sum(A[:i+1]) + sum(B[i:])\n    ma = max(ma, c)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9039": {"id": 9039, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nprint('Yay!' if max(b-a, c-a, d-a, e-a, c-b, d-b, e-b, d-c, e-c, e-d) <= k else ':(')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8464": {"id": 8464, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3369": {"id": 3369, "code": "A = 20;B = 30\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "3545": {"id": 3545, "code": "a = 20;b = 15\nx = a-(b * 2)\nif x > 0:\n    print(x)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7022": {"id": 7022, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!"]}, "10680": {"id": 10680, "code": "a = 8;b = 12;k = 2\nans = [1]\nn = min(a, b)\nfor i in range(2, n+1):\n    if a%i == 0 and b%i == 0:\n        ans += [i]\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "894": {"id": 894, "code": "k = 2\nse=0\nfor i in range(k):\n    se=se*10\n    se+=7\n    i+=1\n    if se%k==0:\n        print(i)\n        exit()\n    se%=k\nprint('-1')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6020": {"id": 6020, "code": "N = \"2\"\nN=int(N)\nq1, mod = divmod(N,2)\nif mod == 0:\n    print(q1)\nelse:\n    print(q1 + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3665": {"id": 3665, "code": "w = 20;c = 30\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "11456": {"id": 11456, "code": "s = \"SAT\"\nweek = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nn = week.index(s)\nprint(7-n)", "coverage": [">", ">", ">", ">"]}, "17361": {"id": 17361, "code": "a = \"H\";b = \"H\"\nt = {'HH': 'H', 'HD': 'D', 'DH': 'D', 'DD':'H'}\nprint(t[a+b])", "coverage": [">", ">", ">"]}, "8510": {"id": 8510, "code": "N = 5\nl1 = [3, 2, 2, 4, 1]\nl2 = [1, 2, 2, 2, 1]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4284": {"id": 4284, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nhk = K//60\nmk = K%60\nans = (H2 - hk)*60 + (M2 - mk) - (H1*60 + M1)\nprint(max(ans, 0))", "coverage": [">", ">", ">", ">", ">"]}, "10281": {"id": 10281, "code": "N = 6\nS = \")))())\"\nl = 0\nr = 0\nfor c in S:\n    if c == '(':\n        l += 1\n    else:\n        if l != 0:\n            l -= 1\n        else:\n            r += 1\nprint('('*r + S + ')'*l)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "7715": {"id": 7715, "code": "N = 4;K = 3\nAlist = [2, 3, 1, 4]\nprint(-(-(N-1)//(K-1)))", "coverage": [">", ">", ">"]}, "11928": {"id": 11928, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nif a==c:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "9736": {"id": 9736, "code": "N = 3\nS = \"())\"\nL = 0\nR = 0\ncnt = 0\nd = []\nfor s in S:\n    if s == \"(\":\n       cnt += 1\n    else:\n        cnt -= 1\n        if cnt < 0:\n            cnt = 0\n            L += 1\nR += cnt\nprint(L*\"(\" + S + R*\")\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "5708": {"id": 5708, "code": "from sys import stdin\ninput = \"<function <lambda>>\"\nn = 2\nprint((n + 1) // 2)", "coverage": [">", ">", ">", ">"]}, "15250": {"id": 15250, "code": "x = 12;y = 3;z = 1\nc = x // (y + z)\nd = x % (y + z)\nif d >= z:\n    print(c)\nelse:\n    print(c - 1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14123": {"id": 14123, "code": "from collections import deque\nN = 7\nA_deque = deque(int(e) for e in \"1 2 3 2 1 999999999 1000000000\".split())\nsection = list()\nsection.append(A_deque.popleft())\nans = 1\nmode = 0\nwhile 1:\n    if len(A_deque) == 0:\n        break\n    elif mode == 0:\n        next = A_deque.popleft()\n        if section[-1] == next:\n            section.append(next)\n        elif section[-1] > next:\n            section.append(next)\n            mode = -1\n        elif section[-1] < next:\n            section.append(next)\n            mode = 1\n    elif mode == 1:\n        next = A_deque.popleft()\n        if section[-1] > next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\n    elif mode == -1:\n        next = A_deque.popleft()\n        if section[-1] < next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6734": {"id": 6734, "code": "H = 20;N = 3\nC = [4, 5, 6]\ns = 0\nfor i in range(N):\n    s += C[i]\nr = H - s\nif r <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11557": {"id": 11557, "code": "s = \"SAT\"\ndays_of_the_week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nn = days_of_the_week.index(s)\nprint(7 - days_of_the_week.index(s))", "coverage": [">", ">", ">", ">"]}, "4898": {"id": 4898, "code": "word = \"smiles\"\nlength=len(word[1:-1])\nans=word[0]+str(length)+word[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8910": {"id": 8910, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12385": {"id": 12385, "code": "s = \"akasaka\"\nn = len(s)\nflag = 0\nif s == s[::-1]:\n    flag += 1\nss = s[:int((n-1)/2)]\nif ss == ss[::-1]:\n    flag += 1\nsss = s[int((n+3)/2)-1:]\nif sss == sss[::-1]:\n    flag += 1\nif flag == 3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4882": {"id": 4882, "code": "s = \"internationalization\"\nans = s[0] + str(len(s)-2) + s[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "8920": {"id": 8920, "code": "n = 1\na = [2]\nb = [3]\nresult = -1\nfor i in range(n):\n  a_sum = sum(a[0:i+1])\n  result = max(result, a_sum + sum(b[i:]))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2190": {"id": 2190, "code": "N = 100;A = 100;B = 100\nans1 = min(A, B)\nans2 = max(A + B - N, 0)\nprint(ans1, ans2)", "coverage": [">", ">", ">", ">"]}, "9623": {"id": 9623, "code": "ss = \"2017/01/31\"\nprint(ss[:3] + '8' + ss[4:])", "coverage": [">", ">"]}, "5634": {"id": 5634, "code": "N = 100\na = N % 2\nmy_result = (N + a) / 2\nprint(int(my_result))", "coverage": [">", ">", ">", ">"]}, "4503": {"id": 4503, "code": "s = \"xyz\"\nss=len(s[1:len(s)-1])\nsss=str(ss)\nprint(s[0]+sss+s[-1])", "coverage": [">", ">", ">", ">"]}, "17329": {"id": 17329, "code": "a = \"D\";b = \"H\"\nprint('DH'[a==b])", "coverage": [">", ">"]}, "6584": {"id": 6584, "code": "from bisect import bisect_left, bisect_right\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in range(n):\n    x = b[i]\n    l = bisect_left(a, x)\n    r = bisect_right(c, x)\n    ans += l * (n - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1379": {"id": 1379, "code": "n = 112\nfor i in range(9):\n    if n > 111*i and n <= 111*(i+1):\n        ans = 111*(i+1)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9952": {"id": 9952, "code": "n = 6\nS = \")))())\"\nl = 0\nr = 0\nprev = \")\"\nfor s in S:\n    if prev == \")\" and s == \")\":\n        if r > 0:\n            r -= 1\n        else:\n            l += 1\n    elif prev == \")\" and s == \"(\":\n        r += 1\n    elif prev == \"(\" and s == \")\":\n        r -= 1\n    elif prev == \"(\" and s == \"(\":\n        r += 1\n    prev = s\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11905": {"id": 11905, "code": "m = 11\nn = 12\nprint(int(m!=n))", "coverage": [">", ">", ">"]}, "10793": {"id": 10793, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn = len(s)\nm = n//2\ns_f = []\ns_l = []\nfor i in range(m):\n    s_f.append(s[i])\nfor i in range(1,m + 1):\n    s_l.append(s[-i])\ns_r = list(reversed(s))\ns_f_r = list(reversed(s_f))\ns_l_r = list(reversed(s_l))\nif s_r == s:\n    if s_f_r == s_f and s_l_r == s_l:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "12387": {"id": 12387, "code": "s = \"atcoder\"\nn = len(s)\nflag = 0\nif s == s[::-1]:\n    flag += 1\nss = s[:int((n-1)/2)]\nif ss == ss[::-1]:\n    flag += 1\nsss = s[int((n+3)/2)-1:]\nif sss == sss[::-1]:\n    flag += 1\nif flag == 3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">"]}, "6881": {"id": 6881, "code": "H = 210;N = 5\na = [31, 41, 59, 26, 53]\na.sort()\nreversed(a)\nflag = True\nfor i in range(N):\n  H-=a[i]\n  if H<=0:\n    flag = False\n    print('Yes')\n    break\nif flag == True:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "6565": {"id": 6565, "code": "import bisect\nn = 2\na = [1, 5]\na = sorted(a)\nb = [2, 4]\nb = sorted(b)\nc = [3, 6]\nc = sorted(c)\nans = 0\nfor i in range(n):\n    B = b[i]\n    a_nums = bisect.bisect_left(a,B)\n    c_nums = n - bisect.bisect_right(c,B)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "943": {"id": 943, "code": "K = 2\nx=7%K\ni=1\nflag=0\nfor j in range(K+1):\n  if x==0:\n    print(i)\n    flag=1\n    break\n  x=(10*x+7)%K\n  i+=1\nif flag==0:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "7762": {"id": 7762, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nfi = 0\nfor i in range(n):\n    if a[i] == 1:\n        fi = i\n        break\nif (n - 1) % (k - 1) == 0:\n    print((n - 1) // (k - 1))\nelse:\n    print((n - 1) // (k - 1) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7611": {"id": 7611, "code": "H = 210;N = 5\ndeathblows=map(int,\"31 41 59 26 53\".split())\nif sum(deathblows) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11009": {"id": 11009, "code": "import sys\ns = \"level\"\ns2 = s[:(len(s) - 1) // 2]\ns3 = s[(len(s) + 3) // 2 - 1 :]\nif s == s[::-1]:\n    if s2 == s2[::-1]:\n        if s3 == s3[::-1]:\n            print(\"Yes\")\n            sys.exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "6202": {"id": 6202, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in range(n):\n  d=bisect.bisect_left(a,b[i])\n  e=bisect.bisect_right(c,b[i])\n  ans+=d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8063": {"id": 8063, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nnow=0\nans=0\nif n==k:\n  print(1)\nelse:\n  while(True):\n    n-=k\n    ans+=1\n    if n<=0:\n      break\n    else:\n      n+=1\n  print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "4850": {"id": 4850, "code": "s = \"smiles\"\nx = len(s) - 2\nprint(s[0] + str(x) + s[-1])", "coverage": [">", ">", ">"]}, "18284": {"id": 18284, "code": "import math\nsize = {}\nsize = {'H': 3}\nsize = {'H': 3, 'W': 7}\nN = 10\nif size['H'] > size['W']:\n    bigsize = 'H'\nelse:\n    bigsize = 'W'\nlines_num = math.ceil(N/size[bigsize])\nprint(lines_num)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3682": {"id": 3682, "code": "a = 20;b = 15\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17547": {"id": 17547, "code": "a = \"1905\"\nb = int(a[:2])\nc = int(a[2:])\nif 0< b < 13:\n    a_month_flag = 1\nelif b == 0:\n    a_month_flag = 0    \nelse:\n    a_month_flag = 0\nif 0< c < 13:\n    b_month_flag = 1\nelif c == 0:\n    b_month_flag = 0\nelse:\n    b_month_flag = 0\nif a_month_flag ==1 and b_month_flag==1:\n    print(\"AMBIGUOUS\")\nelif a_month_flag == 1 and b_month_flag == 0:\n    print(\"MMYY\")\nelif a_month_flag == 0 and b_month_flag ==1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4113": {"id": 4113, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nans=(h2-h1)*60+(m2-m1)-k\nprint(ans)", "coverage": [">", ">", ">"]}, "555": {"id": 555, "code": "s = \"a\"\nk = 25\nn = len(s)\nans = []\nfor i in range(n):\n    if s[i] == \"a\":\n        ans.append(\"a\")\n    elif 123 - ord(s[i]) <= k:\n        ans.append(\"a\")\n        k -= 123 - ord(s[i])\n    else:\n        ans.append(s[i])\nk %= 26  \nans[-1] = chr((ord(ans[-1]) + k - 97) % 26 + 97)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "13282": {"id": 13282, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "19499": {"id": 19499, "code": "import sys\ninput = sys.stdin.readline\nN = 999999999\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2 * N)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14970": {"id": 14970, "code": "a = 3;b = 0\nc = [1, 1, 1]\nodd = sum(c)\nval = 0\nif odd:\n    val = 2**(a-1)\nelse:\n    val = 2**a*(1-b)\nprint(val)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1672": {"id": 1672, "code": "N = 100;A = 100;B = 100\nrmax = min(A, B)\nrmin = max(0, A+B-N)\nprint(rmax, rmin)", "coverage": [">", ">", ">", ">"]}, "15841": {"id": 15841, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nX = 100000;Y = 1;Z = 1\nprint((X - Z) // (Z + Y))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "287": {"id": 287, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor e,i in enumerate(s):\n    c=(123-ord(i))%26\n    if k>=c:\n        s[e]=\"a\"\n        k-=c\n    else:s[e]=i\nl = chr((ord(s[-1])-97+k)%26+97)\nprint(\"\".join(s[:-1])+l)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12215": {"id": 12215, "code": "S = \"atcoder\"\narray = list(S)\nN = len(array)\na = (N-2)//2\nb = (N+2)//2\nif array[0:a+1] == array[b:N]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12253": {"id": 12253, "code": "s = \"level\"\nn = len(s)\nif s != s[::-1]:\n  print('No')\nelse:\n  s_1 = s[0:(n-1)//2]\n  s_2 = s[(n+1)//2:n]\n  if s_1 == s_1[::-1] and s_2 == s_2[::-1]:\n    print('Yes')\n  else:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "11798": {"id": 11798, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D2 == 1:\n  print ('1')\nelse:\n  print ('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "19442": {"id": 19442, "code": "N = 3\nif N == 1:\n    print(2)\n    exit()\nans = N if N % 2 == 0 else 2 * N\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "10242": {"id": 10242, "code": "N = 6\nS = \")))())\"\nstack= []\nans=\"\"\nL=0\nR=0\nfor i in range(N):\n  if S[i]==\"(\":\n    stack.append(S[i])\n  else:\n    if len(stack)>0:\n      stack.pop()\n    else:\n      L += 1\nR=len(stack)\nans = L * \"(\" + S + R * \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "1368": {"id": 1368, "code": "n = 750\nwhile True:\n  tmp = str(n)\n  if(tmp[0] == tmp[1] == tmp[2]):\n    print(n)\n    break\n  else:\n    n += 1", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "3657": {"id": 3657, "code": "n = 20;m = 15\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "19386": {"id": 19386, "code": "n = 3\nc=n\nd=0\nfor i in range(n, 99999999999999, n):\n    if i%2==0 and i%c==0:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17883": {"id": 17883, "code": "n = ['1', '9', '0', '5']\nx = int(n[0]+n[1])\ny = int(n[2]+n[3])\nif 1 <= x and x <= 12:\n  if 1 <= y and y <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelif 1 <= y and y <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!"]}, "13166": {"id": 13166, "code": "S = \"happy,newyear,enjoy\"\nans=S.replace(\",\" , \" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "11763": {"id": 11763, "code": "a = 11;b = 30\nc = 12;d = 1\nif (a != c):\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18335": {"id": 18335, "code": "H = 3\nW = 7\nN = 10\nA = max(H, W)\nans = (N + A - 1) // A\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8131": {"id": 8131, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(math.ceil((N - K) / (K - 1)) + 1) ", "coverage": [">", ">", ">", ">"]}, "10145": {"id": 10145, "code": "from collections import deque\nN = 3\nS = \"())\"\nque = deque(S)\nl = r = 0\nfor s in S:\n    if s == '(':\n        l += 1\n    else:\n        r += 1\n    if l < r:\n        que.appendleft('(')\n        l += 1\nelse:\n    ans = \"\".join(que)\n    if r < l:\n        ans = ans + \")\" * (l - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "9570": {"id": 9570, "code": "S = \"2017/01/07\"\nans = '2018' + S[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "17335": {"id": 17335, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        ans = 'H'\n    else:\n        ans = 'D'\nelse:\n    if b == 'H':\n        ans = 'D'\n    else:\n        ans = 'H'\nprint(ans)", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "7223": {"id": 7223, "code": "hp = \"10\";sp = \"3\"\nhp = int(hp)\nsp = int(sp)\nattack = ['4', '5', '6']\ndamage = 0\nfor i, new in enumerate(attack):\n    attack[i] = int(attack[i])\nfor i in range(0,sp):\n    damage += attack[i]\nif damage >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3201": {"id": 3201, "code": "S = \"1234567876\"\nn = len(S)\nans = 10**9\nfor i in range(n - 2):\n    tmp = int(S[i:i + 3])\n    diff = abs(753 - tmp)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4945": {"id": 4945, "code": "s = \"internationalization\"\nn = len(s) - 2\nans = s[0] + str(n) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3769": {"id": 3769, "code": "x = 12;y = 3;z = 1\nx-=z\nprint(int(x/(y+z)))", "coverage": [">", ">", ">"]}, "4225": {"id": 4225, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nx1 = h1 * 60 + m1\nx2 = h2 * 60 + m2\nprint(x2 - x1 - k)", "coverage": [">", ">", ">", ">"]}, "7991": {"id": 7991, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((n-1)//(k-1)+((n-1)%(k-1)>0))", "coverage": [">", ">", ">"]}, "5636": {"id": 5636, "code": "n = 2\na = n // 2\nb = n % 2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "4399": {"id": 4399, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nH1 *= 60\nH2 *= 60\nstart = H1 + M1\nend = H2 + M2\ntime = end - start\nans = time - K\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18082": {"id": 18082, "code": "s = \"1905\"\nif 0 < int(s[:2]) <= 12 and 0 < int(s[2:]) <= 12:\n    print('AMBIGUOUS')\nelif 0 < int(s[:2]) <= 12 and int(s[2:]) >= 12:\n    print('MMYY')\nelif 0 < int(s[:2]) < 12 and int(s[2:]) == 0:\n    print('MMYY')\nelif int(s[:2]) >= 12 > 0 and 0 < int(s[2:]) <= 12:\n    print('YYMM')\nelif int(s[:2]) == 0 and 0 < int(s[2:]) <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "7825": {"id": 7825, "code": "n = 4;k = 3\nl = [2, 3, 1, 4]\nif n<=k:\n    print(1)\n    exit()\nc=1\nwhile 1:\n    if n<=k:\n        break\n    n-=(k-1)\n    c+=1\nprint(c)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3099": {"id": 3099, "code": "a = \"1111111111\"\nb=753\nfor i in range(len(a)-2):\n  if abs(int(a[i]+a[i+1]+a[i+2])-753)<b:\n    b=abs(int(a[i]+a[i+1]+a[i+2])-753)\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2078": {"id": 2078, "code": "n = 10;a = 7;b = 5\nx=a+b-n\nif x>=0:\n  x+=0\nelse:\n  x=0\nprint(min(a,b),x)  ", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5258": {"id": 5258, "code": "c = \"s\";s = ['m', 'i', 'l', 'e'];d = \"s\"\nprint(c+str(len(s))+d)", "coverage": [">", ">"]}, "6607": {"id": 6607, "code": "from bisect import bisect_left,bisect_right\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in B:\n    ans +=bisect_left(A,i)*(n-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12598": {"id": 12598, "code": "A = 8;B = 12;K = 2\nk=0\nn=min(A,B)\nwhile 1:\n  if A%n==0 and B%n==0:\n    k+=1\n  if K==k:\n    break\n  n-=1\nprint (n)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4797": {"id": 4797, "code": "S = \"xyz\"\nn = str(len(S)-2)\nres = S[0]+n+S[len(S)-1]\nprint(res)", "coverage": [">", ">", ">", ">"]}, "10957": {"id": 10957, "code": "S = \"akasaka\"\nSkai1 = S[0:(len(S)-1)//2]\nSkai1 = Skai1[::-1]\nSkai2 = S[((len(S)+3)//2)-1:len(S)]\nSkai2 = Skai2[::-1]\nif S==S[::-1] and S[0:(len(S)-1)//2] ==Skai1 and S[((len(S)+3)//2)-1:len(S)] == Skai2: \n  print('Yes')\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8694": {"id": 8694, "code": "N = 1\nA1 = [2]\nA2 = [3]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10307": {"id": 10307, "code": "A = 100;B = 50;K = 4\nif A>=B:\n    A^=B\n    B^=A\n    A^=B\na=[]\nfor i in range(1,A+1):\n    if A%i==0 and B%i==0:\n        a.append(i)\nprint(a[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5562": {"id": 5562, "code": "S = 100\na = (S // 2) + (S % 2)\nprint(int(a))", "coverage": [">", ">", ">"]}, "2544": {"id": 2544, "code": "N = {'9', '2', '1'}\nif '1' in N and '9' in N and '7' in N and '4' in N:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "7705": {"id": 7705, "code": "import sys\nimport math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">", ">"]}, "7974": {"id": 7974, "code": "import math\nn = 3;k = 3\nAs = [1, 2, 3]\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "14283": {"id": 14283, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\nres = 0\nwhile  i < N:\n    while i+1 < N and A[i] == A[i+1]: i += 1\n    if i+1 < N and A[i] <= A[i+1]:\n        while i+1 < N and A[i] <= A[i+1]: i += 1\n    elif i+1 < N and A[i] >= A[i+1]:\n        while i+1 < N and A[i] >= A[i+1]: i += 1\n    res += 1\n    i += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13287": {"id": 13287, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "4855": {"id": 4855, "code": "moji = \"internationalization\"\nstart = moji[0]\nlength = len(moji)\nend = moji[length - 1]\ncentre = length - 2\nprint(start + str(centre) + end)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11656": {"id": 11656, "code": "a = \"SAT\"\narr = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\np = arr.index(a)\nprint(7-p)", "coverage": [">", ">", ">", ">"]}, "790": {"id": 790, "code": "k = 101\nnum = 0\nif not k%2:\n    print(-1)\nelse:\n    for i in range(k):\n        num = (num*10+7)%k\n        if num == 0:\n            print(i+1)\n            break\n    else:\n        print(-1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "249": {"id": 249, "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n    if s[i] != \"a\":\n        num = 26-(ord(s[i])-ord(\"a\"))\n        if k >= num:\n            k -= num\n            s[i] = \"a\"\ns[-1] = chr(ord(\"a\")+((ord(s[i])-ord(\"a\")+k)%26))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "966": {"id": 966, "code": "N = \"112\"\nprint(str(int(N[0]) + 1) * 3 if int(N[0] * 3) < int(N) else N[0] * 3)", "coverage": [">", ">"]}, "8730": {"id": 8730, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nA2.reverse()\nfor i in range(1, N):\n    A1[i] += A1[i - 1]\n    A2[i] += A2[i - 1]\nA2.reverse()\nans = 0\nfor i in range(N):\n    ans = max(ans, A1[i] + A2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15072": {"id": 15072, "code": "n = 2;p = 0\na = [1, 3]\nodd = 0\nfor i in a:\n    if i%2:\n        odd += 1\neven = n-odd\nans = 0\nfor i in range(0,odd+2,2):\n    if i+p > odd:\n        break\n    for j in range(0,even+1):\n        if j > even:\n            break\n        a = 1\n        for k in range(i+p):\n            a *= (odd-k)\n            a /= k+1\n        b = 1\n        for k in range(j):\n            b *= (even-k)\n            b /= k+1\n        ans += a*b\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17892": {"id": 17892, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif 1 <= a <= 12 and (b == 0 or b > 12):\n    print('MMYY')\nelif 1 <= b <= 12 and (a == 0 or a > 12):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "12260": {"id": 12260, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"level\"\nn = len(s)\nt = s[0:(n-1)//2]\nq = s[(n+2)//2:n]\nif s == s[::-1] and t == t[::-1] and q == q[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6332": {"id": 6332, "code": "from bisect import bisect_right, bisect_left\nN = 3\nAs = [1, 1, 1]\nBs = [2, 2, 2]\nCs = [3, 3, 3]\nans = 0\nfor B in Bs:\n    A_idx = bisect_left(As, B)\n    C_idx = bisect_right(Cs, B)\n    ans += A_idx * (N - C_idx)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11405": {"id": 11405, "code": "weekday = ['SUN', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON']\nval = \"SUN\"\nif val == 'SUN':\n    print(\"7\")\nelse:\n    print(weekday.index(val))", "coverage": [">", ">", ">", ">", "!", "!"]}, "16822": {"id": 16822, "code": "ab = \"D H\"\nprint(eval('\"H\" if {} ab[2] == \"H\" else \"D\"'.format(\"not\" if ab[0] == \"D\" else \"\")))", "coverage": [">", ">"]}, "3509": {"id": 3509, "code": "A = 20;B = 15\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "14969": {"id": 14969, "code": "a = 1;b = 1\nc = [0]\nodd = sum(c)\nval = 0\nif odd:\n    val = 2**(a-1)\nelse:\n    val = 2**a*(1-b)\nprint(val)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15960": {"id": 15960, "code": "a = 20;b = 15\nc=0\nif a<=b:\n  print(0)\nelif a>b:\n  c=a-b*2\n  if c>0:\n    print(c)\n  elif c<=0:\n    print(0)", "coverage": [">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "15722": {"id": 15722, "code": "a = 100000;b = 1;c = 1\nprint(int((a-c)/(b+c)))", "coverage": [">", ">"]}, "919": {"id": 919, "code": "k = 101\nif k%2==0:\n    print(-1)\nelse:\n    n=7\n    cnt=1\n    l={}\n    while n%k!=0:\n        if n not in l:\n            l[n]=1\n        else:\n            print(-1)\n            exit()\n        n=(n*10+7)%k\n        cnt+=1\n    print(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "15698": {"id": 15698, "code": "x = 64145;y = 123;z = 456\nxx=x-z\nyy=y+z\nprint(int(xx/yy))", "coverage": [">", ">", ">", ">"]}, "7580": {"id": 7580, "code": "h = 211;n = 5\nprint('No' if sum(list(map(int, \"31 41 59 26 53\".split())))<h else 'Yes')", "coverage": [">", ">"]}, "6041": {"id": 6041, "code": "n = 2\nans = n//2\nans += n%2\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "5754": {"id": 5754, "code": "n = 100\nprint(int(n/2+0.9))", "coverage": [">", ">"]}, "19024": {"id": 19024, "code": "import math\nn = 12\nif n % 2 == 1:\n    print(0)\nelse:\n    s = 0\n    p = 0\n    while 10 * (5 ** p) <= n:\n        s += n // (10 * (5 ** p))\n        p += 1\n    print(s)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "3568": {"id": 3568, "code": "a = 12;b = 4\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", "!", "!", ">"]}, "2377": {"id": 2377, "code": "n = 13;m = 3\nod_od = n*(n-1)/2\nev_ev = m*(m-1)/2\nprint(int(od_od+ev_ev))", "coverage": [">", ">", ">", ">"]}, "5506": {"id": 5506, "code": "n = 5\nans = n//2+n%2\nprint(ans)", "coverage": [">", ">", ">"]}, "6853": {"id": 6853, "code": "h = 10;n = 3\nlst = [4, 5, 6]\nif sum(lst) < h:\n  print('No')\nelse:\n  print('Yes')", "coverage": [">", ">", ">", "!", "!", ">"]}, "9476": {"id": 9476, "code": "N = \"2017/01/07\"\nprint('2018'+N[4:])", "coverage": [">", ">"]}, "1689": {"id": 1689, "code": "n = 10;a = 7;b = 5\nmx = min(a, b)\nmn = max(0, a + b - n)\nprint(mx, mn)", "coverage": [">", ">", ">", ">"]}, "4588": {"id": 4588, "code": "s = \"internationalization\"\nprint(s[0], str(len(s) - 2), s[-1], sep='')", "coverage": [">", ">"]}, "12940": {"id": 12940, "code": "if int(\"5\")in[7,5,3]:print('YES')\nelse:print('NO')", "coverage": [">", "!"]}, "10366": {"id": 10366, "code": "a = 8;b = 12;k = 2\nc=[i for i in range(100,0,-1) if a%i==0 and b%i==0]\nprint(c[k-1])", "coverage": [">", ">", ">"]}, "1978": {"id": 1978, "code": "n = 100;a = 100;b = 100\nprint(min(a,b))\nif a+b<n:print(0)\nelse:print(a+b-n)", "coverage": [">", ">", ">", ">"]}, "12479": {"id": 12479, "code": "S = \"level\"\nm = len(list(S)) // 2\nl = m + 1\nprint('Yes' if (S == S[::-1]) & (S[:m] == S[:m:][::-1]) & (S[l:] == S[l::][::-1]) else 'No')", "coverage": [">", ">", ">", ">"]}, "16721": {"id": 16721, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    if b == 'H':\n        print('H')\n    elif b == 'D':\n        print('D')\nelif a == 'D':\n    if b == 'H':\n        print('D')\n    elif b == 'D':\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">"]}, "7740": {"id": 7740, "code": "import math\nn = 3;k = 3\nA = [1, 2, 3]\nif n==k:\n    print(1)\nelse:\n    n-=k\n    print(1+math.ceil(n/(k-1)))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!"]}, "7748": {"id": 7748, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint((N-1-1)//(K-1)+1)", "coverage": [">", ">", ">"]}, "13424": {"id": 13424, "code": "s = \"happy,newyear,enjoy\"\na=s[:5]\nb=s[6:13]\nc=s[14:]\nprint(a,b,c)", "coverage": [">", ">", ">", ">", ">"]}, "14624": {"id": 14624, "code": "n = 1;p = 1\na = [0]\ncnt0 = a.count(0)\ncnt1 = n-cnt0\nif cnt0==n and p==0:\n    print(2**n)\nelif cnt0==n and p==1:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "3650": {"id": 3650, "code": "a = 12;b = 4\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "17539": {"id": 17539, "code": "s = \"0112\"\naa = int(s[0])*10 + int(s[1])\nbb = int(s[2])*10 + int(s[3])\nif 1 <= aa <= 12 and 1 <= bb <= 12 :\n    print(\"AMBIGUOUS\")\nelif 1 <= aa <= 12 and bb == 0 :\n    print(\"MMYY\")\nelif 1 <= aa <= 12 and 13 <= bb :\n    print(\"MMYY\")\nelif aa == 0 and 1<= bb <= 12 :\n    print(\"YYMM\")\nelif 13<=aa and 1<=bb<=12 :\n    print(\"YYMM\")\nelse :\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "982": {"id": 982, "code": "n = 750\ntemp = (n // 100) * 111\nprint(temp if temp >= n else temp + 111)", "coverage": [">", ">", ">"]}, "502": {"id": 502, "code": "from sys import stdin\nimport string\nalpha = string.ascii_lowercase\nnokori = [26-i for i in range(26)];nokori[0] = 0\ns = \"a\"\nk = 25\nsin = \"\"\nfor i in s:\n    if nokori[alpha.index(i)] <= k:\n        k -= nokori[alpha.index(i)]\n        sin += \"a\"\n    else:\n        sin += i\nq = alpha.index(sin[-1])\nq += k\nprint(sin[:-1]+alpha[q%26])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2753": {"id": 2753, "code": "a = \"1479\"\nif(a=='1479'):\n\tprint('YES')\nelse:\n\tprint('NO')", "coverage": [">", ">", ">", "!", "!"]}, "4604": {"id": 4604, "code": "N = \"smiles\"\nprint(N[0]+str(len(N)-2)+N[-1])", "coverage": [">", ">"]}, "4418": {"id": 4418, "code": "text = \"smiles\"\nprint(text[0] + str(len(text)-2) + text[-1])", "coverage": [">", ">"]}, "4161": {"id": 4161, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint((H2-H1)*60 + (M2-M1) - K)", "coverage": [">", ">"]}, "9112": {"id": 9112, "code": "s1 = \"2017\";s2 = \"01\";s3 = \"07\"\ns1 = 2018\nprint(s1, s2, s3, sep=\"/\")", "coverage": [">", ">", ">"]}, "14405": {"id": 14405, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nlist = []\nsim=0\nfor i in range(N-1):\n  if A[i]<A[i+1]:\n    list.append(1)\n  if A[i]>A[i+1]:\n    list.append(0)\n  if A[i]==A[i+1]:\n    sim+=1\ni = 0\ncount = 0\nwhile i<N-2-sim:\n  if list[i] != list[i+1]:\n    count += 1\n    i+=1\n  i+=1\nprint(count + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4466": {"id": 4466, "code": "s = \"smiles\"\nL=len(s)\nL_a=L-2\nprint(s[0]+str(L_a)+s[-1])", "coverage": [">", ">", ">", ">"]}, "18436": {"id": 18436, "code": "H = 2\nW = 100\nN = 200\nprint(-(-N//max(H,W)))", "coverage": [">", ">", ">", ">"]}, "9079": {"id": 9079, "code": "import itertools\na = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\narr1 = [a, b, c, d, e]\narr2 = [b, c, d, e]\nf = 0\nfor x, y in itertools.product(arr1, arr2):\n  if abs(x - y) > k:\n    f += 1\nif f == 0:\n  print('Yay!')\nelse:\n  print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19137": {"id": 19137, "code": "n = 12\nif n%2 == 1:\n    print(0)\n    exit()\nn //= 2\nans = 0\nnow = 1\nwhile True:\n    tmp = n // (5**now)\n    if tmp == 0:\n        break\n    ans += tmp\n    now += 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8059": {"id": 8059, "code": "n,k = map(int,\"8 3\".split())\nprint(-((1-n)//(k-1)))", "coverage": [">", ">"]}, "775": {"id": 775, "code": "K = 2\nres=1\nr=7%K\nflg=(K%2==0 or K%5==0)\nif flg:\n    res=-1\nwhile not flg:\n    if not r:\n        break\n    r=(10*r+7)%K\n    res+=1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "15671": {"id": 15671, "code": "import math\nX = 100000;Y = 1;Z = 1\nX -= Z\nprint(math.floor(X/(Y+Z)))", "coverage": [">", ">", ">", ">"]}, "11437": {"id": 11437, "code": "s = \"SUN\"\nif(s == 'SUN'):\n    print(7)\nelif(s == 'MON'):\n    print(6)\nelif(s == 'TUE'):\n    print(5)\nelif(s == 'WED'):\n    print(4)\nelif(s == 'THU'):\n    print(3)\nelif(s == 'FRI'):\n    print(2)\nelif(s == 'SAT'):\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18488": {"id": 18488, "code": "h = 3\nw = 7\nn = 10\nif h >= w:\n    m = h\nelse:\n    m = w\nif n%m == 0:\n    ans = n//m\nelse:\n    ans = n//m +1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "3508": {"id": 3508, "code": "A = 12;B = 4\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7537": {"id": 7537, "code": "h = 10;n = 3\na = [4, 5, 6]\ngokei=0\nans=\"No\"\nfor i in range(n):\n    gokei+=a[i]\n    if gokei>=h:\n        ans=\"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5122": {"id": 5122, "code": "s = \"internationalization\"\nnew_s=s[0]+str(len(s[1:-1]))+s[-1]\nprint(new_s)", "coverage": [">", ">", ">"]}, "10080": {"id": 10080, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nover=0\nleft=0\nright=0\ncenter=\"\"\nfor i in s:\n    if over==0 and i==\")\":\n        left+=1\n    elif over!=0 and i==\")\":\n        over-=1\n    else:\n        over+=1\n    center+=i\nright=over\nprint(\"(\"*left+center+\")\"*right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "4062": {"id": 4062, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\np = a*60 + b\nq = c*60 + d\nans = q-p-k\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "801": {"id": 801, "code": "K = 101\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\nelse:\n    i = 1\n    r = 7 % K\n    while(True):\n        if r == 0:\n            print(i)\n            break\n        r = (r * 10 + 7) % K\n        i += 1", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18443": {"id": 18443, "code": "A = 3\nB = 7\nN = 10\nif A < B:\n  X = N//B\n  if N%B == 0:\n    print (X)\n  else:\n    print (X+1)\nelse:\n  X = N//A\n  if N%A == 0:\n    print (X)\n  else:\n    print (X+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!"]}, "5514": {"id": 5514, "code": "N = 100\ng = N // 2\nk = ( N + 1 ) // 2\nif N % 2 == 0:\n    print(g)\nelse:\n    print(k)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "14556": {"id": 14556, "code": "n = 2;p = 0\na = [1, 3]\ncnt = [0, 0]\nfor i in a:\n    cnt[i % 2] += 1\nif cnt[1] == 0:\n    print(0 if p == 1 else 2 ** n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16040": {"id": 16040, "code": "A = 12;B = 4\nprint([A-2*B,0][A<=2*B])", "coverage": [">", ">"]}, "18408": {"id": 18408, "code": "import math\nh = 14\nw = 12\nn = 112\nans = 0\nif h < w:\n    ans = math.ceil(n/w)\nelse:\n    ans = math.ceil(n/h)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11238": {"id": 11238, "code": "S = \"SAT\"\nL =[\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nct = L.index(S)\nx = 7 - ct\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "829": {"id": 829, "code": "K = 101\nseen = set()\nextra = 7 % K\ncnt = 1\nseen.add(extra)\nwhile extra != 0:\n    extra = (extra * 10 + 7) % K\n    if extra in seen:\n        print(-1)\n        exit()\n    seen.add(extra)\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13960": {"id": 13960, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nsw = 0\ncount = 1\nfor i in range(n-1):\n    if sw == 1:\n        if a[i+1]<a[i]:\n            sw = 0\n            count += 1\n    elif sw == -1:\n        if a[i+1]>a[i]:\n            sw = 0\n            count += 1\n    else:\n        if a[i+1]>a[i]:\n            sw = 1\n        elif a[i]>a[i+1]:\n            sw = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "14368": {"id": 14368, "code": "n = 9\na = [0] * n\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nlast = 0\ncnt = 1\nincrease_flag = None\nfirst_flag = True\nfor i in range(len(a) - 1):\n    if a[i] < a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = True\n        elif not (increase_flag):\n            cnt += 1\n            increase_flag = None\n        else:\n            continue\n    elif a[i] > a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = False\n        elif not (increase_flag):\n            continue\n        else:\n            cnt += 1\n            increase_flag = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "14131": {"id": 14131, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nup = None\nfor i in range(1, N):\n    if up == None:\n        if not A[i] == A[i - 1]:\n            up = A[i] > A[i - 1]\n    elif up:\n        if A[i] < A[i - 1]:\n            ans += 1\n            up = None\n    else:\n        if A[i] > A[i - 1]:\n            ans += 1\n            up = None\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "4631": {"id": 4631, "code": "s = \"smiles\"\nprint(\"{0}{1}{2}\".format(s[:1], (len(s)-2), s[-1:]))", "coverage": [">", ">"]}, "17571": {"id": 17571, "code": "s = ['1', '9', '0', '5']\nS=[]\nfor i in range(len(s)):\n    S.append(int(s[i]))\nif 1<=S[2]*10+S[3] and S[2]*10+S[3]<=12:\n    if 1<=S[0]*10+S[1] and S[0]*10+S[1]<=12:\n        print('AMBIGUOUS')\n    else:\n        print('YYMM')\nelse:\n    if 1<=S[0]*10+S[1] and S[0]*10+S[1]<=12:\n        print('MMYY')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "7373": {"id": 7373, "code": "total = 10;n = 3\nl1 = [4, 5, 6]\ns=sum(l1)\nif(total==s or (total-s)<=0 ):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15818": {"id": 15818, "code": "a = 12;b = 3;c = 1\nm = a % (b+c)\nans = a // (b+c)\nif m >= c:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16168": {"id": 16168, "code": "from bisect import bisect_left, bisect_right\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nn = a[-1]\nmid = a[-1] // 2\ni = bisect_left(a[:-1], mid)\nif i >= len(a) - 1:\n    r = a[i - 1]\nelif i == 0 or a[i] == mid:\n    r = a[i]\nelif a[i] - mid <= mid - a[i - 1]:\n    r = a[i]\nelse:\n    r = a[i - 1]\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "1222": {"id": 1222, "code": "n = 750\nc = [111,222,333,444,555,666,777,888,999]\nfor i in range(9):\n    if c[i] >= n:\n        print(c[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "10180": {"id": 10180, "code": "N = 8\nS = \"))))((((\"\ncs=0\nmincs=1000\nenc={'(':1,')':-1}\nfor c in S:\n    cs+=enc[c]\n    mincs=min(mincs,cs)\nwhile mincs<0:\n    S='('+S\n    mincs+=1\n    cs+=1\nwhile cs>0:\n    S=S+')'\n    cs-=1\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8839": {"id": 8839, "code": "n = 1\nlist_1 = [2]\nlist_2 = [3]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19538": {"id": 19538, "code": "n = 10\nif n%2!=0:\n  n*=2\nprint(n)", "coverage": [">", ">", "!", ">"]}, "4702": {"id": 4702, "code": "s = \"internationalization\"\ns_len =str(len(s[1:-1]))\nprint(s[0]+s_len+s[-1])", "coverage": [">", ">", ">"]}, "8313": {"id": 8313, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nLeft  = A.index(1)\nRight = (N-1)-Left\nCount = (Right%(K-1)!=0)+Right//(K-1)\nLeft -= ((K-1)-Right%(K-1))%(K-1)\nCount += (Left%(K-1)!=0)+Left//(K-1)\nprint(Count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10823": {"id": 10823, "code": "import sys\ns = \"akasaka\"\npre = []\nback = []\nfor i in range((len(s)-1)//2):\n    pre.append(s[i])\ns1 = ''.join(pre)\nfor i in range((len(s)+3)//2-1,len(s)):\n    back.append(s[i])\ns2 = ''.join(back)\nif s != s[::-1]:\n    print('No')\n    sys.exit()\nelif s1 != s1[::-1]:\n    print('No')\n    sys.exit()\nelif s2 != s2[::-1]:\n    print('No')\n    sys.exit()\nprint('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">"]}, "5093": {"id": 5093, "code": "s = \"smiles\"\nx = len(s)\ny = x - 2\nprint(s[0] + str(y) + s[x-1])", "coverage": [">", ">", ">", ">"]}, "12626": {"id": 12626, "code": "a = 100;b = 50;k = 4\nl=[0]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        l.append(i)\nl.sort()\nl.reverse()\nprint(l[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15866": {"id": 15866, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 100000;b = 1;c = 1\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">", ">"]}, "19452": {"id": 19452, "code": "N = 3\nprint(N*2 if N&1 else N)", "coverage": [">", ">"]}, "5497": {"id": 5497, "code": "N = 5\nprint(int(N/2) if N % 2 == 0 else int((N+1)/2))", "coverage": [">", ">"]}, "1640": {"id": 1640, "code": "N = 10;A = 3;B = 5\nprint(min(A, B), max(0, (A + B) - N))", "coverage": [">", ">"]}, "8123": {"id": 8123, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\ncnt = 1\nlength = K\nwhile True:\n    if length >= N:\n        print(cnt)\n        break\n    length += K-1 \n    cnt += 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6799": {"id": 6799, "code": "H = 210;N = 5\nmy_list = [31, 41, 59, 26, 53]\nif H <= sum(my_list):\n    answer = 'Yes'\nelse:\n    answer = 'No'\nprint(answer)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "634": {"id": 634, "code": "k = 101\nif k%2 == 0 or k%5 == 0:\n    print(-1)\nelse:\n    ans = -1\n    a = 7\n    if k == 7 or k==1:\n        print(1)\n    else:\n        for i in range(2,10**7):\n            a = (10*a + 7)%k\n            if a==0:\n                ans =i\n                break\n        print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13656": {"id": 13656, "code": "N = 101;M = 9\nA = [9, 8, 7, 6, 5, 4, 3, 2, 1]\nA.sort()\nif 1 in A:\n    if N%2==0:\n        print(\"1\"*(N//2))\n    else:\n        if 7 in A:\n            print(\"7\"+\"1\"*(N//2-1))\n        elif 5 in A:\n            print(\"5\"+\"1\"*(N//2-2))\n        elif 3 in A:\n            print(\"3\"+\"1\"*(N//2-2))\n        elif 2 in A:\n            print(\"2\"+\"1\"*(N//2-2))\n        else:\n            print(\"8\"+\"1\"*(N//2-3))\nelif 7 in A:\n    if N%3==0:\n        print(\"7\"*(N//3))\n    elif N%3==1:\n        if 4 in A:\n            print(\"7\"*(N//3-1)+\"4\")\n        elif 8 in A:\n            print(\"8\"+\"7\"*(N//3-2))\n        elif 5 in A:\n            print(\"7\"*(N//3-3)+\"55\")\n        elif 3 in A:\n            print(\"7\"*(N//3-3)+\"33\")\n        elif 2 in A:\n            print(\"7\"*(N//3-3)+\"22\")\n    else:\n        if 5 in A:\n            print(\"7\"*(N//3-1)+\"5\")\n        elif 3 in A:\n             print(\"7\"*(N//3-1)+\"3\")\n        elif 2 in A:\n            print(\"7\"*(N//3-1)+\"2\")\n        elif 4 in A:\n            print(\"7\"*(N//3-2)+\"44\")\n        elif 8 in A:\n            print(print(\"7\"*(N//3-4)+\"88\"))\nelse:\n    B=[[] for i in range(0,10)]\n    for i in range(0,M):\n        if 2 in A:\n            B[5].append(2)\n        if 3 in A:\n            B[5].append(3)\n        if 4 in A:\n            B[4].append(4)\n        if 5 in A:\n            B[5].append(5)\n        if 6 in A:\n            B[6].append(6)\n        if 8 in A:\n            B[7].append(8)\n        if 9 in A:\n            B[6].append(9)\n    dp=['n' for i in range(0,max(10,N+1))]\n    for i in range(0,min(N+1,10)):\n        if i==2:\n            if 2 in A:\n                dp[5]='2'\n        if i==3:\n            if 3 in A:\n                dp[5]='3'\n        if i==4:\n            if 4 in A:\n                dp[4]='4'\n        if i==5:\n            if 5 in A:\n                dp[5]='5'\n        if i==6:\n            if 6 in A:\n                dp[6]='6'\n        if i==8:\n            if 8 in A:\n                dp[7]='8'\n        if i==9:\n            if 9 in A:\n                dp[6]='9'\n    if N>=6:\n        a='0'\n        b='0'\n        c='0'\n        if dp[6]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            x=max(a,b,c)\n            if x!=0:\n                dp[6]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(dp[6])\n            dp[6]=str(max(a,b,c,d))\n    if N>=7:\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        if dp[7]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            x=max(a,b,c,d)\n            if x!=0:\n                dp[7]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            e=int(dp[7])\n            dp[7]=str(max(e,a,b,c,d))\n    for i in range(8,N+1):\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        e='0'\n        f='0'\n        if B[4] and dp[i-4]!='n':\n            c='4'+dp[i-4]\n        if B[5] and dp[i-5]!='n':\n            d=str(max(B[5]))+dp[i-5]\n        if B[6] and dp[i-6]!='n':\n            e=str(max(B[6]))+dp[i-6]\n        if B[7] and dp[i-7]!='n':\n            f='8'+dp[i-7]\n        a=int(a)\n        b=int(b)\n        c=int(c)\n        d=int(d)\n        e=int(e)\n        f=int(f)\n        x=max(a,b,c,d,e,f)\n        if x==0:\n            dp[i]='n'\n        else:\n            dp[i]=str(x)\n    print(int(dp[N]))", "coverage}, "1704": {"id": 1704, "code": "a = 10;b = 7;c = 5\nprint(min(b, c), max((b+c) - a, 0))", "coverage": [">", ">"]}, "9024": {"id": 9024, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif max(e-a,e-b,e-c,e-d) <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "18710": {"id": 18710, "code": "h = 14\nw = 12\nn = 112\nif n % max(h, w) == 0:\n    print(int(n//max(h, w)))\nelse:\n    print(int(n//max(h, w))+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16425": {"id": 16425, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nm = A[-1]\nx = m / 2\nans = A[0]\nfor i in range(1, N-1):\n    if abs(ans - x) > abs(A[i] - x):\n        ans = A[i]\nprint(m, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13649": {"id": 13649, "code": "x = \"happy\";y = \"newyear\";z = \"enjoy\"\nprint(x,y,z)", "coverage": [">", ">"]}, "16731": {"id": 16731, "code": "a = \"H\";b = \"H\"\nif a == \"H\":print(b)\nelif b == \"H\":print(\"D\")\nelse : print(\"H\")", "coverage": [">", ">", "!", "!"]}, "9913": {"id": 9913, "code": "N = 8\nS = \"))))((((\"\nans = S\ncnt = 0\nnow = \"\"\nfor s in S:\n    now = s\n    if s == \"(\":\n        cnt += 1\n    elif s == \")\":\n        cnt -= 1\n    if cnt == -1:\n        ans = \"(\" + ans\n        cnt = 0\nif cnt > 0:\n    ans = ans + \")\"*cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1671": {"id": 1671, "code": "N = 10;A = 7;B = 5\nrmax = min(A, B)\nrmin = max(0, A+B-N)\nprint(rmax, rmin)", "coverage": [">", ">", ">", ">"]}, "861": {"id": 861, "code": "K = 101\ncount =1\nx = 7%K\nfor i in range(0,K+1):\n    if x== 0:\n        print(count)\n        break\n    count+=1\n    x = (x*10+7)%K\nif i== K:  \n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "1415": {"id": 1415, "code": "n = 111\nN = list(str(n))\nans = str()\nres = N[0]\nmn = True\nbl = True\nfor x in N:\n    if int(res) < int(x):\n        mn = False\n    if x != res:\n        bl = False\nif bl:\n    print(n)\nelse:\n    if not mn:\n        for i in range(len(N)):\n            ans += str(int(res) + 1)\n        print(ans)\n    else:\n        for i in range(len(N)):\n            ans += str(res)\n        print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "10042": {"id": 10042, "code": "N = 3\nS = \"())\"\nl = 0\nr = 0\nfor s in S:\n    if s == \"(\":\n        r += 1\n    else:\n        if r > 0:\n            r -= 1\n        else:\n            l += 1\nans = \"\".join([\"(\"*l , S, \")\"*r])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "8253": {"id": 8253, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\neq = 1\ncnt = int()\nwhile eq<N:\n    eq += (K-1)\n    cnt +=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6533": {"id": 6533, "code": "import bisect\nn = 2\na_list = [1, 5]\nb_list = [2, 4]\nc_list = [3, 6]\na_list = sorted(a_list)\nb_list = sorted(b_list)\nc_list = sorted(c_list)\nans = 0\nfor b_i in b_list:\n    a_count_i = bisect.bisect_left(a_list,b_i)\n    c_count_i = len(c_list) - bisect.bisect_right(c_list,b_i)\n    ans += a_count_i * c_count_i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19237": {"id": 19237, "code": "N = 12\nif N % 2 == 0:\n    Ans = 0\n    p = 1\n    check = 0\n    while check != 0 or p == 1:\n        check = N // (2 * 5**p)\n        Ans += check\n        p += 1\n    print(Ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7394": {"id": 7394, "code": "h = 211;n = 5\nprint(\"Yes\" if sum(map(int, \"31 41 59 26 53\".split())) >= h else \"No\")", "coverage": [">", ">"]}, "5260": {"id": 5260, "code": "n = \"1479\"\nif n == '1479':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "1537": {"id": 1537, "code": "n = \"750\"\nif n.count(n[0]) == 3:\n    print(n)\nelse:\n    num = int(str(n[0])+str(n[0])+str(n[0]))\n    if int(n) > num:\n        a = min(int(n[0])+1, 9)\n        print(\"%d%d%d\" % (a, a, a))\n    else:\n        print(num)", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", "!", ">"]}, "19405": {"id": 19405, "code": "import sys\nif sys.platform =='ios':\n    sys.stdin=open('input_file.txt')\nN = 999999999\nif N%2==0:\n\tN=N//2\nprint(N*2)", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "10234": {"id": 10234, "code": "n = 8\ns = \"))))((((\"\nx=s\nfor i in range(50):\n  x=x.replace('()','')\nl=x.count(')')\nr=x.count('(')\nfor i in range(l):\n  s='('+s\nfor i in range(r):\n  s+=')'\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1329": {"id": 1329, "code": "N = 750\nMin = 100000\nfor i in range(1,10):\n  Dif = i * 111 - N\n  if min(Min,Dif) == Dif and i * 111 >= N:\n    ans = i * 111\n    Min = Dif\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16417": {"id": 16417, "code": "n = 2\na = [100, 0]\na.sort(reverse=True)\nnum = a[0]\ntmp = a[1]\nfor j in range(1, n):\n  if abs(tmp-num/2) >= abs(a[j]-num/2):\n    tmp = a[j]\n  else:\n    break\nans = [num, tmp]\nprint(*ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1685": {"id": 1685, "code": "N = 10;A = 3;B = 5\nmini = A + B - N\nif mini < 0:\n    mini = 0\nmaxi = min(A,B)\nprint(maxi,mini)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6722": {"id": 6722, "code": "h = 211;n = 5\nlist_a = [31, 41, 59, 26, 53]\nif h <= sum(list_a): print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">"]}, "14080": {"id": 14080, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nd = [0 for _ in range(n-1)]\nfor i in range(n-1):\n    d[i] = a[i+1]-a[i]\nans = 1 \nstate = 'flat'\nfor i in range(n-1):\n    if i == 0:\n        if d[i] > 0:\n            state = 'up'    \n        elif d[i] < 0:\n            state = 'down'\n    else:\n        if d[i] > 0:\n            if state == 'flat':\n                state = 'up'\n            elif state == 'down':\n                state = 'flat'\n                ans += 1\n        elif d[i] < 0:\n            if state == 'flat':\n                state = 'down'\n            elif state == 'up':\n                state = 'flat'\n                ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3667": {"id": 3667, "code": "A = 20;B = 15\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "19523": {"id": 19523, "code": "i = 10\nprint(i if i%2==0 else i*2)", "coverage": [">", ">"]}, "1257": {"id": 1257, "code": "n = 750\nwhile n % 111 != 0:\n  n += 1\nprint(n)", "coverage": [">", ">", ">", ">"]}, "18846": {"id": 18846, "code": "h = 2\nw = 100\nn = 200\nr = max(h,w)\nif n%r != 0:\n    print(n//r + 1)\nelse:\n    print(int(n/r))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11721": {"id": 11721, "code": "S = \"SUN\"\nL=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n    if L[i]==S:\n        ans=7-i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4008": {"id": 4008, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nt1=H1*60+M1\nt2=H2*60+M2\nprint(t2-K-t1)", "coverage": [">", ">", ">", ">"]}, "9558": {"id": 9558, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3] = '8'\nprint(''.join([str(i) for i in s]))", "coverage": [">", ">", ">"]}, "18179": {"id": 18179, "code": "s = \"1905\"\ns1 = int(s[:2])\ns2 = int(s[2:])\nif 1 <= s1 <= 12 and 1 <= s2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= s1 <= 12:\n    print('MMYY')\nelif 1 <= s2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6414": {"id": 6414, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\ncount = 0\nimport bisect\nfor i in range(n):\n    A = bisect.bisect_right(a,b[i]-1)\n    C = bisect.bisect_left(c,b[i]+1)\n    count += A*(n-C)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14779": {"id": 14779, "code": "n = 3;p = 0\na = [1, 1, 1]\ncnt = [0] * 2\nfor num in a:\n    cnt[num % 2] += 1\nif cnt[1] == 0:\n    if p == 0:\n        print(2 ** n)\n    else:\n        print(0)\nelse:\n    print(2 ** ( n - 1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "1186": {"id": 1186, "code": "n = 112\nwhile True:\n  if len(set(str(n)))==1:\n    print(n)\n    break\n  n+=1", "coverage": [">", ">", ">", ">", ">", ">"]}, "9728": {"id": 9728, "code": "n = 6\ns = \")))())\"\nns = s\nwhile '()' in ns:\n    ns = ns.replace('()', '')\nl = ns.count(')')\nr = ns.count('(')\nprint('(' * l + s + ')' * r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5844": {"id": 5844, "code": "import math\nN = 100\nAns = math.ceil(N/2)\nprint(Ans)", "coverage": [">", ">", ">", ">"]}, "18215": {"id": 18215, "code": "h = 2\nw = 100\nn = 200\nans = 0\nif h >= w :\n  if n%h != 0:\n    ans = (n//h) +1\n  else:\n    ans = n//h\nelif  w > h:\n  if n%w != 0:\n    ans  = (n//w) +1\n  else:\n    ans = n//w\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "1199": {"id": 1199, "code": "N = 111\na = int(str(N)[0] * 3)\nif N == a:\n    print(N)\nelif N < a:\n    print(a)\nelse:\n    print(a + 111)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!"]}, "2772": {"id": 2772, "code": "s = \"1111111111\"\nnum = 10**9\nfor i in range(len(s)-2):\n    t = abs(int(s[i:i+3])-753)\n    if t < num:\n        num = t\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14533": {"id": 14533, "code": "N = 1;P = 1\nA = [50]\nans = [1,0]\nfor a in A:\n    if a%2:\n        ans[1],ans[0] = ans[1] + ans[0], ans[1] + ans[0]\n    else:\n        ans[0] = ans[0]*2\n        ans[1] = ans[1]*2\nprint(ans[P])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "7277": {"id": 7277, "code": "H = 210;N = 5\nf = [31, 41, 59, 26, 53]\nif sum(f)>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "17944": {"id": 17944, "code": "s = \"0112\"\na = 1<= int(s[:2]) <=12\nb = 1<= int(s[2:]) <=12\nif a and b:\n    print(\"AMBIGUOUS\")\nelif a:\n    print('MMYY')\nelif b:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17067": {"id": 17067, "code": "h = \"H\";d = \"H\"\nif h == d:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "18479": {"id": 18479, "code": "from math import ceil\nH = 3\nW = 7\nN = 10\nprint(min(ceil(N/H),ceil(N/W)))", "coverage": [">", ">", ">", ">", ">"]}, "7463": {"id": 7463, "code": "H = 10;N = 3\nA = [4, 5, 6]\nfor i in range(N):\n    H -= A[i]\nprint(['No','Yes'][H <= 0])", "coverage": [">", ">", ">", ">", ">"]}, "15928": {"id": 15928, "code": "a = 20;b = 30\nc=b*2\nif(c>a):\n    c=a\nprint(a-c)", "coverage": [">", ">", ">", ">", ">"]}, "18196": {"id": 18196, "code": "from collections import defaultdict\nn = 6\nL_dict, R_dict = defaultdict(int), defaultdict(int)\ni = 0\nfor ipt in \"2 3 3 1 3 1\".split():\n    L_dict[i + int(ipt)] += 1\n    R_dict[i - int(ipt)] += 1\n    i += 1\ncnt = 0\nfor Lk, Lv in L_dict.items():\n        cnt += R_dict[Lk] * Lv\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10273": {"id": 10273, "code": "n = 8\nS = \"))))((((\"\nx=y=0\nfor i,s in enumerate(S):\n  y=y-1 if s=='(' else y+1\n  x=max(x,y)\nprint('('*x+S+')'*(x-y))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15114": {"id": 15114, "code": "N = 2;P = 0\nA = [1, 3]\nB = [a % 2 for a in A]\ncount_0 = B.count(0)\ncount_1 = B.count(1)\nif count_1 == 0:\n    if P == 0:\n        ans = 2 ** N\n    else:\n        ans = 0\nelse:\n    ans = 2 ** (N - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "5181": {"id": 5181, "code": "s = \"xyz\"\nnum = str(len(s)-2)\nprint(s[0] + num + s[-1])", "coverage": [">", ">", ">"]}, "11396": {"id": 11396, "code": "S = \"SAT\"\nDAY = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor num in range(7):\n  if DAY[num] == S:\n    print(7-num)", "coverage": [">", ">", ">", ">", ">"]}, "6975": {"id": 6975, "code": "H = 10;N = 3\nA = [4, 5, 6]\natk = 0\nfor i in A:\n    atk += i\nif H > atk:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16809": {"id": 16809, "code": "a = \"H\";b = \"H\"\nif a == 'D':\n  b = 'D' if b == 'H' else 'H'\nprint(b)", "coverage": [">", ">", "!", ">"]}, "4093": {"id": 4093, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ntime = abs(h2-h1)*60 + m2 -m1\nprint(time - k)", "coverage": [">", ">", ">"]}, "4018": {"id": 4018, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nprint(h2*60+m2-h1*60-m1-k)", "coverage": [">", ">"]}, "8237": {"id": 8237, "code": "N = 3;K = 3\nA = [1, 2, 3]\nargmin = A.index(1)\nback = (argmin+(K-1)-1)//(K-1)\nforward = (N-argmin-1+(K-1)-1)//(K-1)\nans1 = back+forward\nans2 = ((N-1)+(K-1)-1)//(K-1)\nprint(min(ans1,ans2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8814": {"id": 8814, "code": "n = 7\nup = [3, 3, 4, 5, 4, 5, 3]\nlow = [5, 3, 4, 4, 2, 3, 2]\nleft = [up[0]]\nright = [0 for i in range(n)]\nright[-1] = low[-1]\nfor i in range(1, n):\n    left.append(left[i-1] + up[i])\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + low[i]\nans = 0\nfor i in range(n):\n    ans = max(left[i] + right[i], ans)\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8238": {"id": 8238, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nargmin = A.index(1)\nback = (argmin+(K-1)-1)//(K-1)\nforward = (N-argmin-1+(K-1)-1)//(K-1)\nans1 = back+forward\nans2 = ((N-1)+(K-1)-1)//(K-1)\nprint(min(ans1,ans2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9690": {"id": 9690, "code": "N = 6\nS = [')', ')', ')', '(', ')', ')']\nc = 0\nl = []\nfor i in S:\n    if i == \"(\":\n        c += 1\n    else:\n        c -= 1\n    l.append(c)\nm = min(l)\nif m < 0:\n    for i in range(N):\n        l[i] += (-m)\n    M = l[-1]\n    ans = [\"(\"] *(-m) + S + [\")\"] *M\nelse:\n    M = l[-1]\n    ans = S + [\")\"] *M\noutput = \"\".join(ans)\nprint(output)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "5703": {"id": 5703, "code": "i = \"100\"\na = int(i)//2\nb = int(i)%2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "17834": {"id": 17834, "code": "s = \"1700\"\nF, T = False, True\nans = {(F, F): 'NA', (F, T): 'YYMM', (T, F): 'MMYY', (T, T): 'AMBIGUOUS'}\nprint(ans[1 <= int(s[:2]) <= 12, 1 <= int(s[2:]) <= 12])", "coverage": [">", ">", ">", ">"]}, "9784": {"id": 9784, "code": "n = 3\ns = \"())\"\nneed_left = 0\npointer = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        pointer += 1\n    else:\n        if pointer == 0:\n            need_left += 1\n        else:\n            pointer -= 1\nres = \"\"\nfor i in range(need_left):\n    res += \"(\"\nres += s\nfor i in range(pointer):\n    res += \")\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12766": {"id": 12766, "code": "X = 5\nprint(\"YES\" if X==3 or X==5 or X==7 else \"NO\")", "coverage": [">", ">"]}, "8113": {"id": 8113, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\ni = 1\nwhile  n > k + (k-1)*(i-1):\n    i += 1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17585": {"id": 17585, "code": "s = \"1700\"\nbef = s[:2]\naft = s[2:]\nif 1 <= int(bef) <= 12:\n    if 1 <= int(aft) <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= int(aft) <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "16959": {"id": 16959, "code": "a = \"H\";b = \"H\"\nif a == b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "3028": {"id": 3028, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\ns = \"35753\"\nn=len(s)\nres=900\nfor i in range(n-2):\n    if abs(753-int(s[i:i+3]))<res:\n        res=abs(753-int(s[i:i+3]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1061": {"id": 1061, "code": "n = 750\nfor num in range(n, 1000):\n    if num % 111 == 0:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "5058": {"id": 5058, "code": "s = \"xyz\"\nt = 0\nfor i in range(1,len(s)-1):\n    t += 1\nprint(s[0] + str(t) + s[len(s)-1])", "coverage": [">", ">", ">", ">", ">"]}, "18019": {"id": 18019, "code": "s = \"0112\"\nmae = int(s[:2])\nato = int(s[2:])\nflag1 = 0\nflag2 = 0\nif 0<mae and mae<=12:\n    flag1 = 1\nif 0<ato and ato<=12:\n    flag2 = 1\nif flag1 == 1 and flag2 == 1:\n    print('AMBIGUOUS')\nelif flag1 == 1:\n    print('MMYY')\nelif flag2 == 1:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16158": {"id": 16158, "code": "_=int(\"5\")\na = [6, 9, 4, 2, 11]\na.sort()\nn=max(a)\na=a[:-1]\nrc=float('inf')\nrd=0\nr=0\nfor i in a:\n  if rc>abs(i-n/2):\n    r=i\n  rc=min(rc,abs(i-n/2))\nprint(n,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15140": {"id": 15140, "code": "n = 3;p = 0\nA = [1, 1, 1]\neven = 0\nodd = 0\nfor a in A:\n    if a % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nif odd == 0:\n    if p == 0:\n        ans = 2 ** n\n    else:\n        ans = 0\nelse:\n    ans = 2 ** (n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "3750": {"id": 3750, "code": "x = 12;y = 3;z = 1\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "19454": {"id": 19454, "code": "N = 999999999\nprint(N*2 if N&1 else N)", "coverage": [">", ">"]}, "15099": {"id": 15099, "code": "import math\nN = 2;P = 0\nA = [1, 3]\nevenL = []\noddL = []\nfor i in range(N):\n    if (A[i] % 2 == 0):\n        evenL.append(A[i])\n    else:\n        oddL.append(A[i])\neven = len(evenL)\nodd = len(oddL)\nsum_odd = 0\nnumL = []\nfor i in range(odd):\n    if ((i + 1) % 2 == 1):\n        numL.append(i + 1)\nfor i in numL:\n    sum_odd += (math.factorial(odd) //\n                math.factorial(odd - i) // math.factorial(i))\nnumevenL = []\nsum_even = 0\nfor i in range(odd):\n    if ((i + 1) % 2 == 0):\n        numevenL.append(i + 1)\nfor i in numevenL:\n    sum_even += ((math.factorial(odd) //\n                  math.factorial(odd - i) // math.factorial(i)))\nif (P % 2 == 1):\n    print(2 ** N - ((sum_even + 1) * (2 ** even)))\nelse:\n    print((sum_even + 1) * (2 ** even))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6516": {"id": 6516, "code": "from bisect import bisect_right, bisect_left\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor x in b:\n  ans += bisect_left(a, x) * (n - bisect_right(c, x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16401": {"id": 16401, "code": "n = 2\na = [100, 0]\na=sorted(a)\nb=a.pop(-1)\nmid=b/2\ndist=10**9\nfor i in range(n-1):\n    d=abs(mid-a[i])\n    if d <dist:\n        dist=d\n        ans=a[i]\nprint(b,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8947": {"id": 8947, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5432": {"id": 5432, "code": "import math\nn = 2\nprint(math.floor((n+1)/2))", "coverage": [">", ">", ">"]}, "7421": {"id": 7421, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\natack = sum(a)\ncan = h <= atack\nprint(\"Yes\" if can else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "139": {"id": 139, "code": "s = \"xyz\"\nK = 4\nN = len(s)\nS = [0 for _ in range(N)]\nfor i in range(N):\n    S[i] = ord(s[i])-97\ntmp = K\nans = ''\nfor i in range(N):\n    if S[i]==0:\n        ans += 'a'\n    elif 26-S[i] <= tmp:\n        ans += 'a'\n        tmp -= 26-S[i]\n    else:\n        ans += s[i]\nif tmp:\n    ans = ans[:-1]+chr((ord(ans[-1])-97+tmp)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", ">"]}, "16305": {"id": 16305, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\na.reverse()\nx=a[0]\ndiff=10**9\nfor i in range(1,n):\n  if abs(x-2*a[i])<diff:\n    y=a[i]\n    diff=abs(x-2*y)\nprint(x)\nprint(y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8522": {"id": 8522, "code": "n = 5\ncandy_map = []\ncandy_map.append(list(map(int, \"3 2 2 4 1\".split())))\ncandy_map.append(list(map(int, \"1 2 2 2 1\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7846": {"id": 7846, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nanswer = math.ceil((N - 1)/ (K - 1))\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "16064": {"id": 16064, "code": "a = 12;b = 4\nc = 2*b\nif a - c <= 0:\n  print(0)\nelse:\n  print(a - c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10407": {"id": 10407, "code": "a = 8;b = 12;k = 2\ni = min(a,b)\nans = 0\nwhile 1:\n  if not(a % i)  and not(b % i):\n    ans += 1\n  if ans == k:\n    break\n  i -= 1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13439": {"id": 13439, "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1, s2, s3)", "coverage": [">", ">"]}, "13654": {"id": 13654, "code": "import sys\nstdin=sys.stdin\nip=lambda: int(sp())\nlp = \"<function <lambda>>\"\nsp = \"<function <lambda>>\"\na = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+' '+b+' '+c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1162": {"id": 1162, "code": "n = 112\nans = 0\nif 100 <= n <= 111:\n  ans = 111\nelif 112 <= n <= 222:\n  ans = 222\nelif 223 <= n <= 333:\n  ans = 333\nelif 334 <= n <= 444:\n  ans = 444\nelif 445 <= n <= 555:\n  ans = 555\nelif 556 <= n <= 666:\n  ans = 666\nelif 667 <= n <= 777:\n  ans = 777\nelif 778 <= n <= 888:\n  ans = 888\nelif 889 <= n <= 999:\n  ans = 999\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "802": {"id": 802, "code": "K = 2\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\nelse:\n    i = 1\n    r = 7 % K\n    while(True):\n        if r == 0:\n            print(i)\n            break\n        r = (r * 10 + 7) % K\n        i += 1", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "1694": {"id": 1694, "code": "n = 10;a = 3;b = 5\nmin_num = max(0, a + b - n)\nmax_num = min(a, b)\nprint(*[max_num, min_num])", "coverage": [">", ">", ">", ">"]}, "4915": {"id": 4915, "code": "import math\na = \"internationalization\"\nprint(a[0]+str(len(a)-2)+a[-1])", "coverage": [">", ">", ">"]}, "12696": {"id": 12696, "code": "c=[3,5,7]\nX = 5\nprint(\"YES\") if X in c else print(\"NO\")", "coverage": [">", ">", ">"]}, "8576": {"id": 8576, "code": "import itertools\nN = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nmaxi = 0\nfor i in range(N):\n    if sum(A[0:i+1]) + sum(B[i:N]) > maxi:\n        maxi = sum(A[0:i+1]) + sum(B[i:N])\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3673": {"id": 3673, "code": "from sys import stdin\na = 20;b = 15\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18165": {"id": 18165, "code": "s = \"0112\"\ns_1 = int(s[0:2])\ns_2 = int(s[2:4])\nif (s_1>12 or s_1<1) and (s_2>12 or s_2<1):\n    print('NA')\nelif s_1<=12 and s_1>=1 and s_2<=12 and s_2>=1:\n    print('AMBIGUOUS')\nelif s_1<=12 and s_1>=1:\n    print('MMYY')\nelse:\n    print('YYMM')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "7124": {"id": 7124, "code": "import math\nh = 20;n = 3\nsum = 0\nli = [4, 5, 6]\nfor val in li:\n    sum += val\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2596": {"id": 2596, "code": "N1 = 1;N2 = 7;N3 = 9;N4 = 4\nN1, N2, N3, N4 = sorted([N1, N2, N3, N4])\nif [N1, N2, N3, N4] == [1, 4, 7, 9]:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "1780": {"id": 1780, "code": "N = 100;A = 100;B = 100\nif A+B > N:\n    mi = A+B -N\nelse:\n    mi = 0\nma =min([A,B])\nprint(ma,mi)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "15625": {"id": 15625, "code": "x = 13;y = 3;z = 1\ncount = 0\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">", ">"]}, "7470": {"id": 7470, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nA = sum(A)\nif H > A:\n    ans = \"No\"\nelse:\n    ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "2005": {"id": 2005, "code": "N = 100;A = 100;B = 100\nX = A if A < B else B\nY = 0 if N > A+B else A+B-N\nprint(\"{0} {1}\".format(X, Y))", "coverage": [">", ">", ">", ">"]}, "1966": {"id": 1966, "code": "N = 10;A = 3;B = 5\nprint(min(A,B),max(A+B-N,0))", "coverage": [">", ">"]}, "16309": {"id": 16309, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\nr = a.pop(0)\ns = r\ntemp = 0\nfor i in range(n-1):\n    if abs(r - 2*a[i]) < s:\n        s = abs(r - 2*a[i])\n        temp = a[i]\nprint(r, temp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2914": {"id": 2914, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"35753\"\nans = 753\nfor i in range(len(s) - 3):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10969": {"id": 10969, "code": "S = \"atcoder\"\nn = len(S)\ns1 = S[:(n-1)//2]\ns2 = S[(n+3)//2-1:]\nif S[::-1]==S and s1[::-1]==s1 and s2[::-1]==s2:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "5760": {"id": 5760, "code": "score = 100\nif score % 2 == 1:\n    print(int((score+1)/2))\nelse:\n    print(int(score/2))", "coverage": [">", ">", "!", "!", ">"]}, "9721": {"id": 9721, "code": "N = 3\nS = \"())\"\nSL = [0]\nfor i in range(N):\n    if S[i] == '(':\n        SL.append(SL[i] + 1)\n    else:\n        SL.append(SL[i] - 1)\nmi = min(SL)\nla = SL[-1]\nif mi < 0:\n    S = '(' * ((-1)*mi) + S\n    la -= mi\nif la >= 0:\n    S += ')' * la\nelse:\n    p = (-1)*la\n    S = '(' * p + S\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "4609": {"id": 4609, "code": "a = \"i\";b = ['n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o'];c = \"n\"\nprint(a,len(b),c,sep=\"\")", "coverage": [">", ">"]}, "19294": {"id": 19294, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nn = 12\nif n%2==1:\n    ans = 0\nelse:\n    tmp = 2\n    v2 = 0\n    while n//tmp>0:\n        v2 += n//tmp\n        tmp *= 2\n    v5 = 0\n    tmp = 5\n    nn = n//2\n    while nn//tmp>0:\n        v5 += nn//tmp\n        tmp *= 5\n    ans = min(v2, v5)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10481": {"id": 10481, "code": "a = 100;b = 50;k = 4\nfor i in reversed(range(1,min(a,b)+1)):\n  if a%i==0 and b%i==0 :\n    k=k-1\n  if k==0:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3959": {"id": 3959, "code": "X = 64145;Y = 123;Z = 456\nif (X-2*Z)%(Y+Z) >= Y:\n    print((X-2*Z)//(Y+Z)+1)\nelse:\n    print((X-2*Z)//(Y+Z))", "coverage": [">", ">", "!", "!", ">"]}, "604": {"id": 604, "code": "S = ['a']\nK = 25\nN=len(S)\nfor i in range(N):\n  k=(ord('z')-ord(S[i])+1)%26\n  if K>=k:\n    S[i]='a'\n    K-=k\nS[-1]=chr(ord(S[-1])+K%26)\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3587": {"id": 3587, "code": "n = 12;m = 4\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", "!", "!", ">"]}, "6689": {"id": 6689, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= h :\n    print(\"Yes\")\nelse : print(\"No\")", "coverage": [">", ">", ">", ">", "!"]}, "14534": {"id": 14534, "code": "N = 3;P = 0\nA = [1, 1, 1]\nans = [1,0]\nfor a in A:\n    if a%2:\n        ans[1],ans[0] = ans[1] + ans[0], ans[1] + ans[0]\n    else:\n        ans[0] = ans[0]*2\n        ans[1] = ans[1]*2\nprint(ans[P])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "9076": {"id": 9076, "code": "import itertools\na = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nl = [a, b, c, d, e]\nfor v in itertools.combinations(l, 2):\n    if abs(v[0]-v[1]) > k:\n        print(':(')\n        exit()\nprint('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1834": {"id": 1834, "code": "N = 10;A = 3;B = 5\nans1 = B if A>B else A\nans2 = A+B-N if A+B-N >= 0 else 0\nprint(\"{} {}\".format(ans1, ans2))", "coverage": [">", ">", ">", ">"]}, "2140": {"id": 2140, "code": "n = 10;a = 3;b = 5\nans_max=min(a,b)\nans_min=max(a+b-n,0)\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">"]}, "13521": {"id": 13521, "code": "word = \"haiku,atcoder,tasks\"\nnew_word = word.replace(',', ' ')\nprint(new_word)", "coverage": [">", ">", ">"]}, "12841": {"id": 12841, "code": "x = 6\nprint('YES' if x == 5 or abs(x-5) == 2 else 'NO')", "coverage": [">", ">"]}, "15377": {"id": 15377, "code": "x = 64146;y = 123;z = 456\nans, mod = divmod(x, y+z)\nif mod >= z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "19349": {"id": 19349, "code": "n = 999999999\nprint([2*n, n][n%2==0])", "coverage": [">", ">"]}, "386": {"id": 386, "code": "s = \"xyz\"\nk = 4\nloop = ord('z') + 1\nremaining = k\nans = []\nfor c in s:\n    if c == 'a':\n        ans.append(c)\n        continue\n    r = loop - ord(c)\n    if r <= remaining:\n        ans.append('a')\n        remaining -= r\n    else:\n        ans.append(c)\nif remaining > 0:\n    remaining %= 26\n    ans[-1] = chr(ord(ans[-1]) + remaining)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "10306": {"id": 10306, "code": "A = 8;B = 12;K = 2\nif A>=B:\n    A^=B\n    B^=A\n    A^=B\na=[]\nfor i in range(1,A+1):\n    if A%i==0 and B%i==0:\n        a.append(i)\nprint(a[-K])", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "3104": {"id": 3104, "code": "S = \"35753\"\nnumbs=len(S)\nnin=10**3\nfor i in range(numbs-2):\n    nin=min(nin,abs(753-int(S[i:i+3])))\nprint(nin)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17875": {"id": 17875, "code": "s = 112\ns1 = s // 100\ns2 = s % 100\nc = 0\nl = [\"NA\",\"YYMM\",\"MMYY\",\"AMBIGUOUS\"]\nif 1<=s2<=12:\n  c += 1\nif 1<=s1<=12:\n  c += 2\nprint(l[c])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11545": {"id": 11545, "code": "S = \"SAT\"\nA=[\"a\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"] \nprint(A.index(S))", "coverage": [">", ">", ">"]}, "14382": {"id": 14382, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nnum = 0\ncount = 1\nmode = 0\nwhile num < n - 1:\n    if a[num] == a[num + 1]:\n        num += 1\n    elif a[num] > a[num + 1]:\n        num += 1\n        if mode == -1:\n            pass\n        elif mode == 0:\n            mode = -1\n        else:\n            count += 1\n            mode = 0\n    else:\n        num += 1\n        if mode == 1:\n            pass\n        elif mode == 0:\n            mode = 1\n        else:\n            count += 1\n            mode = 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "15167": {"id": 15167, "code": "x = 100000;y = 1;z = 1\nx-=z\nans=x//(y+z)\nrem=x%(y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "16707": {"id": 16707, "code": "a = \"H\";b = \"H\"\nif (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\"):\n    ans=\"H\"\nelse:\n    ans=\"D\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3717": {"id": 3717, "code": "A = 12;B = 4\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", "!", ">"]}, "12233": {"id": 12233, "code": "S = \"atcoder\"\nS_list = list(S)\nN = len(S_list)\nno_flag = 0\nfor i in range(N//2):\n    if S_list[i] != S_list[N-i-1]:\n        no_flag = 1\nfor i in range(int((N-1)/2)//2):\n    if S_list[i] != S_list[(N-1)//2-i-1]:\n        no_flag = 1\nfor i in range((N-3)//2):\n    if S_list[(N+3)//2+i-1] != S_list[N-1-i]:\n        no_flag = 1\nif no_flag == 1:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "14863": {"id": 14863, "code": "n = 45;p = 1\nA = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]\nA0=A.count(0)\nA1=A.count(1)\nif p==1 and A1==0:\n    print(0)\nelif p==0 and A1==0:\n    print(2**A0)\nelse:\n    print((2**A0)*(2**A1)//2)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "4160": {"id": 4160, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint((H2-H1)*60 + (M2-M1) - K)", "coverage": [">", ">"]}, "1738": {"id": 1738, "code": "N = 100;A = 100;B = 100\nif(A>B):\n  ans1=B\n  ans2=max(0,A-(N-B))\nelse:\n  ans1=A\n  ans2=max(0,B-(N-A))\nprint(str(ans1)+\" \"+str(ans2))", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "7509": {"id": 7509, "code": "H = 10;N = 3\nattack = [4, 5, 6]\ntotal = sum(attack)\nif H - total <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15247": {"id": 15247, "code": "x = 13;y = 3;z = 1\nlength = x - 2*z\nc = 1\nwhile True:\n    if (y*c)+(z*(c-1)) > length:\n        break\n    c += 1\nprint(c-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6534": {"id": 6534, "code": "import bisect\nn = 3\na_list = [1, 1, 1]\nb_list = [2, 2, 2]\nc_list = [3, 3, 3]\na_list = sorted(a_list)\nb_list = sorted(b_list)\nc_list = sorted(c_list)\nans = 0\nfor b_i in b_list:\n    a_count_i = bisect.bisect_left(a_list,b_i)\n    c_count_i = len(c_list) - bisect.bisect_right(c_list,b_i)\n    ans += a_count_i * c_count_i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2947": {"id": 2947, "code": "S = \"35753\"\nans = 100000\ni = 0\nwhile i < len(S) - 2:\n    x = int(str(S[i]) + str(S[i + 1]) + str(S[i + 2]))\n    ans = min(ans, abs(753 - x))\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "315": {"id": 315, "code": "s = ['x', 'y', 'z']\nk = 4\nz = ord(\"z\")\na = ord(\"a\")\nfor i in range(len(s)-1):\n    if s[i] == \"a\":\n        continue\n    if z - ord(s[i]) + 1 <= k:\n        k -= z - ord(s[i]) + 1\n        s[i] = \"a\"\nif k > 0:\n    k = k%26\n    x = z - ord(s[-1]) +1\n    if k >= x:\n        k -= z - ord(s[-1]) + 1\n        s[-1] = chr(a + k)\n    else:\n        s[-1] = chr(ord(s[-1])+k)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16789": {"id": 16789, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    else:\n        print(\"D\")\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "1858": {"id": 1858, "code": "n = 10;a = 3;b = 5\nd = min(a,b)\nm = a+b-n\nif m < 0:\n    m = 0\nprint(\"{} {}\".format(d,m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "16787": {"id": 16787, "code": "lst = [1, 1]\nprint('H' if sum(lst)%2 == 0 else 'D')", "coverage": [">", ">"]}, "6612": {"id": 6612, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ns = 0\nfor b_ in b:\n    t = bisect.bisect_right(a, b_-1)\n    tt = len(c) - bisect.bisect_right(c, b_)\n    d = tt * t\n    s += d\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "640": {"id": 640, "code": "K = 2\nmod = 7\nfor i in range(K):\n    mod = mod % K\n    if(mod == 0):\n        print(i+1)\n        exit()\n    else:\n        mod *=10\n        mod += 7\nprint(\"-1\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "7262": {"id": 7262, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nans=0\nif sum(a)>=h:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13864": {"id": 13864, "code": "n = 9\na_l = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nis_plus = None\nsub = []\nfor i in a_l:\n    if len(sub) == 0:\n        sub.append(i)\n        continue\n    if i == sub[-1]:\n        sub.append(i)\n        continue\n    if is_plus is None:\n        if sub[-1] > i:\n            is_plus = False\n        else:\n            is_plus = True\n        sub.append(i)\n    elif is_plus is True:\n        if sub[-1] > i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\n    else:\n        if sub[-1] < i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "5588": {"id": 5588, "code": "n = 2\np = n % 2 + n // 2\nprint(p)", "coverage": [">", ">", ">"]}, "156": {"id": 156, "code": "s = \"a\"\nk = 25\nans = \"\"\nfor si in s:\n  if si == \"a\":\n    ans += \"a\"\n    continue\n  num = ord(\"z\") - ord(si) + 1\n  if num <= k:\n    ans += \"a\"\n    k -= num\n  else:\n    ans += si\nif k > 0:\n  num = k % 26\n  if ord(ans[-1]) + num <= ord(\"z\"):\n    new_c = chr(ord(ans[-1]) + num)\n  else:\n    num -= ord(\"z\") - ord(ans[-1])\n    new_c = chr(ord(\"a\") - 1 + num)\n  print(ans[:-1] + new_c)\nelse:\n  print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!"]}, "3317": {"id": 3317, "code": "a = 20;b = 15\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "16691": {"id": 16691, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    tcd = b\n    print(tcd)\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "17311": {"id": 17311, "code": "a = \"D\";b = \"H\"\nif (a==\"H\")&(b==\"H\"):\n    print(\"H\")\nelif (a==\"D\")&(b==\"H\"):\n    print(\"D\")\nelif (a==\"D\")&(b==\"D\"):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "5097": {"id": 5097, "code": "s = \"xyz\"\nprint(s[0] + '{}'.format(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "10912": {"id": 10912, "code": "S = \"level\"\nN = len(S)\nflag = True\nif S!=S[::-1]:\n    flag=False\nif S[:int((N-1)/2)]!=S[:int((N-1)/2)][::-1]:\n    flag=False\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "4279": {"id": 4279, "code": "h_1 = 10;m_1 = 0;h_2 = 15;m_2 = 0;k = 30\nminute_1 = h_1*60 + m_1\nminute_2 = h_2*60 + m_2\nans = minute_2 - k - minute_1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "12959": {"id": 12959, "code": "x = 6\nans=[\"NO\",\"YES\"][x==7 or x==5 or x==3]\nprint(ans)", "coverage": [">", ">", ">"]}, "6948": {"id": 6948, "code": "H = 20;N = 3\nA = [4, 5, 6]\nif sum(A) < H:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "8314": {"id": 8314, "code": "n, k = map(int, \"4 3\".split())\nprint((n-2)//(k-1) + 1)", "coverage": [">", ">"]}, "15435": {"id": 15435, "code": "x = 64145;y = 123;z = 456\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "13196": {"id": 13196, "code": "s_in = \"happy,newyear,enjoy\"\ns_out = s_in.replace(\",\", \" \", 2)\nprint(s_out)", "coverage": [">", ">", ">"]}, "7487": {"id": 7487, "code": "H = 20;N = 3\nA = [4, 5, 6]\na=sorted(A,reverse=True)\nfor i in a:\n  H-=i\n  if H<=0:\n    print(\"Yes\")\n    exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16792": {"id": 16792, "code": "a = \"D\";b = \"H\"\nif a=='H':\n  if b=='H': print('H')\n  else: print('D')\nelse:\n  if b=='H': print('D')\n  else: print('H')", "coverage": [">", ">", "!", "!", "!", ">", "!"]}, "1692": {"id": 1692, "code": "N = 10;A = 7;B = 5\nmx = min(A,B)\nmi = max(A+B-N,0)\nprint(str(mx) + \" \" + str(mi))", "coverage": [">", ">", ">", ">"]}, "3806": {"id": 3806, "code": "x = 64145;y = 123;z = 456\nw=y+z\nprint(x//w if x%w>=z else x//w-1)", "coverage": [">", ">", ">"]}, "450": {"id": 450, "code": "s = \"codefestival\"\nK = 100\nc = [ord(s1)-ord('a') for s1 in s]\nsl = list(s)\nfor i in range(len(s)):\n    if c[i] and 26-c[i] <= K:\n        sl[i] = 'a'\n        K -= 26-c[i]\nsl[len(s)-1] = chr((ord(sl[len(s)-1]) - ord('a') + K) % 26 + ord('a'))\nprint(''.join(sl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9704": {"id": 9704, "code": "N = 3\nS = \"())\"\na = 0\nb = 0\nfor i in S:\n    if i == \"(\":\n        a += 1\n    else:\n        if a <= 0:\n            b += 1\n        else:\n            a -= 1\nprint(\"(\"*b+S+\")\"*a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "8614": {"id": 8614, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10973": {"id": 10973, "code": "S = \"akasaka\"\nN = len(S)\nflag = [0,0,0]\nif S==\"\".join(reversed(list(S))):\n    flag[0]=1\nif S[:int((N-1)/2)]==\"\".join(reversed(list(S[:int((N-1)/2)]))):\n    flag[1]=1\nif S[int((N+3)/2)-1:]==\"\".join(reversed(list(S[int((N+3)/2)-1:]))):\n    flag[2]=1\nprint(\"Yes\" if flag==[1,1,1] else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7982": {"id": 7982, "code": "import math\nN = 8;K = 3\nA = \"7 3 1 8 4 6 2 5\"\nprint(math.ceil((N-K)/(K-1))+1)", "coverage": [">", ">", ">", ">"]}, "4785": {"id": 4785, "code": "moji = \"xyz\"\nprint(moji[0] + str(len(moji)-2) + moji[-1]) ", "coverage": [">", ">"]}, "749": {"id": 749, "code": "K = 101\nval = 7 % K\nans = -1\nfor i in range(1, 10**6):\n    if val == 0:\n        ans = i\n        break\n    val = (val * 10 + 7) % K\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15246": {"id": 15246, "code": "x = 64145;y = 123;z = 456\nhito=x//(y+z)\nif x%(y+z)<z:\n    hito -=1\n    print(hito)\nelse:\n    print(hito)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15679": {"id": 15679, "code": "X = 13;Y = 3;Z = 1\nwidth = X - 2 * Z\nif width < Y:\n  print(0)\n  exit()\nnum = (width - Y) // ( Y + Z)\nprint(num + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "651": {"id": 651, "code": "K = 101\nnum = 0\ncnt = 0\nans = -1\nfor i in range(K):\n    num = num*10 +7\n    cnt += 1\n    if num%K != 0:\n        num = num%K\n    else:\n        ans = cnt\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "12681": {"id": 12681, "code": "X = 6\nres = [3, 5, 7]\nprint('YES' if X in res else 'NO')", "coverage": [">", ">", ">"]}, "5371": {"id": 5371, "code": "a = 5\nres = 0\nif a%2 ==0:\n  res = int(a/2)\nelse:\n  a +=1\n  res = int(a/2)\nprint(res)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3225": {"id": 3225, "code": "A = \"12\";B = \"4\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "15343": {"id": 15343, "code": "X_all = 64146;Y_hito = 123;Z_interval = 456\nsyou = X_all // (Y_hito + Z_interval)\nif (syou * (Y_hito + Z_interval) + Z_interval <= X_all):\n    ans = syou\nelse:\n    ans = syou - 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "607": {"id": 607, "code": "s = \"a\"\nk = 25\nn = len(s)\nans = []\nfor i in range(n):\n    t = (ord('z') - ord(s[i]) + 1) % 26\n    if k - t >= 0:\n        ans.append('a')\n        k -= t\n    else:\n        ans.append(s[i])\nif k > 0:\n    k %= 26\n    ans[-1] = chr(ord(ans[-1]) + k)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "10844": {"id": 10844, "code": "import sys\nS = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nreverse_S = S[::-1]\nif S==reverse_S:\n    for i in range(int(len(S)/2)):\n        if S[i]==S[int(len(S)/2)-i-1] and S[int(len(S)/2)+1+i]==S[len(S)-1-i]:\n            continue\n        else:\n            print(\"No\")\n            sys.exit()\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11389": {"id": 11389, "code": "Array =  [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"] \nS = \"SUN\"\nprint(abs(Array.index(S)-7))", "coverage": [">", ">", ">"]}, "1305": {"id": 1305, "code": "N = 111\nX=set(str(N))\nY=len(X)\nif Y==1:\n  print(N)\nif Y!=1:\n  Z=0\n  for i in range(111,1000,111):\n    if N-i<0:\n      Z+=i\n      break\n  print(Z)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9672": {"id": 9672, "code": "N = 3\nS = \"())\"\ncnt1, cnt2 = 0, 0\nfor s in S:\n    if s == \"(\":\n        cnt1 += 1\n    if s == \")\" and cnt1 >= 1:\n        cnt1 -= 1\nfor s in reversed(S):\n    if s == \")\":\n        cnt2 += 1\n    if s == \"(\" and cnt2 >= 1:\n        cnt2 -= 1\nprint(\"(\"*cnt2 + S + \")\"*cnt1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12668": {"id": 12668, "code": "a = \"5\"\nprint(\"YES\" if a in \"753\" else \"NO\")", "coverage": [">", ">"]}, "5806": {"id": 5806, "code": "import math\nn = 5\npaper = math.ceil(n/2)\nprint(paper)", "coverage": [">", ">", ">", ">"]}, "17841": {"id": 17841, "code": "S = 1905\nflag = [0, 0] \nl = S // 100\nr = S % 100\nif 1<=r and r<=12:\n  flag[0] += 1\nif 1<=l and l<=12:\n  flag[1] += 1\nif flag == [0, 0]:\n  print('NA')\nelif flag == [0, 1]:\n  print('MMYY')\nelif flag == [1, 0]:\n  print('YYMM')\nelif flag == [1, 1]:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4299": {"id": 4299, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nT1 = H1 * 60 + M1\nT2 = H2 * 60 + M2\nif T2 < T1:\n  T2 = T2 + 24 * 60\nprint(T2-T1-K)", "coverage": [">", ">", ">", ">", "!", ">"]}, "6515": {"id": 6515, "code": "from bisect import bisect_right, bisect_left\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor x in b:\n  ans += bisect_left(a, x) * (n - bisect_right(c, x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "224": {"id": 224, "code": "s = ['x', 'y', 'z']\nk = 4\nnow = 0\nwhile k>0 and now<len(s):\n    if s[now]=='a':\n        now+=1\n        continue\n    tmp = ord('z')-ord(s[now])+1\n    if tmp<=k:\n        s[now] = 'a'\n        k -= tmp\n        now+=1\n    else:\n        now+=1\nif k>0:\n    s[-1] = chr(ord(s[-1])+k%26 )\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "3539": {"id": 3539, "code": "a = 20;b = 15\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "1868": {"id": 1868, "code": "N = 10;A = 7;B = 5\nd = N - (A + B)\nprint(min(A, B), -d if d < 0 else 0)", "coverage": [">", ">", ">"]}, "2697": {"id": 2697, "code": "s = {1, 4, 9, 7}\nif s==set([1,7,9,4]):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "15670": {"id": 15670, "code": "import math\nX = 12;Y = 3;Z = 1\nX -= Z\nprint(math.floor(X/(Y+Z)))", "coverage": [">", ">", ">", ">"]}, "8287": {"id": 8287, "code": "import math\nn = 4;k = 3\na = [2, 3, 1, 4]\nx=a.index(1)\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "1743": {"id": 1743, "code": "N = 10;A = 7;B = 5\nM = min(A, B)\nif A + B <= N:\n  m = 0\nelse:\n  m = A + B - N\nprint(M, m)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "14778": {"id": 14778, "code": "n = 1;p = 1\na = [50]\ncnt = [0] * 2\nfor num in a:\n    cnt[num % 2] += 1\nif cnt[1] == 0:\n    if p == 0:\n        print(2 ** n)\n    else:\n        print(0)\nelse:\n    print(2 ** ( n - 1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "18209": {"id": 18209, "code": "H = 2\nW = 100\nN = 200\nanswer = 0\nif H >= W:\n    answer = N // H\n    if N % H != 0:\n        answer += 1\nelse:\n    answer = N // W\n    if N % W != 0:\n        answer += 1\nprint(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">"]}, "14518": {"id": 14518, "code": "n = 1;p = 1\na = [50]\nflg_lst = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        flg_lst.append(True)\n    else:\n        flg_lst.append(False)\nif False in flg_lst:\n    print(2 ** (n - 1))\nelse:\n    if p == 0:\n        print(2 ** n)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">"]}, "19526": {"id": 19526, "code": "n = 10\nif n%2 !=0:\n    print(2*n)\nelse:\n    print(n)", "coverage": [">", ">", "!", "!", ">"]}, "15592": {"id": 15592, "code": "X = 12;Y = 3;Z = 1\nX -= Z\nprint(X // (Y + Z))", "coverage": [">", ">", ">"]}, "13775": {"id": 13775, "code": "from datetime import*\na = 10;b = 0;c = 15;d = 0;k = 30\nf=datetime\nprint((f(1,1,1,c,d)-f(1,1,1,a,b)).seconds//60-k)", "coverage": [">", ">", ">", ">"]}, "8905": {"id": 8905, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11971": {"id": 11971, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 !=m2:\n  print(1)\nelif m1==m2:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15785": {"id": 15785, "code": "x = 64146;y = 123;z = 456\ncount=1\nx -= 2*z+y\ncount += x //(y+z)\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "5051": {"id": 5051, "code": "s = \"smiles\"\nl = len(s)-2\ni = s[0] + str(l) + s[-1]\nprint(i)", "coverage": [">", ">", ">", ">"]}, "18228": {"id": 18228, "code": "h = 3\nw = 7\nn = 10\nif h < w:\n    if n % w == 0:\n        print(n // w)\n    else:\n        print(n // w + 1)\nelse:\n    if n % h == 0: \n        print(n // h)\n    else:\n        print(n // h + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "11164": {"id": 11164, "code": "s = \"atcoder\"\nans = 'Yes'\nfor i in range(len(s)//2):\n    if s[i] != s[-i-1]:\n        ans = 'No'\n        break\ns_s = s[:(len(s)-1)//2]\nfor i in range(len(s_s)//2):\n    if s_s[i] != s_s[-i-1]:\n        ans = 'No'\n        break\ns_e = s[(len(s)+3)//2 - 1:]\nfor i in range(len(s_e)//2):\n    if s_e[i] != s_e[-i-1]:\n        ans = 'No'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5545": {"id": 5545, "code": "n = 5\nprint(n-n//2)", "coverage": [">", ">"]}, "4305": {"id": 4305, "code": "h = 10;m = 0;h2 = 15;m2 = 0;k = 30\ng = h2 * 60 + m2\ns = h * 60 + m\nans = g - k - s\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "6611": {"id": 6611, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\ns = 0\nfor b_ in b:\n    t = bisect.bisect_right(a, b_-1)\n    tt = len(c) - bisect.bisect_right(c, b_)\n    d = tt * t\n    s += d\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18166": {"id": 18166, "code": "s = \"1700\"\ns_1 = int(s[0:2])\ns_2 = int(s[2:4])\nif (s_1>12 or s_1<1) and (s_2>12 or s_2<1):\n    print('NA')\nelif s_1<=12 and s_1>=1 and s_2<=12 and s_2>=1:\n    print('AMBIGUOUS')\nelif s_1<=12 and s_1>=1:\n    print('MMYY')\nelse:\n    print('YYMM')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "13433": {"id": 13433, "code": "l = \"happy\";m = \"newyear\";r = \"enjoy\"\nprint(l, m, r)", "coverage": [">", ">"]}, "6440": {"id": 6440, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nnumpattern = 0\nfor i in range(N):\n    numsmallerA = bisect.bisect_left(A,B[i])\n    numbiggerC = N - bisect.bisect_right(C,B[i])\n    numpattern += numsmallerA * numbiggerC\nprint(numpattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7938": {"id": 7938, "code": "nim = 3;mike = 3\narray = [1, 2, 3]\nprint((nim+mike-3)//(mike-1))", "coverage": [">", ">", ">"]}, "11339": {"id": 11339, "code": "s = \"SUN\"\ndic = {'SUN':7, 'MON':6, 'TUE':5, 'WED':4, 'THU':3, 'FRI':2, 'SAT':1}\nprint(dic[s])", "coverage": [">", ">", ">"]}, "15693": {"id": 15693, "code": "import math\nx = 64145;y = 123;z = 456\nif x%(y+z)>=z:\n  print(math.floor(x/(y+z)))\nelse:\n  print(math.floor(x/(y+z)-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "12066": {"id": 12066, "code": "M1 = 11\nM2 = 12\nif M1 == M2:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10015": {"id": 10015, "code": "from collections import deque\nN = 3\nS = \"())\"\nreserveL = deque()\nout = deque()\nq = deque()\nfor s in S:\n    if s == \"(\":\n        reserveL.append(s)\n        out.append(\"(\")\n    else:\n        if len(reserveL) == 0:\n            out.appendleft(\"(\")\n            out.append(\")\")\n        else:\n            out.append(\")\")\n            reserveL.popleft()\nwhile reserveL:\n    out.append(\")\")\n    reserveL.popleft()\nans = \"\"\nwhile out:\n    ans += out.popleft()\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "16118": {"id": 16118, "code": "a = [20, 30]\nprint(0 if a[0]-2*a[1]<=0 else a[0]-2*a[1])", "coverage": [">", ">"]}, "11033": {"id": 11033, "code": "S = \"level\"\nN=len(S)\nSH=S[:(N-1)//2]\nST=S[(N+3)//2-1:]\np=False\nif SH==SH[::-1] and SH==ST:\n  p=True\nprint(\"Yes\" if p else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "7467": {"id": 7467, "code": "H = 10;N = 3\nA = [4, 5, 6]\nA = sum(A)\nif H > A:\n    ans = \"No\"\nelse:\n    ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "12609": {"id": 12609, "code": "a = 1;b = 1;k = 1\nx=min(a,b)\nl=[]\nfor i in range(1,x+1):\n    if a%i==0 and b%i==0:\n        l.append(i)\ny=len(l)\nprint(l[y-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5520": {"id": 5520, "code": "page = 100\nprint(-(-page // 2))", "coverage": [">", ">"]}, "4": {"id": 4, "code": "S = \"a\"\nK = 25\nN = len(S)\nA = [0]*N\nans = \"\"\nfor i in range(N):\n  A[i] = (ord(\"z\") - ord(S[i]) + 1) % 26\n  if i != N-1:\n    if K >= A[i]:\n      K -= A[i]\n      ans += \"a\"\n    else:\n      ans += S[i]\n  else:\n    K = K % 26\n    s = ord(S[i]) + K\n    if s > ord(\"z\"):\n      s -= 26\n    ans += chr(s)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "1540": {"id": 1540, "code": "N = 750\nfor i in range(N,1000):\n  i = str(i)\n  if i[0] == i[1] and i[1] == i[2] and i[2] == i[0]:\n    ans = i\n    break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10516": {"id": 10516, "code": "a = 1;b = 1;k = 1\nc=min(a,b)\nd=max(a,b)\nans=[]\nfor i in range(c):\n    if c%(i+1)==0 and d%(i+1)==0:\n        ans.append(i+1)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5646": {"id": 5646, "code": "import math\nn = 100\nm = n//2\nif n % 2 == 0:\n    print(m)\nelse:\n    print(m+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "8405": {"id": 8405, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=[0]*N\ni=0\nwhile i<N:\n    ans[i]+=sum(A1[:i+1])\n    ans[i]+=sum(A2[i:])\n    i+=1\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4247": {"id": 4247, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\na = 60*H1 + M1\nb = 60*H2 + M2\nprint(b - a - K)", "coverage": [">", ">", ">", ">"]}, "14720": {"id": 14720, "code": "n = 2;p = 0\na = [1, 3]\nd={0:0,1:0}\nfor i in range(n):\n  d[a[i]%2]+=1\nq=2**d[0]\nans=0\nm=d[1]\nf=[1]\nfor i in range(1,m+1):\n  f+=[f[-1]*i]\nfor i in range(m+1):\n  if i%2!=p:continue\n  ans+=q*f[m]//f[i]//f[m-i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17964": {"id": 17964, "code": "S = \"1905\"\nf = int(S[:2])\nl = int(S[2:])\nif f==0 or f>12:\n  if l==0 or l>12:\n    print(\"NA\")\n  else:\n    print(\"YYMM\")\nelse:\n  if l==0 or l>12:\n    print(\"MMYY\")\n  else:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "16762": {"id": 16762, "code": "import sys\ninput = sys.stdin.readline\nA = \"D\";B = \"H\"\nd = {\"H\":0, \"D\":1}\nAns = [\"H\", \"D\"]\nprint(Ans[d[A]^d[B]])", "coverage": [">", ">", ">", ">", ">", ">"]}, "8213": {"id": 8213, "code": "n = 3;k = 3\na = [1, 2, 3]\nx=a.index(1)\nif n==k:\n    print(1)\nelse:\n    if (n-k)%(k-1)==0:\n        ans=1+(n-k)//(k-1)\n    else:\n        ans=1+(n-k)//(k-1)+1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "18139": {"id": 18139, "code": "S = \"1700\"\nmmyy=1<=int(S[:2])<=12\nyymm=1<=int(S[2:])<=12\nl=[['AMBIGUOUS','MMYY'],['YYMM','NA']]\nprint(l[not mmyy][not yymm])", "coverage": [">", ">", ">", ">", ">"]}, "3886": {"id": 3886, "code": "X = 13;Y = 3;Z = 1\nprint(1+(X-Y-2*Z)//(Y+Z))", "coverage": [">", ">"]}, "3863": {"id": 3863, "code": "x = 12;y = 3;z = 1\nres=x-z\nans=0\nwhile res>=y+z:\n    res-=(y+z)\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15543": {"id": 15543, "code": "x = 13;y = 3;z = 1\nx -= 2 * z\nprint(x // (y + z) + x % (y + z) // y)", "coverage": [">", ">", ">"]}, "7747": {"id": 7747, "code": "n = 8;k = 3\nl = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(-(-(n-1)//(k-1)))", "coverage": [">", ">", ">"]}, "15261": {"id": 15261, "code": "x = 13;y = 3;z = 1\ns = z\ncount = 0\nfor i in range(10**99):\n  s += y\n  if s <= x-z:\n    count += 1\n  elif s> x-z:\n    break\n  s+= z\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1077": {"id": 1077, "code": "n = ['1', '1', '1']\nif int(n[0])>int(n[1]):\n    ans = [n[0]]*3\nelif int(n[0])==int(n[1]) and int(n[1])>=int(n[2]):\n    ans = [n[0]]*3\nelse:\n    ans = [int(n[0])+1]*3\nprint(*ans,sep=\"\")", "coverage": [">", ">", "!", ">", ">", "!", "!", ">"]}, "12373": {"id": 12373, "code": "s = \"akasaka\"\ns = list(s)\ns1 = s[0:len(s)//2]\ns2 = s[len(s)//2+1:len(s)]\nif (\"\".join(s1) == \"\".join(s2)) :\n  print(\"Yes\")\nelse :    \n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "17879": {"id": 17879, "code": "s = \"1700\"\ns1=int(s[0]+s[1])\ns2=int(s[2]+s[3])\nif (0<s1<13)and(0<s2<13):\n    print(\"AMBIGUOUS\")\nelif (0<s1<13):\n    print(\"MMYY\")\nelif (0<s2<13):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17755": {"id": 17755, "code": "s = 112\na = s // 100\nb = s % 100\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n    print(\"MMYY\")\nelif 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12254": {"id": 12254, "code": "s = \"atcoder\"\nn = len(s)\nif s != s[::-1]:\n  print('No')\nelse:\n  s_1 = s[0:(n-1)//2]\n  s_2 = s[(n+1)//2:n]\n  if s_1 == s_1[::-1] and s_2 == s_2[::-1]:\n    print('Yes')\n  else:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "11786": {"id": 11786, "code": "x = ['11', '16']\ny = ['11', '17']\nif(x[0]!=y[0]):\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "7307": {"id": 7307, "code": "import sys\nH = 20;N = 3\ndata = [4, 5, 6]\nDATA = sorted(data, reverse=True)\ncount = 0\nfor i in range(N):\n  H = H - DATA[i]\n  if H <= 0:\n    print(\"Yes\")\n    sys.exit()\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "11236": {"id": 11236, "code": "n = \"SAT\"\nlis=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nans=7\nfor i in lis:\n    if n==i:\n        print(ans)\n        break\n    ans-=1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19104": {"id": 19104, "code": "N = 5\nans = 0\nif N%2 != 0:\n    print(ans)\nelse:\n    i = 1\n    while 1:\n        tmp = (5**i)*2\n        if tmp <= N:\n            ans += N//tmp\n            i += 1\n        else:\n            break\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "2967": {"id": 2967, "code": "s = \"1234567876\"\nanswer = 1000\nfor i in range(0,len(s)-2):\n\tif answer > abs(753 - int(s[i:i+3])):\n\t\tanswer = abs(753 - int(s[i:i+3]))\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5660": {"id": 5660, "code": "N = 2\nif N%2 == 0:\n    print(N//2)\nelif N%2 != 0:\n    print(N//2+1)", "coverage": [">", ">", ">", "!", "!"]}, "2029": {"id": 2029, "code": "n = 100;a = 100;b = 100\nq=min(a, b)\nw=max(0,a+b-n)\nprint(q,w)", "coverage": [">", ">", ">", ">"]}, "16519": {"id": 16519, "code": "n = 5\nA = [11, 9, 6, 4, 2]\nmx = A[0]; A = A[1:]\nmn = A[0]\nfor a in A[1:]:\n    if abs(mn-mx/2) > abs(a-mx/2):\n        mn = a\n    else:\n        break\nprint(mx, mn)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12967": {"id": 12967, "code": "x = 6\nif x == 7 or x == 5 or x == 3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "3593": {"id": 3593, "code": "a = 12;b = 4\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "9346": {"id": 9346, "code": "s = \"2017/01/07\"\nres = \"2018\"+s[4:len(s)]\nprint(res)", "coverage": [">", ">", ">"]}, "17607": {"id": 17607, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 0 < a and a<13:\n    if 0<b and b<13:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelif 0<b and b<13:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!"]}, "11618": {"id": 11618, "code": "s = \"SAT\"\nweek = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nans_dic = {k: v for k, v in zip(week, range(7, 0, -1))}\nprint(ans_dic[s])", "coverage": [">", ">", ">", ">"]}, "14252": {"id": 14252, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nbefore = a[0]\nok = \"\" \ncnt = 0\nfor i in range(1,n):\n  if ok == \"\":\n    if before < a[i]:\n      ok = True\n    elif before > a[i]:\n      ok = False\n  elif ok:\n    if before > a[i]:\n      cnt += 1\n      ok = \"\"\n  elif not ok:\n    if before < a[i]:\n      cnt += 1\n      ok = \"\"\n  before = a[i]\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "1378": {"id": 1378, "code": "n = 111\nfor i in range(9):\n    if n > 111*i and n <= 111*(i+1):\n        ans = 111*(i+1)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4410": {"id": 4410, "code": "import datetime\nh = 10;m = 0;eh = 12;em = 0;k = 120\nstart = h*60 + m\nend = eh*60 + em\nif end - start > k:\n    print(end - k - start)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12629": {"id": 12629, "code": "X = 6\nif (X == 3 or X == 5 or X == 7):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "8925": {"id": 8925, "code": "N = 5\nA=[0,0]\nA = [[3, 2, 2, 4, 1], 0]\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11378": {"id": 11378, "code": "S = \"SAT\"\nD=['SUN','MON','TUE','WED','THU','FRI','SAT']\nToday=D.index(S)\nprint(7-Today)", "coverage": [">", ">", ">", ">"]}, "18068": {"id": 18068, "code": "s = \"0112\"\nx = int(s[:2])\ny = int(s[2:])\nif 1 <= x <= 12 and 1 <= y <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= x <= 12:\n    print(\"MMYY\")\nelif 1 <= y <= 12:\n    print(\"YYMM\")\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "403": {"id": 403, "code": "S = \"codefestival\"\nK = 100\nV = []\nfor e in S:\n    V.append(ord(e)-97)\nfor i in range(len(S)):\n    if S[i] == 'a':\n        continue\n    if K < 26-V[i]:\n        pass\n    else:\n        K -= 26-V[i]\n        V[i] = 0\nV[-1] += K\nV[-1] %= 26\nV = [chr(e+97) for e in V]\nprint(\"\".join(V))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "10433": {"id": 10433, "code": "A = 8;B = 12;K = 2\nM = min(A, B)\ncnt = 0\nfor i in range(M):\n    if A%(M-i) == 0 and B%(M-i) == 0:\n        cnt += 1\n        if cnt == K:\n            print(M-i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12505": {"id": 12505, "code": "A = 8;B = 12;K = 2\nI = []\nif A < B:\n    C = A\nelse:\n    C = B\nfor i in range(1, C+1):\n    if (A % i == 0) & (B % i == 0):\n        I.append(i)\nprint(I[-K])", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14949": {"id": 14949, "code": "import math\nN = 1;P = 1\nA = [50]\ndiv = 0\nfor a in A:\n  if a % 2 == 1:\n    div += 1\nans = 0\nmlt = 2 ** (N-div)\nif P == 0:\n  for i in range(0, div+1, 2):\n    cmb = math.factorial(div) // (math.factorial(div-i) * math.factorial(i))\n    ans += cmb * mlt\nelse:\n  for i in range(1, div+1, 2):\n    cmb = math.factorial(div) // (math.factorial(div-i) * math.factorial(i))\n    ans += cmb * mlt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "13989": {"id": 13989, "code": "num = 6\nl = [1, 2, 3, 2, 2, 1]\ncount = 1\nvar = var2 = 0\nc = l[0]\nfor i in l[1:]:\n    if c < i:\n        var = 1\n    elif c > i:\n        var2 = 1\n    if var == 1 and var2 == 1:\n        count += 1\n        var = var2 = 0\n    c = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4139": {"id": 4139, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nT1, T2 = (H1 * 60 + M1), (H2 * 60 + M2)\nprint(\"{}\".format((T2 - K) - T1))", "coverage": [">", ">", ">"]}, "19189": {"id": 19189, "code": "N = 12\nif N%2 == 1:\n    print(0)\nelse:\n    cnt = 0\n    for i in range(1,N):\n        if N >= 2*(5**i):\n            cnt += N // (2*(5**i))\n        else:\n            break\n    print(cnt)        ", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "10659": {"id": 10659, "code": "a = 1;b = 1;k = 1\ncnt = 0\nnum = min(a, b) + 1\nwhile cnt < k:\n    num -= 1\n    if a % num == 0 and b % num == 0:\n        cnt += 1\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5159": {"id": 5159, "code": "s = \"smiles\"\nn = len(s)\nprint(str(s[0]) + str(n - 2) + str(s[n - 1]))", "coverage": [">", ">", ">"]}, "4475": {"id": 4475, "code": "s = \"smiles\"\nfirst = s[0]\nend = s[-1]\nstrCount = len(s)-2\nprint('{}{}{}'.format(first, strCount, end))", "coverage": [">", ">", ">", ">", ">"]}, "16719": {"id": 16719, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        print('H')\n    elif b == 'D':\n        print('D')\nelif a == 'D':\n    if b == 'H':\n        print('D')\n    elif b == 'D':\n        print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "6379": {"id": 6379, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nfrom bisect import*\nans=0\nfor b in B:\n    x=bisect_left(A,b)\n    y=N-bisect_right(C,b)\n    ans+=x*y\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18968": {"id": 18968, "code": "import sys\nN = 5\nif N % 2 == 0:\n    k = N // 2\n    tmp = 5\n    ans = 0\n    while k >= tmp:\n        ans += k // tmp\n        tmp *= 5\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "9935": {"id": 9935, "code": "N = 8\nS = \"))))((((\"\nres = \"\"\nst = []\nfor s in S:\n    if s == \"(\":\n        st.append(\"(\")\n        res += \"(\"\n    else:\n        if st:\n            st.pop()\n            res += \")\"\n        else:\n            res = \"(\" + res + \")\"\nprint(res + \")\" * len(st))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">"]}, "17501": {"id": 17501, "code": "S = \"1700\"\nflagA = False\nflagB = False\nif 1 <= int(S[2:4])<= 12:\n  flagB = True\nif 1 <= int(S[0:2])<= 12:\n  flagA = True\nif flagA and flagB:\n  print(\"AMBIGUOUS\")\nelif flagA and not flagB:\n  print(\"MMYY\")\nelif flagB and not flagA:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12955": {"id": 12955, "code": "x = 6\nif x == 7 or x == 5 or x == 3: print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", ">"]}, "7376": {"id": 7376, "code": "total = 211;n = 5\nl1 = [31, 41, 59, 26, 53]\ns=sum(l1)\nif(total==s or (total-s)<=0 ):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5909": {"id": 5909, "code": "n = 2\ndiv, mod = divmod(n, 2)\nprint(div+mod)", "coverage": [">", ">", ">"]}, "7017": {"id": 7017, "code": "h = 210;n = 5\nsum = 0\nfor i in list(map(int, \"31 41 59 26 53\".split())):\n    sum += i\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11716": {"id": 11716, "code": "S = \"SAT\"\nday = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(len(day)):\n  if S == day[i]:\n    print(7-i)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "15666": {"id": 15666, "code": "X = 100000;Y = 1;Z = 1\na = Y+Z\nX=X-Z\nres = X//a\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "7903": {"id": 7903, "code": "import math\nn = 3;k = 3\nA = \"1 2 3\"\nprint(math.ceil((n-1) / (k-1)))", "coverage": [">", ">", ">", ">"]}, "2028": {"id": 2028, "code": "n = 10;a = 7;b = 5\nq=min(a, b)\nw=max(0,a+b-n)\nprint(q,w)", "coverage": [">", ">", ">", ">"]}, "14786": {"id": 14786, "code": "n = 2;p = 0\na = [1, 3]\nif all([i%2 == 0 for i in a]):\n  if p == 1:\n    print(0)\n  else:\n    print(pow(2,n))\nelse:\n  print(pow(2,n-1))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "7436": {"id": 7436, "code": "H = 20;N = 3\nspecial_move = [4, 5, 6]\nif H <= sum(special_move):\n    result = 'Yes'\nelse:\n    result = 'No'\nprint(result)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1138": {"id": 1138, "code": "str_n = \"112\"\ntemp = int(str_n[0])\ntemp = 111*temp\nint_n = int(str_n)\nif int_n > temp:\n  temp = int(str_n[0])\n  temp = temp+1\n  print(111*temp)\nelse:\n  temp = int(str_n[0])\n  print(111*temp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!"]}, "18047": {"id": 18047, "code": "S = \"0112\"\na=1<=int(S[:2])<=12\nb=1<=int(S[-2:])<=12\nif a & b: print('AMBIGUOUS')\nelif a:   print('MMYY')\nelif b:   print('YYMM')\nelse:     print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "7778": {"id": 7778, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\ng=1\nwhile k+(k-1)*(g-1)< n:\n  g+=1\nprint(g)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15337": {"id": 15337, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nx = 100000;y = 1;z = 1\nq = x // (y + z)\nr = x % (y + z)\nans = q if z <= r else q - 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9442": {"id": 9442, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3] = \"8\"\nprint(\"\".join(s))", "coverage": [">", ">", ">"]}, "16585": {"id": 16585, "code": "s = \"D H\"\nt=s.split(' ')\nif t[0]==t[1]:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!", ">"]}, "9485": {"id": 9485, "code": "S = \"2017/01/31\"\nprint('2018/01/'+S[-2:])", "coverage": [">", ">"]}, "2182": {"id": 2182, "code": "N = 10;A = 3;B = 5\nmax_ans = min(A,B)\ntmp = A + B - N\nmin_ans = 0 if tmp<=0 else tmp\nprint(max_ans, min_ans)", "coverage": [">", ">", ">", ">", ">"]}, "19056": {"id": 19056, "code": "n = 12\nif n&1:\n  print(0)\nelse:\n  i = 1\n  c = 0\n  n=n//2\n  while True:\n    t = n//(5**i)\n    if t==0:\n      break\n    c+=t\n    i+=1\n  print(c)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14416": {"id": 14416, "code": "N = 9\nAs = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before < As[i]:\n        if zoka == 0 or zoka == 1:\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\n    elif before > As[i]:\n        if zoka == 0 or zoka == 2:\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6683": {"id": 6683, "code": "H = 10;M = 3\nA = [4, 5, 6]\na = (sum(A))\nif a >= H:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "10687": {"id": 10687, "code": "A = 1;B = 1;K = 1\ncount=0\ni=min(A,B)+1\nwhile count<K:\n    i-=1\n    if A%i==0 and B%i==0:\n        count+=1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14442": {"id": 14442, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nincrease = False\ndecrease = False\nfor i in range(1,N):\n    if A[i-1] == A[i]:\n        continue\n    elif increase and A[i-1] < A[i]:\n        continue\n    elif decrease and A[i-1] > A[i]:\n        continue\n    elif not increase and not decrease and A[i-1] < A[i]:\n        increase = True\n    elif not increase and not decrease and A[i-1] > A[i]:\n        decrease = True\n    else:\n        count += 1\n        increase = False\n        decrease = False\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "17565": {"id": 17565, "code": "a = 1905\nl=a/100\nr=a%100\nif 1<=l and l<=12:\n    if 1<=r and  r<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=r and r<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "1093": {"id": 1093, "code": "S = \"750\"\nif int(S[0]) >= int(S[1]) and int(S[0]) >= int(S[2]):\n    print(S[0]*3)\nelse:\n    print(str(int(S[0])+1)*3)", "coverage": [">", ">", ">", "!", "!"]}, "16054": {"id": 16054, "code": "a = 20;b = 30\nn = max([a - 2 * b, 0])\nprint(n)", "coverage": [">", ">", ">"]}, "3064": {"id": 3064, "code": "S = \"1234567876\"\nnum_len = 999\nfor i in range(len(S)-2):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16606": {"id": 16606, "code": "a = \"D\";b = \"H\"\nprint(\"DH\"[a==b])", "coverage": [">", ">"]}, "2662": {"id": 2662, "code": "if sorted(list(map(int,\"1 2 9 1\".split())))==[1,4,7,9]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", "!", "!", ">"]}, "598": {"id": 598, "code": "s = \"a\"\nk = 25\nf = lambda x: (ord('a') - ord(x))%26\nans = ''\nfor c in s:\n    if k>=f(c):\n        ans += 'a'\n        k -= f(c)\n    else:\n        ans += c\nans = ans[:-1] + chr(ord('a') + (ord(ans[-1])-ord('a')+k)%26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "7988": {"id": 7988, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\ncount=1\nn=n-k\nwhile(n>0):\n    n=n-(k-1)\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2954": {"id": 2954, "code": "a = \"1111111111\"\nla = len(a)\nres = 753\nfor i in range(la-2):\n    temp = a[i:i+3]\n    tempp = abs(int(temp)-753)\n    res = min(res,tempp)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17208": {"id": 17208, "code": "atcodeer = \"H\";topcodeer = \"H\"\nif atcodeer == 'H' and topcodeer == 'H':\n    print('H')\nelif atcodeer == 'H' and topcodeer == 'D':\n    print('D')\nelif atcodeer == 'D' and topcodeer == 'H':\n    print('D')\nelif atcodeer == 'D' and topcodeer == 'D':\n    print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16087": {"id": 16087, "code": "a = 20;b = 15\ni = a - b * 2\nif i <= 0:\n    print('0')\nelse:\n    print(i)", "coverage": [">", ">", ">", ">", "!", "!"]}, "560": {"id": 560, "code": "from sys import stdin\nimport string\ns = \"xyz\"\nK = 4\nalp = string.ascii_lowercase*3\nans = \"\"\nfor i in s:\n    ind = alp.index(i)\n    cnt = 0\n    if i == \"a\":\n        ans += \"a\"\n        continue\n    for j in alp[ind+1:]:\n        cnt += 1\n        if K - cnt < 0:\n            ans += i\n            cnt = 0\n            break\n        if j == \"a\":\n            ans += \"a\"\n            K = K - cnt\n            cnt = 0\n            break\nif K != 0:\n    ind = (K % 26) + alp.index(ans[-1])\n    ans = ans[:-1]+alp[ind]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6195": {"id": 6195, "code": "from bisect import bisect_right,bisect_left\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor b in B:\n    a_index=bisect_left(A,b)\n    c_index=bisect_right(C,b)\n    ans +=a_index*(n-c_index)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5301": {"id": 5301, "code": "n = 100\nmin = 0\nif n%2 == 0:\n  min = n/2\nelse:\n  min = n//2 + 1\nprint(int(min))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2149": {"id": 2149, "code": "N = 10;A = 3;B = 5\nans_max = min(A, B)\nans_min = max(-(N - A - B), 0)\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">"]}, "11636": {"id": 11636, "code": "a = \"SAT\"\nmy_list = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nif a == \"SUN\":\n    print(7)\nfor i in range(0, (len(my_list)-1)):\n    if a == my_list[i]:\n        print(6-i)", "coverage": [">", ">", ">", "!", ">", ">", ">"]}, "16082": {"id": 16082, "code": "A = \"12\";B = \"4\"\nA=int(A)\nB=int(B)\nif A-2*B>=0:\n  print(A-2*B)\nelif A-2*B<0:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16177": {"id": 16177, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA_max = max(A)\nA.remove(A_max)\nX = [abs(a-(A_max//2)) for a in A]\nX_min_id = X.index(min(X))\nprint(A_max,A[X_min_id])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "675": {"id": 675, "code": "k = 101\nk *= 9\namari = 63\nfor i in range(1, 10 ** 6 + 1):\n  amari %= k\n  if amari == 0:\n    print(i)\n    break\n  else:\n    amari = amari * 10 + 63\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!"]}, "9788": {"id": 9788, "code": "from collections import deque\nN = 6\nclosings = [')', ')', ')', '(', ')', ')']\nr_cnt = l_cnt = 0\nfor closing in closings:\n  if closing == ')':\n    if l_cnt > 0:\n      l_cnt -= 1\n    else:\n      r_cnt += 1\n  else:\n    l_cnt += 1\nanswer = ['(' for _ in range(r_cnt)] + closings + [')' for _ in range(l_cnt)] \nprint(''.join(answer))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "614": {"id": 614, "code": "alp = \"abcdefghijklmnopqrstuvwxyz\"\ns = \"codefestival\"\nK = 100\nN = len(s)\nT = \"\"\nfor i in range(N):\n    n = alp.index(s[i])\n    if i==N-1:\n        T+=alp[(n+K)%26]\n    else:\n        if n!=0 and K>=26-n:\n            T+=\"a\"\n            K-=(26-n)\n        else:T+=alp[n]\nprint(T)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "535": {"id": 535, "code": "s = ['x', 'y', 'z']\nk = 4\ncnt = 0\nans = ''\nfor i in range(len(s)):\n    cnt = (ord('z') - ord(s[i]) + 1) % 26\n    if cnt <= k:\n        k -= cnt\n        s[i] = 'a'\ns[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6273": {"id": 6273, "code": "import bisect\nimport sys\ninput = sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt = 0\na.sort()\nc.sort()\nfor i in range(n):\n    cnt += (bisect.bisect_left(a, b[i])) * (n-bisect.bisect_right(c, b[i]))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "901": {"id": 901, "code": "K = 2\nai_1 = 0\nfor i in range(K):\n    ai = (10*ai_1 + 7)%K\n    if ai==0:\n        print(i+1)\n        exit()\n    ai_1 = ai\nprint(\"-1\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10801": {"id": 10801, "code": "S = \"atcoder\"\ni=0\nkot=[]\nfor a in S:\n    kot.append(a)\ntok=list(reversed(kot))\nfor a in range(len(kot)):\n    if kot[a]==tok[a]:\n        i=0\n    else:\n        print(\"No\")\n        i=1\n        break\nif i==0:\n    for a in range(int((len(kot)-1)/2)):\n        if kot[a]==tok[int((len(kot)-1)/2)-a-1]:\n            i=0\n        else:\n            print(\"No\")\n            i=1\n            break\nif i==0:\n        for a in range(int((len(kot)-1)/2)):\n            if kot[int((len(kot)+3)/2)+a-1]==tok[-a-1]:\n                i=0\n            else:\n                print(\"No\")\n                i=1\n                break\nif i==0:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!"]}, "14011": {"id": 14011, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt, t = 0, 0\nfor i in range(1,n):\n    if a[i] == a[i - 1] and t == 0:\n        continue\n    elif a[i] >= a[i - 1] and t >= 0:\n        t = 1\n    elif a[i] <= a[i - 1] and t <= 0:\n        t = -1\n    else:\n        cnt += 1\n        t = 0\nelse:\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "7777": {"id": 7777, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ni=A.index(1)+1\nif i<=K or i>=N-K:\n    ans=(N-K)//(K-1)+1 if (N-K)%(K-1)==0 else (N-K)//(K-1)+2\nelse:\n    for a in range(K):\n        if (i-a)%(K-1)==0 and (N-(i+(K-a)))%(K-1)==0:\n            b=0\n        else:\n            b=1\n    front=i//(K-1)\n    back=(N-(i+K))//(K-1)\n    ans=front+back+1+b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "4916": {"id": 4916, "code": "import math\na = \"smiles\"\nprint(a[0]+str(len(a)-2)+a[-1])", "coverage": [">", ">", ">"]}, "7148": {"id": 7148, "code": "h = 211;a = 5\nl = [31, 41, 59, 26, 53]\nif h - sum(l) <= 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "545": {"id": 545, "code": "s = ['x', 'y', 'z']\nk = 4\nabc = \"abcdefghijklmnopqrstuvwxyz\"\nc = 0\nfor e,i in enumerate(s):\n    if k-26+abc.index(i)>=0 and i!='a':\n        s[e] = 'a'\n        k-=26-abc.index(i)\nk+=abc.index(s[-1])\nk%=26\ns[-1] = abc[k]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15280": {"id": 15280, "code": "X = 64146;Y = 123;Z = 456\nprint((X-Z) // (Y + Z))", "coverage": [">", ">"]}, "9239": {"id": 9239, "code": "input_ = \"2017/01/31\"\ndd = input_[-2:]\nprint('2018/01/' + dd)", "coverage": [">", ">", ">"]}, "10211": {"id": 10211, "code": "n = 3\ns = ['(', ')', ')']\ncnt=0\nright=0\nleft=0\nfor i in range(len(s)):\n    if s[i] == '(':\n        cnt+=1\n    else:\n        cnt-=1\n    if cnt < 0:\n        right+=1\n        cnt=0\nif cnt>0:\n    left=cnt\nfor i in range(right):\n    s.insert(0,'(')\nfor i in range(left):\n    s.append(')')\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "4117": {"id": 4117, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;K = 120\nprint(((abs(h1-h2)*60)-(m1-m2)) - K)", "coverage": [">", ">"]}, "10910": {"id": 10910, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn = len(s)\na = int((n-1)/2)\nb = int((n+3)/2)\nfor i in range(a):\n  if s[i] != s[n-1-i]:\n    print(\"No\")\n    exit()\nfor i in range(a):\n  if s[i] != s[a-1-i]:\n    print(\"No\")\n    exit()\nfor i in range(a):\n  if s[b+i-1] != s[n-1-i]:\n    print(\"No\")\n    exit()\nprint(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "19103": {"id": 19103, "code": "N = 12\nans = 0\nif N%2 != 0:\n    print(ans)\nelse:\n    i = 1\n    while 1:\n        tmp = (5**i)*2\n        if tmp <= N:\n            ans += N//tmp\n            i += 1\n        else:\n            break\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5381": {"id": 5381, "code": "n = 2\nif n%2==0:\n  print(int(n*0.5))\nelse:\n  print(int(0.5*n)+1)", "coverage": [">", ">", ">", "!", "!"]}, "8880": {"id": 8880, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "6780": {"id": 6780, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes') if sum(a)>=h else print('No')", "coverage": [">", ">", ">"]}, "9292": {"id": 9292, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3] = \"8\"\nprint(''.join(S))", "coverage": [">", ">", ">"]}, "17392": {"id": 17392, "code": "S = 112\na = S//100\nb = S%100\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12 and (b>12 or b==0):\n    print('MMYY')\nelif (a==0 or a>12) and 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2440": {"id": 2440, "code": "if __name__ == '__main__':\n    n = 4;m = 3\n    eve = (n*(n-1)) // 2\n    odd = (m*(m-1)) // 2\n    print(eve+odd)", "coverage": [">", ">", ">", ">", ">"]}, "10613": {"id": 10613, "code": "a = 8;b = 12;k = 2\nMin=min(a,b)\nl=[]\nfor i in range(Min,0,-1):\n  if a%i==0 and b%i==0:\n    l.append(i)\nprint(l[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4048": {"id": 4048, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nh = c-a\nm = d-b\nif m < 0 :\n    h = h-1\n    m = 60 + m\nprint(h * 60 + m - e)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "523": {"id": 523, "code": "s = \"codefestival\"\nn=len(s)\na=[ord(i)-ord('a') for i in s]\nk = 100\nfor i in range(n):\n    if a[i]+k>=26 and a[i]>0:\n        k-=26-a[i]\n        a[i]=0\nk%=26\na[-1]+=k\na=[chr(i + ord('a')) for i in a]\nprint(*a,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12196": {"id": 12196, "code": "import sys\ninput = sys.stdin.readline\nM1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif(M1+1==M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", ">", ">", "!"]}, "13615": {"id": 13615, "code": "a = \"abcde,fghihgf,edcba\"\nA = a.replace(\",\",\" \")\nprint(A)", "coverage": [">", ">", ">"]}, "791": {"id": 791, "code": "k = 2\nnum = 0\nif not k%2:\n    print(-1)\nelse:\n    for i in range(k):\n        num = (num*10+7)%k\n        if num == 0:\n            print(i+1)\n            break\n    else:\n        print(-1)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "13786": {"id": 13786, "code": "import math\nh_one = 10;m_one = 0;h_two = 12;m_two = 0;k = 120\nhour = h_two - (h_one + 1)\nminute = (60 - m_one) + m_two\nprint(60*hour + minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "4711": {"id": 4711, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(\"\".join([s[0]] + [str(len(s[1:-1]))] + [s[-1]]))", "coverage": [">", ">"]}, "11595": {"id": 11595, "code": "S = \"SUN\"\nW=['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(len(W)):\n  if S==W[i]:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "14963": {"id": 14963, "code": "import math\nn = 3;p = 0\nc=0\nfor m in map(int,\"1 1 1\".split()):\n  if m%2==0:c+=1\nd=2**(c)\ne=0\nfor i in range(p,n-c+1,2):\n  k=math.factorial(n-c) // (math.factorial(n-c - i) * math.factorial(i))\n  k=max(k,1)\n  e+=k\nprint(d*e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12546": {"id": 12546, "code": "from math import gcd\na = 1;b = 1;k = 1\ng = gcd(a, b)\nl = []\ni = 1\nwhile i * i <= g:\n    if g % i == 0:\n        l.append(i)\n        if i != g // i:\n            l.append(g // i)\n    i += 1\nl.sort()\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "94": {"id": 94, "code": "s = ['x', 'y', 'z']\nk = 4\nn = len(s)\nfor i in range(n):\n    if s[i]=='a':continue\n    d = ord('z')-ord(s[i])+1\n    if d<=k:\n        s[i] = 'a'\n        k -= d\nx = (ord(s[-1])-ord('a')+k)%26\ns[-1] = chr(ord('a')+x)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4817": {"id": 4817, "code": "S = \"smiles\"\nl = int(len(S))\ns1 = S[0]\ns2 = S[-1]\nL = int(l-2)\nprint(s1 + str(L) + s2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17520": {"id": 17520, "code": "s = \"1905\"\nym=True if 0 < int(s[2:]) < 13 else False\nmy=True if 0 < int(s[:2]) < 13 else False\nif my and ym:\n  print('AMBIGUOUS')\nelif my:\n  print('MMYY')\nelif ym:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "1111": {"id": 1111, "code": "N = 112\ni = N // 111\nif N%111 != 0:\n    i += 1\nprint(i*111)", "coverage": [">", ">", ">", ">", ">"]}, "16892": {"id": 16892, "code": "s = ['D', 'D']\na=s[0]\nb=s[1]\nif (a=='H')^(b=='H'):\n    print('D')\nelse:\n    print('H')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12912": {"id": 12912, "code": "N = \"5\"\nN_List = [\"3\",\"5\",\"7\"]\nif N in N_List:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "557": {"id": 557, "code": "s = \"xyz\"\nk = 4\nl = [(26 - (ord(c) - ord('a'))) % 26 for c in s]\nfor i in range(len(s) - 1):\n    if k >= l[i]:\n        k -= l[i]\n        s = s[:i] + 'a' + s[i + 1 :]\nk %= 26\ns = s[:-1] + chr(ord('a') + (ord(s[-1]) - ord('a') + k) % 26)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8166": {"id": 8166, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nif n<=k:\n  print(1)\n  exit()\nn=n-k\nif n%(k-1)==0:\n  print(1+n//(k-1))\nelse:\n  print(1+n//(k-1)+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "1420": {"id": 1420, "code": "n = 750\nwhile(1):\n  a=str(n)\n  if a.count(a[0])==3:\n    break\n  n+=1\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8158": {"id": 8158, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nt = A.index(1)\nans = 10 ** 7\nfor i in range(K):\n    pre = max(t + i, 0)\n    tail = max(N - 1 - t - i, 0)\n    unit = K - 1\n    pre_unit = -(-pre // unit)\n    tail_unit = -(-tail // unit)\n    ans = min(ans, pre_unit + tail_unit)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5043": {"id": 5043, "code": "s = \"xyz\"\napple = []\nfor i in s:\n    apple.append(i)\na = apple.pop(0)\nb = apple.pop(-1)\nc = str(len(apple))\nd = a + c + b\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18619": {"id": 18619, "code": "h = 2\nw = 100\nn = 200\nif n % max(h,w) == 0:\n  print(n // max(h,w))\nelse:\n  print(n // max(h,w) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12990": {"id": 12990, "code": "n = 5\nprint(\"YES\" if n in (3,5,7) else \"NO\")", "coverage": [">", ">"]}, "10367": {"id": 10367, "code": "a = 100;b = 50;k = 4\nc=[i for i in range(100,0,-1) if a%i==0 and b%i==0]\nprint(c[k-1])", "coverage": [">", ">", ">"]}, "6427": {"id": 6427, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nd = 0\ne = 0\nans = 0\nfor i in b:\n    while i > a[min(d,n-1)] and d <= n-1:\n        d += 1\n    while i >= c[min(e,n-1)] and e < n:\n        e += 1\n    ans += d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13880": {"id": 13880, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nnow = False\ncount = 1\nfor i in range(N-1):\n    if A[i] < A[i+1]:\n        if now == 1:\n            pass\n        elif now == -1:\n            count += 1\n            now = False\n        else:\n            now = 1\n    elif A[i] > A[i+1]:\n        if now == 1:\n            count += 1\n            now = False\n        elif now == -1:\n            pass\n        else:\n            now = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6858": {"id": 6858, "code": "h = 20;n = 3\na = [4, 5, 6]\nx = sum(a)\nif (h - x) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15716": {"id": 15716, "code": "a = 64146;b = 123;c = 456\nprint((a-b-2*c)//(b+c)+1)", "coverage": [">", ">"]}, "11934": {"id": 11934, "code": "day0 = 16\nday1 = 17\nif day0 > day1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4078": {"id": 4078, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ntime1 = h1 * 60 + m1\ntime2 = h2 * 60 + m2\nprint(max(time2 - k - time1, 0))", "coverage": [">", ">", ">", ">"]}, "18462": {"id": 18462, "code": "H = 14\nW = 12\nN = 112\nans = n = 0\nwhile n < N:\n    if H<W:\n        n += W\n        H -= 1\n    else:\n        n += H\n        W -= 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "2369": {"id": 2369, "code": "n = 2;m = 1\nans = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "3091": {"id": 3091, "code": "s = \"1234567876\"\nn = len(s)\nm = 1000\nfor i in range(n-2):\n    m = min(m, abs(753 - int(s[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6312": {"id": 6312, "code": "import bisect\nfrom sys import stdin\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n  ans += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "306": {"id": 306, "code": "s = \"codefestival\"\nK = 100\nans=''\nfor c in s:\n    if c!='a' and ord('z')+1-ord(c)<=K:\n        ans+='a'\n        K-=ord('z')+1-ord(c)\n    else:\n        ans+=c\nif K>0:\n    ans=ans[:-1]+chr(ord(ans[-1])+K%26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4748": {"id": 4748, "code": "s = \"smiles\"\ns = list(s)\np = str(len(s) - 2)\nprint(s[0]+p+s[-1])", "coverage": [">", ">", ">", ">"]}, "5879": {"id": 5879, "code": "N = 2\nprint(-(-N // 2))", "coverage": [">", ">"]}, "1008": {"id": 1008, "code": "n = 111\nt = 0\nwhile t*111 < n  and n > (t+1)*111:\n    t += 1\nprint((t+1)*111)", "coverage": [">", ">", ">", "!", ">"]}, "15414": {"id": 15414, "code": "import math\nx = 64145;y = 123;z = 456\nt = (x-z)/(y+z)\nprint(math.floor(t))", "coverage": [">", ">", ">", ">"]}, "18766": {"id": 18766, "code": "H = 3\nW = 7\nN = 10\nimport math\nm = max(H,W)\nprint(math.ceil(N/m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "1208": {"id": 1208, "code": "n = 111\nm = list(str(n))\nif m[0] == m[1] == m[2]:\n    print(n)\nelse:\n    for i in range(1, 10):\n        if n<=i*111:\n            print(i*111)\n            break", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "7478": {"id": 7478, "code": "H = 211;N = 5\nprint('No' if sum(list(map(int,\"31 41 59 26 53\".split()))) < H else 'Yes')", "coverage": [">", ">"]}, "18687": {"id": 18687, "code": "import math\nH = 14\nW = 12\nN = 112\nmax_num = max(H, W)\nans = math.ceil(N / max_num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "649": {"id": 649, "code": "ans = -1\na = 0\nK = 101\nif K % 2 == 0:\n    ans = -1\nelif K % 5 == 0:\n    ans = -1\nelse:\n    for i in range(0, K):\n        a = (10 * a + 7) % K\n        if a == 0:\n            ans = i + 1\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "1859": {"id": 1859, "code": "n = 10;a = 7;b = 5\nd = min(a,b)\nm = a+b-n\nif m < 0:\n    m = 0\nprint(\"{} {}\".format(d,m))", "coverage": [">", ">", ">", ">", "!", ">"]}, "7655": {"id": 7655, "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\nfor a in A:\n  h -= a\nprint(\"Yes\" if h <= 0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "11384": {"id": 11384, "code": "A=['SUN','MON','TUE','WED','THU','FRI','SAT']\nS = \"SAT\"\nfor i in range(7):\n  if S==A[i]:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "15180": {"id": 15180, "code": "a = 13;b = 3;c = 1\na-=c\nb+=c\nprint(a//b)", "coverage": [">", ">", ">", ">"]}, "9367": {"id": 9367, "code": "s = ['2017', '01', '31']\nif s[0] == \"2017\":\n    s[0] = \"2018\"\nprint(s[0]+\"/\"+s[1]+\"/\"+s[2])", "coverage": [">", ">", ">", ">"]}, "17266": {"id": 17266, "code": "x = ['D', 'H']\na = (x[0])\nb = (x[1])\nif((a == \"H\") & (b == \"H\")):\n    print(\"H\")\nelif ((a == \"D\") & (b == \"D\")):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "1281": {"id": 1281, "code": "n = 750\nwhile True:\n    if n%111==0:\n        print(n)\n        break\n    n+=1", "coverage": [">", ">", ">", ">", ">", ">"]}, "4772": {"id": 4772, "code": "S = \"smiles\"\nl = len(S)-1\nn = len(S)-2\nans = S[0] + str(n) + S[l]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "8657": {"id": 8657, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2586": {"id": 2586, "code": "a = {1, 2, 9}\nprint('YES' if 1 in a and 9 in  a and 7 in a and 4 in a else 'NO')", "coverage": [">", ">"]}, "16475": {"id": 16475, "code": "import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\namax = a[-1]\nif amax//2 in set(a):\n  print(amax,amax//2)\nelse:\n  ind = bisect.bisect_left(a,amax//2)\n  MIN = min(abs(a[ind]-(amax//2)),abs(a[ind-1]-(amax//2)))\n  if amax == 100 and a[ind] == 100:\n    print(100,0)\n    exit()\n  if MIN == abs(a[ind]-(amax//2)):\n    print(amax,a[ind])\n  else:\n    print(amax,a[ind-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "7254": {"id": 7254, "code": "health = 211;attack = 5\ndamage = [31, 41, 59, 26, 53]\nif health <= sum(damage):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "16276": {"id": 16276, "code": "import bisect\nn = 2\na = [0, 100]\nai = a[-1]\nhalf_ai = ai // 2\ni_left = bisect.bisect_left(a, half_ai)\ni_right = bisect.bisect_right(a, half_ai)\nif (a[i_left] == half_ai):\n    print(ai, half_ai)\n    exit()\nif (i_left == i_right and i_left == 0):\n    print(ai, a[0])\n    exit()\nif (abs(half_ai - a[i_left - 1]) >=\n        abs(half_ai - a[i_right]) and i_right != len(a) - 1):\n    print(ai, a[i_right])\nelse:\n    print(ai, a[i_left - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", "!", "!", ">"]}, "17597": {"id": 17597, "code": "s = \"1700\"\nym = 1 <= int(s[2:]) <= 12\nmy = 1 <= int(s[:2]) <= 12\nif ym and my:\n    print('AMBIGUOUS')\nelif ym:\n    print('YYMM')\nelif my:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17150": {"id": 17150, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    print(b)\nelse:\n    if b == 'H': print('D')\n    else: print('H')", "coverage": [">", ">", "!", "!", ">", "!"]}, "5517": {"id": 5517, "code": "N = 100\nprint(N // 2) if N % 2 == 0 else print(N // 2 + 1)", "coverage": [">", ">"]}, "13295": {"id": 13295, "code": "string = \"happy,newyear,enjoy\"\nans = string.replace(',', ' ')\nprint(ans)", "coverage": [">", ">", ">"]}, "17246": {"id": 17246, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    if b == 'H':\n        print('H') \n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12966": {"id": 12966, "code": "x = 5\nif x == 7 or x == 5 or x == 3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "15809": {"id": 15809, "code": "x = 100000;y = 1;z = 1\nwidth = y + z\nprint((x-z) // width)", "coverage": [">", ">", ">"]}, "19032": {"id": 19032, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit()\nn //= 2\nacc = 0\nwhile n >= 5:\n    acc += n // 5\n    n //= 5\nprint(acc)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8331": {"id": 8331, "code": "N = 1\ncandies_i = [2]\ncandies_j = [3]\nl = []\nfor i in range(N):\n    total_li = sum(candies_i[:i+1])\n    total_lj = sum(candies_j[i:])\n    total = total_li + total_lj\n    l.append(total)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9053": {"id": 9053, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nx = e - a\nif x <= k:\n  print('Yay!')\nelse:\n  print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6448": {"id": 6448, "code": "from bisect import bisect_right\nfrom itertools import accumulate\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0] * N\nfor i,b in enumerate(B):\n    r = bisect_right(C, b)\n    Bcnt[i] = N - r\nBcnt = [0] + list(accumulate(Bcnt))\nAcnt = [0] * N\nfor i,a in enumerate(A):\n    r = bisect_right(B, a)\n    Acnt[i] = Bcnt[N] - Bcnt[r]\nprint(sum(Acnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6166": {"id": 6166, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in range(n):\n    mid = b[i]\n    hi = bisect.bisect_left(a, mid)\n    lo = n - bisect.bisect_right(c, mid)\n    ans += hi * lo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11737": {"id": 11737, "code": "pm = 11;pd = 30\nnm = 12;nd = 1\nprint(0 if pm == nm else 1)", "coverage": [">", ">", ">"]}, "11826": {"id": 11826, "code": "m = \"11\";d = \"16\"\nmm = \"11\";dd = \"17\"\nprint('0' if m==mm else '1')", "coverage": [">", ">", ">"]}, "16356": {"id": 16356, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nn = A[-1]\nr_=n/2\na_before=''\nfor a in A[:-1]:\n    if a >= r_:\n        break\n    a_before = a\nif abs(r_-a) >= abs(r_-a_before):\n    r = a_before\nelse:\n    r = a\nprint(n,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1571": {"id": 1571, "code": "N = \"750\"\nif (N[0] == N[1]) and (N[1]==N[2]) and (N[2]==N[0]):\n    print(N)\nelif int(N[0]) == int(N[1]) and int(N[1]) > int(N[2]):\n    print(N[0]*3)\nelif int(N[0]) > int(N[1]):\n    print(N[0]*3)\nelse:\n    print(str(int(N[0])+1)*3)", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "2125": {"id": 2125, "code": "N = 10;A = 3;B = 5\nif A + B <= N :\n    print(str(min(A, B)) + \" 0\")\nelse :\n    print(str(min(A, B)) + \" \" + str(abs(N - (2 * N - A - B))))", "coverage": [">", ">", ">", "!", "!"]}, "1777": {"id": 1777, "code": "n = 100;a = 100;b = 100\nif n>(a+b):\n    print(\"{} {}\".format(min([a,b]), 0))\nelse:\n    print(\"{} {}\".format(min([a,b]), abs(n-(a+b))))", "coverage": [">", ">", "!", "!", ">"]}, "12285": {"id": 12285, "code": "import sys\nS = \"atcoder\"\nif not S.islower():sys.exit()\nif not ( 3 <= len(S) <= 99 and len(S) % 2 == 1 ): sys.exit()\nfirst = int((len(S)-1)/2)\nF = S[0:first]\nlast = int((len(S)+3)/2)\nL = S[last-1:]\ncondition = 0\nif S == S[::-1]:\n    condition += 1\nif F == F[::-1]:\n    condition += 1\nif L == L[::-1]:\n    condition += 1\nprint('Yes') if condition == 3 else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "18539": {"id": 18539, "code": "h = 3\nw = 7\nn = 10\nx = max(h, w)\nprint((n + x - 1) // x)", "coverage": [">", ">", ">", ">", ">"]}, "822": {"id": 822, "code": "K = 2\nx = 7%K\nfor i in range(K):\n    if x == 0:\n        print(i+1)\n        exit()\n    x = (x*10+7)%K\nprint(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "4162": {"id": 4162, "code": "from datetime import datetime\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt1 = datetime(2000, 1, 1, h1, m1, 0)\nt2 = datetime(2000, 1, 1, h2, m2, 0)\nt = (t2 - t1).seconds // 60\nans = t - k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5623": {"id": 5623, "code": "a = 5\nprint(sum(divmod(a,2)))", "coverage": [">", ">"]}, "13093": {"id": 13093, "code": "x = 6\nif x in (3,5,7):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "14467": {"id": 14467, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nsw=\"1\"\nans=1\nfor i in range(N-1):\n    if sw==\"1\":\n        if A[i]>A[i+1]:\n            sw=\"2\"\n        if A[i]<A[i+1]:\n            sw=\"3\"\n    elif sw==\"2\":\n        if A[i]<A[i+1]:\n            ans+=1\n            sw=\"1\"\n    elif sw==\"3\":\n        if A[i]>A[i+1]:\n            ans+=1\n            sw=\"1\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "11408": {"id": 11408, "code": "lis = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nS = \"SAT\"\nx = lis.index(S)\nprint(7-x)", "coverage": [">", ">", ">", ">"]}, "7751": {"id": 7751, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nnum=0\nwhile num*K-(num-1)<N:\n    num+=1\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6100": {"id": 6100, "code": "N = 5\nans = -(-N // 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "7668": {"id": 7668, "code": "M = 211;N = 5\nN_List = [31, 41, 59, 26, 53]\nif sum(N_List) < M:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7107": {"id": 7107, "code": "h = 10;n = 3\na = map(int,\"4 5 6\".split())\nif sum(a) >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "18200": {"id": 18200, "code": "from collections import defaultdict\nN = 6\nA = map(int,\"2 3 3 1 3 1\".split())\ns = defaultdict(lambda :0)\nb = defaultdict(lambda :0)\nfor i,a in enumerate(A):\n    s[i-a] = s[i-a] + 1\n    b[i+a] = b[i+a] + 1\nc = 0\nfor k in s:\n    if k in b:\n        c += b[k]*s[k]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3179": {"id": 3179, "code": "s = \"1111111111\"\nans = 1000000\nfor i in range(len(s)-2):\n    S = s[i]+s[i+1]+s[i+2]\n    S = int(S)\n    q = abs(753-S)\n    ans = min(ans, q)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "123": {"id": 123, "code": "s = [99, 111, 100, 101, 102, 101, 115, 116, 105, 118, 97, 108]\nk = 100\nfor i in range(len(s)-1):\n  if s[i] == ord(\"a\"): continue\n  t = ord(\"z\")+1-s[i]\n  if k >= t:\n    s[i] = 97\n    k -= t\nif k > 0:\n  k %= 26\n  s[-1] += k\n  if s[-1] > ord(\"z\"):\n    s[-1] -= 26\nprint(\"\".join(list(map(chr, s))))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "4404": {"id": 4404, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nf = (c - a) * 60\nf += (d - b)\nprint(f - e)", "coverage": [">", ">", ">", ">"]}, "8941": {"id": 8941, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nif N==1: print(A[0] + B[0]);exit()\nAS = [0]\nBS = [0]\nfor i in range(N):\n    AS.append(AS[-1]+A[i])\n    BS.append(BS[-1]+B[i])\nans = 0\nfor i in range(N):\n    val = AS[i+1]\n    val += BS[-1]-BS[i]\n    ans =max(ans,val)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8655": {"id": 8655, "code": "N = 1\nupper = [2]\ndown = [3]\nscores = []\nfor i in range(N):\n    score = 0\n    flag = 0\n    for j in range(N):\n        if i == j and flag == 0:\n            score += upper[j]\n            score += down[j]\n            flag = 1\n        elif flag == 0:\n            score += upper[j]\n        elif flag == 1:\n            score += down[j]\n    scores.append(score)\nprint(max(scores))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "12199": {"id": 12199, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 + 1 == m2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16811": {"id": 16811, "code": "a = \"D\";b = \"D\"\nif a == 'D':\n  b = 'D' if b == 'H' else 'H'\nprint(b)", "coverage": [">", ">", ">", ">"]}, "9263": {"id": 9263, "code": "n = ['2017', '01', '31']\nprint('2018/' + n[1] +'/'+n[2])", "coverage": [">", ">"]}, "4918": {"id": 4918, "code": "S = \"internationalization\"\nx = len(S) - 2\nprint(S[0] + str(x) + S[-1])", "coverage": [">", ">", ">"]}, "4528": {"id": 4528, "code": "s = \"internationalization\"\na=len(s)-2\nprint(s[0]+str(a)+s[len(s)-1])", "coverage": [">", ">", ">"]}, "5597": {"id": 5597, "code": "N = 2\nA=N//2+N%2\nprint(A)", "coverage": [">", ">", ">"]}, "17612": {"id": 17612, "code": "S = \"1700\"\nfront = int(S[:2])\nback = int(S[2:])\nS_list = list(S)\nif front > 12 or front == 0:\n    if 0 < back <= 12 :\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif front <= 12 or front == 0:\n    if 0 < back <= 12: \n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "12710": {"id": 12710, "code": "a = \"5\"\na = int(a)\nif a == 7 or a == 5 or a == 3:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "2584": {"id": 2584, "code": "a = {1, 4, 9, 7}\nprint('YES' if 1 in a and 9 in  a and 7 in a and 4 in a else 'NO')", "coverage": [">", ">"]}, "15692": {"id": 15692, "code": "import math\nx = 64146;y = 123;z = 456\nif x%(y+z)>=z:\n  print(math.floor(x/(y+z)))\nelse:\n  print(math.floor(x/(y+z)-1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "9405": {"id": 9405, "code": "S = \"2017/01/31\"\nprint(S.replace('2017/', '2018/'))", "coverage": [">", ">"]}, "14658": {"id": 14658, "code": "import collections\nn = 2;p = 0\na = [1, 3]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif p == 0:\n  if a2[1] == 0:\n    print(2 ** n)\n  else:\n    print(2 ** (n - 1))\nelse:\n  if a2[1] == 0:\n    print(0)\n  else:\n    print(2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "12927": {"id": 12927, "code": "X = \"6\"\nif X in '753':\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "5685": {"id": 5685, "code": "from math import ceil\nprint(ceil(int(\"100\")/2))", "coverage": [">", ">"]}, "5782": {"id": 5782, "code": "temp = 3.0\nprint(int(temp))", "coverage": [">", ">"]}, "3330": {"id": 3330, "code": "a = \"20\";b = \"30\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15628": {"id": 15628, "code": "x = 64146;y = 123;z = 456\ncount = 0\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">", ">"]}, "9680": {"id": 9680, "code": "n = 3\ns = \"())\"\nd = [0]*(n+1)\nfor i in range(1, n+1):\n    d[i] = s[:i].count('(') - s[:i].count(')')\nx = min(d)\ns = '('*(-x) + s + ')'*(d[n]-x)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9687": {"id": 9687, "code": "n = 6\ns = \")))())\"\ncnt, L = 0, 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt < 0:\n        L = min(L, cnt)\nans = '('*abs(L) + s\nR = ans.count('(') - ans.count(')')\nans += ')'*R\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13806": {"id": 13806, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nflag = 0\nfor i in range(N-1):\n  if A[i+1]-A[i] > 0:\n    if flag == 1:\n      cnt +=0\n    elif flag == -1:\n      cnt +=1\n      flag = 0\n    elif flag ==0:\n      flag = 1\n  elif A[i+1]-A[i] < 0:\n    if flag == 1:\n      cnt +=1\n      flag =0\n    elif flag ==-1:\n      cnt +=0\n    elif flag ==0:\n      flag = -1\n  elif A[i+1]-A[i] == 0:\n    flag += 0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "5061": {"id": 5061, "code": "s = \"xyz\"\nsize = len(s[1:-1])\nprint(s[0] + str(size) + s[-1])", "coverage": [">", ">", ">"]}, "4444": {"id": 4444, "code": "from sys import stdin\ns = \"internationalization\"\nprint(\"%s%d%s\" % (s[:1], len(s)-2, s[-1]))", "coverage": [">", ">", ">"]}, "16162": {"id": 16162, "code": "from bisect import bisect_left\nn = 5\na_list = [2, 4, 6, 9, 11]\nbase = a_list[-1] / 2\ni = bisect_left(a_list, base)\nif i > 0:\n    i -= 1\nans = [a_list[-1], a_list[i], abs(a_list[i] - base)]\nfor i in range(i + 1, n):\n    temp = abs(a_list[i] - base)\n    if temp >= ans[2]:\n        break\n    ans[1] = a_list[i]\n    ans[2] = temp\nprint(ans[0], ans[1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15413": {"id": 15413, "code": "import math\nx = 64146;y = 123;z = 456\nt = (x-z)/(y+z)\nprint(math.floor(t))", "coverage": [">", ">", ">", ">"]}, "8658": {"id": 8658, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18939": {"id": 18939, "code": "N = 12\nif N % 2 != 0:\n    print(0)\nelse:\n    fives = 0\n    power = 0\n    while (5 ** (power+1)) <= N:  \n        power += 1\n    for i in range(1, power+1):\n        fives += N // (5 ** i) // 2\n    print(int(fives))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4712": {"id": 4712, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nprint(\"\".join([s[0]] + [str(len(s[1:-1]))] + [s[-1]]))", "coverage": [">", ">"]}, "13743": {"id": 13743, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;lens = 30\navailable = (h2 * 60 + m2) - (h1 * 60 + m1)\nanswer = available - lens if available > lens else 0\nprint(answer)", "coverage": [">", ">", ">", ">"]}, "15466": {"id": 15466, "code": "X = 12;Y = 3;Z = 1\nperson = 0\nwhile (Y + Z) * (person + 1) + Z <= X:\n    person += 1\nprint(person)", "coverage": [">", ">", ">", ">", ">"]}, "3948": {"id": 3948, "code": "x = 64146;y = 123;z = 456\nx -= z\nr = x // (y + z)\nprint(r)", "coverage": [">", ">", ">", ">"]}, "16261": {"id": 16261, "code": "N = 5\nA = [2, 4, 6, 9, 11]\nn = A[-1]\nk = A[0]\nfor i in range(1,N-1):\n    j = A[i]\n    if k<=n//2 and j<=n//2:\n        k = max(k,j)\n    elif k<=n//2 and j>n//2:\n        if k<n-j:\n            k = j\n    elif k>n//2 and j<=n//2:\n        if n-k<j:\n            k = j\n    elif k>n//2 and j>n//2:\n        if n-k<n-j:\n            k = j\nprint(n,k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "11049": {"id": 11049, "code": "s = \"atcoder\"\nn=len(s)\nx=n//2\na=s[0:x]\nb=s[x+1:]\nif a==b:print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2804": {"id": 2804, "code": "S = \"35753\"\nmin_val=10**9\nfor i in range(len(S)-2):\n  temp=abs(753-int(S[i:(i+3)]))\n  min_val=min(min_val,temp)\nprint(min_val)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19123": {"id": 19123, "code": "N = 12\nans = 0\nif N % 2 == 1:\n    pass\nelse:\n    two = 0\n    five = 0\n    tmp = 2\n    while tmp <= N:\n        two += N // tmp\n        tmp *= 2\n    tmp = 10\n    while tmp <= N:\n        five += N // tmp\n        tmp *= 5\n    ans = min(two, five)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4957": {"id": 4957, "code": "w = \"internationalization\"\nl = len(w) -2\nprint(w[0] + str(l) + w[-1])", "coverage": [">", ">", ">"]}, "2607": {"id": 2607, "code": "a = 4;b = 9;c = 0;d = 8\nans = set()\nans.add(a)\nans.add(b)\nans.add(c)\nans.add(d)\nif 1 in ans and 9 in ans and 7 in ans and 4 in ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9710": {"id": 9710, "code": "n = 3\ns = \"())\"\nd=[0]*n\nlcount=0\nrcount=0\nfor i in range(len(s)):\n  if s[i]==\"(\":\n    lcount+=1\n  else:\n    if lcount>=1:\n      lcount-=1\n    else:\n      rcount+=1\nprint(\"(\"*rcount+s+\")\"*lcount)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "15848": {"id": 15848, "code": "x = 100000;y = 1;z = 1\na = x-z\nb = a//(y+z)\nprint(b)", "coverage": [">", ">", ">", ">"]}, "5694": {"id": 5694, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nn = 100\nprint((n + 1) // 2)", "coverage": [">", ">", ">", ">", ">"]}, "16198": {"id": 16198, "code": "import sys\nimport bisect\ninput = sys.stdin.readline\nn = 5\na = [2, 4, 6, 9, 11]\nif n == 2:\n    am = a[-1]\n    amm = a[0]\nelse:\n    am = max(a)\n    ind = bisect.bisect_left(a,am//2)\n    am1 = a[ind]\n    am2 = a[ind-1]\n    am1abs = abs(am/2-am1)\n    am2abs = abs(am/2-am2)\n    if am1abs <= am2abs:\n        amm = am1\n    else:\n        amm = am2\nprint(am,amm)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14199": {"id": 14199, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans=1\nx=y=0\nc=A[0]\nfor i in range(1,N):\n    if c < A[i]:\n        x=1\n    elif c>A[i]:\n        y=1\n    if x==1 and y==1:\n        ans+=1\n        x=y=0\n    c=A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15215": {"id": 15215, "code": "x = 64146;y = 123;z = 456\nn = (x - z) / (y + z)\nprint(int(n))", "coverage": [">", ">", ">"]}, "811": {"id": 811, "code": "k = 101\na = 7 % k\ncount = 1\nfor i in range(1,k+1):\n  if a == 0:\n    print(count)\n    break\n  else:\n    a = (10 * a + 7) % k\n    count += 1\n    if i == k:\n      print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!"]}, "10642": {"id": 10642, "code": "A = 8;B = 12;K = 2\nS=set()\nfor i in range(1,min(A+1,B+1)):\n    if A%i==0 and B%i==0:\n        S.add(i)\nprint(sorted(S)[::-1][K-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "11295": {"id": 11295, "code": "d='SUN,MON,TUE,WED,THU,FRI,SAT'.split(',')\ns = \"SUN\"\nprint(7 - d.index(s))", "coverage": [">", ">", ">"]}, "542": {"id": 542, "code": "s = ['x', 'y', 'z']\nk = 4\nans = []\nfor alf in s:\n    if alf == 'a':\n        ans.append('a')\n    else:\n        if 123 - ord(alf) <= k:\n            k -= 123 - ord(alf)\n            ans.append('a')\n        else:\n            ans.append(alf)\nif 0 < k:\n    amari = (ord(ans[-1])-97+k)%26\n    ans[-1] = chr(amari+97)\nprint(''.join(map(str,ans)))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "5696": {"id": 5696, "code": "n = 2\nr = n // 2\na = n % 2\nprint(r + a)", "coverage": [">", ">", ">", ">"]}, "19033": {"id": 19033, "code": "import sys\ninput = sys.stdin.readline\nn = 12\na = 0\nif n % 2 == 1:\n    a == 0\nelse:\n    n = n // 2\n    k = 5\n    while k <= n:\n        a += n // k\n        k *= 5\nprint(a)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7028": {"id": 7028, "code": "h = 20;n = 3\na = map(int, \"4 5 6\".split())\nprint('Yes' if h <= sum(a) else 'No')", "coverage": [">", ">", ">"]}, "3436": {"id": 3436, "code": "A = 12;B = 4\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", "!"]}, "13390": {"id": 13390, "code": "s = \"abcde,fghihgf,edcba\"\nl=\" \".join(s.split(\",\"))\nprint(l)", "coverage": [">", ">", ">"]}, "13421": {"id": 13421, "code": "S = \"happy,newyear,enjoy\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "7070": {"id": 7070, "code": "H = 211;N = 5\ndata = [31, 41, 59, 26, 53]\nS = 0\nfor i in range(0,len(data)):\n    S += data[i]\nif H > S:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7172": {"id": 7172, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nAll = sum(A)\nif H - All > 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12860": {"id": 12860, "code": "a = 5\nprint([\"NO\",\"YES\"][a==3 or a==5 or a==7])", "coverage": [">", ">"]}, "13917": {"id": 13917, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif(n<3):\n    print(1)\n    exit()\nans = 1\nstate = 0\nnow = a[0]\nfor ai in a[1:]:\n    if(state==0):\n        if(now == ai):\n            state = 0\n        elif(now > ai):\n            state = -1\n        else:\n            state = 1\n    elif(state==1):\n        if(now > ai):\n            state = 0\n            ans += 1\n    else:\n        if(now < ai):\n            state = 0\n            ans += 1\n    now = ai\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "4246": {"id": 4246, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\na = 60*H1 + M1\nb = 60*H2 + M2\nprint(b - a - K)", "coverage": [">", ">", ">", ">"]}, "713": {"id": 713, "code": "k = 101\nif k%2==0 or k%5==0:\n  print(-1); exit()\ncnt=num=0\nwhile 1:\n  num+=7*pow(10,cnt,k)\n  num%=k\n  cnt+=1\n  if num==0:\n    break\nprint(cnt)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9483": {"id": 9483, "code": "s = \"2017/01/31\"\nans='2018'+s[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "6654": {"id": 6654, "code": "import bisect\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n    ans += (bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b)))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5515": {"id": 5515, "code": "N = 5\nprint(N // 2) if N % 2 == 0 else print(N // 2 + 1)", "coverage": [">", ">"]}, "3084": {"id": 3084, "code": "s = \"1111111111\"\na = 10000\nfor i in range(len(s) - 1):\n    a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "16386": {"id": 16386, "code": "n = 2\nA = [100, 0]\nB = A.copy()\nA_max = max(A)\nans = 100\nfor i in range(n):\n    if B[i] > A_max // 2:\n        B[i] = A_max-B[i]\nB.sort()\nif B[-1] in A:\n    print(str(A_max)+\" \"+str(B[-1]))\nelse:\n    print(str(A_max)+\" \"+str(A_max-B[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6323": {"id": 6323, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nab = [0 for i in range(n)]\nans = 0\nfor i in range(n):\n  ab[i] = ab[i-1] + bisect.bisect_left(a, b[i])\nfor i in range(n):\n  tmp = bisect.bisect_left(b, c[i])\n  if tmp != 0:\n  \tans += ab[tmp-1] \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1742": {"id": 1742, "code": "N = 10;A = 3;B = 5\nM = min(A, B)\nif A + B <= N:\n  m = 0\nelse:\n  m = A + B - N\nprint(M, m)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14352": {"id": 14352, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = 0\nans = 1\ncnt = 0\nfor i in range(n-1):\n    if a[i+1] - a[i] > 0 and flag == -1 and cnt > 0:\n        flag = 1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] < 0 and flag == 1 and cnt > 0: \n        flag = -1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] == 0:\n        pass\n    elif cnt == 0 and a[i+1] - a[i] > 0:\n        flag = 1\n        cnt += 1\n    elif cnt == 0 and a[i+1] - a[i] < 0:\n        flag = -1\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "5461": {"id": 5461, "code": "n = 5\nm = (n + 1) // 2\nprint(m)", "coverage": [">", ">", ">"]}, "16278": {"id": 16278, "code": "n = 2\nAs = [100, 0]\na = max(As)\nb = None\ndist = float('inf')\nfor i in range(n):\n    if As[i] != a and abs(As[i] - a/2) < dist:\n        dist = abs(As[i] - a/2)\n        b = As[i]\nprint(a, b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16747": {"id": 16747, "code": "i_list = ['D', 'H']\na = i_list[0]\nb = i_list[1]\nr = ''\nif a == 'H':\n\tr = b\nelse:\n\tr = 'H' if b == 'D' else 'D'\nprint(r)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3456": {"id": 3456, "code": "a = 20;b = 30\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13228": {"id": 13228, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0] + s[1] + s[2] + s[3] + s[4] + \" \" + s[6] + s[7] + s[8] + s[9] + s[10] + s[11] + s[12] + \" \" + s[14] + s[15] + s[16] + s[17] + s[18])", "coverage": [">", ">"]}, "2427": {"id": 2427, "code": "import math\nn = 13;m = 3\nnC2 = math.factorial(n) // (math.factorial(2) * math.factorial(n - 2)) if n >= 2 else 0\nmC2 = math.factorial(m) // (math.factorial(2) * math.factorial(m - 2)) if m >= 2 else 0\nprint(nC2 + mC2)", "coverage": [">", ">", ">", ">", ">"]}, "1047": {"id": 1047, "code": "n = 750\ni = int(n / 111)\nif n % 111 != 0:\n    i += 1\nprint(i * 111)", "coverage": [">", ">", ">", ">", ">"]}, "4581": {"id": 4581, "code": "s = \"xyz\"\ns_len = len(s)\nprint(s[0]+str(s_len-2)+s[s_len-1])", "coverage": [">", ">", ">"]}, "1370": {"id": 1370, "code": "n = 750\nans=0\nfor i in range(n,n+200):\n    N=str(i)\n    if N[0]==N[1]==N[2]:\n        ans=i\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5397": {"id": 5397, "code": "n = 100\nif n % 2 != 0:\n  n = n + 1\nprint(n // 2)", "coverage": [">", ">", "!", ">"]}, "14201": {"id": 14201, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nx=y=0\nc=A[0]\nfor i in range(1,N):\n    if c < A[i]:\n        x=1\n    elif c>A[i]:\n        y=1\n    if x==1 and y==1:\n        ans+=1\n        x=y=0\n    c=A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7744": {"id": 7744, "code": "N = 8;K = 3\nAN = [7, 3, 1, 8, 4, 6, 2, 5]\nAN.sort()\nN = N - AN.count(AN[0])\nprint( -(-N//(K-1)) )", "coverage": [">", ">", ">", ">", ">"]}, "12588": {"id": 12588, "code": "A = 1;B = 1;K = 1\nans=0\nres=0\nfor i in range(min(A, B), 0, -1):\n    if A%i==0 and B%i==0:\n        res+=1\n        if res==K:\n            ans=i\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5629": {"id": 5629, "code": "n = 5\nprint(-(-n//2))", "coverage": [">", ">"]}, "10648": {"id": 10648, "code": "A = 1;B = 1;K = 1\na = []\nb = []\nfor x in range(1, A + 1):\n    if A % x == 0:\n        a.append(x)\nfor y in range(1, B + 1):\n    if B % y == 0 and y in a:\n        b.append(y)\nb = sorted(b,reverse = True)\nprint(b[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8048": {"id": 8048, "code": "n = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nn -= k\nk -= 1\nans = 1\nans += (n+k-1)//k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13014": {"id": 13014, "code": "n = \"5\"\nl=\"753\"\nflag = 0\nfor m in l:\n    if m in n:\n        flag = 1\nprint(\"YES\" if flag ==1 else \"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4123": {"id": 4123, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nhour = h2 - h1\nminute = m2 - m1\ntime = (hour * 60) + minute\nprint(time - k)", "coverage": [">", ">", ">", ">", ">"]}, "7268": {"id": 7268, "code": "H = 20;N = 3\nA_list = map(int, \"4 5 6\".split())\nans = \"Yes\" if sum(A_list) >= H else \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10247": {"id": 10247, "code": "n = 3\ns = ['(', ')', ')']\nans = ''\ncnt = 0\nfor c in s:\n    ans += c\n    if c == ')':\n        cnt -= 1\n    else:\n        cnt += 1\n    if cnt < 0:\n        ans = '(' + ans\n        cnt = 0\ncnt = 0\nfor c in s[::-1]:\n    if c == ')':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt < 0:\n        ans += ')'\n        cnt = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "11289": {"id": 11289, "code": "li = ['MON','TUE','WED','THU','FRI','SAT','SUN']\nn = \"SUN\"\nif n == 'SUN':\n    print(7)\nelse:\n    print(6 - li.index(n))", "coverage": [">", ">", ">", ">", "!", "!"]}, "7437": {"id": 7437, "code": "H = 210;N = 5\nspecial_move = [31, 41, 59, 26, 53]\nif H <= sum(special_move):\n    result = 'Yes'\nelse:\n    result = 'No'\nprint(result)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19002": {"id": 19002, "code": "n = 12\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    n //= 2\n    while n:\n        ans += n//5\n        n //= 5\n    print(int(ans))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "3391": {"id": 3391, "code": "A = 12;B = 4\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "15669": {"id": 15669, "code": "import math\nX = 13;Y = 3;Z = 1\nX -= Z\nprint(math.floor(X/(Y+Z)))", "coverage": [">", ">", ">", ">"]}, "17344": {"id": 17344, "code": "a = \"D\";b = \"H\"\nif a == b:\n    print(\"H\")\nelif a != b:\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">"]}, "1416": {"id": 1416, "code": "n = 112\nN = list(str(n))\nans = str()\nres = N[0]\nmn = True\nbl = True\nfor x in N:\n    if int(res) < int(x):\n        mn = False\n    if x != res:\n        bl = False\nif bl:\n    print(n)\nelse:\n    if not mn:\n        for i in range(len(N)):\n            ans += str(int(res) + 1)\n        print(ans)\n    else:\n        for i in range(len(N)):\n            ans += str(res)\n        print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!"]}, "2741": {"id": 2741, "code": "N = (1, 9, 7, 4)\nif 1 in N and 9 in N and 7 in N and 4 in N:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "3305": {"id": 3305, "code": "import sys\ninput = \"<function <lambda>>\"\na = 20;b = 15\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "13540": {"id": 13540, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a, b, c)", "coverage": [">", ">"]}, "7559": {"id": 7559, "code": "h = 210;n = 5\nli = [31, 41, 59, 26, 53]\nif sum(li) >= h:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "16742": {"id": 16742, "code": "a = \"D\";b = \"D\"\nif a == b: print(\"H\")\nelse: print(\"D\")  ", "coverage": [">", ">", "!"]}, "10499": {"id": 10499, "code": "A = 100;B = 50;K = 4\ncount = []\nfor i in range(1, min(A, B) + 1, 1):\n  if (A % i == 0) and (B % i == 0):\n    count.append(i)\ncount.sort(reverse = True)\nprint(count[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14344": {"id": 14344, "code": "N = 6\nif N == 1:print(1);exit()\nA = [1, 2, 3, 2, 2, 1]\nans = 1\ncur = A[0]\nDecided = A[0] != A[1]\nFlat = A[0] == A[1]\nUp = A[0] < A[1]\nfor n in range(1,N):\n    if Decided:\n        if A[n] == cur:\n            continue\n        if (A[n]>=cur) == Up:\n            cur = A[n]\n        else:\n            cur = A[n]\n            Up = 1 - Up\n            Decided = False\n            ans += 1\n    else:\n        if A[n] != cur:\n            Up = A[n] > cur\n            cur = A[n]\n            Decided = True\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5523": {"id": 5523, "code": "N = 100\nanswer = N / 2 if N % 2 == 0 else int(N / 2) + 1\nprint(int(answer))", "coverage": [">", ">", ">"]}, "4912": {"id": 4912, "code": "s = \"internationalization\"\nfir=s[0]\nlas=s[-1]\ns=s[1:]\ns=s[:-1]\nprint(fir+str(len(s))+las)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8734": {"id": 8734, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nb1 = [0] * n\nb2 = [0] * n\nc1 = 0\nc2 = 0\nfor i in range(n):\n    b1[i] = c1 + a1[i]\n    c1 += a1[i]\nfor i in range(n):\n    b2[- 1 - i] = c2 + a2[- 1 - i]\n    c2 += a2[- 1 - i]\nd = []\nfor i in range(n):\n    d.append(b1[i] + b2[i])\nprint(max(d))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16739": {"id": 16739, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    print(b)\nelif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    elif b == \"D\":\n        print(\"H\")", "coverage": [">", ">", "!", ">", ">", "!", ">", ">"]}, "16785": {"id": 16785, "code": "lst = [0, 0]\nprint('H' if sum(lst)%2 == 0 else 'D')", "coverage": [">", ">"]}, "2953": {"id": 2953, "code": "a = \"35753\"\nla = len(a)\nres = 753\nfor i in range(la-2):\n    temp = a[i:i+3]\n    tempp = abs(int(temp)-753)\n    res = min(res,tempp)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5810": {"id": 5810, "code": "n = 2\nif n%2==0:\n  print(int(n/2))\nif not n%2==0:\n  print(int(n/2+1))", "coverage": [">", ">", ">", ">", "!"]}, "11735": {"id": 11735, "code": "m1 = 11;d = 30\nd = 1;m2 = 12\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "18833": {"id": 18833, "code": "H = 14\nW = 12\nN = 112\nq, mod = divmod(N, max(H, W))\nprint(q if mod == 0 else q + 1)", "coverage": [">", ">", ">", ">", ">"]}, "4230": {"id": 4230, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nz = (c-a)*60 + (d-b)- e\nprint(z)", "coverage": [">", ">", ">"]}, "5697": {"id": 5697, "code": "n = 100\nr = n // 2\na = n % 2\nprint(r + a)", "coverage": [">", ">", ">", ">"]}, "3424": {"id": 3424, "code": "a = 12;b = 4\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "6119": {"id": 6119, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans = 0\nfor j in range(n):\n    l = 0\n    r = n - 1\n    i = (l + r) // 2\n    while l <= r:\n        if a[i] >= b[j]:\n            r = i - 1\n        else:\n            l = i + 1\n        i = (l + r) // 2\n    l = 0\n    r = n - 1\n    k = (l + r) // 2\n    while l <= r:\n        if c[k] <= b[j]:\n            l = k + 1\n        else:\n            r = k - 1\n        k = (l + r) // 2\n    ans += (i + 1) * (n - (k + 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "16717": {"id": 16717, "code": "a = \"D\";b = \"H\"\nif a=='H': print('H' if b=='H' else 'D')\nelse: print('D' if b=='H' else 'H')", "coverage": [">", ">", ">"]}, "12836": {"id": 12836, "code": "X = 5\nnum = abs(X -5)\nans = \"NO\"\nif num == 0 or num == 2:\n    ans = \"YES\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17497": {"id": 17497, "code": "x = \"0112\"\na, b = int(x[0:2]), int(x[2:4])\nflag = 0\nans = [\"AMBIGUOUS\", \"YYMM\", \"MMYY\", \"NA\"]\nif (a >= 1 and a <= 12) and (b >= 1 and b <= 12):\n    flag = 0\nelif (a == 0 and b > 12) or (b == 0 and a > 12) or (b > 12 and a > 12) or (b == 0 and a == 0):\n    flag = 3\nelif ((a > 0 and a <= 12) and (b >= 13)) or (b == 0 and (a >= 1 and a <= 12)):\n    flag = 2\nelif ((a >= 13) and (b > 0 and b <= 12)) or (a == 0 and (b >= 1 and b <= 12)):\n    flag = 1\nprint(ans[flag])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "8009": {"id": 8009, "code": "import math\nn = 4;k = 3\na = [2, 3, 1, 4]\nans = 0\nans = math.ceil((n-1)/(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11254": {"id": 11254, "code": "w = \"SUN,MON,TUE,WED,THU,FRI,SAT\".split(\",\")\nS = \"SAT\"\nfor i, d in enumerate(w):\n    if d == S:\n        print(7 - i)", "coverage": [">", ">", ">", ">", ">"]}, "3511": {"id": 3511, "code": "import sys\nA = 12;B = 4\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)", "coverage": [">", ">", ">", ">", ">"]}, "2642": {"id": 2642, "code": "s={1,7,9,4}\nt = {1, 2, 9}\nprint(\"YES\" if t==s else \"NO\")", "coverage": [">", ">", ">"]}, "10521": {"id": 10521, "code": "A = 1;B = 1;K = 1\nlis=[]\nblis=[]\ncount=0\nsm=min([A,B])\nbm=max([A,B])\nfor i in range(1,sm+1):\n\tif sm/i == sm//i:\n\t\tlis.append(i)\nfor i in lis:\n\tif bm/i == bm//i:\n\t\tblis.append(i)\nblis=list(set(blis))\nblis.sort()\nblis.reverse()\nprint(blis[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19291": {"id": 19291, "code": "n = 5\nans = 0\nif n%2 == 0:\n    i = 10\n    while i <= n:\n        ans += n//i\n        i *= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "14068": {"id": 14068, "code": "from collections import deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\nd=deque(a)\ntmp=[d[0]]\nd.popleft()\nans=1\nwhile d:\n    t=tmp[-1]-tmp[0]\n    if len(tmp)==1 or t==0:\n        tmp.append(d.popleft())\n    elif t>0 and d[0]>=tmp[-1]:\n        tmp.append(d.popleft())\n    elif t<0 and d[0]<=tmp[-1]:\n        tmp.append(d.popleft())\n    else:\n        ans+=1\n        tmp=[d.popleft()]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17874": {"id": 17874, "code": "s = 1905\ns1 = s // 100\ns2 = s % 100\nc = 0\nl = [\"NA\",\"YYMM\",\"MMYY\",\"AMBIGUOUS\"]\nif 1<=s2<=12:\n  c += 1\nif 1<=s1<=12:\n  c += 2\nprint(l[c])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13745": {"id": 13745, "code": "n = [10, 0, 15, 0, 30]\nimport datetime\ntime1 = datetime.datetime(2020,5,5,n[0],n[1])\ntime2 = datetime.datetime(2020,5,5,n[2],n[3])\ntime3 = time2 - time1\ntime3=int(time3.seconds)\nresult=int(time3/60)\nsummary = result - n[4]\nprint(summary)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18652": {"id": 18652, "code": "a = 2\nb = 100\nc = 200\nprint((c+max(a, b)-1)//max(a, b))", "coverage": [">", ">", ">", ">"]}, "1665": {"id": 1665, "code": "N = 10;A = 7;B = 5\nr_max = min(A, B)\nif A + B > N:\n    r_min = A + B - N\nelse:\n    r_min = 0\nprint(r_max, r_min)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9585": {"id": 9585, "code": "s = \"2017/01/31\"\nprint(\"2018\" + s[4:])", "coverage": [">", ">"]}, "2743": {"id": 2743, "code": "N = (4, 9, 0, 8)\nif 1 in N and 9 in N and 7 in N and 4 in N:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "17137": {"id": 17137, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    print('H' if b == 'H' else 'D')\nelse:\n    print('D' if b == 'H' else 'H')", "coverage": [">", ">", ">", "!", "!"]}, "14251": {"id": 14251, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nbefore = a[0]\nok = \"\" \ncnt = 0\nfor i in range(1,n):\n  if ok == \"\":\n    if before < a[i]:\n      ok = True\n    elif before > a[i]:\n      ok = False\n  elif ok:\n    if before > a[i]:\n      cnt += 1\n      ok = \"\"\n  elif not ok:\n    if before < a[i]:\n      cnt += 1\n      ok = \"\"\n  before = a[i]\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "9790": {"id": 9790, "code": "from collections import deque\nn = 3\ns = \"())\"\nA = deque([])\nl = 0\nr = 0\nfor i in range(n):\n  if s[i]=='(':\n    A.append(s[i])\n    l += 1\n  else:\n    if l!=0:\n      A.append(s[i])\n      l -=1\n    else:\n      A.appendleft(\"(\")\n      A.append(s[i])\nfor j in range(l):\n  A.append(\")\")\nprint(\"\".join(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "2102": {"id": 2102, "code": "N = 10;A = 7;B = 5\nMAX = min(A,B)\nMIN = max(A+B-N,0)\nans = [MAX,MIN]\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "2622": {"id": 2622, "code": "N = \"1 2 9 1\"\nif \"1\" in N and \"9\" in N and \"7\" in N and \"4\" in N:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "5210": {"id": 5210, "code": "s = \"smiles\"\na = str(len(s)-2)\nprint(s[0] + a + s[-1])", "coverage": [">", ">", ">"]}, "864": {"id": 864, "code": "K = 2\ncount = 1\nn = 0\nif K % 2 == 0 or K % 5 == 0:\n    count = -1\n    print(count)\nelse:\n    while True:\n        n = (n*10+7)%K\n        if n == 0:\n            break\n        count += 1\n    print(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "10055": {"id": 10055, "code": "N = 6\nS = \")))())\"\nT = S\nfor n in range(N):\n  T = T.replace(\"()\",\"\")\nL = T.count(\"(\")\nR = T.count(\")\")\nS = R*\"(\"+S+L*\")\"\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7573": {"id": 7573, "code": "H = 10;N = 3\nprint(\"NYoe s\"[H<=sum(map(int,\"4 5 6\".split()))::2])", "coverage": [">", ">"]}, "6901": {"id": 6901, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nA.sort()\nA = A[:N]\ns = sum(A)\nans = 'No'\nif s >= H:\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5678": {"id": 5678, "code": "a = 2\nprint(-(-a//2))", "coverage": [">", ">"]}, "10282": {"id": 10282, "code": "N = 8\nS = \"))))((((\"\nl = 0\nr = 0\nfor c in S:\n    if c == '(':\n        l += 1\n    else:\n        if l != 0:\n            l -= 1\n        else:\n            r += 1\nprint('('*r + S + ')'*l)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "3052": {"id": 3052, "code": "S = \"1234567876\"\nZ = 753\nfor i in range(3, len(S)+1):\n  s = int(S[i-3:i])\n  a = abs(753-s)\n  if Z-a>0:\n    Z = a\nprint(Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16769": {"id": 16769, "code": "x = \"D\";y = \"D\"\nif x == \"H\" and y == \"H\" or x == \"D\" and y == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "5261": {"id": 5261, "code": "n = \"1479\"\nif n == '1479':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "17508": {"id": 17508, "code": "S = \"1905\"\nhigh = int(S[0:2])\nlow = int(S[2:4])\nif 1<= high <= 12:\n    if 1<= low <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nif high < 1 or high > 12:\n    if 1<= low <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "4179": {"id": 4179, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt1=h1*60+m1\nt2=h2*60+m2\nprint(max(t2-t1-k,0))", "coverage": [">", ">", ">", ">"]}, "18850": {"id": 18850, "code": "import math\nh = 3\nw = 7\nn = 10\nif h < w:\n    h = w\nprint(math.ceil(n / h))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10113": {"id": 10113, "code": "n = 6\ns = \")))())\"\nfrom collections import deque\nq = deque([])\ncnt = 0\nfor i in range(n):\n    if s[i]==')':\n        if cnt >0:\n            cnt-=1\n        else:\n            q.appendleft('(')\n        q.append(')')\n    else:\n        q.append('(')\n        cnt += 1\nif cnt:\n    for _ in range(cnt):\n        q.append(')')\nprint(''.join(q))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "18749": {"id": 18749, "code": "h = 14\nw = 12\nn = 112\nm=max(h,w)\nif n%m==0:\n  print(int(n/m))\nelse:\n  print(int(n/m+1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "1127": {"id": 1127, "code": "n = ['7', '5', '0']\nN = [int(n[i]) for i in range(len(n))]\nif N[0] == max(N):\n  print(max(N) * 100 + max(N)*10 + max(N))\nelse:\n  m = N[0]+1\n  print(m * 100 + m * 10 + m)", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "4657": {"id": 4657, "code": "S = \"internationalization\"\nN = len(S)-2\nprint(S[0]+str(N)+S[-1])", "coverage": [">", ">", ">"]}, "2767": {"id": 2767, "code": "S = \"1234567876\"\nresult = 10 ** 9\nfor i in range(len(S) - 3 + 1):\n  result = min(result, abs(753 - int(S[i:i+3])))\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "15256": {"id": 15256, "code": "x = 13;y = 3;z = 1\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "8620": {"id": 8620, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = []\nfor i in range(n+1):\n    if i == 0:\n        ans.append(sum(a1))\n    elif 1<=i<=n:\n        ans.append(sum(a1[:i]) + sum(a2[i-1:]))\n    elif i==n:\n        ans.append(sum(a2))\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18070": {"id": 18070, "code": "s = \"1905\"\na,b = int(s[:2]),int(s[2:])\nyymm = False\nmmyy = False\nif b > 0 and b <= 12:\n  yymm = True\nif a <= 12 and 0 < a:\n  mmyy = True\nif yymm and mmyy:\n  print(\"AMBIGUOUS\")\nelif yymm:\n  print(\"YYMM\")\nelif mmyy:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "8778": {"id": 8778, "code": "N = 7\nrow1 = [3, 3, 4, 5, 4, 5, 3]\nrow2 = [5, 3, 4, 4, 2, 3, 2]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5536": {"id": 5536, "code": "n = 5\ngou=n//2\ngou+=n%2\nprint(gou)", "coverage": [">", ">", ">", ">"]}, "6857": {"id": 6857, "code": "h = 10;n = 3\na = [4, 5, 6]\nx = sum(a)\nif (h - x) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "6247": {"id": 6247, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nali = [0] * (N+1)\nbli = [N - bisect.bisect_left(C,B[i]+1) for i in range(N)]\nfor i in range(N):\n    ali[i+1] = ali[i] + bli[i]\nprint(sum([ali[N]-ali[bisect.bisect_left(B,A[i]+1)] for i in range(N)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13232": {"id": 13232, "code": "import sys\ninput = sys.stdin.readline\nS = \"happy,newyear,enjoy\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">", ">", ">"]}, "9414": {"id": 9414, "code": "S = \"2017/01/07\"\nprint(S.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "5979": {"id": 5979, "code": "N = 100\nA = N // 2\nB = N % 2\nprint(A + B)", "coverage": [">", ">", ">", ">"]}, "11301": {"id": 11301, "code": "l = ['_', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\ns = \"SUN\"\nprint(l.index(s))", "coverage": [">", ">", ">"]}, "14100": {"id": 14100, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nup_or_down = 0\nans = 1\nfor i in range(len(A) - 1):\n    if up_or_down == 0:\n        up_or_down = A[i+1] - A[i]\n    else:\n        if up_or_down > 0 and A[i+1] - A[i] < 0:\n            ans += 1\n            up_or_down = 0\n        elif up_or_down < 0 and A[i+1] - A[i] > 0:\n            ans += 1\n            up_or_down = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "11566": {"id": 11566, "code": "s = \"SUN\"\nl = [0,'SAT','FRI','THU','WED','TUE','MON','SUN']\nprint(l.index(s))", "coverage": [">", ">", ">"]}, "5616": {"id": 5616, "code": "N = 100\nA = N / 2\nA = int(A)\nB = (N + 1) / 2\nB = int(B)\nif N % 2 == 0:\n  print(A)\nelse:\n  print(B)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10651": {"id": 10651, "code": "a = 8;b = 12;k = 2\nprint([i for i in range(1, 1+min(a, b)) if a%i==0 and b%i==0][-k])", "coverage": [">", ">"]}, "1623": {"id": 1623, "code": "x = 10;a = 7;b = 5\nma  = min(a,b)\nmi = max(0,a+b-x)\nprint(ma,mi)", "coverage": [">", ">", ">", ">"]}, "13368": {"id": 13368, "code": "a = \"haiku,atcoder,tasks\"\nprint(a.replace(\",\", \" \"))", "coverage": [">", ">"]}, "6800": {"id": 6800, "code": "H = 211;N = 5\nmy_list = [31, 41, 59, 26, 53]\nif H <= sum(my_list):\n    answer = 'Yes'\nelse:\n    answer = 'No'\nprint(answer)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "15334": {"id": 15334, "code": "from sys import stdin\nimport math\nx = 64145;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "11077": {"id": 11077, "code": "import math\ns = ['l', 'e', 'v', 'e', 'l']\nn = len(s)\ns1 = s[ : (n-1) // 2]\ns2 = s[(n+3) // 2 - 1 : n]\nflag = 1\nfor i in range(len(s) // 2):\n    if s[i] != s[- i - 1]:\n        flag = 0\nfor i in range(len(s1) // 2):\n    if s1[i] != s1[- i - 1]:\n        flag = 0\nfor i in range(len(s2) // 2):\n    if s2[i] != s2[- i - 1]:\n        flag = 0\nprint('Yes' if flag == 1  else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "10489": {"id": 10489, "code": "a = 1;b = 1;k = 1\nl = [i for i in range(1, min(a, b) + 1) if not (a % i or b % i)]\nprint(l[-k])", "coverage": [">", ">", ">"]}, "462": {"id": 462, "code": "S = ['a']\nk = 25\nfor i in range(len(S)):\n    s=S[i]\n    if s==\"a\":continue\n    x=123-ord(s)\n    if k>=x:\n        k-=x\n        S[i]=\"a\"\n    else:continue\nk%=26\nfor i in range(len(S)):\n    if S[-1-i]!=\"a\":\n        S[-1-i]=chr((ord(S[-1-i])-97+k%26)+97)\n        print(\"\".join(S));break\nelse:\n    S[-1]=chr((ord(S[-1])-97+k%26)+97)\n    print(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "6010": {"id": 6010, "code": "import math\nimport sys\ns = 5\nprint(math.ceil(s / 2))", "coverage": [">", ">", ">", ">"]}, "14311": {"id": 14311, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nmono = 0\nfor i in range(1, n):\n  d = a[i] - a[i - 1]\n  if d * mono < 0:\n    cnt += 1\n    mono = 0\n  elif d != 0:\n    mono = d\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3304": {"id": 3304, "code": "import sys\ninput = \"<function <lambda>>\"\na = 12;b = 4\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "1057": {"id": 1057, "code": "N = 111\nfor i in range(N,1000):\n    S = str(i)\n    if S[0] == S[1] and S[1] == S[2]:\n        out = i\n        break\nprint(out)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17706": {"id": 17706, "code": "s = \"1905\"\nans = 'NA'\nif 1 <= int(s[:2]) <= 12:\n    ans = 'MMYY'\n    if 1 <= int(s[2:]) <= 12:\n        ans = 'AMBIGUOUS'\nelif 1 <= int(s[2:]) <= 12:\n    ans = 'YYMM'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "7492": {"id": 7492, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nhoge = sum(a)\nh -= hoge\nif h <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15843": {"id": 15843, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nX = 64145;Y = 123;Z = 456\nprint((X - Z) // (Z + Y))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19535": {"id": 19535, "code": "n = 10\nprint(n if n%2==0 and n%n==0 else n*2)", "coverage": [">", ">"]}, "9068": {"id": 9068, "code": "import itertools\nimport math\nantena = []\nantena.append(int(\"1\"))\nantena.append(int(\"2\"))\nantena.append(int(\"4\"))\nantena.append(int(\"8\"))\nantena.append(int(\"9\"))\nk = 15\nfor v in itertools.combinations(antena, 2):\n    if v[1] - v[0] > k:\n        print(\":(\")\n        quit()\nprint('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17330": {"id": 17330, "code": "a = \"D\";b = \"D\"\nprint('DH'[a==b])", "coverage": [">", ">"]}, "17399": {"id": 17399, "code": "S = \"1700\"\nL, R =  map(int, [S[:2], S[2:]])\nif 1 <= L <= 12 and 1 <= R <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= L <= 12 and (R == 0 or R > 12):\n  print(\"MMYY\")\nelif (L == 0 or L > 12) and 1 <= R <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4100": {"id": 4100, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ntime = (h2 - h1) * 60\ntime += m2 - m1\nprint(time - k)", "coverage": [">", ">", ">", ">"]}, "5717": {"id": 5717, "code": "n = 2\na = n / 2\nif n % 2 == 0:\n    print(int(a))\nelse:\n    print(int(a)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11016": {"id": 11016, "code": "s1 = \"atcoder\"\ns1r = s1[::-1]\nn1 = len(s1)\ns2 = s1[:(n1-1)//2]\ns2r = s2[::-1]\ns3 = s1[-(n1-1)//2:]\ns3r = s3[::-1]\nif s1 == s1r and s2 == s2r and s3 == s3r:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16587": {"id": 16587, "code": "a = \"H\";b = \"H\"\np = a + b\np1 = list(set(p))\nif len(p1) == 1:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3495": {"id": 3495, "code": "a = 20;b = 30\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12312": {"id": 12312, "code": "s = \"level\"\nn = len(s)\ns_re =s[::-1]\ns_first = s[:(n-1)//2]\ns_first_re = s_first[::-1]\ns_second = s[(n+3)//2-1:]\ns_second_re = s_second[::-1]\nprint(['No','Yes'][s == s_re and s_first==s_first_re and s_second == s_second_re])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19491": {"id": 19491, "code": "n = 10\nif n%2!=0: n*=2\nprint(n)", "coverage": [">", ">", ">"]}, "4533": {"id": 4533, "code": "l = \"xyz\"\nprint(l[0]+str(len(l)-2)+l[-1])", "coverage": [">", ">"]}, "1418": {"id": 1418, "code": "n = 111\nwhile(1):\n  a=str(n)\n  if a.count(a[0])==3:\n    break\n  n+=1\nprint(n)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "6695": {"id": 6695, "code": "h = 10;a = 3\narr = [4, 5, 6]\nfor i in arr:\n    h-=i\nprint(\"Yes\" if h<=0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "8310": {"id": 8310, "code": "import math\nn = 8;k = 3\ns = [7, 3, 1, 8, 4, 6, 2, 5]\ns.sort()\ns.remove(s[0])\nans = math.ceil(len(s)/(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6281": {"id": 6281, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncount = 0\nfor j in range(N):\n    c = N-bisect.bisect_right(C,B[j])\n    b = bisect.bisect_right(A,B[j]-1)\n    count += b*c\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12167": {"id": 12167, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(0 if D1 + 1 == D2 else 1)", "coverage": [">", ">", ">"]}, "4109": {"id": 4109, "code": "h_1 = 10;m_1 = 0;h_2 = 12;m_2 = 0;k = 120\nif m_2-k>=0:\n    m_2 -= k\nelse:\n    tmp = k - m_2\n    m_2 = 60 - tmp\n    h_2 -= 1\ntmp_1 = h_1 * 60 + m_1\ntmp_2 = h_2 * 60 + m_2\nans = tmp_2 - tmp_1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "1136": {"id": 1136, "code": "N = 750\nif N<=111:\n    print(111)\nelif 112<=N and N<=222:\n    print(222)\nelif 223<=N and N<=333:\n    print(333)\nelif 334<=N and N<=444:\n    print(444)\nelif 445<=N and N<=555:\n    print(555)\nelif 556<=N and N<=666:\n    print(666)\nelif 667<=N and N<=777:\n    print(777)\nelif 778<=N and N<=888:\n    print(888)\nelif 889<=N and N<=999:\n    print(999)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "12866": {"id": 12866, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nx = 5\nif x == 7 or x == 5 or x == 3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9452": {"id": 9452, "code": "s = \"2017/01/07\"\nprint(s[:3]+str(8)+s[4:])", "coverage": [">", ">"]}, "17534": {"id": 17534, "code": "S = \"1700\"\nif int(S[:2]) > 12 or int(S[:2]) == 0:\n  if int(S[2:]) > 12 or int(S[2:]) == 0: print('NA')\n  else: print('YYMM')\nelse:\n  if int(S[2:]) > 12 or int(S[2:]) == 0: print('MMYY')\n  else: print('AMBIGUOUS')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "13818": {"id": 13818, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount=0\ni=0\nwhile i < n:\n    j=i\n    while j < n-1 and A[j]<=A[j+1]:\n        j += 1\n    k=i\n    while k < n-1 and A[k]>=A[k+1]:\n        k += 1\n    count += 1\n    i = max(j,k)+1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7453": {"id": 7453, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif sum(A) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "5155": {"id": 5155, "code": "S = \"internationalization\"\n_S=S[0]+str(len(S)-2)+S[-1]\nprint(_S)", "coverage": [">", ">", ">"]}, "18583": {"id": 18583, "code": "H = 2\nW = 100\nN = 200\nB=max(H,W)\nans=(N+B-1)//B\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16358": {"id": 16358, "code": "from bisect import bisect_right\nn = 5\na = [2, 4, 6, 9, 11]\npos = bisect_right(a, a[-1]/2)\nif pos == 0 or abs(a[-1]/2 - a[pos-1]) > abs(a[-1]/2 - a[pos]):\n    print(a[-1], a[pos])\nelse:\n    print(a[-1], a[pos-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "17740": {"id": 17740, "code": "s = \"0112\"\nif 0<int(s[:2])<=12:\n    if 0<int(s[2:])<=12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 0<int(s[2:])<=12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8815": {"id": 8815, "code": "n = 1\nup = [2]\nlow = [3]\nleft = [up[0]]\nright = [0 for i in range(n)]\nright[-1] = low[-1]\nfor i in range(1, n):\n    left.append(left[i-1] + up[i])\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + low[i]\nans = 0\nfor i in range(n):\n    ans = max(left[i] + right[i], ans)\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">"]}, "12255": {"id": 12255, "code": "S = \"akasaka\"\nN=len(S)\nr_S=S[::-1]\nc1=int((N-1)/2)\nc2=int((N+3)/2)\nS1=S[:c1]\nr_S1=S1[::-1]\nS2=S[(c2-1):]\nr_S2=S2[::-1]\nif S==r_S and S1==r_S1 and S2==r_S2:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "1040": {"id": 1040, "code": "n = 111\nfor i in range(110):\n    if n % 111 == 0:\n        break\n    else:\n        n += 1\nprint(n)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2193": {"id": 2193, "code": "n = 100;a = 100;k = 100\nif a >= k:\n\tmax = k\nelse:\n\tmax = a\nmin = a + k - n\nif min < 0:\n\tmin = 0\nprint(max, min)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "13234": {"id": 13234, "code": "import sys\ninput = sys.stdin.readline\nS = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">", ">", ">"]}, "17525": {"id": 17525, "code": "s = \"1700\"\nx = int(s) // 100\ny = int(s) % 100\nif 1 <= x <= 12:\n  if 1 <= y <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= y <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "15447": {"id": 15447, "code": "X = 64145;Y = 123;Z = 456\nans = (((X-Z)//(Y+Z)))\nprint(ans)", "coverage": [">", ">", ">"]}, "10006": {"id": 10006, "code": "N = 3\nS = \"())\"\nx, y, z=0, 0, 0\nfor i in range(N):\n  if S[i]=='(':\n    x+=1\n  else:\n    y+=1\n  z=min(z, x-y)\nprint('('*-z+S+')'*max(0, x-z-y))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "2976": {"id": 2976, "code": "S = \"1234567876\"\nMIN=10**9\nfor i in range(len(S)-2):\n  tmp = abs(int(S[i:i+3])-753)\n  if tmp < MIN:MIN=tmp\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3926": {"id": 3926, "code": "X = 64145;Y = 123;Z = 456\nprint(int((X-Z)/(Z+Y)))", "coverage": [">", ">"]}, "18182": {"id": 18182, "code": "S = 1905\nL = S // 100 \nR = S % 100 \nif 1 <= L <= 12:\n  if 1 <= R <= 12: print('AMBIGUOUS')\n  else: print('MMYY')\nelse:\n  if 1 <= R <= 12: print('YYMM')\n  else: print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", "!"]}, "9240": {"id": 9240, "code": "s = \"2017/01/07\"\nprint(s.replace('2017/', '2018/'))", "coverage": [">", ">"]}, "3729": {"id": 3729, "code": "X = 64146;Y = 123;Z = 456\ns = X - (X//(Y+Z))*(Y+Z)\nprint(X//(Y+Z) if s >= Z else X//(Y+Z)-1)", "coverage": [">", ">", ">"]}, "8181": {"id": 8181, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nN -= K\nK -= 1\nC = math.ceil(N/K)\nprint(C+1)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7757": {"id": 7757, "code": "NK = [4, 3]\nno = [2, 3, 1, 4]\nzan = NK[0]\ncounter = 0\nwhile(NK[1] < zan):\n    zan -= NK[1] - 1\n    counter += 1\nprint(counter + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3726": {"id": 3726, "code": "X = 13;Y = 3;Z = 1\ns = X - (X//(Y+Z))*(Y+Z)\nprint(X//(Y+Z) if s >= Z else X//(Y+Z)-1)", "coverage": [">", ">", ">"]}, "18048": {"id": 18048, "code": "S = \"1700\"\na=1<=int(S[:2])<=12\nb=1<=int(S[-2:])<=12\nif a & b: print('AMBIGUOUS')\nelif a:   print('MMYY')\nelif b:   print('YYMM')\nelse:     print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19128": {"id": 19128, "code": "n = 12\nif n & 1:\n    print(0)\nelse:\n    ans = 0\n    x = 10\n    while n >= x:\n        ans += n // x\n        x *= 5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18509": {"id": 18509, "code": "a = 3\nb = 7\nc=max(a,b)\nn = 10\nif n%c==0:\n  print(n//c)\nelse:\n  print(n//c +1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16637": {"id": 16637, "code": "a = \"D\";b = \"D\"\nif a==\"H\":\n    if b==\"H\":\n        ans=\"H\"\n    elif b==\"D\":\n        ans=\"D\"\nelif a==\"D\":\n    if b==\"H\":\n        ans=\"D\"\n    elif b==\"D\":\n        ans=\"H\"\nprint(ans)", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">"]}, "5100": {"id": 5100, "code": "s = \"xyz\"\nlength = len(s)-2\nprint(s[0]+str(length)+s[-1])", "coverage": [">", ">", ">"]}, "16017": {"id": 16017, "code": "A = 20;B = 15\nif(A<=B*2):\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "4245": {"id": 4245, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nf=60*c+d-60*a-b-e\nprint(f)", "coverage": [">", ">", ">"]}, "17722": {"id": 17722, "code": "s = ['0', '1', '1', '2']\ns1=\"\".join(s[:2])\ns2=\"\".join(s[2:])\nif 0<int(s1)<=12 and 0<int(s2)<=12:\n    print(\"AMBIGUOUS\")\nelif 0<int(s1)<=12 and (int(s2)>12 or int(s2)==0):\n    print(\"MMYY\")\nelif 0<int(s2)<=12 and (int(s1)>12 or int(s1)==0):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9341": {"id": 9341, "code": "y = \"2017\";m = \"01\";d = \"31\"\nans = '2018/'+m+'/'+d\nprint(ans)", "coverage": [">", ">", ">"]}, "5767": {"id": 5767, "code": "n = 5\nif n % 2 != 0:\n    print(int(n/2) + 1)\nelif n % 2 == 0:\n    print(int(n/2))", "coverage": [">", ">", ">", "!", "!"]}, "7841": {"id": 7841, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nn-=1\nk-=1\nif n%k==0: print(n//k)\nelse: print(n//k+1)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11984": {"id": 11984, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "1479": {"id": 1479, "code": "import bisect\nN = 750\nA = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nprint(A[bisect.bisect_left(A, N)])", "coverage": [">", ">", ">", ">"]}, "18273": {"id": 18273, "code": "h = 14\nw = 12\nn = 112\np = max(h, w)\nprint((n+p-1)//p)", "coverage": [">", ">", ">", ">", ">"]}, "6478": {"id": 6478, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\ni = 0\nj = 0\nfor b in B:\n    while i < N and A[i] < b:\n        i += 1\n    while j < N and C[j] <= b:\n        j += 1\n    ans += i * (N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11544": {"id": 11544, "code": "A = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nP = \"SUN\"\nprint(7-A.index(P))", "coverage": [">", ">", ">"]}, "4349": {"id": 4349, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nif H2 < H1:\n    H2 = H2 + 24\nif H1 == H2 and H2 < H1:\n    H2 = H2 + 24\ntime2m = H2 * 60 + M2\ntime1m = H1 * 60 + M1\nstudy_time = time2m - K - time1m\nif study_time <= 0:\n    print(0)\nelse:\n    print(study_time)", "coverage": [">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "1311": {"id": 1311, "code": "N = 111\nans = 111\nwhile ans < N:\n    ans += 111\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "16546": {"id": 16546, "code": "a = \"D\";b = \"H\"\nans = 'H' if a == b else 'D'\nprint(ans)", "coverage": [">", ">", ">"]}, "11583": {"id": 11583, "code": "youbi=['MON','TUE','WED','THU','FRI','SAT','SUN']\ns = \"SAT\"\nfor i in range(len(youbi)):\n  if s=='SUN':\n    print(7)\n    exit()\n  elif youbi[i]==s:\n    print(6-i)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "7082": {"id": 7082, "code": "H = 211;N = 5\na = [31, 41, 59, 26, 53]\nif H > sum(a):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7279": {"id": 7279, "code": "h = 10;n = 3\na = [4, 5, 6]\nif sum(a) >= h: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", "!"]}, "18428": {"id": 18428, "code": "from math import ceil\nh = 3\nw = 7\nn = 10\nprint(ceil(n/max(h,w)))", "coverage": [">", ">", ">", ">", ">"]}, "16733": {"id": 16733, "code": "a = \"D\";b = \"D\"\nif a == \"H\":print(b)\nelif b == \"H\":print(\"D\")\nelse : print(\"H\")", "coverage": [">", ">", ">", ">"]}, "1679": {"id": 1679, "code": "N = 10;A = 3;B = 5\nS=min(A,B)\nT=0\nif A+B >N:\n  T=(A+B)-N\nprint(S,T)", "coverage": [">", ">", ">", ">", "!", ">"]}, "5940": {"id": 5940, "code": "N = 100\nprint(int(N/2) + N%2)", "coverage": [">", ">"]}, "15685": {"id": 15685, "code": "import sys\ninput = sys.stdin.readline\nX = 12;Y = 3;Z = 1\nans = 0\nX -= Z\nans += (X // (Y + Z))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9901": {"id": 9901, "code": "n = 8\ns = \"))))((((\"\nl=[]\nfor i in s:\n  if i==')':\n    if len(l)>0:\n      if l[-1]=='(':\n        l.pop()\n      else:\n        l.append(i)\n    else:\n      l.append(i)\n  else:\n    l.append(i)\nprint(l.count(')')*'(' + s +l.count('(')*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", "!", ">", ">"]}, "2284": {"id": 2284, "code": "n = 10;a = 3;b = 5\nprint(min(a, b), max(0, a + b - n))", "coverage": [">", ">"]}, "17213": {"id": 17213, "code": "a = \"D\";b = \"D\"\nhatsugen=[\"H\",\"D\"]\nidx=hatsugen.index(b)\nif a==\"H\":\n    print(hatsugen[idx])\nelse:\n    print(hatsugen[1-idx])", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2911": {"id": 2911, "code": "n = \"1234567876\"\nans=753\nfor i in range(len(n)-2):\n  a=int(n[i:i+3])\n  if a==753:\n    print(0)\n    exit()\n  b=abs(753-a)\n  ans=min(b,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "4165": {"id": 4165, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;K = 120\nH=h2-h1\nM=m2-m1\nif(M<0):\n  M += 60\n  H -= 1\nif(H<0):\n  H += 24\nM += H*60\nans =M - K\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">"]}, "15550": {"id": 15550, "code": "x = 100000;y = 1;z = 1\nyz = y + z\nx -= z\nprint(x // yz)", "coverage": [">", ">", ">", ">"]}, "17257": {"id": 17257, "code": "a = \"D\";b = \"H\"\nans = \"HD\"\nindex = ans.index(b)\nif ans.index(a):\n    print(ans[index-1])\nelse:\n    print(ans[index])", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "285": {"id": 285, "code": "s = ['x', 'y', 'z']\nk = 4\nfor e,i in enumerate(s):\n    c=(123-ord(i))%26\n    if k>=c:\n        s[e]=\"a\"\n        k-=c\n    else:s[e]=i\nl = chr((ord(s[-1])-97+k)%26+97)\nprint(\"\".join(s[:-1])+l)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5804": {"id": 5804, "code": "n = 2\nif n % 2 == 0:\n    print(int(n/2))\nelse:\n    print(n//2 + 1)", "coverage": [">", ">", ">", "!", "!"]}, "13258": {"id": 13258, "code": "s = \"abcde,fghihgf,edcba\"\ns = s.replace(\",\", \" \", 3)\nprint(s)", "coverage": [">", ">", ">"]}, "1135": {"id": 1135, "code": "N = 112\nif N<=111:\n    print(111)\nelif 112<=N and N<=222:\n    print(222)\nelif 223<=N and N<=333:\n    print(333)\nelif 334<=N and N<=444:\n    print(444)\nelif 445<=N and N<=555:\n    print(555)\nelif 556<=N and N<=666:\n    print(666)\nelif 667<=N and N<=777:\n    print(777)\nelif 778<=N and N<=888:\n    print(888)\nelif 889<=N and N<=999:\n    print(999)", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "14429": {"id": 14429, "code": "n = 7;a = [1, 2, 3, 2, 1, 999999999, 1000000000];b = -1;x = 1\nfor i in range(n-1):\n    if b == 0:\n        if a[i] > a[i+1]: b = -1; x += 1\n    elif b == 1:\n        if a[i] < a[i+1]: b = -1; x += 1\n    else:\n        if a[i] < a[i+1]: b = 0\n        elif a[i] > a[i+1]: b = 1\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "1695": {"id": 1695, "code": "n = 10;a = 7;b = 5\nmin_num = max(0, a + b - n)\nmax_num = min(a, b)\nprint(*[max_num, min_num])", "coverage": [">", ">", ">", ">"]}, "11841": {"id": 11841, "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nif d_2!=d_1+1:\n\tprint(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "14787": {"id": 14787, "code": "n = 1;p = 1\na = [50]\nif all([i%2 == 0 for i in a]):\n  if p == 1:\n    print(0)\n  else:\n    print(pow(2,n))\nelse:\n  print(pow(2,n-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "17410": {"id": 17410, "code": "s = \"0112\"\nif 1<=int(s[:2])<=12 and 1<=int(s[2:4])<=12:print(\"AMBIGUOUS\")\nelif 1<=int(s[:2])<13:print(\"MMYY\")\nelif 1<=int(s[2:4])<13:print(\"YYMM\")\nelse :print(\"NA\")", "coverage": [">", ">", "!", "!", "!"]}, "5373": {"id": 5373, "code": "a = 100\nres = 0\nif a%2 ==0:\n  res = int(a/2)\nelse:\n  a +=1\n  res = int(a/2)\nprint(res)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "12583": {"id": 12583, "code": "a = 8;b = 12;k = 2\nl = []\nfor i in range(1,min(a,b)+1):\n    if a%i == 0 and b%i == 0:\n        l.append(i)\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">"]}, "6455": {"id": 6455, "code": "from bisect import bisect\nfrom collections import deque\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nBC_ruiseki = deque([0])\nfor i, b in enumerate(B):\n  BC_ruiseki.append(BC_ruiseki[i] + N - bisect(C, b))\nans = 0\nfor a in A:\n  idx = bisect(B, a)\n  ans += BC_ruiseki[-1] - BC_ruiseki[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4536": {"id": 4536, "code": "s = \"xyz\"\nsl = len(s)\nprint(s[0]+str(sl-2)+s[sl-1])", "coverage": [">", ">", ">"]}, "2777": {"id": 2777, "code": "s = \"35753\"\nm = 1000\nfor i in range(len(s)):\n    x = int(s[i:i+3])\n    if m > abs(753-x):\n        m = abs(753-x)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1052": {"id": 1052, "code": "N = 112\nnow=111\nwhile now<N:\n    now+=111\nprint(now)", "coverage": [">", ">", ">", ">", ">"]}, "9088": {"id": 9088, "code": "s = \"2017/01/07\"\nans = s[:3] + '8' + s[4:10]\nprint(ans)", "coverage": [">", ">", ">"]}, "11192": {"id": 11192, "code": "s = \"akasaka\"\nn = len(s)\ns2 = s[:(n-1)//2]\ns3 = s[((n+3)//2)-1:]\nif (s == s[::-1]) & (s2 == s2[::-1]) & (s3 == s3[::-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "10997": {"id": 10997, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn = len(s)\nflag = 0\nfor i in range(n//2):\n    if s[i] != s[n-i-1]:\n        flag = 1\nif flag == 0:\n    s2 = s[:(n-1)//2]\n    n2 = len(s2)\n    for i in range(n2//2):\n        if s2[i] != s2[n2-i-1]:\n            flag = 1\nif flag == 0:\n    if flag == 0:\n        s2 = s[(n+3)//2-1:]\n        n2 = len(s2)\n    for i in range(n2//2):\n        if s2[i] != s2[n2-i-1]:\n            flag = 1\nif flag == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "15369": {"id": 15369, "code": "X = 13;Y = 3;Z = 1\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "12810": {"id": 12810, "code": "x = 5\nif x != 7 and x != 5 and x != 3:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "coverage": [">", ">", "!", "!", ">"]}, "18266": {"id": 18266, "code": "import math\nh = 3\nw = 7\nn = 10\nprint(math.ceil(n / h) if h > w else math.ceil(n / w))", "coverage": [">", ">", ">", ">", ">"]}, "5712": {"id": 5712, "code": "i = 100\nprint(i//2+i%2)", "coverage": [">", ">"]}, "7701": {"id": 7701, "code": "from math import ceil\nN = 3;K = 3\nll = [1, 2, 3]\nprint(ceil((N-1) / (K-1)))", "coverage": [">", ">", ">", ">"]}, "17637": {"id": 17637, "code": "s = \"1905\"\na = (1 <= int(s[:2]) <= 12)\nb = (1 <= int(s[2:]) <= 12)\nif a and b:\n    print(\"AMBIGUOUS\")\nelif a:\n    print(\"MMYY\")\nelif b:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "14543": {"id": 14543, "code": "n = 2;p = 0\na = [1, 3]\nfor i in range(n):a[i]%=2\no=a.count(1)\nz=n-o\nif o==0:\n  if p==0:print(2**z)\n  else:print(0)\nelse:\n  print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "15756": {"id": 15756, "code": "X = 100000;Y = 1;Z = 1\nN = ((X - Z ) // (Y + Z))\nprint(N)", "coverage": [">", ">", ">"]}, "8006": {"id": 8006, "code": "n = 4;k = 3\nA = [2, 3, 1, 4]\nmin_a = A.index(min(A))\nleft = min_a\nright = n - min_a - 1\nmin_ = min(left, right)\nmax_ = max(left, right)\nt = 0\nmin_ = min_ - k\nt +=1\ntemp = 0\nif min_ > 0:\n    if min_ % (k - 1) != 0:\n        temp = min_ // (k - 1)\n    else:\n        temp = min_ // (k - 1) + 1\n    min_ -= temp * (k - 1)\nt += temp\nmax_ = max_ + min_ + 1\nif max_ % (k - 1) == 0:\n    t += max_ // (k - 1)\nelse:\n    t += max_ // (k - 1) + 1\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "4634": {"id": 4634, "code": "s = \"smiles\"\ns1 = s[0]\ns2 = s[-1]\nl = len(s[1:-1])\nprint(s1+str(l)+s2)", "coverage": [">", ">", ">", ">", ">"]}, "16030": {"id": 16030, "code": "A = 20;B = 30\ncal = A - B * 2\nif cal >= 0:\n    print(cal)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "6718": {"id": 6718, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif h <= sum(a):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3944": {"id": 3944, "code": "x = 64145;y = 123;z = 456\nw = x - z\nprint(w // (y + z))", "coverage": [">", ">", ">"]}, "7940": {"id": 7940, "code": "n = 4;k = 3\nlst = [2, 3, 1, 4]\nimport math\np=len(lst)\np-=k\nans=1\nans+=math.ceil(p/(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15741": {"id": 15741, "code": "X = 64145;Y = 123;Z = 456\nans = X//(Y+Z)\nif X%(Y+Z) >= Z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14412": {"id": 14412, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\ni = 0\nwhile i < n:\n    while i+1 < n and a[i] == a[i+1]:\n        i += 1\n    if i+1 < n and a[i] < a[i+1]:\n        while i+1 < n and a[i] <= a[i+1]:\n            i += 1\n    elif i+1 < n and a[i] > a[i+1]:\n        while i+1 < n and a[i] >= a[i+1]:\n            i += 1\n    ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18946": {"id": 18946, "code": "n = 5\nif n==0 or n%2==1:\n  print(0)\nelse:\n  k=n//2\n  s=5\n  ans=0\n  while k>=s:\n    ans+=k//s\n    s*=5\n  print (ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "536": {"id": 536, "code": "s = ['a']\nk = 25\ncnt = 0\nans = ''\nfor i in range(len(s)):\n    cnt = (ord('z') - ord(s[i]) + 1) % 26\n    if cnt <= k:\n        k -= cnt\n        s[i] = 'a'\ns[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3212": {"id": 3212, "code": "s = \"1111111111\"\nl = len(s)\nans = 999\nfor i in range(l - 2):\n    a = int(s[i:i + 3])\n    b = abs(753 - a)\n    if b < ans:\n        ans = b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10484": {"id": 10484, "code": "a = \"100\";b = \"50\";c = \"4\"\na=int(a)\nb=int(b)\nc=int(c)\nd=0\nif a>=b:\n  for i in range(101):\n    if a%(b-i)==0 and b%(b-i)==0:\n      d=d+1\n      if d==c:\n        print(b-i)\n        break\nif a<b:\n  for i in range(101):\n    if a%(a-i)==0 and b%(a-i)==0:\n      d=d+1\n      if d==c:\n        print(a-i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16422": {"id": 16422, "code": "import sys\nsys.setrecursionlimit(2147483647)\nn = 5\naa = [6, 9, 4, 2, 11]\nif n==2:\n    print(aa[0],aa[1])\n    exit()\naa.sort()\nnn=max(aa)\nc=0\ntmp=10**9\nfor a in aa:\n    if abs(nn/2.0-a)<tmp:\n        tmp=abs(nn/2.0-a)\n        c=a\nprint(nn,c)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15381": {"id": 15381, "code": "x = 13;y = 3;z = 1\nret = (x-z)//(y+z)\nprint(ret)", "coverage": [">", ">", ">"]}, "862": {"id": 862, "code": "K = 2\ncount =1\nx = 7%K\nfor i in range(0,K+1):\n    if x== 0:\n        print(count)\n        break\n    count+=1\n    x = (x*10+7)%K\nif i== K:  \n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15175": {"id": 15175, "code": "x = 13;y = 3;z = 1\nx-=z\nprint((x-x%(y+z))//(y+z))", "coverage": [">", ">", ">"]}, "18377": {"id": 18377, "code": "import math\nif __name__=='__main__':\n   H = 3\n   W = 7\n   N = 10\n   t = math.ceil(N/(H if H>W else W))\n   print (t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4630": {"id": 4630, "code": "s = \"internationalization\"\nprint(\"{0}{1}{2}\".format(s[:1], (len(s)-2), s[-1:]))", "coverage": [">", ">"]}, "16028": {"id": 16028, "code": "A = 12;B = 4\ncal = A - B * 2\nif cal >= 0:\n    print(cal)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13811": {"id": 13811, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nleft = 0\nright = 1\ncou = 0\nf = 2\nwhile right!=n and right!=n+1:\n  if l[left]==l[right]:\n    left += 1\n    right += 1\n  elif l[left]<l[right]:\n    while right!=n and l[left]<=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left +=1\n    right += 1\n    f = 1\n  else:\n    while right!=n and l[left]>=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left += 1\n    right += 1\n    f = 0\nif f==2:\n  cou += 1\nelif f==1 and l[-2]>l[-1]:\n  cou += 1\nelif f==0 and l[-2]<l[-1]:\n  cou += 1\nprint(cou)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", ">"]}, "15536": {"id": 15536, "code": "x = 64145;y = 123;z = 456\nans = int(x/(y+z))\nif x%(y+z) < z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3992": {"id": 3992, "code": "a = 100000;b = 1;c = 1\na -= c\nprint(a//(b+c))", "coverage": [">", ">", ">"]}, "13645": {"id": 13645, "code": "A = \"abcde\";B = \"fghihgf\";C = \"edcba\"\nprint(A, B, C)", "coverage": [">", ">"]}, "4277": {"id": 4277, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nT = (H2 - H1) * 60 + (M2 - M1)\nprint(T - K)", "coverage": [">", ">", ">"]}, "14844": {"id": 14844, "code": "N = 2;P = 0\nl = [1, 3]\nl=[i%2 for i in l]\nif sum(l) == 0:\n   print((P==0)*2**N)\nelse:\n   print(2**(N-1))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17469": {"id": 17469, "code": "s = \"1905\"\na=int(s[:2])\nb=int(s[2:])\nif (a > 12 or a == 0) and (b > 12 or b == 0):\n\tprint(\"NA\")\nelif a > 12 or a == 0:\n\tprint(\"YYMM\")\nelif b > 12 or b == 0:\n\tprint(\"MMYY\")\nelse: print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!"]}, "1123": {"id": 1123, "code": "N = 112\nfor i in range(111, 999+1, 111):\n    if i >= N:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "5541": {"id": 5541, "code": "import math\ns = 100\nprint(math.ceil(s/2))", "coverage": [">", ">", ">"]}, "5706": {"id": 5706, "code": "n = 100\nx = n // 2\ny = n % 2\nprint(x + y)", "coverage": [">", ">", ">", ">"]}, "1213": {"id": 1213, "code": "N = 750\nif N < 111:\n  print(111)\nelse:\n  for i in range(1,10):\n    if N <= 111*i:\n      ans = 111*i\n      break\n  print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "5394": {"id": 5394, "code": "N = 100\nprint(int((N + 1) / 2))", "coverage": [">", ">"]}, "9726": {"id": 9726, "code": "n = 8\ns = \"))))((((\"\nss = s\nwhile ss.count('()'):\n    ss = ss.replace('()', '')\nleft, right = ss.count('('), ss.count(')')\nprint('(' * right + s + ')' * left)", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "2698": {"id": 2698, "code": "s = {1, 2, 9}\nif s==set([1,7,9,4]):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "16212": {"id": 16212, "code": "n = 2\nli = [100, 0]\nma = max(li)\nli.remove(ma)\ndiff = []\nfor l in li:\n    diff.append(abs(ma/2-l))\nmi = min(diff)\nind = diff.index(mi)\nprint(ma,li[ind])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6888": {"id": 6888, "code": "h = 20;n = 3\naa = [4, 5, 6]\nall = sum(aa)\nif h <= all :\n  print(\"Yes\")\nelse :\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5875": {"id": 5875, "code": "N = 5\nprint(N//2 if N%2 == 0 else N//2 +1)", "coverage": [">", ">"]}, "14435": {"id": 14435, "code": "n = 6\nls = [1, 2, 3, 2, 2, 1]\ncnt = 1\ni = 0\nflag = 10\nwhile i < n-1:\n    if ls[i] < ls[i+1] and flag == 10:\n        flag = True\n    elif ls[i] > ls[i+1] and flag == 10:\n        flag = False\n    if flag == True:\n        if ls[i] > ls[i+1]:\n            cnt += 1\n            flag = 10\n    elif flag == False:\n        if ls[i] < ls[i+1]:\n            cnt += 1\n            flag = 10\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14256": {"id": 14256, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni=0\na=1\nt=0\nwhile i<N-1:\n    if A[i]<A[i+1]:\n        if t==-1:\n            a+=1\n            t=0\n        elif not t:\n            t=1\n    elif A[i]>A[i+1]:\n        if t==1:\n            a+=1\n            t=0\n        elif not t:\n            t=-1\n    i+=1\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11494": {"id": 11494, "code": "weekday = \"SAT\"\nlist = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nnext = 7 - list.index(weekday)\nprint(next)", "coverage": [">", ">", ">", ">"]}, "19511": {"id": 19511, "code": "N = 3\nif N%2: print(2*N)\nelse: print(N)", "coverage": [">", ">", "!"]}, "11824": {"id": 11824, "code": "a = 11;b = 16\nc = 11;d = 17\nif a + 1 == c:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4753": {"id": 4753, "code": "s = \"internationalization\"\na = len(s)\ns1 = s[0]\ns2 = s[a-1]\nb = str(a-2)\nprint(s1+b+s2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15787": {"id": 15787, "code": "a = 13;b = 3;c = 1\nprint((a-c)//(b+c))", "coverage": [">", ">"]}, "17532": {"id": 17532, "code": "S = \"1905\"\nif int(S[:2]) > 12 or int(S[:2]) == 0:\n  if int(S[2:]) > 12 or int(S[2:]) == 0: print('NA')\n  else: print('YYMM')\nelse:\n  if int(S[2:]) > 12 or int(S[2:]) == 0: print('MMYY')\n  else: print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "13666": {"id": 13666, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;k = 120\nh = ((H2-1)-H1)*60\nm = (M2+60)-M1\nprint((h+m)-k)", "coverage": [">", ">", ">", ">"]}, "18231": {"id": 18231, "code": "h = 3\nw = 7\nn = 10\nq,r = divmod(n, max(h,w))\nprint(q + int(bool(r)))", "coverage": [">", ">", ">", ">", ">"]}, "11992": {"id": 11992, "code": "month1 = 11;day1 = 16\nmonth2 = 11;day2 = 17\nif month1==month2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "16639": {"id": 16639, "code": "s={'H':0,'D':1}\nt=0\na = ['D', 'H']\nfor i in range(2):\n  t+=s[a[i]]\nif t%2!=0:\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9155": {"id": 9155, "code": "dateString = \"2017/01/31\"\nprint('2018/01/'+dateString[-2:])", "coverage": [">", ">"]}, "13297": {"id": 13297, "code": "string = \"abcde,fghihgf,edcba\"\nans = string.replace(',', ' ')\nprint(ans)", "coverage": [">", ">", ">"]}, "15551": {"id": 15551, "code": "x = 64146;y = 123;z = 456\nyz = y + z\nx -= z\nprint(x // yz)", "coverage": [">", ">", ">", ">"]}, "11926": {"id": 11926, "code": "m = \"11\";d = \"16\"\nM = \"11\";D = \"17\"\nif D == '1':\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2056": {"id": 2056, "code": "n = 100;a = 100;b = 100\nmax_ans = min(a,b)\nmin_ans = max(0, (a + b) - n)\nprint(max_ans, min_ans)", "coverage": [">", ">", ">", ">"]}, "3920": {"id": 3920, "code": "x = 64146;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "4436": {"id": 4436, "code": "s = \"smiles\"\ncount=0\nfor i in range(len(s)):\n    if i == 0 or i == len(s)-1:\n        continue\n    else:  \n        count=count+1\nr=s[0] + \"\" + str(count) + \"\" + s[len(s)-1]\nprint(r)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14354": {"id": 14354, "code": "import sys\ninput = sys.stdin.buffer.readline\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd = 0\nans = 1\nfor i in range(1, N):\n    if A[i - 1] < A[i]:\n        if d < 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = 1\n    elif A[i - 1] > A[i]:\n        if d > 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8708": {"id": 8708, "code": "from itertools import accumulate\nN = 1\nA1 = [0, 2]\nA2 = [0, 3]\nans = 0\nfor i in range(1, N + 1):\n    cur = A1[i - 1]\n    if i < N:\n        cur += A2[N] - A2[i]\n    ans = max(ans, cur + A1[i] - A1[i - 1] + A2[i] - A2[i - 1])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8294": {"id": 8294, "code": "n = 3;k = 3\nnum_list = [1, 2, 3]\nif (n-k) % (k-1) == 0:\n    print((n-k)//(k-1)+1)\nelse:\n    print((n-k)//(k-1) + 2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "7863": {"id": 7863, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nl=n-k\nr=k-1\nif l%r==0:\n  print(l//r+1)\nelse:\n  print(l//r+2)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3315": {"id": 3315, "code": "import math\na = 20;b = 30\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "4197": {"id": 4197, "code": "import sys\ninput = \"<function <lambda>>\"\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nm = 60 - m1\nh1 += 1\nm += (h2 - h1)*60 + m2\nprint(max(0, m - k))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14874": {"id": 14874, "code": "N = 1;P = 1\nA = [50]\ndp = [[0,0] for k in range(N+1)]\ndp[0][0] = 1\nfor k in range(N):\n    if A[k]%2 == 0:\n        dp[k+1][0] = dp[k][0]*2\n        dp[k+1][1] = dp[k][1]*2\n    else:\n        dp[k+1][0] = dp[k][0] + dp[k][1]\n        dp[k+1][1] = dp[k][1] + dp[k][0]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "15075": {"id": 15075, "code": "from math import factorial\nn = 2;p = 0\na = [1, 3]\na1=[]\na0=[]\nfor i in a:\n    if i%2==1:\n        a1.append(i)\n    else:\n        a0.append(i)\na1c=len(a1)\na0c=len(a0)\nans1=0\nfor i in range(a0c+1):\n    ans1+=factorial(a0c) / factorial(i) / factorial(a0c - i)\nans2=0\nif p==1:\n    for i in range(1,a1c+1,2):\n        ans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\nelse:\n    for i in range(0,a1c+1,2):\n        ans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\nprint(int(ans2*ans1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "13124": {"id": 13124, "code": "x = 5\nif x in [7,5,3]:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "11428": {"id": 11428, "code": "week = ('SUN','MON','TUE','WED','THU','FRI','SAT')\nprint(7 - week.index(\"SAT\"))", "coverage": [">", ">"]}, "16255": {"id": 16255, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\nc = a[0]\nch = -(-a[0]//2)\nminD = 10**9\nx = -1\nfor i in range(n):\n    dif = abs(a[i]-ch)\n    if minD>=dif:\n        minD=dif\n        x = a[i]\nprint(c,x)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7451": {"id": 7451, "code": "H = 10;N = 3\nA = [4, 5, 6]\nif sum(A) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "4663": {"id": 4663, "code": "N = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nM = []\nM.append(N[0])\nM.append(str(len(N) - 2))\nM.append(N[-1])\ndate = ''.join(M)\nprint(date)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7702": {"id": 7702, "code": "from math import ceil\nN = 8;K = 3\nll = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(ceil((N-1) / (K-1)))", "coverage": [">", ">", ">", ">"]}, "10602": {"id": 10602, "code": "A = 8;B = 12;K = 2\nanslist = []\nfor i in range(1,max(A,B)+1):\n    if A % i == 0 and B % i == 0:\n        anslist.append(i)\nprint(anslist[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "7542": {"id": 7542, "code": "H = 20;n = 3\narr = [4, 5, 6]\nsum = 0\nfor x in arr:\n\tsum += x\nprint(\"Yes\" if sum >= H else \"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "5573": {"id": 5573, "code": "a = 2\nprint((a+1)//2)", "coverage": [">", ">"]}, "9797": {"id": 9797, "code": "N = 6\nS = \")))())\"\nstock = 0\nL_cnt = 0\nfor s in S:\n    if s == \"(\":\n        stock += 1\n    if s == \")\":\n        if stock == 0:\n            L_cnt += 1\n        else:\n            stock -= 1\nprint(\"(\" * L_cnt + S + \")\" * stock)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12434": {"id": 12434, "code": "s = \"akasaka\"\nn = len(s)\nl = s[:((n-1)//2)]\nr = s[((n+3)//2) -1:]\nif s == s[::-1] and l == l[::-1] and r == r[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "6887": {"id": 6887, "code": "h = 10;n = 3\naa = [4, 5, 6]\nall = sum(aa)\nif h <= all :\n  print(\"Yes\")\nelse :\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "1614": {"id": 1614, "code": "import sys\nn = 10;a = 7;b = 5\nmi = max(0, a+b-n)\nma = min(n, min(a, b))\nprint(\"{} {}\".format(ma, mi))", "coverage": [">", ">", ">", ">", ">"]}, "17958": {"id": 17958, "code": "s = \"1905\"\nm = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\nif s[:2] not in m and s[2:] not in m:\n    print('NA')\nelif s[:2] not in m:\n    print('YYMM')\nelif s[2:] not in m:\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "768": {"id": 768, "code": "K = 101\nr = 7 % K\nans = -2\nfor i in range(K):\n   if r == 0:\n      ans = i\n      break\n   r = 10*r + 7\n   r = r % K\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4434": {"id": 4434, "code": "a = ['x', 'y', 'z']\nprint(a[0] + str(len(a) - 2) + a[len(a) - 1])", "coverage": [">", ">"]}, "5216": {"id": 5216, "code": "input_ = \"smiles\"\nss = input_[0]\nsc = input_[1:-1]\nse = input_[-1]\nprint(ss + str(len(sc)) + se)", "coverage": [">", ">", ">", ">", ">"]}, "11473": {"id": 11473, "code": "S = \"SUN\"\nif S==\"SUN\":\n  print('7')\nelif S==\"MON\":\n  print('6')\nelif S==\"TUE\":\n  print('5')\nelif S==\"WED\":\n  print('4')\nelif S==\"THU\":\n  print('3')\nelif S==\"FRI\":\n  print('2')\nelse:\n  print('1')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "10556": {"id": 10556, "code": "a = 8;b = 12;k = 2\ncount=0\nfor i in range(a,0,-1):\n  if a%i==0 and b%i==0:\n    count+=1\n  if count==k:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7967": {"id": 7967, "code": "n = 4;k = 3\ns = \"2 3 1 4\"\ni = s.find(\"1\")/2\nans = 0\nwhile ans * (k-1) < i:\n    ans += 1\ni = max(i, ans * (k-1))\ntmp = 0\nwhile tmp * (k-1) + i < n-1:\n    tmp += 1\nprint(ans + tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17267": {"id": 17267, "code": "x = ['D', 'D']\na = (x[0])\nb = (x[1])\nif((a == \"H\") & (b == \"H\")):\n    print(\"H\")\nelif ((a == \"D\") & (b == \"D\")):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "3115": {"id": 3115, "code": "S = \"1111111111\"\nanswer = 1000000\nfor i in range(len(S) - 2):\n    answer = min(abs(753 - int(S[i:i + 3])), answer)\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "9204": {"id": 9204, "code": "line = \"2017/01/07\"\nprint(\"2018\" + line[4:10])", "coverage": [">", ">"]}, "9395": {"id": 9395, "code": "S = \"2017/01/31\"\nprint(S.replace('2017', '2018'))", "coverage": [">", ">"]}, "11832": {"id": 11832, "code": "a = 11\nb = 11\nif a==b:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "663": {"id": 663, "code": "K = 2\nans = 0\nrem = 0\nfor i in range(K):\n    rem = (10*rem + 7)%K\n    if rem == 0:\n        print(ans+1)\n        quit()\n    ans += 1\nprint(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17273": {"id": 17273, "code": "a = \"D\";b = \"D\"\nif a == 'H' and  b == 'H':\n    print('H')\nelif a == 'D' and b == 'D':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "10200": {"id": 10200, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nl_ins = 0\nl = 0\nr = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        l += 1\n    else:\n        r += 1\n    l_ins = max(l_ins, r-l)\nr_ins = 0\nl = 0\nr = 0\nfor i in range(n-1, -1, -1):\n    if s[i] == \"(\":\n        l += 1\n    else:\n        r += 1\n    r_ins = max(r_ins, l-r)\nar = [\"(\"]*l_ins + s + [\")\"]*r_ins\nprint(\"\".join(ar))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10517": {"id": 10517, "code": "a = 8;b = 12;k = 2\nmin_ = min(a,b)\ndivisors = []\nfor i in range(1,min_+1,1):\n    if(a%i == 0 and b%i == 0 ):\n        divisors.append(i)\nprint(sorted(divisors,reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19424": {"id": 19424, "code": "N = 999999999\nprint(N*(N%2+1))", "coverage": [">", ">"]}, "6387": {"id": 6387, "code": "import sys\ninput = sys.stdin.readline\nN = 2\nA = [1, 5]\nA = A[:N]\nB = [2, 4]\nB = B[:N]\nC = [3, 6]\nC = C[:N]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nBB = [0] * N\na = 0\nfor b in range(N):\n    while A[a] < B[b] and a <= N-2:\n        a += 1\n    if a == N-1 and A[a] < B[b]:\n        BB[b] = N\n    else:\n        BB[b] = a\nBsum = [0] * N\nBsum[0] = BB[0]\nfor bb in range(1,N):\n    Bsum[bb] = Bsum[bb-1] + BB[bb]\nans = 0\nb_ = 0\nfor c in range(N):\n    while B[b_] < C[c] and b_ <= N-2:\n        b_ += 1\n    if b_ == N-1 and B[b_] < C[c]:\n        b_ += 1\n    b_ -= 1\n    if b_ == -1:\n        b_ = 0\n        continue\n    ans += Bsum[b_]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8546": {"id": 8546, "code": "N = 7\np=[0]\nq=[0]\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6069": {"id": 6069, "code": "n = 100\nans = -(-n//2)\nprint(ans)", "coverage": [">", ">", ">"]}, "15465": {"id": 15465, "code": "X = 13;Y = 3;Z = 1\nperson = 0\nwhile (Y + Z) * (person + 1) + Z <= X:\n    person += 1\nprint(person)", "coverage": [">", ">", ">", ">", ">"]}, "11551": {"id": 11551, "code": "s = \"SAT\"\nl = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ni = 7-l.index(s)\nprint(i)", "coverage": [">", ">", ">", ">"]}, "18567": {"id": 18567, "code": "h = 14\nw = 12\nn = 112\nl = max(h,w)\nprint(-(-n//l))", "coverage": [">", ">", ">", ">", ">"]}, "3218": {"id": 3218, "code": "S = \"1111111111\"\nr = 1000\nfor i in range(0, len(S)-2):\n    r = min(r, abs(int(S[i:i+3])-753))\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "11683": {"id": 11683, "code": "w = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nw.reverse()\nprint(w.index(\"SUN\")+1)", "coverage": [">", ">", ">"]}, "10690": {"id": 10690, "code": "import sys\nN = 6;M = 0\nac = [0] * N\nwa = [0] * N\nfor _ in range(M):\n    p, s = sys.stdin.readline().split()\n    p = int(p) - 1\n    if s == \"AC\":\n        ac[p] = 1\n    else:\n        if not ac[p]:\n            wa[p] += 1\nacnum = sum(ac)\nwanum = sum([c for i, c in enumerate(wa) if ac[i] == 1])\nprint(acnum, wanum)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "576": {"id": 576, "code": "S = \"xyz\"\nK = 4\nAns = []\nfor s in S[:-1]:\n    if s == 'a':\n        Ans.append('a')\n        continue\n    if (123 - ord(s)) <= K:\n        Ans.append('a')\n        K -= 123 - ord(s)\n    else:\n        Ans.append(s)\nK %= 26\nif ord(S[-1]) + K >= 123:\n    Ans.append(chr(ord(S[-1]) + K - 26))\nelse:\n    Ans.append(chr(ord(S[-1]) + K))\nprint(''.join(Ans))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "17457": {"id": 17457, "code": "s = \"1905\"\nif (0<=int(s[:2])<=99 and 1<=int(s[2:])<=12) and not(0<=int(s[2:])<=99 and 1<=int(s[:2])<=12):\n    print(\"YYMM\")\nelif (0<=int(s[2:])<=99 and 1<=int(s[:2])<=12) and not((0<=int(s[:2])<=99 and 1<=int(s[2:])<=12)):\n    print(\"MMYY\")\nelif (0<=int(s[:2])<=99 and 1<=int(s[2:])<=12) and (0<=int(s[2:])<=99 and 1<=int(s[:2])<=12):\n    print(\"AMBIGUOUS\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17657": {"id": 17657, "code": "s = 1700\na=s//100\nb=s%100\nif a>0 and a<=12:\n  if b>0 and b<=12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if b>0 and b<=12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "16269": {"id": 16269, "code": "n = 5\na = [6, 9, 4, 2, 11]\nai = max(a)\naj = min(a)\nfor i in a:\n    if min(aj, ai -aj) < min(i, ai - i):\n        aj = i\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4879": {"id": 4879, "code": "s = \"internationalization\"\nprint(s[0],len(s[1:-1]),s[-1],sep=\"\")", "coverage": [">", ">"]}, "14420": {"id": 14420, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup = False\ndown = False\nans = 1\nfor i in range(1, n):\n    if up:\n        if a[i] < a[i-1]:\n            ans += 1\n            up = False\n    elif down:\n        if a[i] > a[i-1]:\n            ans += 1\n            down = False\n    else:\n        if a[i] > a[i-1]:\n            up = True\n        elif a[i] < a[i-1]:\n            down = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "17919": {"id": 17919, "code": "S = \"1905\"\nif int(S[:2]) == 0 and 0 < int(S[2:]) <= 12:\n  print(\"YYMM\")\nelif int(S[2:]) == 0 and 0 < int(S[:2]) <= 12:\n  print(\"MMYY\")\nelif int(S[:2]) == 0 or int(S[2:]) == 0 or (int(S[:2]) > 12 and int(S[2:]) > 12):\n  print(\"NA\")\nelif int(S[:2]) > 12 and int(S[2:]) <= 12:\n  print(\"YYMM\")\nelif int(S[:2]) <= 12 and int(S[2:]) > 12:\n  print(\"MMYY\")\nelse:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "11447": {"id": 11447, "code": "days = [\"SUN\", 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ndays.reverse()\nd = \"SUN\"\nprint(days.index(d)+1)", "coverage": [">", ">", ">", ">"]}, "833": {"id": 833, "code": "K = 101\ni=0\nif K%2==0 or K%5==0:\n    print('-1')\nelse:\n    for d in range(K):\n        i=(10*i+7)%K\n        if i==0:\n            print(d+1)\n            break", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "10068": {"id": 10068, "code": "s = \"())\";t = \"())\"\nwhile'()'in t:t=t.replace('()','')\nc=t.count;print('('*c(')')+s+')'*c('('))", "coverage": [">", ">", ">"]}, "5352": {"id": 5352, "code": "N = 100\nprint(int((N+1)//2))", "coverage": [">", ">"]}, "14149": {"id": 14149, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = dn = False\nans = 1\np = A[0]\nfor a in A:\n    if p < a:\n        up = True\n    elif p > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    p = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15799": {"id": 15799, "code": "X = 12;Y = 3;Z = 1\nans = 0\nfor i in range(1, X // Y + 1):\n    if X - Y * i - (i + 1) * Z >= 0:\n        ans = i\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "11205": {"id": 11205, "code": "s = \"SUN\"\nans=(6-([\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\"].index(s)))\nif ans==0:\n  print(7)\nelse:\n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13975": {"id": 13975, "code": "N = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = -1\nans = 1\nfor i in range(1, N):\n    if up == 0 and a[i] - a[i-1] > 0:\n        up = -1\n        ans += 1\n    elif up == 1 and a[i] - a[i-1] < 0:\n        up = -1\n        ans += 1\n    elif up == -1 and a[i] - a[i-1] > 0:\n        up = 1\n    elif up == -1 and a[i] - a[i-1] < 0:\n        up = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "58": {"id": 58, "code": "s = \"a\"\nk = 25\nans = []\nfor c in s[:-1]:\n    to_a = (ord('z')-ord(c)+1) % 26\n    if k < to_a:\n        ans.append(c)\n    else:\n        k -= to_a\n        ans.append('a')\nelse:\n    c = s[-1]\n    x = ord(c)-ord('a')\n    y = (k+x) % 26\n    ans.append(chr(ord('a')+y))\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "4508": {"id": 4508, "code": "S = \"smiles\"\nn = str(len(S)-2)\nprint(S[0] + n + S[-1])", "coverage": [">", ">", ">"]}, "9108": {"id": 9108, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[0],s[1],s[2],s[3]='2','0','1','8'\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "4148": {"id": 4148, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nM3 = (H2 * 60 + M2) - (H1 * 60 + M1)\nT = M3 - K\nprint(T)", "coverage": [">", ">", ">", ">"]}, "6491": {"id": 6491, "code": "import sys\nimport bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    mid = B[i]\n    top = bisect.bisect_left(A, mid)\n    down = bisect.bisect_right(C, mid)\n    ans += top * (N - down)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4027": {"id": 4027, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nans2=h2*60+m2\nans1=h1*60+m1\nprint(ans2-ans1-k)", "coverage": [">", ">", ">", ">"]}, "13920": {"id": 13920, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nstate = 100\ncount = 1\ntmp = a[0]\nfor i in a:\n  if i == tmp:\n    pass\n  elif i > tmp:\n    if state == 1:\n      pass\n    elif state == 0:\n      count += 1\n      state = 100\n    else:\n      state = 1\n  else:\n    if state == 0:\n      pass\n    elif state == 1:\n      count += 1\n      state = 100\n    else:\n      state = 0\n  tmp = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">"]}, "8754": {"id": 8754, "code": "N = 7\nh = [3, 3, 4, 5, 4, 5, 3]\nl = [5, 3, 4, 4, 2, 3, 2]\nc = 0\nfor i in range(N):\n    c = max(sum(h[0:i+1])+sum(l[i:N+1]), c)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17105": {"id": 17105, "code": "a = \"D\";b = \"D\"\nif a == b:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "7488": {"id": 7488, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\na=sorted(A,reverse=True)\nfor i in a:\n  H-=i\n  if H<=0:\n    print(\"Yes\")\n    exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16163": {"id": 16163, "code": "from bisect import bisect_left\nn = 2\na_list = [0, 100]\nbase = a_list[-1] / 2\ni = bisect_left(a_list, base)\nif i > 0:\n    i -= 1\nans = [a_list[-1], a_list[i], abs(a_list[i] - base)]\nfor i in range(i + 1, n):\n    temp = abs(a_list[i] - base)\n    if temp >= ans[2]:\n        break\n    ans[1] = a_list[i]\n    ans[2] = temp\nprint(ans[0], ans[1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10155": {"id": 10155, "code": "from collections import deque\nn = 6\ns = [')', ')', ')', '(', ')', ')']\nd = deque(s)\nl, r = 0, 0\nfor i in range(n):\n    if l == r and s[i] == \")\":\n        d.appendleft(\"(\")\n    elif s[i] == \")\":\n        r += 1\n    else:\n        l += 1\ns = \"\".join(list(d))\nprint(s + \")\" * max(0, l - r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "12689": {"id": 12689, "code": "X = 6\nprint(\"YES\") if X in [3,5,7] else print(\"NO\")", "coverage": [">", ">"]}, "13039": {"id": 13039, "code": "if int(\"6\") in {3,5,7}:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", "!", "!", ">"]}, "17795": {"id": 17795, "code": "s = \"1905\"\nn1 = int(s[:2])\nn2 = int(s[2:])\nif 1 <= n1 <= 12 and 1 <= n2 <= 12:\n  print(\"AMBIGUOUS\")\nelif (n1 > 12 or n1 == 0) and 1 <= n2 <= 12:\n  print(\"YYMM\")\nelif (n2 > 12 or n2 == 0) and 1 <= n1 <= 12:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "6250": {"id": 6250, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in b:\n    ai=bisect.bisect_left(a,i)\n    ci=bisect.bisect_right(c,i)\n    ans+=ai*(n-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18043": {"id": 18043, "code": "s = 1905\na=s//100\nb=s%100\nif 1<=a<=12 and 1<=b<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=a<=12 and (b>12 or b==0):\n  print(\"MMYY\")\nelif (a==0 or a>12) and 1<=b<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "11197": {"id": 11197, "code": "S = \"atcoder\"\nN = len(S)\nsList = [str(s) for s in S]\nisPalindrome = 1\nstr1 = ''\nstr2 = ''\nstr3 = ''\nstr4 = ''\nfor i in range(N):\n  if (sList[i] != sList[N - 1 - i]):\n    isPalindrome = 0\nif isPalindrome == 1:\n  for i in range(int((N - 1) / 2)):\n    str1 += sList[i]\n    str2 += sList[int((N - 1) / 2 - 1 - i)]\n    str3 += sList[int((N + 3) / 2 - 1 + i)]\n    str4 += sList[N - 1 - i]\n    if str1 != str2:\n      isPalindrome = 0\n    if str3 != str4:\n      isPalindrome = 0\nif isPalindrome == 0:\n  print('No')\nelse:\n  print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "509": {"id": 509, "code": "S = \"xyz\"\nK = 4\nz = ord('z') + 1\nres = \"\"\nflg = False\nfor i,c in enumerate(S):\n    if c == 'a':\n        res += 'a'\n        continue\n    elif z - ord(c) <= K:\n        res += 'a'\n        K -= z-ord(c)\n    else:\n        res += chr(ord(c))\nres = res[:-1] + chr((ord(res[-1])-ord('a') + K) % 26 + ord('a'))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "18067": {"id": 18067, "code": "s = \"1905\"\nx = int(s[:2])\ny = int(s[2:])\nif 1 <= x <= 12 and 1 <= y <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= x <= 12:\n    print(\"MMYY\")\nelif 1 <= y <= 12:\n    print(\"YYMM\")\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "5178": {"id": 5178, "code": "S = \"xyz\"\nprint(S[0]+str(len(S[1:-1]))+S[-1])", "coverage": [">", ">"]}, "4650": {"id": 4650, "code": "l = ['x', 'y', 'z']\nprint('{}{}{}'.format(l[0],len(l)-2,l[-1]))", "coverage": [">", ">"]}, "19473": {"id": 19473, "code": "import math\nN = 3\nprint((2*N)//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "10039": {"id": 10039, "code": "N = 8\nS = [')', ')', ')', ')', '(', '(', '(', '(']\nc = [0,0]\nfor s in S:\n    if s == '(':\n        c[0] += 1\n    else:\n        if c[0] > 0:\n            c[0] -= 1\n        else:\n            c[1] += 1\npre = ['('] * c[1]\nrear = [')'] * c[0]\nans = pre+S+rear\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "18376": {"id": 18376, "code": "H = 2\nW = 100\nN = 200\nif N % max(H, W) == 0 :\n    print(int(N / max(H, W)))\nelse :\n    print(int(N / max(H, W)) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "18022": {"id": 18022, "code": "S = \"0112\"\nnum1 = int(S[:2])\nnum2 = int(S[2:])\nif 1 <= num1 <= 12 and 1 <=  num2 <= 12:\n    ans = \"AMBIGUOUS\"\nelif 1 <= num1 <= 12 and (num2 == 0 or 12 < num2):\n    ans = \"MMYY\"\nelif (num1 == 0 or 12 < num1) and 1 <=  num2 <= 12:\n    ans = \"YYMM\"\nelse:\n    ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "18375": {"id": 18375, "code": "H = 14\nW = 12\nN = 112\nif N % max(H, W) == 0 :\n    print(int(N / max(H, W)))\nelse :\n    print(int(N / max(H, W)) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7273": {"id": 7273, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif h<=sum(a):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "10005": {"id": 10005, "code": "n = 8\ns = \"))))((((\"\nl = 0\nr = 0\np = []\nfor i in range(n):\n  if s[i] == \"(\": p.append(\"(\")\n  else:\n    if p == []: l += 1\n    else: p.pop()\nr = p.count(\"(\")\nprint(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "2126": {"id": 2126, "code": "N = 10;A = 7;B = 5\nif A + B <= N :\n    print(str(min(A, B)) + \" 0\")\nelse :\n    print(str(min(A, B)) + \" \" + str(abs(N - (2 * N - A - B))))", "coverage": [">", ">", "!", "!", ">"]}, "2687": {"id": 2687, "code": "n = {0, 9, 4, 8}\nif n == set({1, 7, 9, 4}):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "8441": {"id": 8441, "code": "import sys\ninput = sys.stdin.readline\nN = 1\nA1 = [2]\nA2 = [3]\ncount =[0]*N\nif N ==1:\n    count[0] =A1[0] +A2[0]\nelse:\n    for i in range(N-1):\n        count[i] =sum(A1[:i+1]) +sum(A2[i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "16970": {"id": 16970, "code": "a = \"D\";b = \"D\"\nok = [(\"H\", \"H\"), (\"D\", \"D\")]\nif (a, b) in ok:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11541": {"id": 11541, "code": "S = \"SAT\"\nif S == 'SUN':\n    print('7')\nelif S == 'MON':\n    print('6')\nelif S == 'TUE':\n    print('5')\nelif S == 'WED':\n    print('4')\nelif S == 'THU':\n    print('3')\nelif S == 'FRI':\n    print('2')\nelif S == 'SAT':\n    print('1')\nelse:\n    print('Error')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6810": {"id": 6810, "code": "z = [20, 3]\nx = [4, 5, 6]\nd={}\nc=0\nfor i in x:\n       if d.get(i,0)==0:\n              c+=i\nif c>=z[0]:\n       print(\"Yes\")\nelse:\n       print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5278": {"id": 5278, "code": "s = {'9', '2', '1'}\nans = {'1', '9', '7', '4'}\nprint('YES' if s==ans else 'NO')", "coverage": [">", ">", ">"]}, "13802": {"id": 13802, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup, down = 0, 0\nans = 0\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        up += 1\n    if a[i-1] > a[i]:\n        down += 1\n    if up * down > 0:\n        ans += 1\n        up = 0\n        down = 0\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4068": {"id": 4068, "code": "A = [10, 0, 15, 0, 30]\nprint((A[2]*60+A[3])-(A[0]*60+A[1])-A[4])", "coverage": [">", ">"]}, "19138": {"id": 19138, "code": "n = 12\nif n%2==1:\n    print(\"0\")\n    exit()\ncount=0\nfor i in range(1,30):\n    count+=n//(2*5**i)\nprint(count)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "11044": {"id": 11044, "code": "S = \"akasaka\"\nl = len(S) // 2\nll = l // 2\nformer = S[:l]\nlatter = S[l+1:]\nfor i in range(l):\n  if S[i] != S[-i-1]:\n    print(\"No\")\n    break\nelse:\n  for i in range(ll):\n    if former[i] != former[-i-1] or latter[i] != latter[-i-1]:\n      print(\"No\")\n      break\n  else:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", "!", ">"]}, "3523": {"id": 3523, "code": "a = 12;b = 4\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", "!", "!", ">"]}, "19139": {"id": 19139, "code": "n = 12\nif n%2==1:\n    print(0)\nelse:\n    cnt=0\n    n //= 2\n    while n:\n        n //= 5\n        cnt += n\n    print(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "6160": {"id": 6160, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16101": {"id": 16101, "code": "n = ['12', '4']\na=int(n[0])\nb=int(n[1])\nif a>=2*b:\n     print(a-2*b)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9658": {"id": 9658, "code": "n = 6\ns = \")))())\"\nopens = 0\nl = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        opens += 1\n    else:\n        opens -= 1\n        if opens < 0:\n            l += 1\n            opens = 0\nprint(\"(\"*l + s + \")\"*opens)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15044": {"id": 15044, "code": "N = 1;P = 1\nA = [50]\nodd = False\nfor i in range(N):\n    if A[i] % 2 == 1:\n        odd = True\n        break\nif odd:\n    print(2**(N-1))\nelse:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">"]}, "5153": {"id": 5153, "code": "dx = [0, 0, 1, -1, 1, -1, -1, 1]\ndy = [1, -1, 0, 0, 1, -1, 1, -1]\ns = \"smiles\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3297": {"id": 3297, "code": "a = 12;b = 4\nans = a - b *2\nif(ans < 0):\n  print(0)\n  exit()\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16756": {"id": 16756, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    else:\n        print(\"D\")\nif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "12364": {"id": 12364, "code": "s = \"akasaka\"\nn = len(s)\nans = \"No\"\ncnt = 0\nif s[::1] == s[::-1]:\n    cnt += 1\nif s[:int((n-1)/2):1] == s[int((n-1)/2)-1::-1]:\n    cnt += 1\nif s[int((n+1)/2)::1] ==  s[:int((n-1)/2):-1]:\n    cnt += 1\nif cnt == 3:\n    ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5453": {"id": 5453, "code": "x = 2\nif x % 2 == 0:\n    print(x // 2)\nelse:\n    print(x // 2 + 1)", "coverage": [">", ">", ">", "!", "!"]}, "11416": {"id": 11416, "code": "S = \"SAT\"\nweek = [\"SUN\",\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nfor i in range(7):\n  if week[i] == S:\n    print(7 - i)", "coverage": [">", ">", ">", ">", ">"]}, "4708": {"id": 4708, "code": "s = \"internationalization\"\nlen_s = str(len(s)-2)\nprint(s[0]+len_s+s[-1])", "coverage": [">", ">", ">"]}, "4638": {"id": 4638, "code": "S = \"xyz\"\nprint(*[S[0],len(S)-2,S[-1]],sep='')", "coverage": [">", ">"]}, "7608": {"id": 7608, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nSUM = 0\nfor i in range(len(A)):\n    SUM = SUM + A[i]\nif SUM >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6936": {"id": 6936, "code": "H = 20;N = 3\nA = [4, 5, 6]\nprint(\"Yes\" if sum(A)>=H else \"No\")", "coverage": [">", ">", ">"]}, "13226": {"id": 13226, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0] + s[1] + s[2] + s[3] + s[4] + \" \" + s[6] + s[7] + s[8] + s[9] + s[10] + s[11] + s[12] + \" \" + s[14] + s[15] + s[16] + s[17] + s[18])", "coverage": [">", ">"]}, "11124": {"id": 11124, "code": "S = \"akasaka\"\nN = len(S)\nS_1 = S[0:int((N-1)/2)]\nS_2 = S[int((N+3)/2-1):N+1]\nprint('Yes' if S[::-1] == S and S_1[::-1] == S_1 and S_2[::-1] == S_2 else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "2802": {"id": 2802, "code": "s = \"1111111111\"\na = 1e9\nfor i in range(len(s)-2):\n  a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)       ", "coverage": [">", ">", ">", ">", ">"]}, "7051": {"id": 7051, "code": "h = 10;m = 3\nA = 15\nif h <= A:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "14508": {"id": 14508, "code": "from math import factorial\nN = 2;P = 0\nA = [1, 3]\nnum_k=0\nnum_g=0\nfor i in range(N):\n    if A[i]%2==0:\n        num_g+=1\n    else:\n        num_k+=1\nn=num_k//2\nans_k=0\nfor i in range(0,n*2+1,2):\n    ans_k+=factorial(num_k)/factorial(i)/factorial(num_k-i)\nans_g=2**(num_g)\nans=int(ans_k*ans_g)\nif P==0:\n    print(ans)\nelse:\n    ans=2**N-ans\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!"]}, "11864": {"id": 11864, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1!=M2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "1925": {"id": 1925, "code": "n = 10;x = 7;y = 5\nif x+y<=n:\n    Min=0\n    if x<=y:\n        Max=x\n    else:\n        Max=y\nelse:\n    Min=(x+y)-n\n    if x<=y:\n        Max=x\n    else:\n        Max=y\nprint(\"{} {}\".format(Max,Min))", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "16806": {"id": 16806, "code": "a = \"H\";b = \"H\"\nif(a==\"H\" and b==\"D\"):\n\tprint(\"D\")\nelif(a==\"D\" and b==\"H\"):\n\tprint(\"D\")\nelif(a==\"H\" and b==\"H\"):\n\tprint(\"H\")\nelif(a==\"D\" and b==\"D\"):\n\tprint(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "5677": {"id": 5677, "code": "a = 5\nprint(-(-a//2))", "coverage": [">", ">"]}, "11487": {"id": 11487, "code": "D = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7-D.index(\"SUN\"))", "coverage": [">", ">"]}, "4297": {"id": 4297, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh = h2 -h1\nm = m2 - m1\nprint(h*60+m-k)", "coverage": [">", ">", ">", ">"]}, "4834": {"id": 4834, "code": "s = \"internationalization\"\na = str(len(s) - 2)\nS = s[0] + a + s[len(s) - 1]\nprint(S)", "coverage": [">", ">", ">", ">"]}, "15796": {"id": 15796, "code": "X = 13;Y = 3;Z = 1\nfor i in range(1,10**5):\n    if Y*i + Z*(i+1) > X:\n        print(i-1)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "14953": {"id": 14953, "code": "n = 3;p = 0\na = [1, 1, 1]\nodd = [i for i in a if i % 2 == 1]\neven = [i for i in a if i % 2 == 0]\necnt = pow(2, len(even))\nocnt = pow(2, max(len(odd)-1,0))\nprint(0 if (len(odd) == 0 and p == 1) else ecnt * ocnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1393": {"id": 1393, "code": "n = 750\nl =[111,222,333,444,555,666,777,888,999]\nwhile n not in l:\n    n += 1\nprint(n)", "coverage": [">", ">", ">", ">", ">"]}, "18798": {"id": 18798, "code": "H = 2\nW = 100\nN = 200\nn = max(H, W)\nans = 1\nwhile True:\n    if n >= N:\n        break\n    n += max(H, W)\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7868": {"id": 7868, "code": "n = 3;k = 3\na = [1, 2, 3]\nif (n-1)%(k-1)==0:\n     print((n-1)//(k-1))\nelse:\n    print((n-1)//(k-1)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "10212": {"id": 10212, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\ncnt=0\nright=0\nleft=0\nfor i in range(len(s)):\n    if s[i] == '(':\n        cnt+=1\n    else:\n        cnt-=1\n    if cnt < 0:\n        right+=1\n        cnt=0\nif cnt>0:\n    left=cnt\nfor i in range(right):\n    s.insert(0,'(')\nfor i in range(left):\n    s.append(')')\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "10913": {"id": 10913, "code": "S = \"atcoder\"\nN = len(S)\nflag = True\nif S!=S[::-1]:\n    flag=False\nif S[:int((N-1)/2)]!=S[:int((N-1)/2)][::-1]:\n    flag=False\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17321": {"id": 17321, "code": "a = \"D\";b = \"D\"\nhd = \"HD\"\nprint(hd[(hd.index(a) + hd.index(b)) % 2])", "coverage": [">", ">", ">"]}, "10615": {"id": 10615, "code": "a = 1;b = 1;k = 1\nMin=min(a,b)\nl=[]\nfor i in range(Min,0,-1):\n  if a%i==0 and b%i==0:\n    l.append(i)\nprint(l[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14737": {"id": 14737, "code": "N = 45;P = 1\no = 24\nprint(2**(N-1) if o else 2**N if P==0 else 0)", "coverage": [">", ">", ">"]}, "5791": {"id": 5791, "code": "pages = 5\npapers=pages/2\nres=int(papers)\nif pages%2==0:\n    print(res)\nelse:\n    print(res+1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "645": {"id": 645, "code": "K = 2\nif K % 7 == 0:\n    K //= 7\nL = 9 * K\nif L % 2 == 0 or L % 5 == 0:\n    ans = -1\nelse:\n    ans = 0\n    R = 10\n    while 1:\n        ans += 1\n        if R % L == 1:\n            break\n        else:\n            R = (10 * R) % L\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14806": {"id": 14806, "code": "n = 1;p = 1\na = [50]\nodd = 0\neven = 0\nfor i in range(n):\n  if a[i]%2 == 0:\n    even += 1\n  else:\n    odd += 1\nif odd == 0:\n  if p == 1:\n    print(0)\n  else:\n    print (2**n)\nelse:\n  print (2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!"]}, "4071": {"id": 4071, "code": "H1 = 10;H2 = 0;H3 = 12;H4 = 0;K = 120\nup = H1*60 + H2\ndown = H3*60 + H4\nprint(down - up - K)", "coverage": [">", ">", ">", ">"]}, "11034": {"id": 11034, "code": "S = \"atcoder\"\nN=len(S)\nSH=S[:(N-1)//2]\nST=S[(N+3)//2-1:]\np=False\nif SH==SH[::-1] and SH==ST:\n  p=True\nprint(\"Yes\" if p else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "7792": {"id": 7792, "code": "input_line = ['8', '3']\nnum_array = int(input_line[0])\nnum_equal = int(input_line[1])\ninput_line = \"7 3 1 8 4 6 2 5\"\nequalized = 1\ni = 0\nwhile equalized < num_array:\n    equalized += (num_equal - 1)\n    i += 1\nprint(str(i))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "213": {"id": 213, "code": "s = \"a\"\nk = 25\nslen = len(s)\nnew_s = \"\"\nfor i in range(slen):\n  val = (ord(\"z\") + 1 - ord(s[i])) % 26\n  if k >= val:\n    k -= val\n    new_s += \"a\"\n  else:\n    new_s += s[i]\nif k > 0:\n  tmp_val = ord(new_s[slen-1]) + k % 26\n  if tmp_val > ord(\"z\"):\n    tmp_val -= 26\n  new_s = new_s[:-1] + chr(tmp_val)\nprint(new_s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">"]}, "7154": {"id": 7154, "code": "H = 20;N = 3\nA = [4, 5, 6]\nprint('Yes' if sum(A) >= H else 'No')", "coverage": [">", ">", ">"]}, "15644": {"id": 15644, "code": "X = 100000;Y = 1;Z = 1\nn = X // (Y+Z)\nif X % (Y+Z) < Z :\n    print(n-1)\nelse:\n    print(n)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9336": {"id": 9336, "code": "S = \"2017/01/07\"\nS=S.replace('2017','2018')\nprint(S)", "coverage": [">", ">", ">"]}, "15867": {"id": 15867, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 64146;b = 123;c = 456\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">", ">"]}, "3839": {"id": 3839, "code": "X = 64145;Y = 123;Z = 456\nL = X -2*Z\nP = L // (Y+Z)\nif L - P*(Y+Z) >= Y:\n  print(P+1)\nelse:\n  print(P)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3685": {"id": 3685, "code": "a = 20;b = 15\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "2480": {"id": 2480, "code": "N = {'9', '2', '1'}\nprint('YES' if N == {'1', '4', '7', '9'} else 'NO')", "coverage": [">", ">"]}, "9850": {"id": 9850, "code": "n = 6\ns = \")))())\"\nl, r = 0, 0\nfor i in range(n):\n  if s[i] == \"(\":\n    r += 1\n  else:\n    if r:\n      r -= 1\n    else:\n      l += 1\nans = \"(\"*l + s + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "8277": {"id": 8277, "code": "n = 8;k = 3\nk-=1\na = [7, 3, 1, 8, 4, 6, 2, 5]\ni=n-1\nprint(-(-i//k)-(-(n-i-1)//k))", "coverage": [">", ">", ">", ">", ">"]}, "6129": {"id": 6129, "code": "from bisect import bisect_right, bisect_left\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nans = 0\nfor i in B:\n    a = bisect_left(A, i)\n    b = N-bisect_right(C, i)\n    ans += (a*b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "416": {"id": 416, "code": "s = \"xyz\"\nk = 4\na = ord(\"a\") + 26\nmod = 26\nans = \"\"\nfor i in s[:-1]:\n  tmp = (a - ord(i)) % mod\n  if tmp <= k:\n    k -= tmp\n    ans += \"a\"\n  else:\n    ans += i\nans += chr(ord(\"a\") + (ord(s[-1]) - a + k) % mod)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "4668": {"id": 4668, "code": "inpuStr = \"xyz\"\nprint(f'{inpuStr[0]}{len(inpuStr[0:-2])}{inpuStr[-1]}')", "coverage": [">", ">"]}, "18307": {"id": 18307, "code": "h = 2\nw = 100\nn = 200\nif h >= w:\n    larger = h\nelse:\n    larger = w\nif n % larger == 0:\n    print(n // larger)\nelse:\n    print(n // larger + 1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "12037": {"id": 12037, "code": "input1 = [11, 16]\ninput2 = [11, 17]\nm1 = input1[0]\nd1 = input1[1]\nm2 = input2[0]\nd2 = input2[1]\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "14847": {"id": 14847, "code": "N = 45;P = 1\nl = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nl=[i%2 for i in l]\nif sum(l) == 0:\n   print((P==0)*2**N)\nelse:\n   print(2**(N-1))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "56": {"id": 56, "code": "s = ['a']\nn = len(s)\nk = 25\nt = [ord(s[i]) - 97 for i in range(n)]\nfor i in range(n):\n    if k == 0:\n        break\n    x = 26 - t[i]\n    if 0 < x % 26 <= k:\n        k -= x\n        s[i] = \"a\"\nt[-1] = ord(s[-1]) - 97\nif k > 0:\n    s[-1] = chr((k + t[-1]) % 26 + 97)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14155": {"id": 14155, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nli = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n       li.append('+')\n    elif A[i+1] - A[i] < 0:\n        li.append('-')\n    else:\n        pass\nans = 1\np = 0\nm = 0\nfor i in li:\n    if i == '+':\n        p = 1\n    elif i == '-':\n        m = 1\n    if p == 1 & m == 1:\n        ans += 1\n        p = 0\n        m = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9620": {"id": 9620, "code": "S = \"2017/01/07\"\nrep = '2018'\nans = rep + S[4:]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "5256": {"id": 5256, "code": "s = ['x', 'y', 'z']\nanswer_list=[s[0]]+[str(len(s)-2)]+[s[-1]]\nprint(\"\".join(answer_list))", "coverage": [">", ">", ">"]}, "12751": {"id": 12751, "code": "x = \"6\"\nprint('YES' if x in '753' else 'NO')", "coverage": [">", ">"]}, "3279": {"id": 3279, "code": "a = 12;b = 4\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "11787": {"id": 11787, "code": "x = ['11', '30']\ny = ['12', '1']\nif(x[0]!=y[0]):\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "8622": {"id": 8622, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor x in range(N):\n    C = A[0:x+1] + B[x:N]\n    n = sum(C)\n    ans = max(ans, n)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12443": {"id": 12443, "code": "s = \"akasaka\"\nn=len(s)\nx=s[:(n-1)//2]\ny=s[(n+3)//2-1:]\nans=0\nfor i in range(3):\n    if s==s[::-1]:\n        ans +=1\n    if i==0:\n        s=x\n    elif i==1:\n        s=y\nprint(\"Yes\" if ans==3 else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1974": {"id": 1974, "code": "N = 10;A = 7;B = 5\nmax_ans = min(A,B)\nif N-A-B>0:\n    min_ans = 0\nelse:\n    min_ans = abs(N-A-B)\nprint(max_ans, min_ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "6836": {"id": 6836, "code": "H = 211;N = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "18685": {"id": 18685, "code": "h = 2\nw = 100\nn = 200\nlines = 0\nact = 0\nif h <= w:\n    lines = h\n    act = w\nelse:\n    lines = w\n    act = h\ndraw = 0 \nfor i in range(lines):\n    if n <= (i + 1) * act:\n        print(i + 1)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13834": {"id": 13834, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nAd = [A[i] - A[i+1] for i in range(N-1)]\nans = 1\np = 0\nfor d in Ad:\n    if d * p < 0:\n        ans += 1\n        p = 0\n    elif d != 0:\n        p = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7019": {"id": 7019, "code": "H = 10;N = 3\nA = [4, 5, 6]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", "!", ">"]}, "7087": {"id": 7087, "code": "r = ['10', '3']\nH=int(r[0])\nN=int(r[1])\ndata_pre = ['4', '5', '6']\ndata=[int(s) for s in data_pre]\nif sum(data)>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "269": {"id": 269, "code": "s = \"codefestival\"\nk = 100\nns = []\nfor c in s[:-1]:\n    if c == 'a':\n        ns.append(c)\n        continue\n    ofstoa = ord('z')+1-ord(c)\n    if k >= ofstoa:\n        ns.append(chr(ord(c) + ofstoa - 26))\n        k -= ofstoa\n    else:\n        ns.append(c)\nlast = ord(s[-1])\nk = k%26\nif last + k > ord('z'):\n    ns.append(chr(last + k - 26))\nelse:\n    ns.append(chr(last + k))\nprint(''.join(ns))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "9410": {"id": 9410, "code": "d = \"2017/01/07\"\nprint('2018/01/' + d[8:])", "coverage": [">", ">"]}, "9823": {"id": 9823, "code": "n = 6\ns = \")))())\"\nstack = []\ncntLeft = 0\ncntRight = 0\nfor ss in s:\n    if ss == '(':\n        stack.append('(')\n    else:\n        if len(stack) > 0:\n            stack.pop()\n        else:\n            cntLeft += 1\ncntRight = len(stack)\nans = ''\nfor i in range(cntLeft):\n    ans += '('\nans += s\nfor i in range(cntRight):\n    ans += ')'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "335": {"id": 335, "code": "s = \"xyz\"\nk = 4\nn = len(s)\nfor i in range(n):\n  num = ord(s[i])\n  if num == 97 or 123-num > k:\n    continue\n  k -= (123-num)\n  s = s[:i] + 'a' + s[i+1:]\nif k > 0:\n  t = k%26\n  s = s[:n-1] + chr(ord(s[n-1])+t)\nprint(s)  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6218": {"id": 6218, "code": "import sys\nfrom bisect import bisect_right as br\ninput = sys.stdin.readline\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nb.sort()\nc.sort()\nres = 0\nbt = [0] * N\nfor j in range(N):\n  y = b[j]\n  k = br(c, y)\n  bt[j] = N - k\ncsbt = [0] * (N + 1)\nfor i in range(N):\n  csbt[i + 1] = csbt[i] + bt[i]\nfor i in range(N):\n  x = a[i]\n  j = br(b, x)\n  if j < N:\n    res += csbt[-1] - csbt[j]\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6260": {"id": 6260, "code": "import bisect\nN = 6\nA_list = [3, 14, 159, 2, 6, 53]\nB_list = [58, 9, 79, 323, 84, 6]\nC_list = [2643, 383, 2, 79, 50, 288]\nA_list = sorted(A_list)\nB_list = sorted(B_list)\nC_list = sorted(C_list)\nans = 0\nfor i in range(N):\n    b = B_list[i]\n    a_nums = bisect.bisect_left(A_list, b)\n    c_nums = N - bisect.bisect_right(C_list, b)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3074": {"id": 3074, "code": "s = \"35753\"\nx = 10000\nfor i in range(len(s) - 3 + 1):\n    x = min(x, abs(753 - int(s[i:i+3])))\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "5337": {"id": 5337, "code": "n = 100\nif n % 2 == 0:\n    print(round(n / 2))\nelse:\n    print(round((n + 1)/2))", "coverage": [">", ">", ">", "!", "!"]}, "3323": {"id": 3323, "code": "a = 20;b = 15\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "201": {"id": 201, "code": "s = \"xyz\"\nK = 4\nfor i in range(len(s)-1):\n    z2a = (ord('z') + 1 - ord(s[i])) % 26\n    if z2a <= K:\n        s = s[:i] + 'a' + s[i+1:]\n        K -= z2a\nprint(s[:len(s)-1] + chr(((ord(s[len(s)-1]) - ord('a')) + K % 26) % 26 + ord('a')))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10749": {"id": 10749, "code": "s = \"level\"\na = s[::-1]\nn = len(s)\nans = \"Yes\"\nif s != a: ans = \"No\"\nelif s[:(n-1)//2] != s[(n+3)//2-1:]: ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5195": {"id": 5195, "code": "a = \"s\";b = ['m', 'i', 'l', 'e'];c = \"s\"\nprint(a+str(len(b))+c)", "coverage": [">", ">"]}, "16210": {"id": 16210, "code": "n = 2\na = [100, 0]\na = sorted(a, reverse=True)\namax = a[0]\nna = a[1:]\nd = {}\nfor el in na:\n    d[el] = abs(el - amax//2)\nds = sorted(d.items(), key=lambda x:x[1])\nprint(amax, ds[0][0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11569": {"id": 11569, "code": "N = \"SAT\"\nS = {\"SUN\":\"7\", \"MON\": \"6\", \"TUE\": \"5\", \"WED\": \"4\", \"THU\": \"3\", \"FRI\": \"2\", \"SAT\": \"1\"}\nprint(S[N])", "coverage": [">", ">", ">"]}, "16223": {"id": 16223, "code": "from bisect import bisect_left\nN = 5\na = [6, 9, 4, 2, 11]\na.sort()\nx = a[-1]\ni = bisect_left(a, x/2, hi=N-2)\nfor j in [i-1, i, i+1]:\n    if 0 <= j < N and abs(a[j]-x/2) < abs(a[i]-x/2):\n        i = j\nprint(x, a[i])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "7736": {"id": 7736, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint((len(A)-1)//(K-1) + int(bool((len(A)-1)%(K-1))))", "coverage": [">", ">", ">"]}, "12832": {"id": 12832, "code": "x = \"5\"\nif x in '753':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "18874": {"id": 18874, "code": "N = 12\nif N%2:\n    print(0)\nelse:\n    ans = 0\n    N //= 2\n    while N:\n        N //= 5\n        ans += N\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15586": {"id": 15586, "code": "x = 13;y = 3;z = 1\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "7656": {"id": 7656, "code": "h = 211;n = 5\nA = [31, 41, 59, 26, 53]\nfor a in A:\n  h -= a\nprint(\"Yes\" if h <= 0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "1227": {"id": 1227, "code": "n = \"111\"\nfor i in [\"111\",\"222\",\"333\",\"444\",\"555\",\"666\",\"777\",\"888\",\"999\"]:\n    if i == n:\n        print(n)\n        break\n    elif n < i:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", "!", "!", "!"]}, "10053": {"id": 10053, "code": "N = 8\nS = \"))))((((\"\nstack = []\nfor c in S:\n    if len(stack) > 0:\n        last = stack[-1]\n        if last == '(' and c == ')':\n            stack = stack[:-1]\n            continue\n    stack.append(c)\nleft = stack.count(')')\nright = stack.count('(')\nprint(left * '(' + S + right * ')')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "18370": {"id": 18370, "code": "from math import ceil\nh = 2\nw = 100\nn = 200\nres=ceil(n/max(h,w))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6555": {"id": 6555, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\nans = 0\nfor i in range(n):\n    pos_a = bisect_left(a,b[i])\n    pos_c = bisect_right(c,b[i])\n    ans += pos_a*(n-pos_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12660": {"id": 12660, "code": "x = 5\nprint('YES' if x in (3,5,7) else 'NO')", "coverage": [">", ">"]}, "3846": {"id": 3846, "code": "X = 12;Y = 3;Z = 1\nX = X - Z\nY = Y + Z\nprint(X//Y)", "coverage": [">", ">", ">", ">"]}, "9207": {"id": 9207, "code": "S = \"2017/01/31\"\nS_2 = S.replace(\"2017\",\"2018\")\nprint(S_2)", "coverage": [">", ">", ">"]}, "57": {"id": 57, "code": "s = \"xyz\"\nk = 4\nans = []\nfor c in s[:-1]:\n    to_a = (ord('z')-ord(c)+1) % 26\n    if k < to_a:\n        ans.append(c)\n    else:\n        k -= to_a\n        ans.append('a')\nelse:\n    c = s[-1]\n    x = ord(c)-ord('a')\n    y = (k+x) % 26\n    ans.append(chr(ord('a')+y))\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "16209": {"id": 16209, "code": "n = 5\na = [6, 9, 4, 2, 11]\na = sorted(a, reverse=True)\namax = a[0]\nna = a[1:]\nd = {}\nfor el in na:\n    d[el] = abs(el - amax//2)\nds = sorted(d.items(), key=lambda x:x[1])\nprint(amax, ds[0][0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10543": {"id": 10543, "code": "a = 8;b = 12;k = 2\ns = []\nfor i in range(1,101):\n    if a % i == 0 and b % i == 0:\n        s.append(i)\n    if i > a or i > b:\n        break\nprint(s[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10218": {"id": 10218, "code": "from collections import deque\nn = 6\ns = \")))())\"\nans=deque(s)\ncnt=0\nfor i in range(n):\n  if (cnt==0)and(s[i]==')'):\n    ans.appendleft('(')\n  elif (cnt!=0)and(s[i]==')'):\n    cnt-=1\n    pass\n  elif s[i]=='(':\n    cnt+=1\nif cnt>0:\n  ans.append(')'*cnt)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "6060": {"id": 6060, "code": "import math\nN = 100\nP = math.ceil(N/2)\nprint(P)", "coverage": [">", ">", ">", ">"]}, "875": {"id": 875, "code": "k = 101\nif k%2==0 or k%5==0:\n  print(-1)\nelse:\n  s=1\n  a=7\n  while a%k!=0:\n    a=(10*a+7)%k\n    s+=1\n  print(s)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7000": {"id": 7000, "code": "H = 20;N = 3\nA = map(int, \"4 5 6\".split())\nprint('Yes' if H <= sum(A) else 'No')", "coverage": [">", ">", ">"]}, "18495": {"id": 18495, "code": "H = 14\nW = 12\nN = 112\nx = H if H>W else W\nx2 = 0 if N%x==0 else 1\nprint(N//x + x2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16497": {"id": 16497, "code": "n = 5\na = [6, 9, 4, 2, 11]\np=max(a)\nr=p/2\nprint(p,int(min([i-r for i in a if i!=p],key=abs)+r))", "coverage": [">", ">", ">", ">", ">"]}, "9961": {"id": 9961, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\ns=s[::-1]\nbalance = 0\ni = 0\nwhile i < len(s):\n    if s[i] == ')':\n        balance+=1\n    else:\n        balance-=1\n    if balance<0:\n        s.insert(0, ')')\n        balance+=1\n        i+=1\n    i+=1\nbalance = 0\ni = 0\ns=s[::-1]\nwhile i < len(s):\n    if s[i] == '(':\n        balance+=1\n    else:\n        balance-=1\n    if balance<0:\n        s.insert(0, '(')\n        balance+=1\n        i+=1\n    i+=1\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3267": {"id": 3267, "code": "x = 12;y = 4\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "18812": {"id": 18812, "code": "H = 14\nW = 12\nN = 112\nm = max(H, W)\nans = int((N - 1) / m) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16938": {"id": 16938, "code": "a = \"H\";b = \"H\"\nif b == 'D':\n    if a == 'H':\n        a = 'D'\n    else:\n        a = 'H'\nelif a == b == 'D':\n    a = 'H'\nprint(a)", "coverage": [">", ">", "!", "!", "!", "!", ">", "!", ">"]}, "2067": {"id": 2067, "code": "B = 5;A = 7;N = 10\nprint(B,max(A+B-N,0))", "coverage": [">", ">"]}, "15281": {"id": 15281, "code": "X = 64145;Y = 123;Z = 456\nprint((X-Z) // (Y + Z))", "coverage": [">", ">"]}, "955": {"id": 955, "code": "n = 111\na = n//100\nb = 100*a+10*a+a\nif b >= n:\n    print(b)\nelse:\n    print(b+111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5693": {"id": 5693, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nn = 2\nprint((n + 1) // 2)", "coverage": [">", ">", ">", ">", ">"]}, "11076": {"id": 11076, "code": "import math\ns = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn = len(s)\ns1 = s[ : (n-1) // 2]\ns2 = s[(n+3) // 2 - 1 : n]\nflag = 1\nfor i in range(len(s) // 2):\n    if s[i] != s[- i - 1]:\n        flag = 0\nfor i in range(len(s1) // 2):\n    if s1[i] != s1[- i - 1]:\n        flag = 0\nfor i in range(len(s2) // 2):\n    if s2[i] != s2[- i - 1]:\n        flag = 0\nprint('Yes' if flag == 1  else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">"]}, "13271": {"id": 13271, "code": "a = \"happy,newyear,enjoy\"\nb = a.replace(\",\", \" \")\nprint(b)", "coverage": [">", ">", ">"]}, "1921": {"id": 1921, "code": "n = 10;a = 3;b = 5\nprint(min(a, b), max((a + b) - n, 0))", "coverage": [">", ">"]}, "1175": {"id": 1175, "code": "a = 750\nwhile len(set(str(a)))!=1:\n  a+=1\nprint(a)", "coverage": [">", ">", ">", ">"]}, "17835": {"id": 17835, "code": "S = \"1905\"\nx=int(S[:2])\ny=int(S[2:4])\nif 1<=x<=12:\n    if 1<=y<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=y<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "10574": {"id": 10574, "code": "a = 100;b = 50;k = 4\nl = []\nc = a\nif (a > b):\n  c = b\nfor i in range(1, c+1):\n  if a % i == 0 and b % i == 0:\n    l.append(i)\nl.sort()\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11662": {"id": 11662, "code": "a = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\na = a * 2\nc = 0\nz = \"SAT\"\nfor i in range(0,7):\n\tif z == a[i]:\n\t\tfor j in range(i + 1, 14):\n\t\t\tif a[j] == \"SUN\":\n\t\t\t\tprint(j - i )", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7073": {"id": 7073, "code": "h = 210;n = 5\na_list = [31, 41, 59, 26, 53]\nif sum(a_list)>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7393": {"id": 7393, "code": "h = 210;n = 5\nprint(\"Yes\" if sum(map(int, \"31 41 59 26 53\".split())) >= h else \"No\")", "coverage": [">", ">"]}, "15951": {"id": 15951, "code": "a = 20;b = 15\nans = a - b * 2\nif (ans >= 0):\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "19394": {"id": 19394, "code": "s = 3\nif s%2==0:\n  print(s)\nelse:\n  print(2*s)", "coverage": [">", ">", "!", "!", ">"]}, "11901": {"id": 11901, "code": "m = 11;d = 30\ns = 12;t = 1\nif t==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11665": {"id": 11665, "code": "n = \"SUN\"\nd = {\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(d[n])", "coverage": [">", ">", ">"]}, "10775": {"id": 10775, "code": "s = \"akasaka\"\ns1 = list(s[:((len(s)) - 1) // 2])\ns2 = list(s[(len(s) + 2) // 2:])\nif s1 == s2:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "1965": {"id": 1965, "code": "n = 100;a = 100;b = 100\nans = [min(a,b), max(0,(a+b)-n)]\nprint(*ans, sep=' ')", "coverage": [">", ">", ">"]}, "840": {"id": 840, "code": "K = 101\nA=0\nfor i in range(K):\n  A=(A*10+7)%K\n  if A%K==0:\n    print(i+1)\n    break\n  if i==K-1:print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18403": {"id": 18403, "code": "h = 2\nw = 100\nn = 200\nans=(n+max(h,w)-1)//max(h,w)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3774": {"id": 3774, "code": "x = 12;y = 3;z = 1\none_length = y + z\nprint(int((x-z) / one_length))", "coverage": [">", ">", ">"]}, "3692": {"id": 3692, "code": "A = 20;B = 30\nC = A - B * 2\nprint(0 if C < 0 else C)", "coverage": [">", ">", ">"]}, "1713": {"id": 1713, "code": "N = 10;A = 7;B = 5\nmx = min(A,B)\nmn = max(A+B-N,0)\nprint(mx,mn)", "coverage": [">", ">", ">", ">"]}, "16804": {"id": 16804, "code": "A = \"D\";B = \"H\"\nif A==\"H\" and B==\"H\":\n  print(\"H\")\nelif A==\"H\" and B==\"D\":\n  print(\"D\")\nelif A==\"D\" and B==\"H\":\n  print(\"D\")\nelse:\n  print(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "13713": {"id": 13713, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh_diff = 60*(h2 - h1)\nm_diff = m2 - m1\nprint(h_diff + m_diff - k)", "coverage": [">", ">", ">", ">"]}, "7866": {"id": 7866, "code": "from math import ceil\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nm = a.index(1)\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "17185": {"id": 17185, "code": "print({\n 'H H': 'H',\n   'H D': 'D',\n   'D H': 'D',\n   'D D': 'H',\n}[\"H H\"])", "coverage": [">", ">", ">", ">", ">", ">"]}, "1060": {"id": 1060, "code": "n = 112\nfor num in range(n, 1000):\n    if num % 111 == 0:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "19208": {"id": 19208, "code": "N = 12\nif N%2 == 1 or N <= 9:\n  print(0)\nelse:\n  t = 10\n  ans = 0\n  while N >= t:\n    ans += N//t\n    t *= 5\n  print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9853": {"id": 9853, "code": "n = 6\nS = \")))())\"\nleftstack = 0\nremrights = 0\nfor s in S:\n    if s == '(':\n        leftstack += 1\n    else:\n        if leftstack > 0:\n            leftstack -= 1\n        else:\n            remrights += 1\nprint('('*remrights + S + ')'*leftstack)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "6272": {"id": 6272, "code": "from bisect import bisect_left, bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    x = bisect_left(A,B[i])\n    y = bisect_right(C,B[i])\n    ans += x*(N-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1348": {"id": 1348, "code": "n = 111\na=[111,222,333,444,555,666,777,888,999]\np=0\nwhile a[p]<n:\n    p+=1\nprint(a[p])", "coverage": [">", ">", ">", ">", "!", ">"]}, "15885": {"id": 15885, "code": "x = 100000;y = 1;z = 1\nr, q = divmod(x, y + z)\nif q >= z:\n    print(r)\nelse:\n    print(r - 1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "6850": {"id": 6850, "code": "import math\nH = 20;N = 3\nA = [4, 5, 6]\nif H <= sum(A):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7457": {"id": 7457, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nattack = sum(A)\nif H <= attack:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "17803": {"id": 17803, "code": "N = 1700\na = N // 100\nb = N % 100\nif 1 <= a <= 12:\n  if 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= b <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "1046": {"id": 1046, "code": "n = 112\ni = int(n / 111)\nif n % 111 != 0:\n    i += 1\nprint(i * 111)", "coverage": [">", ">", ">", ">", ">"]}, "6044": {"id": 6044, "code": "n = 2\nans = (n+2-1)//2\nprint(ans)", "coverage": [">", ">", ">"]}, "17838": {"id": 17838, "code": "S = \"1905\"\nif 1 <= int(S[0:2]) <= 12:\n  if 1 <= int(S[2:4]) <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= int(S[2:4]) <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "8132": {"id": 8132, "code": "from math import ceil\nN = 4;K = 3\nA = [2, 3, 1, 4]\nA.sort()\ncnt = 1\nfor i in range(1, N):\n    if A[0] == A[i]:\n        cnt += 1\nprint(ceil((N-cnt)/(K-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11322": {"id": 11322, "code": "x = \"SAT\"\nyoubi = {\n  'SUN': 7\n  , 'MON': 6\n  , 'TUE': 5\n  , 'WED': 4\n  , 'THU': 3\n  , 'FRI': 2\n  , 'SAT': 1\n}\nprint(youbi[x])", "coverage": [">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "2027": {"id": 2027, "code": "n = 10;a = 3;b = 5\nq=min(a, b)\nw=max(0,a+b-n)\nprint(q,w)", "coverage": [">", ">", ">", ">"]}, "7761": {"id": 7761, "code": "n = 3;k = 3\na = [1, 2, 3]\nfi = 0\nfor i in range(n):\n    if a[i] == 1:\n        fi = i\n        break\nif (n - 1) % (k - 1) == 0:\n    print((n - 1) // (k - 1))\nelse:\n    print((n - 1) // (k - 1) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4189": {"id": 4189, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt = (h2 - h1) * 60 + (m2 - m1)\nans = t - k\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10688": {"id": 10688, "code": "A = 8;B = 12;K = 2\ncount=0\nfor i in range(max(A,B),0,-1):\n    if A%i==0 and B%i==0:\n        count+=1\n        if count==K:\n            print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5433": {"id": 5433, "code": "import math\nn = 100\nprint(math.floor((n+1)/2))", "coverage": [">", ">", ">"]}, "18430": {"id": 18430, "code": "from math import ceil\nh = 2\nw = 100\nn = 200\nprint(ceil(n/max(h,w)))", "coverage": [">", ">", ">", ">", ">"]}, "540": {"id": 540, "code": "s = \"xyz\"\nk = 4\nn = len(s)\nle = [\"\"]*n\nne = []\nfor i in range(n):\n    le[i] = s[i]\n    if s[i] == \"a\":\n        ne.append(0)\n    else:\n        ne.append(123-ord(s[i]))\nrem = k\nfor i in range(n):\n    if rem >= ne[i]:\n        rem -= ne[i]\n        le[i] = 'a'\nsaigo = ord(le[n-1]) - 97\nssm = (rem+saigo) % 26\nle[n-1] = chr(97+ssm)\nprint(*le,sep = \"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6366": {"id": 6366, "code": "from bisect import *\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\ncnt = []\nfor b in B:\n    cnt.append(bisect_left(A, b) * (N - bisect_right(C, b)))\nprint(sum(cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19498": {"id": 19498, "code": "import sys\ninput = sys.stdin.readline\nN = 10\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2 * N)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12392": {"id": 12392, "code": "S1 = \"level\"\nN = len(S1)\nS2 = S1[::-1]\na = S1 == S2\nS3 = S1[:int((N - 1) / 2)]\nS4 = S3[::-1]\nb = S3 == S4\nS5 = S1[int((N + 3) / 2) - 1:]\nS6 = S5[::-1]\nc = S5 == S6\nif a and b and c:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18770": {"id": 18770, "code": "h = 14\nw = 12\nn = 112\nprint(int((n-1)/max(h, w))+1)", "coverage": [">", ">", ">", ">"]}, "5692": {"id": 5692, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nn = 5\nprint((n + 1) // 2)", "coverage": [">", ">", ">", ">", ">"]}, "18596": {"id": 18596, "code": "h = 3\nw = 7\nn = 10\nprint(-n//max(h,w)*-1)", "coverage": [">", ">", ">", ">"]}, "619": {"id": 619, "code": "s = ['x', 'y', 'z']\nk = 4\nt = list(map(lambda x:ord(x)-ord(\"a\"),s))\nfor i in range(len(t)):\n  diff = 26-t[i]\n  if diff != 26 and diff <= k: \n    t[i]+=diff\n    k-=diff\nt[-1]+=k\nu = \"\".join(list(map(lambda x:chr((x%26+ord(\"a\"))),t)))\nprint(u)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13932": {"id": 13932, "code": "import sys\nN = 6\na = [1, 2, 3, 2, 2, 1]\nnum, cut = 0, 0\nif N == 1:\n    print(1)\n    sys.exit()\nfor i in range(N-1):\n    if a[i] == a[i+1]:\n        continue\n    if a[i] < a[i+1] and num == 0:\n        num  = 1\n        cut += 1\n    elif a[i] > a[i+1] and num == 0:\n        num = -1\n        cut += 1\n    elif num == 1 and a[i] > a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\n    elif num == -1 and a[i] < a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">"]}, "5296": {"id": 5296, "code": "import math\nn = 5\nprint(math.ceil(n / 2))", "coverage": [">", ">", ">"]}, "7213": {"id": 7213, "code": "H = 10;n = 3\nprint(\"Yes\" if H <= sum(map(int,\"4 5 6\".split())) else \"No\")", "coverage": [">", ">"]}, "17898": {"id": 17898, "code": "s = \"1905\"\ntemp1 = int(s[0:2])\ntemp2 = int(s[2:4])\nif temp1 >= 1 and temp1 <= 12:\n    if (temp2 < 1 or temp2 > 12):\n        print(\"MMYY\")\n    else:\n        print(\"AMBIGUOUS\")\nelse:\n    if (temp2 >= 1 and temp2 <= 12):\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "8701": {"id": 8701, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17444": {"id": 17444, "code": "s = \"1700\"\nif s == '0000' or (int(s[:2]) >= 13 and int(s[-2:]) >= 13):\n    print('NA')\nelif 1 <= int(s[:2]) <= 12 and 1 <= int(s[-2:]) <= 12:\n    print('AMBIGUOUS')\nelif 1 <= int(s[:2]) <= 12:\n    print('MMYY')\nelif 1 <= int(s[-2:]) <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "10187": {"id": 10187, "code": "n = 3\ns = \"())\"\nl, r, c = 0, 0, 0\nfor a in s:\n    if a == '(':\n        c += 1\n    elif c:\n        c -= 1\n    else:\n        l += 1\nr = c\nprint(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "2673": {"id": 2673, "code": "a = 1;b = 9;c = 7;d = 4\ndict = {}\ndict[a] = 1\ndict[b] = 1\ndict[c] = 1\ndict[d] = 1\nif 1 in dict and 9 in dict and 7 in dict and 4 in dict:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10219": {"id": 10219, "code": "from collections import deque\nn = 8\ns = \"))))((((\"\nans=deque(s)\ncnt=0\nfor i in range(n):\n  if (cnt==0)and(s[i]==')'):\n    ans.appendleft('(')\n  elif (cnt!=0)and(s[i]==')'):\n    cnt-=1\n    pass\n  elif s[i]=='(':\n    cnt+=1\nif cnt>0:\n  ans.append(')'*cnt)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "8066": {"id": 8066, "code": "n = 4;k = 3\nx = (2, 3, 1, 4)\nfor i,v in enumerate(x):\n    if v == 1:\n        r = i\na,b = divmod(r,k-1)\nif b > 0:\n    a += 1\nr = a * (k-1)\nl = n-r-1\nif l > 0:\n    c,d = divmod(l, k-1)\n    if d > 0:\n        c += 1\n    a += c\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15564": {"id": 15564, "code": "X = 12;Y = 3;Z = 1\ni=0\nwhile True:\n    need= i*Y + (i+1)*Z\n    if need>X:\n        break\n    i+=1\nprint(i-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3368": {"id": 3368, "code": "A = 20;B = 15\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "7845": {"id": 7845, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nanswer = math.ceil((N - 1)/ (K - 1))\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "1045": {"id": 1045, "code": "n = 111\ni = int(n / 111)\nif n % 111 != 0:\n    i += 1\nprint(i * 111)", "coverage": [">", ">", ">", "!", ">"]}, "11640": {"id": 11640, "code": "s = \"SAT\"\nweek = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nidx = week.index(s)\nprint(7-idx)", "coverage": [">", ">", ">", ">"]}, "18711": {"id": 18711, "code": "h = 2\nw = 100\nn = 200\nif n % max(h, w) == 0:\n    print(int(n//max(h, w)))\nelse:\n    print(int(n//max(h, w))+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "788": {"id": 788, "code": "K = 2\nmod = 7\nnumber = 1\nfor i in range(K):\n    if mod % K == 0:\n        break\n    number += 1\n    mod = (mod * 10 + 7) % K\nif mod % K == 0:\n    print(number)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "6058": {"id": 6058, "code": "import math\nN = 5\nP = math.ceil(N/2)\nprint(P)", "coverage": [">", ">", ">", ">"]}, "9635": {"id": 9635, "code": "n = 8\ns = \"))))((((\"\nl = []\nleft, right = 0, 0\nfor c in s:\n    if c == ')':\n        if l == []:\n            left += 1\n        else:\n            l.pop()\n    else:\n        l.append(1)\nright = len(l)\nprint('(' * left + s + ')' * right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "16045": {"id": 16045, "code": "n = 20;m = 30\nif(n-m*2>=0):\n  print(n-m*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "18072": {"id": 18072, "code": "s = \"1700\"\na,b = int(s[:2]),int(s[2:])\nyymm = False\nmmyy = False\nif b > 0 and b <= 12:\n  yymm = True\nif a <= 12 and 0 < a:\n  mmyy = True\nif yymm and mmyy:\n  print(\"AMBIGUOUS\")\nelif yymm:\n  print(\"YYMM\")\nelif mmyy:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4081": {"id": 4081, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nwake_time = h2*60 + m2 - (h1 *60 + m1);\nif wake_time > k:\n    print(wake_time - k);\nelse:\n    print(0);", "coverage": [">", ">", ">", "!", "!", ">"]}, "12646": {"id": 12646, "code": "import sys\ninput = \"<function <lambda>>\"\nX = 5\nif X == 7 or X == 5 or X == 3:\n    print('YES')\nelse:\n    print('NO') ", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "8757": {"id": 8757, "code": "N = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nmaxim = 0\nfor i in range(N):\n    count = 0\n    count += sum(a1[:i+1]) + sum(a2[i:])\n    if count > maxim:\n        maxim = count\nprint(maxim)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6349": {"id": 6349, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nu_cnt = [0] * N\nd_cnt = [0] * N\nt = 0\nfor i in range(N):\n    while t < N and A[t] < B[i]:\n        t += 1\n    u_cnt[i] = t\nt = N-1\nfor i in range(N-1,-1,-1):\n    while t >= 0 and C[t] > B[i]:\n        t -= 1\n    d_cnt[i] = N - 1 - t\nans = 0\nfor i in range(N):\n    ans += u_cnt[i] * d_cnt[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10292": {"id": 10292, "code": "n = 3\nS = \"())\"\nl = 0\nr = 0\nfor s in S:\n  if s == \"(\":\n    r += 1\n  else:\n    if r > 0:\n      r -= 1\n    else:\n      l += 1\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "14667": {"id": 14667, "code": "n = 3;p = 0\na = [1, 1, 1]\ncount = 0\nfor i in a:\n    if i%2 == 0:\n        count += 1\nif count == n:\n    if p == 1:\n        print(0)\n    else:\n        print(2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">"]}, "7138": {"id": 7138, "code": "h = 20;n = 3\nA = [4, 5, 6]\nattack=0\nfor i in range(n):\n    attack+=A[i]\nif attack>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4132": {"id": 4132, "code": "input = \"10 0 15 0 30\"\nsplit = input.split()\nH1 = split[0]\nM1 = split[1]\nH2 = split[2]\nM2 = split[3]\nK = split[4]\nh = int(H2)*60 - int(H1)*60 + int(M2) - int(M1) - int(K)\nprint(h)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9801": {"id": 9801, "code": "N = 3\nS = \"())\"\ncd = []\nq = []\nfor s in S:\n    if q and q[-1]==\"(\":\n        if s==\")\":\n            q.pop()\n        else:\n            q.append(s)\n    else:\n        q.append(s)\nsl = []\nsr = []\nfor s in q:\n    if s==\")\":\n        sl.append(\"(\")\n    else:\n        sr.append(\")\")\nprint(\"\".join(sl)+S+\"\".join(sr))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5300": {"id": 5300, "code": "n = 2\nmin = 0\nif n%2 == 0:\n  min = n/2\nelse:\n  min = n//2 + 1\nprint(int(min))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17443": {"id": 17443, "code": "s = \"0112\"\nif s == '0000' or (int(s[:2]) >= 13 and int(s[-2:]) >= 13):\n    print('NA')\nelif 1 <= int(s[:2]) <= 12 and 1 <= int(s[-2:]) <= 12:\n    print('AMBIGUOUS')\nelif 1 <= int(s[:2]) <= 12:\n    print('MMYY')\nelif 1 <= int(s[-2:]) <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "5687": {"id": 5687, "code": "from math import ceil\nN = 2\nprint(ceil(N/2))", "coverage": [">", ">", ">"]}, "3132": {"id": 3132, "code": "import sys\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nread = sys.stdin.buffer.read\nsys.setrecursionlimit(10 ** 7)\nINF = float('inf')\nS = \"1234567876\"\nans = INF\nfor a1, a2, a3 in zip(S, S[1:], S[2:]):\n    num = int(a1 + a2 + a3)\n    tmp = abs(num - 753)\n    ans = min(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8208": {"id": 8208, "code": "from bisect import bisect_left\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\npos = bisect_left(a, 1)\nprint((pos + k - 2) // (k - 1) + (n - pos + k - 3) // (k - 1))", "coverage": [">", ">", ">", ">", ">"]}, "9477": {"id": 9477, "code": "N = \"2017/01/31\"\nprint('2018'+N[4:])", "coverage": [">", ">"]}, "15436": {"id": 15436, "code": "x = 13;y = 3;z = 1\nprint (-(-((x-z)//(y+z))))", "coverage": [">", ">"]}, "8771": {"id": 8771, "code": "n = 1\na1 = [2]\na2 = [3]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15087": {"id": 15087, "code": "import itertools\nimport math\nfrom math import factorial\nN = 2;P = 0\nAs = [1, 3]\nodd = 0\neven = 0\nfor A in As:\n    if(A % 2 == 0):\n        even += 1\n    else:\n        odd += 1\neven_combi = 0\nfor i in range(even+1):\n    even_combi += math.factorial(even) // math.factorial(i) // math.factorial(even-i)\nodd_combi = 0\nif(P == 0):\n    for i in range(0,odd + 1,2):\n        odd_combi += math.factorial(odd) // math.factorial(i) // math.factorial(odd-i)\nelse:\n    for i in range(1, odd + 1 , 2):\n        odd_combi += math.factorial(odd) // math.factorial(i) // math.factorial(odd-(i))\nprint(odd_combi*even_combi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "430": {"id": 430, "code": "sl = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(sl)):\n    ord_s = ord(sl[i])\n    use = 123 - ord_s\n    if k - use >= 0 and sl[i] != \"a\":\n        sl[i] = \"a\"\n        k -= use\nif k > 0:\n    sl[-1] = chr((ord(sl[-1]) + k - 97) % 26 + 97)\nprint(\"\".join(sl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10043": {"id": 10043, "code": "N = 6\nS = \")))())\"\nl = 0\nr = 0\nfor s in S:\n    if s == \"(\":\n        r += 1\n    else:\n        if r > 0:\n            r -= 1\n        else:\n            l += 1\nans = \"\".join([\"(\"*l , S, \")\"*r])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "14675": {"id": 14675, "code": "n = 3;p = 0\na = [1, 1, 1]\non=a.count(1)\nze=a.count(0)\nans=0\nif on==0:\n    if p==0:\n        print(2**n)\n        exit()\n    if p==1:\n        print(0)\n        exit()\nprint(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "3982": {"id": 3982, "code": "x = 100000;y = 1;z = 1\nx -= z\nans = x // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "2171": {"id": 2171, "code": "A = [10, 7, 5]\nif A[1] + A[2] < A[0]:\n  b = 0\nelse:\n  b = A[1] + A[2] - A[0]\nx = [A[1], A[2]]\nprint(min(x) ,b)", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "16830": {"id": 16830, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    if b == \"D\":\n        print(\"D\")\nif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    if b == \"D\":\n        print(\"H\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!"]}, "2758": {"id": 2758, "code": "a = \"1129\"\nprint(\"YES\" if a==\"1479\" else \"NO\")", "coverage": [">", ">"]}, "10196": {"id": 10196, "code": "n = 3\ns = \"())\"\nl=r=0\nfor c in s:\n  if c=='(': l+=1\n  else: r+=1\n  if r>l: s='('+s; l+=1\nprint(s+')'*(l-r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12498": {"id": 12498, "code": "A = 8;B = 12;K = 2\nprint([i for i in range(1, 101) if A % i + B % i < 1][-K])", "coverage": [">", ">"]}, "19086": {"id": 19086, "code": "n = 5;ans = 0\nif not n%2:\n    for i in range(1,30):\n        ans+=n//(5**i*2)\nprint(ans)", "coverage": [">", ">", "!", "!", ">"]}, "7518": {"id": 7518, "code": "h = 20;n = 3\na = [4, 5, 6]\nans = 'No'\ntotal = 0\nfor i in range(n):\n    total += a[i]\n    if total >= h:\n        ans = 'Yes'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6753": {"id": 6753, "code": "H = 10;N = 3\na1 = ['4', '5', '6']\na2=[int(i) for i in a1]\nx=0\nfor i in a2:\n    x+=i\nprint('Yes' if x>=H else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6259": {"id": 6259, "code": "import bisect\nN = 3\nA_list = [1, 1, 1]\nB_list = [2, 2, 2]\nC_list = [3, 3, 3]\nA_list = sorted(A_list)\nB_list = sorted(B_list)\nC_list = sorted(C_list)\nans = 0\nfor i in range(N):\n    b = B_list[i]\n    a_nums = bisect.bisect_left(A_list, b)\n    c_nums = N - bisect.bisect_right(C_list, b)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9030": {"id": 9030, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif k< b-a:\n  print(\":(\")\nelif k< c-a:\n  print(\":(\")\nelif k< d-a:\n  print(\":(\")\nelif k< e-a:\n  print(\":(\")\nelif k< c-b:\n  print(\":(\")\nelif k< d-b:\n  print(\":(\")\nelif k< e-b:\n  print(\":(\")\nelif k< d-c:\n  print(\":(\")\nelif k< e-c:\n  print(\":(\")\nelif k< e-d:\n  print(\":(\")\nelse:\n  print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4929": {"id": 4929, "code": "S = \"xyz\"\nprint(S[0] + str(S.__len__()-2) + S[-1])", "coverage": [">", ">"]}, "10704": {"id": 10704, "code": "S = \"level\"\nanswer = 'Yes'\nif S != S[::-1]:\n    answer = 'No'\nfirst = S[:len(S) // 2]\nlast = S[len(S) // 2 + 1:]\nif first != first[::-1]:\n    answer = 'No'\nif last != last[::-1]:\n    answer = 'No'\nprint(answer)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13757": {"id": 13757, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nlength=(H2*60+M2)-(H1*60+M1)\nans=length-K\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13643": {"id": 13643, "code": "A = \"happy\";B = \"newyear\";C = \"enjoy\"\nprint(A, B, C)", "coverage": [">", ">"]}, "568": {"id": 568, "code": "s = \"a\"\nk = 25\nfor i in range(len(s)):\n    if s[i] != \"a\":\n        req = ord(\"z\") - ord(s[i]) + 1\n        if req <= k:\n            k -= req\n            s = s[:i] + \"a\" + s[i+1:]\nif k > 0:\n    s = s[:-1] + chr(ord(s[-1]) + k%26)\nprint(s)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "2180": {"id": 2180, "code": "Moji = \"10 7 5\"\nListNAB=Moji.split() \nN=int(ListNAB[0])\nA=int(ListNAB[1])\nB=int(ListNAB[2])\nif A>=B:\n  nmax=B\nelif A<B:\n  nmax=A\nif N>A+B:\n  nmin=0\nif N<=(A+B):\n    nmin=A+B-N\nprint(str(nmax)+\" \"+str(nmin))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">"]}, "736": {"id": 736, "code": "import math\nk = 2\nif(k%2)==0:\n    print(\"-1\")\nelse:\n    flag=0\n    for x in range(1,1000001):\n        if (7%(9*k)*(pow(10,x,k*9)-1)%(9*k))==0:\n            print(x)\n            flag=1\n            break\n    if flag==0:\n        print(-1)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5146": {"id": 5146, "code": "s = \"internationalization\"\na = len(s)\nb = len(s)-2\nx = s[0] + str(b) + s[len(s)-1]\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "15902": {"id": 15902, "code": "a = 12;b = 4\nb2 = b * 2\nr = 0 if a <= b2 else a - b2\nprint(r)", "coverage": [">", ">", ">", ">"]}, "7524": {"id": 7524, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nh = 211;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a)>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1010": {"id": 1010, "code": "n = 750\nt = 0\nwhile t*111 < n  and n > (t+1)*111:\n    t += 1\nprint((t+1)*111)", "coverage": [">", ">", ">", ">", ">"]}, "18326": {"id": 18326, "code": "h = 3\nw = 7\nn = 10\nprint(n//max(h,w) if n%max(h,w)==0 else n//max(h,w)+1)", "coverage": [">", ">", ">", ">"]}, "10315": {"id": 10315, "code": "a = 1;b = 1;k = 1\nii=1\nans=[]\nwhile max(a,b)>=ii:\n    if a%ii==0 and b%ii==0:\n        ans.append(ii)\n    ii+=1\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19329": {"id": 19329, "code": "import math\nn = 3\ngcd = math.gcd(2, n)\nlcm = int(2*n/gcd)\nans = lcm\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1166": {"id": 1166, "code": "n = 750\nfor x in range(0, 1000, 111):\n    if x >= n:\n        print(x)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "18089": {"id": 18089, "code": "s = ['1', '9', '0', '5']\nif s[0]=='0':\n  t=int(s[1])\nelse:\n  t=int(''.join(s[:2]))\nif s[2]=='0':\n  u=int(s[3])\nelse:\n  u=int(''.join(s[2:]))\nif t>=1 and t<=12:\n  if u>=1 and u<=12:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if u>=1 and u<=12:\n    print('YYMM')\n  else:\n    print('NA')", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "9083": {"id": 9083, "code": "a = \"2017/01/31\"\nb = a[:3] + \"8\" + a[4:]\nprint(b)", "coverage": [">", ">", ">"]}, "4725": {"id": 4725, "code": "s = \"xyz\"\ncnt = 0\nfor i in range(1,len(s)-1):\n    cnt += 1\nprint(s[0]+str(cnt)+s[len(s)-1])", "coverage": [">", ">", ">", ">", ">"]}, "10011": {"id": 10011, "code": "N = 8\nS = \"))))((((\"\nneed_left = 0\npointer = 0\nfor i in range(len(S)):\n    if S[i] == '(':\n        pointer += 1\n    else:\n        if pointer == 0:\n            need_left += 1\n        else:\n            pointer -= 1\nneed_right = pointer\nres = \"(\" * need_left + S + \")\" * need_right\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "1019": {"id": 1019, "code": "N = 750\nS = str(N)\nx = int(S[0])\ny = int(S[1])\nz = int(S[2])\nif x > y:\n    ans = x*100+x*10+x\nelif x < y:\n    x += 1\n    ans = x*100+x*10+x\nelse:\n    if x > z:\n        ans = x*100+x*10+x\n    elif x < z:\n        x += 1\n        ans = x*100+x*10+x\n    else:\n        ans = N\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "114": {"id": 114, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n    if k==0:break\n    num=ord(s[i])\n    ch_num=123-num\n    if i==len(s)-1:\n        s[i]=chr(97+(num+k-97)%26) \n        k=0\n        break\n    elif s[i]=='a':continue\n    elif ch_num<=k:\n        s[i]='a'\n        k-=ch_num\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "2152": {"id": 2152, "code": "n = 10;a = 3;b = 5\nmin_num = min(a,b)\nmax_num = max(a+b-n,0)\nprint(min_num, max_num)", "coverage": [">", ">", ">", ">"]}, "103": {"id": 103, "code": "if __name__ == \"__main__\":\n    s = \"a\"\n    k = 25\n    s_num = [0] * len(s)\n    res = k\n    for i in range(len(s)):\n        tmp = ord(s[i]) - 97\n        if tmp != 0 and 26 - tmp <= res:\n            res -= (26 - tmp)\n            s_num[i] = 0\n        else:\n            s_num[i] = tmp\n    res %= 26\n    s_num[-1] += res\n    ans = ''\n    for i in s_num:\n        ans += chr(i + 97)\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "15686": {"id": 15686, "code": "import sys\ninput = sys.stdin.readline\nX = 100000;Y = 1;Z = 1\nans = 0\nX -= Z\nans += (X // (Y + Z))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1474": {"id": 1474, "code": "n = 111\nif 100<=n<=111:\n    print(111)\nelif 112<=n<=222:\n    print(222)\nelif 223<=n<=333:\n    print(333)\nelif 334<=n<=444:\n    print(444)\nelif 445<=n<=555:\n    print(555)\nelif 556<=n<=666:\n    print(666)\nelif 667<=n<=777:\n    print(777)\nelif 778<=n<=888:\n    print(888)\nelif 889<=n<=999:\n    print(999)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "2390": {"id": 2390, "code": "n = 4;m = 3\nif n<=1:\n    n_ans=0\nelse:\n    n_ans=n*(n-1)/2\nif m<=1:\n    m_ans=0\nelse:\n    m_ans=m*(m-1)/2\nprint(int(n_ans+m_ans))", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "17249": {"id": 17249, "code": "a = \"D\";b = \"D\"\nif b == 'H':\n    if a == 'H':\n        print('H')\n    else:\n        print('D')\nelif b == 'D':\n    if a == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "3898": {"id": 3898, "code": "x = 100000;y = 1;z = 1\nx -= 2*z\nans = 1\nx -= y\nans += x//(y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12650": {"id": 12650, "code": "x = 5\nans =\"NO\"\nif 2<x<8 and x%2==1:\n    ans =\"YES\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11432": {"id": 11432, "code": "D = dict()\nD['SUN'] = 7\nD['MON'] = 6\nD['TUE'] = 5\nD['WED'] = 4\nD['THU'] = 3\nD['FRI'] = 2\nD['SAT'] = 1\nprint(D[\"SAT\"])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14186": {"id": 14186, "code": "_ = \"9\"\nA = map(int, \"1 2 1 2 1 2 1 2 1\".split())\nprev = next(A)\nup = None\ncount = 1\nfor i in A:\n    if prev < i:\n        if up is None:\n            up = True\n        elif not up:\n            count += 1\n            up = None\n    elif prev > i:\n        if up is None:\n            up = False\n        elif up:\n            count += 1\n            up = None\n    prev = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "19037": {"id": 19037, "code": "n = 12\nif n%2:\n    print(0)\nelse:\n    ans = (n//5)//2\n    tmp = 5\n    while True:\n        tmp *= 5\n        if tmp > n:\n            break\n        ans += (n//tmp)//2\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12632": {"id": 12632, "code": "x = 5\nans = \"YES\" if (x == 3 or x == 5 or x == 7) else \"NO\"\nprint(ans)", "coverage": [">", ">", ">"]}, "13525": {"id": 13525, "code": "d = \"abcde,fghihgf,edcba\"\nprint( d[:5] + \" \" + d[6:13] + \" \" +d[14:] )", "coverage": [">", ">"]}, "15190": {"id": 15190, "code": "x = 13;y = 3;z = 1\nnum=0\nsum=z\nfor i in range(x) :\n    if sum<=x :\n        sum+=y\n        num+=1\n        sum+=z\nprint(num-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9762": {"id": 9762, "code": "N = 8\nS = \"))))((((\"\nx=0\nm=0\nfor i in range(N):\n    if S[i]=='(':\n        x+=1\n    else:\n        x-=1\n        m=min(x,m)\na=-m\nb=x-m\nprint('('*a+S+')'*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "1351": {"id": 1351, "code": "n = [1, 1, 1]\nif n[0]<n[1] or (n[0]==n[1] and n[0]<n[2]):\n  print(str(n[0]+1)*3)\nelse:\n  print(str(n[0])*3)", "coverage": [">", ">", "!", "!", ">"]}, "13810": {"id": 13810, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\nleft = 0\nright = 1\ncou = 0\nf = 2\nwhile right!=n and right!=n+1:\n  if l[left]==l[right]:\n    left += 1\n    right += 1\n  elif l[left]<l[right]:\n    while right!=n and l[left]<=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left +=1\n    right += 1\n    f = 1\n  else:\n    while right!=n and l[left]>=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left += 1\n    right += 1\n    f = 0\nif f==2:\n  cou += 1\nelif f==1 and l[-2]>l[-1]:\n  cou += 1\nelif f==0 and l[-2]<l[-1]:\n  cou += 1\nprint(cou)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "14023": {"id": 14023, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 1\nans = 1\nflg = 0\nfor i, j in zip(A[:-1],A[1:]):\n    if i < j:\n        if flg == 0:\n            flg = 1\n        elif flg == 2:\n            ans += 1\n            flg = 0\n    if i > j:\n        if flg == 0:\n            flg = 2\n        elif flg == 1:\n            ans += 1\n            flg = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "5114": {"id": 5114, "code": "a = \"smiles\"\nans=a[0]+str(len(a)-2)+a[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "3549": {"id": 3549, "code": "A = 20;B = 30\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "14736": {"id": 14736, "code": "N = 3;P = 0\no = 3\nprint(2**(N-1) if o else 2**N if P==0 else 0)", "coverage": [">", ">", ">"]}, "13732": {"id": 13732, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh=h2 - h1\nif h < 0:\n    h = 24+h\n    m=m2 - m1\n    du=h*60+m-k\nelif h == 0:\n    if m1 < m2:\n        du = m2-m1-k\n    else:\n        du = 24*60 +(m2-m1)-k\nelse:\n    du = h*60+(m2-m1)-k\nprint(du)", "coverage": [">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">"]}, "994": {"id": 994, "code": "N = 750\nx = 111\nwhile x < N:\n    x += 111\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "15227": {"id": 15227, "code": "X = 13;Y = 3;Z = 1\np = X - Z\na = Z+Y\nans = p//a\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "6737": {"id": 6737, "code": "h = 10;n = 3\na = [4, 5, 6]\nif h <= sum(a):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "4560": {"id": 4560, "code": "s = \"xyz\"\nn = len(s[1:-1])\nprint(s[0]+str(n)+s[-1])", "coverage": [">", ">", ">"]}, "6386": {"id": 6386, "code": "n = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nimport bisect\nans=0\nfor i in range(n):\n  b=B[i]\n  ans+=bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17212": {"id": 17212, "code": "a = \"D\";b = \"H\"\nhatsugen=[\"H\",\"D\"]\nidx=hatsugen.index(b)\nif a==\"H\":\n    print(hatsugen[idx])\nelse:\n    print(hatsugen[1-idx])", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19371": {"id": 19371, "code": "N = 999999999\nif(N % 2 == 0):\n    print(N)\nelse:\n    print(2 * N)", "coverage": [">", ">", "!", "!", ">"]}, "6977": {"id": 6977, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\natk = 0\nfor i in A:\n    atk += i\nif H > atk:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11657": {"id": 11657, "code": "a = \"SUN\"\narr = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\np = arr.index(a)\nprint(7-p)", "coverage": [">", ">", ">", ">"]}, "17643": {"id": 17643, "code": "S = \"1905\"\nA = int(S[:2])\nB = int(S[2:])\nif 1<=A<=12 and 1<=B<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=A<=12:\n  print(\"MMYY\")\nelif 1<=B<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "16339": {"id": 16339, "code": "n = 2\na = [100, 0]\na.sort(reverse=True)\nans = a[1]\nfor i in range(1, n-1):\n  if abs(a[0]/2 - a[i]) > abs(a[0]/2 - a[i+1]):\n    ans = a[i+1]\n  else:\n    break\nprint(a[0], ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "3803": {"id": 3803, "code": "x = 12;y = 3;z = 1\nw=y+z\nprint(x//w if x%w>=z else x//w-1)", "coverage": [">", ">", ">"]}, "12125": {"id": 12125, "code": "m = 11;d = 16\nn = 11;e = 17\nprint(int(n >= 2 and e == 1))", "coverage": [">", ">", ">"]}, "6610": {"id": 6610, "code": "import sys\ninput = sys.stdin.readline\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nimport bisect\na.sort()\nc.sort()\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (len(c) - bisect.bisect_right(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4290": {"id": 4290, "code": "h1 = \"10\";m1 = \"0\";h2 = \"12\";m2 = \"0\";k = \"120\"\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\nk = int(k)\nif h1 > h2:\n  h2 += 24\nh = h2 - h1\nhm = h * 60\nprint(hm - m1 + m2 - k)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18588": {"id": 18588, "code": "h = 14\nw = 12\nn = 112\ncount1 = 0\ncount2 = 0\nif h > w:\n  while w > 0:\n    count1 += h\n    if count1 >= n:\n      count2 += 1\n      break\n    else:\n      count2 += 1\n      w -= 1\nelse:\n  while h > 0:\n    count1 += w\n    if count1 >= n:\n      count2 += 1\n      break\n    else:\n      count2 += 1\n      h -= 1\nprint(count2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11816": {"id": 11816, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(int(m1 + 1 == m2 and d2 == 1))", "coverage": [">", ">", ">"]}, "17475": {"id": 17475, "code": "s = \"1905\"\nif ((int(s[0])==0 and 1<=int(s[1])<=9)  or (int(s[0]) == 1 and 0<=int(s[1])<=2)) and ((int(s[2])==0 and 1<=int(s[3])<=9)  or (int(s[2]) == 1 and 0<=int(s[3])<=2) ):\n  print(\"AMBIGUOUS\")\nelif (int(s[0])==0 and 1 <=int(s[1])<=9)  or (int(s[0]) == 1 and 0<=int(s[1])<=2):\n  print(\"MMYY\")\nelif (int(s[2])==0 and 1 <=int(s[3])<=9)  or (int(s[2]) == 1 and 0<=int(s[3])<=2):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "11298": {"id": 11298, "code": "a = \"SAT\"\nif a=='SUN':\n    print('7')\nelif a=='SAT':\n    print('1')\nelif a=='FRI':\n    print('2')\nelif a=='THU':\n    print('3')\nelif a=='WED':\n    print('4')\nelif a=='TUE':\n    print('5')\nelse:\n    print('6')", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "2573": {"id": 2573, "code": "print('YES' if set(list(map(int,\n                            \"1 9 7 4\".split()))) == set([1, 9, 7, 4]) else 'NO')", "coverage": [">", ">"]}, "16768": {"id": 16768, "code": "x = \"D\";y = \"H\"\nif x == \"H\" and y == \"H\" or x == \"D\" and y == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "4999": {"id": 4999, "code": "s = \"internationalization\"\na = s[0]\nb = s[-1]\nc = s[1:-1]\nprint(a+str(len(c))+b)", "coverage": [">", ">", ">", ">", ">"]}, "5354": {"id": 5354, "code": "import math\nN = 2\nresult=math.ceil(N/2)\nprint(result)", "coverage": [">", ">", ">", ">"]}, "10311": {"id": 10311, "code": "A = 1;B = 1;K = 1\nD = [x for x in range(1, min(A,B)+1) if A%x == 0 and B%x == 0]\nprint(D[-K])", "coverage": [">", ">", ">"]}, "11169": {"id": 11169, "code": "S = \"akasaka\"\nL=len(S)\nans=0\nS1=S[:(L-1)//2]\nS2=S[((L+3)//2)-1:]\nif (S==S[::-1]) & (S1==S1[::-1]) & (S2==S2[::-1]):\n    ans='Yes'\nelse:\n    ans='No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2857": {"id": 2857, "code": "S = \"1234567876\"\nnum = \"\"\nl = len(S)\ndis = float(\"inf\") \nfor i in range(l-2):\n    num = S[i:i+3]\n    if abs(753-int(num)) < dis:\n        dis = abs(753-int(num))\nprint(dis)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8578": {"id": 8578, "code": "import itertools\nN = 1\nA = [2]\nB = [3]\nmaxi = 0\nfor i in range(N):\n    if sum(A[0:i+1]) + sum(B[i:N]) > maxi:\n        maxi = sum(A[0:i+1]) + sum(B[i:N])\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1048": {"id": 1048, "code": "n = 111\nwhile str(n)[0]!=str(n)[1] or str(n)[1]!=str(n)[2]:\n  n+=1\nprint(n)", "coverage": [">", ">", "!", ">"]}, "3020": {"id": 3020, "code": "s = \"1111111111\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n    a = '' + s[i] + s[i+1] + s[i+2]\n    a = int(a)\n    ans = min(ans, abs(a - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12775": {"id": 12775, "code": "X = \"6\"\nprint(\"YES\" if (X in \"753\") else \"NO\")", "coverage": [">", ">"]}, "5031": {"id": 5031, "code": "word = ['x', 'y', 'z']\nrep_word = []\nnum_abb = len(word) - 2\nrep_word.append(word[0])\nrep_word.append(str(num_abb))\nrep_word.append(word[-1])\nprint(''.join(rep_word))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16586": {"id": 16586, "code": "s = \"D D\"\nt=s.split(' ')\nif t[0]==t[1]:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", ">", "!", "!"]}, "16611": {"id": 16611, "code": "a = \"H\";b = \"H\"\nif a=='H' and b=='H'or a=='D' and b=='D':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "4000": {"id": 4000, "code": "import math\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif h2 < h1:\n    h2 += 24\nif m2 < m1:\n    h2 -= 1\n    m2 += 60\nallMin = (h2 - h1) * 60 + (m2 - m1)\nres = allMin - k\nif res < 0:\n    res = 0\nprint(res)", "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", ">"]}, "18119": {"id": 18119, "code": "S = \"1905\"\nif (int(S[:2]) == 0 and (int(S[2:]) >= 13 or int(S[2:]) == 0)) or   (int(S[2:]) == 0 and (int(S[:2]) >= 13 or int(S[:2]) == 0)) or   (int(S[2:]) >= 13 and int(S[:2]) >= 13):\n    print('NA')\nelif (int(S[:2]) >= 13 and int(S[2:]) < 13) or     (int(S[:2]) == 0 and int(S[2:]) < 13):\n    print('YYMM')\nelif (int(S[2:]) >= 13 and int(S[:2]) < 13) or     (int(S[2:]) == 0 and int(S[:2]) < 13):\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "14359": {"id": 14359, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup=2\nans=1\nfor i in range(1,n):\n    if up==2:\n        if a[i-1]<a[i]:\n            up=1\n        elif a[i-1]>a[i]:\n            up=0\n    elif up==1 and a[i-1]>a[i]:\n        up=2\n        ans+=1\n    elif up==0 and a[i-1]<a[i]:\n        up=2\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "3056": {"id": 3056, "code": "import sys\nimport copy\nimport math\nimport itertools\nS = \"35753\"\ntmp=753\nfor i in range(len(S)):\n    if abs(int(S[i:i+3])-753)<tmp:\n        tmp=abs(int(S[i:i+3])-753)\nprint(tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5426": {"id": 5426, "code": "import itertools\nimport functools\nimport math\nfrom collections import Counter\nfrom itertools import combinations\nN = 2\nprint((N+1)//2)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4393": {"id": 4393, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nH = h2 - h1\nif m1 <= m2:\n    M = m2 - m1\nelse:\n    M = 60 - m1 + m2\n    H -= 1\nprint(H*60 + M - k)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "2659": {"id": 2659, "code": "n = \"4 9 0 8\"\nif n.count('1') == 1 and n.count('9') == 1 and n.count('7') == 1 and n.count('4') == 1:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "9488": {"id": 9488, "code": "s = \"2017/01/07\"\nans = '2018' + s[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "12620": {"id": 12620, "code": "a = 100;b = 50;k = 4\nc = min(a,b)\nlist = []\nfor ci in range(1,c+1):\n    if a % ci == 0 and b % ci == 0:\n        list.append(ci)\nprint(list[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13486": {"id": 13486, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "13522": {"id": 13522, "code": "word = \"abcde,fghihgf,edcba\"\nnew_word = word.replace(',', ' ')\nprint(new_word)", "coverage": [">", ">", ">"]}, "13456": {"id": 13456, "code": "a = \"abcde,fghihgf,edcba\"\nprint(a.replace(\",\",\" \"))", "coverage": [">", ">"]}, "15472": {"id": 15472, "code": "X = 12;Y = 3;Z = 1\nans = 0\nX -= Z\nfor _ in range(X):\n    if X < (Y + Z):\n        print(ans)\n        break\n    else:\n        ans += 1\n        X -= (Y + Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2675": {"id": 2675, "code": "a = 4;b = 9;c = 0;d = 8\ndict = {}\ndict[a] = 1\ndict[b] = 1\ndict[c] = 1\ndict[d] = 1\nif 1 in dict and 9 in dict and 7 in dict and 4 in dict:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1821": {"id": 1821, "code": "n = 10;a = 7;b = 5\nx = min(a, b)\ny = - ( n - a - b )\ny = 0 if y < 0 else y\nprint(x,y)", "coverage": [">", ">", ">", ">", ">"]}, "7491": {"id": 7491, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nhoge = sum(a)\nh -= hoge\nif h <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "14532": {"id": 14532, "code": "N = 2;P = 0\nA = [1, 3]\nans = [1,0]\nfor a in A:\n    if a%2:\n        ans[1],ans[0] = ans[1] + ans[0], ans[1] + ans[0]\n    else:\n        ans[0] = ans[0]*2\n        ans[1] = ans[1]*2\nprint(ans[P])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "1899": {"id": 1899, "code": "n = 100;a = 100;b = 100\nsaidai = min(a,b)\nsaisyo = max(0,a+b-n)\nprint(saidai,saisyo)", "coverage": [">", ">", ">", ">"]}, "5037": {"id": 5037, "code": "s = \"xyz\"\nh = s[0]\nt = s[len(s) - 1]\nl = str(len(s[1:-1]))\nprint(h+l+t)", "coverage": [">", ">", ">", ">", ">"]}, "18568": {"id": 18568, "code": "h = 2\nw = 100\nn = 200\nl = max(h,w)\nprint(-(-n//l))", "coverage": [">", ">", ">", ">", ">"]}, "8450": {"id": 8450, "code": "N = 1\nA = [2]\nB = [3]\ntmp = sum(A) + B[N-1]\nans = tmp\nfor i in reversed(range(1,N)):\n    tmp -= A[i]\n    tmp += B[i-1]\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14822": {"id": 14822, "code": "N = 3;P = 0\na = [1, 1, 1]\nnum_odd = sum([i%2 == 1 for i in a])\nnum_even = N - num_odd\nce = 2 ** num_even\nco = 2 ** (num_odd - 1)\nif num_odd == 0:\n    co = P^1\nprint(co * ce)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "7541": {"id": 7541, "code": "H = 10;n = 3\narr = [4, 5, 6]\nsum = 0\nfor x in arr:\n\tsum += x\nprint(\"Yes\" if sum >= H else \"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "16548": {"id": 16548, "code": "a = \"H\";b = \"H\"\nif a=='H':\n    print(b)\nelse:\n    print('HD'.replace(b,''))", "coverage": [">", ">", ">", "!", "!"]}, "13779": {"id": 13779, "code": "L = [10, 0, 15, 0, 30]\nA=60*L[0]+L[1]\nB=60*L[2]+L[3]\nif B-A <= L[4]:\n\tprint(\"0\")\nelse:\n\tprint(str(B-A-L[4]))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10225": {"id": 10225, "code": "N = 8\nS = \"))))((((\"\nadd_left=0\nadd_right=0\nfor s in S:\n  if s==\"(\":\n    add_right+=1\n  elif add_right==0:\n    add_left+=1\n  else:\n    add_right-=1\nprint('(' * add_left + S + ')' * add_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3742": {"id": 3742, "code": "x = 12;y = 3;z = 1\nresult = 0\nwhile y*result + z*(result+1) <= x:\n  result += 1\nprint(result-1)", "coverage": [">", ">", ">", ">", ">"]}, "4978": {"id": 4978, "code": "S = \"internationalization\"\nnum = len(S) - 2\nnew = (S[0] + str(num) + S[len(S)-1])\nprint(new)", "coverage": [">", ">", ">", ">"]}, "9154": {"id": 9154, "code": "dateString = \"2017/01/07\"\nprint('2018/01/'+dateString[-2:])", "coverage": [">", ">"]}, "15847": {"id": 15847, "code": "x = 12;y = 3;z = 1\na = x-z\nb = a//(y+z)\nprint(b)", "coverage": [">", ">", ">", ">"]}, "4168": {"id": 4168, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nx = 60*a + b\ny = 60*c + d\nif y>x:\n    print(y-x-k);\nelse:\n    print(1440+y-x-k);", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3548": {"id": 3548, "code": "A = 20;B = 15\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "760": {"id": 760, "code": "from sys import stdin\nk = 101\nnum = 7\nflag = 0\nfor i in range(1, k + 1):\n    if num % k == 0:\n        flag = 1\n        break\n    num = (num * 10 + 7) % k\nif flag == 1:\n    print(i)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4771": {"id": 4771, "code": "S = \"internationalization\"\nl = len(S)-1\nn = len(S)-2\nans = S[0] + str(n) + S[l]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "10850": {"id": 10850, "code": "s = \"atcoder\"\nt = s[::-1]\nn = len(s)\na = s[:(n - 1) // 2]\nb = t[:(n - 1) // 2]\nif s == t and a == a[::-1] and b == b[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19031": {"id": 19031, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit()\nans = 0\nn //= 2\nwhile n > 0:\n    ans += n // 5\n    n //= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10705": {"id": 10705, "code": "S = \"atcoder\"\nanswer = 'Yes'\nif S != S[::-1]:\n    answer = 'No'\nfirst = S[:len(S) // 2]\nlast = S[len(S) // 2 + 1:]\nif first != first[::-1]:\n    answer = 'No'\nif last != last[::-1]:\n    answer = 'No'\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "367": {"id": 367, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n  if s[i] != 'a' and 123 - ord(s[i]) <= k:\n    k -= (123 - ord(s[i]))\n    s[i] = \"a\"\nk %= 26\nif ord(s[-1]) + k > 122:\n  s[-1] = chr(ord(s[-1]) + k - 26)\nelse:\n  s[-1] = chr(ord(s[-1]) + k)\nans = \"\"\nfor i in s:\n  ans += i\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14074": {"id": 14074, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\ndr = 0\nsav = a[0]\nfor i in range(1, n):\n    if dr == 0:\n        if sav < a[i]:\n            dr = 1\n        elif sav > a[i]:\n            dr = -1\n    elif dr == 1:\n        if sav > a[i]:\n            cnt = cnt + 1\n            dr = 0\n    elif dr == -1:\n        if sav < a[i]:\n            cnt = cnt + 1\n            dr = 0\n    sav = a[i]\nans = cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "6192": {"id": 6192, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfrom bisect import bisect_left, bisect_right\nfor b in B:\n    ac = bisect_left(A,b)\n    cc = N - bisect_right(C,b)\n    ans += ac * cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11057": {"id": 11057, "code": "s = \"akasaka\"\nn = len(s)\nt = s[:(n-1)//2]\nu = s[(n+3)//2-1:]\nif (s == s[::-1]\n    and t == t[::-1]\n    and u == u[::-1]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16315": {"id": 16315, "code": "import bisect\nn = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nif n == 2:\n  ans = [A[1],A[0]]\n  print(*ans)\n  exit()\nMAX = A[-1]\ntarget = MAX//2\nok = 0\nng = n\nwhile abs(ok-ng)>1:\n  mid = (ok+ng)//2\n  if A[mid] <= target:\n    ok = mid\n  else:\n    ng = mid\nans = [MAX,A[ok]]\nnxt = ok+1\nif nxt < n:\n  dif0 = min(MAX-A[ok],A[ok])\n  dif1 = min(MAX-A[nxt],A[nxt])\n  if dif0 < dif1:\n    ans[1] = A[nxt]\nprint(*ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15176": {"id": 15176, "code": "x = 12;y = 3;z = 1\nx-=z\nprint((x-x%(y+z))//(y+z))", "coverage": [">", ">", ">"]}, "7590": {"id": 7590, "code": "H = 20;N = 3\nA = [4, 5, 6]\nprint('Yes' if H - sum(A) <= 0 else 'No')", "coverage": [">", ">", ">"]}, "6355": {"id": 6355, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA = sorted(A)\nC = sorted(C)\nans = 0\nfor i in B:\n    ans += (bisect.bisect_left(A, i)) * (N - bisect.bisect_right(C, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2841": {"id": 2841, "code": "S = \"1111111111\"\nans = 999\nfor s in range(len(S)-2):\n  ans = min(abs(753-int(S[:3])),ans)\n  S = S[1:]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "769": {"id": 769, "code": "K = 2\nr = 7 % K\nans = -2\nfor i in range(K):\n   if r == 0:\n      ans = i\n      break\n   r = 10*r + 7\n   r = r % K\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "4940": {"id": 4940, "code": "s = \"smiles\"\nprint(\"{0}{1}{2}\".format(s[0], len(s)-2, s[-1]))", "coverage": [">", ">"]}, "14595": {"id": 14595, "code": "n = 1;p = 1\na = [50]\nflg = True\nfor i in a:\n    if i % 2 != 0:\n        flg = False\n        break\nif flg:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!"]}, "7526": {"id": 7526, "code": "h = 20;hoge = 3\nl = [4, 5, 6]\nprint('Yes' if h <= sum(l) else 'No')", "coverage": [">", ">", ">"]}, "417": {"id": 417, "code": "s = \"a\"\nk = 25\na = ord(\"a\") + 26\nmod = 26\nans = \"\"\nfor i in s[:-1]:\n  tmp = (a - ord(i)) % mod\n  if tmp <= k:\n    k -= tmp\n    ans += \"a\"\n  else:\n    ans += i\nans += chr(ord(\"a\") + (ord(s[-1]) - a + k) % mod)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "6962": {"id": 6962, "code": "N = 211;M = 5\nA = [31, 41, 59, 26, 53]\nif N - sum(A) <= 0:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "13984": {"id": 13984, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc = 1; w = 0\nfor i in range(N-1):\n    if w == 0:\n        if A[i] < A[i+1]:\n            w = 1\n        elif A[i] > A[i+1]:\n            w = -1\n    elif (w > 0 and A[i] > A[i+1]) or (w < 0 and A[i] < A[i+1]):\n         w = 0\n         c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3559": {"id": 3559, "code": "a = 12;b = 4\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "13310": {"id": 13310, "code": "s = \"happy,newyear,enjoy\"\nA = s[:5]\nB = s[6:13]\nC = s[14:]\nstr = A + \" \" + B + \" \" + C\nprint(str)", "coverage": [">", ">", ">", ">", ">", ">"]}, "10149": {"id": 10149, "code": "n = 6\ns = \")))())\"\ncntr = 0\nfor i in range(n-1, -1, -1):\n    if s[i] == ')':\n        cntr += 1\n    elif cntr > 0:\n        cntr -= 1\ns = '(' * cntr + s\nn = len(s)\ncntl = 0\nfor i in range(n):\n    if s[i] == '(':\n        cntl += 1\n    elif cntl > 0:\n        cntl -= 1\ns += ')' * cntl\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19153": {"id": 19153, "code": "N = 5;a = 10;b = 0\nif N&1==0:\n    while a<=N:b+=N//a;a*=5\nprint(b)", "coverage": [">", ">", "!", ">"]}, "17620": {"id": 17620, "code": "s = \"0112\"\nhead = int(s[:2])\ntail = int(s[2:])\nis_mmyy = False\nis_yymm = False\nif 1 <= head <= 12:\n    is_mmyy = True\nif 1 <= tail <= 12:\n    is_yymm = True\nif is_yymm and is_mmyy:\n    print('AMBIGUOUS')\nelif is_yymm:\n    print('YYMM')\nelif is_mmyy:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "5832": {"id": 5832, "code": "i = 100\nif i%2==0: print(i//2)\nelse: print(i//2+1)", "coverage": [">", ">", "!"]}, "7304": {"id": 7304, "code": "a = [20, 3]\nb = [4, 5, 6]\nif a[0]<= sum(b):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "8233": {"id": 8233, "code": "import sys,math\ninput = sys.stdin.readline\nN = 4;K = 3\nA = [2, 3, 1, 4]\nprint(1+math.ceil((N-K)/(K-1)))", "coverage": [">", ">", ">", ">", ">"]}, "11386": {"id": 11386, "code": "s = \"SAT\"\napple = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\"]\nprint(7-apple.index(s))", "coverage": [">", ">", ">"]}, "254": {"id": 254, "code": "S = \"codefestival\"\nK = 100\noz = ord(\"z\")\nans = \"\"\nfor s in S[:-1]:\n    if s != \"a\" and oz+1-ord(s) <= K:\n        K -= oz+1-ord(s)\n        ans += \"a\"\n    else:\n        ans += s\nans += chr(((ord(S[-1])-ord(\"a\")+K)%26)+ord(\"a\"))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14552": {"id": 14552, "code": "N = 3;P = 0\nA = [1, 1, 1]\neven = 0\nodd = 0\nfor i in range(N):\n    if A[i]%2==0:\n        even += 1\n    else:\n        odd += 1\nif odd>=1:\n    ans = pow(2,even+odd-1)\nelif P==0:\n    ans = pow(2,even)\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "10634": {"id": 10634, "code": "a = 8;b = 12;k = 2\nans = []\nab = [a,b]\nfor i in range(1,max(ab)+1):\n  if(a%i == 0 and b%i == 0):\n    ans.append(i)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17956": {"id": 17956, "code": "s = \"0112\"\nif 1 <= int(s[:2]) <= 12 and 1 <= int(s[2:]) <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= int(s[:2]) <= 12:\n  print(\"MMYY\")\nelif 1 <= int(s[2:]) <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10944": {"id": 10944, "code": "s = \"akasaka\"\nn = len(s)\na, b = s[:(n - 1) // 2], s[(n + 1) // 2:]\nprint(\"Yes\" if s == s[::-1] and a == a[::-1] and b == b[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "7266": {"id": 7266, "code": "H = 211;N = 5\nA_list = map(int, \"31 41 59 26 53\".split())\nprint(\"Yes\" if sum(A_list) >= H else \"        No   \")", "coverage": [">", ">", ">"]}, "8836": {"id": 8836, "code": "n = 5\nlist_1 = [3, 2, 2, 4, 1]\nlist_2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5809": {"id": 5809, "code": "n = 5\nif n%2==0:\n  print(int(n/2))\nif not n%2==0:\n  print(int(n/2+1))", "coverage": [">", ">", "!", ">", ">"]}, "18366": {"id": 18366, "code": "h = 14\nw = 12\nn = 112\ncnt = 0\nflg = True\nif h > w:\n    while flg:\n        if h * cnt >= n:\n            flg = False\n            break\n        cnt += 1\nelse:\n    while flg:\n        if w * cnt >= n:\n            flg = False\n            break\n        cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "6136": {"id": 6136, "code": "from bisect import bisect_left,bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    i = bisect_left(A,b)\n    j = bisect(C,b)\n    ans += i*(N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3324": {"id": 3324, "code": "a = 20;b = 30\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "18573": {"id": 18573, "code": "import math\nA = 14\nB = 12\nN = 112\nif A> B:\n    print(math.ceil(N/A))\nelse:\n    print(math.ceil(N/B))    ", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "2099": {"id": 2099, "code": "N = 10;A = 7;B = 5\nmax_=min(A,B)\nmin_=max(0,(min(A,B)-(N-max(A,B))))\nprint(max_,min_)", "coverage": [">", ">", ">", ">"]}, "3993": {"id": 3993, "code": "a = 64146;b = 123;c = 456\na -= c\nprint(a//(b+c))", "coverage": [">", ">", ">"]}, "11379": {"id": 11379, "code": "S = \"SUN\"\nD=['SUN','MON','TUE','WED','THU','FRI','SAT']\nToday=D.index(S)\nprint(7-Today)", "coverage": [">", ">", ">", ">"]}, "487": {"id": 487, "code": "s = ['a']\nK = 25\na = ord('z') + 1\nfor i in range(len(s)-1):\n    if s[i] == 'a':\n        continue\n    if K >= (a - ord(s[i])):\n        K -= a - ord(s[i])\n        s[i] = 'a'\ni = len(s)-1\ns[len(s)-1] = chr((ord(s[i])-ord('a') + K) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "18472": {"id": 18472, "code": "h = 2\nw = 100\nn = 200\nprint(min(-(-n//h),-(-n//w)))", "coverage": [">", ">", ">", ">"]}, "10446": {"id": 10446, "code": "A = 8;B = 12;K = 2\nprint([n for n in range(1,min(A,B)+1) if A%n==B%n==0][-K])", "coverage": [">", ">"]}, "4897": {"id": 4897, "code": "word = \"internationalization\"\nlength=len(word[1:-1])\nans=word[0]+str(length)+word[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18270": {"id": 18270, "code": "h = 14\nw = 12\nn = 112\nans=min((n+h-1)//h,(n+w-1)//w)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11550": {"id": 11550, "code": "S = \"SUN\"\nList = {'SUN':'7', 'MON':'6', 'TUE':'5', 'WED':'4', 'THU':'3', 'FRI':'2', 'SAT':'1'}\nprint(List[S])", "coverage": [">", ">", ">"]}, "12328": {"id": 12328, "code": "S = \"atcoder\"\nT=True\nfor i in range(int((len(S)-1)/2)-1):\n  if S[i]!=S[int(len(S))-1-i]:\n    T=False\nfor i in range(int((len(S)-3)/4)+1):\n  if S[i]!=S[int((len(S)-3)/2)-i]:\n    T=False\nif T==False:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9741": {"id": 9741, "code": "N = 8\nS = \"))))((((\"\nfrom collections import deque\nq = deque([])\nif S == '(' or S == ')':\n    print('()')\n    exit()\nl = []\ncnt = 0\nfor i in range(N-1):\n    if S[i] == '(':\n        cnt += 1\n        if S[i+1] == ')':\n            l.append(['a', cnt])\n            cnt = 0\n        elif S[i+1] == '(' and i+1 == N-1:\n            l.append(['a', cnt+1])\n            cnt = 0\n    elif S[i] == ')':\n        cnt += 1\n        if S[i+1] == '(':\n            l.append(['b', cnt])\n            cnt = 0\n        elif S[i+1] == ')' and i+1 == N-1:\n            l.append(['b', cnt+1])\n            cnt = 0\nif S[-1] != S[-2]:\n    if S[-1] == '(':\n        if l[-1][0] == 'a':\n            l[-1][1] += 1\n        else:\n            l.append(['a', 1])\n    elif S[-1] == ')':\n        if l[-1][0] == 'b':\n            l[-1][1] += 1\n        else:\n            l.append(['b', 1])\na = 0\nb = 0\nfor i in range(len(l)):\n    k, c = l[i]\n    if k == 'a':\n        q.append('('*c)\n        a += c\n    if k == 'b':\n        q.append(')'*c)\n        b += c\n        if a < b:\n            q.appendleft('('*(b-a))\n            a += (b-a)\nif a > b:\n    q.append(')'*(a-b))\nprint(*q, sep='')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18474": {"id": 18474, "code": "d = 14\nprint((int(\"112\")+(d-1))//d)", "coverage": [">", ">"]}, "18001": {"id": 18001, "code": "a = \"0112\"\nb=int(a[0]+a[1])\nc=int(a[2]+a[3])\nif 1<=b<=12:\n  if 1<=c<=12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1<=c<=12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "15426": {"id": 15426, "code": "x = 13;y = 3;z = 1\nans = x // (y + z)\nif x - (ans * (y + z)) < z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "10178": {"id": 10178, "code": "N = 3\nS = \"())\"\ncs=0\nmincs=1000\nenc={'(':1,')':-1}\nfor c in S:\n    cs+=enc[c]\n    mincs=min(mincs,cs)\nwhile mincs<0:\n    S='('+S\n    mincs+=1\n    cs+=1\nwhile cs>0:\n    S=S+')'\n    cs-=1\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3585": {"id": 3585, "code": "A = 20;B = 30\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "12855": {"id": 12855, "code": "X = \"6\"\nif X in (\"357\"):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "13874": {"id": 13874, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nres = 0\ni=0\nwhile(i<N):    \n    while(i+1 < N and A[i] == A[i+1]):\n        i+=1\n    if(i+1 < N and A[i] < A[i+1]):\n        while(i+1 < N and A[i] <= A[i+1]):\n            i+=1\n    elif(i+1 < N and A[i] > A[i+1]):\n        while(i+1 < N and A[i] >= A[i+1]):\n            i+=1\n    res+=1\n    i+=1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1930": {"id": 1930, "code": "N = 10;A = 3;B = 5\nif(A<B):\n    max = A\nelse:\n    max = B\nmin = A+B\nif(min>N):\n    min = min - N\nelse:\n    min = 0\nprint(max,min)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "6933": {"id": 6933, "code": "import math\na = 210;b = 5\nA = [31, 41, 59, 26, 53]\nif a<=sum(A):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4781": {"id": 4781, "code": "s = \"smiles\"\nl = len(s)\nprint(f'{s[0]}{l-2}{s[l-1]}')", "coverage": [">", ">", ">"]}, "8858": {"id": 8858, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7628": {"id": 7628, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if sum(a) >= h else 'No')", "coverage": [">", ">", ">"]}, "16361": {"id": 16361, "code": "from bisect import bisect_left, bisect_right\nn = 2\nal = [100, 0]\nal.sort()\nai = al[-1]\nif ai%2 == 0:\n    aj_best = ai//2\n    ind = bisect_right(al, aj_best) - 1\n    ind = ind if 0 <= ind < n else None\n    val1 = al[ind] if ind is not None else 0\n    ind = bisect_left(al, aj_best)\n    ind = ind if 0 <= ind < n else None\n    val2 = al[ind] if ind is not None else ai\n    if abs(aj_best-val1) <= abs(aj_best-val2):\n        aj = val1\n    else:\n        aj = val2\nelse:\n    aj_best = ai//2\n    ind = bisect_right(al, aj_best) - 1\n    ind = ind if 0 <= ind < n else None\n    val1 = al[ind] if ind is not None else 0\n    ind = bisect_left(al, aj_best)\n    ind = ind if 0 <= ind < n else None\n    val2 = al[ind] if ind is not None else ai\n    if abs(aj_best-val1) <= abs(aj_best+1-val2):\n        aj = val1\n    else:\n        aj = val2\nprint(ai,aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "6408": {"id": 6408, "code": "from bisect import bisect_left, bisect_right\nn = 3\nlst_a = [1, 1, 1]\nlst_b = [2, 2, 2]\nlst_c = [3, 3, 3]\nlgth = len(lst_c)\nans = 0\nfor i in lst_b:\n    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19101": {"id": 19101, "code": "N = 12\nif N%2==1:\n    print(0)\nelse:\n    ans = 0\n    l = []\n    N//=2\n    n = len(str(N))\n    while True:\n        a = N//5\n        ans += a\n        N = a\n        if a==0:\n            break\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4574": {"id": 4574, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nprint(s[0], len(s)-2, s[len(s)-1], sep='')", "coverage": [">", ">"]}, "5424": {"id": 5424, "code": "n = 100\nans = (n//2) + (n%2)\nprint (ans)", "coverage": [">", ">", ">"]}, "17169": {"id": 17169, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    print(b)\nelif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "18724": {"id": 18724, "code": "h = 3\nw = 7\nn = 10\na = max(h,w)\nprint((n+a-1)//a)", "coverage": [">", ">", ">", ">", ">"]}, "15471": {"id": 15471, "code": "X = 13;Y = 3;Z = 1\nans = 0\nX -= Z\nfor _ in range(X):\n    if X < (Y + Z):\n        print(ans)\n        break\n    else:\n        ans += 1\n        X -= (Y + Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13167": {"id": 13167, "code": "S = \"haiku,atcoder,tasks\"\nans=S.replace(\",\" , \" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "818": {"id": 818, "code": "k = 2\na=7\ncnt=1\nwhile cnt<=k+2:\n    if a%k==0:\n        print(cnt)\n        flag=True\n        break\n    else:\n        flag=False\n        cnt+=1\n        a=(10*a+7)%k\nif not flag:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "11249": {"id": 11249, "code": "weekday = \"SUN\"\nlist = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in list:\n    if weekday == i:\n        daynum = list.index(weekday)\nnext = 7 - daynum\nprint(next)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10907": {"id": 10907, "code": "S = \"akasaka\"\nN = len(S)\ncount1,count2,count3 = 0,0,0\nflg1,flg2,flg3 = False,False,False\nfor i in range(N):\n    if S[i] == S[-1-i]:\n        count1 += 1\nif count1 == N:\n    flg1 = True\na = int((N-1)/2)\nfor i in range(a):\n    if S[i] == S[a-1-i]:\n        count2 += 1\nif count2 == int((N-1)/2):\n    flg2 = True\nb = int((N+3)/2)\nfor i in range(N-b+1):\n    if S[b+i-1] == S[N-i-1]:\n        count3 += 1\nif count3 == N-b+1 :\n    flg3 = True\nif flg1 == True and flg2 == True and flg3 == True:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "19471": {"id": 19471, "code": "n = 10\nprint(2*n) if n%2 else print(n)", "coverage": [">", ">"]}, "16761": {"id": 16761, "code": "import sys\ninput = sys.stdin.readline\nA = \"H\";B = \"H\"\nd = {\"H\":0, \"D\":1}\nAns = [\"H\", \"D\"]\nprint(Ans[d[A]^d[B]])", "coverage": [">", ">", ">", ">", ">", ">"]}, "9164": {"id": 9164, "code": "s = \"2017/01/07\"\nprint('2018'+s[4:])", "coverage": [">", ">"]}, "570": {"id": 570, "code": "S = \"xyz\"\nK = 4\ni=0\nl=''\nwhile i<len(S)-1:\n    if S[i]=='a':\n        l+='a'\n    elif 123-ord(S[i])<=K:\n        l+='a'\n        K-=123-ord(S[i])\n    else:\n        l+=S[i]\n    i+=1\nif K>0:\n    K%=26\n    n=ord(S[-1])+K\n    if n>122:\n        n-=26\n    l+=chr(n)\nelse:\n    l+=S[-1]\nprint(l)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13767": {"id": 13767, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nhrtom= (h2-h1)\nif (m2-m1 < 0) and (h2-h1 >=0) : \n    min = (h2-h1)*60 + (m2-m1) - k\n    print(min)\nelif (m2-m1 >= 0) and (h2-h1 >=0 ):\n    min = (h2-h1)*60 + (m2-m1) - k \n    print(min)\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "16413": {"id": 16413, "code": "N = 2\nL = [100, 0]\nL=sorted(list(set(L)))\nM=L[-1]\nK=M//2+M%2\nS=[abs(i-K) for i in L]\nprint(M,L[S.index(min(S))])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8318": {"id": 8318, "code": "n = 3;k = 3\na = [1, 2, 3]\nnow = k\nres = 1\nwhile now < n:\n    now += k-1\n    res += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "1667": {"id": 1667, "code": "n = 10;a = 3;b = 5\np = min(a,b)\nq = max(a+b-n,0)\nprint(str(p) + \" \" + str(q))", "coverage": [">", ">", ">", ">"]}, "9171": {"id": 9171, "code": "s = \"2017/01/31\"\nprint(s[:3]+'8'+s[4:])", "coverage": [">", ">"]}, "10909": {"id": 10909, "code": "S = \"atcoder\"\nN = len(S)\ncount1,count2,count3 = 0,0,0\nflg1,flg2,flg3 = False,False,False\nfor i in range(N):\n    if S[i] == S[-1-i]:\n        count1 += 1\nif count1 == N:\n    flg1 = True\na = int((N-1)/2)\nfor i in range(a):\n    if S[i] == S[a-1-i]:\n        count2 += 1\nif count2 == int((N-1)/2):\n    flg2 = True\nb = int((N+3)/2)\nfor i in range(N-b+1):\n    if S[b+i-1] == S[N-i-1]:\n        count3 += 1\nif count3 == N-b+1 :\n    flg3 = True\nif flg1 == True and flg2 == True and flg3 == True:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "2527": {"id": 2527, "code": "n = \"1 9 7 4\"\nif \"1\" in n and \"9\" in n and \"7\" in n and \"4\" in n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "7259": {"id": 7259, "code": "h = 10;n = 3\na = [4, 5, 6]\nans=0\nif sum(a)>=h:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "14099": {"id": 14099, "code": "n = 7\nL = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nud = 0\nch = 1\nfor i in range(n-1):\n    if L[i] < L[i+1] and ud == -1 and ch == 0:\n        ch = 1\n        ud = 1\n        cnt +=1\n    elif L[i] < L[i+1] and ch ==1:\n        ch = 0\n        ud = 1\n    elif L[i] > L[i+1] and ud == 1 and ch == 0:\n        ch = 1\n        ud= -1\n        cnt +=1\n    elif L[i] > L[i+1] and ch == 1:\n        ch = 0\n        ud = -1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18002": {"id": 18002, "code": "a = \"1700\"\nb=int(a[0]+a[1])\nc=int(a[2]+a[3])\nif 1<=b<=12:\n  if 1<=c<=12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1<=c<=12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "5254": {"id": 5254, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nanswer_list=[s[0]]+[str(len(s)-2)]+[s[-1]]\nprint(\"\".join(answer_list))", "coverage": [">", ">", ">"]}, "13199": {"id": 13199, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c,sep=' ')", "coverage": [">", ">"]}, "9462": {"id": 9462, "code": "s = \"2017/01/07\"\nu=list(s)\nu[3]=\"8\"\nk=\"\".join(u)\nprint(k)", "coverage": [">", ">", ">", ">", ">"]}, "12154": {"id": 12154, "code": "N = 11;M = 30\nn = 12;m = 1\nif N==n:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7992": {"id": 7992, "code": "import math\nn, k = map(int,\"4 3\".split())\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">"]}, "12194": {"id": 12194, "code": "m = 11;d = 30\nmm = 12;dd = 1\nif m!=mm:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "1829": {"id": 1829, "code": "N = 10;A = 7;B = 5\nli = [A, B]\nif sum(li)<=N:\n  a = 0\nelse:\n  a = sum(li)-N\nprint(min(li),a)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "8425": {"id": 8425, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nmax = -1\nfor i in range(N):\n    sum = 0\n    for k in range(i+1):\n        sum += A[k]\n    for k in range(i,N):\n        sum += B[k]\n    if sum > max:\n        max = sum\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "687": {"id": 687, "code": "k = 2\nif k % 2 == 0 or k % 5 == 0:\n    print(-1)\nelse:\n    exc = 0\n    for i in range(1, 10 ** 8):\n        exc = exc * 10 + 7\n        exc = exc % k\n        if exc % k == 0:\n            ans = i\n            break\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "9070": {"id": 9070, "code": "a = 15;b = 18;c = 26;d = 35;e = 36;k = 18\nprint(\"Yay!\" if e-a<= k else \":(\")", "coverage": [">", ">"]}, "6639": {"id": 6639, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nans = 0\nfor i in range(n):\n    num = b[i]\n    x = bisect.bisect_left(a, num)\n    y = bisect.bisect_right(c, num)\n    ans += x * (n - y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14477": {"id": 14477, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nif n == 1:\n  print (1)\n  exit()\nc = 0\nfor i in range(n-1):\n  if c == 2 and a[i+1] < a[i]:\n    cnt += 1\n    c = -1\n  elif c == 1 and a[i+1] > a[i]:\n    cnt += 1\n    c = -1\n  else:\n    if c < 1:\n      if a[i+1] > a[i]:\n        c = 2\n      elif a[i+1] == a[i]:\n        c = 0\n      else:\n        c = 1\nprint (cnt+1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15090": {"id": 15090, "code": "N = 2;P = 0\nA = [1, 3]\ng=k=0\nfor i in A:\n    if i%2:\n        k+=1\n    else:\n        g+=1\na=0\nfrom math import factorial\nif P:\n    for i in range(1,k+1,2):\n        a+=factorial(k)//factorial(i)//factorial(k-i)\nelse:\n    for i in range(0,k+1,2):\n        a+=factorial(k)//factorial(i)//factorial(k-i)\nprint(a*pow(2,g))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "14015": {"id": 14015, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc = 1\ni = 0\nwhile i < N - 1:\n    if A[i] < A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] > A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] > A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] < A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] == A[i + 1]:\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16772": {"id": 16772, "code": "a = \"D\";b = \"D\"\nif (a == b): print('H')\nelse:print('D')  ", "coverage": [">", ">", "!"]}, "4443": {"id": 4443, "code": "a = \"xyz\"\nprint(a[0]+str(int(len(a)-2))+a[-1])", "coverage": [">", ">"]}, "8068": {"id": 8068, "code": "n = 8;k = 3\nx = (7, 3, 1, 8, 4, 6, 2, 5)\nfor i,v in enumerate(x):\n    if v == 1:\n        r = i\na,b = divmod(r,k-1)\nif b > 0:\n    a += 1\nr = a * (k-1)\nl = n-r-1\nif l > 0:\n    c,d = divmod(l, k-1)\n    if d > 0:\n        c += 1\n    a += c\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18056": {"id": 18056, "code": "s = \"0112\"\ns1, s2 = int(s[:2]), int(s[2:])\nans = ['NA', 'YYMM', 'MMYY', 'AMBIGUOUS']\nprint(ans[((1 <= s1 <= 12) << 1) + (1 <= s2 <= 12)])", "coverage": [">", ">", ">", ">"]}, "8365": {"id": 8365, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8370": {"id": 8370, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nma = 0\nfor i in range(N):\n    c = sum(A[:i+1]) + sum(B[i:])\n    ma = max(ma, c)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16795": {"id": 16795, "code": "a = False;b = True\nprint(\"D\" if a ^ b else \"H\")", "coverage": [">", ">"]}, "345": {"id": 345, "code": "makeA = lambda c: (ord('z')-ord(c)+1) % 26\ns = [24, 12, 23, 22, 21, 22, 8, 7, 18, 5, 0, 15]\nK = 100\nlen_s = len(s)\nfor i in range(len_s-1):\n    if s[i] <= K:\n        K -= s[i]\n        s[i] = 0\nif K > 0:\n    s[-1] = (s[-1] + 26 - (K % 26)) % 26\nmakeS = lambda n: chr((26-n)%26+ord('a'))\nprint(''.join(list(map(makeS,s))))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17365": {"id": 17365, "code": "S = \"0112\"\nflag1 = False\nflag2 = False\nif 0 <= int(S[:2]) <= 99 and 1 <= int(S[2:]) <= 12:\n    flag1 = True\nif 1 <= int(S[:2]) <= 12 and 0 <= int(S[2:]) <= 99:\n    flag2 = True\nif flag1 and not flag2:\n    print(\"YYMM\")\nelif not flag1 and flag2:\n    print(\"MMYY\")\nelif flag1 and flag2:\n    print(\"AMBIGUOUS\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "10745": {"id": 10745, "code": "s = \"akasaka\"\na = int((len(s)-1)/2)\nb = int((len(s)+3)/2)\nr = ''.join(reversed(s[b-1:]))\nif s[:a]== s[:a:-1] and s[b-1:]== r:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9895": {"id": 9895, "code": "n = 8\ns = \"))))((((\"\nc = 0\nfrom collections import deque\nres = deque([])\nfor i in range(n):\n    if s[i] =='(':\n        c += 1\n    else:\n        c -= 1\n    if c < 0:\n        res.appendleft('(')\n        c = 0\n    res.append(s[i])\nif c > 0:\n    res.append(')'*c)\nprint(''.join(list(res)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4159": {"id": 4159, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nhour = (h2 - h1) * 60\nminutes = m2 - m1\nprint(hour + minutes - k)", "coverage": [">", ">", ">", ">"]}, "2201": {"id": 2201, "code": "n = 10;a = 7;b = 5\nt1 = min(a, b)\nt2 = max(0, b-(n-a))\nprint(t1, t2)", "coverage": [">", ">", ">", ">"]}, "390": {"id": 390, "code": "S = ['a']\nk = 25\nalp = list('abcdefghijklmnopqrstuvwxyz')\ns2a = {alp[i]: 26-i for i in range(26)}\ns2a['a'] = 0\nfor i in range(len(S)):\n    s = S[i]\n    if s2a[s] <= k:\n        k -= s2a[s]\n        S[i] = 'a'\nk %= 26\nidx = alp.index(S[-1])\nS[-1] = alp[k+idx]\nprint(*S, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7819": {"id": 7819, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\ncount = 1\nn = n-k\nwhile n > 0:\n    n -= k-1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15455": {"id": 15455, "code": "x = 13;y = 3;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "2459": {"id": 2459, "code": "n = {'9', '4', '1', '7'}\ns=set([i for i in \"1974\"])\nprint(\"NO\" if n^s else \"YES\")", "coverage": [">", ">", ">"]}, "1235": {"id": 1235, "code": "s = \"111\"\nans = 0\nif int(s[0]) >= int(s[1]) and int(s[0]) >= int(s[2]):\n    ans = int(s[0]) * 100 + int(s[0]) * 10 + int(s[0]) * 1\nelse:\n    ans = int(s[0]) * 100 + int(s[0]) * 10 + int(s[0]) * 1 + 111\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15683": {"id": 15683, "code": "X = 64145;Y = 123;Z = 456\nwidth = X - 2 * Z\nif width < Y:\n  print(0)\n  exit()\nnum = (width - Y) // ( Y + Z)\nprint(num + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "12138": {"id": 12138, "code": "n_1 = [11, 30]\nn_2 = [12, 1]\nif n_1[0] != n_2[0]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "16373": {"id": 16373, "code": "N = 5\nA = [11, 9, 6, 4, 2]\nh = A[0]/2\nr = 10**9\nv = 0\nfor a in A[1:]:\n    if r > abs(a-h):\n        r = abs(a-h)\n        v = a\nprint(str(A[0]) + ' ' + str(v))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4965": {"id": 4965, "code": "s = ['x', 'y', 'z']\na = ''\nb = s.pop(0)\nc = s.pop()\na += b\na += str(len(s))\na += c\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9513": {"id": 9513, "code": "s = \"2017/01/31\"\nprint(\"2018/01\" + s[-3:])", "coverage": [">", ">"]}, "12303": {"id": 12303, "code": "s = \"atcoder\"\np =\"Yes\"\nfor i in range(len(s)//2):\n  if s[i] != s[len(s) -1 -i]:\n    p = \"No\"\nfor i in range(len(s)//2):\n  if s[i] != s[len(s)//2 -1 -i]:\n    p = \"No\"\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14108": {"id": 14108, "code": "N = 7\nnums = [1, 2, 3, 2, 1, 999999999, 1000000000]\nupper = True\nlower = True\nbefore = nums[0]\nanswer = 0\nfor i, num in enumerate(nums):\n  if before < num:\n    lower = False\n  elif before > num:\n    upper = False\n  before = num\n  if not upper and not lower:\n    answer += 1\n    upper = True\n    lower = True\nprint(answer+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6084": {"id": 6084, "code": "import math\na = 100\nprint(math.floor((a + 1) / 2))", "coverage": [">", ">", ">"]}, "10750": {"id": 10750, "code": "s = \"atcoder\"\na = s[::-1]\nn = len(s)\nans = \"Yes\"\nif s != a: ans = \"No\"\nelif s[:(n-1)//2] != s[(n+3)//2-1:]: ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "9047": {"id": 9047, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nfrom itertools import permutations, combinations,combinations_with_replacement,product\nls = [a,b,c,d,e]\ncomb = list(combinations(ls,2))\nflag=0\nfor i in range(10):\n    sa = abs(comb[i][1] - comb[i][0])\n    if sa > k:\n        flag=1\nif flag==0:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "308": {"id": 308, "code": "s = \"a\"\nk = 25\nL = []\nfor i in range(len(s)):\n    L.append((ord(\"z\")-ord(s[i])+1))\nans = \"\"\ni = 0\nwhile i < len(s):\n    if s[i] == \"a\":\n        ans +=\"a\"\n        i +=1\n    elif k-L[i] >= 0:\n        ans +=\"a\"\n        k -=L[i]\n        i +=1\n    else:\n        ans +=s[i]\n        i +=1\nk = k%26\nans = ans[:-1] + chr(ord(ans[-1]) + k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "17364": {"id": 17364, "code": "S = \"1905\"\nflag1 = False\nflag2 = False\nif 0 <= int(S[:2]) <= 99 and 1 <= int(S[2:]) <= 12:\n    flag1 = True\nif 1 <= int(S[:2]) <= 12 and 0 <= int(S[2:]) <= 99:\n    flag2 = True\nif flag1 and not flag2:\n    print(\"YYMM\")\nelif not flag1 and flag2:\n    print(\"MMYY\")\nelif flag1 and flag2:\n    print(\"AMBIGUOUS\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "11933": {"id": 11933, "code": "a = 11;b = 30\nc = 12;d = 1\nif a != c:\n    print(1)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "18024": {"id": 18024, "code": "s = \"1905\"\na=int(s[0:2])\nb=int(s[2:4])\nif 0<a<=12 and 0<b<=12:\n    print('AMBIGUOUS')\nelif 0<b<=12:\n    print('YYMM')\nelif 0<a<=12 :\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "11504": {"id": 11504, "code": "week_list =[\"\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(week_list.index(\"SAT\"))", "coverage": [">", ">"]}, "19043": {"id": 19043, "code": "N = 12\nM = 10\nans = 0\nif N % 2 == 0:\n  while N >= M:\n    ans += N//M\n    M *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5434": {"id": 5434, "code": "n = 5\na = int((n+2-1)/2)\nprint(a)", "coverage": [">", ">", ">"]}, "14373": {"id": 14373, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nlast = 0\nans = 1\nfor i in range(N - 1):\n    diff = A[i] - A[i + 1]\n    if last == 0:\n        if diff > 0:\n            last = 1\n        elif diff < 0:\n            last = -1\n    elif last * diff < 0:\n        ans += 1\n        last = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8888": {"id": 8888, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))", "coverage": [">", ">", ">", ">"]}, "4909": {"id": 4909, "code": "s = \"internationalization\"\nls= list(s)\nprint(ls[0]+str(len(s)-2)+ls[-1])", "coverage": [">", ">", ">"]}, "2557": {"id": 2557, "code": "from sys import exit, stdin\nN = {0, 9, 4, 8}\nif N == set([1,9,7,4]):\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11288": {"id": 11288, "code": "li = ['MON','TUE','WED','THU','FRI','SAT','SUN']\nn = \"SAT\"\nif n == 'SUN':\n    print(7)\nelse:\n    print(6 - li.index(n))", "coverage": [">", ">", ">", "!", "!", ">"]}, "17263": {"id": 17263, "code": "s = ['D', ' ', 'H']\nif s[0] == s[2]:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "19013": {"id": 19013, "code": "N = 12\nif N%2==1:\n    print(0)\n    exit(0)\nans=N//10\ncur=N//10\nwhile cur//5>0:\n    cur//=5\n    ans+=cur\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "8586": {"id": 8586, "code": "n = 1\na = [2]\nb = [3]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "10136": {"id": 10136, "code": "n = 3\ns = \"())\"\nleft=0\nleft_cnt=0\nfor i in s:\n    if i==\"(\":\n        left+=1\n    else:\n        if left>=1:\n            left-=1\n        else:\n            left_cnt+=1\nright=0\nright_cnt=0\nfor i in s[::-1]:\n    if i==\")\":\n        right+=1\n    else:\n        if right>=1:\n            right-=1\n        else:\n            right_cnt+=1\nprint(\"(\"*left_cnt+s+\")\"*right_cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "15782": {"id": 15782, "code": "x = 13;y = 3;z = 1\ncount=1\nx -= 2*z+y\ncount += x //(y+z)\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "7380": {"id": 7380, "code": "n = 211;k = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\ns=0\nfor i in range(k):\n  s+=a[i]\nprint('Yes' if s >= n else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3276": {"id": 3276, "code": "A = 12;B = 4\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "7950": {"id": 7950, "code": "from math import ceil\nn = 3;k = 3\na = [1, 2, 3]\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "14884": {"id": 14884, "code": "n = 3;p = 0\na_list = [1, 1, 1]\ndp = [[0] * 2 for x in range(n+1)]\nif a_list[0] == 0:\n    dp[0][0] = 1\nelse:\n    dp[0][1] = 1\nfor i in range(n):\n    _a = a_list[i]\n    if _a == 0:\n        dp[i+1][0] = dp[i][0]*2\n        dp[i+1][1] = dp[i][1]*2\n    else:\n        dp[i+1][0] = dp[i][1]+dp[i][0]\n        dp[i+1][1] = dp[i][1]+dp[i][0]\nprint(dp[n][p])        ", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "2773": {"id": 2773, "code": "s = \"1234567876\"\nm = 1000\nfor i in range(len(s) - 2):\n\tif abs(int(s[i:i+3]) - 753) <=m:\n\t\tm = abs( int(s[i:i+3]) -753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "141": {"id": 141, "code": "s = \"xyz\"\nK = 4\nalp = 'abcdefghijklmnopqrstuvwxyz'\nans = ''\nfor i,w in enumerate(s):\n    if i != len(s)-1 and (26-(ord(w)-ord('a')))%26 <= K:\n        ans += 'a'\n        K -= (26-(ord(w)-ord('a')))%26\n    elif i != len(s)-1:\n        ans += w\n    if i == len(s)-1:\n        lastlidx = (ord(w)-ord('a') + K%26)%26\n        ans += alp[lastlidx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12574": {"id": 12574, "code": "A = 100;B = 50;K = 4\nC =min(A,B)\nlist =[]\nfor i in range(1,C+1):\n  if A%i == 0 and B%i == 0:\n    list.append(i)\nlist = sorted(list)\nans = list[-K]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8174": {"id": 8174, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 3;K = 3\nA = 3\nprint((N - 2) // (K - 1) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18148": {"id": 18148, "code": "S = \"1700\"\nS1, S2 = S[0:2], S[2:5]\nif (int(S1) >= 1 and int(S1) <=12) and (int(S2) >= 1 and int(S2) <=12):\n\tprint('AMBIGUOUS')\nelif int(S2) >= 1 and int(S2) <= 12:\n\tprint('YYMM')\nelif int(S1) >= 1 and int(S1) <=12:\n\tprint('MMYY')\nelse:\n\tprint('NA')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "620": {"id": 620, "code": "s = ['a']\nk = 25\nt = list(map(lambda x:ord(x)-ord(\"a\"),s))\nfor i in range(len(t)):\n  diff = 26-t[i]\n  if diff != 26 and diff <= k: \n    t[i]+=diff\n    k-=diff\nt[-1]+=k\nu = \"\".join(list(map(lambda x:chr((x%26+ord(\"a\"))),t)))\nprint(u)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "7094": {"id": 7094, "code": "h = 211;a = 5\nA = [31, 41, 59, 26, 53]\nif sum(A) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "15230": {"id": 15230, "code": "X = 64146;Y = 123;Z = 456\np = X - Z\na = Z+Y\nans = p//a\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3105": {"id": 3105, "code": "S = \"1111111111\"\nnumbs=len(S)\nnin=10**3\nfor i in range(numbs-2):\n    nin=min(nin,abs(753-int(S[i:i+3])))\nprint(nin)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12091": {"id": 12091, "code": "a = 11;b = 16\nc = 11;d = 17\nif a != c:\n    ans = 1\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "2832": {"id": 2832, "code": "s = \"1111111111\"\ninf = float('inf')\nmin_ = inf\nfor i in range(len(s)-2):\n    tmp = int(s[i:i+3])\n    if abs(753 - tmp) < min_:\n        min_ = abs(753 - tmp)\nprint(min_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "882": {"id": 882, "code": "k = 101\nseven = 0\ni = 0\nif k % 2 == 0:\n    print(-1)\nelse:\n    while True:\n        i += 1\n        seven = seven * 10 + 7\n        seven = seven % k\n        if seven == 0:\n            print(i)\n            break\n        if i>1000000:\n            print(-1)\n            break", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6109": {"id": 6109, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans=0\nind=[0]\nfor i in range(n):\n  ind.append(n-bisect.bisect_right(c,b[i])+ind[i])\nfor i in a:\n  b_ind=bisect.bisect_right(b,i)\n  ans+=ind[n]-ind[b_ind]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11385": {"id": 11385, "code": "A=['SUN','MON','TUE','WED','THU','FRI','SAT']\nS = \"SUN\"\nfor i in range(7):\n  if S==A[i]:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "14246": {"id": 14246, "code": "N = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nflags = [False, False]\nfor i in range(N - 1):\n    da = a[i + 1] - a[i]\n    if da > 0:\n        flags[0] = True\n    elif da < 0:\n        flags[1] = True\n    if flags[0] == True and flags[1] == True:\n        ans += 1\n        flags = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10286": {"id": 10286, "code": "n = 3\ns = \"())\"\ns_ = s\nwhile s_.count('()'):\n    s_ = s_.replace('()', '')\nl = s_.count(')')\nr = len(s_) - l\nans = '(' * l + s + ')' * r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6539": {"id": 6539, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans = 0\nfor i in range(n):\n    abis = bisect.bisect_left(a, b[i])\n    cbis = bisect.bisect_right(c, b[i])\n    ans += abis*(n-cbis)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9008": {"id": 9008, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nmi = min(a, b, c, d, e)\nma = max(a, b, c, d, e)\nif ma - mi > k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2301": {"id": 2301, "code": "n = 100;a = 100;b = 100\nma = min(a, b)\nif a + b - n < 0:\n    mi = 0\nelse:\n    mi = a + b - n\nprint(ma, mi)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "14379": {"id": 14379, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni,ans=0,0\nwhile i<n-1:\n    while i<n-1 and a[i]==a[i+1]: i+=1\n    if a[i]<=a[i+1]:\n        while i<n-1 and a[i]<=a[i+1]: i+=1\n        ans+=1\n    elif a[i]>=a[i+1]:\n        while i<n-1 and a[i]>=a[i+1]: i+=1\n        ans+=1\n    i+=1\n    if i==n-1: ans+=1\nif ans==0: ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1101": {"id": 1101, "code": "n = ['1', '1', '2']\nif n[1]<n[2]:n[1]=str(int(n[1])+1)\nif n[0]<n[1]:n[0]=str(int(n[0])+1)\nprint(n[0]*3)", "coverage": [">", ">", ">", ">"]}, "3792": {"id": 3792, "code": "X = 13;Y = 3;Z = 1\nX -= Z\nprint(X//(Y+Z))", "coverage": [">", ">", ">"]}, "4381": {"id": 4381, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nst = h1*60 + m1\nend = h2*60 + m2\nprint(end-st-k)", "coverage": [">", ">", ">", ">"]}, "15565": {"id": 15565, "code": "x = 13;y = 3;z = 1\nans = 0\nx -= z\nfor i in range(100000):\n    if x >= y + z:\n        ans += 1\n        x -= y + z\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14938": {"id": 14938, "code": "n = 2;p = 0\na = [1, 3]\nfrom math import factorial\no=0;e=0\nfor i in a:\n    if i%2==0:e+=1\n    else:o+=1\nif p==0:\n    odds=0\n    for i in range(0,o+1,2):\n        odds+=factorial(o)//factorial(i)//factorial(o-i)\nelse:\n    odds=0\n    for i in range(1,o+1,2):\n        odds+=factorial(o)//factorial(i)//factorial(o-i)\nprint(odds*2**e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "834": {"id": 834, "code": "K = 2\ni=0\nif K%2==0 or K%5==0:\n    print('-1')\nelse:\n    for d in range(K):\n        i=(10*i+7)%K\n        if i==0:\n            print(d+1)\n            break", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4626": {"id": 4626, "code": "head = \"x\";body = ['y'];tail = \"z\"\nprint(''.join(map(str, (head, len(body), tail))))", "coverage": [">", ">"]}, "6108": {"id": 6108, "code": "num = 100\nif num % 2 == 0: \n    print(int(num/2))\nelse:\n    print(int(num/2+1))", "coverage": [">", ">", ">", "!", "!"]}, "5449": {"id": 5449, "code": "n = 5\nprint(n//2 + n%2)", "coverage": [">", ">"]}, "9460": {"id": 9460, "code": "s1 = \"2017\";s2 = \"01\";s3 = \"07\"\ns = '2018' + '/' + s2 + '/' + s3\nprint(s)", "coverage": [">", ">", ">"]}, "13328": {"id": 13328, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nprint(\"happy,newyear,enjoy\".replace(\",\", \" \"))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18398": {"id": 18398, "code": "h = 3\nw = 7\nn = 10\nans = 0\nwhile True:\n    if h >= w:\n        n = n - h\n    else:\n        n = n - w\n    ans = ans + 1\n    if n <= 0:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "793": {"id": 793, "code": "K = 2\nans = 1\nnum = 0\nseven = 7\nif not K%2:\n    print(-1)\nelse:\n    for i in range(K):\n        num = num + seven\n        seven = seven*10%K\n        num = num%K\n        if num == 0:\n            print(ans)\n            break\n        ans += 1\n    else:\n        print(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8937": {"id": 8937, "code": "n = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14664": {"id": 14664, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nN = 3;P = 0\nA = [1, 1, 1]\ndp = [[0]*2 for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(N):\n    if A[i]%2==0:\n        dp[i+1][0] = 2*dp[i][0]\n        dp[i+1][1] = 2*dp[i][1]\n    else:\n        dp[i+1][0] = dp[i][0]+dp[i][1]\n        dp[i+1][1] = dp[i][0]+dp[i][1]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "11367": {"id": 11367, "code": "s = \"SUN\"\nday = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nnum = [7, 6, 5, 4, 3, 2, 1]\ndic = dict(zip(day, num))\nprint(dic[s])", "coverage": [">", ">", ">", ">", ">"]}, "18392": {"id": 18392, "code": "div = 0\nmod = 0\nh = 3\nw = 7\nn = 10\nif h > w:\n  div = n // h\n  mod = n % h\nelse:\n  div = n // w\n  mod = n % w\nif mod > 0:\n  print(div+1)\nelse:\n  print(div)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!"]}, "2995": {"id": 2995, "code": "S = \"35753\"\nm = float(\"inf\")\nfor i in range(len(S)-2):\n    m = min(m, abs(753 - int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "15817": {"id": 15817, "code": "a = 13;b = 3;c = 1\nm = a % (b+c)\nans = a // (b+c)\nif m >= c:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3772": {"id": 3772, "code": "x = 64145;y = 123;z = 456\nx-=z\nprint(int(x/(y+z)))", "coverage": [">", ">", ">"]}, "9981": {"id": 9981, "code": "n = 6\ns = \")))())\"\nnow=0\nrec=0\nfor i in s:\n    now+=(-1)**(i==\")\")\n    rec=min(now,rec)\nf,t=\"\",\"\"\nif rec<0:\n    f=\"(\"*-rec\n    now-=rec\nif now>0:\n    t=\")\"*now\nprint(f+s+t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "9052": {"id": 9052, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nx = e - a\nif x <= k:\n  print('Yay!')\nelse:\n  print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11696": {"id": 11696, "code": "S = \"SAT\"\nD = {\"SUN\":0, \"MON\":1, \"TUE\":2, \"WED\":3, \"THU\":4, \"FRI\":5, \"SAT\":6}\nprint(7 - D[S])", "coverage": [">", ">", ">"]}, "8716": {"id": 8716, "code": "n = 1\na1 = [2]\na2 = [3]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3572": {"id": 3572, "code": "A = 20;B = 15\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)", "coverage": [">", ">", "!", "!", ">", ">"]}, "18800": {"id": 18800, "code": "h = 14\nw = 12\nn = 112\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "5005": {"id": 5005, "code": "s = \"internationalization\"\nlong = len(s) - 2\nprint(s[0] + str(long) + s[len(s)-1])", "coverage": [">", ">", ">"]}, "11434": {"id": 11434, "code": "S = \"SAT\"\nif S == \"SUN\":\n    print(7)\nelif S == \"MON\":\n    print(6)\nelif S == \"TUE\":\n    print(5)\nelif S == \"WED\":\n    print(4)\nelif S == \"THU\":\n    print(3)\nelif S == \"FRI\":\n    print(2)\nelif S == \"SAT\":\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "11488": {"id": 11488, "code": "W = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nS = \"SAT\"\nprint(len(W) - W.index(S))", "coverage": [">", ">", ">"]}, "17610": {"id": 17610, "code": "S = \"1905\"\nfront = int(S[:2])\nback = int(S[2:])\nS_list = list(S)\nif front > 12 or front == 0:\n    if 0 < back <= 12 :\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif front <= 12 or front == 0:\n    if 0 < back <= 12: \n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "9735": {"id": 9735, "code": "N = 8\nS = \"))))((((\"\nflg_l = False\ncnt_r = 0\ncnt_l = 0\nfor i in range(N):\n    if(S[i] == \"(\"):\n        cnt_r += 1\n        flg_l = True            \n    else:\n        if(flg_l):\n            if(cnt_r > 0):\n                cnt_r -= 1\n            else:\n                cnt_l += 1\n                flg_l = False\n        else:\n            cnt_l += 1\nans = \"\"\nans += (\"(\"*cnt_l)+S+(\")\"*cnt_r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "6061": {"id": 6061, "code": "n = 5\nif n%2 == 1:\n  print(n//2 + 1)\nelse:\n  print(n//2)", "coverage": [">", ">", ">", "!", "!"]}, "9500": {"id": 9500, "code": "S = \"2017/01/07\"\nif S[3] == \"7\":\n    S = S[:3] + \"8\" + S[4:]\nprint(S)", "coverage": [">", ">", ">", ">"]}, "17279": {"id": 17279, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n  print('H' if b == 'H' else 'D')\nelif a == 'D':\n  print('D' if b == 'H' else 'H')", "coverage": [">", ">", "!", ">", ">"]}, "11588": {"id": 11588, "code": "S = \"SAT\"\nweek = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\na = week.index(S)\nprint(7-a)", "coverage": [">", ">", ">", ">"]}, "16123": {"id": 16123, "code": "a = 20;b = 15\nif a <= b or a - (b * 2) <= 0:\n    print(\"0\")\nelse:\n    print(a - (b * 2))", "coverage": [">", ">", ">", "!", "!"]}, "1621": {"id": 1621, "code": "n = [100, 100, 100]\nprint(min(n[1], n[2]), max(0, n[1] + n[2] - n[0]))", "coverage": [">", ">"]}, "11624": {"id": 11624, "code": "week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = \"SAT\"\nans = 7 - week.index(s)\nans = ans if ans != 0 else 7\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "6345": {"id": 6345, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nd=0\nfor t in b:\n    d+=bisect.bisect_left(a,t)*(n-bisect.bisect_right(c,t))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1889": {"id": 1889, "code": "n = 10;a = 7;b = 5\nif a+b > n:\n  q = a+b-n\nelse :\n  q = 0\nprint( str(min(a,b)) +\" \"+ str(q))", "coverage": [">", ">", ">", "!", "!", ">"]}, "19257": {"id": 19257, "code": "N = 12\nif N < 2 or N % 2 == 1:\n  print(0)\n  exit()\nres = 0\nde = 10\nwhile de < N + 1:\n  res += N // de\n  de *= 5\nprint(res)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16909": {"id": 16909, "code": "a = \"D\";b = \"H\"\nif a=='H':\n  print(b)\nelse:\n  print('HD'[b=='H'])", "coverage": [">", ">", "!", "!", ">"]}, "9311": {"id": 9311, "code": "S = \"2017/01/31\"\nS_changed = S[:3] + \"8\" + S[4:]\nprint(S_changed)", "coverage": [">", ">", ">"]}, "16941": {"id": 16941, "code": "a = \"H\";b = \"H\"\nprint('HD'[a!=b])", "coverage": [">", ">"]}, "10868": {"id": 10868, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn = len(s)\na = (n - 1) // 2\nb = (n + 3) // 2\njudge = 1\nfor i in range(n // 2):\n  if s[i] != s[-(i + 1)]:\n    judge = 0\n    break\nif judge == 0:\n  print('No')\nelse:\n  al = s[:a]\n  bl = s[b - 1:]\n  for j in range(a // 2):\n    if al[j] != al[-(j + 1)]:\n      judge = 0\n      break\n  if judge == 0:\n    print('No')\n  else:\n    for k in range((n - b) // 2):\n      if bl[k] != bl[-(k + 1)]:\n        judge = 0\n        break\n    if judge == 0:\n      print('No')\n    else:\n      print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!", ">"]}, "18820": {"id": 18820, "code": "h = 3;w = 7;n = 10\nans = 0\ns = 0\nwhile s < n:\n  s += max(h,w)\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17398": {"id": 17398, "code": "S = \"0112\"\nL, R =  map(int, [S[:2], S[2:]])\nif 1 <= L <= 12 and 1 <= R <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= L <= 12 and (R == 0 or R > 12):\n  print(\"MMYY\")\nelif (L == 0 or L > 12) and 1 <= R <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7954": {"id": 7954, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((N-2)//(K-1)+1)", "coverage": [">", ">", ">"]}, "1626": {"id": 1626, "code": "n = 10;a = 7;b = 5\nboth = min(a,b)\nany = max(0, (a+b) - n)\nprint(both, any)", "coverage": [">", ">", ">", ">"]}, "16170": {"id": 16170, "code": "n = 5\na = [2, 4, 6, 9, 11]\nimport bisect\nmid = (a[-1]+1)//2\nmid_idx = bisect.bisect_left(a, mid)\nif abs(mid - a[mid_idx-1]) <= abs(a[mid_idx] - mid):\n    print(a[-1], a[mid_idx-1])\nelse:\n    print(a[-1], a[mid_idx])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14414": {"id": 14414, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\ni = 0\nwhile i < n:\n    while i+1 < n and a[i] == a[i+1]:\n        i += 1\n    if i+1 < n and a[i] < a[i+1]:\n        while i+1 < n and a[i] <= a[i+1]:\n            i += 1\n    elif i+1 < n and a[i] > a[i+1]:\n        while i+1 < n and a[i] >= a[i+1]:\n            i += 1\n    ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8582": {"id": 8582, "code": "n = 1\na = [2]\nb = [3]\nans = 0\nfor i in range(n):\n    a_sum = sum(a[:i + 1])\n    b_sum = sum(b[i:])\n    if ans < a_sum + b_sum:\n        ans = a_sum + b_sum\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1677": {"id": 1677, "code": "n = 10;a = 7;b = 5\nif n>=(a+b):\n    MAX = min(a,b)\n    MIN = 0\nelse:\n    MAX = min(a,b)\n    MIN = a+b-n\nprint(str(MAX)+' '+str(MIN))", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "2915": {"id": 2915, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"1111111111\"\nans = 753\nfor i in range(len(s) - 3):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11799": {"id": 11799, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D2 == 1:\n  print ('1')\nelse:\n  print ('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "19381": {"id": 19381, "code": "import math\na = 3\nprint(a*2//math.gcd(a, 2))", "coverage": [">", ">", ">"]}, "1071": {"id": 1071, "code": "N = 111\na=[111,222,333,444,555,666,777,888,999,1111]\nfor x in a:\n  if N<=x:\n    print(x)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "13411": {"id": 13411, "code": "Haiku = \"abcde fghihgf edcba\"\nprint(Haiku)", "coverage": [">", ">"]}, "4756": {"id": 4756, "code": "s = \"internationalization\"\nn = len(s)\na = n-2\nprint(s[0] + str(n-2) + s[n-1])", "coverage": [">", ">", ">", ">"]}, "9756": {"id": 9756, "code": "N = 8\nS = \"))))((((\"\nx=0\ny=0\nfor i in S:\n    if i==\"(\":\n        x+=1\n    else:\n        if x<=0:\n            y+=1\n        else:\n            x-=1\nprint(\"(\"*y+S+\")\"*x)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "18066": {"id": 18066, "code": "s = \"1700\"\nfirst = int(s[:2])\nsecond = int(s[2:])\nmonth = [False,False]\nif(1 <= first and first <= 12):\n    month[0] = True\nif(1 <= second and second <= 12):\n    month[1] = True\nif(month[0] & month[1]):\n    print('AMBIGUOUS')\nelif(month[0]):\n    print('MMYY')\nelif(month[1]):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "8326": {"id": 8326, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nC = [0] * N \nC[0] = A[0] + sum(B)\nfor i in range(1,N):\n    C[i] = C[i-1]+A[i]-B[i-1]\nprint(max(C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15170": {"id": 15170, "code": "X = 13;Y = 3;Z = 1\nX -= 2*Z\nans = X // (Y+Z)\nX %= (Y+Z)\nif X >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6442": {"id": 6442, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nnumpattern = 0\nfor i in range(N):\n    numsmallerA = bisect.bisect_left(A,B[i])\n    numbiggerC = N - bisect.bisect_right(C,B[i])\n    numpattern += numsmallerA * numbiggerC\nprint(numpattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1981": {"id": 1981, "code": "n = 100;a = 100;b = 100\ns=min(a,b)\nt=max(a,b)\nif s+t<=n:\n    u=0\nelse:\n    u=s+t-n\nprint(str(s)+' '+str(u))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "6151": {"id": 6151, "code": "N = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nsorted_a = sorted(a)\nsorted_b = sorted(b)\nsorted_c = sorted(c)\nans = 0\nbefore_a = 0\nbefore_c = 0\ncount_a = 0\ncount_c_rest = 0\nfor each_b in sorted_b:\n    for ai in range(before_a, len(sorted_a)):\n        if each_b > sorted_a[ai]:\n            count_a += 1\n            before_a += 1\n        else:\n            before_a = ai\n            break\n    for ci in range(before_c, len(sorted_c)):\n        if sorted_c[ci] <= each_b:\n            count_c_rest += 1\n            before_c += 1\n        else:\n            before_c = ci\n            break\n    ans += count_a * (len(sorted_c)-count_c_rest)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6457": {"id": 6457, "code": "from bisect import bisect\nfrom collections import deque\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nBC_ruiseki = deque([0])\nfor i, b in enumerate(B):\n  BC_ruiseki.append(BC_ruiseki[i] + N - bisect(C, b))\nans = 0\nfor a in A:\n  idx = bisect(B, a)\n  ans += BC_ruiseki[-1] - BC_ruiseki[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8811": {"id": 8811, "code": "from itertools import accumulate\nn = 1\nau = [2]\nal = [3]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14390": {"id": 14390, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nB = []\nfor i in range(1,N):\n    if A[i] - A[i-1] != 0:\n        B.append(A[i] - A[i-1])\ncnt = 0\nfor i in range(1,len(B)):\n    if i >1:\n        if B[i-1]*B[i-2] < 0 :\n            continue\n    if B[i]*B[i-1]<0:\n        cnt += 1\n        B[i]=0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "7375": {"id": 7375, "code": "total = 210;n = 5\nl1 = [31, 41, 59, 26, 53]\ns=sum(l1)\nif(total==s or (total-s)<=0 ):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11567": {"id": 11567, "code": "now = \"SAT\"\nli=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i, d in enumerate(li):\n  if now == d:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "9654": {"id": 9654, "code": "n = 6\ns = \")))())\"\nstack=0\nneedleft=0\nneedright=0\nfor c in s:\n    if c=='(':\n        needright+=1\n    else:\n        if needright>0:\n            needright-=1\n        else:\n            needleft+=1\ns='('*needleft+s\ns+=')'*needright\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "16618": {"id": 16618, "code": "a = \"D\";b = \"H\"\ncount = 0\nif a == \"D\" and b == \"H\":\n  count += 1\nelif a == \"H\" and b == \"D\":\n  count += 1\nif count == 1:\n  print(\"D\")\nelse:\n  print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "594": {"id": 594, "code": "s = \"xyz\"\nk = 4\nnum=[(123-ord(s[i]))%26 for i in range(len(s))]\nans=\"\"\nfor i in range(len(s)-1):\n    if num[i]<=k:\n        ans+=\"a\"\n        k-=num[i]\n    else:\n        ans+=s[i]\nk%=26\nif num[-1]<=k:\n    ans+=chr(97+k-num[-1])\nelse:\n    ans+=chr(ord(s[-1])+k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "6600": {"id": 6600, "code": "from itertools import accumulate\nimport bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nb.sort()\nc.sort()\nai = []\nbi = []\nfor i in range(n):\n    ai.append(n - bisect.bisect_right(b, a[i]))\n    bi.append(n - bisect.bisect_right(c, b[i]))\nans = 0\nc = [0]+list(accumulate(bi[::-1]))\nfor j in ai:\n    ans += c[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17070": {"id": 17070, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "18669": {"id": 18669, "code": "H = 14\nW = 12\nN = 112\nprint(min(-(-N//H), -(-N//W)))", "coverage": [">", ">", ">", ">"]}, "5864": {"id": 5864, "code": "import math\nn = 2\nans = math.ceil(n/2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18629": {"id": 18629, "code": "x = 3\ny = 7\nz=max(x,y)\nprint(-int(\"10\")//z*-1)", "coverage": [">", ">", ">", ">"]}, "12187": {"id": 12187, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 in [1, 3, 5, 7, 8, 10, 12]:\n    if D1 == 31:\n        print(1)\n    else:\n        print(0)\nelif M1 in [4, 6, 9, 11]:\n    if D1 == 30:\n        print(1)\n    else:\n        print(0)\nelif M1 == 2:\n    if D1 == 28:\n        print(1)\n    else:\n        print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "1992": {"id": 1992, "code": "n = 10;a = 7;b = 5\nmax_value = min(a, b)\nif a + b - n < 0:\n    min_value = 0\nelse:\n    min_value = a + b - n\nprint(f'{max_value} {min_value}')", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "175": {"id": 175, "code": "s = [23, 24, 25]\nk = 4\nfor i, r in enumerate(s):\n    if r == 0:\n        pass\n    elif 26 - r <= k:\n        k -= 26-r\n        s[i] = 0\nif k > 0:\n    k %= 26\n    s[-1] += k\nans = \"\"\nfor r in s:\n    ans += chr(ord(\"a\") + r)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14350": {"id": 14350, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nflag = 0\nans = 1\ncnt = 0\nfor i in range(n-1):\n    if a[i+1] - a[i] > 0 and flag == -1 and cnt > 0:\n        flag = 1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] < 0 and flag == 1 and cnt > 0: \n        flag = -1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] == 0:\n        pass\n    elif cnt == 0 and a[i+1] - a[i] > 0:\n        flag = 1\n        cnt += 1\n    elif cnt == 0 and a[i+1] - a[i] < 0:\n        flag = -1\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19094": {"id": 19094, "code": "n = 12\nans=0\nif n%2==0:\n    n=n//2\n    i=1\n    while 5**i<=n:\n        ans+=n//(5**i)\n        i+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17661": {"id": 17661, "code": "s = \"1905\"\na, b = int(s[:2]), int(s[2:])\nif 0 < a < 13 and 0 < b < 13:\n    print('AMBIGUOUS')\nelif 0 < a < 13:\n    print('MMYY')\nelif 0 < b < 13:\n    print('YYMM')\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "8271": {"id": 8271, "code": "n = 8;k = 3\nl = [7, 3, 1, 8, 4, 6, 2, 5]\nimport math\nres=math.ceil((n-1)/(k-1))\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "3184": {"id": 3184, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s)-2):\n  t = int(s[i:i+3])\n  a = abs(753 - t)\n  ans = min(ans, a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16061": {"id": 16061, "code": "a = 12;b = 4\nif a>=2*b:\n  print(int(a-2*b))\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!"]}, "11954": {"id": 11954, "code": "m_1 = 11;d_1 = 16\nm_2 = 11;d_2 = 17\nmonth = 12\nif (m_1 % month + 1) == m_2 and d_2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15463": {"id": 15463, "code": "x = 64146;y = 123;z = 456\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "10653": {"id": 10653, "code": "a = 1;b = 1;k = 1\nprint([i for i in range(1, 1+min(a, b)) if a%i==0 and b%i==0][-k])", "coverage": [">", ">"]}, "4390": {"id": 4390, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nmin1 = h1*60+m1\nmin2 = h2*60+m2\nans = min2-min1-k\nans = max(0,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7808": {"id": 7808, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nans=1\nn-=k\nk-=1\nans+=(n+k-1)//k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2583": {"id": 2583, "code": "n = {0, 9, 4, 8}\nprint((\"NO\",\"YES\")[len(set([1,9,7,4])-n)==0])", "coverage": [">", ">"]}, "7728": {"id": 7728, "code": "import math\nn = 3;k = 3\na = [1, 2, 3]\nprint(math.ceil((n-k)/(k-1))+1)", "coverage": [">", ">", ">", ">"]}, "3842": {"id": 3842, "code": "X = 100000;Y = 1;Z = 1\nX -= 2 * Z\nans, r = divmod(X, Y + Z)\nif r >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "13511": {"id": 13511, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5]+\" \"+s[6:13]+\" \"+s[14:])", "coverage": [">", ">"]}, "10720": {"id": 10720, "code": "s = \"atcoder\"\nn = len(s)\nif s != s[::-1]:\n  print(\"No\")\nelif s[0:(n-1)//2] != s[(n-1)//2-1::-1]:\n  print(\"No\")\nelif s[(n+3)//2-1:n] != s[n-1:(n+3)//2-2:-1]:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9248": {"id": 9248, "code": "D = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nD[3] = 8\nmap = map(str,D)\nprint(''.join(map))", "coverage": [">", ">", ">", ">"]}, "9739": {"id": 9739, "code": "N = 3\nS = \"())\"\nfrom collections import deque\nq = deque([])\nif S == '(' or S == ')':\n    print('()')\n    exit()\nl = []\ncnt = 0\nfor i in range(N-1):\n    if S[i] == '(':\n        cnt += 1\n        if S[i+1] == ')':\n            l.append(['a', cnt])\n            cnt = 0\n        elif S[i+1] == '(' and i+1 == N-1:\n            l.append(['a', cnt+1])\n            cnt = 0\n    elif S[i] == ')':\n        cnt += 1\n        if S[i+1] == '(':\n            l.append(['b', cnt])\n            cnt = 0\n        elif S[i+1] == ')' and i+1 == N-1:\n            l.append(['b', cnt+1])\n            cnt = 0\nif S[-1] != S[-2]:\n    if S[-1] == '(':\n        if l[-1][0] == 'a':\n            l[-1][1] += 1\n        else:\n            l.append(['a', 1])\n    elif S[-1] == ')':\n        if l[-1][0] == 'b':\n            l[-1][1] += 1\n        else:\n            l.append(['b', 1])\na = 0\nb = 0\nfor i in range(len(l)):\n    k, c = l[i]\n    if k == 'a':\n        q.append('('*c)\n        a += c\n    if k == 'b':\n        q.append(')'*c)\n        b += c\n        if a < b:\n            q.appendleft('('*(b-a))\n            a += (b-a)\nif a > b:\n    q.append(')'*(a-b))\nprint(*q, sep='')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "6308": {"id": 6308, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nlenC = len(C)\nans = 0\nfor b in B:\n  idxA = bisect.bisect_left(A, b)\n  idxC = lenC - bisect.bisect_right(C, b)\n  ans += idxA * idxC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "595": {"id": 595, "code": "s = \"a\"\nk = 25\nnum=[(123-ord(s[i]))%26 for i in range(len(s))]\nans=\"\"\nfor i in range(len(s)-1):\n    if num[i]<=k:\n        ans+=\"a\"\n        k-=num[i]\n    else:\n        ans+=s[i]\nk%=26\nif num[-1]<=k:\n    ans+=chr(97+k-num[-1])\nelse:\n    ans+=chr(ord(s[-1])+k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "18337": {"id": 18337, "code": "H = 2\nW = 100\nN = 200\nA = max(H, W)\nans = (N + A - 1) // A\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6153": {"id": 6153, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nbc = [None]*(N+1)\nbc[N] = 0\nfor i in range(N-1, -1, -1):\n    bc[i] = bc[i+1] + N - bisect.bisect_right(C, B[i])\nans = 0\nfor i in range(N):\n    ans += bc[bisect.bisect_right(B, A[i])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19439": {"id": 19439, "code": "from math import gcd\nn = 3\nprint(2*n//gcd(n,2))", "coverage": [">", ">", ">"]}, "12481": {"id": 12481, "code": "A = 8;B = 12;K = 2\ncheck=list()\nfor i in range(1,min(A,B)+1):\n  if A%i==B%i==0:\n    check.append(i)\nprint(check[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "18741": {"id": 18741, "code": "H = 2\nW = 100\nN = 200\nc=0\nans=0\nif H>=W:\n    while c>=0:\n        c+=H\n        ans+=1\n        if c>=N:\n            break\nelse:\n    while c>=0:\n        c+=W\n        ans+=1\n        if c>=N:\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9677": {"id": 9677, "code": "N = 3\nmotoS = \"())\"\nS = list(motoS)\nstart = 0\nend = 0\nfor i in range(N):\n    if S[i] == '(':\n        end += 1\n    else:\n        end -= 1\n    if end < 0:\n        start += 1\n        end = 0\nprint('('*start+motoS+')'*end)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6364": {"id": 6364, "code": "from bisect import *\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncnt = []\nfor b in B:\n    cnt.append(bisect_left(A, b) * (N - bisect_right(C, b)))\nprint(sum(cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17272": {"id": 17272, "code": "a = \"D\";b = \"H\"\nif a == 'H' and  b == 'H':\n    print('H')\nelif a == 'D' and b == 'D':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "19286": {"id": 19286, "code": "n = 12\nans=0\nif n%2==0:\n    for i in range(1,30):\n        m=n//((5**i)*2)\n        ans+=m\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18390": {"id": 18390, "code": "import math\nH = 14\nW = 12\nN = 112\nprint(min(math.ceil(N / H), math.ceil(N / W)))", "coverage": [">", ">", ">", ">", ">"]}, "14347": {"id": 14347, "code": "N = 6\nL = [1, 2, 3, 2, 2, 1]\nans1 = 1\nflag = ''\nfor i in range(1, N):\n  if flag == '':\n    if L[i] < L[i-1]:\n      flag = 'minus'\n    elif L[i] > L[i-1]:\n      flag = 'plus'\n    else:\n      flag = ''\n  if flag == 'plus':\n    if L[i] < L[i-1]:\n      flag = ''\n      ans1 += 1\n  elif flag == 'minus':\n    if L[i] > L[i-1]:\n      flag = ''\n      ans1 += 1\nprint(ans1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16479": {"id": 16479, "code": "import bisect\nn = \"2\"\na = [0, 100]\nm=a[-1]\nq=bisect.bisect_right(a,m/2)\np=q-1\nif abs(m/2-a[p])>abs(m/2-a[q]):print(m,a[q])\nelse:print(m,a[p])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9161": {"id": 9161, "code": "A = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nA[0:4] = \"2018\"\nprint(\"\".join(A))", "coverage": [">", ">", ">"]}, "18357": {"id": 18357, "code": "h = 14\nw = 12\nn = 112\nc = n // max(h,w)\nif(n % max(h,w) != 0):c+=1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2353": {"id": 2353, "code": "N = 0;W = 3\ntotal1 = 0\ntotal2 = 0\nif N>1:\n  total1 = N*(N-1)//2\nelse:\n  total1 = 0\nif W>=2:\n  total2 = W*(W-1)//2\nelse:\n  total2 = 0\nprint(total1+total2)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "12484": {"id": 12484, "code": "a = 8;b = 12;k = 2\nn = min(a,b)\ncount = 0\nfor i in reversed(range(1,n+1)):\n    if a % i == 0 and b % i == 0:\n        count += 1\n    if count == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1300": {"id": 1300, "code": "N = [7, 5, 0]\nif N[1] < N[0]:\n  print(N[0] * 111)\nelif N[1] > N[0]:\n  print((N[0]+1) * 111)\nelse:\n  if N[2] <= N[0]:\n    print(N[0] * 111)\n  else:\n    print((N[0]+1) * 111)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "11470": {"id": 11470, "code": "s = \"SAT\"\nc=0\nw=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n  if(s==w[i]):\n    break\n  else:\n    c+=1\nprint(7-i)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13032": {"id": 13032, "code": "import sys\ninput = sys.stdin.readline  \nX = 5\nif X==7 or X ==5 or X ==3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11335": {"id": 11335, "code": "S = \"SUN\"\nweek = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nday = [7, 6, 5, 4, 3, 2, 1]\nans = week.index(S)\nprint(day[ans])", "coverage": [">", ">", ">", ">", ">"]}, "13510": {"id": 13510, "code": "sentence = \"abcde,fghihgf,edcba\"\nprint(sentence.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13499": {"id": 13499, "code": "x = \"happy\";y = \"newyear\";z = \"enjoy\"\nprint(x,y,z)", "coverage": [">", ">"]}, "7906": {"id": 7906, "code": "from math import ceil\nn = 3;k = 3\na = [1, 2, 3]\nn=n-k\nc=1\nif(n>0):\n    c+=ceil(n/(k-1))\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "9025": {"id": 9025, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif max(e-a,e-b,e-c,e-d) <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "415": {"id": 415, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nnum = len(s)\nfor i in range(num):\n    a = 122-ord(s[i])+1\n    if a <= k and s[i] != 'a':\n        k -= a\n        s[i] = 'a'\nif k > 0:\n    s[-1] = chr(ord(s[-1])+k%26)\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11140": {"id": 11140, "code": "S = \"atcoder\"\nN = len(S)\nif S != S[::-1]:\n    print('No')\nelif S[:(N - 1) // 2] != (S[:(N - 1) // 2])[::-1]:\n    print('No')\nelif S[(N + 3) // 2 - 1:] != (S[(N + 3) // 2 - 1:])[::-1]:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "18013": {"id": 18013, "code": "a = \"0112\"\nn=int(a[0:2])\nm=int(a[2:4])\nif 0<n<=12 and 0<m<=12:\n    print('AMBIGUOUS')\nelif 0<n<=12:\n    print('MMYY')\nelif 0<m<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4229": {"id": 4229, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\nprint(t2 - t1 - k)", "coverage": [">", ">", ">", ">"]}, "1973": {"id": 1973, "code": "N = 10;A = 3;B = 5\nmax_ans = min(A,B)\nif N-A-B>0:\n    min_ans = 0\nelse:\n    min_ans = abs(N-A-B)\nprint(max_ans, min_ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13881": {"id": 13881, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnow = False\ncount = 1\nfor i in range(N-1):\n    if A[i] < A[i+1]:\n        if now == 1:\n            pass\n        elif now == -1:\n            count += 1\n            now = False\n        else:\n            now = 1\n    elif A[i] > A[i+1]:\n        if now == 1:\n            count += 1\n            now = False\n        elif now == -1:\n            pass\n        else:\n            now = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "12289": {"id": 12289, "code": "s = \"akasaka\"\ns1 = s[:len(s)//2]\ns2 = s[len(s)//2+1:]\nprint(\"Yes\" if s==s[::-1] and s1==s1[::-1] and s2==s2[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "17461": {"id": 17461, "code": "s = \"0112\"\nans=[0]*2\na=int(s[:2])\nb=int(s[2:])\nif 1<=a<=12:\n    ans[0]=1\nif 1<=b<=12:\n    ans[1]=1\nif ans[0]==ans[1]==1:\n    print('AMBIGUOUS')\nelif ans[0]==ans[1]==0:\n    print('NA')\nelif ans[0]==1 and ans[1]==0:\n    print('MMYY')\nelse:\n    print('YYMM')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3501": {"id": 3501, "code": "A = 20;B = 30\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", ">", "!", "!"]}, "973": {"id": 973, "code": "n = 750\nwhile len(set(str(n)))!=1:\n\tn+=1\nprint(n)", "coverage": [">", ">", ">", ">"]}, "11372": {"id": 11372, "code": "s = \"SAT\"\nd = ['SUN','MON','TUE','WED','THU','FRI','SAT','a']  \nd.reverse()\nprint(d.index(s))", "coverage": [">", ">", ">", ">"]}, "2065": {"id": 2065, "code": "a = 100;b = 100;c = 100\nt = min(b, c)\nif b+c < a:\n    s = 0\nelse:\n    s = b + c - a\nprint(t, s)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "9592": {"id": 9592, "code": "s = \"2017/01/07\"\nss = s.replace(\"7\",\"8\",1)\nprint(ss)", "coverage": [">", ">", ">"]}, "9316": {"id": 9316, "code": "s = \"2017/01/07\"\ns_2 = s[4:10]\nprint('2018' + s_2)", "coverage": [">", ">", ">"]}, "14494": {"id": 14494, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=0 \ncnt=0\nfor i in range(N-1):\n    if A[i+1]-A[i] >0:\n        if flag ==1:\n            continue\n        elif flag ==-1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =1\n    elif A[i+1]-A[i] <0:\n        if flag ==-1:\n            continue\n        elif flag ==1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =-1\n    elif A[i+1]-A[i] ==0:\n        if flag == 0:\n            flag = 0\n        elif flag ==1:\n            flag =1\n        elif flag ==-1:\n            flag =-1\nprint(cnt+1) ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "4597": {"id": 4597, "code": "s = \"internationalization\"\nm = str(len(s) -2)\nprint(s[0] + m + s[-1])", "coverage": [">", ">", ">"]}, "18954": {"id": 18954, "code": "import math\nN = 12\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "3045": {"id": 3045, "code": "s = \"1111111111\"\nans=1000\nvalue=\"\"\nfor i in range(len(s)-2):\n    value=s[i:i+3]\n    if abs(753-int(value))<=ans:\n        ans=abs(753-int(value))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18931": {"id": 18931, "code": "import sys\nN = 12\nif N %2 !=0:\n    print(0)\n    sys.exit()\nelse:\n    sum = 0\n    num = N\n    num_tmp = num //5\n    while num_tmp > 0:\n        num_tmp = num // 5\n        sum += num // 10\n        num = num_tmp\nprint(sum)", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15299": {"id": 15299, "code": "X = 12;Y = 3;Z = 1\nprint(int((X-Z)/(Y+Z)))", "coverage": [">", ">"]}, "14177": {"id": 14177, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nis_up=False\nis_even=True\npre_a=a[0]\ncnt=1\nfor aa in a:\n  if is_even and pre_a != aa:\n    is_even=False\n    is_up=pre_a < aa\n  if not is_even:\n    if (is_up and pre_a > aa) or (not is_up and pre_a < aa):\n      is_even=True\n      cnt+=1\n  pre_a=aa\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13323": {"id": 13323, "code": "f = \"haiku\";s = \"atcoder\";ff = \"tasks\"\nprint(f, s, ff)", "coverage": [">", ">"]}, "15607": {"id": 15607, "code": "X = 12;Y = 3;Z = 1\nans = (X-Z)//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">"]}, "12358": {"id": 12358, "code": "s = \"level\"\nn = len(s)\nif s[0:n] == s[::-1]:\n  if s[0:(n-1)//2] == s[(n+1)//2:n]:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "4140": {"id": 4140, "code": "h = 10;m = 0;hh = 15;mm = 0;k = 30\nbi = h*60 + m\nen = hh*60 +mm\nprint(max(en - bi - k,0))", "coverage": [">", ">", ">", ">"]}, "6745": {"id": 6745, "code": "h = 10;n = 3\na = [4, 5, 6]\nif sum(a)>=h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12426": {"id": 12426, "code": "s = \"atcoder\"\nl = len(s)\na = s[0:(l-1)//2]\nb = len(a)\nprint(\"Yes\" if s == s[::-1] and a == a[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "16788": {"id": 16788, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    else:\n        print(\"D\")\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3708": {"id": 3708, "code": "A = 12;B = 4\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "4095": {"id": 4095, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif m2 >= m1:\n    print((h2 - h1) * 60 + (m2 - m1) - k)\nelse:\n    print((h2-1 - h1) * 60 + (m2 + 60 - m1) - k)", "coverage": [">", ">", ">", "!", "!"]}, "18690": {"id": 18690, "code": "h = 14\nw = 12\nn = 112\nx=n//h\nif n%h!=0:\n    x+=1\ny=n//w\nif n%w!=0:\n    y+=1\nprint(min(x,y))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15104": {"id": 15104, "code": "n = 3;p = 0\na = [1, 1, 1]\na1 = []\na2 = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        a2.append(a[i])\n    else:\n        a1.append(a[i])\nif len(a2) == n:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">"]}, "2909": {"id": 2909, "code": "S = \"35753\"\nN = len(S)\nans = 999\nfor i in range(0,N-2):\n  n = int(S[i:i+3])\n  ans = min(ans, abs(n - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8653": {"id": 8653, "code": "N = 7\nA_1 = [3, 3, 4, 5, 4, 5, 3]\nA_2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4585": {"id": 4585, "code": "s = \"internationalization\"\nl = len(s)\nfront = s[0]\nback = s[l-1]\ncenter = str(l-2)\nans = front + center + back\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4807": {"id": 4807, "code": "s = \"internationalization\"\nmojisuu=len(s)\ntyuukanmojisuu=len(s)-2\ns_list=list(s)\nprint(\"{}{}{}\".format(s_list[0],tyuukanmojisuu,s_list[mojisuu-1]))", "coverage": [">", ">", ">", ">", ">"]}, "2835": {"id": 2835, "code": "S = \"1111111111\"\nans = 99999\nans_s = 99999\nfor i in range(0,len(S)-2):\n    s = int(S[i:i+3])\n    ans = min(ans,abs(s-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16348": {"id": 16348, "code": "import bisect\nn = 5\na = [2, 4, 6, 9, 11]\nx = a[-1]\nN = a[-1]//2\na = a[:-1]\ny = bisect.bisect_left(a,N)\nif len(a) <= y: ans = a[y-1]\nelse:\n    ans = a[y]\n    if 0 < y and abs(N-ans) > abs(N-a[y-1]): ans = a[y-1]\n    if y < len(a)-1 and abs(N-ans) > abs(N-a[y+1]): ans = a[y+1]\nprint(x,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6615": {"id": 6615, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a_upperbound = bisect_left(A, b)\n    c_lowerbound = bisect_right(C, b)\n    ans += a_upperbound * (N - c_lowerbound)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6930": {"id": 6930, "code": "h = 211;n = 5\na=map(int,\"31 41 59 26 53\".split())\ns=sum(a)\nif s>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3477": {"id": 3477, "code": "a = 20;b = 30\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18628": {"id": 18628, "code": "h = 2\nw = 100\nn = 200\nm = max(h, w)\nif n % m:\n  print(n // m + 1)\nelse:\n  print(n // m)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16254": {"id": 16254, "code": "import sys\nn = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nif n==2:\n    print(A[1],A[0])\n    sys.exit()\np=A[-1]\nh=p/2\nfor i in range(n-1):\n    if A[i]>=h:\n        break\nif abs(A[i-1]-h)<=abs(A[i]-h):\n    q=A[i-1]\nelse:\n    q=A[i]\nprint(p,q)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1885": {"id": 1885, "code": "num = [10, 3, 5]\na = min(num[1],num[2])\nb = max(0,(num[1]+num[2]) - num[0])\nprint(a,b)", "coverage": [">", ">", ">", ">"]}, "17601": {"id": 17601, "code": "S = \"1905\"\nYYMM = 0\nMMYY = 0\nstart = S[0:2]\nend = S[2:4]\ntmp1 = int(start)\ntmp2 = int(end)\nif(tmp2 <= 12 and tmp2 != 0):\n    YYMM = 1\nif(tmp1 <= 12 and tmp1 != 0):\n    MMYY = 1\nif(YYMM == 1 and MMYY == 1):\n    print(\"AMBIGUOUS\")\nelif(YYMM == 1):\n    print(\"YYMM\")\nelif(MMYY == 1):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "172": {"id": 172, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n    a = 26-(ord(s[i])-97)\n    if k >= a and a != 26:\n        k -= a\n        s[i] = \"a\"\ns[-1] = chr(ord(s[-1]) + k % 26)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11853": {"id": 11853, "code": "M1 = 11\nM2 = 12\nans = 1 if M1 != M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "17027": {"id": 17027, "code": "N = ['D', 'D']\nprint('H' if (N[0]=='H' and N[1] == 'H') or (N[0]=='D' and N[1] == 'D') else 'D')", "coverage": [">", ">"]}, "1410": {"id": 1410, "code": "n = 112\nx = (n - 1) // 111 + 1\nprint(x * 100 + x * 10 + x)", "coverage": [">", ">", ">"]}, "15715": {"id": 15715, "code": "a = 100000;b = 1;c = 1\nprint((a-b-2*c)//(b+c)+1)", "coverage": [">", ">"]}, "6407": {"id": 6407, "code": "from bisect import bisect_left, bisect_right\nn = 2\nlst_a = [1, 5]\nlst_b = [2, 4]\nlst_c = [3, 6]\nlgth = len(lst_c)\nans = 0\nfor i in lst_b:\n    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "238": {"id": 238, "code": "s = \"codefestival\";k = 100\nans = []\na = ord('z') + 1\nfor i in s:\n    if k == 0:\n        ans.append(ord(i))\n    elif a - ord(i) <= k and i != 'a':\n        k -= a - ord(i)\n        ans.append(ord('a'))\n    else:\n        ans.append(ord(i))\nans[-1] += k % 26\nif ans[-1] >= a:\n    ans[-1] -= 26\nprint(*map(chr, ans), sep='')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "4006": {"id": 4006, "code": "import datetime\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nend = datetime.datetime(2020,6,6,h2,m2)\nstart = datetime.datetime(2020,6,6,h1,m1)\nsub = end-start-datetime.timedelta(minutes=k)\nprint(sub.seconds//60)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11847": {"id": 11847, "code": "A = 11;B = 30\nC = 12;D = 1\nif D == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "1615": {"id": 1615, "code": "import sys\nn = 100;a = 100;b = 100\nmi = max(0, a+b-n)\nma = min(n, min(a, b))\nprint(\"{} {}\".format(ma, mi))", "coverage": [">", ">", ">", ">", ">"]}, "1784": {"id": 1784, "code": "n = 10;a = 3;b = 5\nmax_r = min([a,b])\nmin_r = max([0, (a+b)-n])\nprint(\"{} {}\".format(max_r, min_r))", "coverage": [">", ">", ">", ">"]}, "8295": {"id": 8295, "code": "n = 8;k = 3\nnum_list = [7, 3, 1, 8, 4, 6, 2, 5]\nif (n-k) % (k-1) == 0:\n    print((n-k)//(k-1)+1)\nelse:\n    print((n-k)//(k-1) + 2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3721": {"id": 3721, "code": "a = 20;b = 15\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "6553": {"id": 6553, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\nans = 0\nfor i in range(n):\n    pos_a = bisect_left(a,b[i])\n    pos_c = bisect_right(c,b[i])\n    ans += pos_a*(n-pos_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13914": {"id": 13914, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=True\ns=False\ne=0\nc=1\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        continue\n    if a[i]>a[i-1]:\n        flag=True\n        e=i\n        break\n    elif a[i]<a[i-1]:\n        flag=False\n        e=i\n        break\nif e==n:\n    print(1)\n    exit()\nfor i in range(e+1,n):\n    if a[i]==a[i-1]:\n        continue\n    if s==True:\n        if a[i]>a[i-1]:\n            s=False\n            flag=True\n        else:\n            s=False\n            flag=False\n    elif a[i]>a[i-1] and flag==False:\n        c+=1\n        s=True\n    elif a[i]<a[i-1] and flag==True:\n        c+=1\n        s=True\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3254": {"id": 3254, "code": "a = 20;b = 30\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "10387": {"id": 10387, "code": "a = 8;b = 12;k = 2\noutput = []\nmins = min(a,b)\nfor divisor in range(1, mins+1):\n    if a % divisor == 0 and b % divisor == 0:\n        output.append(divisor)\nprint(output[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7252": {"id": 7252, "code": "health = 20;attack = 3\ndamage = [4, 5, 6]\nif health <= sum(damage):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11658": {"id": 11658, "code": "from sys import stdin\nlis = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nS = \"SAT\"\nk = 0\nfor i in range(7):\n    if lis[i] == S:\n        k = i\nprint(7 - k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1673": {"id": 1673, "code": "n = 10;a = 3;b = 5\nif n < a+b:\n    print(min(a, b),  a+b-n)\nelse:\n    print(min(a, b),  0)", "coverage": [">", ">", "!", "!", ">"]}, "433": {"id": 433, "code": "S = ['x', 'y', 'z']\nK = 4\nN=len(S)\nfor i in range(N):\n    if S[i]==\"a\":\n        continue\n    sa=ord(\"z\")-ord(S[i])+1\n    if sa<=K:\n        K-=sa\n        S[i]=\"a\"\nif K!=0:\n    K%=26\n    S[i]=chr(ord(S[i])+K)\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2417": {"id": 2417, "code": "n = 13;m = 3\nx = n*(n-1)//2\nr = m*(m-1)//2\nprint(x+r)", "coverage": [">", ">", ">", ">"]}, "13966": {"id": 13966, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nb = A[0]\natt = ''\ncnt = 1\nfor a in A:\n    if a != b:\n        if att == '':\n            if a > b:\n                att = '+'\n            elif a < b:\n                att = '-'\n        elif att == '+':\n            if a < b:\n                cnt += 1\n                att = ''\n        elif att == '-':\n            if a > b:\n                cnt += 1\n                att = ''\n    b = a\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "18695": {"id": 18695, "code": "h = 14\nw = 12\nn = 112\nans = 0\ni = 0\nm = max(h,w)\nwhile True:\n    ans +=1\n    i += m\n    if i >= n:\n        print(ans)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3394": {"id": 3394, "code": "A = 12;B = 4\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", "!", "!", ">"]}, "18951": {"id": 18951, "code": "N = 5\nif N % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    div = 1\n    for _ in range(100):\n        div *= 5\n        ans += N // (div * 2)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3447": {"id": 3447, "code": "a = 20;b = 30\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "617": {"id": 617, "code": "s = ['x', 'y', 'z']\nK = 4\nA=[chr(ord('a') + i) for i in range(26)]+[chr(ord('a') + i) for i in range(26)]\nfor i in range(len(s)):\n  a=A.index(s[i])\n  if i==len(s)-1:\n    K%=26\n    s[i]=A[a+K]\n    break\n  if s[i]=='a':\n    continue\n  if K>=26-a:\n    K-=(26-a)\n    s[i]='a'\n  else:\n    continue\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "267": {"id": 267, "code": "s = \"xyz\"\nk = 4\nns = []\nfor c in s[:-1]:\n    if c == 'a':\n        ns.append(c)\n        continue\n    ofstoa = ord('z')+1-ord(c)\n    if k >= ofstoa:\n        ns.append(chr(ord(c) + ofstoa - 26))\n        k -= ofstoa\n    else:\n        ns.append(c)\nlast = ord(s[-1])\nk = k%26\nif last + k > ord('z'):\n    ns.append(chr(last + k - 26))\nelse:\n    ns.append(chr(last + k))\nprint(''.join(ns))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11907": {"id": 11907, "code": "import sys\ninput = sys.stdin.readline\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "19133": {"id": 19133, "code": "n = 5\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    t = 10\n    while n >= t:\n        ans += n//t\n        t *= 5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "14600": {"id": 14600, "code": "N = 3;P = 0\nA = [1, 1, 1]\nodd = 0\nfor a in A:\n    if a % 2 != 0:\n        odd += 1\nif odd == 0:\n    if P == 1:\n        res = 0\n    else:\n        res = 2 ** N\nelse:\n    res = 2 ** (N - 1)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "1941": {"id": 1941, "code": "n = 100;a = 100;b = 100\nMAX = min(a, b)\nMIN = max(0, a+b-n)\nprint(MAX, MIN)", "coverage": [">", ">", ">", ">"]}, "16073": {"id": 16073, "code": "A = 12;B = 4\nans = A - B*2\nif ans <= 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12805": {"id": 12805, "code": "x = \"6\"\nprint('YES' if x in '357' else 'NO')", "coverage": [">", ">"]}, "3353": {"id": 3353, "code": "A = 20;B = 15\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)", "coverage": [">", ">", ">", ">", "!", "!"]}, "12395": {"id": 12395, "code": "S = \"level\"\nN=len(S)\nif S!=S[::-1]:\n    print('No')\nelse:\n    S1=S[0:(N-1)//2]\n    S2=S[(N+1)//2:N]\n    if S1==S1[::-1] and S2==S2[::-1]:\n        print('Yes')\n    else:\n        print('No')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "12384": {"id": 12384, "code": "S = \"atcoder\"\nflag = True\nN = len(S)\nfor i in range(N // 2):\n    if S[i] != S[-1 * i-1]:\n        flag = False\nfor i in range((N-1)//2-1):\n    if S[i] != S[(N-1)//2-1-i]:\n        flag = False\nfor i in range((N+3)//2,N-1):\n    if S[i] != S[-1 * i-1]:\n        flag = False\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15274": {"id": 15274, "code": "x = 64145;y = 123;z = 456\na=x//(y+z)\nif x-a*(y+z)>=z:\n  print(a)\nelse:\n  print(max(0,a-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "16800": {"id": 16800, "code": "a = \"H\";b = \"H\"\nif a == \"H\" and b ==\"H\":\n    print(\"H\")\nelif a == \"H\" and b ==\"D\":\n    print(\"D\")\nelif a == \"D\" and b ==\"H\":\n    print(\"D\")\nelif a == \"D\" and b ==\"D\":\n    print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6149": {"id": 6149, "code": "from bisect import *\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nres = 0\nfor i in b:\n    temp_a = bisect_left(a, i)\n    temp_c = n - bisect_right(c, i)\n    res += temp_a*temp_c\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15015": {"id": 15015, "code": "import collections\nn = 1;p = 1\na = [50]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif a2[1] == 0:\n  print(2 ** n if p == 0 else 0)\nelse:\n  print( 2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2971": {"id": 2971, "code": "s = \"35753\"\nans = 999\nfor i in range(len(s) - 2):\n    x = int(s[i:i + 3])\n    diff = abs(753 - x)\n    ans = min(diff, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17107": {"id": 17107, "code": "a = \"D\";b = \"H\"\nd={\"D\":False,\"H\":True}\nprint(\"D\" if d[a] ^ d[b] else \"H\")", "coverage": [">", ">", ">"]}, "7103": {"id": 7103, "code": "n = 10;d = 3\ns = [4, 5, 6]\nv=0\nfor i in s:\n    v+=int(i)\nif v>=n:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15282": {"id": 15282, "code": "x = 13;y = 3;z = 1\nans=int(x/(y+z))\nif x-ans*(y+z)>=z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "17264": {"id": 17264, "code": "s = ['D', ' ', 'D']\nif s[0] == s[2]:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "11782": {"id": 11782, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(\"1\" if m2==m1+1 else \"0\")", "coverage": [">", ">", ">"]}, "9754": {"id": 9754, "code": "N = 3\nS = \"())\"\nx=0\ny=0\nfor i in S:\n    if i==\"(\":\n        x+=1\n    else:\n        if x<=0:\n            y+=1\n        else:\n            x-=1\nprint(\"(\"*y+S+\")\"*x)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "177": {"id": 177, "code": "s = [2, 14, 3, 4, 5, 4, 18, 19, 8, 21, 0, 11]\nk = 100\nfor i, r in enumerate(s):\n    if r == 0:\n        pass\n    elif 26 - r <= k:\n        k -= 26-r\n        s[i] = 0\nif k > 0:\n    k %= 26\n    s[-1] += k\nans = \"\"\nfor r in s:\n    ans += chr(ord(\"a\") + r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5395": {"id": 5395, "code": "n = 5\nif n % 2 != 0:\n  n = n + 1\nprint(n // 2)", "coverage": [">", ">", ">", ">"]}, "18444": {"id": 18444, "code": "A = 14\nB = 12\nN = 112\nif A < B:\n  X = N//B\n  if N%B == 0:\n    print (X)\n  else:\n    print (X+1)\nelse:\n  X = N//A\n  if N%A == 0:\n    print (X)\n  else:\n    print (X+1)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "10732": {"id": 10732, "code": "S = \"atcoder\"\nN=len(S)\ncon_2=S[:(N-1)//2]\ncon_3=S[((N+3)//2-1):]\nif S==S[::-1] and con_2==con_2[::-1] and con_3==con_3[::-1]:\n            print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12041": {"id": 12041, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nans = 1 if M1 + 1 == M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "14418": {"id": 14418, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup = False\ndown = False\nans = 1\nfor i in range(1, n):\n    if up:\n        if a[i] < a[i-1]:\n            ans += 1\n            up = False\n    elif down:\n        if a[i] > a[i-1]:\n            ans += 1\n            down = False\n    else:\n        if a[i] > a[i-1]:\n            up = True\n        elif a[i] < a[i-1]:\n            down = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6019": {"id": 6019, "code": "N = \"5\"\nN=int(N)\nq1, mod = divmod(N,2)\nif mod == 0:\n    print(q1)\nelse:\n    print(q1 + 1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13688": {"id": 13688, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif m2 < m1:\n    m2 += 60\n    h2 -= 1\ntime = (h2 - h1) * 60 + (m2 - m1)\nprint(time - k)", "coverage": [">", ">", "!", "!", ">", ">"]}, "7696": {"id": 7696, "code": "import math\nh = 211;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15513": {"id": 15513, "code": "x = 12;y = 3;z = 1\nn = int((x-z)/(y+z))\nprint(n)", "coverage": [">", ">", ">"]}, "3525": {"id": 3525, "code": "a = 20;b = 30\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "1510": {"id": 1510, "code": "n = 750\nfor i in range(120):\n    dum = str(n)\n    set_dum = set(dum)\n    if 1 == len(set_dum):\n        break\n    n += 1\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15153": {"id": 15153, "code": "x = 13;y = 3;z = 1\nchair_len = x - 2 * z\nmax_count = 0\ni = 0\nwhile True:\n    if i%2==0:\n        if chair_len-y<0:\n            break\n        max_count += 1\n        chair_len -= y\n    else:\n        if chair_len-z<0:\n            break\n        chair_len -= z\n    i += 1\nprint(max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13472": {"id": 13472, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5],s[6:13],s[14:21])", "coverage": [">", ">"]}, "9337": {"id": 9337, "code": "S = \"2017/01/31\"\nS=S.replace('2017','2018')\nprint(S)", "coverage": [">", ">", ">"]}, "17466": {"id": 17466, "code": "S = \"1905\"\ns1,s2=int(S[:2]),int(S[2:])\nif 1<=s1<=12 and 1<=s2<=12:print('AMBIGUOUS')\nelif 1<=s1<=12:print('MMYY')\nelif 1<=s2<=12:print('YYMM')\nelse:print('NA')", "coverage": [">", ">", ">", ">", ">", "!"]}, "6350": {"id": 6350, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nu_cnt = [0] * N\nd_cnt = [0] * N\nt = 0\nfor i in range(N):\n    while t < N and A[t] < B[i]:\n        t += 1\n    u_cnt[i] = t\nt = N-1\nfor i in range(N-1,-1,-1):\n    while t >= 0 and C[t] > B[i]:\n        t -= 1\n    d_cnt[i] = N - 1 - t\nans = 0\nfor i in range(N):\n    ans += u_cnt[i] * d_cnt[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4447": {"id": 4447, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nresult = s[0] + str(len(s) - 2) + s[len(s) - 1]\nprint(result)", "coverage": [">", ">", ">"]}, "19306": {"id": 19306, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN = 3\nprint(2 * N if N % 2 == 1 else N)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5281": {"id": 5281, "code": "N = map(int, \"1 9 7 4\".split())\nS = set([1, 9, 7, 4])\nfor n in N:\n    if n in S:\n        S.remove(n)\n    else:\n        print('NO')\n        exit()\nelse:\n    print('YES')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "6471": {"id": 6471, "code": "from bisect import bisect_right, bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor bi in range(N):\n    ai_max = bisect_left(A, B[bi])\n    ci_min = bisect_right(C, B[bi])\n    ans += (ai_max) * (N - ci_min)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4984": {"id": 4984, "code": "s = \"internationalization\"\nprint(s[0], len(s) - 2, s[-1], sep='')", "coverage": [">", ">"]}, "4576": {"id": 4576, "code": "arg = \"internationalization\"\nprint(arg[0]+str(len(arg)-2)+arg[-1])", "coverage": [">", ">"]}, "15512": {"id": 15512, "code": "x = 13;y = 3;z = 1\nn = int((x-z)/(y+z))\nprint(n)", "coverage": [">", ">", ">"]}, "16821": {"id": 16821, "code": "ab = \"H H\"\nprint(eval('\"H\" if {} ab[2] == \"H\" else \"D\"'.format(\"not\" if ab[0] == \"D\" else \"\")))", "coverage": [">", ">"]}, "8711": {"id": 8711, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "91": {"id": 91, "code": "s = \"xyz\"\nK = 4\nans = []\nfor i in s:\n    if i == \"a\":\n        ans.append(\"a\")\n        continue\n    if ord(i) + K >= ord(\"z\") + 1:\n        ans.append(\"a\")\n        K -= ord(\"z\") + 1 - ord(i)\n    else:\n        ans.append(i)\nlast = (K + ord(ans[-1]) - ord('a')) % 26\nans[-1] = chr(ord(\"a\") + last)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "8869": {"id": 8869, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2640": {"id": 2640, "code": "s={1,7,9,4}\nt = {1, 4, 9, 7}\nprint(\"YES\" if t==s else \"NO\")", "coverage": [">", ">", ">"]}, "19350": {"id": 19350, "code": "n = 3\nif(n %2==1):\n  n *= 2\nprint(n)", "coverage": [">", ">", ">", ">"]}, "12839": {"id": 12839, "code": "age = 6\nprint(\"YES\") if age in (3,5,7) else print(\"NO\")", "coverage": [">", ">"]}, "14510": {"id": 14510, "code": "from math import factorial\nN = 3;P = 0\nA = [1, 1, 1]\nnum_k=0\nnum_g=0\nfor i in range(N):\n    if A[i]%2==0:\n        num_g+=1\n    else:\n        num_k+=1\nn=num_k//2\nans_k=0\nfor i in range(0,n*2+1,2):\n    ans_k+=factorial(num_k)/factorial(i)/factorial(num_k-i)\nans_g=2**(num_g)\nans=int(ans_k*ans_g)\nif P==0:\n    print(ans)\nelse:\n    ans=2**N-ans\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!"]}, "2155": {"id": 2155, "code": "N = 10;A = 3;B = 5\nmaxv = min(A, B)\nminv =  max(0, maxv - (N-max(A, B)))\nprint(maxv, minv)", "coverage": [">", ">", ">", ">"]}, "10199": {"id": 10199, "code": "n = 3\ns = ['(', ')', ')']\nl_ins = 0\nl = 0\nr = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        l += 1\n    else:\n        r += 1\n    l_ins = max(l_ins, r-l)\nr_ins = 0\nl = 0\nr = 0\nfor i in range(n-1, -1, -1):\n    if s[i] == \"(\":\n        l += 1\n    else:\n        r += 1\n    r_ins = max(r_ins, l-r)\nar = [\"(\"]*l_ins + s + [\")\"]*r_ins\nprint(\"\".join(ar))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6573": {"id": 6573, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt = 0\nfor bb in b:\n    anum = bisect.bisect_left(a, bb)\n    cnum = n - bisect.bisect_right(c, bb)\n    cnt += (anum * cnum)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12012": {"id": 12012, "code": "a = [11, 30]\nb = [12, 1]\nif a[0]!=b[0]:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "17130": {"id": 17130, "code": "a = \"H\";b = \"H\"\na = 1 if a == \"H\" else -1\nb = 1 if b == \"H\" else -1\nprint(\"H\" if a*b == 1 else \"D\")", "coverage": [">", ">", ">", ">"]}, "6902": {"id": 6902, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nA.sort()\nA = A[:N]\ns = sum(A)\nans = 'No'\nif s >= H:\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17513": {"id": 17513, "code": "S = \"1700\"\nmonths=['01','02','03','04','05','06','07','08','09','10','11','12']\nif S[0:2] in months and S[2:4] in months:\n    print('AMBIGUOUS')\nelif S[0:2] in months:\n    print('MMYY')\nelif S[2:4] in months:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17853": {"id": 17853, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 0<a<13:\n    if 0<b<13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 0<b<13:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "18055": {"id": 18055, "code": "s = \"1905\"\ns1, s2 = int(s[:2]), int(s[2:])\nans = ['NA', 'YYMM', 'MMYY', 'AMBIGUOUS']\nprint(ans[((1 <= s1 <= 12) << 1) + (1 <= s2 <= 12)])", "coverage": [">", ">", ">", ">"]}, "12590": {"id": 12590, "code": "a = 100;b = 50;k = 4\nl = []\nfor i in range(1, min(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        l.append(i)\nprint(sorted(l, reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "14165": {"id": 14165, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ntmp = 0\nfor i in range(1, n):\n    if (A[i] - A[i-1]) * tmp < 0:\n        ans += 1\n        tmp = 0\n    elif A[i] - A[i-1] != 0:\n        tmp = A[i] - A[i-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15474": {"id": 15474, "code": "x = 12;y = 3;z = 1\ntmp = (x-z)//(y+z)\namari = (x-z)%(y+z)\nprint(tmp)", "coverage": [">", ">", ">", ">"]}, "13893": {"id": 13893, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nbol = 0\ncnt = 1\nfor i in range(N-1):\n    if bol == 0:\n        if A[i] > A[i+1]:\n            bol = -1\n        elif A[i] < A[i+1]:\n            bol = 1\n    elif bol == 1:\n        if A[i] > A[i+1]:\n            cnt += 1\n            bol = 0\n    else:\n        if A[i] < A[i+1]:\n            cnt += 1\n            bol = 0\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9020": {"id": 9020, "code": "a = 1;b = 2;c = 4;d = 8;e = 9;k = 15\nif e-a<=k:print(\"Yay!\")\nelse:print(\":(\")", "coverage": [">", ">", "!"]}, "15614": {"id": 15614, "code": "icase=0\nif icase==0:\n    x = 12;y = 3;z = 1\n    n=x//(y+z)\n    if x%(y+z)>=z:\n        print(n)\n    else:\n        print(n-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13139": {"id": 13139, "code": "n = 6\nif n in [7,5,3]: print('YES')\nelse: print('NO')", "coverage": [">", ">", ">"]}, "11147": {"id": 11147, "code": "a = \"level\"\nl = len(a)\nm = a[:l//2]\nn = a[l//2 + 1 :]\nif a[::-1] == a and m == m[::-1] and n == n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16150": {"id": 16150, "code": "n = 5\na = [6, 9, 4, 2, 11]\nsorted_a = sorted(a)\na_max = sorted_a[-1]\ndif = []\nfor i,ai in enumerate(sorted_a[:n-1]):\n    dif.append((i,abs(ai-(a_max/2))))\nmin_i = sorted(dif, key=lambda x:x[1])[0][0]\ndif_min = sorted_a[min_i]\nprint(a_max, dif_min)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "79": {"id": 79, "code": "s = \"a\"\nk = 25\nans = \"\"\nl = 26\nfor i in range(len(s)-1):\n    if l - ord(s[i]) + 97 <= k and s[i] != \"a\":\n        k -= l - ord(s[i]) + 97\n        ans += \"a\"\n    else:\n        ans += s[i]\nans += (chr(((ord(s[-1]) - 97) + k + l) % l + 97))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "10189": {"id": 10189, "code": "n = 8\ns = \"))))((((\"\nl, r, c = 0, 0, 0\nfor a in s:\n    if a == '(':\n        c += 1\n    elif c:\n        c -= 1\n    else:\n        l += 1\nr = c\nprint(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12994": {"id": 12994, "code": "x = \"5\"\nprint(\"YES\" if x in \"357\" else \"NO\")", "coverage": [">", ">"]}, "847": {"id": 847, "code": "k = 2\nif k % 2 == 0 or k % 5 == 0:\n    print(-1)\nelif k == 1 or k == 7:\n    print(1)\nelse:\n    t = 2\n    ex = 77\n    for i in range(10 ** 8):\n        if ex % k == 0:\n            break\n        ex = (ex % k) * 10 + 7\n        t += 1\n    print(t)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6230": {"id": 6230, "code": "N = 2\nA = [0, 1, 5]\nA.sort()\nB = [0, 2, 4]\nB.sort()\nC = [0, 3, 6]\nC.sort()\nbko = [0 for i in range(N+1)]\ncnt = 1\nfor i in range(1,N+1):\n  b = B[i]\n  for j in range(cnt,N+1):\n    if A[j] >= b:\n      bko[i] = j-1\n      cnt = j\n      break\n    if j == N:\n      bko[i] = N\n      cnt = N\nfor i in range(N):     \n  bko[i+1] += bko[i]\ncko = [0 for i in range(N+1)]\ncnt = 1\nfor i in range(1,N+1):\n  c = C[i]\n  for j in range(cnt,N+1):\n    if B[j] >= c:\n      cko[i] = bko[j-1]\n      cnt = j\n      break\n    if j == N:\n      cko[i] = bko[N]\n      cnt = N\nprint(sum(cko))        ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10700": {"id": 10700, "code": "s = \"akasaka\"\nn=len(s)\nx=s[0:(n-1)//2]\ny=s[(n+3)//2-1:n]\nif x==x[::-1] and y==y[::-1] and s==s[::-1]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "10059": {"id": 10059, "code": "N = 8\nS = \"))))((((\"\noS = S\nS = list(S)\ncnt = 0\nwhile True:\n    p_cnt = cnt\n    for i in range(len(S) - 1):\n        if S[i] == \"(\" and S[i + 1] == \")\":\n            S.pop(i + 1)\n            S.pop(i)\n            cnt += 1\n            break\n    if cnt == p_cnt:\n        break\ncnt_open = 0\ncnt_close = 0\nfor s in S:\n    if s == \"(\":\n        cnt_open += 1\n    else:\n        cnt_close += 1\nans = (\"(\" * cnt_close) + oS + (\")\" * cnt_open)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "4096": {"id": 4096, "code": "A = 10;B = 0;C = 15;D = 0;E = 30\nprint(max(0,-60*A-B+(60*C+D))-E)", "coverage": [">", ">"]}, "6670": {"id": 6670, "code": "H = 211;N = 5\nA_ls = map(int, \"31 41 59 26 53\".split(' '))\nif sum(A_ls) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "7355": {"id": 7355, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nS = sum(A)\nif S >= H: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", "!"]}, "1643": {"id": 1643, "code": "N = 10;A = 3;B = 5\nans1 = min(A, B)\nans2 = max(A + B - N, 0)\nprint(\"{} {}\".format(ans1, ans2))", "coverage": [">", ">", ">", ">"]}, "17797": {"id": 17797, "code": "s = \"1700\"\nn1 = int(s[:2])\nn2 = int(s[2:])\nif 1 <= n1 <= 12 and 1 <= n2 <= 12:\n  print(\"AMBIGUOUS\")\nelif (n1 > 12 or n1 == 0) and 1 <= n2 <= 12:\n  print(\"YYMM\")\nelif (n2 > 12 or n2 == 0) and 1 <= n1 <= 12:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "369": {"id": 369, "code": "s = \"xyz\"\nslist=[i for i in s]\nK = 4\ncost = []\nfor i in s:\n    if i==\"a\":\n        cost.append(0)\n    else:\n        cost.append(ord(\"z\")-ord(i)+1)\nfor i,c in enumerate(cost):\n    if c<=K:\n        K = K-c\n        slist[i]=\"a\"\nlastord = (ord(slist[-1])-ord(\"a\")+K)%26+ord(\"a\")\nslist[-1]=chr(lastord)\nprint(\"\".join(slist))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6688": {"id": 6688, "code": "h = 20;n = 3\na = [4, 5, 6]\nif sum(a) >= h :\n    print(\"Yes\")\nelse : print(\"No\")", "coverage": [">", ">", ">", "!", ">"]}, "3006": {"id": 3006, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    t = abs(int(S[i:i+3])- 753)\n    if t < ans:\n        ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2706": {"id": 2706, "code": "if sorted(list(map(int, \"1 2 9 1\".split()))) == [1, 4, 7, 9]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", "!", "!", ">"]}, "12048": {"id": 12048, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m2 != m1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9555": {"id": 9555, "code": "s = \"2017/01/31\"\ns = s.replace(\"2017\",\"2018\")\nprint(s)", "coverage": [">", ">", ">"]}, "5439": {"id": 5439, "code": "n = 100\nprint(n//2) if n%2==0 else print(n//2+1)", "coverage": [">", ">"]}, "8081": {"id": 8081, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\npos = A.index(1)\ncount = 0\nnum_forward = pos  \nnum_backward = N - pos - 1  \nrest = num_forward % -(K - 1)\nnum_backward += rest\nwhile num_forward > 0:  \n    num_forward -= K - 1\n    count += 1\nwhile num_backward > 0:  \n    num_backward -= K - 1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6277": {"id": 6277, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nma=0\ncntb=[0]*n\nfor i in range(n):\n    if i>0:\n        cntb[i]=cntb[i-1]\n    while ma<n:\n        if a[ma]<b[i]:\n            cntb[i]+=1\n            ma+=1\n        else:\n            break\nmb=0\ncntc=[0]*n\nfor i in range(n):\n    if i>0:\n        cntc[i]=cntc[i-1]\n    while mb<n:\n        if b[mb]<c[i]:\n            cntc[i]+=cntb[mb]\n            mb+=1\n        else:\n            break\nprint(sum(cntc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11284": {"id": 11284, "code": "S = \"SAT\"\nprint()\nif S==\"SUN\":\n    print(7)\nif S==\"MON\":\n    print(6)\nif S==\"TUE\":\n    print(5)\nif S==\"WED\":\n    print(4)\nif S==\"THU\":\n    print(3)\nif S==\"FRI\":\n    print(2)\nif S==\"SAT\":\n    print(1)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "18481": {"id": 18481, "code": "from math import ceil\nH = 2\nW = 100\nN = 200\nprint(min(ceil(N/H),ceil(N/W)))", "coverage": [">", ">", ">", ">", ">"]}, "2020": {"id": 2020, "code": "N = 100;A = 100;B = 100\nm = min(A, B)\nM = max(A + B - N, 0)\nprint(m, M)", "coverage": [">", ">", ">", ">"]}, "6652": {"id": 6652, "code": "n = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nimport bisect\nans=0\nfor i in range(n):\n    inda=bisect.bisect_left(a,b[i])\n    indc=bisect.bisect_right(c,b[i])\n    ans += inda*(n-indc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18979": {"id": 18979, "code": "n = 12\nif n % 2 == 0:\n    n5 = 1\n    y = 10\n    c = []\n    while y <= n:\n        c.append(n//y)\n        if len(c) > 1:\n            c[-2] -= c[-1]\n        y *= 5\n    cnt = 0\n    for i in range(len(c)):\n        cnt += c[i]*(i+1)\n    print(cnt)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "10813": {"id": 10813, "code": "s = \"level\"\nflag = 0\nsr = s[-1::-1]\nif sr == s:\n    flag+=1\ns1 = s[:(len(s)-1)//2]\ns1r = s1[-1::-1]\nif s1 == s1r:\n    flag += 1\ns2 = s[(len(s)+3)//2-1:]\ns2r = s2[-1::-1]\nif s2 == s2r:\n    flag+=1\nprint('Yes' if flag == 3 else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "1406": {"id": 1406, "code": "n = 111\nprint(((n-1)//111+1)*111)", "coverage": [">", ">"]}, "7719": {"id": 7719, "code": "n = 3;k = 3\nA = (1, 2, 3)\ncount = -(-(n - 1) // (k-1))\nprint(count)", "coverage": [">", ">", ">", ">"]}, "211": {"id": 211, "code": "alpha=[chr(ord('a') + i) for i in range(26)]\na = ['a']\nN = 25\nfor i in range(len(a)):\n   s=26-alpha.index(a[i])\n   if s<=N and s!=26:\n      a[i]=\"a\"\n      N-=s\ns=alpha.index(a[-1])\ns=(s+N)%26\na[-1]=alpha[s]\nprint(*a,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "17526": {"id": 17526, "code": "S = 1905\nS1, S2 = S // 100, S % 100\nYYMM = (1 <= S2 and S2 <= 12)\nMMYY = (1 <= S1 and S1 <= 12)\nif YYMM and MMYY:\n    print(\"AMBIGUOUS\")\nelif YYMM:\n    print(\"YYMM\")\nelif MMYY:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "15919": {"id": 15919, "code": "import sys\ninput = sys.stdin.readline\na = 20;b = 30\nif 2*b >= a:\n    print(0)\nelse:\n    print(a - 2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "6802": {"id": 6802, "code": "H = 20;N = 3\nA = [4, 5, 6]\nans = 'Yes' if H<=sum(A) else 'No'\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3396": {"id": 3396, "code": "A = 20;B = 30\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "19318": {"id": 19318, "code": "N = 3\nn1 = N % 2\nif n1 == 0:\n    n_value = N\nelse:\n    n_value = 2 * N\nprint(n_value)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1020": {"id": 1020, "code": "n = 111\nfor i in range(n,1000):\n    a = str(i)\n    if a[0] == a[1] and a[0] == a[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "19411": {"id": 19411, "code": "n = 3\nans=n if n%2==0 else 2*n\nprint(ans)", "coverage": [">", ">", ">"]}, "11387": {"id": 11387, "code": "s = \"SUN\"\napple = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\"]\nprint(7-apple.index(s))", "coverage": [">", ">", ">"]}, "14873": {"id": 14873, "code": "N = 2;P = 0\nA = [1, 3]\ndp = [[0,0] for k in range(N+1)]\ndp[0][0] = 1\nfor k in range(N):\n    if A[k]%2 == 0:\n        dp[k+1][0] = dp[k][0]*2\n        dp[k+1][1] = dp[k][1]*2\n    else:\n        dp[k+1][0] = dp[k][0] + dp[k][1]\n        dp[k+1][1] = dp[k][1] + dp[k][0]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "6727": {"id": 6727, "code": "h = 10;n = 3\na = [4, 5, 6]\ns = sum(a)\nif h > s:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16022": {"id": 16022, "code": "base = ['12', '4']\na = int(base[0])\nb = int(base[1])\nif a>b*2:\n    print(a-b*2)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9169": {"id": 9169, "code": "S = \"2017/01/31\"\nprint(S[:3]+\"8\"+S[4:])", "coverage": [">", ">"]}, "3366": {"id": 3366, "code": "a = 20;b = 30\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3611": {"id": 3611, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 12;B = 4\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17347": {"id": 17347, "code": "a = \"D\";b = \"H\"\nif (a=='H' and b=='H'):\n    print('H')\nelif (a=='H' and b=='D'):\n    print('D')\nelif (a=='D' and b=='H'):\n    print('D')\nelse:\n    print('H')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "19440": {"id": 19440, "code": "from math import gcd\nn = 10\nprint(2*n//gcd(n,2))", "coverage": [">", ">", ">"]}, "1360": {"id": 1360, "code": "n = 111\nfor i in range(1, 10):\n    ans = i * 111\n    if ans >= n:\n        print(ans)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "18605": {"id": 18605, "code": "x = 3\ny = 7\nz = 10\na = max(x,y)\nif z%a == 0:\n  print(z//a)\nelse:\n  print(z//a+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3660": {"id": 3660, "code": "x = 12;y = 4\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", "!", "!", ">"]}, "9196": {"id": 9196, "code": "date = ['2017', '01', '07']\ndate[0] = '2018'\nprint('/'.join(date))", "coverage": [">", ">", ">"]}, "18142": {"id": 18142, "code": "S = \"1700\"\nans = [0,0]\nif 1<=int(S[:2]) and int(S[:2]) <= 12 :\n    ans[0] = 1\nif 1 <=int(S[2:]) and int(S[2:]) <= 12 :\n    ans[1] = 1\nif ans == [1,1] :\n    print('AMBIGUOUS')\nelif ans == [0,0] :\n    print('NA')\nelif ans == [0,1] :\n    print('YYMM')\nelif ans == [1,0] :\n    print('MMYY')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "10058": {"id": 10058, "code": "N = 6\nS = \")))())\"\noS = S\nS = list(S)\ncnt = 0\nwhile True:\n    p_cnt = cnt\n    for i in range(len(S) - 1):\n        if S[i] == \"(\" and S[i + 1] == \")\":\n            S.pop(i + 1)\n            S.pop(i)\n            cnt += 1\n            break\n    if cnt == p_cnt:\n        break\ncnt_open = 0\ncnt_close = 0\nfor s in S:\n    if s == \"(\":\n        cnt_open += 1\n    else:\n        cnt_close += 1\nans = (\"(\" * cnt_close) + oS + (\")\" * cnt_open)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "9179": {"id": 9179, "code": "ds = \"2017/01/31\"\nds=ds.replace(\"2017\",\"2018\")\nprint(ds)", "coverage": [">", ">", ">"]}, "8549": {"id": 8549, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18110": {"id": 18110, "code": "s = \"1905\"\na, b = int(s[:2]), int(s[2:])\nym, my = False, False\nif a > 0 and a <13:\n    my = True\nif b > 0 and b <13:\n    ym = True\nif ym and my:\n    print('AMBIGUOUS')\nelif ym and not my:\n    print('YYMM')\nelif not ym and my:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "7127": {"id": 7127, "code": "h = 10;n = 3\na = [4, 5, 6]\nprint('Yes' if h<=sum(a) else 'No')", "coverage": [">", ">", ">"]}, "4859": {"id": 4859, "code": "a = \"smiles\"\nprint(f\"{a[0]}{len(a[1:-1])}{a[-1]}\")", "coverage": [">", ">"]}, "18454": {"id": 18454, "code": "h = 2\nw = 100\nn = 200\nm = max(h, w)\nans = n // m\nif n % m != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "5224": {"id": 5224, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nt = len(s)-2\nu = s[0]+str(t)+s[-1]\nprint(u)", "coverage": [">", ">", ">", ">"]}, "1239": {"id": 1239, "code": "n = 750\nfor i in range(n,1000):\n    one = i % 10\n    ten = i //10 % 10\n    hund = i // 100\n    if one == ten and ten == hund:\n        print(hund*100+ten*10+one)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7959": {"id": 7959, "code": "x = 3;y = 3\nli = [1, 2, 3]\nif (x-1)%(y-1) == 0:\n    print((x-1)//(y-1))\nelse:\n    print((x-1)//(y-1)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6024": {"id": 6024, "code": "N = 100\nans = N // 2 + min(1, N % 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "12840": {"id": 12840, "code": "x = 5\nprint('YES' if x == 5 or abs(x-5) == 2 else 'NO')", "coverage": [">", ">"]}, "18616": {"id": 18616, "code": "row = 2\ncolmun = 100\ntop = 200\nlow, high = 0,0\nif row <= colmun:\n  low, high = row, colmun\nelse:\n  low, high = colmun, row\nfor n in range(low):\n  if (n + 1) * high >= top:\n    print(n + 1)\n    break", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8906": {"id": 8906, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15786": {"id": 15786, "code": "x = 64145;y = 123;z = 456\ncount=1\nx -= 2*z+y\ncount += x //(y+z)\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "14426": {"id": 14426, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nb = [0] + a\nc = [(i-j)//abs(i-j) for i, j in zip(a, b) if i != j]\ndel c[0]\nif c:\n  mae=c[0]\n  d=iter(c)\n  for x in d:\n    if x != mae:\n      cnt += 1\n      try:\n        mae = d.__next__()\n      except StopIteration:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7984": {"id": 7984, "code": "from math import ceil\nN = 3;K = 3\nA = [1, 2, 3]\nans = ceil((N-1)/(K-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13007": {"id": 13007, "code": "x = 6\nif x in {3, 5, 7}:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "2671": {"id": 2671, "code": "n = {0, 9, 4, 8}\nif {1, 9, 7, 4} == n:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "10232": {"id": 10232, "code": "n = 3\ns = \"())\"\nx=s\nfor i in range(50):\n  x=x.replace('()','')\nl=x.count(')')\nr=x.count('(')\nfor i in range(l):\n  s='('+s\nfor i in range(r):\n  s+=')'\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13842": {"id": 13842, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount=1\nsign=0\nfor i in range(N-1):\n    diff=A[i+1]-A[i]\n    if sign*diff<0:\n        count+=1\n        sign=0\n    elif sign==0:\n        sign=diff\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19046": {"id": 19046, "code": "N = 5\nans = 0\nif N % 2 == 0:\n  ans += N//10\n  ans += N//50\n  N //= 50\n  while N > 0:\n    N //= 5\n    ans += N\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "13739": {"id": 13739, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndata = 60*(h2-h1)+1*(m2-m1)-k\nprint(data)", "coverage": [">", ">", ">"]}, "3116": {"id": 3116, "code": "S = \"1234567876\"\nn = len(S)\nres = 10 ** 6\nfor i in range(n-2):\n    s = int(S[i:i+3])\n    res = min(res, abs(s - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8640": {"id": 8640, "code": "n = 1\na = [2]\nb = [3]\nmax=0\nfor i in range(n):\n  tmp=sum(a[:i+1])\n  tmp+=sum(b[i:])\n  if max<tmp:\n    max=tmp\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12189": {"id": 12189, "code": "m = 11;d = 16\nmm = 11;dd = 17\nprint('01'[m<mm])", "coverage": [">", ">", ">"]}, "12617": {"id": 12617, "code": "import sys\nA = 100;B = 50;K = 4\nmini = min(A, B)\ndivisors = []\nfor i in range(1, mini + 1):\n    if A % i == 0 and B % i == 0:\n        divisors.append(i)\ndivisors = divisors[::-1]\nprint(divisors[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3037": {"id": 3037, "code": "s = \"35753\"\nans = abs(753 - int(s[0: 3]))\nfor i in range(1, len(s) - 2):\n    num = int(s[i: i + 3])\n    ans = min(ans, abs(753 - num))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "10007": {"id": 10007, "code": "N = 6\nS = \")))())\"\nx, y, z=0, 0, 0\nfor i in range(N):\n  if S[i]=='(':\n    x+=1\n  else:\n    y+=1\n  z=min(z, x-y)\nprint('('*-z+S+')'*max(0, x-z-y))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "17567": {"id": 17567, "code": "a = 1700\nl=a/100\nr=a%100\nif 1<=l and l<=12:\n    if 1<=r and  r<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=r and r<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12273": {"id": 12273, "code": "S = \"atcoder\"\nl = len(S) // 2\nformer = S[:l]\nlatter = S[l+1:]\nprint(\"Yes\" if S == S[::-1] and former == former[::-1] and latter == latter[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "2195": {"id": 2195, "code": "n = 10;a = 7;b = 5\nM=min(a,b)\nm=a+b-n\nif(m<0):\n    m=0\nprint(M,m)", "coverage": [">", ">", ">", ">", "!", ">"]}, "856": {"id": 856, "code": "k = 2\nrep = 0\nf = 0\nfor i in range(k):\n    rep=  rep*10 + 7\n    if(rep%k == 0):\n        f = 1\n        break\n    rep = rep%k\nprint(-1 if(f == 0) else i+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "9622": {"id": 9622, "code": "ss = \"2017/01/07\"\nprint(ss[:3] + '8' + ss[4:])", "coverage": [">", ">"]}, "1448": {"id": 1448, "code": "n = 112\ncount = 0\nwhile n > count:\n  count = count + 111\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "7243": {"id": 7243, "code": "H = 10;M = 3\nattack = [4, 5, 6]\nif H - sum(attack) <=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "18907": {"id": 18907, "code": "N = 5\nif N % 2 == 0:\n    tmp = 10\n    ans = 0\n    while tmp <= N:\n        ans += N // tmp\n        tmp = 5 * tmp\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "9856": {"id": 9856, "code": "import sys\nN = 6\nS = \")))())\"\nstack = []\nfor s_i in S:\n    if not stack:\n        stack.append(s_i)\n    elif stack[-1] == \"(\" and  s_i == \")\":\n        stack.pop()\n    else:\n        stack.append(s_i)\nleft = 0\nright = 0\nfor s_i in stack:\n    if s_i == \")\":\n        right += 1\n    else:\n        left += 1\nprint(\"(\" * right + S + \")\" * left)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5008": {"id": 5008, "code": "code = \"internationalization\"\nfirst_code = code[0]\nlast_code = code[len(code)-1]\nprint(first_code + str(len(code)-2) +last_code)", "coverage": [">", ">", ">", ">"]}, "12854": {"id": 12854, "code": "X = \"5\"\nif X in (\"357\"):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "8276": {"id": 8276, "code": "n = 3;k = 3\nk-=1\na = [1, 2, 3]\ni=n-1\nprint(-(-i//k)-(-(n-i-1)//k))", "coverage": [">", ">", ">", ">", ">"]}, "10674": {"id": 10674, "code": "A = 1;B = 1;K = 1\nl = []\nfor i in range(1, max(A+1, B+1)):\n  if (A%i==0) and (B%i==0):\n    l.append(i)\nprint(l[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "454": {"id": 454, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nl = len(s)\nfor i in range(l-1):\n    x = (ord('a')-ord(s[i])) % 26\n    if x <= K:\n        K -= x\n        s[i] = 'a'\ns[l-1] = chr(ord('a') + (ord(s[-1])-ord('a')+K) % 26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15566": {"id": 15566, "code": "x = 12;y = 3;z = 1\nans = 0\nx -= z\nfor i in range(100000):\n    if x >= y + z:\n        ans += 1\n        x -= y + z\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12068": {"id": 12068, "code": "M_1 = 11;D_1 = 30\nM_2 = 12;D_2 = 1\nprint(0 if M_1 == M_2 else 1)", "coverage": [">", ">", ">"]}, "4837": {"id": 4837, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nlen_s = len(s)\nans = s[0] + str(len(s)-2) + s[(len_s)-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4542": {"id": 4542, "code": "s = \"xyz\"\nans = s[0]+str(len(s[1:len(s)-1]))+s[len(s)-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "18225": {"id": 18225, "code": "h = 3\nw = 7\nn = 10\na = 0\nb = 0\nc = 0\nd = 0\nfor i in range(h):\n  a += w\n  b += 1\n  if a >= n:\n    break\nfor i in range(w):\n  c += h\n  d += 1\n  if c >= n:\n    break\nif b > d:\n  print(d)\nelse:\n  print(b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1359": {"id": 1359, "code": "n = \"750\"\nprint(n[0]*3) if int(n) <= int(n[0]*3) else print(str(int(n[0])+1)*3)", "coverage": [">", ">"]}, "17852": {"id": 17852, "code": "s = \"1700\"\na=0<int(s[:2])<13\nb=0<int(s[-2:])<13\nif a and b:\n    print('AMBIGUOUS')\nelif b:\n    print('YYMM')\nelif a:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5412": {"id": 5412, "code": "from math import *\nx=int(\"100\")\nprint(ceil(x/2))", "coverage": [">", ">", ">"]}, "15689": {"id": 15689, "code": "import math\nx = 13;y = 3;z = 1\nif x%(y+z)>=z:\n  print(math.floor(x/(y+z)))\nelse:\n  print(math.floor(x/(y+z)-1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "8747": {"id": 8747, "code": "n = 1\nA = [2]\nB = [3]\nans = 0\nsum_a = 0\nfor i in range(n):\n    sum_a += A[i]\n    temp = sum_a\n    for j in range(i,n):\n        temp += B[j]\n    ans = max(ans,temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2924": {"id": 2924, "code": "s = \"1111111111\"\nans = 753\nfor i in range(len(s) - 2):\n  x = int(s[i:i+3])\n  if abs(753 - x) < ans:\n    ans = abs(753-x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2313": {"id": 2313, "code": "N = 100;A = 100;B = 100\nResMax = min(A, B)\nResMin = max(0, A+B-N)\nprint(ResMax, ResMin)", "coverage": [">", ">", ">", ">"]}, "12851": {"id": 12851, "code": "X = 6\nl = [3,5,7]\nif X in l:\n  r = 'YES'\nelse:\n  r = 'NO'\nprint(r)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "17798": {"id": 17798, "code": "S = \"1905\"\nleft = int(S[:2])\nright = int(S[2:])\nyear_flag = [0, 0]\nif left > 12 or left == 0:\n    year_flag[0] += 1\nif right > 12 or right == 0:\n    year_flag[1] += 1\nif sum(year_flag) == 2:\n    print('NA')\nelif sum(year_flag) == 0:\n    print('AMBIGUOUS')\nelif year_flag[0] == 1:\n    print('YYMM')\nelse:\n    print('MMYY')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "12667": {"id": 12667, "code": "if int(\"6\") in {7,5,3}:print('YES')\nelse:print('NO')", "coverage": [">", ">"]}, "9378": {"id": 9378, "code": "S = \"2017/01/07\"\nSS=S.replace('2017','2018')\nprint(SS)", "coverage": [">", ">", ">"]}, "798": {"id": 798, "code": "k = 2\nx = 7 % k\nfor i in range(1, k+1):\n    if x == 0:\n        print(i)\n        exit()\n    x = (x*10+7)%k\nprint(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "12873": {"id": 12873, "code": "rStr = \"6\"\nA = int(rStr.split(' ')[0])\nif A == 7 or A == 5 or A == 3 :\n    print(\"YES\")\nelse :\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "5269": {"id": 5269, "code": "n = {1, 4, 9, 7}\nif n == set([1,4,7,9]):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "15824": {"id": 15824, "code": "X = 100000;Y = 1;Z = 1\nif X < (2*Z + Y):\n    print(0)\nelse:\n    print(int((X-Z)/(Z+Y)))", "coverage": [">", ">", "!", "!", ">"]}, "4459": {"id": 4459, "code": "s = \"internationalization\"\nN = s[-1]\nH = s[0]\nK = str(len(s) - 2)\nprint(H+K+N)", "coverage": [">", ">", ">", ">", ">"]}, "2341": {"id": 2341, "code": "from math import factorial\nN = 1;M = 1\nif N <= 1:\n    combN = 0\nelse:\n    combN = factorial(N) // (factorial(N - 2) * factorial(2))\nif M <= 1:\n    combM = 0\nelse:\n    combM = factorial(M) // (factorial(M - 2) * factorial(2))\nprint(combN + combM)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "15681": {"id": 15681, "code": "X = 100000;Y = 1;Z = 1\nwidth = X - 2 * Z\nif width < Y:\n  print(0)\n  exit()\nnum = (width - Y) // ( Y + Z)\nprint(num + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "9064": {"id": 9064, "code": "A = 1\nB = 2\nC = 4\nD = 8\nE = 9\nQ = 15\nF=A-B\nG=A-C\nH=A-D\nI=A-E\nJ=B-C\nK=B-D\nL=B-E\nM=C-D\nN=C-E\nO=D-E\nP=max(abs(F),abs(G),abs(H),abs(I),abs(J),abs(K),abs(L),abs(M),abs(N),abs(O))\nif P<=Q:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8317": {"id": 8317, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nnow = k\nres = 1\nwhile now < n:\n    now += k-1\n    res += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15449": {"id": 15449, "code": "x = 12;y = 3;z = 1\nx -= z\ncount = 0\nwhile x >= y + z:\n    x -= y + z\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4255": {"id": 4255, "code": "Hs = 10;Ms = 0;He = 12;Me = 0;K = 120\nprint(str((He-Hs)*60+Me-Ms-K))", "coverage": [">", ">"]}, "18178": {"id": 18178, "code": "s = \"1700\"\na, b = s[:2], s[2:]\nif '01' <= a <= '12':\n    if '01' <= b <= '12':\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if '01' <= b <= '12':\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "18813": {"id": 18813, "code": "H = 2\nW = 100\nN = 200\nm = max(H, W)\nans = int((N - 1) / m) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8446": {"id": 8446, "code": "N = 1\nA = [[],[]]\nA = [[2], []]\nA = [[2], [3]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10903": {"id": 10903, "code": "S = \"level\"\nprint(\"Yes\" if ( S==S[::-1] and S[:int((len(S)-1)/2)]==S[:int((len(S)-1)/2)][::-1] ) else \"No\")", "coverage": [">", ">"]}, "18764": {"id": 18764, "code": "H = 14\nW = 12\nN = 112\nv = max(H, W)\nans = N // v\nif N%v != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "19008": {"id": 19008, "code": "n = 12\nif n<2 or n%2==1:\n  print(0)\nelse:\n  ans=0\n  now=10\n  while(now<=n):\n    ans+=n//now\n    now*=5\n  print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "5111": {"id": 5111, "code": "s = \"smiles\"\nl = len(s)\nprint(\"{}{}{}\".format(s[0], l - 2, s[l - 1]))", "coverage": [">", ">", ">"]}, "9554": {"id": 9554, "code": "s = \"2017/01/07\"\ns = s.replace(\"2017\",\"2018\")\nprint(s)", "coverage": [">", ">", ">"]}, "3739": {"id": 3739, "code": "X = 64146;Y = 123;Z = 456\nprint((X-(Y+2*Z)) // (Y+Z) + 1)", "coverage": [">", ">"]}, "19152": {"id": 19152, "code": "N = 12;a = 10;b = 0\nif N&1==0:\n    while a<=N:b+=N//a;a*=5\nprint(b)", "coverage": [">", ">", ">", ">"]}, "10872": {"id": 10872, "code": "S = \"level\"\nflag = 0\nfor i in range(0,len(S)//2):\n    if S[i] == S[-1-i]:\n        continue\n    else:\n        flag = 1\n        print(\"No\")\n        break\nif flag == 0:\n    S = S[:((len(S)-1)//2)]\n    for i in range(0,len(S)//2):\n        if S[i] == S[-1-i]:\n            continue\n        else:\n            flag = 1\n            print(\"No\")\n            break\nif flag == 0:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!"]}, "12745": {"id": 12745, "code": "N = \"6\"\nif N in ['7','5','3']:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "671": {"id": 671, "code": "K = 2\nif(7%K == 0):\n    print(1)\nelse:\n    mod = 7%K\n    for i in range(2, K+1):\n        if(mod * 10 + 7)%K == 0:\n            print(i)\n            break\n        mod = (mod * 10 + 7)%K\n    else:\n        print(-1)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", ">"]}, "8163": {"id": 8163, "code": "N = 3;K = 3\nalist = [1, 2, 3]\nans = 1\nN -= K\nwhile N > 0:\n    N -= K-1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "101": {"id": 101, "code": "s = ['a']\nk = 25\nls = list(\"abcdefghijklmnopqrstuvwxyz\")\nls.sort(reverse=True)\nls = [\"a\"] + ls[:-1]\nfor i in range(len(s)):\n    if i != len(s)-1:\n        if k >= ls.index(s[i]):\n            k -= ls.index(s[i])\n            s[i] = \"a\"\n        else:\n            continue\n    else:\n        k %= 26\n        s[-1] = ls[(ls.index(s[-1])-k)%26]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "15938": {"id": 15938, "code": "A = 12;B = 4\nprint(\"{}\".format(0 if (A - 2*B <= 0) else A - 2*B))", "coverage": [">", ">"]}, "17447": {"id": 17447, "code": "S = \"1700\"\nL = int(S[0:2])\nR = int(S[2:4])\nif 0 < L <= 12 and 0 < R <= 12:\n    print(\"AMBIGUOUS\")\nelif 0 < L <= 12:\n    print(\"MMYY\")\nelif 0 < R <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14091": {"id": 14091, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ndp = [[N, N] for i in range(N)]\ndp[0] = [1, 1]\nfor i, a in enumerate(A[1:], 1):\n  pre_a = A[i-1]\n  if pre_a < a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n  elif pre_a == a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\n  else:\n    dp[i][0] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\nprint(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "5890": {"id": 5890, "code": "N = 5\nprint(int(N / 2)) if N % 2 == 0 else print(N // 2 + 1)", "coverage": [">", ">"]}, "4341": {"id": 4341, "code": "a = [10, 0, 15, 0, 30]\nh=a[2]-a[0]\nm=a[3]-a[1]\nmt=h*60+m\nprint(mt-a[4])", "coverage": [">", ">", ">", ">", ">"]}, "13210": {"id": 13210, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S[0:5],S[6:13],S[14:19])", "coverage": [">", ">"]}, "1043": {"id": 1043, "code": "N = 111\nfor i in range(N,1000):\n    moji = str(i)\n    if (moji[0] == moji[1]) and (moji[1] == moji[2]):\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12579": {"id": 12579, "code": "A = \"1\";B = \"1\";K = \"1\"\nA, B, K = int(A), int(B), int(K)\nres = []\nfor i in range(A, 0, -1):\n  if A % i == 0 and B % i == 0:\n    res.append(i)\nprint(res[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14788": {"id": 14788, "code": "n = 3;p = 0\na = [1, 1, 1]\nif all([i%2 == 0 for i in a]):\n  if p == 1:\n    print(0)\n  else:\n    print(pow(2,n))\nelse:\n  print(pow(2,n-1))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "8791": {"id": 8791, "code": "N = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5860": {"id": 5860, "code": "N = 5\nif N % 2 == 1:\n    print(int(N/2 +1))\nelse:\n    print(int(N/2))", "coverage": [">", ">", ">", "!", "!"]}, "11726": {"id": 11726, "code": "x = [11, 16]\nx = [11, 17]\nif x[1] == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4037": {"id": 4037, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\na = 60*h2 + m2\nb = 60*h1 + m1\nprint(a-b-k)", "coverage": [">", ">", ">", ">"]}, "18147": {"id": 18147, "code": "S = \"0112\"\nS1, S2 = S[0:2], S[2:5]\nif (int(S1) >= 1 and int(S1) <=12) and (int(S2) >= 1 and int(S2) <=12):\n\tprint('AMBIGUOUS')\nelif int(S2) >= 1 and int(S2) <= 12:\n\tprint('YYMM')\nelif int(S1) >= 1 and int(S1) <=12:\n\tprint('MMYY')\nelse:\n\tprint('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8000": {"id": 8000, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nA_min = min(A)\nindex = A.index(A_min)\nans = 0\nleft = index\nright = N - 1 - index\nif left % (K - 1) != 0:\n    right -= K - 1 - left % (K - 1)\nelif right % (K - 1) != 0:\n    left -= K - 1 - right % (K - 1)\nans += math.ceil(left / (K - 1))\nans += math.ceil(right / (K - 1))   \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "16176": {"id": 16176, "code": "import bisect\nimport math\nN = 2\nAs = [100, 0]\nAs.sort()\na = As[-1]\nj = bisect.bisect_left(As, a/2)\nif j == 0 or a - As[j] > As[j-1]:\n  print(\"{} {}\".format(a, As[j]))\nelse:\n  print(\"{} {}\".format(a, As[j-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3151": {"id": 3151, "code": "s = \"35753\"\np = 999\nfor i in range(len(s) - 2 ):\n    j = s[i:i+3]\n    j = int(j)\n    if p > abs(753 - j):\n        p = abs(753 - j)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8773": {"id": 8773, "code": "N = 4\narray1 = [1, 1, 1, 1]\narray2 = [1, 1, 1, 1]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16825": {"id": 16825, "code": "a = \"D\";b = \"H\"\nresult = ''\nif(a == 'H' and b == 'H'):\n  result = 'H'\nelif(a == 'H' and b == 'D'):\n  result = 'D'\nelif(a == 'D' and b == 'H'):\n  result = 'D'\nelif(a == 'D' and b == 'D'):\n  result = 'H'\nprint(result)", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "14351": {"id": 14351, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = 0\nans = 1\ncnt = 0\nfor i in range(n-1):\n    if a[i+1] - a[i] > 0 and flag == -1 and cnt > 0:\n        flag = 1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] < 0 and flag == 1 and cnt > 0: \n        flag = -1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] == 0:\n        pass\n    elif cnt == 0 and a[i+1] - a[i] > 0:\n        flag = 1\n        cnt += 1\n    elif cnt == 0 and a[i+1] - a[i] < 0:\n        flag = -1\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "5996": {"id": 5996, "code": "i = 2\nprint(int(i / 2) + (i % 2))", "coverage": [">", ">"]}, "9045": {"id": 9045, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\na = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nli = [a,b,c,d,e]\nans = False\nfor i in range(5):\n    for j in range(i + 1, 5):\n        if li[j] - li[i] > k:\n            ans = True\n            break\nif ans:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8119": {"id": 8119, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\ni = a.index(1)\ns = n\nfor j in range(i-k+1, i+k):\n    if j < 0:\n        continue\n    elif j >= n:\n        continue\n    else:\n        l = j\n        u = (n-1-j)\n        t = (l+k-2) // (k-1) + (u+k-2) // (k-1)\n        s = min(s, t)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "511": {"id": 511, "code": "S = \"codefestival\"\nK = 100\nz = ord('z') + 1\nres = \"\"\nflg = False\nfor i,c in enumerate(S):\n    if c == 'a':\n        res += 'a'\n        continue\n    elif z - ord(c) <= K:\n        res += 'a'\n        K -= z-ord(c)\n    else:\n        res += chr(ord(c))\nres = res[:-1] + chr((ord(res[-1])-ord('a') + K) % 26 + ord('a'))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "485": {"id": 485, "code": "S = ['a']\nK = 25\nN = len(S)\nord_a = ord('a')\nT = [0]*N\nfor i in range(N):\n    s = S[i]\n    a = ord(s)\n    r = (ord_a + 26 - a) % 26\n    if r <= K:\n        K -= r\n        s = 'a'\n    T[i] = s\nif K > 0:\n    t = T[N - 1]\n    a = ord(t)\n    a = ord_a + (a - ord_a + K) % 26\n    T[N - 1] = chr(a)\nprint(''.join(T))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1194": {"id": 1194, "code": "n = 111\na = 111\nwhile a < n:\n    a += 111\nprint(a)", "coverage": [">", ">", ">", "!", ">"]}, "6672": {"id": 6672, "code": "h = 20;n = 3\na = [4, 5, 6]\nprint('Yes' if h-sum(a) <= 0 else 'No')", "coverage": [">", ">", ">"]}, "13961": {"id": 13961, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nsw = 0\ncount = 1\nfor i in range(n-1):\n    if sw == 1:\n        if a[i+1]<a[i]:\n            sw = 0\n            count += 1\n    elif sw == -1:\n        if a[i+1]>a[i]:\n            sw = 0\n            count += 1\n    else:\n        if a[i+1]>a[i]:\n            sw = 1\n        elif a[i]>a[i+1]:\n            sw = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "18237": {"id": 18237, "code": "H = 3\nW = 7\nN = 10\nX = 0\nif H <= W:\n  X = N // W\n  if N % W != 0:\n    X = X + 1\nelse :\n  X = N // H\n  if N % H != 0:\n    X = X + 1\nprint(X)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "991": {"id": 991, "code": "n = 750\na = [str(i+1)*3 for i in range(9)]\nfor i in a:\n    if n<=int(i):\n        print(int(i))\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "5542": {"id": 5542, "code": "import sys\nN = 6\nans = N // 2\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4723": {"id": 4723, "code": "s = \"internationalization\"\ncnt = 0\nfor i in range(1,len(s)-1):\n    cnt += 1\nprint(s[0]+str(cnt)+s[len(s)-1])", "coverage": [">", ">", ">", ">", ">"]}, "16292": {"id": 16292, "code": "N = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\nst_n = a[0]\nst_r = a[1]\nm = st_r*(st_n-st_r)\nfor r in range(2,N):\n    cn = a[r]*(st_n-a[r])\n    if m < cn:\n        st_r = a[r]\n        m = cn\nprint(st_n,st_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10420": {"id": 10420, "code": "a = 100;b = 50;k = 4\ncnt = 0\nfor i in range(min(a,b),0,-1):\n    if a%i == 0 and b%i == 0:\n        cnt += 1\n    if cnt == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10132": {"id": 10132, "code": "n = 8\ns = \"))))((((\"\nt = s\nwhile \"()\" in t:\n    t = t.replace(\"()\", \"\")\na = t.count(\")\"); b = t.count(\"(\")\nprint(\"(\" * a + s + \")\" * b)", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "4285": {"id": 4285, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\ntime1 = H1 * 60 + M1\ntime2 = H2 * 60 + M2\nprint(max(0, time2 - time1 - K))", "coverage": [">", ">", ">", ">"]}, "14279": {"id": 14279, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ncheck = 0\nbefore = a[0]\nfor i in a[1:]:\n    if i == before:\n        continue\n    if before > i:\n        if check == 0:\n            check = 1\n        elif check == -1:\n            ans += 1\n            check = 0\n    else:\n        if check == 0:\n            check = -1\n        elif check == 1:\n            ans += 1\n            check = 0\n    before = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17477": {"id": 17477, "code": "s = \"1700\"\nif ((int(s[0])==0 and 1<=int(s[1])<=9)  or (int(s[0]) == 1 and 0<=int(s[1])<=2)) and ((int(s[2])==0 and 1<=int(s[3])<=9)  or (int(s[2]) == 1 and 0<=int(s[3])<=2) ):\n  print(\"AMBIGUOUS\")\nelif (int(s[0])==0 and 1 <=int(s[1])<=9)  or (int(s[0]) == 1 and 0<=int(s[1])<=2):\n  print(\"MMYY\")\nelif (int(s[2])==0 and 1 <=int(s[3])<=9)  or (int(s[2]) == 1 and 0<=int(s[3])<=2):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5913": {"id": 5913, "code": "N = 100\nprint((N//2)+(N%2))", "coverage": [">", ">"]}, "18457": {"id": 18457, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nimport math\nh = 2\nw = 100\nn = 200\nans = min(math.ceil(n / h), math.ceil(n / w))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18097": {"id": 18097, "code": "s = 1700\na, b = s // 100, s % 100\nx = \"YY\" if a == 0 or a > 12 else \"MM\"\ny = \"YY\" if b == 0 or b > 12 else \"MM\"\nprint(x + y if x != y else \"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">"]}, "4174": {"id": 4174, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ns = h1 * 60 + m1\ne = h2 * 60 + m2\nprint(e - k - s)", "coverage": [">", ">", ">", ">"]}, "12357": {"id": 12357, "code": "s = \"akasaka\"\nn = len(s)\nif s[0:n] == s[::-1]:\n  if s[0:(n-1)//2] == s[(n+1)//2:n]:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "5989": {"id": 5989, "code": "N = 5\na = N // 2\nb = N % 2\nprint(a + b)", "coverage": [">", ">", ">", ">"]}, "2023": {"id": 2023, "code": "N = 100;A = 100;B = 100\nma = str(min(A,B))\nif A+B-N > 0:\n    mi = str(A + B - N)\nelse:\n    mi = str(0)\nprint(ma+' '+mi)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11522": {"id": 11522, "code": "youbi = \"SUN,MON,TUE,WED,THU,FRI,SAT\".split(\",\")\na = \"SUN\"\nprint(7 - youbi.index(a))", "coverage": [">", ">", ">"]}, "18281": {"id": 18281, "code": "h = 3\nw = 7\nn = 10\nprint((n+max(w,h) - 1) // max(w,h))", "coverage": [">", ">", ">", ">"]}, "9621": {"id": 9621, "code": "S = \"2017/01/31\"\nrep = '2018'\nans = rep + S[4:]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "944": {"id": 944, "code": "K = 101\nnum=7\nans=-1\nfor n in range(pow(10,7)):\n    if num%K==0:\n        ans=n+1\n        break\n    shou=num//K\n    num-=K*shou\n    num=int(str(num)+'7')\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13293": {"id": 13293, "code": "happy = \"haiku\";newyear = \"atcoder\";enjoy = \"tasks\"\nprint(happy,newyear,enjoy)", "coverage": [">", ">"]}, "17218": {"id": 17218, "code": "a = \"D\";b = \"H\"\nif (a=='H')and(b=='H'):\n    print('H')\nelif (a=='H')and(b=='D'):\n    print('D')\nelif (a=='D')and(b=='D'):\n    print('H')\nelif (a=='D')and(b=='H'):\n    print('D')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "17468": {"id": 17468, "code": "S = \"1700\"\ns1,s2=int(S[:2]),int(S[2:])\nif 1<=s1<=12 and 1<=s2<=12:print('AMBIGUOUS')\nelif 1<=s1<=12:print('MMYY')\nelif 1<=s2<=12:print('YYMM')\nelse:print('NA')", "coverage": [">", ">", ">", ">", ">", ">"]}, "19039": {"id": 19039, "code": "N = 12\nif N%2==1:\n  print(0)\nelse:\n  ans = 0\n  judge = 10\n  while True:\n    if judge > N:\n      break\n    else:\n      ans += N//judge\n      judge *= 5\n  print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "19244": {"id": 19244, "code": "n = 12\nif n%2==1:\n    print(0)\n    exit(0)\nk=n//2\nfrom math import floor\nans=0\ndeno=5\nwhile deno<=k:\n    ans+=k//deno\n    deno*=5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9601": {"id": 9601, "code": "S = \"2017/01/31\"\nprint(S[:3]+'8'+S[4:])", "coverage": [">", ">"]}, "5964": {"id": 5964, "code": "N = 100\nprint(max(N//2, (N+1)//2))", "coverage": [">", ">"]}, "17300": {"id": 17300, "code": "l = ['D', 'D']\nif (l[0]=='H' and l[1]=='H') or (l[0]=='D' and l[1]=='D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "18934": {"id": 18934, "code": "n = 12\nif n%2 == 1:\n    print(0)\n    exit()\npoint = 0\nnow = 10\nwhile now <= n:\n    point += n//now\n    now *= 5\nprint(point)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9411": {"id": 9411, "code": "d = \"2017/01/31\"\nprint('2018/01/' + d[8:])", "coverage": [">", ">"]}, "14235": {"id": 14235, "code": "n = 7\nnum_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif len(num_list)==1:\n  print(1)\nelse:\n  res = 1\n  flag = None\n  pre = num_list[0]\n  for i in num_list[1:]:\n    if pre > i and not flag:\n      flag = 'down'\n    elif pre < i and not flag:\n      flag = 'up'\n    elif (pre > i and flag=='up') or (pre < i and flag=='down'):\n      res += 1\n      flag = None\n    pre = i\n  print(res)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11259": {"id": 11259, "code": "SUN_N = 0\nMON_N = 1\nTUE_N = 2\nWED_N = 3\nTHU_N = 4\nFRI_N = 5\nSAT_N = 6\nS = \"SUN\"\nif S == 'SUN':\n    From_days = SUN_N\nelif S == 'MON':\n    From_days = MON_N\nelif S == 'TUE':\n    From_days = TUE_N\nelif S == 'WED':\n    From_days = WED_N\nelif S == 'THU':\n    From_days = THU_N\nelif S == 'FRI':\n    From_days = FRI_N\nelif S == 'SAT':\n    From_days = SAT_N\nelse:\n    From_days = -99\nTo_days = 7 - From_days\nprint(To_days)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "16891": {"id": 16891, "code": "s = ['D', 'H']\na=s[0]\nb=s[1]\nif (a=='H')^(b=='H'):\n    print('D')\nelse:\n    print('H')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "19365": {"id": 19365, "code": "n = 10\nprint(n*2 if n%2>0 else n)", "coverage": [">", ">"]}, "17487": {"id": 17487, "code": "S = \"1905\"\nx=int(S[:2])\ny=int(S[2:])\nif 0<x<13 and 0<y<13:print(\"AMBIGUOUS\")\nelif 0<x<13:print(\"MMYY\")\nelif 0<y<13:print(\"YYMM\")\nelse:print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "17486": {"id": 17486, "code": "S = \"1700\"\na = S[0:2]\nb = S[2:4]\nA = int(a)\nB = int(b)\nif A>=1 and A <=12:\n  if B>= 1 and B <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if B>= 1 and B<= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12451": {"id": 12451, "code": "S = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nN = len(S)\nif S == S[::-1] and S[:(N - 1) // 2] == S[:(N - 1) // 2][::-1] and S[(N - 1) // 2 + 1:] == S[(N - 1) // 2 + 1:][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "1464": {"id": 1464, "code": "N = 750\nif N%111==0:\n    print(N)\nelse:   \n    A=(N//111+1)*111\n    print(A)", "coverage": [">", ">", "!", "!", ">", ">"]}, "11474": {"id": 11474, "code": "wd = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SAT\"\nprint(str(7 - wd.index(s) % 7))", "coverage": [">", ">", ">"]}, "12270": {"id": 12270, "code": "s = \"atcoder\"\nsf = s[:int((len(s)-1)/2)]\nsl = s[int((len(s)+3)/2)-1:]\nif s == s[::-1] and sf == sf[::-1] and sl == sl[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10160": {"id": 10160, "code": "N = 3\nS = \"())\"\nleft=0\ncnt1=0\ncnt2=0\nfor i in range(N):\n    if S[i]==\"(\":\n        cnt1+=1\n    elif S[i]==\")\":\n        cnt2+=1\n        if i<N-2 and S[i+1]==\"(\":\n            if cnt2>=cnt1+left:\n                left=cnt2-cnt1\nres=S.count(\"(\")+left-S.count(\")\")\nif res>=0:\n    print(\"(\"*left+S+\")\"*res)\nelse:\n    print(\"(\"*(left+abs(res))+S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "16039": {"id": 16039, "code": "from sys import stdin\nA = 20;B = 30\nif A > 2*B:\n    print(A - 2*B)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "391": {"id": 391, "code": "s = \"xyz\"\nn = len(s)\nc = [ord(s[i]) for i in range(n)]\nk = 4\nind = 0\nwhile k > 0:\n    if ind == n:\n        break\n    if c[ind] == 97:\n        ind += 1\n        continue\n    elif 123 - c[ind] <= k:\n        k -= 123-c[ind]\n        c[ind] = 97\n        ind += 1\n    elif 123 - c[ind] > k:\n        ind += 1\n        continue\nif k > 0:\n    k %= 26\n    c[-1] += k\n    if c[-1] >= 123:\n        c[-1] = 97 + (123-c[-1])\nprint(''.join([chr(c[i]) for i in range(n)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "5359": {"id": 5359, "code": "from math import ceil\nn = 5\nprint(ceil(n/2))", "coverage": [">", ">", ">"]}, "4809": {"id": 4809, "code": "s = \"xyz\"\nmojisuu=len(s)\ntyuukanmojisuu=len(s)-2\ns_list=list(s)\nprint(\"{}{}{}\".format(s_list[0],tyuukanmojisuu,s_list[mojisuu-1]))", "coverage": [">", ">", ">", ">", ">"]}, "14400": {"id": 14400, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nflg = 0\nans=1\nfor i in range(1,n):\n  tmp = a[i-1]\n  if a[i] == tmp:\n    pass\n  elif a[i] > tmp:\n    if flg == 1:\n      pass\n    elif flg == -1:\n      ans += 1\n      flg = 0\n    else:\n      flg = 1\n  else:\n    if flg == -1:\n      pass\n    elif flg == 1:\n      ans += 1\n      flg = 0\n    else:\n      flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "9927": {"id": 9927, "code": "from collections import deque\nn = 3\ns=deque(\"())\")\nleft=0\nright=0\nfor i in range(n):\n  if s[i]==\"(\":\n    left+=1\n  else:\n    if left>0:\n      left-=1\n    else:\n      right+=1\nfor _ in range(left):\n    s.append(\")\")\nfor _ in range(right):\n    s.appendleft(\"(\")\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "8232": {"id": 8232, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 1 if n//k > 0 else 0 \nmod = (n-k)//(k-1) + min((n-k)%(k-1), 1)\nprint(ans + mod)", "coverage": [">", ">", ">", ">", ">"]}, "11757": {"id": 11757, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6106": {"id": 6106, "code": "num = 5\nif num % 2 == 0: \n    print(int(num/2))\nelse:\n    print(int(num/2+1))", "coverage": [">", ">", "!", "!", ">"]}, "1109": {"id": 1109, "code": "n = \"750\"\nk = int(n) % 111\nif k==0:\n    print(n)\nelse:\n    if n[0]>n[1] or (n[0]==n[1] and n[1]>n[2]):\n        print(n[0]*3)\n    else:\n        print((str(int(n[0])+1))*3)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "17049": {"id": 17049, "code": "s = ['H', 'H']\nif s[0] == s[1]:print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", "!"]}, "7814": {"id": 7814, "code": "n = 3;k = 3\nAs = [1, 2, 3]\nidx = As.index(min(As))\nleft = idx\nn_l = (left + k - 2) // (k - 1)\nright = n - ((n_l) * (k-1)) - 1\nn_r = (right + k - 2) // (k - 1)\nprint(n_l + n_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10554": {"id": 10554, "code": "A = 100;B = 50;K = 4\nA,B = min(A,B),max(A,B)\ncount = 0\nfor i in range(A,0,-1):\n  if A%i==0 and B%i==0:\n    count += 1\n  if count == K:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15379": {"id": 15379, "code": "x = 13;y = 3;z = 1\nans=0\nfor i in range(x):\n    if x>=i*(y+z)+z and i>ans:\n        ans=i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13740": {"id": 13740, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndata = 60*(h2-h1)+1*(m2-m1)-k\nprint(data)", "coverage": [">", ">", ">"]}, "18537": {"id": 18537, "code": "H = 14\nW = 12\nN = 112\nans = N // max(H, W)\nif N % max(H, W) > 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "13830": {"id": 13830, "code": "n = 7\nnum_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ncnt_list = [0] * n\na = int()\nfor i in range(1,n):\n    if num_list[i-1] > num_list[i]:\n        cnt_list[i] = -1\n    if num_list[i-1] < num_list[i]:\n        cnt_list[i] = 1\nwhile 1 in cnt_list and -1 in cnt_list:\n    del cnt_list[:max(cnt_list.index(1),cnt_list.index(-1))]\n    cnt_list[0] = 0\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18241": {"id": 18241, "code": "H = 14\nW = 12\nN = 112\nK=H\nif K<W: K=W\nsum = 0\nans= 0\nfor i in range(1,K+1):\n  if sum < N:\n    sum += K\n    ans = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2692": {"id": 2692, "code": "n = \"1479\"\nprint('YNEOS'[n != '1479'::2])", "coverage": [">", ">"]}, "1285": {"id": 1285, "code": "n = 111\nprint(-(-n//111)*111)", "coverage": [">", ">"]}, "2081": {"id": 2081, "code": "n = 10;a = 7;b = 5\nand_=min(a,b)\nor_=max(0, a+b-n)\nprint(and_, or_)", "coverage": [">", ">", ">", ">"]}, "19287": {"id": 19287, "code": "n = 5\nans=0\nif n%2==0:\n    for i in range(1,30):\n        m=n//((5**i)*2)\n        ans+=m\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "3286": {"id": 3286, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 20;B = 15\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "15774": {"id": 15774, "code": "X = 12;Y = 3;Z = 1\nans=0\nwhile ans*Y+(ans+1)*Z<=X:\n    ans+=1\nprint(ans-1)", "coverage": [">", ">", ">", ">", ">"]}, "6907": {"id": 6907, "code": "h = 10;n = 3\na = [4, 5, 6]\nresult = sum(a)\nif h - result <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "18226": {"id": 18226, "code": "h = 14\nw = 12\nn = 112\na = 0\nb = 0\nc = 0\nd = 0\nfor i in range(h):\n  a += w\n  b += 1\n  if a >= n:\n    break\nfor i in range(w):\n  c += h\n  d += 1\n  if c >= n:\n    break\nif b > d:\n  print(d)\nelse:\n  print(b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "17778": {"id": 17778, "code": "S = \"0112\"\nans = 'NA'\nL = int(S[ : 2])\nR = int(S[2 :])\nif 13 > L > 0 and 13 > R > 0:\n    ans = 'AMBIGUOUS'\nelif 13 > R > 0:\n    ans = 'YYMM'\nelif  13 > L > 0:\n    ans = 'MMYY'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "2327": {"id": 2327, "code": "n = 10;a = 7;b = 5\nmax_read=min(a,b)\nif(a+b-n>0):\n\tmin_read=a+b-n\nelse:\n    min_read=0\nprint(str(max_read)+\" \"+str(min_read))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3233": {"id": 3233, "code": "icase=0\nif icase==0:\n    a = 20;b = 30\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "2091": {"id": 2091, "code": "from sys import stdin\nN = 100;A = 100;B = 100\nMAX = min(A,B)\nMIN = max(A+B-N,0)\nprint(MAX,MIN)", "coverage": [">", ">", ">", ">", ">"]}, "18238": {"id": 18238, "code": "H = 14\nW = 12\nN = 112\nX = 0\nif H <= W:\n  X = N // W\n  if N % W != 0:\n    X = X + 1\nelse :\n  X = N // H\n  if N % H != 0:\n    X = X + 1\nprint(X)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">"]}, "9": {"id": 9, "code": "s = \"a\"\nx = 25\ntank = []\nfor c in list(s):\n    if c=='a':\n        tank.append(0)\n    else:\n        tank.append(ord('z') + 1 - ord(c))\nres = ''\nfor i in range(len(tank)):\n    if tank[i] == 0:\n        res += s[i]\n    elif tank[i] <= x:\n        x -= tank[i]\n        tank[i] = 0\n        res += 'a'\n    else:\n        res += s[i]\nc = res[-1]\nx %= 26\nif ord(c)+x <= ord('z'):\n    res = res[:-1] + chr(ord(c)+x)\nelse:\n    res = res[:-1] + chr(ord(c)+x-ord('z')+ord('a')-1)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "15052": {"id": 15052, "code": "N = 3;P = 0\nA = [1, 1, 1]\nC = [0,0]\nfor i in range(N):\n    if A[i]%2==0:\n        C[0] += 1\n    else:\n        C[1] += 1\nif C[1]==0 and P==1:\n    print(0)\nelif C[1]==0 and P==0:\n    print(2**C[0])\nelse:\n    print((2**C[0])*(2**(C[1]-1)))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", "!", ">"]}, "7239": {"id": 7239, "code": "H = 10;N = 3\na = [4, 5, 6]\na1=sum(a)\nif(a1>=H):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11042": {"id": 11042, "code": "S = \"level\"\nflag=0\nif S==S[::-1]:\n  s = S[:(len(S)-1)//2]\n  if s==s[::-1]:\n    s2 = S[(len(S)+3)//2-1:]\n    if s2==s2[::-1]:\n      flag=1\nif flag:print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "13823": {"id": 13823, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n    elif(flag == 1 and A[i] < cur):\n        flag = -1\n        ans += 1\n    elif(flag == 0 and A[i] > cur):\n        flag = -1\n        ans += 1\n    cur = A[i]\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "15259": {"id": 15259, "code": "x = 64146;y = 123;z = 456\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "3148": {"id": 3148, "code": "S = \"35753\";m = 10000\nfor i in range(len(S)-2):m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">"]}, "3521": {"id": 3521, "code": "a = 20;b = 15\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "15432": {"id": 15432, "code": "x = 12;y = 3;z = 1\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "16465": {"id": 16465, "code": "_ = int(\"2\")\na = [0, 100]\nnum0, num1, val = a[-1], 0, float('inf')\nfor i in a[:-1]:\n    val0 = abs(i-num0/2)\n    if val0 < val:\n        num1 = i\n        val = val0\nprint(num0, num1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8375": {"id": 8375, "code": "n = 1\nlst1 = [2]\nlst2 = [3]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3420": {"id": 3420, "code": "a = 20;b = 30\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13846": {"id": 13846, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nfirst = True\nincreasing = True\nfor i in range(1, n):\n    if (first):\n        if (a[i] > a[i-1]):\n            first = False\n            increasing = True\n        elif (a[i] < a[i-1]):\n            first = False\n            increasing = False\n    else:\n        if (a[i] > a[i-1]) and (increasing == False):\n            cnt += 1\n            first = True\n        elif (a[i] < a[i-1]) and (increasing == True):\n            cnt += 1\n            first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "220": {"id": 220, "code": "S = [24, 12, 23, 22, 21, 22, 8, 7, 18, 5, 0, 15]\nK = 100\nfor i in range(len(S)):\n  if S[i] > K: continue\n  K -= S[i]\n  S[i] = 0\nS[-1] = (S[-1] - K) % 26\nprint(*[chr(ord(\"z\") - (s-1) % 26) for s in S], sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3770": {"id": 3770, "code": "x = 100000;y = 1;z = 1\nx-=z\nprint(int(x/(y+z)))", "coverage": [">", ">", ">"]}, "9298": {"id": 9298, "code": "s = \"2017/01/07\"\nprint(s[:3] + \"8\" + s[4:])", "coverage": [">", ">"]}, "11543": {"id": 11543, "code": "A = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nP = \"SAT\"\nprint(7-A.index(P))", "coverage": [">", ">", ">"]}, "15444": {"id": 15444, "code": "X = 12;Y = 3;Z = 1\nans = (((X-Z)//(Y+Z)))\nprint(ans)", "coverage": [">", ">", ">"]}, "18649": {"id": 18649, "code": "import math\nH = 2\nW = 100\nN = 200\nans = max([H,W])\nfa = N/ans\nprint(math.ceil(fa))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10270": {"id": 10270, "code": "N = 8\nS = [')', ')', ')', ')', '(', '(', '(', '(']\nf = 0\nb = 0\ncount = 0\nfor i in range(N - 1, -1, -1):\n    if S[i] == '(':\n        if count > 0:\n            count -= 1\n        else:\n            b += 1\n    else:\n        count += 1\nprint('(' * count, end='')\nprint(*S, sep='', end='')\nprint(')' * b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", "!", "!"]}, "17582": {"id": 17582, "code": "S = \"1700\"\ns=list(S)\nleft=int(s[0])*10+int(s[1])\nright=int(s[2])*10+int(s[3])\nif 1<=left<=12:\n    if 1<=right<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=right<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "6635": {"id": 6635, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nres = 0\nfor i in range(n):\n    index1 = bisect.bisect_left(a, b[i])\n    index2 = bisect.bisect_right(c, b[i])\n    res += index1 * (n - index2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6363": {"id": 6363, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ns = 0\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nia = -1\nic = -1\nfor b in B:\n  while True:\n    if ia == N-1 or A[ia+1]>=b: \n      break\n    ia += 1\n  while True:\n    if ic == N-1 or C[ic+1]>b:\n      break\n    ic += 1\n  s += (ia+1)*(N-ic-1)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "9815": {"id": 9815, "code": "s = \"))))((((\"\nt=0\nfor c in s:\n  if c=='(': t+=1\n  else: t-=1\n  if t<0: s='('+s; t+=1\nprint(s+')'*t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2907": {"id": 2907, "code": "a = \"1111111111\"\nans = 10000\nfor i in range(len(a)-2):\n  ans = min(abs(753-int(a[i:i+3])),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "817": {"id": 817, "code": "k = 101\na=7\ncnt=1\nwhile cnt<=k+2:\n    if a%k==0:\n        print(cnt)\n        flag=True\n        break\n    else:\n        flag=False\n        cnt+=1\n        a=(10*a+7)%k\nif not flag:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!"]}, "16765": {"id": 16765, "code": "S = ['D', 'H']\nif S[0]==S[1]:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "14490": {"id": 14490, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N<=2:\n    ans=1\nelse:\n    ans=1\n    count=(A[0]<A[1])-(A[0]>A[1])\n    i=2\n    while i<N:\n        if count*((A[i-1]<A[i])-(A[i-1]>A[i]))<0:\n            ans+=1\n            count=0\n        else:\n            if count==0:\n                count=(A[i-1]<A[i])-(A[i-1]>A[i])\n        i+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3240": {"id": 3240, "code": "A = 12;B = 4\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "15394": {"id": 15394, "code": "import math\nx = 64146;y = 123;z = 456\nprint(math.floor((x-z)/(y+z)))", "coverage": [">", ">", ">"]}, "15364": {"id": 15364, "code": "import math\nx = 13;y = 3;z = 1\nprint(int(math.floor((x - z) / (y + z))))", "coverage": [">", ">", ">"]}, "173": {"id": 173, "code": "from bisect import *\nS = ['x', 'y', 'z']\nK = 4\nalp = list(\"abcdefghijklmnopqrstuvwxyz\")\nfor i in range(len(S)):\n  b = bisect_left(alp,S[i])\n  if i == len(S)-1:\n    S[i] = alp[(b+K)%26]\n  elif b == 0:\n    continue\n  elif 26 - b <= K:\n    K -= (26 - b)\n    S[i] = \"a\"\n  if K == 0:\n    break\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">"]}, "7763": {"id": 7763, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint((N+K-3)//(K-1))", "coverage": [">", ">", ">"]}, "4370": {"id": 4370, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;t = 120\ns1 = h1 * 60 + m1\ns2 = h2 * 60 + m2\nans = s2 - s1 - t\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11957": {"id": 11957, "code": "m = 11;d = 30\nm2 = 12;d2 = 1\nprint(1 if m != m2 else 0)", "coverage": [">", ">", ">"]}, "10867": {"id": 10867, "code": "S = \"atcoder\"\ns1 = S[0:int((len(S)-1)/2)]\ns2 = S[int((len(S)/2))+1:len(S)+1]\nif S == S[::-1] and s1 == s1[::-1] and s2 == s2[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18851": {"id": 18851, "code": "import math\nh = 14\nw = 12\nn = 112\nif h < w:\n    h = w\nprint(math.ceil(n / h))", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "14254": {"id": 14254, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni=0\na=1\nt=0\nwhile i<N-1:\n    if A[i]<A[i+1]:\n        if t==-1:\n            a+=1\n            t=0\n        elif not t:\n            t=1\n    elif A[i]>A[i+1]:\n        if t==1:\n            a+=1\n            t=0\n        elif not t:\n            t=-1\n    i+=1\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6423": {"id": 6423, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nbn = [0]*n\nj = 0\nfor i in range(n):\n  bi = b[i]\n  while(j<n):\n    if bi < c[j]:\n      bn[i] = n-j\n      break\n    j += 1\nbnt = sum(bn)\nbs = 0\nj = 0\nans = 0\nfor i in range(n):\n  ai = a[i]\n  while(j<n):\n    if ai < b[j]:\n      ans += bnt - bs\n      break\n    bs += bn[j]\n    j += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4498": {"id": 4498, "code": "s = \"internationalization\"\nprint(s[0], len(s) - 2, s[-1], sep=\"\")", "coverage": [">", ">"]}, "4908": {"id": 4908, "code": "S = \"xyz\"\nT = len(S)-2\nprint(S[0]+ str(T) + S[-1])", "coverage": [">", ">", ">"]}, "13062": {"id": 13062, "code": "a = 5\nif a==7:\n  print(\"YES\")\nif a>7:\n  print(\"NO\")\nif a<7:\n  if a>3:\n    if a==5:\n      print(\"YES\")\nif a<7:\n  if a>3:\n    if a!=5:\n      print(\"NO\")\nif a==3:\n  print(\"YES\")\nif a<3:\n  print(\"NO\")", "coverage": [">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!"]}, "8603": {"id": 8603, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12977": {"id": 12977, "code": "X = 6\nif X==7 or X==5 or X==3:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "2188": {"id": 2188, "code": "N = 10;A = 3;B = 5\nans1 = min(A, B)\nans2 = max(A + B - N, 0)\nprint(ans1, ans2)", "coverage": [">", ">", ">", ">"]}, "9676": {"id": 9676, "code": "n = 6\ns = \")))())\"\nd=[0]*n\ncnt=0\nfor i in range(n):\n    if s[i]=='(':\n        cnt+=1\n    else:\n        cnt-=1\n    d[i]=cnt\nx=min(d)\ns='('*(-x) + s\nd2=[0]*(len(s))\ncnt=0\nfor i in range(len(s)):\n    if s[i]=='(':\n        cnt+=1\n    else:\n        cnt-=1\n    d2[i]=cnt\ns=s+')'*d2[-1]\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9051": {"id": 9051, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif e-a<=k:print(\"Yay!\")\nelse:print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17871": {"id": 17871, "code": "S = \"1905\"\nmonth_list = [\"01\",\"02\",\"03\",\"04\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif S[0:2] in month_list:\n    if S[2:4] in month_list:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if S[2:4] in month_list:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "15949": {"id": 15949, "code": "n = [20, 30]\nprint(max(n[0] - 2*n[1], 0))", "coverage": [">", ">"]}, "16079": {"id": 16079, "code": "a = [12, 4]\nx = a[1]*2\nif x>=a[0]:\n    print(0)\nelse:\n    print(a[0]-x)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18927": {"id": 18927, "code": "n = 5\nif n%2 != 0:\n    print(0)\nelse:\n    ans = 0\n    dum = 5\n    while n > dum:\n        ans += (n//dum)//2\n        dum = dum*5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "7670": {"id": 7670, "code": "hp = 20;n = 3\narr = [4, 5, 6]\nif sum(arr) >= hp: print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">"]}, "14281": {"id": 14281, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\np = 0\nm = 0\npre = A[0]\nfor a in A[1:]:\n    if a > pre:\n        p = 1\n    elif a < pre:\n        m = 1\n    if p == 1 and m == 1:\n        ans += 1\n        p = 0\n        m = 0\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4878": {"id": 4878, "code": "a = ['x', 'y', 'z']\nprint(a[0]+str(len(a)-2)+a[-1])", "coverage": [">", ">"]}, "4788": {"id": 4788, "code": "s = \"xyz\"\ns1 = s[0]\ns2 = s[-1]\nans = s1 + str(len(s)-2) + s2\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "12483": {"id": 12483, "code": "A = 1;B = 1;K = 1\ncheck=list()\nfor i in range(1,min(A,B)+1):\n  if A%i==B%i==0:\n    check.append(i)\nprint(check[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "2393": {"id": 2393, "code": "n = 0;m = 3\nif n<=1:\n    n_ans=0\nelse:\n    n_ans=n*(n-1)/2\nif m<=1:\n    m_ans=0\nelse:\n    m_ans=m*(m-1)/2\nprint(int(n_ans+m_ans))", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]}, "1554": {"id": 1554, "code": "n = 750\nfor i in range(1,10):\n    if int(str(i)*3) >= n:\n        print(str(i)*3)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "3365": {"id": 3365, "code": "a = 20;b = 15\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "5174": {"id": 5174, "code": "s = \"smiles\"\nh = s[0]\nt = s[-1]\nn = str(len(s[1:-1]))\nprint(h+n+t)", "coverage": [">", ">", ">", ">", ">"]}, "5762": {"id": 5762, "code": "N = 2\nif N%2==0: print(N//2)\nelse: print(N//2+1)", "coverage": [">", ">", "!"]}, "15198": {"id": 15198, "code": "import io\nn = 12;m = 3;k = 1\nprint((n-k)//(m+k))", "coverage": [">", ">", ">"]}, "2935": {"id": 2935, "code": "S = \"35753\"\nm = 753 \nfor i in range(len(S)-2):\n    tmp=(S[i:i+3])\n    m=min(abs(753-int(tmp)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15871": {"id": 15871, "code": "x = 100000;y = 1;z = 1\ntmp=x//(y+z)\nif tmp*(y+z)+z>x:\n    tmp-=1\nprint(tmp)", "coverage": [">", ">", ">", ">", ">"]}, "18229": {"id": 18229, "code": "h = 14\nw = 12\nn = 112\nif h < w:\n    if n % w == 0:\n        print(n // w)\n    else:\n        print(n // w + 1)\nelse:\n    if n % h == 0: \n        print(n // h)\n    else:\n        print(n // h + 1)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "15352": {"id": 15352, "code": "X = 100000;Y = 1;Z = 1\nprint((X-Z)//(Z+Y))", "coverage": [">", ">"]}, "3129": {"id": 3129, "code": "S = \"1234567876\"\nans = 999\nfor i in range(len(S)-2):\n    num = int(S[i:i+3])\n    if abs(num - 753) < ans:\n        ans = abs(num-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7882": {"id": 7882, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nprint((n-2)//(k-1)+1)", "coverage": [">", ">", ">"]}, "6191": {"id": 6191, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor b in B:\n    i = bisect.bisect_left(A,b)\n    j = bisect.bisect_right(C,b)\n    count += i * (N - j)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "445": {"id": 445, "code": "z=ord('z')\na=ord('a')\nss = \"a\"\ns=list(ss)\nk = 25\nl=len(s)\nfor i in range(l):\n    if (z-ord(s[i])+1<=k)and(s[i]!='a'):\n        k-=z-ord(s[i])+1\n        s[i]='a'\nif k>0:\n    last=(ord(s[-1])+k-a)%26+a\n    s[-1]=chr(last)\nans=''.join(s)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "4235": {"id": 4235, "code": "h = [10, 0, 12, 0, 120]\nif h[1] < h[3]:\n    print((h[2]-h[0])*60+h[3]-h[1]-h[4])\nelse:\n    print((h[2]-h[0]-1)*60+60-h[1]+h[3]-h[4])", "coverage": [">", ">", "!", "!", ">"]}, "7513": {"id": 7513, "code": "H = 10;N = 3\nA = [4, 5, 6]\nanswer = sum(A)\nif answer >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7889": {"id": 7889, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 1\nref = K\nwhile ref < N:\n    ans += 1\n    ref += K-1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13355": {"id": 13355, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint('%s %s %s'%(a,b,c))", "coverage": [">", ">"]}, "13278": {"id": 13278, "code": "s = \"haiku,atcoder,tasks\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">"]}, "606": {"id": 606, "code": "s = \"xyz\"\nk = 4\nn = len(s)\nans = []\nfor i in range(n):\n    t = (ord('z') - ord(s[i]) + 1) % 26\n    if k - t >= 0:\n        ans.append('a')\n        k -= t\n    else:\n        ans.append(s[i])\nif k > 0:\n    k %= 26\n    ans[-1] = chr(ord(ans[-1]) + k)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "13683": {"id": 13683, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nm1 += h1 * 60\nm2 += h2 * 60\nprint(m2 - m1 - k)", "coverage": [">", ">", ">", ">"]}, "6466": {"id": 6466, "code": "import bisect as bi\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nans=0\nfor i in b:\n  ans+=bi.bisect_left(a,i)*(N-bi.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14958": {"id": 14958, "code": "import math\nn = 2;p = 0\na = [1, 3]\nzero_count = 0\none_count = 0\nfor num in a:\n    if num % 2 == 0:\n        zero_count += 1\n    else:\n        one_count += 1\ncoef = 2 ** zero_count\nans = 0\nfor i in range(one_count + 1):\n    if i % 2 != p:\n        continue\n    ans += math.factorial(one_count) // math.factorial(one_count - i) // math.factorial(i)\nprint(ans * coef)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9893": {"id": 9893, "code": "n = 3\ns = \"())\"\nc = 0\nfrom collections import deque\nres = deque([])\nfor i in range(n):\n    if s[i] =='(':\n        c += 1\n    else:\n        c -= 1\n    if c < 0:\n        res.appendleft('(')\n        c = 0\n    res.append(s[i])\nif c > 0:\n    res.append(')'*c)\nprint(''.join(list(res)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1545": {"id": 1545, "code": "n = 112\nwhile True:\n    if str(n)[0]==str(n)[1]==str(n)[2]:\n        print(n)\n        break\n    n+=1", "coverage": [">", ">", ">", ">", ">", ">"]}, "1634": {"id": 1634, "code": "n = 10;a = 3;b = 5\nmaxint = 0\nminInt = 0\nif a <= b:\n  maxInt = a\n  minInt = a - (n-b)\nelse:\n  maxInt = b\n  minInt = b - (n-a)\nif a +b < n :\n    minInt = 0\nprint(maxInt, minInt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "5044": {"id": 5044, "code": "S = \"internationalization\"\nA=str(len(S)-2)\nprint(S[0]+A+S[len(S)-1])", "coverage": [">", ">", ">"]}, "1343": {"id": 1343, "code": "n = 112\nif n%111==0:\n  print(n)\nelse:\n  print(111*((n+110)//111))", "coverage": [">", ">", "!", "!", ">"]}, "1450": {"id": 1450, "code": "N = 111\nfor i in range(N, 1000):\n    if str(i)[0] == str(i)[1] == str(i)[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "4110": {"id": 4110, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nm1 += h1 * 60\nm2 += h2 * 60\nm = 0\nif m1 == m2:\n  m = 24 * 60\nelif m1 < m2:\n  m = m2 - m1\nelse:\n  m = 24 * 60 - (m1 - m2)\nprint(m - k)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "7646": {"id": 7646, "code": "h = 20;n = 3\na = [4, 5, 6]\nfor i in range(n):\n    h -= a[i]\nprint(\"Yes\" if h <=0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "12115": {"id": 12115, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint (1) if d2 == 1 else print (0)", "coverage": [">", ">", ">"]}, "15100": {"id": 15100, "code": "import math\nN = 1;P = 1\nA = [50]\nevenL = []\noddL = []\nfor i in range(N):\n    if (A[i] % 2 == 0):\n        evenL.append(A[i])\n    else:\n        oddL.append(A[i])\neven = len(evenL)\nodd = len(oddL)\nsum_odd = 0\nnumL = []\nfor i in range(odd):\n    if ((i + 1) % 2 == 1):\n        numL.append(i + 1)\nfor i in numL:\n    sum_odd += (math.factorial(odd) //\n                math.factorial(odd - i) // math.factorial(i))\nnumevenL = []\nsum_even = 0\nfor i in range(odd):\n    if ((i + 1) % 2 == 0):\n        numevenL.append(i + 1)\nfor i in numevenL:\n    sum_even += ((math.factorial(odd) //\n                  math.factorial(odd - i) // math.factorial(i)))\nif (P % 2 == 1):\n    print(2 ** N - ((sum_even + 1) * (2 ** even)))\nelse:\n    print((sum_even + 1) * (2 ** even))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", "!", "!"]}, "11769": {"id": 11769, "code": "a = \"11\";b = \"30\"\nx = \"12\";y = \"1\"\nif a == x:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2734": {"id": 2734, "code": "n = 1;a = 2;b = 9;c = 1\nans='NO'\nif n==1 or a==1 or b==1 or c==1:\n    if n==9 or a==9 or b==9 or c==9:\n        if n==7 or a==7 or b==7 or c==7:\n            if n==4 or a==4 or b==4 or c==4:\n                ans='YES'\nprint(ans)                ", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7538": {"id": 7538, "code": "h = 20;n = 3\na = [4, 5, 6]\ngokei=0\nans=\"No\"\nfor i in range(n):\n    gokei+=a[i]\n    if gokei>=h:\n        ans=\"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "18409": {"id": 18409, "code": "import math\nh = 2\nw = 100\nn = 200\nans = 0\nif h < w:\n    ans = math.ceil(n/w)\nelse:\n    ans = math.ceil(n/h)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4790": {"id": 4790, "code": "import sys\ninput = sys.stdin.readline\nS = ['s', 'm', 'i', 'l', 'e']\nprint(S[0] + str(len(S) - 2) + S[-1])", "coverage": [">", ">", ">", ">"]}, "4379": {"id": 4379, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nduration_min = (H2-H1) * 60 + (M2 - M1)\nstart_duration_min = duration_min - K\nif start_duration_min > 0:\n\tprint(start_duration_min)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "18261": {"id": 18261, "code": "H = 14;W = 12;N = 112\nHW=[H,W][H<W]\nNdivHW=N/HW\nNdivHW=int(NdivHW)+([0, 1][NdivHW%1>0])\nprint(NdivHW)", "coverage": [">", ">", ">", ">", ">"]}, "6071": {"id": 6071, "code": "N = 2\namari = N % 2\ncount = int( N // 2 )\nprint( count + amari )", "coverage": [">", ">", ">", ">"]}, "18308": {"id": 18308, "code": "h = 3\nw = 7\nn = 10\nans = n // max(h,w) if n % max(h,w) == 0 else n // max(h,w) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "8946": {"id": 8946, "code": "N = 1\nA1 = [2]\nA2 = [3]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "11374": {"id": 11374, "code": "list = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = \"SAT\"\ni = list.index(s)\nanswer = 7 - i\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "718": {"id": 718, "code": "K = 101\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\nelse:\n    x = 7 % K\n    for i in range(1, K + 1):\n        if x == 0:\n            print(i)\n            break\n        x = (x * 10 + 7) % K", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "650": {"id": 650, "code": "ans = -1\na = 0\nK = 2\nif K % 2 == 0:\n    ans = -1\nelif K % 5 == 0:\n    ans = -1\nelse:\n    for i in range(0, K):\n        a = (10 * a + 7) % K\n        if a == 0:\n            ans = i + 1\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "5332": {"id": 5332, "code": "n = 5\nans = n // 2\nif n % 2 != 0: ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1533": {"id": 1533, "code": "N = 112\nfor i in range(N,1000):\n    if i in [111,222,333,444,555,666,777,888,999]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "6767": {"id": 6767, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nsum_A = sum(A)\nif H <= sum_A:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "2751": {"id": 2751, "code": "if sorted(map(int, \"4 9 0 8\".split())) == [1, 4, 7, 9]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", "!", "!", ">"]}, "17112": {"id": 17112, "code": "a = \"H\";b = \"H\"\nif a == \"H\" and b == \"H\" or a == \"D\" and b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "10016": {"id": 10016, "code": "from collections import deque\nN = 6\nS = \")))())\"\nreserveL = deque()\nout = deque()\nq = deque()\nfor s in S:\n    if s == \"(\":\n        reserveL.append(s)\n        out.append(\"(\")\n    else:\n        if len(reserveL) == 0:\n            out.appendleft(\"(\")\n            out.append(\")\")\n        else:\n            out.append(\")\")\n            reserveL.popleft()\nwhile reserveL:\n    out.append(\")\")\n    reserveL.popleft()\nans = \"\"\nwhile out:\n    ans += out.popleft()\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12226": {"id": 12226, "code": "S = \"level\"\nN=len(S)\nA=S[:(N-1)//2]\nB=S[(N+3)//2-1:]\nif S!=S[::-1] or A!=A[::-1] or B!=B[::-1]:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "10165": {"id": 10165, "code": "import sys\ninput = sys.stdin.readline\nn = 8\nS = \"))))((((\"\nb = 0\nq = 0\nfor s in S:\n    if s == '(':\n        b +=1\n    else:\n        if b>0:\n            b -= 1\n        else:\n            q += 1\nprint('('*q+S+')'*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "6544": {"id": 6544, "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nimport bisect\nret = 0\nfor b in B:\n    i = bisect.bisect_left(A, b)\n    j = bisect.bisect_right(C, b)\n    ret += i * (N - j)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "155": {"id": 155, "code": "s = \"xyz\"\nk = 4\nans = \"\"\nfor si in s:\n  if si == \"a\":\n    ans += \"a\"\n    continue\n  num = ord(\"z\") - ord(si) + 1\n  if num <= k:\n    ans += \"a\"\n    k -= num\n  else:\n    ans += si\nif k > 0:\n  num = k % 26\n  if ord(ans[-1]) + num <= ord(\"z\"):\n    new_c = chr(ord(ans[-1]) + num)\n  else:\n    num -= ord(\"z\") - ord(ans[-1])\n    new_c = chr(ord(\"a\") - 1 + num)\n  print(ans[:-1] + new_c)\nelse:\n  print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11355": {"id": 11355, "code": "S = \"SUN\"\nif S == 'SUN':\n    answer = 7\nelif S == 'MON':\n    answer = 6\nelif S == 'TUE':\n    answer = 5\nelif S == 'WED':\n    answer = 4\nelif S == 'THU':\n    answer = 3\nelif S == 'FRI':\n    answer = 2\nelif S == 'SAT':\n    answer = 1\nprint(answer)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "169": {"id": 169, "code": "s = ['a']\nk = 25\nt = list(map(lambda x:ord(x)-ord(\"a\"),s)) \nfor i in range(len(t)):\n  diff = 26-t[i] \n  if diff != 26 and diff <= k: \n    t[i]+=diff\n    k-=diff\n  else:\n    continue\nt[-1]+=k \nu = \"\".join(list(map(lambda x:chr((x%26+ord(\"a\"))),t)))\nprint(u)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "18347": {"id": 18347, "code": "H = 3\nW = 7\nN = 10\nN += max(H-1,W-1)\nans = N//max(H,W)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7132": {"id": 7132, "code": "H = 20;N = 3\na = [4, 5, 6]\nsum = 0\nfor i in range(N):\n    sum += a[i]\nif sum >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5374": {"id": 5374, "code": "from math import ceil\nprint(ceil(int(\"5\") / 2))", "coverage": [">", ">"]}, "4655": {"id": 4655, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nans = \"{0}{1}{2}\".format(s[0],len(s)-2,s[-1])\nprint(ans)", "coverage": [">", ">", ">"]}, "14594": {"id": 14594, "code": "n = 2;p = 0\na = [1, 3]\nflg = True\nfor i in a:\n    if i % 2 != 0:\n        flg = False\n        break\nif flg:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "2090": {"id": 2090, "code": "from sys import stdin\nN = 10;A = 7;B = 5\nMAX = min(A,B)\nMIN = max(A+B-N,0)\nprint(MAX,MIN)", "coverage": [">", ">", ">", ">", ">"]}, "2703": {"id": 2703, "code": "s = \"4908\"\nif s.count(\"1\")==1 and  s.count(\"9\")==1 and  s.count(\"7\")==1 and  s.count(\"4\")==1:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "1733": {"id": 1733, "code": "import sys\ninput = sys.stdin.readline\nN = 10;A = 3;B = 5\nif A + B <= N:\n\tprint(min(A, B), 0)\nelse:\n\tprint(min(A, B), (A+B)-N)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "17401": {"id": 17401, "code": "s = \"0112\"\nfir = int(s[:2])\nsec = int(s[2:])\nif fir > 0 or sec > 0:\n    if 1 <= fir <= 12 and 1 <= sec <= 12 :\n        print(\"AMBIGUOUS\")\n    elif 1 <= fir <= 12: \n        print(\"MMYY\")\n    elif 1 <= sec <= 12:\n        print(\"YYMM\") \n    else:\n        print(\"NA\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "15704": {"id": 15704, "code": "X = 13;Y = 3;Z = 1\nout = 0\nnow = 0\nif X>=Y+Z+Z:\n    out += 1\n    now += Y+Z+Z\n    while X>=now+Y+Z:\n        now += Y+Z\n        out += 1\n    print(out)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2019": {"id": 2019, "code": "N = 10;A = 7;B = 5\nm = min(A, B)\nM = max(A + B - N, 0)\nprint(m, M)", "coverage": [">", ">", ">", ">"]}, "4822": {"id": 4822, "code": "lit = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nmojisu = len(lit) - 2\nans = lit[0] + str(mojisu) + lit[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "14482": {"id": 14482, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt,i = 0,0\nwhile i<n:\n    while i+1<n and a[i]==a[i+1]: i+=1\n    if i+1<n and a[i]<a[i+1]:\n        while i+1<n and a[i]<=a[i+1]: i+=1\n    elif i+1<n and a[i]>a[i+1]:\n        while i+1<n and a[i]>=a[i+1]: i+=1\n    cnt+=1\n    i+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "9890": {"id": 9890, "code": "N = 3\nS = \"())\"\nsl = 0\nsr = 0\nslmax = 0\nsrmax = 0\nfor i in range(N):\n  if(S[i] == '('):\n    sl -= 1\n  else:\n    sl += 1\n  slmax = max(slmax, sl)\nfor i in range(N):\n  if(S[N-i-1] == '('):\n    sr += 1\n  else:\n    sr -= 1\n  srmax = max(srmax, sr)\nfor i in range(slmax):\n  S = '(' + S\nfor i in range(srmax):\n  S = S + ')'\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "17665": {"id": 17665, "code": "s = \"0112\"\nx = int(s[:2])\ny = int(s[2:])\nif 1 <= x <= 12 and 1 <= y <= 12:\n    a = \"AMBIGUOUS\"\nelif 1 <= x <= 12:\n    a = \"MMYY\"\nelif 1 <= y <= 12:\n    a = \"YYMM\"\nelse:\n    a = \"NA\"\nprint(a)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "15368": {"id": 15368, "code": "import math\nx = 64145;y = 123;z = 456\nprint(int(math.floor((x - z) / (y + z))))", "coverage": [">", ">", ">"]}, "6141": {"id": 6141, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\ncnt = 0\nfor j in range(n):\n    ai = bisect.bisect_left(a,b[j])\n    ci = n-bisect.bisect_right(c,b[j])\n    cnt += ai*ci\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17917": {"id": 17917, "code": "s = \"0112\"\nans = 0\nfor i in range(0,3,2):\n  if s[i] == \"0\" and s[i+1] == \"0\":\n    continue\n  elif s[i] == \"0\":\n    ans += i+1\n  elif (s[i] == \"1\" and s[i+1] == \"0\") or (s[i] == \"1\" and s[i+1] == \"1\") or (s[i] == \"1\" and s[i+1] == \"2\"):\n    ans += i+1\nif ans == 1:\n  print(\"MMYY\")\nelif ans == 3:\n  print(\"YYMM\")\nelif ans == 4:\n  print(\"AMBIGUOUS\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6473": {"id": 6473, "code": "from bisect import bisect_right, bisect_left\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor bi in range(N):\n    ai_max = bisect_left(A, B[bi])\n    ci_min = bisect_right(C, B[bi])\n    ans += (ai_max) * (N - ci_min)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17214": {"id": 17214, "code": "a = \"H\";b = \"H\"\nif a == 'H' and b == 'H':\n  print('H')\nelif a == 'H' and b == 'D':\n  print('D')\nelif a == 'D' and b == 'H':\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "13245": {"id": 13245, "code": "S = \"haiku,atcoder,tasks\"\nS=S.replace(\",\",\" \")\nprint(S)", "coverage": [">", ">", ">"]}, "5691": {"id": 5691, "code": "import math\nN = 100\nprint (math.ceil(N/2))", "coverage": [">", ">", ">"]}, "9897": {"id": 9897, "code": "n = 6\ns = \")))())\"\ncounter_l = 0\npairs = 0\ndouble_check = set()\nfor i in range(n):\n    if s[i] == \"(\":\n        counter_l += 1\n        for j in range(i + 1, n):\n            if s[j] == \")\" and j not in double_check:\n                pairs += 1\n                double_check.add(j)\n                break\ncounter_r = n - counter_l\ns = s + \")\" * (counter_l - pairs)\ns = \"(\" * (counter_r - pairs) + s\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12638": {"id": 12638, "code": "s = 5\nprint(\"YES\" if s == 3 or s == 5 or s == 7 else \"NO\")", "coverage": [">", ">"]}, "2902": {"id": 2902, "code": "S = \"1234567876\"\nS_len = len(S)\nans = 1000\nfor i in range(S_len - 2):\n    t = int(S[i:i + 3])\n    t_abs = abs(t - 753)\n    ans = min(ans, t_abs)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5583": {"id": 5583, "code": "N = 100\nif N%2==1:\n  N+=1\nprint(int(N/2))", "coverage": [">", ">", "!", ">"]}, "1576": {"id": 1576, "code": "n = 750\nfor i in range(n,n + 111):\n    s = str(i)\n    if s[0]== s[1] and s[1] == s[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "16103": {"id": 16103, "code": "n = ['20', '30']\na=int(n[0])\nb=int(n[1])\nif a>=2*b:\n     print(a-2*b)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16069": {"id": 16069, "code": "A = 20;B = 30\nif A-B*2<0:\n    print('0')\nelse:\n    print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "17880": {"id": 17880, "code": "S = \"1905\"\nif int(S[0:2]) > 12 or S[0:2] == \"00\":\n    if 0 < int(S[2:4]) <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelse:\n    if 0 < int(S[2:4]) <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3980": {"id": 3980, "code": "x = 13;y = 3;z = 1\nx -= z\nans = x // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "12471": {"id": 12471, "code": "S = \"atcoder\"\nN = len(S)\none = S[:(N-1) // 2]\ntwo = S[(N+3) // 2 - 1:]\nif S == S[::-1]:\n    if one == one[::-1]:\n        if two == two[::-1]:\n            print('Yes')\n            exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "16418": {"id": 16418, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm = a[-1]\nbr = m/2\ntmp = m\nfor i in range(n):\n    if tmp > abs(a[i]-br):\n        r = a[i]\n        tmp = abs(a[i]-br)\nprint(m,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11975": {"id": 11975, "code": "n = 11;m = 30\nn1 = 12;m1 = 1\nif n==n1:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", "!", "!", ">"]}, "4558": {"id": 4558, "code": "s = \"internationalization\"\nn = len(s[1:-1])\nprint(s[0]+str(n)+s[-1])", "coverage": [">", ">", ">"]}, "16099": {"id": 16099, "code": "a = ['20', '15']\nif int(a[0]) <= int(a[1]) * 2:\n  print(\"0\")\nelse:\n  print(int(int(a[0]) - int(a[1]) * 2))", "coverage": [">", ">", ">", "!", "!"]}, "17337": {"id": 17337, "code": "import sys\na = \"H\";b = \"H\"\nif not a in (\"H\",\"D\"):\n    sys.exit()\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", ">", ">", "!", "!"]}, "7844": {"id": 7844, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nanswer = math.ceil((N - 1)/ (K - 1))\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "13953": {"id": 13953, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nzougen = 4 \nans=1\nfor i in range(N-1):\n    if zougen==4:\n        if A[i]-A[i+1]<0:\n            zougen = 2\n        elif A[i]-A[i+1]>0:\n            zougen = 1\n        else:\n            zougen =0\n    if A[i]-A[i+1]<0:\n        if zougen == 1:\n            ans+=1\n            zougen=4\n        if zougen == 0:\n            zougen =2\n    if A[i]-A[i+1]>0:\n        if zougen == 2:\n            ans+=1\n            zougen=4\n        if zougen ==0:\n            zougen = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "15070": {"id": 15070, "code": "N = 1;P = 1\nA = [50]\nx = y = 0\nfor i in range (N):\n  if A[i]%2 == 0:\n    x += 1\n  else:\n    y += 1\nif P%2 == 0:\n  print(2**N if y == 0 else 2**(N-1))\nelse:\n  print(0 if y == 0 else 2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "14135": {"id": 14135, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N<=2:\n    print(1)\n    exit()\nnow=0\nans=1\nfor i in range(1,N):\n    if i==1:\n        if A[i]-A[i-1]==0:\n            now=0\n        else:\n            now=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if now>=1:\n            plus=True\n        elif now==0:\n            plus=-1\n        else:\n            plus=False\n    else:\n        if A[i]-A[i-1]==0:\n            nex=0\n        else:\n            nex=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if plus==-1:\n            if nex>=1:\n                plus=True\n            elif nex<0:\n                plus=False\n        elif plus:\n            if nex<0:\n                plus=-1\n                ans+=1\n        else:\n            if nex>0:\n                plus=-1\n                ans+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13479": {"id": 13479, "code": "s = \"haiku,atcoder,tasks\"\nprint( s.replace(\",\", \" \") )", "coverage": [">", ">"]}, "15295": {"id": 15295, "code": "X = 12;Y = 3;Z = 1\nfor i in range(1,X):\n  if (Y+Z)*i+Z > X:\n    print(i-1)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "6133": {"id": 6133, "code": "from bisect import bisect_right\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0]*(N+1)\nidx = N\nfor i in range(N-1,-1,-1):\n    idx = bisect_right(C,B[i],hi=idx)\n    Bcnt[i] = N-idx+Bcnt[i+1]\nans = 0\nidx = 0\nfor i in range(N):\n    idx = bisect_right(B,A[i],lo=idx)\n    ans += Bcnt[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14626": {"id": 14626, "code": "n = 45;p = 1\na = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]\ncnt0 = a.count(0)\ncnt1 = n-cnt0\nif cnt0==n and p==0:\n    print(2**n)\nelif cnt0==n and p==1:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "7289": {"id": 7289, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nT = 0\nfor i in range(N):\n  T += A[i]\nif H-T <=0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9772": {"id": 9772, "code": "S = \"())\";l = \"(\";r = \")\"\nt=S\nwhile t.count(l+r):\n t=t.replace(l+r,'')\nprint(l*t.count(r)+S+r*t.count(l))", "coverage": [">", ">", ">", ">", ">"]}, "1277": {"id": 1277, "code": "n = 112\nk=n//100\nnex=111*k\nif nex>=n:\n    print(nex)\nelse:\n    print(nex+111)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14775": {"id": 14775, "code": "n = 1;p = 1\na = [50]\nodd = 0\neven = 0\nfor ai in a:\n    if(ai%2==0):\n        even += 1\n    else:\n        odd += 1\nif(p==1)&(odd==0):\n    print(0)\nelif(p==0)&(odd==0):\n    print(2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!"]}, "16": {"id": 16, "code": "s = \"xyz\"\nk = 4\nans = \"\"\nfor i in s:\n    if k >= (123 - ord(i)) % 26:\n        k -= (123 - ord(i)) % 26\n        ans += \"a\"\n    else:\n        ans += i\nprint(ans[:-1] + chr((ord(ans[-1]) - 97 + k) % 26 + 97))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12716": {"id": 12716, "code": "x = 5\nprint('YES' if x==3 or x==5 or x==7 else 'NO')", "coverage": [">", ">"]}, "2847": {"id": 2847, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < ans:\n        ans = abs(int(S[i:i+3])-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3260": {"id": 3260, "code": "x = \"20 30\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11224": {"id": 11224, "code": "s = \"SAT\"\nl = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']\nif s == 'SUN':\n    print(7)\nelse:\n    print(6 - l.index(s))", "coverage": [">", ">", ">", "!", "!", ">"]}, "9015": {"id": 9015, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nx = 18\nls=[a,b,c,d,e]\nif (e-a)<=x:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16888": {"id": 16888, "code": "a = \"D\";b = \"H\"\nif a == b:\n    TopCoDeer = 'H'\nelse:\n    TopCoDeer = 'D'\nprint(TopCoDeer)", "coverage": [">", ">", "!", "!", ">", ">"]}, "5911": {"id": 5911, "code": "N = 5\nprint((N//2)+(N%2))", "coverage": [">", ">"]}, "12205": {"id": 12205, "code": "x = \"11 16\"\ny = \"11 17\"\nl = x.split()\nl2 = y.split()\nif l[0] != l2[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "1989": {"id": 1989, "code": "N = 10;A = 7;B = 5\nmin_ans = 0\nmax_ans = 0\nif A<=B:\n    min_ans = A\nelse:\n    min_ans = B\nif N>=A+B:\n    max_ans = 0\nelse:\n    max_ans = A + B - N\nprint(\"%d %d\"%(min_ans, max_ans))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "10795": {"id": 10795, "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nn = len(s)\nm = n//2\ns_f = []\ns_l = []\nfor i in range(m):\n    s_f.append(s[i])\nfor i in range(1,m + 1):\n    s_l.append(s[-i])\ns_r = list(reversed(s))\ns_f_r = list(reversed(s_f))\ns_l_r = list(reversed(s_l))\nif s_r == s:\n    if s_f_r == s_f and s_l_r == s_l:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "632": {"id": 632, "code": "K = 101\ncount = 1\nmod = 7\nanswer = -1\nfor _ in range(K):\n    if mod % K == 0:\n        answer = count\n        break\n    count += 1\n    mod = (mod * 10 + 7) % K\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9702": {"id": 9702, "code": "n = 6\ns = \")))())\"\na=[1 if i=='(' else -1 for i in s]\ne=[0]\nfor i in range(n):\n    e.append(e[i]+a[i])\ns=-min(e)*'('+s\ns+=(s.count('(')-s.count(')'))*')'\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14121": {"id": 14121, "code": "from collections import deque\nN = 6\nA_deque = deque(int(e) for e in \"1 2 3 2 2 1\".split())\nsection = list()\nsection.append(A_deque.popleft())\nans = 1\nmode = 0\nwhile 1:\n    if len(A_deque) == 0:\n        break\n    elif mode == 0:\n        next = A_deque.popleft()\n        if section[-1] == next:\n            section.append(next)\n        elif section[-1] > next:\n            section.append(next)\n            mode = -1\n        elif section[-1] < next:\n            section.append(next)\n            mode = 1\n    elif mode == 1:\n        next = A_deque.popleft()\n        if section[-1] > next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\n    elif mode == -1:\n        next = A_deque.popleft()\n        if section[-1] < next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "3953": {"id": 3953, "code": "x = 64146;y = 123;z = 456\nX = x -z\nans = X // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10077": {"id": 10077, "code": "N = 8\ns = \"))))((((\"\nkeep = 0\nans = ''\nfor i in range(N):\n    if s[i] == '(':\n        ans += '('\n        keep += 1\n    else:\n        if keep > 0:\n            ans += ')'\n            keep -= 1\n        else:\n            ans = ('(' + ans + ')')\nprint(ans + ')' * keep)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">"]}, "709": {"id": 709, "code": "K = 101\nsevens=7\nresult=1\nif K%2==0 or K%5==0:\n    print(-1)\nelse:\n    while sevens%K!=0:\n        sevens%=K\n        sevens=sevens*10+7\n        result+=1\n    print(result)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "9973": {"id": 9973, "code": "n = 8\nt = \"))))((((\"\nlef = 0\nrig = 0\ncl = 0\ncr = 0\nfor i in range(n):\n    if t[i] == \")\":\n        rig += 1\n        if rig > lef+cl:\n            cl += 1\n    if t[i] == \"(\":\n        lef += 1\nlef = 0\nrig = 0\nfor i in reversed(range(n)):\n    if t[i] == \"(\":\n        lef += 1\n        if lef > rig+cr:\n            cr += 1\n    if t[i] == \")\":\n        rig += 1\nfor i in range(cl):\n    print(\"(\",end=\"\")\nprint(t,end=\"\")\nfor i in range(cr):\n    print(\")\",end=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "10323": {"id": 10323, "code": "a = 100;b = 50;k = 4\nm = min(a,b)\nl = set()\nfor i in range(1,m+1):\n  if a%i == 0 and b%i == 0:\n    l.add(i)\nprint(sorted(list(l))[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16632": {"id": 16632, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "699": {"id": 699, "code": "K = 101\nans = -1\nnum7 = 7\nfor i in range(1000000):\n    if (num7 % K) == 0:\n        ans = i+1\n        break\n    else:\n        num7 = (num7*10+7)%K\n        i+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7658": {"id": 7658, "code": "h = 20;n = 3\na = [4, 5, 6]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8882": {"id": 8882, "code": "n = 1\na1 = [2]\na2 = [3]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "7253": {"id": 7253, "code": "health = 210;attack = 5\ndamage = [31, 41, 59, 26, 53]\nif health <= sum(damage):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "1272": {"id": 1272, "code": "import math\nn = 750\nprint(math.ceil(n/111)*111)", "coverage": [">", ">", ">"]}, "5442": {"id": 5442, "code": "n = 100\nprint(n//2 + (n % 2)*1)", "coverage": [">", ">"]}, "18883": {"id": 18883, "code": "n = 12\nans, tmp = 0, 5\nif n % 2 == 0:\n    n //= 2\n    while tmp <= n:\n        ans += n // tmp\n        tmp *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2387": {"id": 2387, "code": "n = 13;m = 3\ntot = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(tot)", "coverage": [">", ">", ">"]}, "19435": {"id": 19435, "code": "N = 999999999\nprint(N*2) if N % 2 == 1 else print(N)", "coverage": [">", ">"]}, "18911": {"id": 18911, "code": "n = 5\nif n%2 == 1:\n    print(0)\nelse:\n    answer = 0\n    count = 1\n    n=n//2\n    while 5**count <= n:\n        answer += n//pow(5,count)\n        count+=1\n    print(answer)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6874": {"id": 6874, "code": "H = 211;N = 5\nA = [26, 31, 41, 53, 59]\nfor i in range(1,N+1):\n    H-=A[-i]\n    if H<=0:\n        print('Yes')\n        exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12670": {"id": 12670, "code": "a = 5\nprint(\"YES\" if a == 3 or a == 5 or a == 7 else \"NO\") ", "coverage": [">", ">"]}, "14096": {"id": 14096, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < n:\n    j = i\n    while j < n-1 and l[j] >= l[j+1]:\n        j += 1\n    k = i\n    while k < n-1 and l[k] <= l[k+1]:\n        k += 1\n    i = max(j, k) + 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "890": {"id": 890, "code": "K = 2\nnum = 0\nfor i in range(0,K):\n    num = num*10 + 7\n    if num % K == 0:\n        print(i + 1)\n        exit()\n    num %= K\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5978": {"id": 5978, "code": "N = 2\nA = N // 2\nB = N % 2\nprint(A + B)", "coverage": [">", ">", ">", ">"]}, "9294": {"id": 9294, "code": "S = \"2017/01/07\"\nt=S.replace('2017', '2018')\nprint(t)", "coverage": [">", ">", ">"]}, "12678": {"id": 12678, "code": "X = 5\nprint(\"YES\" if (X == 7) or (X == 5) or (X == 3) else \"NO\")", "coverage": [">", ">"]}, "11698": {"id": 11698, "code": "input_date_list = ['SUN','MON','TUE','WED','THU','FRI','SAT' ]\nS = \"SAT\"\ntoday_date_list = ['\u65e5','\u6708','\u706b','\u6c34','\u6728','\u91d1','\u571f']\ns1 = input_date_list.index(S)\ntoday_date = (today_date_list[s1])\ns2 = 7 - s1\nprint(s2)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13223": {"id": 13223, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5] + \" \" + s[6:13] + \" \" + s[14:])", "coverage": [">", ">"]}, "3710": {"id": 3710, "code": "A = 20;B = 30\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "10020": {"id": 10020, "code": "N = 6\nS = \")))())\"\nl, r = 0, 0\np, m = 0, 0\nfor i in range(N):\n  if S[i] == \"(\":\n    l += 1\n  else:\n    r += 1\n  if l < r:\n    p += 1\n    l += 1\nm = l - r\nfor i in range(p):\n  print(\"(\", end = \"\")\nprint(S, end =\"\")\nfor i in range(m):\n  print(\")\", end = \"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2198": {"id": 2198, "code": "rec = ['10', '7', '5']\nn, a, b = map(int, rec)\nnin = [a, b]\nnmax = min(nin)\nnmin = n - min(n, (n - nin[0]) + (n - nin[1]))\nprint(str(nmax) + \" \" + str(nmin))", "coverage": [">", ">", ">", ">", ">", ">"]}, "15893": {"id": 15893, "code": "A = 12;B = 4\nif A > B*2:\n  print(A-B*2)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!"]}, "465": {"id": 465, "code": "s = \"a\";k = 25\nans = []\na = ord('z') + 1\nfor i in s:\n    if a - ord(i) <= k and i != 'a':\n        k -= a - ord(i)\n        ans.append(ord('a'))\n    else:\n        ans.append(ord(i))\nans[-1] += k % 26\nif ans[-1] >= a:\n    ans[-1] -= 26\nprint(*map(chr, ans), sep='')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">"]}, "8045": {"id": 8045, "code": "n = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(-((1-n)//(k-1)))", "coverage": [">", ">", ">"]}, "12509": {"id": 12509, "code": "a = 1;b = 1;x = 1\ncount = 0\nfor i in range(max(a,b),0,-1):\n    if a % i == 0 and b % i == 0:\n        count += 1\n    if count == x:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5356": {"id": 5356, "code": "N = 5\nprint(N//2+(N%2!=0))", "coverage": [">", ">"]}, "1498": {"id": 1498, "code": "import math\nprint(math.ceil(int(\"112\")/111)*111)", "coverage": [">", ">"]}, "4176": {"id": 4176, "code": "from datetime import datetime,timedelta\na = ['10', '0', '15', '0', '30']\na=[int(_) for _ in a]\nt1=datetime(2000,1,1,a[0],a[1],0)\nt2=datetime(2000,1,1,a[2],a[3],0)\ndelta=t2-t1\ntotal_seconds=delta.seconds\nans=(total_seconds-a[4]*60)/60\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6293": {"id": 6293, "code": "import bisect\nfrom collections import deque\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nd = deque([])\nfor i in range(N):\n  n = bisect.bisect_right(C, B[N-1-i])\n  if len(d) == 0:\n    d.appendleft(N-n)\n  else:\n    d.appendleft(N-n+d[0])\nans = 0\nfor i in range(N):\n  m = bisect.bisect_right(B, A[i])\n  if m < N:\n    ans += d[m]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8553": {"id": 8553, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nlst = [0]*N\nfor i in range(N):\n    lst[i] = sum(A1[:i+1]) + sum(A2[i:])\nans = max(lst)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9722": {"id": 9722, "code": "N = 6\nS = \")))())\"\nSL = [0]\nfor i in range(N):\n    if S[i] == '(':\n        SL.append(SL[i] + 1)\n    else:\n        SL.append(SL[i] - 1)\nmi = min(SL)\nla = SL[-1]\nif mi < 0:\n    S = '(' * ((-1)*mi) + S\n    la -= mi\nif la >= 0:\n    S += ')' * la\nelse:\n    p = (-1)*la\n    S = '(' * p + S\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "19468": {"id": 19468, "code": "n = 10\nif n%2==0:\n  print(n)\nif n%2==1:\n  print(n*2)", "coverage": [">", ">", ">", ">", "!"]}, "3203": {"id": 3203, "code": "S = \"1111111111\"\nn = len(S)\nans = 10**9\nfor i in range(n - 2):\n    tmp = int(S[i:i + 3])\n    diff = abs(753 - tmp)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2294": {"id": 2294, "code": "N = 10;A = 7;B = 5\nma = min(A,B)\nmi = max(0,(A+B)-N)\nprint(\"{} {}\".format(ma,mi))", "coverage": [">", ">", ">", ">"]}, "296": {"id": 296, "code": "s = \"xyz\"\nk = 4\nresult = \"\"\ni = 0\nwhile i < len(s)-1:\n    s_i = ord(s[i])\n    if s[i]==\"a\":\n        result = result+\"a\"\n    elif 123-s_i <= k:\n        result = result+\"a\"\n        k -= 123-s_i\n    else:\n        result = result+s[i]\n    i += 1\nif k>0:\n    result = result + chr((ord(s[i])-97+k)%26+97)\nelse:\n    result = result + s[i]\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "836": {"id": 836, "code": "K = 2\nif K % 2 == 0 or K % 5 == 0:\n  print(-1)\nelse:\n  if K % 7 == 0:\n    L = 9 * K // 7\n  else:\n    L = 9 * K\n  a = 10 % L\n  check = False\n  for i in range(L):\n    a %= L\n    if a == 1:\n      print(i + 1)\n      check = True\n      break\n    a *= 10\n  if not check:\n    print(-1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "11676": {"id": 11676, "code": "s = \"SAT\"\nif s == \"SUN\":\n    print(7)\nelif s =='MON':\n    print(6)\nelif s == \"TUE\":\n    print(5)\nelif s == \"WED\":\n    print(4)\nelif s == \"THU\":\n    print(3)\nelif s == \"FRI\":\n    print(2)\nelif s == \"SAT\":\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "18714": {"id": 18714, "code": "import math\nH = 2\nW = 100\nN = 200\nn = max(H,W)\nprint(math.ceil(N/n))", "coverage": [">", ">", ">", ">", ">", ">"]}, "6709": {"id": 6709, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nprint(\"Yes\") if H <= sum(A) else print(\"No\")", "coverage": [">", ">", ">"]}, "2549": {"id": 2549, "code": "if {1,9,7,4}==set(map(int,\"4 9 0 8\".split())):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", "!", "!", ">"]}, "5235": {"id": 5235, "code": "S = ['x', 'y', 'z']\nprint(S[0]+str(len(S)-2)+S[-1])", "coverage": [">", ">"]}, "3295": {"id": 3295, "code": "a = 20;b = 15\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "11476": {"id": 11476, "code": "s = \"SAT\"\nyoubi = {\"SUN\":\"7\", \"MON\":\"6\", \"TUE\":\"5\", \"WED\":\"4\",\"THU\":\"3\",\"FRI\":\"2\", \"SAT\": \"1\"}\nprint(youbi[s])", "coverage": [">", ">", ">"]}, "5593": {"id": 5593, "code": "ans = 3\nprint(ans)", "coverage": [">", ">"]}, "13940": {"id": 13940, "code": "import sys\ninput = sys.stdin.readline\nimport copy\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\narr = []\nans = []\nstatus = 0\nfor i in range(N):\n  if status == 0:\n    if len(arr) > 0:\n      if A[i] > arr[-1]:\n        status = 1\n      elif A[i] < arr[-1]:\n        status = 2\n    arr.append(A[i])\n  elif status == 1 and A[i] >= arr[-1]:\n    arr.append(A[i])\n  elif status == 2 and A[i] <= arr[-1]:\n    arr.append(A[i])\n  else:\n    ans.append(copy.copy(arr))\n    arr = [A[i]]\n    status = 0\nif len(arr) > 0:\n  ans.append(arr)\nprint(len(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "4943": {"id": 4943, "code": "s = \"smiles\"\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">"]}, "7894": {"id": 7894, "code": "from math import ceil\nn = 3;k = 3\na = [1, 2, 3]\nn-=1\nk-=1\nprint(ceil(n/k))", "coverage": [">", ">", ">", ">", ">", ">"]}, "1837": {"id": 1837, "code": "n = 10;a = 3;b = 5\nmaxi=min(a,b)\nmini=a+b-n\nif a+b-n<=0:\n    mini=0\nprint(maxi,mini)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1006": {"id": 1006, "code": "n = 112\nfor i in range(n,1111):\n    i = str(i)\n    if len(set(i))==1:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "9531": {"id": 9531, "code": "S = \"2017/01/31\"\nS=S[:3]+\"8\"+S[4:]\nprint(S)", "coverage": [">", ">", ">"]}, "14436": {"id": 14436, "code": "n = 9\nls = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ni = 0\nflag = 10\nwhile i < n-1:\n    if ls[i] < ls[i+1] and flag == 10:\n        flag = True\n    elif ls[i] > ls[i+1] and flag == 10:\n        flag = False\n    if flag == True:\n        if ls[i] > ls[i+1]:\n            cnt += 1\n            flag = 10\n    elif flag == False:\n        if ls[i] < ls[i+1]:\n            cnt += 1\n            flag = 10\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "15547": {"id": 15547, "code": "x = 64145;y = 123;z = 456\nx -= 2 * z\nprint(x // (y + z) + x % (y + z) // y)", "coverage": [">", ">", ">"]}, "15383": {"id": 15383, "code": "x = 100000;y = 1;z = 1\nret = (x-z)//(y+z)\nprint(ret)", "coverage": [">", ">", ">"]}, "10508": {"id": 10508, "code": "import sys\nA = 1;B = 1;K = 1\ncnt = 0\nls = []\nfor k in range(1, max(A, B) + 1):\n    if (A % k == 0) & (B % k == 0):\n        cnt += 1\n        ls.append(k)\nprint(ls[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18921": {"id": 18921, "code": "n = 12\nif n % 2 == 1:\n  print(0)\nelse:\n  a = 0\n  m = n // 2\n  while True:\n    m = m // 5\n    a += m\n    if m == 0:\n      break\n  print(a)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "852": {"id": 852, "code": "k = 2\nseven = 7\nans = -1\nfor i in range(1,k+1):\n    seven %= k\n    if seven  == 0:\n        ans = i\n        break\n    else:\n        seven = seven * 10 + 7\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "4326": {"id": 4326, "code": "m = [10, 0, 12, 0, 120]\nl = m[0]*60\nn = m[2]*60\ns = l + m[1]\nk = n + m[3]\na = k - s\nprint(a-m[4])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14722": {"id": 14722, "code": "n = 3;p = 0\na = [1, 1, 1]\nd={0:0,1:0}\nfor i in range(n):\n  d[a[i]%2]+=1\nq=2**d[0]\nans=0\nm=d[1]\nf=[1]\nfor i in range(1,m+1):\n  f+=[f[-1]*i]\nfor i in range(m+1):\n  if i%2!=p:continue\n  ans+=q*f[m]//f[i]//f[m-i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6413": {"id": 6413, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\ncount = 0\nimport bisect\nfor i in range(n):\n    A = bisect.bisect_right(a,b[i]-1)\n    C = bisect.bisect_left(c,b[i]+1)\n    count += A*(n-C)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3919": {"id": 3919, "code": "x = 100000;y = 1;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "15200": {"id": 15200, "code": "import io\nn = 64146;m = 123;k = 456\nprint((n-k)//(m+k))", "coverage": [">", ">", ">"]}, "17084": {"id": 17084, "code": "a = \"D\";b = \"D\"\nif a==\"H\":print(b)\nelif b==\"D\":print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", ">", "!"]}, "204": {"id": 204, "code": "S = \"xyz\"\nN = len(S)\nK = 4\nT = []\nfor i in range(N):\n    s = ord(S[i]) - 97\n    a = (26-s) % 26\n    if a <= K:\n        K -= a\n        T.append(\"a\")\n    else:\n        T.append(S[i])\nT[-1] = chr((ord(T[-1]) - 97 + K) % 26 + 97)\nprint(\"\".join(T))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "9629": {"id": 9629, "code": "n = 8\ns = \"))))((((\"\nr_cnt, l_cnt = 0, 0\nfor i in range(n):\n    if s[i] == \"(\":\n        r_cnt += 1\n    else:\n        if r_cnt == 0:\n            l_cnt += 1\n        else:\n            r_cnt -= 1\nprint(l_cnt * \"(\" + s + r_cnt * \")\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "1271": {"id": 1271, "code": "import math\nn = 112\nprint(math.ceil(n/111)*111)", "coverage": [">", ">", ">"]}, "13746": {"id": 13746, "code": "n = [10, 0, 12, 0, 120]\nimport datetime\ntime1 = datetime.datetime(2020,5,5,n[0],n[1])\ntime2 = datetime.datetime(2020,5,5,n[2],n[3])\ntime3 = time2 - time1\ntime3=int(time3.seconds)\nresult=int(time3/60)\nsummary = result - n[4]\nprint(summary)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16201": {"id": 16201, "code": "n = 2\na = [100, 0]\na.sort()\nai=a[-1]\naj=a[0]\nfor j in range(1,n-1):\n    if abs(ai/2-a[j]) < abs(ai/2-aj):\n        aj=a[j]\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14653": {"id": 14653, "code": "n = 1;p = 1\nx = 1\ny = 0\na = [50]\nfor ai in a:\n  if ai%2 == 0:\n    x += x\n    y += y\n  else:\n    t = x\n    x += y\n    y += t\nif p == 0:\n  print(x)\nelse:\n  print(y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "2838": {"id": 2838, "code": "S = \"1111111111\"\nN = len(S)\nans = 1000\nfor i in range(N-2):\n    ans = min(ans, abs(753-(int(S[i])*100+int(S[i+1])*10+int(S[i+2]))))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18438": {"id": 18438, "code": "h = 14\nw = 12\nn = 112\nj = 0\nk = 1\nif h > w:\n  j = h\nelse:\n  j = w\nwhile n > j:\n  n = n - j\n  k = k + 1\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15328": {"id": 15328, "code": "x = 64146;y = 123;z = 456\nprint(int((x - z) / (y + z)))", "coverage": [">", ">"]}, "7214": {"id": 7214, "code": "H = 20;n = 3\nprint(\"Yes\" if H <= sum(map(int,\"4 5 6\".split())) else \"No\")", "coverage": [">", ">"]}, "16473": {"id": 16473, "code": "import sys\nreadline = sys.stdin.readline\nn = 5\nA = [6, 9, 4, 2, 11]\nA.sort(reverse=True)\nN = A[0]\nR = 0\ntmpR = 0\nfor i in range(1, n):\n    tmp = min(A[i], N-A[i])\n    if tmpR < tmp:\n        tmpR = tmp\n        R = A[i]       \nprint(N, R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17253": {"id": 17253, "code": "n = \"H\";m = \"H\"\nprint(\"DH\"[n==m])", "coverage": [">", ">"]}, "10899": {"id": 10899, "code": "s = \"level\"\nn=len(s)\ns2=s[:(n-1)//2]\ns3=s[(n+3)//2-1:]\ncount=0\nfor i in range(n//2):\n    if s[i]==s[-(i+1)]:\n        count+=1\nfor i in range((n-1)//2):\n    if s2[i]==s2[-(i+1)]:\n        count+=1\nfor i in range(n-(n+3)//2+1):\n    if s3[i]==s3[-(i+1)]:\n        count+=1\nif count==n//2+(n-1)//2+n-(n+3)//2+1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">"]}, "6185": {"id": 6185, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2759": {"id": 2759, "code": "a = \"0489\"\nprint(\"YES\" if a==\"1479\" else \"NO\")", "coverage": [">", ">"]}, "1385": {"id": 1385, "code": "a = 750\nfor i in range(10):\n  if i * 111 >= a:\n    print(i * 111)\n    break\n  else:\n    continue", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9888": {"id": 9888, "code": "n = 6\ns = \")))())\"\np = 0\nq = 0\nfor i in range(n):\n    if s[i] == \")\":\n        if q == 0:\n            p += 1\n        else:\n            q -= 1\n    else:\n        q += 1\nprint(\"(\"*p+s+\")\"*q)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "19450": {"id": 19450, "code": "n = 10\nprint(2*n if n%2 else n)", "coverage": [">", ">"]}, "9306": {"id": 9306, "code": "s = \"2017/01/07\"\nprint(s.replace('7', '8', 1))", "coverage": [">", ">"]}, "17766": {"id": 17766, "code": "s = \"0112\"\nans = [0,0]\nif 1 <=  int(s[:2]) <= 12:\n    ans[0] = 1\nif 1 <= int(s[2:]) <= 12:\n    ans[1] = 1\nprint([[\"NA\",\"YYMM\"],[\"MMYY\",\"AMBIGUOUS\"]][ans[0]][ans[1]])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13939": {"id": 13939, "code": "import sys\ninput = sys.stdin.readline\nimport copy\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\narr = []\nans = []\nstatus = 0\nfor i in range(N):\n  if status == 0:\n    if len(arr) > 0:\n      if A[i] > arr[-1]:\n        status = 1\n      elif A[i] < arr[-1]:\n        status = 2\n    arr.append(A[i])\n  elif status == 1 and A[i] >= arr[-1]:\n    arr.append(A[i])\n  elif status == 2 and A[i] <= arr[-1]:\n    arr.append(A[i])\n  else:\n    ans.append(copy.copy(arr))\n    arr = [A[i]]\n    status = 0\nif len(arr) > 0:\n  ans.append(arr)\nprint(len(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16501": {"id": 16501, "code": "n = 5\na = [6, 9, 4, 2, 11]\nn1=max(a)\nn2=-n1\nnc=n1/2\nfor m in a:\n  if abs(m-nc)<abs(n2-nc) and m!=n1:\n    n2=m\nprint (n1,n2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15750": {"id": 15750, "code": "x = 12;y = 3;z = 1\nchair = (x - z) // (y + z)\nprint(chair)", "coverage": [">", ">", ">"]}, "3631": {"id": 3631, "code": "A = 20;B = 30\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "9820": {"id": 9820, "code": "N = 6\nS = \")))())\"\nn_left=0\nn_right=0\nfor a in S:\n    if a==\")\":\n        if n_left==0:\n            n_right+=1\n        else:\n            n_left-=1\n    else:\n        n_left+=1\nprint((n_right*\"(\")+S+(n_left*\")\"))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "3380": {"id": 3380, "code": "a = 20;b = 15\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "8438": {"id": 8438, "code": "import sys\ninput = sys.stdin.readline\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncount =[0]*N\nif N ==1:\n    count[0] =A1[0] +A2[0]\nelse:\n    for i in range(N-1):\n        count[i] =sum(A1[:i+1]) +sum(A2[i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12143": {"id": 12143, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n    print('0')\nelse:print('1')", "coverage": [">", ">", ">", ">", "!"]}, "6344": {"id": 6344, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nd=0\nfor t in b:\n    d+=bisect.bisect_left(a,t)*(n-bisect.bisect_right(c,t))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10552": {"id": 10552, "code": "abk = [1, 1, 1]\na = abk[0]\nb = abk[1]\nk = abk[2]\nanss = []\nfor i in range(1,min(a,b)+1):\n  if a%i==0 and b%i==0:\n    anss.append(i)\nanss.sort(reverse=True)\nprint(anss[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5937": {"id": 5937, "code": "N = 100\nr = (N + 1) / 2\nprint(int(r))", "coverage": [">", ">", ">"]}, "4737": {"id": 4737, "code": "char = \"xyz\"\nlength = len(char)\nprint('{}{}{}'.format(char[0], length-2, char[-1]))", "coverage": [">", ">", ">"]}, "2222": {"id": 2222, "code": "N = 10;A = 7;B = 5\nprint(\"{0} {1}\".format(min(A, B), max(A + B - N, 0)))", "coverage": [">", ">"]}, "16024": {"id": 16024, "code": "base = ['20', '30']\na = int(base[0])\nb = int(base[1])\nif a>b*2:\n    print(a-b*2)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17180": {"id": 17180, "code": "A = \"D\";B = \"H\"\nprint('H') if (A == 'D' and B == 'D') or (A == 'H' and B == 'H') else print('D')", "coverage": [">", ">"]}, "12902": {"id": 12902, "code": "x = 5\nif x==7 or x==5 or x==3:\n    print(\"YES\")\nelse:print(\"NO\")", "coverage": [">", ">", ">", "!"]}, "14726": {"id": 14726, "code": "N = 45;P = 1\nA = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nin_odd = False\nfor i in range(N):\n    if A[i]%2:\n        in_odd = True\n        break\nif not in_odd:\n    if P:\n        print(0)\n    else:\n        print(2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "4937": {"id": 4937, "code": "s = \"smiles\"\nans = s[0] + str(len(s[1:-1])) + s[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "6050": {"id": 6050, "code": "n = 2\nprint(int(n/2)+n%2)", "coverage": [">", ">"]}, "6686": {"id": 6686, "code": "H = 211;M = 5\nA = [31, 41, 59, 26, 53]\na = (sum(A))\nif a >= H:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "6116": {"id": 6116, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor i in range(N):\n    b = B[i]\n    a_ix = bisect_left(A, b)\n    c_ix = bisect_right(C, b)\n    ans += a_ix * (N - c_ix)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "797": {"id": 797, "code": "k = 2\nmod = 7 % k\nif k % 2 == 0:\n    print(-1)\nelse:\n    ans = 1\n    while mod != 0:\n        mod = (10*mod + 7) % k\n        ans += 1\n        if ans >= 10**7:\n            print(-1)\n            break\n    if ans < 10**7:\n        print(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "17959": {"id": 17959, "code": "s = \"0112\"\nm = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\nif s[:2] not in m and s[2:] not in m:\n    print('NA')\nelif s[:2] not in m:\n    print('YYMM')\nelif s[2:] not in m:\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18120": {"id": 18120, "code": "S = \"0112\"\nif (int(S[:2]) == 0 and (int(S[2:]) >= 13 or int(S[2:]) == 0)) or   (int(S[2:]) == 0 and (int(S[:2]) >= 13 or int(S[:2]) == 0)) or   (int(S[2:]) >= 13 and int(S[:2]) >= 13):\n    print('NA')\nelif (int(S[:2]) >= 13 and int(S[2:]) < 13) or     (int(S[:2]) == 0 and int(S[2:]) < 13):\n    print('YYMM')\nelif (int(S[2:]) >= 13 and int(S[:2]) < 13) or     (int(S[2:]) == 0 and int(S[:2]) < 13):\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "7980": {"id": 7980, "code": "import math\nN = 4;K = 3\nA = \"2 3 1 4\"\nprint(math.ceil((N-K)/(K-1))+1)", "coverage": [">", ">", ">", ">"]}, "282": {"id": 282, "code": "s = ['x', 'y', 'z']\nn = len(s)\nk = 4\nfor i in range(n):\n    if k > 0 and i == n-1:\n        x = ord(s[i])-ord(\"a\")\n        s[i] = chr((k+x)%26+ord(\"a\"))\n        break\n    if s[i] == \"a\":\n        continue\n    x = ord(s[i])-ord(\"a\")\n    if k >= 26-x:\n        s[i] = \"a\"\n        k -= 26-x\nprint(*s,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15374": {"id": 15374, "code": "x = 13;y = 3;z = 1\nans, mod = divmod(x, y+z)\nif mod >= z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18025": {"id": 18025, "code": "s = \"0112\"\na=int(s[0:2])\nb=int(s[2:4])\nif 0<a<=12 and 0<b<=12:\n    print('AMBIGUOUS')\nelif 0<b<=12:\n    print('YYMM')\nelif 0<a<=12 :\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12133": {"id": 12133, "code": "n = 11;m = 16\ns = 11;t = 17\nprint(s-n)", "coverage": [">", ">", ">"]}, "18759": {"id": 18759, "code": "H = 2\nW = 100\nN = 200\nbig = max(H,W)\nbigsum = 0\nans = 0\nwhile bigsum < N:\n    bigsum += big\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1916": {"id": 1916, "code": "n = 10;a = 7;b = 5\nans1 = min([a, b])\nans2 = max([0, a+b-n])\nprint('{} {}'.format(ans1, ans2))", "coverage": [">", ">", ">", ">"]}, "6795": {"id": 6795, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nsum=0\nfor i in a:\n    sum += i\nif sum<h:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17708": {"id": 17708, "code": "s = \"1700\"\nans = 'NA'\nif 1 <= int(s[:2]) <= 12:\n    ans = 'MMYY'\n    if 1 <= int(s[2:]) <= 12:\n        ans = 'AMBIGUOUS'\nelif 1 <= int(s[2:]) <= 12:\n    ans = 'YYMM'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "10479": {"id": 10479, "code": "a = 1;b = 1;k = 1\na_divisor = []\nab_divisor = []\nfor i in range(1,a+1):\n    if a % i == 0:\n        a_divisor.append(i)\nfor j in a_divisor:\n    if b % j == 0:\n        ab_divisor.append(j)\nprint(ab_divisor[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10960": {"id": 10960, "code": "kai = \"akasaka\"\nnum = len(kai)\nans = 0\nn1 = int((num-1) / 2)\nfor i in range(n1):\n    if kai[i] != kai[-1*(i+1)]:\n        ans += 1\nl1 = kai[0:n1]\nfor i in range(len(l1)):\n    if l1[i] != l1[-1*(i+1)]:\n        ans += 1\nl2 = kai[n1+1:]\nfor i in range(len(l2)):\n    if l2[i] != l2[-1*(i+1)]:\n        ans += 1\nif ans == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!"]}, "14341": {"id": 14341, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nB = []\ni = 0\nwhile i < N - 1:\n    if A[i] != A[i+1]:\n        B.append(A[i])\n    i += 1\nB.append(A[-1])\nans = 1\ni = 0\nwhile i < len(B) - 2:\n    if (B[i + 1] - B[i]) * (B[i + 2] - B[i + 1]) < 0:\n        ans += 1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "15516": {"id": 15516, "code": "x = 64145;y = 123;z = 456\nn = int((x-z)/(y+z))\nprint(n)", "coverage": [">", ">", ">"]}, "6530": {"id": 6530, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(n):\n    num1 = bisect.bisect_left(a,b[i])\n    num2 = n - bisect.bisect(c,b[i])\n    ans += num1*num2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12640": {"id": 12640, "code": "import sys\ninput = sys.stdin.readline\nX = \"5\"\nprint(\"YES\" if X in \"753\" else \"NO\")", "coverage": [">", ">", ">", ">"]}, "190": {"id": 190, "code": "s = \"codefestival\"\nk = 100\nans = ''\nfor i,v in enumerate(s):\n    if (ord('a') - ord(v))%26 <= k:\n        k -= (ord('a') - ord(v))%26\n        ans += 'a'\n    else:\n        ans += v\nk %= 26\nlast = chr(ord('a')+(ord(ans[-1])-ord('a')+k)%26)\nprint(ans[:-1]+last)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6150": {"id": 6150, "code": "from bisect import *\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nres = 0\nfor i in b:\n    temp_a = bisect_left(a, i)\n    temp_c = n - bisect_right(c, i)\n    res += temp_a*temp_c\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5138": {"id": 5138, "code": "S = \"smiles\"\nprint(S[:1]+str(len(S)-2)+S[-1:])", "coverage": [">", ">"]}, "19302": {"id": 19302, "code": "N = 12\nif N % 2 ==1:\n    print(0)\n    exit()\nelse:\n    count =0\n    N = N//2\n    while N //5:\n        N = N//5\n        count +=N\nprint(count)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13875": {"id": 13875, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nres = 0\ni=0\nwhile(i<N):    \n    while(i+1 < N and A[i] == A[i+1]):\n        i+=1\n    if(i+1 < N and A[i] < A[i+1]):\n        while(i+1 < N and A[i] <= A[i+1]):\n            i+=1\n    elif(i+1 < N and A[i] > A[i+1]):\n        while(i+1 < N and A[i] >= A[i+1]):\n            i+=1\n    res+=1\n    i+=1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "1327": {"id": 1327, "code": "N = 111\nMin = 100000\nfor i in range(1,10):\n  Dif = i * 111 - N\n  if min(Min,Dif) == Dif and i * 111 >= N:\n    ans = i * 111\n    Min = Dif\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10093": {"id": 10093, "code": "n = 8\ns = \"))))((((\"\nst=0\nm=0\nlv = 0\nfor x in s:\n    if x == '(':\n        lv+=1\n    else:\n        lv-=1\n    m=min(m,lv)\ngl=lv-m\nst-=m\nprint('('*st+s+')'*gl)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10048": {"id": 10048, "code": "n = 3\ns = \"())\"\nx = 0\nxmin = 0\nfor c in s:\n  if c == '(':\n    x += 1\n  else:\n    x -= 1\n    xmin = min(xmin, x)\nprint('(' * (-xmin) + s + ')' * (x - xmin))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6601": {"id": 6601, "code": "from itertools import accumulate\nimport bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nb.sort()\nc.sort()\nai = []\nbi = []\nfor i in range(n):\n    ai.append(n - bisect.bisect_right(b, a[i]))\n    bi.append(n - bisect.bisect_right(c, b[i]))\nans = 0\nc = [0]+list(accumulate(bi[::-1]))\nfor j in ai:\n    ans += c[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1000": {"id": 1000, "code": "N = 111\nif N <= 111:\n    print(111)\nelif N <= 222:\n    print(222)\nelif N <= 333:\n    print(333)\nelif N <= 444:\n    print(444)\nelif N <= 555:\n    print(555)\nelif N <= 666:\n    print(666)\nelif N <= 777:\n    print(777)\nelif N <= 888:\n    print(888)\nelif N <= 999:\n    print(999)\nelse:\n    print(1111)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "13577": {"id": 13577, "code": "Word1 = \"happy\";Word2 = \"newyear\";Word3 = \"enjoy\"\nprint(Word1 + ' ' + Word2 + ' ' + Word3)", "coverage": [">", ">"]}, "5592": {"id": 5592, "code": "n = 100\ns=int(n/2+0.9)\nprint(s)", "coverage": [">", ">", ">"]}, "11880": {"id": 11880, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(int(M1!=M2))", "coverage": [">", ">", ">"]}, "7786": {"id": 7786, "code": "N = 8;K = 3\narr = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(-(-(N-1)//(K-1)))", "coverage": [">", ">", ">"]}, "10195": {"id": 10195, "code": "n = 8\nS = \"))))((((\"\nT = S.replace('()', '')\nfor _ in range(50):\n  T = T.replace('()', '')\nprint('(' * T.count(')') + S + ')' * T.count('('))", "coverage": [">", ">", ">", ">", ">", ">"]}, "3209": {"id": 3209, "code": "a = \"1111111111\"\nb = abs(753 - int(a[:3]))\nfor i in range(1, len(a)-2):\n  c = abs(753 - int(a[i:i+3]))\n  if b >= c :\n    b = c\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4420": {"id": 4420, "code": "x = \"i\";s = ['n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o'];y = \"n\"\nprint(x+str(len(s))+y)", "coverage": [">", ">"]}, "928": {"id": 928, "code": "K = 101\nS=set()\nans=0\nx=7%K\ni=1\nwhile True:\n    if x==0:\n        ans=1\n        break\n    if x in S:\n        break\n    else:\n        S.add(x)\n    x=(x*10+7)%K\n    i+=1\nprint(i if ans else -1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12141": {"id": 12141, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif (M1==M2-1 or M1-M2==11) and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18626": {"id": 18626, "code": "h = 3\nw = 7\nn = 10\nm = max(h, w)\nif n % m:\n  print(n // m + 1)\nelse:\n  print(n // m)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "10747": {"id": 10747, "code": "s = \"atcoder\"\na = int((len(s)-1)/2)\nb = int((len(s)+3)/2)\nr = ''.join(reversed(s[b-1:]))\nif s[:a]== s[:a:-1] and s[b-1:]== r:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "5072": {"id": 5072, "code": "s = \"smiles\"\na = len(s) - 2\nprint(s[0], a, s[len(s)-1], sep = \"\")", "coverage": [">", ">", ">"]}, "8665": {"id": 8665, "code": "n = 4\np = [1, 1, 1, 1]\nq = [1, 1, 1, 1]\nans = sum(p)+q[n-1]\ntmp = ans\nfor i in range(n-1):\n  tmp = tmp + q[n-i-2] - p[n-i-1]\n  ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16646": {"id": 16646, "code": "a = \"D\";b = \"D\"\nprint(\"D\" if a!=b else \"H\")", "coverage": [">", ">"]}, "3481": {"id": 3481, "code": "a = 12;b = 4\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", ">", "!", "!"]}, "13149": {"id": 13149, "code": "X = 6\nif 105 % X == 0 and X != 1: print(\"YES\")\nelse:print(\"NO\")  ", "coverage": [">", ">", ">"]}, "11812": {"id": 11812, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif (M1 != M2 and M2>M1) or M2 == 1 and M2<M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14294": {"id": 14294, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nmode = 0\nfor i in range(N-1):\n  if mode == 0:\n    if A[i] < A[i+1]:\n      mode = 1\n    elif A[i] > A[i+1]:\n      mode = -1\n    else:\n      mode = 0\n  if mode == 1:\n    if A[i] > A[i+1]:\n      ans += 1\n      mode = 0\n  elif mode == -1:\n    if A[i] < A[i+1]:\n      ans += 1\n      mode = 0\n  else:\n    pass\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13946": {"id": 13946, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nmode = 0\nprev = A[0]\nfor i in A:\n    check = i - prev\n    if check == 0:\n        pass\n    elif check > 0:\n        if mode >= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    else:\n        if mode <= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "5977": {"id": 5977, "code": "N = 5\nA = N // 2\nB = N % 2\nprint(A + B)", "coverage": [">", ">", ">", ">"]}, "16905": {"id": 16905, "code": "a = \"H\";b = \"H\"\ndic = {\"H\":True,\"D\":False}\na = dic[a]\nb = dic[b]\nprint(\"D\" if a^b else \"H\")", "coverage": [">", ">", ">", ">", ">"]}, "12849": {"id": 12849, "code": "X = \"6\"\nX = int(X)\nif X == 7 or X == 5 or X == 3:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11166": {"id": 11166, "code": "s = \"akasaka\"\nn=len(s)\nif(s==s[::-1]):\n    if((s[:(n-1)//2]==s[:(n-1)//2][::-1]) and (s[(n+4)//2-1:]==s[(n+4)//2-1:][::-1])):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "7445": {"id": 7445, "code": "H = 210;N = 5\nN_list = [31, 41, 59, 26, 53]\nfor i in range(0, N):\n    H -= N_list[i]\nif H <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "8870": {"id": 8870, "code": "N = 1\nA = [2]\nB = [3]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6165": {"id": 6165, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in range(n):\n    mid = b[i]\n    hi = bisect.bisect_left(a, mid)\n    lo = n - bisect.bisect_right(c, mid)\n    ans += hi * lo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12429": {"id": 12429, "code": "S = \"atcoder\"\nn = len(S)\nconfS = S[::-1]\nflag1 = False\nflag2 = False\nflag3 = False\ns1 = S[0:int((n-1)/2)]\nconfs1 = s1[::--1]\ns2 = S[int((n+3)/2)-1:n]\nconfs2 = s2[::-1]\nif S == confS:\n  flag1 = True\nif s1 == confs1:\n  flag2 = True\nif s2 == confs2:\n  flag3 = True\nif flag1 and flag2 and flag3:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">"]}, "10338": {"id": 10338, "code": "A = 8;B = 12;K = 2\ni_list = []\nfor i in range(1, A + 1):\n    if A % i == 0 and B % i == 0:\n        i_list.append(i)\nprint(i_list[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "13614": {"id": 13614, "code": "a = \"haiku,atcoder,tasks\"\nA = a.replace(\",\",\" \")\nprint(A)", "coverage": [">", ">", ">"]}, "5173": {"id": 5173, "code": "s = \"internationalization\"\nh = s[0]\nt = s[-1]\nn = str(len(s[1:-1]))\nprint(h+n+t)", "coverage": [">", ">", ">", ">", ">"]}, "16249": {"id": 16249, "code": "n = 2\nl = [100, 0]\nm=max(l)\nl.remove(m)\nif m%2!=0:\n  med=(m+1)//2\nelse:\n  med=m//2\nmi=m\nfor ll in l:\n  mi=min(mi,abs(ll-med))\nif med+mi in l:\n  print(m,med+mi)\nelse:\n  print(m,med-mi)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9905": {"id": 9905, "code": "N = 3\nX=0\nS = \"())\"\nT,U='',''\nfor i in range(N):\n  if S[i]=='(':\n    X+=1\n  else:\n    if X==0:\n      T+='('\n    else:\n      X-=1\nU=')'*X\nprint(T+S+U)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "13041": {"id": 13041, "code": "n = 6\nprint('YES' if n == 3 or n== 5 or n== 7 else 'NO')", "coverage": [">", ">"]}, "13632": {"id": 13632, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "12122": {"id": 12122, "code": "md1 = \"11 30\"\nmd2 = \"12 1\"\nm1st,d1st=md1.split()\nm2st,d2st=md2.split()\nm1=int(m1st)\nd1=int(d1st)\nm2=int(m2st)\nd2=int(d2st)\nif d2==1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "14864": {"id": 14864, "code": "N = 2;P = 0\nA = [1, 3]\nodd = 0\nfor v in A:\n    if  v % 2:\n        odd += 1 \neven = N-odd\nif odd != 0:\n    print((2**even)*int(2**(odd-1)))\nelse:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "12812": {"id": 12812, "code": "n = \"5\"\nprint(\"YES\" if n in \"753\" else \"NO\")", "coverage": [">", ">"]}, "9421": {"id": 9421, "code": "s = \"2017/01/31\"\nprint(\"2018\"+s[4:])", "coverage": [">", ">"]}, "10049": {"id": 10049, "code": "n = 6\ns = \")))())\"\nx = 0\nxmin = 0\nfor c in s:\n  if c == '(':\n    x += 1\n  else:\n    x -= 1\n    xmin = min(xmin, x)\nprint('(' * (-xmin) + s + ')' * (x - xmin))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14112": {"id": 14112, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\ncur = 'N'\ni = 1\nwhile i < N:\n    if cur == 'U':\n        if A[i] < A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'D':\n        if A[i] > A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'N':\n        if A[i] > A[i-1]:\n            cur = 'U'\n        elif A[i] < A[i-1]:\n            cur = 'D'\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "6749": {"id": 6749, "code": "attack = []\nh = 10;n = 3\na = ['4', '5', '6']\nfor move in a:\n    move = int(move)\n    attack.append(move)\nresult = h - sum(attack)\nif result <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11870": {"id": 11870, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1<M2:print(1)\nelse:print(0)", "coverage": [">", ">", ">", ">"]}, "15091": {"id": 15091, "code": "N = 1;P = 1\nA = [50]\ng=k=0\nfor i in A:\n    if i%2:\n        k+=1\n    else:\n        g+=1\na=0\nfrom math import factorial\nif P:\n    for i in range(1,k+1,2):\n        a+=factorial(k)//factorial(i)//factorial(k-i)\nelse:\n    for i in range(0,k+1,2):\n        a+=factorial(k)//factorial(i)//factorial(k-i)\nprint(a*pow(2,g))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "9473": {"id": 9473, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3] = '8'\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "13657": {"id": 13657, "code": "N = 15;M = 3\nA = [5, 4, 6]\ndp = [0] * N + [-1] * 9\nfor i in range(1, N+1):\n    dp[i] = max(dp[i-int('0255456376'[a])] * 10 + a for a in A)\nprint(dp[N])", "coverage": [">", ">", ">", ">", ">", ">"]}, "7135": {"id": 7135, "code": "h = 20;n = 3\nL = [4, 5, 6]\nL.sort(reverse = True)\ncnt = 0\nfor i in range(n):\n    cnt  += L[i]\n    if cnt >= h:\n        print(\"Yes\")\n        exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16695": {"id": 16695, "code": "a = True;b = True\nf = b if a else not b\nprint(\"H\" if f else \"D\")", "coverage": [">", ">", ">"]}, "1932": {"id": 1932, "code": "N = 100;A = 100;B = 100\nif(A<B):\n    max = A\nelse:\n    max = B\nmin = A+B\nif(min>N):\n    min = min - N\nelse:\n    min = 0\nprint(max,min)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "12469": {"id": 12469, "code": "S = \"atcoder\"\nrS=S[::-1]\nle=len(S)\ncent=int((le+1)/2)\nS1=S[0:cent-1]\nS2=S[cent:]\nrS1=S1[::-1]\nrS2=S2[::-1]\nif S==rS and S1==rS1 and S2==rS2:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3163": {"id": 3163, "code": "import sys\ninint = \"<function <lambda>>\"\ninintm = \"<function <lambda>>\"\ninintl = lambda: list(inintm())\ninstrm = \"<function <lambda>>\"\ninstrl = lambda: list(instrm())\ns = \"35753\"\nbase = 753\nans = 1000\nfor i in range(len(s)-2):\n    if abs(base - int(s[i:i+3])) < ans:\n        ans = abs(base - int(s[i:i+3]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18059": {"id": 18059, "code": "S = \"0112\"\na,b = int(S[:2]),int(S[2:])\nif (1<=a and a<=12) or (1<=b and b<=12):\n    if (1<=a and a<=12) and (1<=b and b<=12): \n        print(\"AMBIGUOUS\")\n    elif (1<=b and b<=12):\n        print(\"YYMM\")\n    elif  (1<=a and a<=12): \n        print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "5555": {"id": 5555, "code": "n = 2\na=0\nif n%2==0:\n  a=int(n/2)\nelse:\n  a=int(n/2)+1\nprint(a)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "1154": {"id": 1154, "code": "N = 750\nprint(111*(0--N//111))", "coverage": [">", ">"]}, "10855": {"id": 10855, "code": "s = \"level\"\nn=int((len(s)-1)/2)\nc=0\nfor i in range(n):\n  if s[i] == s[i+n+1]:\n    c+=1\nif c==n:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "17319": {"id": 17319, "code": "a = \"H\";b = \"H\"\nhd = \"HD\"\nprint(hd[(hd.index(a) + hd.index(b)) % 2])", "coverage": [">", ">", ">"]}, "3044": {"id": 3044, "code": "s = \"35753\"\nans=1000\nvalue=\"\"\nfor i in range(len(s)-2):\n    value=s[i:i+3]\n    if abs(753-int(value))<=ans:\n        ans=abs(753-int(value))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13710": {"id": 13710, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ns = (h1*60)+m1\ne = (h2*60)+m2\nprint(e-s-k)", "coverage": [">", ">", ">", ">"]}, "10800": {"id": 10800, "code": "S = \"level\"\ni=0\nkot=[]\nfor a in S:\n    kot.append(a)\ntok=list(reversed(kot))\nfor a in range(len(kot)):\n    if kot[a]==tok[a]:\n        i=0\n    else:\n        print(\"No\")\n        i=1\n        break\nif i==0:\n    for a in range(int((len(kot)-1)/2)):\n        if kot[a]==tok[int((len(kot)-1)/2)-a-1]:\n            i=0\n        else:\n            print(\"No\")\n            i=1\n            break\nif i==0:\n        for a in range(int((len(kot)-1)/2)):\n            if kot[int((len(kot)+3)/2)+a-1]==tok[-a-1]:\n                i=0\n            else:\n                print(\"No\")\n                i=1\n                break\nif i==0:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!"]}, "18713": {"id": 18713, "code": "import math\nH = 14\nW = 12\nN = 112\nn = max(H,W)\nprint(math.ceil(N/n))", "coverage": [">", ">", ">", ">", ">", ">"]}, "455": {"id": 455, "code": "s = \"xyz\"\nk = 4\nn=len(s)\ni=0\nans=\"\"\nwhile i<n:\n    if i!=n-1:\n        if s[i]==\"a\":\n            ans+=\"a\"\n        elif k>=123-ord(s[i]):\n            ans+=\"a\"\n            k-=(123-ord(s[i]))\n        else:\n            ans+=s[i]\n    else:\n        if k>=123-ord(s[i]):\n            k-=(123-ord(s[i]))\n            k=k%26\n            ans+=chr(97+k)\n        else:\n            ans+=chr(ord(s[i])+k)\n    i+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6852": {"id": 6852, "code": "import math\nH = 211;N = 5\nA = [31, 41, 59, 26, 53]\nif H <= sum(A):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8968": {"id": 8968, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nprint(\":(\" if max(a,b,c,d,e) - min(a,b,c,d,e) > k else \"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15729": {"id": 15729, "code": "X = 64145;Y = 123;Z = 456\nnum = (X - Z) // ( Y + Z)\nprint(num)", "coverage": [">", ">", ">"]}, "6550": {"id": 6550, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\na.sort()\nb.sort()\nc.sort(reverse=True)\nc = [-x for x in c]\nans = 0\nfor x in b:\n    ans += bisect.bisect_left(a, x) * (bisect.bisect_left(c, -x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9501": {"id": 9501, "code": "S = \"2017/01/31\"\nif S[3] == \"7\":\n    S = S[:3] + \"8\" + S[4:]\nprint(S)", "coverage": [">", ">", ">", ">"]}, "9011": {"id": 9011, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif (b - a <= k) and (c - a <= k) and (d - a <= k) and (e - a <= k) and (c - b <= k) and (d - b <= k) and (e - b <= k) and (d - c <= k) and (e - c <= k) and (e - d <= k):\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17618": {"id": 17618, "code": "s = \"1700\"\nyy = [\"%02d\" % i for i in range(100)]\nmm = [\"%02d\" % i for i in range(1, 13)]\nyymm = s[:2] in yy and s[2:] in mm\nmmyy = s[:2] in mm and s[2:] in yy\nprint([\"NA\",\"MMYY\",\"YYMM\",\"AMBIGUOUS\"][yymm*2+mmyy])", "coverage": [">", ">", ">", ">", ">", ">"]}, "6099": {"id": 6099, "code": "n = 100\nprint(int(n/2) if n%2==0 else int(n/2)+1)", "coverage": [">", ">"]}, "6717": {"id": 6717, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif h <= sum(a):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "946": {"id": 946, "code": "k = 2\nans = -1\nx = 7%k\nfor n in range(1,k+10):\n    if x == 0:\n        ans = n\n        break\n    x = (10*x+7)%k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8057": {"id": 8057, "code": "n,k = map(int,\"4 3\".split())\nprint(-((1-n)//(k-1)))", "coverage": [">", ">"]}, "14150": {"id": 14150, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup = dn = False\nans = 1\np = A[0]\nfor a in A:\n    if p < a:\n        up = True\n    elif p > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    p = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1341": {"id": 1341, "code": "N = 750\ncount=0\nfor i in range(1,10):\n    if (N-1)//int(str(i)*3)>=1:\n        count=i\nprint(str(count+1)*3)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5017": {"id": 5017, "code": "import io\nimport math\nsam = \"internationalization\"\nprint(sam[0]+str(len(sam)-2)+sam[-1])", "coverage": [">", ">", ">", ">"]}, "9222": {"id": 9222, "code": "s = \"2017/01/07\"\na = s[5] + s[6]\nb = s[8] + s[9]\nd = \"2018/\" + a + \"/\" + b\nprint(d)", "coverage": [">", ">", ">", ">", ">"]}, "10510": {"id": 10510, "code": "import sys\na = 100;b = 50;k = 4\ntmp=[]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        tmp.append(i)\nprint(tmp[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12057": {"id": 12057, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(0 if a == c else 1)", "coverage": [">", ">", ">"]}, "7400": {"id": 7400, "code": "h = 20;n = 3\nl = [4, 5, 6]\na=0\nfor i in range(n):\n    a+=l[i]\nif a>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6625": {"id": 6625, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nsum = 0\nfor i in range(len(b)):\n    ai = bisect.bisect_left(a, b[i])\n    ci = bisect.bisect_right(c, b[i])\n    sum += ai * (n - ci)\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4473": {"id": 4473, "code": "if __name__ == '__main__':\n    a = \"xyz\"\n    print(a[0] + str(len(a)-2)+a[len(a)-1])", "coverage": [">", ">", ">"]}, "691": {"id": 691, "code": "k = 2\na = 7\nflag = 0\nfor i in range(1,k+1):\n    if a % k == 0:\n        print(i)\n        flag = 1\n        break\n    a = 10*(a%k) + 7\nif flag == 0:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "12802": {"id": 12802, "code": "N = 5\nprint(\"YES\" if N==3 or N==5 or N==7 else \"NO\")", "coverage": [">", ">"]}, "15791": {"id": 15791, "code": "a = 64145;b = 123;c = 456\nprint((a-c)//(b+c))", "coverage": [">", ">"]}, "3328": {"id": 3328, "code": "a = \"12\";b = \"4\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8235": {"id": 8235, "code": "import sys,math\ninput = sys.stdin.readline\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(1+math.ceil((N-K)/(K-1)))", "coverage": [">", ">", ">", ">", ">"]}, "7150": {"id": 7150, "code": "a = 20;b = 3\nc = [4, 5, 6]\nif sum(c) >= a:\n    print('Yes')\nif sum(c) < a:\n    print('No')", "coverage": [">", ">", ">", "!", ">", ">"]}, "15476": {"id": 15476, "code": "x = 64146;y = 123;z = 456\ntmp = (x-z)//(y+z)\namari = (x-z)%(y+z)\nprint(tmp)", "coverage": [">", ">", ">", ">"]}, "13653": {"id": 13653, "code": "import sys\nstdin=sys.stdin\nip=lambda: int(sp())\nlp = \"<function <lambda>>\"\nsp = \"<function <lambda>>\"\na = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a+' '+b+' '+c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1740": {"id": 1740, "code": "n = 10;a = 7;b = 5\nprint(min(a,b))\nif a+b <= n:\n    print('0')\nelse:\n    print((a+b)-n)", "coverage": [">", ">", ">", "!", "!", ">"]}, "550": {"id": 550, "code": "a = \"codefestival\"\nn=len(a)\nm = 100\nans=\"\"\nfor i in range(n-1):\n  if a[i]==\"a\":\n    ans += \"a\"\n    continue\n  x=ord(a[i])-97\n  if m>=26-x:\n    ans += \"a\"\n    m -= 26-x\n  else:\n    ans += a[i]\nans += chr((ord(a[n-1])-97+m)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "3270": {"id": 3270, "code": "a = 12;b = 4\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "8871": {"id": 8871, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nacount=0\nbcount=0\nans=0\nfor i in range(n):\n  bcount=0\n  acount+=a[i]\n  for j in range(i,n):\n    bcount+=b[j]\n    if ans<acount+bcount:\n      ans=acount+bcount\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7160": {"id": 7160, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nc = 0\nfor i in range(n):\n  c = c + a[i]\nif (c >= h):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6482": {"id": 6482, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\ntotal = 0\nfor i in range(N):\n    a = bisect.bisect_left(A,B[i])\n    c = N - bisect.bisect_right(C,B[i])\n    total += a*c\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4921": {"id": 4921, "code": "letter = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nans = letter[0] + str(len(letter)-2) + letter[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "4713": {"id": 4713, "code": "s = ['x', 'y', 'z']\nprint(\"\".join([s[0]] + [str(len(s[1:-1]))] + [s[-1]]))", "coverage": [">", ">"]}, "16325": {"id": 16325, "code": "N = 2\na = [100, 0]\na.sort(reverse=True)\nx = a[0] // 2\nl = 1\nr = N - 1\nwhile r - l > 1:\n    mid = l + (r - l) // 2\n    if a[mid] < x:\n        r = mid\n    else:\n        l = mid\nif abs(x - a[l]) <= abs(x - a[r]):\n    print(a[0], a[l])\nelse:\n    print(a[0], a[r])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "17910": {"id": 17910, "code": "s = \"1905\"\nn1 = s[0:2]\nn2 = s[2:4]\nif int(n1) > 12 and int(n2) > 12:\n    out_print = 'NA'\nelif int(n1) <= 12 and int(n2) <= 12:\n    out_print = 'AMBIGUOUS'\n    if int(n1) == 0 and int(n2)!=0:\n        out_print = 'YYMM'\n    elif int(n1) != 0 and int(n2) == 0:\n        out_print = 'MMYY'\n    elif int(n1)==0 and int(n2)==0:\n        out_print = 'NA'\nelif int(n1) <= 12 and int(n2) >12:\n    out_print = 'MMYY'\n    if int(n1) == 0:\n        out_print = 'NA'\nelif int(n1) > 12 and int(n2) <= 12:\n    out_print = 'YYMM'\n    if int(n2) == 0:\n        out_print = 'NA'\nprint(out_print)", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", ">", ">", ">", "!", ">"]}, "11170": {"id": 11170, "code": "S = \"level\"\nL=len(S)\nans=0\nS1=S[:(L-1)//2]\nS2=S[((L+3)//2)-1:]\nif (S==S[::-1]) & (S1==S1[::-1]) & (S2==S2[::-1]):\n    ans='Yes'\nelse:\n    ans='No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13821": {"id": 13821, "code": "n = 7\nal = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n == 1:\n    print(1)\n    exit()\nif al[1] > al[0]:\n    now = 'U'\nelif al[1] < al[0]:\n    now = 'D'\nelse:\n    now = 'E'\ncnt = 1\nfor i in range(2, n):\n    if now == 'U':\n        if al[i] > al[i-1] or al[i] == 'E':\n            now = 'U'\n        elif al[i] < al[i-1]:\n            cnt += 1\n            i += 1\n            now = 'E'\n    elif now == 'D':\n        if al[i] < al[i-1] or al[i] == 'E':\n            now = 'D'\n        elif al[i] > al[i-1]:\n            cnt += 1\n            now = 'E'\n    elif now == 'E':\n        if al[i] == al[i - 1]:\n            now = 'E'\n        elif al[i] > al[i - 1]:\n            now = 'U'\n        elif al[i] < al[i - 1]:\n            now = 'D'\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "895": {"id": 895, "code": "K = 2\na = 0\nfor i in range(K):\n    a = (10 * a + 7) % K\n    if a % K == 0:\n        print(i+1)\n        exit()\n    else:\n        a %= K\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "7551": {"id": 7551, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint(\"Yes\" if sum(a)>=h else \"No\")", "coverage": [">", ">", ">"]}, "194": {"id": 194, "code": "alpha = \"abcdefghijklmnopqrstuvwxyz\"\nA = [\"a\"]+[i for i in alpha[::-1]]\ns = ['a']\nk = 25\nn = len(s)\nfor i in range(n):\n    if s[i] == \"a\":\n        continue\n    j = A.index(s[i])\n    if j <= k:\n        s[i] = \"a\"\n        k -= j\n    if k == 0:\n        print(\"\".join(s))\n        exit()\nelse:\n    k %= 26\n    l = alpha.index(s[-1])\n    if l + k <= 25:\n        s[-1] = alpha[k+l]\n    else:\n        s[-1] = alpha[k+l-26]\n    print(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "8649": {"id": 8649, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\nimport copy\nimport bisect\nif __name__  == \"__main__\":\n    n = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ruiseki_wa = [0]*(n)\n    ruiseki_wa[0] = A1[0]\n    for i in range(1,n):\n        ruiseki_wa[i] = ruiseki_wa[i-1] + A1[i]\n    ans = 0\n    for i in range(n):\n        c = ruiseki_wa[i]\n        for j in range(i,n):\n            c += A2[j]\n        ans = max(ans,c)\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11318": {"id": 11318, "code": "s = \"SAT\"\nl = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7 - (l.index(s)))", "coverage": [">", ">", ">"]}, "17576": {"id": 17576, "code": "S = 1700\nYYMM = 0\nMMYY = 0\nif S % 100 >= 1 and S % 100 <= 12:\n    YYMM = 1\nif S // 100 >= 1 and S // 100 <= 12:\n    MMYY = 1\nif YYMM == 0 and MMYY == 0:\n    print('NA')\nelif YYMM == 0 and MMYY == 1:\n    print('MMYY')\nelif YYMM == 1 and MMYY == 0:\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9178": {"id": 9178, "code": "ds = \"2017/01/07\"\nds=ds.replace(\"2017\",\"2018\")\nprint(ds)", "coverage": [">", ">", ">"]}, "11942": {"id": 11942, "code": "md = [11, 16]\nmmd = [11, 17]\nif md[0] != mmd[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1985": {"id": 1985, "code": "n = 10;a = 3;b = 5\nprint(str(min(a,b)) + \" \" + str(max(0,a + b - n)))", "coverage": [">", ">"]}, "9037": {"id": 9037, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nresult='Yay!'\nq=[a,b,c,d,e]\nfor i in q:\n    for x in q:\n        if i-x>k:\n            result=':('\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14974": {"id": 14974, "code": "n = 2;p = 0\na = [1, 3]\nmod = {0:0, 1:0}\nfor i in a:\n    mod[i % 2] += 1\nans = 0\nfor i in range(p, mod[1] + 1, 2):\n    temp = 1\n    for j in range(i):\n        temp *= mod[1] - j\n        temp //= j + 1\n    ans += temp\nfor i in range(mod[0]):\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14943": {"id": 14943, "code": "inp1 = 3;inp2 = 0\nc = [1, 1, 1]\nadd = sum(c)\nif add:\n    ans = 2**(inp1-1)\nelse:\n    ans = 2**inp1*(1-inp2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11491": {"id": 11491, "code": "a={\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(a[\"SUN\"])", "coverage": [">", ">"]}, "12946": {"id": 12946, "code": "X = \"5\"\nif X == \"7\" or X == \"5\" or X == \"3\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "3816": {"id": 3816, "code": "x = 100000;y = 1;z = 1\nx -= z * 2\nc = x // (y + z)\nif x - (y + z) * c >= y:\n    c += 1\nprint(c)", "coverage": [">", ">", ">", ">", "!", ">"]}, "14713": {"id": 14713, "code": "N = 2;P = 0\nAlist = [1, 3]\nguuki = [A%2 for A in Alist]\nodd = guuki.count(1)\neven = guuki.count(0)\nif odd == 0:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "9436": {"id": 9436, "code": "N = \"2017/01/07\"\nprint(\"2018\"+N[4:])", "coverage": [">", ">"]}, "11240": {"id": 11240, "code": "s = \"SAT\"\nif s==\"SUN\":\n    print(7)\nelif s==\"MON\":\n    print(6)\nelif s==\"TUE\":\n    print(5)\nelif s==\"WED\":\n    print(4)\nelif s==\"THU\":\n    print(3)\nelif s==\"FRI\":\n    print(2)\nelse:\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14012": {"id": 14012, "code": "from itertools import groupby\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nB = []\nfor key, v in groupby(A):\n    B.append(key)\ndiff = []\nfor i in range(len(B) - 1):\n    diff.append(1 if B[i] < B[i + 1] else -1)\nnums = []\nfor d, v in groupby(diff):\n    nums.append(len(list(v)))\nis_can_del = 0\nans = 0\nfor n in nums:\n    if n == 1 and is_can_del == 1:\n        is_can_del = 0\n    else:\n        ans += 1\n        is_can_del = 1\nif is_can_del == 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">"]}, "16700": {"id": 16700, "code": "a = \"D\";b = \"D\"\nif a == \"H\" and b == \"D\":\n    print(\"D\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"H\" and b == \"D\":\n    print(\"D\")\nelif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "17299": {"id": 17299, "code": "l = ['D', 'H']\nif (l[0]=='H' and l[1]=='H') or (l[0]=='D' and l[1]=='D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "3162": {"id": 3162, "code": "import sys\ninint = \"<function <lambda>>\"\ninintm = \"<function <lambda>>\"\ninintl = lambda: list(inintm())\ninstrm = \"<function <lambda>>\"\ninstrl = lambda: list(instrm())\ns = \"1234567876\"\nbase = 753\nans = 1000\nfor i in range(len(s)-2):\n    if abs(base - int(s[i:i+3])) < ans:\n        ans = abs(base - int(s[i:i+3]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4589": {"id": 4589, "code": "s = \"smiles\"\nprint(s[0], str(len(s) - 2), s[-1], sep='')", "coverage": [">", ">"]}, "7447": {"id": 7447, "code": "a = \"10\";b = \"3\"\na=int(a)\nb=int(b)\nc = [4, 5, 6]\nif sum(c)>=a:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3504": {"id": 3504, "code": "a = 20;b = 30\nres = a-2*b if (a-2*b >= 0) else 0\nprint(res)", "coverage": [">", ">", ">"]}, "1156": {"id": 1156, "code": "n = \"112\"\nmemo = int( n[0] + n[0] + n[0] )\nif int(n) <= memo:\n\tprint(memo)\nelse:\n\tprint(memo + 111)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18582": {"id": 18582, "code": "H = 14\nW = 12\nN = 112\nB=max(H,W)\nans=(N+B-1)//B\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18189": {"id": 18189, "code": "S = \"0112\"\nyy = int(S[0:2])\nmm = int(S[2:])\nyymm = False\nmmyy = False\nif yy > 0 and yy < 13:\n    mmyy = True\nif mm > 0 and mm < 13:\n    yymm = True\nif yymm and mmyy :\n    print(\"AMBIGUOUS\")\nelif yymm and not mmyy:\n    print(\"YYMM\")\nelif not yymm and mmyy:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10941": {"id": 10941, "code": "s = \"akasaka\"\nn = len(s)\nf = s[:(n-1)//2]\nl = s[1+((n-1)//2):]\nprint(\"Yes\" if s==s[::-1] and f==f[::-1] and l==l[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "5242": {"id": 5242, "code": "Astr = \"internationalization\"\nresult=Astr[0]+str(len(Astr)-2)+Astr[len(Astr)-1]\nprint(result)", "coverage": [">", ">", ">"]}, "10506": {"id": 10506, "code": "A = 1;B = 1;K = 1\nli = [x for x in range(1,A+1) if A%x == 0 and B%x == 0]\nprint(li[-K])", "coverage": [">", ">", ">"]}, "15475": {"id": 15475, "code": "x = 100000;y = 1;z = 1\ntmp = (x-z)//(y+z)\namari = (x-z)%(y+z)\nprint(tmp)", "coverage": [">", ">", ">", ">"]}, "19327": {"id": 19327, "code": "N = 10\nprint(N) if N % 2 == 0 else print(2*N)", "coverage": [">", ">"]}, "17085": {"id": 17085, "code": "a = \"H\";b = \"H\"\nif a == b:\n  ans = 'H'\nelse:\n  ans = 'D'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "854": {"id": 854, "code": "k = 2\na=0\ncnt=-1\nfor i in range(1,k+1):\n  a=(10*a+7)%k\n  if a==0:\n    cnt=i\n    break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10942": {"id": 10942, "code": "s = \"level\"\nn = len(s)\nf = s[:(n-1)//2]\nl = s[1+((n-1)//2):]\nprint(\"Yes\" if s==s[::-1] and f==f[::-1] and l==l[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "7945": {"id": 7945, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((N-1 + K-1 -1)//(K-1))", "coverage": [">", ">", ">"]}, "11878": {"id": 11878, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1!=m2:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "16080": {"id": 16080, "code": "a = [20, 15]\nx = a[1]*2\nif x>=a[0]:\n    print(0)\nelse:\n    print(a[0]-x)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18220": {"id": 18220, "code": "H = 14\nW = 12\nN = 112\nm = max(H, W)\nprint((N + m - 1) // m)", "coverage": [">", ">", ">", ">", ">"]}, "12351": {"id": 12351, "code": "S = \"akasaka\"\nN = len(S)\nans = 'No'\nif S == S[::-1] and S[:(N-1)//2] == S[:(N-1)//2][::-1] and S[(N+1)//2:] == S[(N+1)//2:][::-1]:\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15354": {"id": 15354, "code": "X = 64145;Y = 123;Z = 456\nprint((X-Z)//(Z+Y))", "coverage": [">", ">"]}, "984": {"id": 984, "code": "import bisect\nN = 112\narr = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nans_idx = bisect.bisect_left(arr, N)\nprint(arr[ans_idx])", "coverage": [">", ">", ">", ">", ">"]}, "6935": {"id": 6935, "code": "H = 10;N = 3\nA = [4, 5, 6]\nprint(\"Yes\" if sum(A)>=H else \"No\")", "coverage": [">", ">", ">"]}, "6451": {"id": 6451, "code": "import sys\nimport bisect\ninput = sys.stdin.readline\nnum=0\nn = 3\ntop = [1, 1, 1]\nmid = [2, 2, 2]\nund = [3, 3, 3]\ntop.sort()\nmid.sort()\nund.sort()\nfor i in mid:\n    a=bisect.bisect_left(top,i)\n    c=n-bisect.bisect_right(und,i)\n    num+=a*c\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5679": {"id": 5679, "code": "a = 100\nprint(-(-a//2))", "coverage": [">", ">"]}, "3251": {"id": 3251, "code": "a = 20;b = 30\nprint((a-b*2)*(a>b*2)or 0)", "coverage": [">", ">"]}, "2931": {"id": 2931, "code": "S = \"1234567876\"\nt = 1000\nfor s in range(len(S)-2):\n    t = min(abs(753 - int(S[s:s+3])),t)\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "977": {"id": 977, "code": "import sys\ninput = sys.stdin.readline\nN = 111\nprint(((N-1)//111 +1) * 111)", "coverage": [">", ">", ">", ">"]}, "7483": {"id": 7483, "code": "H = 10;N = 3\ndata = [4, 5, 6]\nif H - sum(data) > 0:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", "!", ">"]}, "8951": {"id": 8951, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "739": {"id": 739, "code": "K = 2\nx = 7\nfor i in range(K):\n  if x % K == 0:\n    print(i+1)\n    exit()\n  else:\n    x = (10*x + 7) % K\nprint(-1)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "15931": {"id": 15931, "code": "A = 20;B = 30\nX = A-B*2\nif X < 0:\n  print (0)\nelse:\n  print (X)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18257": {"id": 18257, "code": "H = 3\nW = 7\nN = 10\nA_div, A_mod = divmod(N, H)\nif A_mod != 0:\n    A_div += 1\nB_div, B_mod = divmod(N, W)\nif B_mod != 0:\n    B_div += 1\nprint(min(A_div, B_div))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6880": {"id": 6880, "code": "H = 20;N = 3\na = [4, 5, 6]\na.sort()\nreversed(a)\nflag = True\nfor i in range(N):\n  H-=a[i]\n  if H<=0:\n    flag = False\n    print('Yes')\n    break\nif flag == True:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "744": {"id": 744, "code": "k = 2\nans = 1\nseven = 7\nfor i in range(k):\n    if seven % k == 0:\n        print(ans)\n        exit()\n    seven = (seven * 10 + 7) % k\n    ans += 1\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17394": {"id": 17394, "code": "s = \"1905\"\nflag=[0,0]\nif 1<=int(s[0:2])<=12:\n    flag[0]=1\nif 1<=int(s[2:4])<=12:\n    flag[1]=1\nif flag==[0,0]:\n    print(\"NA\")\nif flag==[1,0]:\n    print(\"MMYY\")\nif flag==[0,1]:\n    print(\"YYMM\")\nif flag==[1,1]:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!"]}, "8334": {"id": 8334, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11019": {"id": 11019, "code": "s = \"atcoder\"\nN = len(s)\ns_first = s[:(N-1)//2]\ns_second = s[(N+1)//2:]\nif(s == s[::-1] and s_first == s_first[::-1] and s_second == s_second[::-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4875": {"id": 4875, "code": "s = \"xyz\"\nans=[]\nans.append(s[0])\nans.append(len(s)-2)\nans.append(s[-1])\nprint(*ans,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "5284": {"id": 5284, "code": "n = {'9', '2', '1'}\nk={'1','9','7','4'}\nif n==k:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12013": {"id": 12013, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == 12 and m2 == 1:\n\tprint(\"1\")\nelif m2 - m1 == 1:\n\tprint(\"1\")\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", ">", "!", "!", ">"]}, "3342": {"id": 3342, "code": "A = 20;B = 30\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12781": {"id": 12781, "code": "X = \"6\"\nprint(\"YES\" if X in \"753\" else \"NO\")", "coverage": [">", ">"]}, "15758": {"id": 15758, "code": "X = 64145;Y = 123;Z = 456\nN = ((X - Z ) // (Y + Z))\nprint(N)", "coverage": [">", ">", ">"]}, "5656": {"id": 5656, "code": "n = 5\nans = 0\nif n%2 == 0:\n    ans = n//2\n    print(ans)\nelse:\n    ans = n//2 +1\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", ">", ">"]}, "17927": {"id": 17927, "code": "S = 1700\nb=S%100\na=S//100\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12:\n    print('MMYY')\nelif 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17904": {"id": 17904, "code": "S = \"1905\"\nsform = int(S[:2])\nslatt = int(S[2:])\nif sform <= 12 and sform >= 1:\n    if slatt <= 12 and slatt >= 1:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if slatt <= 12 and slatt >= 1:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "17146": {"id": 17146, "code": "a = \"H\";b = \"H\"\nif b == \"H\":\n    b = \"HD\"\nelse:\n    b = \"DH\"\nprint(b[0] if a == \"H\" else b[1])", "coverage": [">", ">", ">", "!", "!", ">"]}, "7462": {"id": 7462, "code": "n = 211;m = 5\nl = [31, 41, 59, 26, 53]\ns=sum(l)\nif(s>=n):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3259": {"id": 3259, "code": "x = \"20 15\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "6986": {"id": 6986, "code": "H = 211;N = 5\nlst = [31, 41, 59, 26, 53]\ns=sum(lst)\nif s>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19156": {"id": 19156, "code": "n = 12\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    tmp = 10\n    while tmp <= n:\n        ans += n//tmp\n        tmp *= 5\n    print(int(ans))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "1456": {"id": 1456, "code": "N = 111\na = 0\nfor i in range(N,1000):\n  if i == 111 or i == 222 or i == 333 or i ==444 or i ==555 or i == 666 or i ==777 or i ==888 or i == 999:\n    a = i\n    break\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7242": {"id": 7242, "code": "H = 211;N = 5\na = [31, 41, 59, 26, 53]\na1=sum(a)\nif(a1>=H):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6932": {"id": 6932, "code": "import math\na = 20;b = 3\nA = [4, 5, 6]\nif a<=sum(A):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6449": {"id": 6449, "code": "from bisect import bisect_right\nfrom itertools import accumulate\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0] * N\nfor i,b in enumerate(B):\n    r = bisect_right(C, b)\n    Bcnt[i] = N - r\nBcnt = [0] + list(accumulate(Bcnt))\nAcnt = [0] * N\nfor i,a in enumerate(A):\n    r = bisect_right(B, a)\n    Acnt[i] = Bcnt[N] - Bcnt[r]\nprint(sum(Acnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11024": {"id": 11024, "code": "a = \"level\"\nc=len(a)\nb=a[:(c-1)//2]\nd=a[(c+3)//2-1:]\nif a==a[::-1] and b==b[::-1] and d==d[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15502": {"id": 15502, "code": "x = 64145;y = 123;z = 456\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "14274": {"id": 14274, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\na = 0\nS = 0\nnum = 1\nfor i in range(1,N):\n    if A[i] - A[i - 1] == 0:\n        a = 0\n    elif A[i] - A[i - 1] > 0:\n        a = 1\n    else:\n        a = 2\n    if S == 0:\n        S = a\n    elif (S != a) and (a != 0):\n        num += 1\n        S = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "599": {"id": 599, "code": "s = \"codefestival\"\nk = 100\nf = lambda x: (ord('a') - ord(x))%26\nans = ''\nfor c in s:\n    if k>=f(c):\n        ans += 'a'\n        k -= f(c)\n    else:\n        ans += c\nans = ans[:-1] + chr(ord('a') + (ord(ans[-1])-ord('a')+k)%26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7316": {"id": 7316, "code": "h = 211;n = 5\nA = [31, 41, 59, 26, 53]\nfor i in range(n):\n  h-= A[i]\nif h>0:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "13841": {"id": 13841, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount=1\nsign=0\nfor i in range(N-1):\n    diff=A[i+1]-A[i]\n    if sign*diff<0:\n        count+=1\n        sign=0\n    elif sign==0:\n        sign=diff\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "723": {"id": 723, "code": "k = 2\nn = 7\ncnt = 1\nfor i in range(k):\n    if n % k == 0:\n        break\n    n = (n*10 + 7) % k\n    cnt += 1\nif n % k == 0:\n    print(cnt)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "12149": {"id": 12149, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif (m2 - m1) % 12 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4070": {"id": 4070, "code": "H1 = 10;H2 = 0;H3 = 15;H4 = 0;K = 30\nup = H1*60 + H2\ndown = H3*60 + H4\nprint(down - up - K)", "coverage": [">", ">", ">", ">"]}, "14296": {"id": 14296, "code": "import sys\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N == 1:\n    print(1)\n    sys.exit()\ninc = 0  \nans = 1\nfor i in range(N - 1):\n    if A[i] < A[i + 1]:\n        if inc == -1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = 1\n    elif A[i] > A[i + 1]:\n        if inc == 1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = -1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15386": {"id": 15386, "code": "X = 13;Y = 3;Z = 1\nX_new = X-Z\nprint(int(X_new /(Z+Y)))", "coverage": [">", ">", ">"]}, "18972": {"id": 18972, "code": "n = 12\nm = n//10\nf = []\nwhile m:\n    f.append(m%5)\n    m //= 5\nprint(0 if n%2 else sum(a*(5**(i+1)//4) for i, a in enumerate(f)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17437": {"id": 17437, "code": "S = \"0112\"\nl = int(S[:2])\nr = int(S[2:])\na = 0\nans = ['NA', 'MMYY', 'YYMM', 'AMBIGUOUS']\nif 0 < l and l < 13:\n  a += 1\nif 0 < r and r < 13:\n  a += 2\nprint(ans[a])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6775": {"id": 6775, "code": "hp_m = 210;n = 5\nattack = [31, 41, 59, 26, 53]\ntotal_attack = sum(attack)\nif total_attack >= hp_m:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7356": {"id": 7356, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nS = sum(A)\nif S >= H: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", ">"]}, "17471": {"id": 17471, "code": "s = \"1700\"\na=int(s[:2])\nb=int(s[2:])\nif (a > 12 or a == 0) and (b > 12 or b == 0):\n\tprint(\"NA\")\nelif a > 12 or a == 0:\n\tprint(\"YYMM\")\nelif b > 12 or b == 0:\n\tprint(\"MMYY\")\nelse: print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "17078": {"id": 17078, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "17608": {"id": 17608, "code": "s = \"0112\"\na = int(s[:2])\nb = int(s[2:])\nif 0 < a and a<13:\n    if 0<b and b<13:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelif 0<b and b<13:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "5550": {"id": 5550, "code": "N = 100\nans = (N + 2 - 1) / 2\nprint(int(ans))", "coverage": [">", ">", ">"]}, "9709": {"id": 9709, "code": "n = 8\ns = \"))))((((\"\nwrittenC = 0\nwrittenD = 0\nfor i in range(n):\n    if s[i] == \")\" and writtenC == 0:\n        writtenD += 1\n    elif s[i] == \")\":\n        writtenC -= 1\n    else:\n        writtenC += 1\nprint(\"(\" * writtenD + s + \")\"*writtenC)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5894": {"id": 5894, "code": "n = 2\npages = 0\nif n%2 == 1:\n    pages += 1\npages += n//2\nprint(pages)", "coverage": [">", ">", ">", "!", ">", ">"]}, "2385": {"id": 2385, "code": "n = 4;m = 3\ntot = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(tot)", "coverage": [">", ">", ">"]}, "4718": {"id": 4718, "code": "txt = \"smiles\"\nn=len(txt)-2\nprint(txt[0]+str(n)+txt[-1])", "coverage": [">", ">", ">"]}, "19449": {"id": 19449, "code": "n = 3\nprint(2*n if n%2 else n)", "coverage": [">", ">"]}, "14384": {"id": 14384, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnum = 0\ncount = 1\nmode = 0\nwhile num < n - 1:\n    if a[num] == a[num + 1]:\n        num += 1\n    elif a[num] > a[num + 1]:\n        num += 1\n        if mode == -1:\n            pass\n        elif mode == 0:\n            mode = -1\n        else:\n            count += 1\n            mode = 0\n    else:\n        num += 1\n        if mode == 1:\n            pass\n        elif mode == 0:\n            mode = 1\n        else:\n            count += 1\n            mode = 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "11675": {"id": 11675, "code": "d = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SUN\"\nidx = d.index(s)\nprint(7-idx)", "coverage": [">", ">", ">", ">"]}, "11086": {"id": 11086, "code": "word = \"akasaka\"\nn = len(word)\nhanbun = int((n-1)/2)\nnotk = 0\nfor i in range(hanbun):\n    if word[i] != word[n-i-1]:\n        notk = 1\n        break\nif hanbun % 2 == 0:\n    hanbun2 = int(hanbun/2)\nelse:\n    hanbun2 = int((hanbun-1)/2)\nfor j in range(hanbun2):\n    if word[j] != word[hanbun-j-1]:\n        notk = 1\n        break\nif notk == 1:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "3177": {"id": 3177, "code": "s = \"1234567876\"\nans = 1000000\nfor i in range(len(s)-2):\n    S = s[i]+s[i+1]+s[i+2]\n    S = int(S)\n    q = abs(753-S)\n    ans = min(ans, q)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11546": {"id": 11546, "code": "S = \"SUN\"\nA=[\"a\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"] \nprint(A.index(S))", "coverage": [">", ">", ">"]}, "19403": {"id": 19403, "code": "import sys\nif sys.platform =='ios':\n    sys.stdin=open('input_file.txt')\nN = 3\nif N%2==0:\n\tN=N//2\nprint(N*2)", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "3675": {"id": 3675, "code": "a = 12;b = 4\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "14391": {"id": 14391, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni = 0\nc = 0\nwhile i < n:\n    if i == n - 1:\n        c += 1\n        break\n    if a[i] == a[i+1]:\n        i += 1\n    elif a[i] < a[i+1]:\n        while i < n - 1 and a[i] <= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\n    elif a[i] > a[i+1]:\n        while i < n - 1 and a[i] >= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4232": {"id": 4232, "code": "h = [10, 0, 15, 0, 30]\nm = 0\nm += 60 - h[1]\nif m != 0: h[0] += 1\nm += h[3] + (h[2]-h[0]) * 60\nprint(m-h[-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "1075": {"id": 1075, "code": "n = 112\nhyaku=(n-n%100)/100\nif n%100>hyaku*10+hyaku:\n    hyaku+=1\n    print(int(hyaku*100+hyaku*10+hyaku))\nelse:\n    print(int(hyaku*100+hyaku*10+hyaku))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "17574": {"id": 17574, "code": "S = 1905\nYYMM = 0\nMMYY = 0\nif S % 100 >= 1 and S % 100 <= 12:\n    YYMM = 1\nif S // 100 >= 1 and S // 100 <= 12:\n    MMYY = 1\nif YYMM == 0 and MMYY == 0:\n    print('NA')\nelif YYMM == 0 and MMYY == 1:\n    print('MMYY')\nelif YYMM == 1 and MMYY == 0:\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "3109": {"id": 3109, "code": "s = \"1234567876\"\nd = 999\nfor i in range(len(s) - 2):\n    n = int(s[i: i + 3])\n    d = min(d, abs(n - 753))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18279": {"id": 18279, "code": "h = 14\nw = 12\nn = 112\nans=0\nwhile n>=1:\n  if h>w:\n    n-=h\n    w-=1\n    ans+=1\n  else:\n    n-=w\n    h-=1\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "18527": {"id": 18527, "code": "H = 3\nW = 7\nN = 10\nprint(int(N/max(H,W)) + (1 if N % max(H,W) != 0 else 0))", "coverage": [">", ">", ">", ">"]}, "16946": {"id": 16946, "code": "a = \"D\";b = \"D\"\nif a == b:\n    ans = \"H\"\nelse:\n    ans = \"D\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15849": {"id": 15849, "code": "x = 64146;y = 123;z = 456\na = x-z\nb = a//(y+z)\nprint(b)", "coverage": [">", ">", ">", ">"]}, "9886": {"id": 9886, "code": "n = 8\ns = \"))))((((\"\ndist = 0\nmlow = 0\nfor i in s:\n    if i == \")\":\n        dist -= 1\n        if dist < mlow:\n            mlow = dist\n    else:\n        dist += 1\nleft = \"(\"*(-mlow)\nright = \")\"*(dist-mlow)\nprint(left+s+right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "18304": {"id": 18304, "code": "H = 2\nW = 100\nN = 200\nif N // H > N // W:\n\tprint((N // W) + 1 ) if N % W != 0 else print(N // W)\nelse:\n\tprint((N // H) + 1 ) if N % H != 0 else print(N // H)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "2621": {"id": 2621, "code": "N = \"1 9 7 4\"\nif \"1\" in N and \"9\" in N and \"7\" in N and \"4\" in N:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "8972": {"id": 8972, "code": "a = \"1\"\nb = \"2\"\nc = \"4\"\nd = \"8\"\ne = \"9\"\nk = \"15\"\nif int(e)-int(a)<=int(k):\n  print('Yay!')\nelse :\n  print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7286": {"id": 7286, "code": "h = 211;m = 5\na = [31, 41, 59, 26, 53]\nhissatsu_hp = 0\nfor i in range(0, m):\n    hissatsu_hp += a[i]\nresult = \"\"\nif hissatsu_hp >= h:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12318": {"id": 12318, "code": "S = \"level\"\nN = len(S)\nS_list=[]\nfor i in S:\n    S_list.append(i)   \nrS_list = list(reversed(S_list))\nsecond_list = S_list[:(int((N-1)/2))]\nrsecond_list = list(reversed(second_list))\nthird_list = S_list[(int(((N+3)-1)/2)):N]\nrthird_list = list(reversed(third_list))\nif S_list == rS_list:\n    if second_list == rsecond_list:\n        if third_list == rthird_list:\n            print('Yes')       \n    else:\n            print('No')   \nelse:\n            print('No')    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!"]}, "13423": {"id": 13423, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "10886": {"id": 10886, "code": "s = \"akasaka\"\nn = len(s)\ncen1 = int((n-1)/2)\ncen2 = int((n+3)/2)\nif s == s[::-1] and s[:cen1] == s[cen1-1::-1] and s[cen2-1:n] == s[n:cen2-2:-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "5662": {"id": 5662, "code": "m = 5\nprint(m//2+m%2)", "coverage": [">", ">"]}, "5807": {"id": 5807, "code": "import math\nn = 2\npaper = math.ceil(n/2)\nprint(paper)", "coverage": [">", ">", ">", ">"]}, "1883": {"id": 1883, "code": "n = 10;a = 7;b = 5\nans=[0,0]\nans[0]=min(a,b)\nans[1]=max(0,a+b-n)\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "4755": {"id": 4755, "code": "s = \"xyz\"\na = len(s)\ns1 = s[0]\ns2 = s[a-1]\nb = str(a-2)\nprint(s1+b+s2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2985": {"id": 2985, "code": "s = \"1234567876\"\nres = 1000\nfor i in range(len(s) - 2):\n    tmp = int(s[i : i + 3])\n    res = min(res, abs(tmp - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11988": {"id": 11988, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nprint(1 if d2 == '1' else 0)", "coverage": [">", ">", ">"]}, "9075": {"id": 9075, "code": "import sys\na = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif e - a > k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9095": {"id": 9095, "code": "s = \"2017/01/31\"\nprint(s.replace('2017','2018'))", "coverage": [">", ">"]}, "14618": {"id": 14618, "code": "N = 1;P = 1\nA = map(int, \"50\".split())\nodds, evens = 0, 0\nfor i in A:\n    if i & 1:\n        odds += 1\n    else:\n        evens += 1\nfrom math import factorial\nif P == 0:\n    ans = 0\n    fo = factorial(odds)\n    for r in range(0, odds + 1, 2):\n        ans += fo // (factorial(odds - r) * factorial(r))\n    ans *= 2**evens\nelse:\n    ans = 0\n    fo = factorial(odds)\n    for r in range(1, odds + 1, 2):\n        ans += fo // (factorial(odds - r) * factorial(r))\n    ans *= 2**evens\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "2864": {"id": 2864, "code": "N = \"35753\"\nSta = 753\nAns = 1000\nfor i in range(len(N)-2):\n    C_Ans = abs(Sta-int(\"\".join(N[i:i+3])))\n    if C_Ans < Ans:\n        Ans = C_Ans\nprint(Ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18168": {"id": 18168, "code": "s = \"0112\"\nmonths = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\nif s[:2] in months and s[2:] in months:\n\tprint(\"AMBIGUOUS\")\nelif s[:2] in months and s[2:] not in months:\n\tprint(\"MMYY\")\nelif s[:2] not in months and s[2:] in months:\n\tprint(\"YYMM\")\nelse:\n\tprint(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7798": {"id": 7798, "code": "n = 8;k = 3\na_ls = [7, 3, 1, 8, 4, 6, 2, 5]\nstroke = k - 1\nif k < n:\n    rest = n - k\n    ans = 1 + -(-rest // stroke)\nelse:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11861": {"id": 11861, "code": "m = 11;d = 30\nn = 12;e = 1\nprint(int(e == 1))", "coverage": [">", ">", ">"]}, "10978": {"id": 10978, "code": "s = \"atcoder\"\nn = len(s)\nsl = s[:n//2]\nsr = s[n//2+1:]\nif sl == sr and sr ==  sr[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "1504": {"id": 1504, "code": "N = 112\nL = [111*i for i in range(1,10)]\nans = 0\nfor l in L:\n    if N <= l:\n        ans = l\n        break\nprint(l)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1636": {"id": 1636, "code": "n = 100;a = 100;b = 100\nmaxint = 0\nminInt = 0\nif a <= b:\n  maxInt = a\n  minInt = a - (n-b)\nelse:\n  maxInt = b\n  minInt = b - (n-a)\nif a +b < n :\n    minInt = 0\nprint(maxInt, minInt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "15073": {"id": 15073, "code": "n = 1;p = 1\na = [50]\nodd = 0\nfor i in a:\n    if i%2:\n        odd += 1\neven = n-odd\nans = 0\nfor i in range(0,odd+2,2):\n    if i+p > odd:\n        break\n    for j in range(0,even+1):\n        if j > even:\n            break\n        a = 1\n        for k in range(i+p):\n            a *= (odd-k)\n            a /= k+1\n        b = 1\n        for k in range(j):\n            b *= (even-k)\n            b /= k+1\n        ans += a*b\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13269": {"id": 13269, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c)", "coverage": [">", ">"]}, "15521": {"id": 15521, "code": "x = 64145;y = 123;z = 456\nans = x // (y+z)\nif x < ans * (y+z) + z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2431": {"id": 2431, "code": "even = 1;odd = 1\nprint(int(even * (even-1)/2 + odd * (odd-1)/2))", "coverage": [">", ">"]}, "15661": {"id": 15661, "code": "x = 100000;y = 1;z = 1\nnum = x//(y+z)\nmod = x%(y+z)\nif 0<=mod<z:num-=1\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "6873": {"id": 6873, "code": "H = 20;N = 3\nA = [4, 5, 6]\nfor i in range(1,N+1):\n    H-=A[-i]\n    if H<=0:\n        print('Yes')\n        exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13705": {"id": 13705, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ntotal = (h2-h1)*60\nif m1 <= m2:\n    total += (m2-m1)\nelse:\n    if m2 == 0:\n        total += 60-m1\n        total -= 60\n    else:\n        total -= (m1-m2)\nans = total - k\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "7003": {"id": 7003, "code": "H = 10;N = 3\nlsA = [4, 5, 6]\nprint('Yes' if H <= sum(lsA) else 'No')", "coverage": [">", ">", ">"]}, "18857": {"id": 18857, "code": "n = 3;x = 3\nA = (2, 2, 2)\npre = max(0, A[0] - x)\nans = pre\nfor i in range(n - 1):\n    a = A[i]\n    b = A[i + 1]\n    a -= pre\n    tmp = 0\n    if b > x:\n        tmp += b - x\n        b = x\n    if a + b > x:\n        tmp += a + b - x\n    ans += tmp\n    pre = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "17132": {"id": 17132, "code": "a = \"D\";b = \"D\"\na = 1 if a == \"H\" else -1\nb = 1 if b == \"H\" else -1\nprint(\"H\" if a*b == 1 else \"D\")", "coverage": [">", ">", ">", ">"]}, "7576": {"id": 7576, "code": "H = 211;N = 5\nprint(\"NYoe s\"[H<=sum(map(int,\"31 41 59 26 53\".split()))::2])", "coverage": [">", ">"]}, "17978": {"id": 17978, "code": "S = \"1700\"\nmonths = [i for i in range(1, 13)]\nleft = int(S[:2])\nright = int(S[2:])\nif left in months and right in months:\n    print('AMBIGUOUS')\nelif left in months:\n    print('MMYY')\nelif right in months:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "2183": {"id": 2183, "code": "N = 10;A = 7;B = 5\nmax_ans = min(A,B)\ntmp = A + B - N\nmin_ans = 0 if tmp<=0 else tmp\nprint(max_ans, min_ans)", "coverage": [">", ">", ">", ">", ">"]}, "5116": {"id": 5116, "code": "s = \"internationalization\"\nl=len(s)-2\nprint(str(s[0]),l,str(s[-1]),sep='')", "coverage": [">", ">", ">"]}, "950": {"id": 950, "code": "N = 750\nans_list = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nfor i  in ans_list:\n  if i >= N:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "5738": {"id": 5738, "code": "import sys\nimport math\nfrom math import ceil\ninput = sys.stdin.readline\nprint(ceil(int(\"2\") / 2))", "coverage": [">", ">", ">", ">", ">"]}, "12848": {"id": 12848, "code": "X = \"5\"\nX = int(X)\nif X == 7 or X == 5 or X == 3:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "14030": {"id": 14030, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nbefore = A[0]\nis_ascending = None\nans = 0\nfor a in A:\n    d = a - before\n    if d == 0:\n        pass\n    else:\n        if is_ascending == None:\n            is_ascending = d > 0\n        elif (is_ascending and d < 0) or (not is_ascending and d > 0):\n            ans += 1\n            is_ascending = None\n    before = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "905": {"id": 905, "code": "K = 2\nimport sys\nnum = 0\nfor n in range(K):\n  num = num * 10 + 7\n  if num % K == 0:\n    print(n+1)\n    break\n  num = num % K\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "3974": {"id": 3974, "code": "X = 13;Y = 3;Z = 1\nused_space = Y + (Z * 2)\nans = 0\nwhile True:\n    if used_space > X:\n        break\n    used_space = used_space + Y + Z\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18671": {"id": 18671, "code": "H = 3\nW = 7\nN = 10\nans = 0\nnum = 0\nbig = 0\nif H < W:\n  big = W\nelse:\n  big = H\nwhile num < N:\n  num += big\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "4866": {"id": 4866, "code": "s = ['x', 'y', 'z']\nans = []\nans.append(s[0])\nans.append(str((len(s)-2)))\nans.append(s[-1])\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">"]}, "6057": {"id": 6057, "code": "N = \"100\"\nn=int(N)\na=int(n//2)\nb=int(n%2)\nprint(a+b)", "coverage": [">", ">", ">", ">", ">"]}, "13598": {"id": 13598, "code": "str = \"happy,newyear,enjoy\"\nprint(str.replace(\",\",\" \"))", "coverage": [">", ">"]}, "5280": {"id": 5280, "code": "N = map(int, \"1 7 9 4\".split())\nS = set([1, 9, 7, 4])\nfor n in N:\n    if n in S:\n        S.remove(n)\n    else:\n        print('NO')\n        exit()\nelse:\n    print('YES')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "6943": {"id": 6943, "code": "hp = 10;n = 3\ndamage_list = [4, 5, 6]\ndamage_sum = sum(damage_list)\nif damage_sum >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3122": {"id": 3122, "code": "s = \"1111111111\"\nans = 1000000\nfor i in range(len(s)-1):\n    ans = min(ans, abs(int(s[i:i+3]) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3626": {"id": 3626, "code": "a = 12;b = 4\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", ">"]}, "15406": {"id": 15406, "code": "a = \"12\";b = \"3\";c = \"1\"\na=int(a)\nb=int(b)\nc=int(c)\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">"]}, "19472": {"id": 19472, "code": "n = 999999999\nprint(2*n) if n%2 else print(n)", "coverage": [">", ">"]}, "2987": {"id": 2987, "code": "s = \"1111111111\"\nres = 1000\nfor i in range(len(s) - 2):\n    tmp = int(s[i : i + 3])\n    res = min(res, abs(tmp - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15630": {"id": 15630, "code": "x = 13;y = 3;z = 1\nnum = x-z\nans = 0\nans += num // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "7574": {"id": 7574, "code": "H = 20;N = 3\nprint(\"NYoe s\"[H<=sum(map(int,\"4 5 6\".split()))::2])", "coverage": [">", ">"]}, "18333": {"id": 18333, "code": "a = 14\nb = 12\nn = 112\nt = max(a, b)\nprint((n + t - 1) // t)", "coverage": [">", ">", ">", ">", ">"]}, "10836": {"id": 10836, "code": "S = \"level\"\nn = len(S)\nn\nm = int(((n - 1)/2)-1)\nl = int(((n + 3)/2)-1)\nif S[::1] == S[::-1]:\n        if S[:m+1:] == S[m::-1]:\n            if S[l::] == S[:l-1:-1]:\n                print('Yes')\n                exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "18753": {"id": 18753, "code": "import math\nH = 2\nW = 100\nN = 200\nBig = W if W > H else H\nprint(math.ceil(N / Big))", "coverage": [">", ">", ">", ">", ">", ">"]}, "2674": {"id": 2674, "code": "a = 1;b = 2;c = 9;d = 1\ndict = {}\ndict[a] = 1\ndict[b] = 1\ndict[c] = 1\ndict[d] = 1\nif 1 in dict and 9 in dict and 7 in dict and 4 in dict:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15290": {"id": 15290, "code": "x = 12;y = 3;z = 1\nx-=(y+2*z)\nc=1\nc+=x//(y+z)\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "15260": {"id": 15260, "code": "x = 64145;y = 123;z = 456\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "8032": {"id": 8032, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nx = A.index(1)\ny = N - x - 1\nans = math.ceil(x / (K - 1))\nif x % (K - 1) != 0:\n    y -= K - 1 - (x % (K - 1))\nans += math.ceil(y / (K - 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13183": {"id": 13183, "code": "A = \"abcde\";B = \"fghihgf\";C = \"edcba\"\nprint(A + ' ' + B + ' ' + C)", "coverage": [">", ">"]}, "14397": {"id": 14397, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nnow = A[0]\nkind = 0\nans = 0\nfor i in range(1,N):\n    if kind == 0:\n        if now < A[i]:\n            kind = 1\n        elif now > A[i]:\n            kind = 2\n    elif kind == 1: \n        if now > A[i]:\n            ans += 1\n            kind = 0\n    else: \n        if now < A[i]:\n            ans += 1\n            kind = 0\n    now = A[i]\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "7745": {"id": 7745, "code": "n = 4;k = 3\nl = [2, 3, 1, 4]\nprint(-(-(n-1)//(k-1)))", "coverage": [">", ">", ">"]}, "7481": {"id": 7481, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\ntotal = 0\nfor i in range(N):\n  total += A[i]\nif total >= H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16063": {"id": 16063, "code": "a = 20;b = 30\nif a>=2*b:\n  print(int(a-2*b))\nelse:\n  print('0')", "coverage": [">", ">", "!", "!", ">"]}, "11686": {"id": 11686, "code": "S = \"SAT\"\nweek = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nif S == week[0]:\n  print(7)\nelif S == week[1]:\n  print(6)\nelif S == week[2]:\n  print(5)\nelif S == week[3]:\n  print(4)\nelif S == week[4]:\n  print(3)\nelif S == week[5]:\n  print(2)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "8458": {"id": 8458, "code": "n = 1\na = [2]\nb = [3]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19332": {"id": 19332, "code": "n = 10\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n + n)", "coverage": [">", ">", ">", "!", "!"]}, "8768": {"id": 8768, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8619": {"id": 8619, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = []\nfor i in range(n+1):\n    if i == 0:\n        ans.append(sum(a1))\n    elif 1<=i<=n:\n        ans.append(sum(a1[:i]) + sum(a2[i-1:]))\n    elif i==n:\n        ans.append(sum(a2))\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19055": {"id": 19055, "code": "import sys\ns=0\nN = 12\nif N%2==1:\n  print(0)\n  sys.exit()\nN=N//2\nwhile True:\n  N=N//5\n  s+=N\n  if N==0:\n    break\nprint(s)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17480": {"id": 17480, "code": "S = \"1700\"\nif 1<=int(S[:2])<=12:\n    if 1<=int(S[2:])<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=int(S[2:])<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "13754": {"id": 13754, "code": "i = [10, 0, 12, 0, 120]\nprint((i[2]-i[0])*60+(i[3]-i[1])-i[4])", "coverage": [">", ">"]}, "1259": {"id": 1259, "code": "n = \"112\"\nwhile True:\n  if len(set(list(n))) == 1:\n    print(n)\n    break\n  n = str(int(n)+1)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12975": {"id": 12975, "code": "n = 6\nprint(['NO','YES'][n==3 or n==5 or n==7])", "coverage": [">", ">"]}, "16576": {"id": 16576, "code": "a = \"D\";b = \"H\"\na = (a == \"H\")\nb = (b == \"H\")\nif a and b:\n    print(\"H\")\nelif a and (not b):\n    print(\"D\")\nelif (not a) and b:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "2898": {"id": 2898, "code": "S = \"1111111111\"\nmabs = 2000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < mabs:\n        mabs = abs(int(S[i:i+3])-753)\nprint(mabs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1452": {"id": 1452, "code": "N = 750\nfor i in range(N, 1000):\n    if str(i)[0] == str(i)[1] == str(i)[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "13822": {"id": 13822, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n    elif(flag == 1 and A[i] < cur):\n        flag = -1\n        ans += 1\n    elif(flag == 0 and A[i] > cur):\n        flag = -1\n        ans += 1\n    cur = A[i]\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8693": {"id": 8693, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1342": {"id": 1342, "code": "n = 111\nif n%111==0:\n  print(n)\nelse:\n  print(111*((n+110)//111))", "coverage": [">", ">", ">", "!", "!"]}, "1409": {"id": 1409, "code": "n = 111\nx = (n - 1) // 111 + 1\nprint(x * 100 + x * 10 + x)", "coverage": [">", ">", ">"]}, "11102": {"id": 11102, "code": "S = \"level\"\nL=(len(S)-1)//2\nans='Yes'\nif S[:L]!=S[-L:]:\n    ans='No'\nfor n in range(L):\n    m=L-1-n\n    if S[n]!=S[m]:\n        ans='No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13927": {"id": 13927, "code": "n = 9\nans = 1\na, b = False, False\nx = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nfor i in range(1, n):\n    if x[i] > x[i - 1]:\n        a = True\n    if x[i] < x[i - 1]:\n        b = True\n    if a and b:\n        a, b = False, False\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5047": {"id": 5047, "code": "s = \"internationalization\"\nprint(s[:1]+str(len(s)-2)+s[len(s)-1])", "coverage": [">", ">"]}, "17362": {"id": 17362, "code": "a = \"D\";b = \"H\"\nt = {'HH': 'H', 'HD': 'D', 'DH': 'D', 'DD':'H'}\nprint(t[a+b])", "coverage": [">", ">", ">"]}, "7578": {"id": 7578, "code": "h = 20;n = 3\nprint('No' if sum(list(map(int, \"4 5 6\".split())))<h else 'Yes')", "coverage": [">", ">"]}, "7857": {"id": 7857, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans=(n-1)//(k-1)\nif (n-1)%(k-1)!=0:\n  ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17800": {"id": 17800, "code": "S = \"1700\"\nleft = int(S[:2])\nright = int(S[2:])\nyear_flag = [0, 0]\nif left > 12 or left == 0:\n    year_flag[0] += 1\nif right > 12 or right == 0:\n    year_flag[1] += 1\nif sum(year_flag) == 2:\n    print('NA')\nelif sum(year_flag) == 0:\n    print('AMBIGUOUS')\nelif year_flag[0] == 1:\n    print('YYMM')\nelse:\n    print('MMYY')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "11413": {"id": 11413, "code": "week = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']\nS = \"SUN\"\nprint(6 - week.index(S)) if week.index(S) != 6 else print(7)", "coverage": [">", ">", ">"]}, "5042": {"id": 5042, "code": "s = \"smiles\"\napple = []\nfor i in s:\n    apple.append(i)\na = apple.pop(0)\nb = apple.pop(-1)\nc = str(len(apple))\nd = a + c + b\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3494": {"id": 3494, "code": "a = 20;b = 15\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "5315": {"id": 5315, "code": "N = 2\nprint((N+1)//2)", "coverage": [">", ">"]}, "17916": {"id": 17916, "code": "s = \"1905\"\nans = 0\nfor i in range(0,3,2):\n  if s[i] == \"0\" and s[i+1] == \"0\":\n    continue\n  elif s[i] == \"0\":\n    ans += i+1\n  elif (s[i] == \"1\" and s[i+1] == \"0\") or (s[i] == \"1\" and s[i+1] == \"1\") or (s[i] == \"1\" and s[i+1] == \"2\"):\n    ans += i+1\nif ans == 1:\n  print(\"MMYY\")\nelif ans == 3:\n  print(\"YYMM\")\nelif ans == 4:\n  print(\"AMBIGUOUS\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "10523": {"id": 10523, "code": "a = 1;b = 1;k = 1\nshou = min(a,b)\ndai  = max(a,b)\nmin_list = []\nfor i in range(1,shou+1):\n    if shou % i == 0:\n        if dai % i == 0:\n            min_list.append(i)\nprint(min_list[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11750": {"id": 11750, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(1) if(M1 != M2) else print(0)", "coverage": [">", ">", ">"]}, "12246": {"id": 12246, "code": "s = \"akasaka\"\nn = len(s)\nif s != s[::-1]:\n    print('No')\nelif s[:(n-1)//2] != s[:(n-1)//2][::-1]:\n    print('No')\nelif s[(n+3)//2-1:] != s[(n+3)//2-1:][::-1]:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "15985": {"id": 15985, "code": "import itertools\na = 20;b = 30\nans= a-b*2\nif ans <=0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12573": {"id": 12573, "code": "A = 8;B = 12;K = 2\nC =min(A,B)\nlist =[]\nfor i in range(1,C+1):\n  if A%i == 0 and B%i == 0:\n    list.append(i)\nlist = sorted(list)\nans = list[-K]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4137": {"id": 4137, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nS = H1*60+M1\nG = H2*60+M2\np = G-S\nif p-K < 0:\n  print (0)\nelse:\n  print (p-K)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "6146": {"id": 6146, "code": "from bisect import bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nB1 = []\nfor i in range(N):\n    ind = bisect_right(C,B[i])\n    B1.append(ind)\nB2 = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    B2[i] = B2[i+1]+N-B1[i]\ncnt = 0\nfor i in range(N):\n    ind = bisect_right(B,A[i])\n    cnt += B2[ind]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9356": {"id": 9356, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3] = '8'\ns = \"\".join(s)\nprint(s)", "coverage": [">", ">", ">", ">"]}, "13476": {"id": 13476, "code": "n = \"haiku,atcoder,tasks\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "7102": {"id": 7102, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif h<=sum(a):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "2529": {"id": 2529, "code": "n = \"4 9 0 8\"\nif \"1\" in n and \"9\" in n and \"7\" in n and \"4\" in n:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "16558": {"id": 16558, "code": "a = \"D\";b = \"H\"\nif a=='H': print(b)\nelif b=='H': print(a)\nelse:print('H')", "coverage": [">", ">", ">", "!"]}, "11151": {"id": 11151, "code": "S = ['l', 'e', 'v', 'e', 'l']\nk = (len(S) -1) // 2 \nT = S[0:k]\nprint(\"Yes\" if S == S[::-1] and T == T[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "18433": {"id": 18433, "code": "h = 2\nw = 100\nn = 200\nh, w = max(h, w), min(h, w)\nblack_tile = 0\nfor i in range(w):\n    black_tile += h\n    if black_tile >= n: break\nprint(i + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18494": {"id": 18494, "code": "H = 3\nW = 7\nN = 10\nx = H if H>W else W\nx2 = 0 if N%x==0 else 1\nprint(N//x + x2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "569": {"id": 569, "code": "s = \"codefestival\"\nk = 100\nfor i in range(len(s)):\n    if s[i] != \"a\":\n        req = ord(\"z\") - ord(s[i]) + 1\n        if req <= k:\n            k -= req\n            s = s[:i] + \"a\" + s[i+1:]\nif k > 0:\n    s = s[:-1] + chr(ord(s[-1]) + k%26)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17479": {"id": 17479, "code": "S = \"0112\"\nif 1<=int(S[:2])<=12:\n    if 1<=int(S[2:])<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=int(S[2:])<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "7245": {"id": 7245, "code": "H = 210;M = 5\nattack = [31, 41, 59, 26, 53]\nif H - sum(attack) <=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "1874": {"id": 1874, "code": "Sample = 10;NumOfPaperA = 7;NumOfPaperB = 5\nMaximumNumberOfBothReader = min(NumOfPaperA, NumOfPaperB)\nMinimumNumberOfBothReader = max(NumOfPaperA + NumOfPaperB - Sample, 0)\nprint(str(MaximumNumberOfBothReader) + ' ' + str(MinimumNumberOfBothReader))", "coverage": [">", ">", ">", ">"]}, "7200": {"id": 7200, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\nans = 'No'\nfor s in a:\n    h -= s\n    if h <= 0:\n        ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11371": {"id": 11371, "code": "S = \"SUN\"\nweek= ['SUN','MON','TUE','WED','THU','FRI','SAT']\nans=7-week.index(S)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "16114": {"id": 16114, "code": "A = ['20', '15']\nB = int(A[0]) - 2 * int(A[1])\nprint(0 if B < 0 else B)", "coverage": [">", ">", ">"]}, "12201": {"id": 12201, "code": "M = 11;D = 16\nMM = 11;DD = 17\nif D>DD:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "8172": {"id": 8172, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans=len(a)\nans-=k\nif ans%(k-1)==0:\n  print(ans//(k-1)+1)\nelse:\n  print(ans//(k-1)+2)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "6872": {"id": 6872, "code": "h = \"211\";n = \"5\"\na = ['31', '41', '59', '26', '53']\nattack = 0\nfor i in range(int(n)):\n    attack += int(a[i])\nif int(h) - attack <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10347": {"id": 10347, "code": "A = \"100\";B = \"50\";C = \"4\"\nA, B, C = [int(A), int(B), int(C)]\nL=[]\nfor i in range(min(A,B)):\n    if A%(i+1) == 0 and B%(i+1) == 0:\n        L.append(i+1)\nprint(L[len(L)-C])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8866": {"id": 8866, "code": "N = 1\nA1 = [2]\nA2 = [3]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "15523": {"id": 15523, "code": "x = 12;y = 3;z = 1\nprint(x//(y+z) if x%(y+z)>=z else x//(y+z)-1)", "coverage": [">", ">"]}, "5991": {"id": 5991, "code": "N = 100\na = N // 2\nb = N % 2\nprint(a + b)", "coverage": [">", ">", ">", ">"]}, "13065": {"id": 13065, "code": "a = \"6\"\nif int(a) == 3 or int(a) == 5 or int(a) == 7:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "13400": {"id": 13400, "code": "lst = \"happy,newyear,enjoy\"\nprint(lst.replace(',',' '))", "coverage": [">", ">"]}, "17413": {"id": 17413, "code": "S = 112\nx=S//100\ny=S%100\nyymm=1<=y<=12\nmmyy=1<=x<=12\nans=\"\"\nif yymm and mmyy:\n    ans=\"AMBIGUOUS\"\nelif yymm:\n    ans=\"YYMM\"\nelif mmyy:\n    ans=\"MMYY\"\nelse:\n    ans=\"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "10222": {"id": 10222, "code": "n = 8\ns = \"))))((((\"\np=0\nq=0\nfor i in s:\n  if i=='(':\n    p+=1\n  else:\n    if p>=1:\n      p-=1\n    else:\n      q+=1\n      p=0\nans='('*q+s+')'*p\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "14312": {"id": 14312, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nmono = 0\nfor i in range(1, n):\n  d = a[i] - a[i - 1]\n  if d * mono < 0:\n    cnt += 1\n    mono = 0\n  elif d != 0:\n    mono = d\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "880": {"id": 880, "code": "K = 2\nmod = 7\ncnt = 0\nfor i in range(K):\n    if mod % K == 0:\n        cnt += 1\n        break\n    else:\n        cnt += 1\n        mod = (mod * 10 + 7) % K\nif mod % K == 0:\n    print(cnt)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "8585": {"id": 8585, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5846": {"id": 5846, "code": "n = 2\na,b = divmod(n,2)\nprint(a+b)", "coverage": [">", ">", ">"]}, "6145": {"id": 6145, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\np = 0\nans = 0\nf = []\ng = [0] * n\nfor i, x in enumerate(b):\n    while p < n and x >= c[p]:\n        p += 1\n    f.append(n - p)\nfor i in range(n - 1, -1, -1):\n    g[i] = f[i] + (g[i + 1] if i < n - 1 else 0)\np = 0\nfor i, x in enumerate(a):\n    while p < n and x >= b[p]:\n        p += 1\n    ans += g[p] if p < n else 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "980": {"id": 980, "code": "n = 111\ntemp = (n // 100) * 111\nprint(temp if temp >= n else temp + 111)", "coverage": [">", ">", ">"]}, "7482": {"id": 7482, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\ntotal = 0\nfor i in range(N):\n  total += A[i]\nif total >= H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7534": {"id": 7534, "code": "H = 20;N = 3\nA = [4, 5, 6]\nA.sort(reverse=True)\nS = sum(A[:N])\nif S >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "10226": {"id": 10226, "code": "N = 3\nS = \"())\"\nl = 0\nr = 0\nfor i in range(N):\n    if S[i]==\")\":\n        r -= 1\n        if r<0:\n            l += 1\n            r = 0\n    else:\n        r += 1\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "522": {"id": 522, "code": "s = \"a\"\nn=len(s)\na=[ord(i)-ord('a') for i in s]\nk = 25\nfor i in range(n):\n    if a[i]+k>=26 and a[i]>0:\n        k-=26-a[i]\n        a[i]=0\nk%=26\na[-1]+=k\na=[chr(i + ord('a')) for i in a]\nprint(*a,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12019": {"id": 12019, "code": "m_one = [11, 16]\nm_two = [11, 17]\nprint(1 if m_one[1] > m_two[1] else 0)", "coverage": [">", ">", ">"]}, "9780": {"id": 9780, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nans = \"\"\nl = 0\nfor i in range(n):\n    ans += s[i]\n    if s[i] == \")\":\n        if l == 0:\n            ans = \"(\" + ans\n        else:\n            l -= 1\n    else:\n        l += 1\nans += (\")\"*l)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "7741": {"id": 7741, "code": "import math\nn = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif n==k:\n    print(1)\nelse:\n    n-=k\n    print(1+math.ceil(n/(k-1)))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "13389": {"id": 13389, "code": "s = \"haiku,atcoder,tasks\"\nl=\" \".join(s.split(\",\"))\nprint(l)", "coverage": [">", ">", ">"]}, "5997": {"id": 5997, "code": "i = 100\nprint(int(i / 2) + (i % 2))", "coverage": [">", ">"]}, "5668": {"id": 5668, "code": "n = 5\nif n%2!=0:\n  print(n//2+1)\nelse:\n  print(n//2)", "coverage": [">", ">", ">", "!", "!"]}, "12545": {"id": 12545, "code": "from math import gcd\na = 100;b = 50;k = 4\ng = gcd(a, b)\nl = []\ni = 1\nwhile i * i <= g:\n    if g % i == 0:\n        l.append(i)\n        if i != g // i:\n            l.append(g // i)\n    i += 1\nl.sort()\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8067": {"id": 8067, "code": "n = 3;k = 3\nx = (1, 2, 3)\nfor i,v in enumerate(x):\n    if v == 1:\n        r = i\na,b = divmod(r,k-1)\nif b > 0:\n    a += 1\nr = a * (k-1)\nl = n-r-1\nif l > 0:\n    c,d = divmod(l, k-1)\n    if d > 0:\n        c += 1\n    a += c\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5624": {"id": 5624, "code": "a = 2\nprint(sum(divmod(a,2)))", "coverage": [">", ">"]}, "8417": {"id": 8417, "code": "n = 5\na_1 = [3, 2, 2, 4, 1]\na_2 = [1, 2, 2, 2, 1]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4870": {"id": 4870, "code": "s = \"internationalization\"\nanswer = ''\ns = list(s)\nanswer = s[0] + str(len(s)-2) + s[len(s)-1]\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "14450": {"id": 14450, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nk = 1\nx = y = 0\nc = A[0]\nfor i in A[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2453": {"id": 2453, "code": "x = 1;y = 1\na=x*(x-1)//2\nb=y*(y-1)//2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "7415": {"id": 7415, "code": "H = 10;N = 3\nA = [4, 5, 6]\nrest_H = H - sum(A)\nif rest_H <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7875": {"id": 7875, "code": "n = 8;k = 3\nAs = [7, 3, 1, 8, 4, 6, 2, 5]\na=n-1\nb=k-1\nif a % b == 0:\n  print(a//b)\nelse:\n  print((a//b) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "9160": {"id": 9160, "code": "A = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nA[0:4] = \"2018\"\nprint(\"\".join(A))", "coverage": [">", ">", ">"]}, "12304": {"id": 12304, "code": "string = \"akasaka\"\nmid = len(string)//2\ngnirts = string[::-1]\nif(string != gnirts or string[:mid] != gnirts[mid+1:] or string[mid+1:] != gnirts[:mid]):\n  print(\"No\")\n  exit()\nprint(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18744": {"id": 18744, "code": "H = 2\nW = 100\nN = 200\nprint(N//max(H,W) if N%max(H,W) == 0 else N//max(H,W)+1)", "coverage": [">", ">", ">", ">"]}, "5544": {"id": 5544, "code": "import sys\nN = 101\nans = N // 2\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1910": {"id": 1910, "code": "n = 10;a = 7;b = 5\nx = min(a, b)\nif (a + b) > n:\n    y = (a + b) - n\nelse:\n    y = 0 \nprint(x, y)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8515": {"id": 8515, "code": "N = 4\nU = [1, 1, 1, 1]\nD = [1, 1, 1, 1]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1757": {"id": 1757, "code": "n = 10;x = 3;y = 5\nmax = min(x,y)\nif n-(x+y) < 0:\n    min = abs(n-x-y)\nelse:\n    min = 0\nprint(max,min)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5880": {"id": 5880, "code": "N = 100\nprint(-(-N // 2))", "coverage": [">", ">"]}, "9241": {"id": 9241, "code": "s = \"2017/01/31\"\nprint(s.replace('2017/', '2018/'))", "coverage": [">", ">"]}, "8149": {"id": 8149, "code": "import math\nn = 8;k = 3\nan = [7, 3, 1, 8, 4, 6, 2, 5]\nn = n-k\nans = math.ceil(n/(k-1)) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18102": {"id": 18102, "code": "s = \"0112\"\nf = (0 < int(s[:2]) < 13)\ns = (0 < int(s[2:]) < 13)\nans = 'NA'\nif f and s:\n    ans = 'AMBIGUOUS'\nelif s:\n    ans = 'YYMM'\nelif f:\n    ans = 'MMYY'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "846": {"id": 846, "code": "k = 101\nif k % 2 == 0 or k % 5 == 0:\n    print(-1)\nelif k == 1 or k == 7:\n    print(1)\nelse:\n    t = 2\n    ex = 77\n    for i in range(10 ** 8):\n        if ex % k == 0:\n            break\n        ex = (ex % k) * 10 + 7\n        t += 1\n    print(t)", "coverage": [">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9744": {"id": 9744, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nnestlv = 0\nnestmax = 0\nnestmin = 0\nlcnt = 0\nrcnt = 0\nfor i in range(n):\n    if s[i] == '(':\n        nestlv = nestlv + 1\n        nestmax = max(nestmax, nestlv)\n    elif s[i] == ')':\n        nestlv = nestlv - 1\n        nestmin = min(nestmin, nestlv)\nans = ''.join(s)\nfor i in range(nestmin*(-1)):\n    ans = '(' + ans\nnestlv = nestlv - nestmin\nif nestlv > 0:\n    for i in range(nestlv):\n        ans = ans + ')'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3127": {"id": 3127, "code": "s = \"35753\"\ns_length=len(s)\ntarget=753\nans=753\nfor i in range(s_length-2):\n    comp=int(s[i:i+3])\n    ans=min(abs(target-comp),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18230": {"id": 18230, "code": "h = 2\nw = 100\nn = 200\nif h < w:\n    if n % w == 0:\n        print(n // w)\n    else:\n        print(n // w + 1)\nelse:\n    if n % h == 0: \n        print(n // h)\n    else:\n        print(n // h + 1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8469": {"id": 8469, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4793": {"id": 4793, "code": "s = \"smiles\"\nans = []\nans.append(s[0])\nans.append(len(s)-2)\nans.append(s[-1])\nprint(''.join(map(str,ans)))", "coverage": [">", ">", ">", ">", ">", ">"]}, "6046": {"id": 6046, "code": "n = 5\nprint((n+2-1)//2)", "coverage": [">", ">"]}, "2798": {"id": 2798, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s) -2):\n  ans = min(abs(int(s[i:i+3])- 753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3191": {"id": 3191, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s) - 2):\n    diff = abs(int(s[i:i+3]) - 753)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10812": {"id": 10812, "code": "s = \"akasaka\"\nflag = 0\nsr = s[-1::-1]\nif sr == s:\n    flag+=1\ns1 = s[:(len(s)-1)//2]\ns1r = s1[-1::-1]\nif s1 == s1r:\n    flag += 1\ns2 = s[(len(s)+3)//2-1:]\ns2r = s2[-1::-1]\nif s2 == s2r:\n    flag+=1\nprint('Yes' if flag == 3 else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18983": {"id": 18983, "code": "N = 12\nif N % 2:\n    print(0)\n    exit()\nN = N//2\nans = 0\nwhile N:\n    ans += N // 5\n    N //= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10161": {"id": 10161, "code": "N = 6\nS = \")))())\"\nleft=0\ncnt1=0\ncnt2=0\nfor i in range(N):\n    if S[i]==\"(\":\n        cnt1+=1\n    elif S[i]==\")\":\n        cnt2+=1\n        if i<N-2 and S[i+1]==\"(\":\n            if cnt2>=cnt1+left:\n                left=cnt2-cnt1\nres=S.count(\"(\")+left-S.count(\")\")\nif res>=0:\n    print(\"(\"*left+S+\")\"*res)\nelse:\n    print(\"(\"*(left+abs(res))+S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4003": {"id": 4003, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nhm1=60*h1+m1\nhm2=60*h2+m2\nans=hm2-hm1-k\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18007": {"id": 18007, "code": "S = \"0112\"\nfront = int(S[:2])\nback = int(S[2:])\nif front > 12 or front == 0:\n    if 0 < back <= 12 :\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif front <= 12 or front == 0:\n    if 0 < back <= 12: \n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "10790": {"id": 10790, "code": "s = \"akasaka\"\nn = len(s)\ni = int((n-1)/2)\nt = s[:i]\nii = int((n+3)/2-1)\nu = s[ii:]\nif s == s[::-1] and t == t[::-1] and u == u[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "521": {"id": 521, "code": "s = \"xyz\"\nn=len(s)\na=[ord(i)-ord('a') for i in s]\nk = 4\nfor i in range(n):\n    if a[i]+k>=26 and a[i]>0:\n        k-=26-a[i]\n        a[i]=0\nk%=26\na[-1]+=k\na=[chr(i + ord('a')) for i in a]\nprint(*a,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3470": {"id": 3470, "code": "A = 20;B = 15\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3226": {"id": 3226, "code": "A = \"20\";B = \"15\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "4192": {"id": 4192, "code": "import math\nimport re\nimport copy\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nw1 = h1*60 + m1\nw2 = h2 * 60 + m2\nw3 = (w2-w1+24*60)%(24*60)\nw3 = w3 - k\nprint(w3)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19267": {"id": 19267, "code": "N = 5\nn = N // 10\ncnt = 0\nif N % 2 == 0:\n    while n != 0:\n        cnt += n\n        n //= 5\nprint(cnt)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "3565": {"id": 3565, "code": "A = 12;B = 4\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "10544": {"id": 10544, "code": "a = 1;b = 1;k = 1\ns = []\nfor i in range(1,101):\n    if a % i == 0 and b % i == 0:\n        s.append(i)\n    if i > a or i > b:\n        break\nprint(s[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12315": {"id": 12315, "code": "S = \"level\"\ns=len(S)\na=''\nb=''\nfor i in range((s-1)//2):\n    a+=S[i]\nfor n in range((s+3)//2-1,s):\n    b+=S[n]\nif a==b:\n    A=a[::-1]\n    B=b[::-1]\n    if A==a and B==b:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14132": {"id": 14132, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nup = None\nfor i in range(1, N):\n    if up == None:\n        if not A[i] == A[i - 1]:\n            up = A[i] > A[i - 1]\n    elif up:\n        if A[i] < A[i - 1]:\n            ans += 1\n            up = None\n    else:\n        if A[i] > A[i - 1]:\n            ans += 1\n            up = None\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4372": {"id": 4372, "code": "input = [10, 0, 12, 0, 120]\nh1 = input[0]\nm1 = input[1]\nh2 = input[2]\nm2 = input[3]\nk = input[4]\nprint(h2*60+m2-h1*60-m1-k)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1988": {"id": 1988, "code": "N = 10;A = 3;B = 5\nmin_ans = 0\nmax_ans = 0\nif A<=B:\n    min_ans = A\nelse:\n    min_ans = B\nif N>=A+B:\n    max_ans = 0\nelse:\n    max_ans = A + B - N\nprint(\"%d %d\"%(min_ans, max_ans))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "13086": {"id": 13086, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nn = 5\nif n==7 or n==5 or n==3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "13410": {"id": 13410, "code": "Haiku = \"haiku atcoder tasks\"\nprint(Haiku)", "coverage": [">", ">"]}, "18947": {"id": 18947, "code": "N = 12\nif N%2 != 0:\n  print(0)\nelse:\n  answer = 0\n  m = 10\n  while m <= N:\n    answer += N//m\n    m *= 5\n  print(answer)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7210": {"id": 7210, "code": "x = 20;y = 3\nz = map(int, \"4 5 6\".split())\nif sum(z) >= x:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "10975": {"id": 10975, "code": "S = \"atcoder\"\nN = len(S)\nflag = [0,0,0]\nif S==\"\".join(reversed(list(S))):\n    flag[0]=1\nif S[:int((N-1)/2)]==\"\".join(reversed(list(S[:int((N-1)/2)]))):\n    flag[1]=1\nif S[int((N+3)/2)-1:]==\"\".join(reversed(list(S[int((N+3)/2)-1:]))):\n    flag[2]=1\nprint(\"Yes\" if flag==[1,1,1] else \"No\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "11141": {"id": 11141, "code": "s = \"akasaka\"\nif 4 < len(s) < 6:\n  print('No')\n  exit()\nif s[::-1] != s:\n  print('No')\n  exit()\ns = s[:len(s)//2]\nif s[::-1] != s:\n  print('No')\n  exit()\nprint('Yes')", "coverage": [">", ">", "!", "!", ">", "!", "!", ">", ">", "!", "!", ">"]}, "4491": {"id": 4491, "code": "s = \"xyz\"\nprint('%s%d%s' % (s[0], len(s[1:-1]), s[-1]))", "coverage": [">", ">"]}, "18565": {"id": 18565, "code": "h = 2;w = 100;n = 200\na = max(h,w)\nprint(n//a + 1 if n%a else n//a)", "coverage": [">", ">", ">"]}, "4505": {"id": 4505, "code": "strings = ['s', 'm', 'i', 'l', 'e', 's']\nstr_len = len(strings)\nprint(strings[0] + str(str_len - 2) + strings[str_len - 1])", "coverage": [">", ">", ">"]}, "2234": {"id": 2234, "code": "N = 10;A = 7;B = 5\nA_N = N - A\nB_N = N - B\nprint(min(A,B) , max(0,A + B - N))", "coverage": [">", ">", ">", ">"]}, "1387": {"id": 1387, "code": "n = 112\nstr_n = str(n)\nketa = len(str_n)\nsuji = [str(i) for i in range(10)]\nans = 0\nfor i in range(int(str_n[0]),10):\n    tmp = ''\n    for j in range(keta):\n        tmp += suji[i]\n    if int(tmp)>=n:\n        ans = int(tmp)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9684": {"id": 9684, "code": "n = 6\ns = \")))())\"\nlp=0\nrp=0\nfor i in range(n):\n  if s[i]=='(':\n    rp+=1\n  else:\n    rp=rp-min(rp,1)\nfor i in range(n-1,-1,-1):\n  if s[i]==')':\n    lp+=1\n  else:\n    lp=lp-min(lp,1)\nprint('('*max(0,lp)+s+max(0,rp)*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "1488": {"id": 1488, "code": "N = 750\nif N % 111 == 0:\n  print(N)\nelse:\n  for i in range(110):\n    N += 1\n    if N % 111 == 0:\n      break\n  print(N)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "7901": {"id": 7901, "code": "n = 8;k = 3\nan = \"7 3 1 8 4 6 2 5\"\ncount = 1\nn -= k\nk -= 1\nwhile(n > 0):\n    n -= k\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6560": {"id": 6560, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 3\nAs = [1, 1, 1]\nBs = [2, 2, 2]\nCs = [3, 3, 3]\ncnt = 0\nfor b in Bs:\n    ind_c = bisect_left(Cs,b+1)\n    ind_a = bisect_right(As,b-1)\n    if ind_c == N:continue\n    cnt += (N - ind_c) * (ind_a)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13430": {"id": 13430, "code": "n = \"happy,newyear,enjoy\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "16509": {"id": 16509, "code": "import sys\ninput = sys.stdin.readline\nN = 5\nA = [2, 4, 6, 9, 11]\ntmp = A[-1]\nans = 0\nfor i in A[:-1]:\n    if abs(A[-1] // 2 - i) < tmp:\n        tmp = abs(A[-1] // 2 - i)\n        ans = i\n    elif A[-1] % 2 != 0 and abs(A[-1] // 2 - i + 1) < tmp:\n        tmp = abs(A[-1] // 2 - i + 1)\n        ans = i\nprint(A[-1], ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9061": {"id": 9061, "code": "a=int(\"15\")\ne=int(\"36\")\nk=int(\"18\")\nprint(\"Yay!\" if k>=e-a else \":(\")", "coverage": [">", ">", ">", ">"]}, "7191": {"id": 7191, "code": "a = 210;b = 5\nc = [31, 41, 59, 26, 53]\nd = sum(c)\nif d >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "463": {"id": 463, "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(S)):\n    s=S[i]\n    if s==\"a\":continue\n    x=123-ord(s)\n    if k>=x:\n        k-=x\n        S[i]=\"a\"\n    else:continue\nk%=26\nfor i in range(len(S)):\n    if S[-1-i]!=\"a\":\n        S[-1-i]=chr((ord(S[-1-i])-97+k%26)+97)\n        print(\"\".join(S));break\nelse:\n    S[-1]=chr((ord(S[-1])-97+k%26)+97)\n    print(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!"]}, "5535": {"id": 5535, "code": "n = 100\na = (n+1)/2\nprint(int(a))", "coverage": [">", ">", ">"]}, "517": {"id": 517, "code": "N = 26\nord_a = ord('a')\nS = [2, 14, 3, 4, 5, 4, 18, 19, 8, 21, 0, 11]\nK = 100\nfor i in range(len(S)):\n    r = (N - S[i]) % N\n    if K >= r:\n        K -= r\n        S[i] = 0\nS[-1] += K % N\nS[-1] %= N\nanswer = ''.join(chr(s + ord_a) for s in S)\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "453": {"id": 453, "code": "s = ['a']\nK = 25\nl = len(s)\nfor i in range(l-1):\n    x = (ord('a')-ord(s[i])) % 26\n    if x <= K:\n        K -= x\n        s[i] = 'a'\ns[l-1] = chr(ord('a') + (ord(s[-1])-ord('a')+K) % 26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "3735": {"id": 3735, "code": "x = 64145;y = 123;z = 456\nx -= z\nif x >= 0:\n   print(x//(y+z))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "17488": {"id": 17488, "code": "S = \"0112\"\nx=int(S[:2])\ny=int(S[2:])\nif 0<x<13 and 0<y<13:print(\"AMBIGUOUS\")\nelif 0<x<13:print(\"MMYY\")\nelif 0<y<13:print(\"YYMM\")\nelse:print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "6037": {"id": 6037, "code": "import math\nn = 5\nprint(math.ceil(n/2))", "coverage": [">", ">", ">"]}, "5743": {"id": 5743, "code": "n = 5\nif n%2==0:\n  print(str(int(n/2)))\nelse:\n  print(str(int(n/2)+1))", "coverage": [">", ">", "!", "!", ">"]}, "253": {"id": 253, "code": "S = \"a\"\nK = 25\noz = ord(\"z\")\nans = \"\"\nfor s in S[:-1]:\n    if s != \"a\" and oz+1-ord(s) <= K:\n        K -= oz+1-ord(s)\n        ans += \"a\"\n    else:\n        ans += s\nans += chr(((ord(S[-1])-ord(\"a\")+K)%26)+ord(\"a\"))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "13702": {"id": 13702, "code": "a = 10;b = 0;c = 12;d = 0;K = 120\nprint(max(0,(60*c+d - 60*a-b)-K))", "coverage": [">", ">"]}, "12486": {"id": 12486, "code": "a = 1;b = 1;k = 1\nn = min(a,b)\ncount = 0\nfor i in reversed(range(1,n+1)):\n    if a % i == 0 and b % i == 0:\n        count += 1\n    if count == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2429": {"id": 2429, "code": "even = 2;odd = 1\nprint(int(even * (even-1)/2 + odd * (odd-1)/2))", "coverage": [">", ">"]}, "12663": {"id": 12663, "code": "x = 6\nif (x == 3 or x == 5 or x == 7):\n   print('YES')\nelse:\n   print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "2096": {"id": 2096, "code": "n = 10;a = 7;b = 5\nma = a if a <= b else b\nmi = 0 if n >= a + b else a + b - n\nprint(ma, mi)", "coverage": [">", ">", ">", ">"]}, "7623": {"id": 7623, "code": "H = 210;N = 5\nA=map(int,\"31 41 59 26 53\".split())\nif H<=sum(A):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "13300": {"id": 13300, "code": "inp = \"abcde,fghihgf,edcba\"\nprint(inp.replace(',',' '))", "coverage": [">", ">"]}, "15173": {"id": 15173, "code": "X = 64146;Y = 123;Z = 456\nX -= 2*Z\nans = X // (Y+Z)\nX %= (Y+Z)\nif X >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19098": {"id": 19098, "code": "from math import log10\nn = 12\nif n % 2:\n    print(0)\n    exit(0)\nn -= n % 10\ns = n // 10\nt = s\nwhile t != 0:\n    s += t // 5\n    t //= 5\nprint(s)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "7753": {"id": 7753, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nnum=0\nwhile num*K-(num-1)<N:\n    num+=1\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9364": {"id": 9364, "code": "a = \"2017\";b = \"01\";c = \"07\"\na='2018'\nprint(a,b,c,sep='/')", "coverage": [">", ">", ">"]}, "3897": {"id": 3897, "code": "x = 12;y = 3;z = 1\nx -= 2*z\nans = 1\nx -= y\nans += x//(y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7749": {"id": 7749, "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint((N-1-1)//(K-1)+1)", "coverage": [">", ">", ">"]}, "1314": {"id": 1314, "code": "n = 111\nfor i in range(1000):\n  if i < 100:\n    continue\n  else:\n    tmp = i\n    if (tmp%10 == (tmp//10)%10 == (tmp//100)%10) and i >= n:\n      print(i)\n      break\n    else:\n      continue", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!"]}, "17207": {"id": 17207, "code": "a = \"D D\"\nprint([\"D\",\"H\"][a[0]==a[2]])", "coverage": [">", ">"]}, "14095": {"id": 14095, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nans = 0\nwhile i < n:\n    j = i\n    while j < n-1 and l[j] >= l[j+1]:\n        j += 1\n    k = i\n    while k < n-1 and l[k] <= l[k+1]:\n        k += 1\n    i = max(j, k) + 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "15996": {"id": 15996, "code": "a = 20;b = 15\nif a<=b*2:\n    print(0)\nelse:\n    print(a-b*2)", "coverage": [">", ">", ">", "!", "!"]}, "17522": {"id": 17522, "code": "s = \"1700\"\nym=True if 0 < int(s[2:]) < 13 else False\nmy=True if 0 < int(s[:2]) < 13 else False\nif my and ym:\n  print('AMBIGUOUS')\nelif my:\n  print('MMYY')\nelif ym:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "19034": {"id": 19034, "code": "import sys\ninput = sys.stdin.readline\nn = 5\na = 0\nif n % 2 == 1:\n    a == 0\nelse:\n    n = n // 2\n    k = 5\n    while k <= n:\n        a += n // k\n        k *= 5\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "16290": {"id": 16290, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm = a[-1]\nmid = m / 2\nd = 10 ** 9\nfor ai in a[:-1]:\n    x = abs(mid - ai)\n    if x < d:\n        ans = ai\n        d = x\nprint(m, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5328": {"id": 5328, "code": "a = 100\nif a % 2 == 0:\n  print(str(int(a//2)))\nelse:\n  print(str(int(a//2)+1))", "coverage": [">", ">", ">", "!", "!"]}, "18576": {"id": 18576, "code": "h = 14\nw = 12\nn = 112\nif n % max(h, w) == 0:\n\tprint(n // max(h,w))\nelif n % max(h,w) !=0 :\n\tprint(n // max(h, w) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10003": {"id": 10003, "code": "n = 3\ns = \"())\"\nl = 0\nr = 0\np = []\nfor i in range(n):\n  if s[i] == \"(\": p.append(\"(\")\n  else:\n    if p == []: l += 1\n    else: p.pop()\nr = p.count(\"(\")\nprint(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "18327": {"id": 18327, "code": "h = 14\nw = 12\nn = 112\nprint(n//max(h,w) if n%max(h,w)==0 else n//max(h,w)+1)", "coverage": [">", ">", ">", ">"]}, "13682": {"id": 13682, "code": "if __name__ == \"__main__\":\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    print((h2-h1)*60+m2-m1-k)", "coverage": [">", ">", ">"]}, "14092": {"id": 14092, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndp = [[N, N] for i in range(N)]\ndp[0] = [1, 1]\nfor i, a in enumerate(A[1:], 1):\n  pre_a = A[i-1]\n  if pre_a < a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n  elif pre_a == a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\n  else:\n    dp[i][0] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\nprint(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "234": {"id": 234, "code": "s = ['a']\nn=len(s)\nk = 25\na=[]\nfor i in range(n):\n  if i==n-1:\n    s[i]=chr(97+(ord(s[i])-97+k)%26)\n    break\n  if s[i]==\"a\":continue\n  t=26-(ord(s[i])-97)%26\n  if t>k:continue\n  k-=min(t,k)\n  s[i]=chr(97+(ord(s[i])-97+t)%26)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "2663": {"id": 2663, "code": "if sorted(list(map(int,\"4 9 0 8\".split())))==[1,4,7,9]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", "!", "!", ">"]}, "17260": {"id": 17260, "code": "a = \"D\";b = \"H\"\nx={'H':1,'D':-1}\nif x[a]*x[b]==1:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!", ">"]}, "10649": {"id": 10649, "code": "a = 8;b = 12;k = 2\nlst = []\nend = min(a,b) \nfor i in range(1,end+1):\n    ra = a % i\n    rb = b % i\n    if ra == 0 and rb == 0:\n        lst.append(i)\nans = lst[-1*k]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "612": {"id": 612, "code": "alp = \"abcdefghijklmnopqrstuvwxyz\"\ns = \"xyz\"\nK = 4\nN = len(s)\nT = \"\"\nfor i in range(N):\n    n = alp.index(s[i])\n    if i==N-1:\n        T+=alp[(n+K)%26]\n    else:\n        if n!=0 and K>=26-n:\n            T+=\"a\"\n            K-=(26-n)\n        else:T+=alp[n]\nprint(T)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "8769": {"id": 8769, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10440": {"id": 10440, "code": "A = 1;B = 1;K = 1\nans = []\nfor i in range(1, min(A, B) + 1):\n    if A % i == 0 and B % i == 0:\n        ans.append(i)\nans.sort(reverse=True)\nprint(ans[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3096": {"id": 3096, "code": "S = \"1111111111\"\nN = len(S)\nans = float(\"inf\")\nfor i in range(N-2):\n  ans = min(ans, abs(753 - int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2606": {"id": 2606, "code": "a = 1;b = 2;c = 9;d = 1\nans = set()\nans.add(a)\nans.add(b)\nans.add(c)\nans.add(d)\nif 1 in ans and 9 in ans and 7 in ans and 4 in ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15520": {"id": 15520, "code": "x = 64146;y = 123;z = 456\nans = x // (y+z)\nif x < ans * (y+z) + z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "8389": {"id": 8389, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8536": {"id": 8536, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncandies = [sum(A1[:i+1] + A2[i:]) for i in range(N)]\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">"]}, "16841": {"id": 16841, "code": "a = \"D\";b = \"D\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n    print('H')\nelif (a == 'H' and b == 'D') or (a == 'D' and b == 'H'):\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "15719": {"id": 15719, "code": "x = 12;y = 3;z = 1\nx -= z\ncnt = 0\nwhile x >= y + z:\n    x = x - y - z\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13311": {"id": 13311, "code": "s = \"haiku,atcoder,tasks\"\nA = s[:5]\nB = s[6:13]\nC = s[14:]\nstr = A + \" \" + B + \" \" + C\nprint(str)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3835": {"id": 3835, "code": "X = 13;Y = 3;Z = 1\nL = X -2*Z\nP = L // (Y+Z)\nif L - P*(Y+Z) >= Y:\n  print(P+1)\nelse:\n  print(P)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "1940": {"id": 1940, "code": "n = 10;a = 7;b = 5\nMAX = min(a, b)\nMIN = max(0, a+b-n)\nprint(MAX, MIN)", "coverage": [">", ">", ">", ">"]}, "6211": {"id": 6211, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nba=0\nbc=N\nans=0\nfor i in range(N):\n    b=B[i]\n    if ba!=N:\n        while A[ba]<b:\n            ba+=1\n            if ba==N:\n                break\n    if bc!=0:\n        while C[N-bc]<=b:\n            bc-=1\n            if bc==0:\n                break\n    ans+=ba*(bc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "16831": {"id": 16831, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    if b == \"D\":\n        print(\"D\")\nif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    if b == \"D\":\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!"]}, "9908": {"id": 9908, "code": "N = 3\nS = \"())\"\nLR = [0,0]\nl = \"(\"\nr = \")\"\nfor i in range(N):\n  if S[i] == r:\n    if LR[1] == 0:\n      LR[0] += 1\n    else:\n      LR[1] -= 1\n  elif S[i] == l:\n    LR[1] += 1\nS = l * LR[0] + S + r * LR[1]\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5778": {"id": 5778, "code": "N = \"100\"\nN = int(N)\nans = (N+1) // 2\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "5598": {"id": 5598, "code": "N = 100\nA=N//2+N%2\nprint(A)", "coverage": [">", ">", ">"]}, "5123": {"id": 5123, "code": "s = \"smiles\"\nnew_s=s[0]+str(len(s[1:-1]))+s[-1]\nprint(new_s)", "coverage": [">", ">", ">"]}, "3239": {"id": 3239, "code": "a = 20;b = 30\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "18236": {"id": 18236, "code": "H = 2\nW = 100\nN = 200\nm = max(H, W)\nn = 0\nwhile True:\n    n += 1\n    if n*m >= N:\n        print(n)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18410": {"id": 18410, "code": "H = 3\nW = 7\nN = 10\nm = max(H,W)\nif N%m != 0:\n  ans = N/m +1\nelse:\n  ans = N/m\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "35": {"id": 35, "code": "s = ['a']\nK = 25\nfor i in range(len(s)-1):\n    if s[i]!=\"a\":\n        a= ord(\"z\")+1 - ord(s[i])\n        if K>=a:\n            s[i]=\"a\"\n            K-=a\nif K:\n    s[-1]=chr((K+ord(s[-1])-ord(\"a\"))%(ord(\"z\") - ord(\"a\")+1)+ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "12926": {"id": 12926, "code": "X = \"5\"\nif X in '753':\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "12323": {"id": 12323, "code": "s = \"akasaka\"\nn=len(s)\ns1=s[0:n//2]\ns2=s[n//2+1:n]\nif s==s[::-1]and s1==s1[::-1] and s2==s2[::-1]: print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!"]}, "7021": {"id": 7021, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", "!", ">"]}, "19201": {"id": 19201, "code": "import math\nn = 5\nans = 0\nif n== 0:\n  print(0)\n  exit()\nif n%2 == 1:\n  print(0)\nelse:\n  for j in range(1,100):\n    if n//((5**j)*2) == 0:\n      break\n    ans += n//((5**j)*2)\n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17518": {"id": 17518, "code": "s = 112\nf = s/100\nl = s%100\nif 1 <= f and f <= 12:\n    if 1 <= l and l <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= l and l <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "11940": {"id": 11940, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "10706": {"id": 10706, "code": "S = \"akasaka\"\nn=len(S)\nSrev=''.join(list(reversed(S)))\nS1=S[0:(n-1)//2]\nS2=S[((n+1)//2):n]\nS1rev=''.join(list(reversed(S1)))\nS2rev=''.join(list(reversed(S2)))\nif S==Srev and S1==S1rev and S2==S2rev:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "17631": {"id": 17631, "code": "s = \"1905\"\nif 0 < int(s[:2]) <13 and 0< int(s[2:]) < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < int(s[:2]) < 13:\n    print(\"MMYY\")\nelif 0 < int(s[2:]) < 13:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "331": {"id": 331, "code": "s = \"codefestival\"\nk = 100\nn=len(s)\nans=\"\"\nfor i in range(n):\n    if i<n-1:\n        if s[i]==\"a\":\n            ans+=\"a\"\n        else:\n            t=123-ord(s[i])\n            if k>=t:\n                ans+=\"a\"\n                k-=t\n            else:\n                ans+=s[i]\n    if i==n-1:\n        tt=(ord(s[i])-97+k)%26\n        ans+=chr(tt+97)\nprint(ans)                ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "11220": {"id": 11220, "code": "S = \"SAT\"\ndic = {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}\nprint(dic[S])", "coverage": [">", ">", ">"]}, "13136": {"id": 13136, "code": "X = 5\nif (X==3) or (X==5) or (X==7):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "11596": {"id": 11596, "code": "S = \"SAT\"\nif S == 'SUN': print(7)\nelif S == 'MON': print(6)\nelif S == 'TUE': print(5)\nelif S == 'WED': print(4)\nelif S == 'THU': print(3)\nelif S == 'FRI': print(2)\nelse: print(1) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14333": {"id": 14333, "code": "num = 6\na = [1, 2, 3, 2, 2, 1]\nk = 1\nx = y = 0\nc = a[0]\nfor i in a[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9678": {"id": 9678, "code": "N = 6\nmotoS = \")))())\"\nS = list(motoS)\nstart = 0\nend = 0\nfor i in range(N):\n    if S[i] == '(':\n        end += 1\n    else:\n        end -= 1\n    if end < 0:\n        start += 1\n        end = 0\nprint('('*start+motoS+')'*end)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "18621": {"id": 18621, "code": "h = 14\nw = 12\nn = 112\nprint((n//(-(max(h,w))))*(-1))", "coverage": [">", ">", ">", ">"]}, "4838": {"id": 4838, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nlen_s = len(s)\nans = s[0] + str(len(s)-2) + s[(len_s)-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18598": {"id": 18598, "code": "h = 2\nw = 100\nn = 200\nprint(-n//max(h,w)*-1)", "coverage": [">", ">", ">", ">"]}, "7295": {"id": 7295, "code": "h = 10;n = 3\na = [4, 5, 6]\nprint('Yes' if sum(a)>=h else 'No')", "coverage": [">", ">", ">"]}, "6939": {"id": 6939, "code": "h = 10;n = 3\na = [4, 5, 6]\naa = sum(a)\nif aa >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4152": {"id": 4152, "code": "import sys\ninput=sys.stdin.readline\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh1=h1*60\nh2=h2*60\nm1+=h1\nm2+=h2\nprint(m2-m1-k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5341": {"id": 5341, "code": "from math import ceil\nn = 5\nans = ceil(n/2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "6113": {"id": 6113, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans=0\nfor mid in b:\n    ind_t = bisect.bisect_left(a,mid)\n    ind_b = bisect.bisect_right(c,mid)\n    ans+=ind_t*(n-ind_b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13100": {"id": 13100, "code": "A = [7,5,3]\nn = 5\nif n in A:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3905": {"id": 3905, "code": "x = 64145;y = 123;z = 456\nb = x-z\nc = y+z\nprint(b//c)", "coverage": [">", ">", ">", ">"]}, "8984": {"id": 8984, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif b-a > k or c-a > k or d-a > k or e-a > k or c-b > k or d-b > k or e-b > k or d-c > k or e-c > k or e-d > k:\n  print(\":(\")\nelse:\n  print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10756": {"id": 10756, "code": "S = \"atcoder\"\nN = len(S)\nSf = S[0:(N-1)//2]\nNSf = len(Sf)\nSb = S[(N+3)//2 -1:N+1]\nNSb = len(Sb)\nans = 0\nfor i in range(N//2):\n    if S[i:i+1] != S[N-1-i:N-i]:\n        ans = 1\nfor i in range(NSf//2):\n    if Sf[i:i+1] != Sf[NSf-1-i:NSf-i]:\n        ans = 1\nfor i in range(NSb//2):\n    if Sb[i:i+1] != Sb[NSb-1-i:NSb-i]:\n        ans = 1\nprint('Yes') if ans == 0 else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4941": {"id": 4941, "code": "s = \"xyz\"\nprint(\"{0}{1}{2}\".format(s[0], len(s)-2, s[-1]))", "coverage": [">", ">"]}, "8801": {"id": 8801, "code": "N = 1\nA = [2]\nB = [3]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17950": {"id": 17950, "code": "S = \"0112\"\nhead = S[:2]\ntail = S[2:]\nMMYY = False\nYYMM = False\nif 1 <= int(head) <= 12:\n    MMYY = True\nif 1 <= int(tail) <= 12:\n    YYMM = True\nif MMYY and YYMM:\n    print(\"AMBIGUOUS\")\nelif MMYY:\n    print(\"MMYY\")\nelif YYMM:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10729": {"id": 10729, "code": "s = \"atcoder\"\nn = len(s)\nflag = 1\nfor i in range(int(n/2)):\n    if s[i] != s[n-i-1]:\n        flag = 0\n        break\nn2 = int((n-1)/2)\nif flag == 1:\n    for i in range(int(n2/2)):\n        if s[i] != s[n2-i-1]:\n            flag = 0\n            break\nif flag == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "15063": {"id": 15063, "code": "import itertools\nn = 1;p = 1\na = [0]\ncnt0 = a.count(0)\ncnt1 = n - cnt0\nif p==0 and cnt0==n:\n    print(2**n)\nelif p==1 and cnt0==n:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "10421": {"id": 10421, "code": "a = 1;b = 1;k = 1\ncnt = 0\nfor i in range(min(a,b),0,-1):\n    if a%i == 0 and b%i == 0:\n        cnt += 1\n    if cnt == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14337": {"id": 14337, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nl = []\nans = 1\nflag = True\nfor i in range(1, len(a)):\n    num = a[i] - a[i - 1]\n    if num > 0:\n        num = 1\n        l.append(num)\n    elif num < 0:\n        num = -1\n        l.append(num)\n    else:\n        pass\nif len(l) > 1:\n    for i in range(len(l) - 1):\n        if l[i] != l[i + 1]:\n            if flag == True:\n                ans += 1\n                flag = False\n            else:\n                flag = True\n        else:\n            flag = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "4540": {"id": 4540, "code": "s = \"internationalization\"\nans = s[0]+str(len(s[1:len(s)-1]))+s[len(s)-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "8676": {"id": 8676, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4856": {"id": 4856, "code": "moji = \"smiles\"\nstart = moji[0]\nlength = len(moji)\nend = moji[length - 1]\ncentre = length - 2\nprint(start + str(centre) + end)", "coverage": [">", ">", ">", ">", ">", ">"]}, "302": {"id": 302, "code": "alf = {c:i for i,c in enumerate('abcdefghijklmnopqrstuvwxyz')}\na = 'abcdefghijklmnopqrstuvwxyz'\ns = \"xyz\"\nk = 4\ndiff = [26-alf[c] if c != 'a' else 0 for c in s]\nans = []\nfor i in range(len(s)):\n    if k >= diff[i]:\n        ans.append('a')\n        k -= diff[i]\n    else:\n        ans.append(s[i])\nif k > 0:\n    ans[-1] = a[(alf[ans[-1]] + k % 26)]\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "12": {"id": 12, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n  if ord(\"z\")<ord(s[i])+k and s[i]!=\"a\":\n    k =k-(ord(\"z\")-ord(s[i])+1)\n    s[i]=\"a\"\n  if i==len(s)-1 and 0<k:\n    k=k%26\n    s[i]=chr(ord(s[i])+k)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4380": {"id": 4380, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nduration_min = (H2-H1) * 60 + (M2 - M1)\nstart_duration_min = duration_min - K\nif start_duration_min > 0:\n\tprint(start_duration_min)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13916": {"id": 13916, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < n:\n    i1 = i\n    last = a[i]\n    while i1 < n:\n        if last <= a[i1]:\n            last = a[i1]\n            i1 += 1\n        else: break\n    i2 = i\n    while i2 < n:\n        if last >= a[i2]:\n            last = a[i2]\n            i2 += 1\n        else: break\n    i = max(i1, i2)\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4628": {"id": 4628, "code": "s = \"smiles\"\nz=str(len(s)-2)\nprint(str(s[0])+z+str(s[-1]))", "coverage": [">", ">", ">"]}, "4316": {"id": 4316, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nprint(c*60+d-a*60-b-e)", "coverage": [">", ">"]}, "261": {"id": 261, "code": "s = \"xyz\"\nk = 4\nsl=[]\nn=len(s)\nfor i in range(n):\n  if s[i]!='a':\n    if 26-(ord(s[i])-97)<=k:\n      sl.append('a')\n      k-=26-(ord(s[i])-97)\n    else:\n      sl.append(s[i])\n  else:\n    sl.append(s[i])\nif k>0:\n  if k%26!=0:\n    sl[n-1]=chr(ord(sl[n-1])+k%26)\nprint(''.join(sl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", "!", "!", ">"]}, "12845": {"id": 12845, "code": "N = \"6\"\nprint(\"YES\" if N in \"753\" else \"NO\")", "coverage": [">", ">"]}, "15172": {"id": 15172, "code": "X = 100000;Y = 1;Z = 1\nX -= 2*Z\nans = X // (Y+Z)\nX %= (Y+Z)\nif X >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3817": {"id": 3817, "code": "x = 64146;y = 123;z = 456\nx -= z * 2\nc = x // (y + z)\nif x - (y + z) * c >= y:\n    c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12814": {"id": 12814, "code": "n = 5\nprint('YES' if n in (3,5,7) else 'NO')", "coverage": [">", ">"]}, "1147": {"id": 1147, "code": "n = \"112\"\nif int(n) <= int(n[0]) * 111:\n    print(int(n[0]) * 111)\nelse:\n    print((int(n[0]) + 1) * 111)", "coverage": [">", ">", "!", "!", ">"]}, "2455": {"id": 2455, "code": "a = \"1\";b = \"9\";c = \"7\";d = \"4\"\ns = set()\ns.add(a)\ns.add(b)\ns.add(c)\ns.add(d)\nif s == {\"1\",\"9\",\"7\",\"4\"}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15829": {"id": 15829, "code": "x = 100000;y = 1;z = 1\nres = (x - z) // (y + z)\nprint(res)", "coverage": [">", ">", ">"]}, "17647": {"id": 17647, "code": "S = ['0', '1', '1', '2']\nS1 = S[0] + S[1]\nS2 = S[2] + S[3]\nS1 = int(S1)\nS2 = int(S2)\nif 1 <= S1 <= 12 and 1 <= S2 <= 12:\n  print('AMBIGUOUS')\nelif (1 > S1 or S1 > 12) and 1 <= S2 <= 12:\n  print('YYMM')\nelif (1 > S2 or S2 > 12) and 1 <= S1 <= 12:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12322": {"id": 12322, "code": "s = \"atcoder\"\nn = len(s)\nc = 0\nfor i in range(int((n - 1)/2)):\n  if (s[i] != s[n - 1 - i]):\n    c = 1\nx = int((n - 1)/2)\nfor i in range(x):\n  if (s[i] != s[x - 1 - i]):\n    c = 1\nif (c == 1):\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6365": {"id": 6365, "code": "from bisect import *\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncnt = []\nfor b in B:\n    cnt.append(bisect_left(A, b) * (N - bisect_right(C, b)))\nprint(sum(cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9507": {"id": 9507, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport collections\ns = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nif s[3] == \"7\":\n    s[3] = \"8\"\nans = \"\"\nfor i in range(len(s)):\n    ans += s[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "603": {"id": 603, "code": "S = ['x', 'y', 'z']\nK = 4\nN=len(S)\nfor i in range(N):\n  k=(ord('z')-ord(S[i])+1)%26\n  if K>=k:\n    S[i]='a'\n    K-=k\nS[-1]=chr(ord(S[-1])+K%26)\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1513": {"id": 1513, "code": "N = \"750\"\nL=len(N)\nif int(N[0]*L)>=int(N):\n    print(int(N[0]*L))\nelse:\n    print(int((N[0])*L)+111)", "coverage": [">", ">", ">", ">", "!", "!"]}, "14268": {"id": 14268, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nincrease = True\nequal = True\nstart = True\ncount = 1\nfor i, a in enumerate(A):\n    if i > 0:\n        if equal:\n            if a > A[i-1]:\n                increase = True\n                equal = False\n            elif a < A[i-1]:\n                increase = False\n                equal = False\n        else:\n            if increase:\n                if a < A[i-1]:\n                    count += 1\n                    equal = True\n            else:\n                if a > A[i-1]:\n                    count += 1\n                    equal = True\n                    start = True\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "1394": {"id": 1394, "code": "N = 111\nfor i in range(10):\n    if N <= i * 111:\n        print(i * 111)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "5502": {"id": 5502, "code": "n = 100\nx, y = divmod(n, 2)\nprint(x + y)", "coverage": [">", ">", ">"]}, "1390": {"id": 1390, "code": "n = 112\nfor i in [str(i)*3 for i in range(10)]:\n    if int(i) >= n:\n        print(int(i))\n        break", "coverage": [">", ">", ">", ">", ">"]}, "12488": {"id": 12488, "code": "a = 100;b = 50;k = 4\nnum = min(a, b)\ncnt = 0\nwhile cnt < k:\n    if a%num == 0 and b%num == 0:\n        cnt += 1\n        num -= 1\n    else:\n        num -= 1\nprint(num + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "17982": {"id": 17982, "code": "s = 1905\na = s % 100\nb = (s-a) / 100\nif a >= 1 and a <= 12:\n    if b >= 1 and b <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('YYMM')\nelse:\n    if b >= 1 and b <= 12:\n        print('MMYY')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "16836": {"id": 16836, "code": "A = \"H\";B = \"H\"\nif A==\"H\":\n   print(B)\nelse:\n   if B == \"H\":\n      print(\"D\")\n   else:\n      print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "4561": {"id": 4561, "code": "s = \"internationalization\"\nx=len(s)\nnum=x-2\nprint(s[0]+str(num)+s[x-1])", "coverage": [">", ">", ">", ">"]}, "9972": {"id": 9972, "code": "n = 6\nt = \")))())\"\nlef = 0\nrig = 0\ncl = 0\ncr = 0\nfor i in range(n):\n    if t[i] == \")\":\n        rig += 1\n        if rig > lef+cl:\n            cl += 1\n    if t[i] == \"(\":\n        lef += 1\nlef = 0\nrig = 0\nfor i in reversed(range(n)):\n    if t[i] == \"(\":\n        lef += 1\n        if lef > rig+cr:\n            cr += 1\n    if t[i] == \")\":\n        rig += 1\nfor i in range(cl):\n    print(\"(\",end=\"\")\nprint(t,end=\"\")\nfor i in range(cr):\n    print(\")\",end=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "5267": {"id": 5267, "code": "N = {0, 9, 4, 8}\nif len(N) == 4 and set([1,9,7,4]) == N:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "1862": {"id": 1862, "code": "import sys\ninput = sys.stdin.readline\nN = 10;A = 7;B = 5\nM = min(A, B)\nm = 0\nif A+B > N:\n    m = A+B-N\nelse:\n    m = 0\nprint(M, m, sep = \" \")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5463": {"id": 5463, "code": "n = 100\nm = (n + 1) // 2\nprint(m)", "coverage": [">", ">", ">"]}, "16655": {"id": 16655, "code": "a = \"D\";b = \"D\"\nif a == \"H\" and b == \"H\":print('H')\nelif a == \"H\" and b == \"D\":print('D')\nelif a == 'D' and b == \"H\":print(\"D\")\nelse : print(\"H\")", "coverage": [">", ">", ">", ">", ">"]}, "16259": {"id": 16259, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nmx = a[-1]\nhalf = mx / 2\ndist = abs(half - a[0])\nans = 0\nfor i in range(1,n):\n    if dist > abs(half - a[i]):\n        dist = min(dist,abs(half - a[i]))\n        ans = a[i]\nprint(mx,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6477": {"id": 6477, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\ni = 0\nj = 0\nfor b in B:\n    while i < N and A[i] < b:\n        i += 1\n    while j < N and C[j] <= b:\n        j += 1\n    ans += i * (N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12214": {"id": 12214, "code": "S = \"level\"\narray = list(S)\nN = len(array)\na = (N-2)//2\nb = (N+2)//2\nif array[0:a+1] == array[b:N]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9867": {"id": 9867, "code": "n = 6\ns = \")))())\"\nmn=0\nsm=0\nfor i in range(n):\n  sm+=1 if s[i]==\"(\" else -1\n  mn=min(mn,sm)\nmn*=-1\nprint(\"(\"*mn+s+\")\"*(sm+mn))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9877": {"id": 9877, "code": "n = 8\ns = \"))))((((\"\nleft = 0\np = 0\nfor i in range(n):\n    if s[i] == '(':\n        p += 1\n    else:\n        if p == 0:\n            left += 1\n        else:\n            p -= 1\nright = p\nres = \"\"\nfor i in range(left):\n    res += '('\nres += s\nfor i in range(right):\n    res += ')'\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15277": {"id": 15277, "code": "X = 13;Y = 3;Z = 1\nprint((X-Z) // (Y + Z))", "coverage": [">", ">"]}, "14200": {"id": 14200, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nx=y=0\nc=A[0]\nfor i in range(1,N):\n    if c < A[i]:\n        x=1\n    elif c>A[i]:\n        y=1\n    if x==1 and y==1:\n        ans+=1\n        x=y=0\n    c=A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3472": {"id": 3472, "code": "a = 12;b = 4\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", "!", ">", ">"]}, "11255": {"id": 11255, "code": "w = \"SUN,MON,TUE,WED,THU,FRI,SAT\".split(\",\")\nS = \"SUN\"\nfor i, d in enumerate(w):\n    if d == S:\n        print(7 - i)", "coverage": [">", ">", ">", ">", ">"]}, "10022": {"id": 10022, "code": "n = 3\ns = \"())\"\nleft = 0\nright = 0\nfor i in range(n):\n    if s[i] == '(':\n        right += 1\n    else:\n        if right > 0:\n            right -= 1\n        else:\n            left += 1\nprint(left * '(' + s + right * ')')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "18453": {"id": 18453, "code": "h = 14\nw = 12\nn = 112\nm = max(h, w)\nans = n // m\nif n % m != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "14370": {"id": 14370, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nm = 0\nfor i in range(1, n):\n    if (a[i] - a[i - 1]) * m < 0:\n        ans += 1\n        m = 0\n    elif a[i] - a[i - 1] != 0:\n        m = a[i] - a[i - 1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5143": {"id": 5143, "code": "s = \"internationalization\"\nn=len(s)\nw=str(len(s)-2)\nprint(s[0]+w+s[-1])", "coverage": [">", ">", ">", ">"]}, "14227": {"id": 14227, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\nuf,df = True,True\nx = a[0]\nfor ai in a:\n    if x > ai:\n        uf = False\n    if x < ai:\n        df = False\n    if (uf or df) is False:\n        ans += 1\n        uf,df, = True,True\n    x = ai\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "683": {"id": 683, "code": "k = 101\nans = -1\nprev = 0\nfor i in range(1, k + 1):\n    prev = (10 * prev + 7) % k\n    if prev == 0:\n        ans = i\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17616": {"id": 17616, "code": "s = \"1905\"\nyy = [\"%02d\" % i for i in range(100)]\nmm = [\"%02d\" % i for i in range(1, 13)]\nyymm = s[:2] in yy and s[2:] in mm\nmmyy = s[:2] in mm and s[2:] in yy\nprint([\"NA\",\"MMYY\",\"YYMM\",\"AMBIGUOUS\"][yymm*2+mmyy])", "coverage": [">", ">", ">", ">", ">", ">"]}, "11317": {"id": 11317, "code": "S = \"SUN\"\nresult=7\nl=['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in l:\n    if i != S:\n        result=result-1\n    else:\n        break\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11608": {"id": 11608, "code": "li = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"] \nS = \"SAT\"\nrest = 7-li.index(S)\nprint(rest)", "coverage": [">", ">", ">", ">"]}, "19339": {"id": 19339, "code": "num = 999999999\nif num % 2 == 0:\n    print(num)\nelse:\n    print(num * 2)", "coverage": [">", ">", "!", "!", ">"]}, "158": {"id": 158, "code": "S = ['x', 'y', 'z']\nK = 4\nfor i, s in enumerate(S):\n    if s == \"a\":\n        pass\n    elif ord('z') - ord(s) + 1 <= K:\n        S[i] = 'a'\n        K -= ord('z') - ord(s) + 1\nK %= 26\nS[-1] = chr((ord(S[-1]) - ord('a') + K) % 26 + ord('a'))\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "1167": {"id": 1167, "code": "N = 111\nfor n in range(N, 1000):\n    if len(set(str(n))) == 1:\n        print(n)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "9156": {"id": 9156, "code": "S = \"2017/01/07\"\nprint(\"2018\"+S[4:])", "coverage": [">", ">"]}, "12116": {"id": 12116, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint (1) if d2 == 1 else print (0)", "coverage": [">", ">", ">"]}, "7643": {"id": 7643, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nsum=0\nfor i in range(len(A)):\n    sum+=A[i]\nif H<=sum :\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6514": {"id": 6514, "code": "N = 3\nA = map(int, \"1 1 1\".split())\nB = map(int, \"2 2 2\".split())\nC = map(int, \"3 3 3\".split())\nL = []\nL.extend(((x, 3)  for x in A))\nL.extend(((x, 2)  for x in B))\nL.extend(((x, 1)  for x in C))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17474": {"id": 17474, "code": "S = \"1700\"\nA = int(S[:2])\nB = int(S[2:])\nif  1 <= A and A <= 12:\n    if  1 <= B and B <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if  1 <= B and B <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "5092": {"id": 5092, "code": "s = \"internationalization\"\nx = len(s)\ny = x - 2\nprint(s[0] + str(y) + s[x-1])", "coverage": [">", ">", ">", ">"]}, "9830": {"id": 9830, "code": "N = 8\nS = \"))))((((\"\ndic = {'(':1, ')':-1}\nrlt = ''\ncnt = 0\nfor s in S:\n  cnt += dic[s]\n  rlt += s\n  if cnt < 0:\n    rlt = '(' + rlt\n    cnt = 0\nif cnt > 0:\n  rlt += ')'*cnt\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16784": {"id": 16784, "code": "a = \"D\";b = \"D\"\nprint('H'if (a=='H' and b=='H') or (a=='D'and b=='D')else 'D')", "coverage": [">", ">"]}, "8529": {"id": 8529, "code": "n = 1\na1 = [2]\na2 = [3]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3941": {"id": 3941, "code": "x = 12;y = 3;z = 1\nw = x - z\nprint(w // (y + z))", "coverage": [">", ">", ">"]}, "16957": {"id": 16957, "code": "a = \"D\";b = \"H\"\nif a == 'H' and b == 'H': print('H')\nelif a == 'H': print('D')\nelif b == 'H': print('D')\nelse: print('H')", "coverage": [">", ">", ">", ">", "!"]}, "15608": {"id": 15608, "code": "X = 100000;Y = 1;Z = 1\nans = (X-Z)//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">"]}, "7632": {"id": 7632, "code": "h = 211;n = 5\nl = [31, 41, 59, 26, 53]\nif sum(l)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "14214": {"id": 14214, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nstatus = 0\nprev = a[0]\nfor i in a:\n    diff = i - prev\n    if diff == 0:\n        pass\n    elif diff > 0:\n        if status >= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    else:\n        if status <= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "11393": {"id": 11393, "code": "week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SUN\"\nfor i, day in enumerate(week):\n    if day == s:\n        res = 7 - i\n        break\nres = 7 - i\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11538": {"id": 11538, "code": "s = \"SUN\"\nList=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nres = 0\nfor i in range(7):\n  if s == List[i]:\n    res = 7-i\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4373": {"id": 4373, "code": "x = 10;d = 0;y = 15;r = 0;k = 30\ns=x*60+d\nss=y*60+r\nprint(ss-s-k)", "coverage": [">", ">", ">", ">"]}, "6098": {"id": 6098, "code": "n = 2\nprint(int(n/2) if n%2==0 else int(n/2)+1)", "coverage": [">", ">"]}, "18653": {"id": 18653, "code": "import math\nH = 3\nW = 7\nl = max([H, W])\nN = 10\nprint(math.ceil(N/l))", "coverage": [">", ">", ">", ">", ">", ">"]}, "19474": {"id": 19474, "code": "import math\nN = 10\nprint((2*N)//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "9293": {"id": 9293, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = \"8\"\nprint(''.join(S))", "coverage": [">", ">", ">"]}, "3244": {"id": 3244, "code": "a = 20;b = 15\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", ">", "!", "!", ">"]}, "202": {"id": 202, "code": "s = \"a\"\nK = 25\nfor i in range(len(s)-1):\n    z2a = (ord('z') + 1 - ord(s[i])) % 26\n    if z2a <= K:\n        s = s[:i] + 'a' + s[i+1:]\n        K -= z2a\nprint(s[:len(s)-1] + chr(((ord(s[len(s)-1]) - ord('a')) + K % 26) % 26 + ord('a')))", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "12705": {"id": 12705, "code": "import math\nl = [3, 5, 7]\nx = 6\nif x in l:\n    print(\"YES\", sep=\"\")\nelse:\n    print(\"NO\", sep=\"\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16858": {"id": 16858, "code": "s = \"D H\"\nprint(\"H\" if s==\"H H\" or s==\"D D\" else \"D\")", "coverage": [">", ">"]}, "15738": {"id": 15738, "code": "X = 12;Y = 3;Z = 1\nans = X//(Y+Z)\nif X%(Y+Z) >= Z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11138": {"id": 11138, "code": "S = \"akasaka\"\nN = len(S)\nif S != S[::-1]:\n    print('No')\nelif S[:(N - 1) // 2] != (S[:(N - 1) // 2])[::-1]:\n    print('No')\nelif S[(N + 3) // 2 - 1:] != (S[(N + 3) // 2 - 1:])[::-1]:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4524": {"id": 4524, "code": "s = \"xyz\"\nprint(s[0]+'%d' % len(s[1:-1])+s[-1])", "coverage": [">", ">"]}, "2701": {"id": 2701, "code": "s = \"1974\"\nif s.count(\"1\")==1 and  s.count(\"9\")==1 and  s.count(\"7\")==1 and  s.count(\"4\")==1:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "2730": {"id": 2730, "code": "n = {1, 2, 9}\nprint('YNEOS'[n!={1,9,7,4}::2])", "coverage": [">", ">"]}, "11136": {"id": 11136, "code": "S = \"level\"\nN = len(S)\none = S[:int((N-1) / 2)]\ntwo = S[int((N+3) / 2)-1:]\nif S == S[::-1]:\n    if one == one[::-1]:\n        if two == two[::-1]:\n            print('Yes')\n            exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "500": {"id": 500, "code": "s = \"a\"\nk = 25\nasc = [0] * len(s)\nfor i in range(len(s)):\n    asc[i] = ord(s[i]) - ord(\"a\")\ni = 0\nfor i in range(len(s)):\n    if 26 - asc[i] <= k and asc[i] != 0:\n        x = 26 - asc[i]\n        asc[i] = 0\n        k -= x\nif k > 0:\n    asc[-1] += k % 26\nfor i in range(len(s)):\n    asc[i] += ord(\"a\")\n    asc[i] = chr(asc[i])\nprint(\"\".join(asc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "387": {"id": 387, "code": "s = \"a\"\nk = 25\nloop = ord('z') + 1\nremaining = k\nans = []\nfor c in s:\n    if c == 'a':\n        ans.append(c)\n        continue\n    r = loop - ord(c)\n    if r <= remaining:\n        ans.append('a')\n        remaining -= r\n    else:\n        ans.append(c)\nif remaining > 0:\n    remaining %= 26\n    ans[-1] = chr(ord(ans[-1]) + remaining)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "18081": {"id": 18081, "code": "s = \"1700\"\nans = {(False, False): 'NA', (False, True): 'YYMM', (True, False): 'MMYY', (True, True): 'AMBIGUOUS'}\nprint(ans[1 <= int(s[:2]) <= 12, 1 <= int(s[2:]) <= 12])", "coverage": [">", ">", ">"]}, "7754": {"id": 7754, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nans = 1 + (N - K) // (K - 1)\nif (N - K) % (K - 1) != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2609": {"id": 2609, "code": "if set(list(map(int, \"1 9 7 4\".split()))) == {1, 4, 7, 9}:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", "!", "!"]}, "12155": {"id": 12155, "code": "m_1 = 11;d_1 = 16\nm_2 = 11;d_2 = 17\nif d_2 == 1:\n  ans = '1'\nelse:\n  ans = '0'\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "2391": {"id": 2391, "code": "n = 1;m = 1\nif n<=1:\n    n_ans=0\nelse:\n    n_ans=n*(n-1)/2\nif m<=1:\n    m_ans=0\nelse:\n    m_ans=m*(m-1)/2\nprint(int(n_ans+m_ans))", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "11512": {"id": 11512, "code": "import sys\nyoubi = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nS = \"SAT\"\nif S == \"SUN\":\n    print(7)\n    sys.exit()\nfor i, youbi in enumerate(youbi):\n    if S == youbi:\n        print(6-i)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "4889": {"id": 4889, "code": "s = \"smiles\"\nans=s[0]\nans+=str(len(s)-2)\nans+=s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "15993": {"id": 15993, "code": "a1 = \"20 15\"\na2=[i for i in a1.split()]\na3,a4=[a2[i] for i in (0,1)]\nA,B=int(a3),int(a4)\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">", ">"]}, "14306": {"id": 14306, "code": "N = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nb= [a[0]]\nif N > 1:\n    for i in range(1,N):\n        if a[i] != a[i-1]:\n            b.append(a[i])\n    if b[0] < b[1]:\n        up_down = 1\n    else:\n        up_down = -1\ni = 1\nwhile i < len(b):\n    if up_down*(b[i] - b[i-1]) < 0:\n        ans += 1\n        if b[i] < b[min(len(b)-1,i+1)]:\n            up_down = 1\n        else:\n            up_down = -1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "4832": {"id": 4832, "code": "line = \"smiles\"\nnum = len(line)\na = line[0]\nb = line[num - 1]\nprint(a + str(num - 2) + b)", "coverage": [">", ">", ">", ">", ">"]}, "15097": {"id": 15097, "code": "n = 1;p = 1\nnum = [50]\nsemua_angka_genap = True\nfor i in num:\n  if i % 2 == 1:\n    semua_angka_genap = False\nif semua_angka_genap:\n  if p == 0:\n    print(2**n)\n  else:\n    print(0)\nelse:\n  print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", "!", "!"]}, "12437": {"id": 12437, "code": "S = \"akasaka\"\nS2 = S[:(len(S)-1)//2]\nS3 = S[(len(S)+3)//2-1:]\nprint(\"Yes\" if S == S[::-1] and S2 == S2[::-1] and S3 == S3[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "5605": {"id": 5605, "code": "n = 5\nans = n // 2\nans += 1 if n % 2 != 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "5313": {"id": 5313, "code": "A = 100\nprint(A//2+A%2)", "coverage": [">", ">"]}, "7402": {"id": 7402, "code": "h = 211;n = 5\nl = [31, 41, 59, 26, 53]\na=0\nfor i in range(n):\n    a+=l[i]\nif a>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12494": {"id": 12494, "code": "a = 1;b = 1;k = 1\nm = min(a,b)\nans = []\nfor i in range(1,m+1):\n    if a%i==0 and b%i==0:\n        ans.append(i)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17756": {"id": 17756, "code": "s = 1700\na = s // 100\nb = s % 100\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n    print(\"MMYY\")\nelif 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "15242": {"id": 15242, "code": "x = 13;y = 3;z = 1\nhito=x//(y+z)\nif x%(y+z)<z:\n    hito -=1\n    print(hito)\nelse:\n    print(hito)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "14908": {"id": 14908, "code": "n = 3;p = 0\na = [1, 1, 1]\ncnt = 0\nfor num in a:\n    if num % 2 == 1:\n        cnt += 1\nans = 0\nif cnt == 0:\n    if p % 2 == 0:\n        ans = 2**n\nelse:\n    ans = 2**(n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "4701": {"id": 4701, "code": "s = ['x', 'y', 'z']\ncount = len(s)-2\nprint(s[0] + str(count) + s[-1])", "coverage": [">", ">", ">"]}, "13003": {"id": 13003, "code": "x = 6\nif x == 3:\n    print(\"YES\")\nelif x == 5:\n    print(\"YES\")\nelif x == 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "722": {"id": 722, "code": "k = 101\nn = 7\ncnt = 1\nfor i in range(k):\n    if n % k == 0:\n        break\n    n = (n*10 + 7) % k\n    cnt += 1\nif n % k == 0:\n    print(cnt)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3728": {"id": 3728, "code": "X = 100000;Y = 1;Z = 1\ns = X - (X//(Y+Z))*(Y+Z)\nprint(X//(Y+Z) if s >= Z else X//(Y+Z)-1)", "coverage": [">", ">", ">"]}, "17744": {"id": 17744, "code": "s = \"1700\"\nn1 = int(s[0:2])\nn2 = int(s[2:4])\nif 1 <= n1 <= 12:\n  if 1 <= n2 <= 12:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelif 1 <= n2 <= 12:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "3969": {"id": 3969, "code": "X = 13;Y = 3;Z = 1\ntemp = X-Z\nans = temp//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "5086": {"id": 5086, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nans = s[0]\nans += str(len(s[1:-1]))\nans += s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17181": {"id": 17181, "code": "A = \"D\";B = \"D\"\nprint('H') if (A == 'D' and B == 'D') or (A == 'H' and B == 'H') else print('D')", "coverage": [">", ">"]}, "501": {"id": 501, "code": "from sys import stdin\nimport string\nalpha = string.ascii_lowercase\nnokori = [26-i for i in range(26)];nokori[0] = 0\ns = \"xyz\"\nk = 4\nsin = \"\"\nfor i in s:\n    if nokori[alpha.index(i)] <= k:\n        k -= nokori[alpha.index(i)]\n        sin += \"a\"\n    else:\n        sin += i\nq = alpha.index(sin[-1])\nq += k\nprint(sin[:-1]+alpha[q%26])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "17079": {"id": 17079, "code": "s = \"H H\"\nif s==\"D D\" or s == \"H H\":print('H')\nelse:print('D')", "coverage": [">", ">", "!"]}, "1489": {"id": 1489, "code": "N = 111\nfor i in range(N, N + 111):\n    if str(i).count(str(i)[0]) == 3:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "3219": {"id": 3219, "code": "p = \"12\";q = \"4\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3182": {"id": 3182, "code": "x = \"1111111111\"\nmini=1e+5\nfor i in range(len(x)-2):\n    mini=min(mini,abs(753-int(x[i:i+3])))\nprint(mini)", "coverage": [">", ">", ">", ">", ">"]}, "3294": {"id": 3294, "code": "a = 12;b = 4\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!"]}, "12767": {"id": 12767, "code": "X = 6\nprint(\"YES\" if X==3 or X==5 or X==7 else \"NO\")", "coverage": [">", ">"]}, "6118": {"id": 6118, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nx=0\nfor i in range(n):\n    oa=-1\n    na=n\n    while na-oa>1:\n        ma=(oa+na)//2\n        if a[ma]<b[i]:oa=ma\n        else:na=ma\n    ob=n\n    nb=-1\n    while ob-nb>1:\n        mb=(ob+nb)//2\n        if c[mb]>b[i]:ob=mb\n        else:nb=mb\n    x+=(oa+1)*(n-ob)\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8524": {"id": 8524, "code": "n = 7\ncandy_map = []\ncandy_map.append(list(map(int, \"3 3 4 5 4 5 3\".split())))\ncandy_map.append(list(map(int, \"5 3 4 4 2 3 2\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11643": {"id": 11643, "code": "s = \"SUN\"\nl = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(l.index(s) + 1)", "coverage": [">", ">", ">"]}, "12671": {"id": 12671, "code": "a = 6\nprint(\"YES\" if a == 3 or a == 5 or a == 7 else \"NO\") ", "coverage": [">", ">"]}, "9875": {"id": 9875, "code": "n = 3\ns = \"())\"\nleft = 0\np = 0\nfor i in range(n):\n    if s[i] == '(':\n        p += 1\n    else:\n        if p == 0:\n            left += 1\n        else:\n            p -= 1\nright = p\nres = \"\"\nfor i in range(left):\n    res += '('\nres += s\nfor i in range(right):\n    res += ')'\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8161": {"id": 8161, "code": "import math\nn = 8;k = 3\naa = (7, 3, 1, 8, 4, 6, 2, 5)\np = 0\nfor i in range(n):\n    if aa[i] == 1:\n        p = i\n        break\nn -= 1\nk -= 1\nx = math.ceil(n / k)\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17075": {"id": 17075, "code": "AB = \"D D\"\nres = {\"H H\":\"H\",\"H D\":\"D\",\"D H\":\"D\",\"D D\":\"H\"}\nprint(res[AB])", "coverage": [">", ">", ">"]}, "405": {"id": 405, "code": "S = ['a']\nN = 25\nfor i, s in enumerate(S):\n  if ord(s) - 97 > 0  and 122 - ord(s) < N:\n    S[i] = \"a\"\n    N -= 123 - ord(s)\nelse:\n  S[i] = chr(N % 26 + ord(S[i])) \nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "17022": {"id": 17022, "code": "list = ['H', 'H']\nif list[0] == list[1]:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "6684": {"id": 6684, "code": "H = 20;M = 3\nA = [4, 5, 6]\na = (sum(A))\nif a >= H:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "4238": {"id": 4238, "code": "input_str = ['10', '0', '15', '0', '30']\ninput_nums=[]\nfor i in range(5):\n    input_nums.append(int(input_str[i]))\ndiff_hour = input_nums[2] - input_nums[0]\ndiff_hour_to_min = diff_hour * 60\ndiff_min = input_nums[3] - input_nums[1]\ntotal_wake_min = diff_hour_to_min + diff_min\nprint(total_wake_min - input_nums[4])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2325": {"id": 2325, "code": "n = 100;a = 100;b = 100\nprint(\"{} {}\".format((min(a,b)),(max(0,(a+b)-n))))", "coverage": [">", ">"]}, "2203": {"id": 2203, "code": "n = 10;a = 3;b = 5\nboth_max = min(a, b)\nif a+b <= n:\n    both_min = 0\nelse:\n    both_min = a+b-n\nprint(both_max, both_min)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "1557": {"id": 1557, "code": "n = 750\nif 100<=n<=111: print(111)\nelif 112<=n<=222:print(222)\nelif 223<=n<=333:print(333)\nelif 334<=n<=444:print(444)\nelif 445<=n<=555:print(555)\nelif 556<=n<=666:print(666)\nelif 667<=n<=777:print(777)\nelif 778<=n<=888:print(888)\nelse:print(999)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2997": {"id": 2997, "code": "s = \"1234567876\"\nans = 753\nfor i in range(len(s)-2):\n  x = abs(753 - int(s[i:i+3]))\n  ans = min(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9878": {"id": 9878, "code": "n = 3\ns = \"())\"\nL=0\nR=0\nfor i in s:\n  if i==')':\n    if R:R-=1\n    else:L+=1\n  else:\n    R+=1\nprint('('*L+s+')'*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13849": {"id": 13849, "code": "N = 9\nAs = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before == As[i]:\n        continue\n    elif before < As[i]:\n        if zoka == 0 or zoka == 1:\n            before = As[i]\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\n    else:\n        if zoka == 0 or zoka == 2:\n            before = As[i]\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", "!", ">", ">", ">", ">"]}, "370": {"id": 370, "code": "s = \"a\"\nslist=[i for i in s]\nK = 25\ncost = []\nfor i in s:\n    if i==\"a\":\n        cost.append(0)\n    else:\n        cost.append(ord(\"z\")-ord(i)+1)\nfor i,c in enumerate(cost):\n    if c<=K:\n        K = K-c\n        slist[i]=\"a\"\nlastord = (ord(slist[-1])-ord(\"a\")+K)%26+ord(\"a\")\nslist[-1]=chr(lastord)\nprint(\"\".join(slist))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "2888": {"id": 2888, "code": "S = \"35753\"\nans = 754\nfor i in range(len(S)-2):\n  ans = min(ans,abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "10310": {"id": 10310, "code": "A = 100;B = 50;K = 4\nD = [x for x in range(1, min(A,B)+1) if A%x == 0 and B%x == 0]\nprint(D[-K])", "coverage": [">", ">", ">"]}, "5475": {"id": 5475, "code": "i = 100\nimport math\nprint(math.ceil(i/2))", "coverage": [">", ">", ">"]}, "1877": {"id": 1877, "code": "N = 10;A = 7;B = 5\nif A < B:\n  x = A\nelse:\n  x = B\nif A+B-N < 0:\n  y = 0\nelse:\n  y = A+B-N\nprint (x,y)", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "4557": {"id": 4557, "code": "s = ['x', 'y', 'z']\nt = str(len(s)-2)\nprint(s[0]+t+s[-1])", "coverage": [">", ">", ">"]}, "4347": {"id": 4347, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nr=((h2-h1)*60)+m2-m1-k\nif r>=0:\n  print(r)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15430": {"id": 15430, "code": "x = 64145;y = 123;z = 456\nans = x // (y + z)\nif x - (ans * (y + z)) < z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "1304": {"id": 1304, "code": "val = [111*i for i in range(1, 10)]\nN = 750\nwhile not N in val:\n  N += 1\nprint(N)", "coverage": [">", ">", ">", ">", ">"]}, "6942": {"id": 6942, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\naa = sum(a)\nif aa >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16088": {"id": 16088, "code": "a = 20;b = 30\ni = a - b * 2\nif i <= 0:\n    print('0')\nelse:\n    print(i)", "coverage": [">", ">", ">", ">", "!", "!"]}, "4040": {"id": 4040, "code": "a = 10;b = 0;c = 15;d = 0;K = 30\nhour = (c-a) * 60\nmin = d - b\nans = hour + min - K\nprint(ans) ", "coverage": [">", ">", ">", ">", ">"]}, "9857": {"id": 9857, "code": "import sys\nN = 8\nS = \"))))((((\"\nstack = []\nfor s_i in S:\n    if not stack:\n        stack.append(s_i)\n    elif stack[-1] == \"(\" and  s_i == \")\":\n        stack.pop()\n    else:\n        stack.append(s_i)\nleft = 0\nright = 0\nfor s_i in stack:\n    if s_i == \")\":\n        right += 1\n    else:\n        left += 1\nprint(\"(\" * right + S + \")\" * left)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "3021": {"id": 3021, "code": "S = \"1234567876\"\nans = 10**9\nfor i in range(len(S) - 2):\n    x = S[i:i+3]\n    now = abs(int(x) - 753)\n    ans = min(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8193": {"id": 8193, "code": "n = 8;k = 3\nnums = [7, 3, 1, 8, 4, 6, 2, 5]\ncount = 0\nwhile n > 0:\n    if n > k:\n        n -= k-1\n    else:\n        n -= k\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "3767": {"id": 3767, "code": "x = 12;y = 3;z = 1\ni = 1\nwhile(y+z*2+(z+y)*i <= x):\n    i += 1\nprint(i)", "coverage": [">", ">", ">", ">", ">"]}, "1055": {"id": 1055, "code": "n = 112\nans = 999\nfor i in range(1,10):\n    if 111*i-n>=0:\n        ans = min(ans,111*i-n)\nprint(ans+n)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7722": {"id": 7722, "code": "import math\nn = 3;k = 3\na = [1, 2, 3]\nprint(int(math.ceil((len(a)-1) / ( k -1))))", "coverage": [">", ">", ">", ">"]}, "12625": {"id": 12625, "code": "a = 8;b = 12;k = 2\nl=[0]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        l.append(i)\nl.sort()\nl.reverse()\nprint(l[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8687": {"id": 8687, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14846": {"id": 14846, "code": "N = 3;P = 0\nl = [1, 1, 1]\nl=[i%2 for i in l]\nif sum(l) == 0:\n   print((P==0)*2**N)\nelse:\n   print(2**(N-1))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13102": {"id": 13102, "code": "x = \"5\"\nlist=[\"3\", \"5\", \"7\"]\nif x in list:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "18688": {"id": 18688, "code": "import math\nH = 2\nW = 100\nN = 200\nmax_num = max(H, W)\nans = math.ceil(N / max_num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4493": {"id": 4493, "code": "a = \"smiles\"\nb=a[0]+str(len(a)-2)+a[-1]\nprint(b)", "coverage": [">", ">", ">"]}, "16402": {"id": 16402, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm = max(a)\nb = [abs(i - m / 2) for i in a]\nprint(m, a[b.index(min(b))])", "coverage": [">", ">", ">", ">", ">", ">"]}, "15753": {"id": 15753, "code": "x = 64145;y = 123;z = 456\nchair = (x - z) // (y + z)\nprint(chair)", "coverage": [">", ">", ">"]}, "14897": {"id": 14897, "code": "N = 2;P = 0\nA = [1, 3]\nodd=[]\neven=[]\nfor a in A:\n  if a%2==0:\n    even.append(a)\n  else:\n    odd.append(a)\namod=len(odd)\namev=len(even)\nevonly=2**amev\nfrom math import factorial\nif P==0:\n  evod=0\n  i=0\n  while amod>=i:\n    evod+=factorial(amod)//(factorial(i)*factorial(amod-i))\n    i+=2\n  print(evonly*evod)\nelse:\n  evod=0\n  i=1\n  while amod>=i:\n    evod+=factorial(amod)//(factorial(i)*factorial(amod-i))\n    i+=2\n  print(evonly*evod)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17867": {"id": 17867, "code": "S = \"1700\"\nif 1 <= int(S[:2]) <= 12 and not (1 <= int(S[2:]) <= 12):\n    print('MMYY')\nelif not (1 <= int(S[:2]) <= 12) and 1 <= int(S[2:]) <= 12:\n    print('YYMM')\nelif 1 <= int(S[:2]) <= 12 and 1 <= int(S[2:]) <= 12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "1455": {"id": 1455, "code": "import math\nN = 750\nprint(111*math.ceil(N/111))", "coverage": [">", ">", ">"]}, "1755": {"id": 1755, "code": "N = 10;A = 7;B = 5\nif N-A-B>0:\n\tW=0\nelse:\n    W=A+B-N\nprint(min(A,B),W)", "coverage": [">", ">", "!", "!", ">", ">"]}, "947": {"id": 947, "code": "k = 2\nx = 7%k\ns = set()\nfor i in range(1, k+1):\n  if x == 0:\n    print(i)\n    exit()\n  x = (x*10+7)%k\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3418": {"id": 3418, "code": "a = 12;b = 4\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7730": {"id": 7730, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nfinal=min(a)\nans=0\nflag=-1\ncheck=0\nfor v in a:\n    if flag==-1 and v!=final:\n        flag=2\n        ans+=1\n        check=0\n        if flag==k:\n            flag=-1\n    elif flag>=0:\n        if check==0 and v==final:\n            flag-=1\n            check=1\n        flag+=1\n        if flag==k:\n            flag=-1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "7037": {"id": 7037, "code": "H = 210;N = 5\nA = 210\nif H<=A:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "1664": {"id": 1664, "code": "N = 10;A = 3;B = 5\nr_max = min(A, B)\nif A + B > N:\n    r_min = A + B - N\nelse:\n    r_min = 0\nprint(r_max, r_min)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "18651": {"id": 18651, "code": "a = 14\nb = 12\nc = 112\nprint((c+max(a, b)-1)//max(a, b))", "coverage": [">", ">", ">", ">"]}, "8484": {"id": 8484, "code": "import sys\ninput = sys.stdin.readline\nN = 1\nA1 = [2]\nA2 = [3]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "16026": {"id": 16026, "code": "A = [20, 15]\nif A[0] < A[1]*2:\n    print(0)\nelse:\n    print(A[0]-A[1]*2)", "coverage": [">", ">", ">", "!", "!"]}, "4243": {"id": 4243, "code": "import math\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nstart=60*h1+m1\nend=60*h2+m2\nprint(end-start-k)", "coverage": [">", ">", ">", ">", ">"]}, "5071": {"id": 5071, "code": "s = \"internationalization\"\na = len(s) - 2\nprint(s[0], a, s[len(s)-1], sep = \"\")", "coverage": [">", ">", ">"]}, "452": {"id": 452, "code": "s = ['x', 'y', 'z']\nK = 4\nl = len(s)\nfor i in range(l-1):\n    x = (ord('a')-ord(s[i])) % 26\n    if x <= K:\n        K -= x\n        s[i] = 'a'\ns[l-1] = chr(ord('a') + (ord(s[-1])-ord('a')+K) % 26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1609": {"id": 1609, "code": "N = 100;A = 100;B = 100\nans = (min(A, B), max(0, A + B - N))\nprint(ans[0], ans[1])", "coverage": [">", ">", ">"]}, "4830": {"id": 4830, "code": "s = \"xyz\"\ncount = 0\nfor x in range(1,len(s)-1,1):\n  count +=1\nprint(s[0]+str(count)+s[count+1])", "coverage": [">", ">", ">", ">", ">"]}, "11862": {"id": 11862, "code": "a = 11;b = 16\nc = 11;d = 17\nif a == 12:\n  if c == 1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if c == a + 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "14342": {"id": 14342, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nB = []\ni = 0\nwhile i < N - 1:\n    if A[i] != A[i+1]:\n        B.append(A[i])\n    i += 1\nB.append(A[-1])\nans = 1\ni = 0\nwhile i < len(B) - 2:\n    if (B[i + 1] - B[i]) * (B[i + 2] - B[i + 1]) < 0:\n        ans += 1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12868": {"id": 12868, "code": "X = 5\nprint([\"NO\",\"YES\"][X==3 or X==5 or X==7])", "coverage": [">", ">"]}, "17133": {"id": 17133, "code": "a = \"H\";b = \"H\"\nif a == 'H' and b == 'H':\n    result = 'H'\nif a == 'D' and b == 'H':\n    result = 'D'\nif a == 'D' and b == 'D':\n    result = 'H'\nif a == 'H' and b == 'D':\n    result = 'D'\nprint(result)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "13921": {"id": 13921, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstate = 100\ncount = 1\ntmp = a[0]\nfor i in a:\n  if i == tmp:\n    pass\n  elif i > tmp:\n    if state == 1:\n      pass\n    elif state == 0:\n      count += 1\n      state = 100\n    else:\n      state = 1\n  else:\n    if state == 0:\n      pass\n    elif state == 1:\n      count += 1\n      state = 100\n    else:\n      state = 0\n  tmp = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "8467": {"id": 8467, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10333": {"id": 10333, "code": "import math\nfrom collections import deque\nfrom collections import Counter\na = 100;b = 50;k = 4\ng=math.gcd(a,b)\nd=[]\nfor i in range(1,int(pow(g,0.5))+1):\n  if g%i==0:\n    d.append(i)\n    if g//i not in d:\n      d.append(g//i)\nd.sort(reverse=True)\nprint(d[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1481": {"id": 1481, "code": "n = 112\nwhile True:\n    n_s = str(n)\n    if n_s[0] == n_s[1] == n_s[2]:\n        break\n    n += 1\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4529": {"id": 4529, "code": "s = \"smiles\"\na=len(s)-2\nprint(s[0]+str(a)+s[len(s)-1])", "coverage": [">", ">", ">"]}, "17312": {"id": 17312, "code": "a = \"D\";b = \"D\"\nif (a==\"H\")&(b==\"H\"):\n    print(\"H\")\nelif (a==\"D\")&(b==\"H\"):\n    print(\"D\")\nelif (a==\"D\")&(b==\"D\"):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "7994": {"id": 7994, "code": "import math\nn, k = map(int,\"8 3\".split())\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">"]}, "8570": {"id": 8570, "code": "N = 1\nL1 = [2]\nL2 = [3]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19434": {"id": 19434, "code": "N = 10\nprint(N*2) if N % 2 == 1 else print(N)", "coverage": [">", ">"]}, "13123": {"id": 13123, "code": "x = \"6\"\nans=[\"YES\",\"NO\"][x not in \"357\"]\nprint(ans)", "coverage": [">", ">", ">"]}, "16856": {"id": 16856, "code": "a = \"D\";b = \"D\"\nprint(\"H\" if a==b else \"D\")", "coverage": [">", ">"]}, "12366": {"id": 12366, "code": "s = \"atcoder\"\nn = len(s)\nans = \"No\"\ncnt = 0\nif s[::1] == s[::-1]:\n    cnt += 1\nif s[:int((n-1)/2):1] == s[int((n-1)/2)-1::-1]:\n    cnt += 1\nif s[int((n+1)/2)::1] ==  s[:int((n-1)/2):-1]:\n    cnt += 1\nif cnt == 3:\n    ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">"]}, "5046": {"id": 5046, "code": "S = \"xyz\"\nA=str(len(S)-2)\nprint(S[0]+A+S[len(S)-1])", "coverage": [">", ">", ">"]}, "19070": {"id": 19070, "code": "n = 12\nans=0\nif n%2==0:\n  st=10\n  d=1\n  while st<=n:\n    ans+=(n//st)\n    st*=5\n  print(ans)\nelse:\n  print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11722": {"id": 11722, "code": "ans = \"SAT\"\nif ans == \"SUN\": print(7)\nif ans == \"MON\": print(6)\nif ans == \"TUE\": print(5)\nif ans == \"WED\": print(4)\nif ans == \"THU\": print(3)\nif ans == \"FRI\": print(2)\nif ans == \"SAT\": print(1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1613": {"id": 1613, "code": "import sys\nn = 10;a = 3;b = 5\nmi = max(0, a+b-n)\nma = min(n, min(a, b))\nprint(\"{} {}\".format(ma, mi))", "coverage": [">", ">", ">", ">", ">"]}, "7887": {"id": 7887, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nans = 1\nref = K\nwhile ref < N:\n    ans += 1\n    ref += K-1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13084": {"id": 13084, "code": "a = 5\nprint('YES' if a==7 or a==5 or a==3 else 'NO')", "coverage": [">", ">"]}, "7609": {"id": 7609, "code": "H = 10;N = 3\ndeathblows=map(int,\"4 5 6\".split())\nif sum(deathblows) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "2211": {"id": 2211, "code": "n = 100;a = 100;b = 100\nprint(a if a<b else b, 0 if a+b<n else a+b-n)", "coverage": [">", ">"]}, "11743": {"id": 11743, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == m2:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", "!", "!", ">"]}, "2840": {"id": 2840, "code": "S = \"35753\"\nans = 999\nfor s in range(len(S)-2):\n  ans = min(abs(753-int(S[:3])),ans)\n  S = S[1:]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18606": {"id": 18606, "code": "x = 14\ny = 12\nz = 112\na = max(x,y)\nif z%a == 0:\n  print(z//a)\nelse:\n  print(z//a+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "106": {"id": 106, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i, c in enumerate(s):\n    t = (ord(\"z\") - ord(c) + 1) % 26\n    if k >= t:\n        s[i] = \"a\"\n        k -= t\nt = k % 26\ns[-1] = chr(ord(s[-1]) + t)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9681": {"id": 9681, "code": "n = 6\ns = \")))())\"\nd = [0]*(n+1)\nfor i in range(1, n+1):\n    d[i] = s[:i].count('(') - s[:i].count(')')\nx = min(d)\ns = '('*(-x) + s + ')'*(d[n]-x)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "808": {"id": 808, "code": "K = 2\nif K%2==0 or K%5==0:\n    print(-1)\nelif K==1 or K==7:\n    print(1)\nelse:\n    B = 7\n    i = 1\n    while 1:\n        if B==0:\n            print(i)\n            break\n        else:\n            B = (10 * B + 7) % K\n            i = i + 1", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "19241": {"id": 19241, "code": "N = 12\nif N%2 == 1 :\n    print(0)\n    exit()\nn = 0\ni = 0\nfor i in range(1,26) :\n    n += N//((5**i)*2)\nprint(n)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "11628": {"id": 11628, "code": "S = \"SAT\"\nW = ['', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nprint(W.index(S))", "coverage": [">", ">", ">"]}, "1600": {"id": 1600, "code": "n = 100;a = 100;b = 100\nprint(\"{0} {1}\".format(min(a,b),max(a + b - n,0)))", "coverage": [">", ">"]}, "7335": {"id": 7335, "code": "H = 210;N = 5\nlst = [31, 41, 59, 26, 53]\nfor i in range (0, N):\n    H -= lst[i]\nif H <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "2620": {"id": 2620, "code": "N = \"1 7 9 4\"\nif \"1\" in N and \"9\" in N and \"7\" in N and \"4\" in N:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "7910": {"id": 7910, "code": "n = 8;k = 3\nan = [7, 3, 1, 8, 4, 6, 2, 5]\nmini = min(an)\nneed = 0\nfor a in an:\n    if a != mini:\n        need += 1\nprint(-(-need//(k-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17164": {"id": 17164, "code": "a = \"H\";b = \"H\"\nprint(\"H\" if a==b or a==b else \"D\")", "coverage": [">", ">"]}, "6662": {"id": 6662, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nif sum(A)>=H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "7571": {"id": 7571, "code": "a = 210;b = 5\nlis = [31, 41, 59, 26, 53]\nc = sum(lis)\nprint(\"No\" if a > c else \"Yes\")", "coverage": [">", ">", ">", ">"]}, "12679": {"id": 12679, "code": "X = 6\nprint(\"YES\" if (X == 7) or (X == 5) or (X == 3) else \"NO\")", "coverage": [">", ">"]}, "4273": {"id": 4273, "code": "start_hour = 10;start_min = 0;end_hour = 15;end_min = 0;study_min = 30\nday_time = (end_hour * 60 + end_min) - (start_hour*60 + start_min)\nable_time = day_time - study_min\nprint(able_time)", "coverage": [">", ">", ">", ">"]}, "6634": {"id": 6634, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nres = 0\nfor i in range(n):\n    index1 = bisect.bisect_left(a, b[i])\n    index2 = bisect.bisect_right(c, b[i])\n    res += index1 * (n - index2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10309": {"id": 10309, "code": "A = 8;B = 12;K = 2\nD = [x for x in range(1, min(A,B)+1) if A%x == 0 and B%x == 0]\nprint(D[-K])", "coverage": [">", ">", ">"]}, "18054": {"id": 18054, "code": "S = \"1700\"\nf = int(S[:2])\ns = int(S[2:])\nif 1 <= f <= 12 and 1 <= s <= 12:\n    print('AMBIGUOUS')\nelif 1 <= f <= 12:\n    print('MMYY')\nelif 1 <= s <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "11162": {"id": 11162, "code": "s = \"akasaka\"\nans = 'Yes'\nfor i in range(len(s)//2):\n    if s[i] != s[-i-1]:\n        ans = 'No'\n        break\ns_s = s[:(len(s)-1)//2]\nfor i in range(len(s_s)//2):\n    if s_s[i] != s_s[-i-1]:\n        ans = 'No'\n        break\ns_e = s[(len(s)+3)//2 - 1:]\nfor i in range(len(s_e)//2):\n    if s_e[i] != s_e[-i-1]:\n        ans = 'No'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "11004": {"id": 11004, "code": "s = \"level\"\nl = len(s)\nokey = 1\nll = l//2\nfor i in range(0,l//2):\n    if s[i] != s[l-i-1]:\n        okey = 0\n        break\nif okey == 1: \n    for i in range(0,ll//2):\n        if s[i] != s[ll-i-1]:\n            okey = 0\n            break\nif okey == 1:\n    for i in range(ll+1, ll+ll//2):\n        if s[i] != s[l-i-1]:\n            okey = 0\n            break\nif okey == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "14240": {"id": 14240, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nf = 0\nfor i in range(1, n):\n    if a[i-1] < a[i]:\n        ff = 1\n    elif a[i-1] > a[i]:\n        ff = -1\n    else:\n        ff = 0\n    if f and ff and f != ff:\n        cnt += 1\n        f = 0\n    elif not f:\n        f = ff\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "17199": {"id": 17199, "code": "a = \"H\";b = \"H\"\nprint('H' if (a == 'H') ^ (b == 'D') else 'D')", "coverage": [">", ">"]}, "738": {"id": 738, "code": "n = 101\nx = 0\nc = True\nfor i in range(1000000):\n    x = ((x *10) +7)%n\n    if x == 0:\n        print(i+1)\n        c = False\n        break\nif c:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "2287": {"id": 2287, "code": "n = 10;a = 3;b = 5\nprint(min(a,b),a+b-n) if a+b>n else print(min(a,b),0)", "coverage": [">", ">"]}, "3473": {"id": 3473, "code": "a = 20;b = 15\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3227": {"id": 3227, "code": "A = \"20\";B = \"30\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "7158": {"id": 7158, "code": "h = 20;n = 3\na = [4, 5, 6]\nc = 0\nfor i in range(n):\n  c = c + a[i]\nif (c >= h):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6227": {"id": 6227, "code": "import bisect\nimport sys\nn = 2\nup = [1, 5]\nmid = [2, 4]\nlow = [3, 6]\nans = 0\nfor i in range(len(mid)):\n    pre = bisect.bisect_left(up, mid[i])\n    over = len(low) - bisect.bisect(low, mid[i])\n    ans += pre * over\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6299": {"id": 6299, "code": "from bisect import bisect\nN = 3\naa = [1, 1, 1]\nbb = [2, 2, 2]\ncc = [3, 3, 3]\nb_cost = [0]\nfor i,b in enumerate(bb):\n  b_cost.append(N-bisect(cc, b)+b_cost[i])\nans = 0\nfor a in aa:\n  idx = bisect(bb, a)\n  ans += b_cost[-1]-b_cost[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10503": {"id": 10503, "code": "a = 1;b = 1;K = 1\nans=[]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        ans.append(i)\nans=ans[::-1]\nprint(ans[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1424": {"id": 1424, "code": "x = [i * 111 for i in range(1, 10)]\nN = 111\nfor j in range(len(x)):\n  if 0 <= x[j] - N <= 110:\n    print(x[j])\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "4073": {"id": 4073, "code": "h = 10;m = 0;a = 12;b = 0;k = 120\nh_to_min = h * 60\na_to_min = a * 60\nre1 = a_to_min - h_to_min\nre2 = b - m\nre = re1 + re2\nprint(re-k)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19196": {"id": 19196, "code": "n = 12\nif n % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    for i in range(1, 30):\n        ans += n // (5**i * 2)\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "4015": {"id": 4015, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ntime = (H2-H1)*60+M2-M1\nprint(time-K)", "coverage": [">", ">", ">"]}, "12960": {"id": 12960, "code": "n = 5\nif n==7 or n==5 or n==3:\n  print('YES')\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "6470": {"id": 6470, "code": "import bisect\na = 6\nb = [3, 14, 159, 2, 6, 53]\nb.sort()\nc = [58, 9, 79, 323, 84, 6]\nd = [2643, 383, 2, 79, 50, 288]\nd.sort()\ne = 0\nfor i in c:\n    e += bisect.bisect_left(b, i) * (a - bisect.bisect_right(d, i))\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "168": {"id": 168, "code": "s = ['x', 'y', 'z']\nk = 4\nt = list(map(lambda x:ord(x)-ord(\"a\"),s)) \nfor i in range(len(t)):\n  diff = 26-t[i] \n  if diff != 26 and diff <= k: \n    t[i]+=diff\n    k-=diff\n  else:\n    continue\nt[-1]+=k \nu = \"\".join(list(map(lambda x:chr((x%26+ord(\"a\"))),t)))\nprint(u)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "5837": {"id": 5837, "code": "N = 2\nans = N//2 + N%2\nprint(ans)", "coverage": [">", ">", ">"]}, "534": {"id": 534, "code": "X='abcdefghijklmnopqrstuvwxyz'*2\nS = \"codefestival\"\nk = 100\nN=[]\nfor s in S:\n    if s=='a':\n        N.append(0)\n    else:\n        N.append(26-X.index(s))\nans=''\nfor i in range(len(S)):\n    if N[i]<=k :\n        k-=N[i]\n        ans+='a'\n    else:\n        ans+=S[i]\nans=ans[:-1]+X[X.index(ans[-1])+k%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "9628": {"id": 9628, "code": "n = 6\ns = \")))())\"\nr_cnt, l_cnt = 0, 0\nfor i in range(n):\n    if s[i] == \"(\":\n        r_cnt += 1\n    else:\n        if r_cnt == 0:\n            l_cnt += 1\n        else:\n            r_cnt -= 1\nprint(l_cnt * \"(\" + s + r_cnt * \")\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "2077": {"id": 2077, "code": "n = 10;a = 3;b = 5\nx=a+b-n\nif x>=0:\n  x+=0\nelse:\n  x=0\nprint(min(a,b),x)  ", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5011": {"id": 5011, "code": "x = \"i\";y = ['n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o'];z = \"n\"\nprint(x+str(len(y))+z)", "coverage": [">", ">"]}, "12345": {"id": 12345, "code": "s = \"akasaka\"\nk = int((len(s) -1)/2) \nl = int((len(s) + 3)/2) - 1\nn = list(s)\nif n[0:k] == n[l:]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11087": {"id": 11087, "code": "word = \"level\"\nn = len(word)\nhanbun = int((n-1)/2)\nnotk = 0\nfor i in range(hanbun):\n    if word[i] != word[n-i-1]:\n        notk = 1\n        break\nif hanbun % 2 == 0:\n    hanbun2 = int(hanbun/2)\nelse:\n    hanbun2 = int((hanbun-1)/2)\nfor j in range(hanbun2):\n    if word[j] != word[hanbun-j-1]:\n        notk = 1\n        break\nif notk == 1:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3155": {"id": 3155, "code": "s = \"1111111111\"\nd=1000\nfor i in range(len(s)-1):\n  if abs(int(s[i:i+3])-753)<d:\n    d=abs(int(s[i:i+3])-753)\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2519": {"id": 2519, "code": "N1 = 1;N2 = 4;N3 = 7;N4 = 9\nprint(\"YES\" if N1==1 and N2==4 and N3==7 and N4==9 else \"NO\")", "coverage": [">", ">"]}, "5404": {"id": 5404, "code": "N = 5\nN += 1\nprint(N // 2)", "coverage": [">", ">", ">"]}, "9116": {"id": 9116, "code": "import sys\nsys.setrecursionlimit(10**6)\ns = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[:4] = list(\"2018\")\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">"]}, "2992": {"id": 2992, "code": "s = \"35753\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n  t = abs(753 - int(s[i:i+3]))\n  if t < ans: ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15244": {"id": 15244, "code": "x = 100000;y = 1;z = 1\nhito=x//(y+z)\nif x%(y+z)<z:\n    hito -=1\n    print(hito)\nelse:\n    print(hito)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11194": {"id": 11194, "code": "s = \"atcoder\"\nn = len(s)\ns2 = s[:(n-1)//2]\ns3 = s[((n+3)//2)-1:]\nif (s == s[::-1]) & (s2 == s2[::-1]) & (s3 == s3[::-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3360": {"id": 3360, "code": "a = 20;b = 30\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "5503": {"id": 5503, "code": "N = 5\nprint(N//2 if N/2 == N//2 else N//2 + 1)", "coverage": [">", ">"]}, "7760": {"id": 7760, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nfi = 0\nfor i in range(n):\n    if a[i] == 1:\n        fi = i\n        break\nif (n - 1) % (k - 1) == 0:\n    print((n - 1) // (k - 1))\nelse:\n    print((n - 1) // (k - 1) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "400": {"id": 400, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nn = len(s)\nfor i in range(n):\n    if k <= 0 or s[i] == 'a':\n        continue\n    if 123 - ord(s[i]) <= k:\n        k -= 123 - ord(s[i])\n        s[i] = 'a'\nk %= 26\nif ord(s[-1])+k > 122:\n    s[-1] = chr(97+(122-ord(s[-1])+k))\nelse:\n    s[-1] = chr(ord(s[-1])+k)\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3758": {"id": 3758, "code": "x = 64145;y = 123;z = 456\nc = (x - z)//(y+z)\nprint(c)", "coverage": [">", ">", ">"]}, "10051": {"id": 10051, "code": "N = 3\nS = \"())\"\nstack = []\nfor c in S:\n    if len(stack) > 0:\n        last = stack[-1]\n        if last == '(' and c == ')':\n            stack = stack[:-1]\n            continue\n    stack.append(c)\nleft = stack.count(')')\nright = stack.count('(')\nprint(left * '(' + S + right * ')')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3034": {"id": 3034, "code": "s = \"35753\"\nans = 753\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    gap = abs(753-num)\n    if gap < ans:\n        ans = gap\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8579": {"id": 8579, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    a_sum = sum(a[:i + 1])\n    b_sum = sum(b[i:])\n    if ans < a_sum + b_sum:\n        ans = a_sum + b_sum\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18765": {"id": 18765, "code": "H = 2\nW = 100\nN = 200\nv = max(H, W)\nans = N // v\nif N%v != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "4283": {"id": 4283, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nhk = K//60\nmk = K%60\nans = (H2 - hk)*60 + (M2 - mk) - (H1*60 + M1)\nprint(max(ans, 0))", "coverage": [">", ">", ">", ">", ">"]}, "16574": {"id": 16574, "code": "import math\na = \"D\";b = \"D\"\nprint(\"H\" if a==b else \"D\")", "coverage": [">", ">", ">"]}, "7499": {"id": 7499, "code": "H = 210;N = 5\nA_list = []\nfor i in range(1, N+1):\n    A_list.append(\"A_\" + str(i))\nA_list = map(int, \"31 41 59 26 53\".split())\nA_total = sum(A_list)\nif A_total >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6157": {"id": 6157, "code": "import bisect\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nans=0\nfor i in range(len(b)):\n    la=bisect.bisect_left(a, b[i])\n    ra=bisect.bisect_right(c, b[i])\n    ans+=la*(len(c)-ra)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15807": {"id": 15807, "code": "x = 13;y = 3;z = 1\nwidth = y + z\nprint((x-z) // width)", "coverage": [">", ">", ">"]}, "13253": {"id": 13253, "code": "nim = \"happy,newyear,enjoy\"\nreplace_report = nim.replace(',', ' ')\nprint(replace_report)", "coverage": [">", ">", ">"]}, "9273": {"id": 9273, "code": "S = \"2017/01/31\"\nans = S[:3] + '8' + S[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "16454": {"id": 16454, "code": "n = 5\nA = [2, 4, 6, 9, 11]\ndiff = float(\"inf\")\nans = 0\nfor a in A[:-1]:\n    d = abs(a - A[-1] / 2)\n    if d < diff:\n        ans = a\n        diff = d\nprint(A[-1], ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3779": {"id": 3779, "code": "import sys\nimport math\nx = 12;y = 3;z = 1\ntmp=1\nwhile ((tmp*y+(tmp+1)*z)<=x):\n    tmp += 1\nprint(tmp-1)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7084": {"id": 7084, "code": "h = 20;n = 3\nA = [4, 5, 6]\nflag = False\nfor a in A:\n  h -= a\n  if h<=0:\n    flag = True\n    break\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12577": {"id": 12577, "code": "a = 1;b = 1;k = 1\nt =[]\nfor i in range(1,max(a,b)+1):\n  if a % i == b % i == 0:\n    t.append(i)\nprint(t[-k])", "coverage": [">", ">", ">", ">", ">", ">"]}, "2964": {"id": 2964, "code": "S = \"1234567876\"\nans=754\nfor i in range(len(S)-2):\n  n=abs(753-int(''.join(list(S[i:i+3]))))\n  ans=min(ans,n)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8785": {"id": 8785, "code": "n = 1\na = [2]\nb = [3]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1039": {"id": 1039, "code": "N = 750\nfor i in range(10):\n    num = 100*i+10*i+i\n    if num>=N:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "13888": {"id": 13888, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nzo=0 ; mi=0 ;ans=1\nfor i in range(n-1):\n    if zo==mi==0:\n        if A[i]==A[i+1]:\n            continue\n        elif A[i]>A[i+1]:\n            mi=1; continue\n        else:\n            zo=1;continue\n    if zo:\n        if A[i+1]<A[i]:\n            zo=0; ans+=1\n    if mi and A[i]<A[i+1]:\n        mi=0 ; ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "14686": {"id": 14686, "code": "n = 45;p = 1\neven_count = 21\nodd_count = n - even_count\nif odd_count == 0:\n  print(0 if p == 1 else 2 ** even_count)\nelse:\n  print((2 ** even_count) * (2 ** (odd_count - 1)))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8986": {"id": 8986, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nmax_num = a\nmin_num = a\nif b < min_num:\n    min_num = b\nif b > max_num:\n    max_num = b\nif c < min_num:\n    min_num = c\nif c > max_num:\n    max_num = c\nif d < min_num:\n    min_num = d\nif d > max_num:\n    max_num = d\nif e < min_num:\n    min_num = e\nif e > max_num:\n    max_num = e\nif max_num - min_num <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "11271": {"id": 11271, "code": "s = \"SUN\"\nx = 7\nif s == \"SUN\":\n    pass\nelif s == \"SAT\":\n    x = x - 6\nelif s == \"FRI\":\n    x = x - 5\nelif s == \"THU\":\n    x = x - 4\nelif s == \"WED\":\n    x = x - 3\nelif s == \"TUE\":\n    x = x - 2\nelif s == \"MON\":\n    x = x - 1\nprint(x)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13116": {"id": 13116, "code": "x = \"5\"\nprint('YES' if x in '753' else 'NO')", "coverage": [">", ">"]}, "15462": {"id": 15462, "code": "x = 100000;y = 1;z = 1\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "14388": {"id": 14388, "code": "import sys\ninput = sys.stdin.readline\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nB = []\nfor i in range(1,N):\n    if A[i] - A[i-1] != 0:\n        B.append(A[i] - A[i-1])\ncnt = 0\nfor i in range(1,len(B)):\n    if i >1:\n        if B[i-1]*B[i-2] < 0 :\n            continue\n    if B[i]*B[i-1]<0:\n        cnt += 1\n        B[i]=0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6429": {"id": 6429, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nd = 0\ne = 0\nans = 0\nfor i in b:\n    while i > a[min(d,n-1)] and d <= n-1:\n        d += 1\n    while i >= c[min(e,n-1)] and e < n:\n        e += 1\n    ans += d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9547": {"id": 9547, "code": "S = \"2017/01/31\"\ns=\"\"\nfor i in range(10):\n    if i==3:\n        s+=\"8\"\n    else:\n        s+=S[i]\nprint(s)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "7834": {"id": 7834, "code": "import sys\nimport math\nn = 3;k = 3\nalist = [1, 2, 3]\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "8124": {"id": 8124, "code": "N = 3;K = 3\nA = [1, 2, 3]\ncnt = 1\nlength = K\nwhile True:\n    if length >= N:\n        print(cnt)\n        break\n    length += K-1 \n    cnt += 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16331": {"id": 16331, "code": "N = 2\nA = [0, 100]\nB = A[-1]\nprint(B,min(A,key=lambda x: abs(B-2*x)))", "coverage": [">", ">", ">", ">"]}, "2812": {"id": 2812, "code": "n = \"1234567876\"\ncount = 1000\nfor i in range(len(n)-2):\n    count = min(count, abs(753 - int(n[i:i+3])))\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "7045": {"id": 7045, "code": "import math\nH = 210;N = 5\nA = [31, 41, 59, 26, 53]\nans = sum(A)\nif ans >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "16089": {"id": 16089, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nA = 12;B = 4\nprint(max(A-2*B, 0))", "coverage": [">", ">", ">", ">", ">"]}, "17751": {"id": 17751, "code": "S = \"1905\"\nx=int(S[:2])\ny=int(S[2:])\nif 1<=x<=12 and 1<=y<=12:\n    print(\"AMBIGUOUS\")\nelif 1<=x<=12:\n    print(\"MMYY\")\nelif 1<=y<=12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "14182": {"id": 14182, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nF=0\nK=1\nb=A[0]\nfor a in A:\n    if F==0:\n        if b<a:\n            F=1\n            b=a\n        elif b>a:\n            F=-1\n            b=a\n    elif F==1 and b>a:\n        K+=1\n        F=0\n    elif F==-1 and b<a:\n        K+=1\n        F=0\n    b=a\nprint(K)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1029": {"id": 1029, "code": "n = 112\ndiv_n = -(-n // 111)\nprint(111 * div_n)", "coverage": [">", ">", ">"]}, "13052": {"id": 13052, "code": "if \"5\" in \"753\":\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "12044": {"id": 12044, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "17011": {"id": 17011, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    a = 1\nelse:\n    a = -1\nif b == \"H\":\n    b = 1\nelse:\n    b = -1\nif a*b == 1:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "11": {"id": 11, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n  if ord(\"z\")<ord(s[i])+k and s[i]!=\"a\":\n    k =k-(ord(\"z\")-ord(s[i])+1)\n    s[i]=\"a\"\n  if i==len(s)-1 and 0<k:\n    k=k%26\n    s[i]=chr(ord(s[i])+k)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8881": {"id": 8881, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "4931": {"id": 4931, "code": "a = \"smiles\"\nprint(a[0:1] + str(len(a) - 2) + a[len(a) - 1:len(a)])", "coverage": [">", ">"]}, "5750": {"id": 5750, "code": "d = 2\nif d % 2 == 0:\n  print(d//2)\nelse:\n  print((d//2)+1)", "coverage": [">", ">", ">", "!", "!"]}, "11668": {"id": 11668, "code": "s = \"SAT\"\nans = 0\nif s == 'SUN':\n    ans = 7\nelif s == 'MON':\n    ans = 6\nelif s == 'TUE':\n    ans = 5\nelif s == 'WED':\n    ans = 4\nelif s == 'THU':\n    ans = 3\nelif s == 'FRI':\n    ans = 2\nelif s == 'SAT':\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "18365": {"id": 18365, "code": "h = 3\nw = 7\nn = 10\ncnt = 0\nflg = True\nif h > w:\n    while flg:\n        if h * cnt >= n:\n            flg = False\n            break\n        cnt += 1\nelse:\n    while flg:\n        if w * cnt >= n:\n            flg = False\n            break\n        cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "2534": {"id": 2534, "code": "a = 1;b = 7;c = 9;d = 4\nS={a,b,c,d}\nif S=={1,7,9,4}:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "3487": {"id": 3487, "code": "a = 12;b = 4\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "7311": {"id": 7311, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\na = sum(A)\nif H > a:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7319": {"id": 7319, "code": "hp = 210;count_skills = 5\na = map(int, \"31 41 59 26 53\".split())\nskills_list = list(a)\nfor skill in skills_list:\n    hp -= skill\n    if hp <= 0:\n        print('Yes')\n        break\nif hp >= 1:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "14113": {"id": 14113, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncur = 'N'\ni = 1\nwhile i < N:\n    if cur == 'U':\n        if A[i] < A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'D':\n        if A[i] > A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'N':\n        if A[i] > A[i-1]:\n            cur = 'U'\n        elif A[i] < A[i-1]:\n            cur = 'D'\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "2292": {"id": 2292, "code": "N = 100;A = 100;B = 100\nprint(str(min(A, B)) + \" \" + str(max(A + B - N, 0)))", "coverage": [">", ">"]}, "7498": {"id": 7498, "code": "H = 20;N = 3\nA_list = []\nfor i in range(1, N+1):\n    A_list.append(\"A_\" + str(i))\nA_list = map(int, \"4 5 6\".split())\nA_total = sum(A_list)\nif A_total >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7097": {"id": 7097, "code": "a = 210;b = 5\narr = [31, 41, 59, 26, 53]\nif sum(arr) >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "9652": {"id": 9652, "code": "n = 8\ns = \"))))((((\"\nl, r = 0, 0\nfor i in s:\n    if i == \"(\":\n        r += 1\n    elif r > 0 and i == \")\":\n        r -= 1\n    else:\n        l += 1\nprint(\"(\" * l + s + \")\" * r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8127": {"id": 8127, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nif N == K:\n    print('1')\nelse:\n    print(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9434": {"id": 9434, "code": "a = \"2017/01/07\"\na = a.replace('2017','2018')\nprint(a)", "coverage": [">", ">", ">"]}, "14471": {"id": 14471, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc = 1\nd = 0\nfor i in range(n-1):\n  if a[i] == a[i+1]:\n    pass\n  elif a[i] < a[i+1]:\n    if d < 0:\n      d = 0\n      c += 1\n    else:\n      d += 1\n  else:\n    if d > 0:\n      d = 0\n      c += 1\n    else:\n      d -= 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", "!", "!", ">"]}, "7621": {"id": 7621, "code": "H = 10;N = 3\nA=map(int,\"4 5 6\".split())\nif H<=sum(A):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "17934": {"id": 17934, "code": "s = \"1905\"\nf1=1<=int(s[:2])<=12\nf2=1<=int(s[2:4])<=12\nif f1 and f2:print(\"AMBIGUOUS\")\nelif not f1 and not f2:print(\"NA\")\nelif f1:print(\"MMYY\")\nelse:print(\"YYMM\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1201": {"id": 1201, "code": "N = 750\na = int(str(N)[0] * 3)\nif N == a:\n    print(N)\nelif N < a:\n    print(a)\nelse:\n    print(a + 111)", "coverage": [">", ">", ">", "!", ">", ">", "!", "!"]}, "4888": {"id": 4888, "code": "s = \"internationalization\"\nans=s[0]\nans+=str(len(s)-2)\nans+=s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "6677": {"id": 6677, "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\nif h-sum(A)>0 :\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "19023": {"id": 19023, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit(0)\ndiv = 10\nans = 0\nwhile n >= div:\n    tmp = n\n    ans += tmp // div\n    div *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "12949": {"id": 12949, "code": "n = 6\nprint([\"NO\",\"YES\"][n in {3,5,7}])", "coverage": [">", ">"]}, "11338": {"id": 11338, "code": "s = \"SAT\"\ndic = {'SUN':7, 'MON':6, 'TUE':5, 'WED':4, 'THU':3, 'FRI':2, 'SAT':1}\nprint(dic[s])", "coverage": [">", ">", ">"]}, "12510": {"id": 12510, "code": "import math\na = 8;b = 12;k = 2\ng = math.gcd(a,b)\nc = 0\ni = 1\nfor i in range(g,0,-1) :\n    if g%i == 0 :\n        c+=1\n        if c==k :\n            break\nprint(i)     ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13809": {"id": 13809, "code": "from collections import deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)<=1:\n    pass\n  else:\n    if not (v >= tmp[-1] >= tmp[-2] >= tmp[0] or v <= tmp[-1] <= tmp[-2] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nif tmp:\n  cnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "5262": {"id": 5262, "code": "n = \"1129\"\nif n == '1479':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "18021": {"id": 18021, "code": "S = \"1905\"\nnum1 = int(S[:2])\nnum2 = int(S[2:])\nif 1 <= num1 <= 12 and 1 <=  num2 <= 12:\n    ans = \"AMBIGUOUS\"\nelif 1 <= num1 <= 12 and (num2 == 0 or 12 < num2):\n    ans = \"MMYY\"\nelif (num1 == 0 or 12 < num1) and 1 <=  num2 <= 12:\n    ans = \"YYMM\"\nelse:\n    ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "12295": {"id": 12295, "code": "s = \"akasaka\"\nn = len(s)\ns_ = s[:(n-1)//2]\nif s == s[::-1] and s_ == s_[::-1]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4955": {"id": 4955, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nprint(\"\".join([s[0],str(len(s)-2),s[-1]]))", "coverage": [">", ">"]}, "14474": {"id": 14474, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni=0\ncnt=0\ntmp=[]\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        tmp.append(1)\n    elif a[i]==a[i-1]:\n        tmp.append(0)\n    else:\n        tmp.append(-1)\nflg=0\nswi=0\nfor j in range(len(tmp)):\n    if swi==1:\n        flg=tmp[j]\n        swi=0\n        continue\n    if flg==0:\n        flg=tmp[j]\n    elif flg==1:\n        if tmp[j]==-1:\n            cnt+=1\n            flg=-1\n            swi=1\n    elif flg==-1:\n        if tmp[j]==1:\n            cnt+=1\n            flg=1\n            swi=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8877": {"id": 8877, "code": "N = 4\nA1 = ['1', '1', '1', '1']\nA2 = ['1', '1', '1', '1']\nA1 = [int(A1[i]) for i in range(N)]\nA2 = [int(A2[i]) for i in range(N)]\nSaidai = 0\nfor i in range(N):\n  Atai = 0\n  for j in range(i+1):\n    Atai += A1[j]\n  for h in range(i, N):\n    Atai += A2[h]\n  if Atai > Saidai:\n    Saidai = Atai\nprint(Saidai)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "344": {"id": 344, "code": "makeA = lambda c: (ord('z')-ord(c)+1) % 26\ns = [0]\nK = 25\nlen_s = len(s)\nfor i in range(len_s-1):\n    if s[i] <= K:\n        K -= s[i]\n        s[i] = 0\nif K > 0:\n    s[-1] = (s[-1] + 26 - (K % 26)) % 26\nmakeS = lambda n: chr((26-n)%26+ord('a'))\nprint(''.join(list(map(makeS,s))))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "13208": {"id": 13208, "code": "S = \"happy,newyear,enjoy\"\nprint(S[0:5],S[6:13],S[14:19])", "coverage": [">", ">"]}, "1083": {"id": 1083, "code": "n = 111\nh = n // 100\nx = h * 100 + h * 10 + h\nprint(x) if n <= x else print(x + 111) ", "coverage": [">", ">", ">", ">"]}, "15770": {"id": 15770, "code": "X = 64145;Y = 123;Z = 456\na=(X-Z)//(Y+Z)\nprint(a)", "coverage": [">", ">", ">"]}, "5876": {"id": 5876, "code": "N = 2\nprint(N//2 if N%2 == 0 else N//2 +1)", "coverage": [">", ">"]}, "11639": {"id": 11639, "code": "S = \"SUN\"\nweek = ['SAT','FRI','THU','WED','TUE','MON','SUN']\nfor i in range(7):\n  if S == week[i]:\n    print(i+1)", "coverage": [">", ">", ">", ">", ">"]}, "8577": {"id": 8577, "code": "import itertools\nN = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nmaxi = 0\nfor i in range(N):\n    if sum(A[0:i+1]) + sum(B[i:N]) > maxi:\n        maxi = sum(A[0:i+1]) + sum(B[i:N])\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10453": {"id": 10453, "code": "import math\na = 1;b = 1;c = 1\nd=math.gcd(a,b)\nfor i in range(d,0,-1):\n  if d%i==0:\n    c-=1\n    if c==0:\n      print(i)\n      break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13863": {"id": 13863, "code": "n = 6\na_l = [1, 2, 3, 2, 2, 1]\nans = 1\nis_plus = None\nsub = []\nfor i in a_l:\n    if len(sub) == 0:\n        sub.append(i)\n        continue\n    if i == sub[-1]:\n        sub.append(i)\n        continue\n    if is_plus is None:\n        if sub[-1] > i:\n            is_plus = False\n        else:\n            is_plus = True\n        sub.append(i)\n    elif is_plus is True:\n        if sub[-1] > i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\n    else:\n        if sub[-1] < i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "3564": {"id": 3564, "code": "house_len = 20;curtain_len = 30\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "8806": {"id": 8806, "code": "n = 7\ncandy_map = []\ncandy_map.append(list(map(int, \"3 3 4 5 4 5 3\".split())))\ncandy_map.append(list(map(int, \"5 3 4 4 2 3 2\".split())))\nans = 0\nfor i in range(n):\n    upper = sum(candy_map[0][:i])\n    lower = sum(candy_map[1][i+1:])\n    Sum = upper + lower + candy_map[0][i] + candy_map[1][i]\n    ans = max(ans, Sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18866": {"id": 18866, "code": "N = 5\nans = 0\nif N%2 == 1:\n    print(0)\nelse:\n    for i in range(1,len(str(N))+100):\n        ans += N//(2*5**i)\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!"]}, "4368": {"id": 4368, "code": "list = ['10', '0', '12', '0', '120']\nm1 = int(list[0])*60 + int(list[1])\nm2 = int(list[2])*60 + int(list[3])\nans = m2 - m1\nprint(ans-int(list[4]))", "coverage": [">", ">", ">", ">", ">"]}, "4552": {"id": 4552, "code": "S = \"internationalization\"\na = len(S)\nprint(S[0]+ str(a-2) + S[-1])", "coverage": [">", ">", ">"]}, "7927": {"id": 7927, "code": "N = 8;K = 3\nAx = [7, 3, 1, 8, 4, 6, 2, 5]\nif N == K:\n    print(1)\n    exit()\nN -= K\nans = 1\nwhile N > 0:\n    N = N-(K-1)\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10531": {"id": 10531, "code": "a = 1;b = 1;k = 1\ni=min(a,b)+1\nwhile(k):\n  i-=1\n  if max(a%i,b%i)==0:\n    k-=1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5492": {"id": 5492, "code": "N = 2\nif N&0b1:\n    ans=N//2+1\nelse:\n    ans=N//2\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "8448": {"id": 8448, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\ntmp = sum(A) + B[N-1]\nans = tmp\nfor i in reversed(range(1,N)):\n    tmp -= A[i]\n    tmp += B[i-1]\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12252": {"id": 12252, "code": "s = \"akasaka\"\nn = len(s)\nif s != s[::-1]:\n  print('No')\nelse:\n  s_1 = s[0:(n-1)//2]\n  s_2 = s[(n+1)//2:n]\n  if s_1 == s_1[::-1] and s_2 == s_2[::-1]:\n    print('Yes')\n  else:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "13641": {"id": 13641, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13513": {"id": 13513, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5]+\" \"+s[6:13]+\" \"+s[14:])", "coverage": [">", ">"]}, "15617": {"id": 15617, "code": "icase=0\nif icase==0:\n    x = 64145;y = 123;z = 456\n    n=x//(y+z)\n    if x%(y+z)>=z:\n        print(n)\n    else:\n        print(n-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15254": {"id": 15254, "code": "X = 13;Y = 3;Z = 1\nL=X-Z\nans=0\nfor i in range(1000000):\n    if L >= (Z+Y)*i:\n        ans=i\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "1619": {"id": 1619, "code": "n = [10, 3, 5]\nprint(min(n[1], n[2]), max(0, n[1] + n[2] - n[0]))", "coverage": [">", ">"]}, "5379": {"id": 5379, "code": "N = 100\nans = N // 2\nans += 1 if N % 2 != 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1602": {"id": 1602, "code": "n = 10;a = 7;b = 5\nprint(min(a, b), a + b - n if n <= a + b else 0)", "coverage": [">", ">"]}, "2321": {"id": 2321, "code": "N = 10;A = 7;B = 5\nif N-A-B >= 0:\n    print(min(A,B),0)\nelse:\n    print(min(A,B),abs(N-A-B))", "coverage": [">", ">", "!", "!", ">"]}, "15761": {"id": 15761, "code": "x = 13;y = 3;z = 1\nmitumori=x//(y+z)\nif x - mitumori*(y+z)>=z:print(mitumori)\nelse:print(mitumori-1)", "coverage": [">", ">", ">", "!"]}, "6068": {"id": 6068, "code": "n = 2\nans = -(-n//2)\nprint(ans)", "coverage": [">", ">", ">"]}, "881": {"id": 881, "code": "k = 2\nn = 7\nif k == 1 or k == 7:\n    print(1)\n    exit()\nfor i in range(1,k+1):\n    n = n*10 + 7\n    if n % k == 0:\n        print(i+1)\n        exit()\n    n %= k\nprint(-1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "15642": {"id": 15642, "code": "X = 13;Y = 3;Z = 1\nn = X // (Y+Z)\nif X % (Y+Z) < Z :\n    print(n-1)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12126": {"id": 12126, "code": "m = 11;d = 30\nn = 12;e = 1\nprint(int(n >= 2 and e == 1))", "coverage": [">", ">", ">"]}, "18819": {"id": 18819, "code": "H = 2\nW = 100\nN = 200\nprint((N+max(H, W) - 1)//max(H, W))", "coverage": [">", ">", ">", ">"]}, "5294": {"id": 5294, "code": "N = 2\nq, mod = divmod(N, 2)\nif mod == 0:\n    print(q)\nelse:\n    print(q+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "235": {"id": 235, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nn=len(s)\nk = 100\na=[]\nfor i in range(n):\n  if i==n-1:\n    s[i]=chr(97+(ord(s[i])-97+k)%26)\n    break\n  if s[i]==\"a\":continue\n  t=26-(ord(s[i])-97)%26\n  if t>k:continue\n  k-=min(t,k)\n  s[i]=chr(97+(ord(s[i])-97+t)%26)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16283": {"id": 16283, "code": "n = 5\nl = [2, 4, 6, 9, 11]\nans=l[0]\nfor i in range(n-1):\n  if abs(l[-1]/2-ans)>abs(l[-1]/2-l[i]):\n    ans=l[i]\nprint(l[-1],ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9568": {"id": 9568, "code": "s = \"2017/01/07\"\ns = \"2018/01\" + s[7:10]\nprint(s)", "coverage": [">", ">", ">"]}, "3777": {"id": 3777, "code": "x = 64145;y = 123;z = 456\none_length = y + z\nprint(int((x-z) / one_length))", "coverage": [">", ">", ">"]}, "8508": {"id": 8508, "code": "import sys\nn = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nif n==1:\n    print(a1[0]+a2[0])\n    sys.exit()\nfor i in range(n-1):\n    tmp=a2[n-1]\n    for j in range(i+1):\n        tmp+=a1[j]\n    for k in range(i,n-1):\n        tmp+=a2[k]\n    if tmp>ans:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14550": {"id": 14550, "code": "N = 2;P = 0\nA = [1, 3]\neven = 0\nodd = 0\nfor i in range(N):\n    if A[i]%2==0:\n        even += 1\n    else:\n        odd += 1\nif odd>=1:\n    ans = pow(2,even+odd-1)\nelif P==0:\n    ans = pow(2,even)\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "16563": {"id": 16563, "code": "s = \"H H\"\nif s == \"H H\" or s == \"D D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "15709": {"id": 15709, "code": "import math\nX = 64146;Y = 123;Z = 456\nans=0\nans=math.floor((X-Z)/(Y+Z))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "8272": {"id": 8272, "code": "import math\nn = 4;k = 3\na = [2, 3, 1, 4]\nb=math.ceil((n-1)/(k-1))\nprint(b)", "coverage": [">", ">", ">", ">", ">"]}, "3140": {"id": 3140, "code": "S = \"1111111111\"\nn=len(S)\nans = 1e8\nfor i in range(n-2):\n    m = int(S[i] + S[i+1] + S[i+2])\n    d = abs(m-753)\n    if d < ans:\n        ans = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6807": {"id": 6807, "code": "HP = 210;n = 5\na = [31, 41, 59, 26, 53]\ncount = 0\nfor i in a:\n  count += i\nif count >= HP:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "19066": {"id": 19066, "code": "n = 12\nif n%2:print(0);exit()\ntwo = 0\nfive = 0\nval = 2\nwhile val<=n:\n    two+=n//val\n    val *= 2\nval = 5\nwhile val<=n:\n    five +=(n//val)//2\n    val *=5\nprint(min(two,five))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19214": {"id": 19214, "code": "N = 12\nif N % 2 == 1:\n    print(0)\n    exit()\nres = 0\nfives = 10\nwhile True:\n    if N // fives == 0:\n        break\n    res += N//fives\n    fives *= 5\nprint(res)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7981": {"id": 7981, "code": "import math\nN = 3;K = 3\nA = \"1 2 3\"\nprint(math.ceil((N-K)/(K-1))+1)", "coverage": [">", ">", ">", ">"]}, "16263": {"id": 16263, "code": "import bisect\nN = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nn = A[-1]\nmid = bisect.bisect(A, n/2)\nif abs(n/2-A[mid-1]) > abs(n/2-A[mid]):\n    print(n, A[mid])\nelse:\n    print(n, A[mid-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11680": {"id": 11680, "code": "S = \"SAT\"\nW = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nw = W.index(S)\nprint(7 - w)", "coverage": [">", ">", ">", ">"]}, "6954": {"id": 6954, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nprint(\"Yes\" if H<=sum(A) else \"No\")", "coverage": [">", ">", ">"]}, "17865": {"id": 17865, "code": "S = \"1905\"\nif 1 <= int(S[:2]) <= 12 and not (1 <= int(S[2:]) <= 12):\n    print('MMYY')\nelif not (1 <= int(S[:2]) <= 12) and 1 <= int(S[2:]) <= 12:\n    print('YYMM')\nelif 1 <= int(S[:2]) <= 12 and 1 <= int(S[2:]) <= 12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "13082": {"id": 13082, "code": "age = 5\nif age in [7,5,3]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "6561": {"id": 6561, "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 6\nAs = [2, 3, 6, 14, 53, 159]\nBs = [6, 9, 58, 79, 84, 323]\nCs = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor b in Bs:\n    ind_c = bisect_left(Cs,b+1)\n    ind_a = bisect_right(As,b-1)\n    if ind_c == N:continue\n    cnt += (N - ind_c) * (ind_a)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13840": {"id": 13840, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount=1\nsign=0\nfor i in range(N-1):\n    diff=A[i+1]-A[i]\n    if sign*diff<0:\n        count+=1\n        sign=0\n    elif sign==0:\n        sign=diff\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11490": {"id": 11490, "code": "a={\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(a[\"SAT\"])", "coverage": [">", ">"]}, "2352": {"id": 2352, "code": "N = 13;W = 3\ntotal1 = 0\ntotal2 = 0\nif N>1:\n  total1 = N*(N-1)//2\nelse:\n  total1 = 0\nif W>=2:\n  total2 = W*(W-1)//2\nelse:\n  total2 = 0\nprint(total1+total2)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "11296": {"id": 11296, "code": "a=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\ns = \"SAT\"\nk=-1\nfor i in range(7):\n    if(a[i]==s):k=i\nk=(7-k)\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8465": {"id": 8465, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18574": {"id": 18574, "code": "import math\nA = 2\nB = 100\nN = 200\nif A> B:\n    print(math.ceil(N/A))\nelse:\n    print(math.ceil(N/B))    ", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "8849": {"id": 8849, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16781": {"id": 16781, "code": "a = \"D\";b = \"D\"\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "12478": {"id": 12478, "code": "S = \"akasaka\"\nm = len(list(S)) // 2\nl = m + 1\nprint('Yes' if (S == S[::-1]) & (S[:m] == S[:m:][::-1]) & (S[l:] == S[l::][::-1]) else 'No')", "coverage": [">", ">", ">", ">"]}, "16074": {"id": 16074, "code": "A = 20;B = 15\nans = A - B*2\nif ans <= 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11999": {"id": 11999, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D1>D2 and M2>M1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "537": {"id": 537, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\ncnt = 0\nans = ''\nfor i in range(len(s)):\n    cnt = (ord('z') - ord(s[i]) + 1) % 26\n    if cnt <= k:\n        k -= cnt\n        s[i] = 'a'\ns[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18920": {"id": 18920, "code": "n = 5\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "11167": {"id": 11167, "code": "s = \"level\"\nn=len(s)\nif(s==s[::-1]):\n    if((s[:(n-1)//2]==s[:(n-1)//2][::-1]) and (s[(n+4)//2-1:]==s[(n+4)//2-1:][::-1])):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "2919": {"id": 2919, "code": "S = \"1234567876\"\nm=1000\nfor i in range(0,len(S)-2):\n    m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "7423": {"id": 7423, "code": "H = 10;N = 3\nA = map(int, \"4 5 6\".split())\nA_sum = sum(A)\nprint(\"Yes\" if H - A_sum <= 0 else \"No\")", "coverage": [">", ">", ">", ">"]}, "15412": {"id": 15412, "code": "import math\nx = 100000;y = 1;z = 1\nt = (x-z)/(y+z)\nprint(math.floor(t))", "coverage": [">", ">", ">", ">"]}, "13915": {"id": 13915, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nwhile i < n:\n    i1 = i\n    last = a[i]\n    while i1 < n:\n        if last <= a[i1]:\n            last = a[i1]\n            i1 += 1\n        else: break\n    i2 = i\n    while i2 < n:\n        if last >= a[i2]:\n            last = a[i2]\n            i2 += 1\n        else: break\n    i = max(i1, i2)\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7904": {"id": 7904, "code": "import math\nn = 8;k = 3\nA = \"7 3 1 8 4 6 2 5\"\nprint(math.ceil((n-1) / (k-1)))", "coverage": [">", ">", ">", ">"]}, "10131": {"id": 10131, "code": "n = 6\ns = \")))())\"\nt = s\nwhile \"()\" in t:\n    t = t.replace(\"()\", \"\")\na = t.count(\")\"); b = t.count(\"(\")\nprint(\"(\" * a + s + \")\" * b)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4986": {"id": 4986, "code": "s = \"xyz\"\nprint(s[0], len(s) - 2, s[-1], sep='')", "coverage": [">", ">"]}, "1566": {"id": 1566, "code": "n = 750\nli = [int(str(i)*3) for i in range(10)]\nimport bisect\nx = bisect.bisect_left(li,n)\nprint(li[x])", "coverage": [">", ">", ">", ">", ">"]}, "12686": {"id": 12686, "code": "n = \"5\"\nprint(\"YES\" if n == \"3\" or n == \"5\" or n == \"7\" else \"NO\")", "coverage": [">", ">"]}, "4153": {"id": 4153, "code": "import sys\ninput=sys.stdin.readline\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh1=h1*60\nh2=h2*60\nm1+=h1\nm2+=h2\nprint(m2-m1-k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18974": {"id": 18974, "code": "n = 12\nif n % 2: print(0); exit()\nn //= 2\nans = 0\nwhile n >= 5:\n    n //= 5\n    ans += n\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8867": {"id": 8867, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15587": {"id": 15587, "code": "x = 12;y = 3;z = 1\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "1013": {"id": 1013, "code": "n = 750\nlis = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nif n <= lis[0]:\n    print(lis[0])\nelif n <= lis[1]:\n    print(lis[1])\nelif n <= lis[2]:\n    print(lis[2])\nelif n <= lis[3]:\n    print(lis[3])\nelif n <= lis[4]:\n    print(lis[4])\nelif n <= lis[5]:\n    print(lis[5])\nelif n <= lis[6]:\n    print(lis[6])\nelif n <= lis[7]:\n    print(lis[7])\nelif n <= lis[8]:\n    print(lis[8])", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "17931": {"id": 17931, "code": "s = \"1905\"\nif 0 < int(s[:2]) <= 12 and 0 < int(s[2:]) <= 12:\n  print('AMBIGUOUS')\nelif 0 < int(s[:2]) <= 12 and int(s[2:]) >= 0:\n  print('MMYY')\nelif 0 < int(s[2:]) <= 12 and int(s[:2]) >= 0:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "87": {"id": 87, "code": "s = \"codefestival\"\nk = 100\nlen_s = len(s)\nmoji = [0]*(len_s)\nfor i in range(len_s):\n    num = 26-(ord(s[i])-ord('a'))\n    if num <= k and num != 26:\n        moji[i] = 'a'\n        k -= num\n    else:\n        moji[i] = s[i]\nif k != 0:\n    moji[len_s-1] = chr(ord(moji[len_s-1])+k%26)\nprint(*moji,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13399": {"id": 13399, "code": "x = \"abcde,fghihgf,edcba\"\nprint(x.replace(\",\",\" \"))", "coverage": [">", ">"]}, "11820": {"id": 11820, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2: print(0)\nelse: print(1)", "coverage": [">", ">", ">", "!"]}, "14661": {"id": 14661, "code": "import collections\nn = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif p == 0:\n  if a2[1] == 0:\n    print(2 ** n)\n  else:\n    print(2 ** (n - 1))\nelse:\n  if a2[1] == 0:\n    print(0)\n  else:\n    print(2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "7690": {"id": 7690, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nh = 20;n = 3\na = [4, 5, 6]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6017": {"id": 6017, "code": "div = 1;rem = 0\nprint(div + bool(rem))", "coverage": [">", ">"]}, "17424": {"id": 17424, "code": "s = 1905\na = s // 100\nb = s % 100\nif 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= b <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "7244": {"id": 7244, "code": "H = 20;M = 3\nattack = [4, 5, 6]\nif H - sum(attack) <=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "9348": {"id": 9348, "code": "a = \"2017/01/07\"\nprint(\"2018\"+a[4:])", "coverage": [">", ">"]}, "4021": {"id": 4021, "code": "x1 = 10;y1 = 0;x2 = 12;y2 = 0;t = 120\nprint((x2-x1)*60+(y2-y1)-t)", "coverage": [">", ">"]}, "11350": {"id": 11350, "code": "dow = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\" ]\ndow = dow[::-1]\nprint(dow.index(\"SAT\")+1)", "coverage": [">", ">", ">"]}, "16412": {"id": 16412, "code": "N = 5\nL = [6, 9, 4, 2, 11]\nL=sorted(list(set(L)))\nM=L[-1]\nK=M//2+M%2\nS=[abs(i-K) for i in L]\nprint(M,L[S.index(min(S))])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1786": {"id": 1786, "code": "n = 100;a = 100;b = 100\nmax_r = min([a,b])\nmin_r = max([0, (a+b)-n])\nprint(\"{} {}\".format(max_r, min_r))", "coverage": [">", ">", ">", ">"]}, "4647": {"id": 4647, "code": "S = \"xyz\"\ns_between_len = len(S) - 2\na = S[:1] + str(s_between_len) + S[-1]\nprint(a)", "coverage": [">", ">", ">", ">"]}, "15721": {"id": 15721, "code": "a = 12;b = 3;c = 1\nprint(int((a-c)/(b+c)))", "coverage": [">", ">"]}, "11877": {"id": 11877, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nM1 = int(M1)\nM2 = int(M2)\nif M1!=M2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "13678": {"id": 13678, "code": "import sys\ninput = sys.stdin.readline\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nminute = (h2 - h1) * 60 + (m2 -m1)\nprint(minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "12241": {"id": 12241, "code": "a = \"level\"\nb=len(a)\nc=(b-1)/2\nd=(b+1)/2\nif a[:int(c)]==a[int(d):]:\n\tprint(\"Yes\")\nelse:\n  \tprint(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11466": {"id": 11466, "code": "s = \"SAT\"\ns=s.lower()\nweek=['sun','mon','tue','wed','thu','fri','sat']\nans=week.index(s)\nprint(7-int(ans))", "coverage": [">", ">", ">", ">", ">"]}, "16083": {"id": 16083, "code": "A = \"20\";B = \"15\"\nA=int(A)\nB=int(B)\nif A-2*B>=0:\n  print(A-2*B)\nelif A-2*B<0:\n  print(0)", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "10332": {"id": 10332, "code": "import math\nfrom collections import deque\nfrom collections import Counter\na = 8;b = 12;k = 2\ng=math.gcd(a,b)\nd=[]\nfor i in range(1,int(pow(g,0.5))+1):\n  if g%i==0:\n    d.append(i)\n    if g//i not in d:\n      d.append(g//i)\nd.sort(reverse=True)\nprint(d[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13106": {"id": 13106, "code": "icase=0\nif icase==0:\n    x = 5\n    if x==7 or x==5 or x==3:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9855": {"id": 9855, "code": "import sys\nN = 3\nS = \"())\"\nstack = []\nfor s_i in S:\n    if not stack:\n        stack.append(s_i)\n    elif stack[-1] == \"(\" and  s_i == \")\":\n        stack.pop()\n    else:\n        stack.append(s_i)\nleft = 0\nright = 0\nfor s_i in stack:\n    if s_i == \")\":\n        right += 1\n    else:\n        left += 1\nprint(\"(\" * right + S + \")\" * left)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10888": {"id": 10888, "code": "s = \"atcoder\"\nn = len(s)\ncen1 = int((n-1)/2)\ncen2 = int((n+3)/2)\nif s == s[::-1] and s[:cen1] == s[cen1-1::-1] and s[cen2-1:n] == s[n:cen2-2:-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4182": {"id": 4182, "code": "h = 10;m = 0;H = 15;M = 0;K = 30\nprint(max(0,(H-h)*60+M-m -K))", "coverage": [">", ">"]}, "5498": {"id": 5498, "code": "N = 2\nprint(int(N/2) if N % 2 == 0 else int((N+1)/2))", "coverage": [">", ">"]}, "121": {"id": 121, "code": "s = [120, 121, 122]\nk = 4\nfor i in range(len(s)-1):\n  if s[i] == ord(\"a\"): continue\n  t = ord(\"z\")+1-s[i]\n  if k >= t:\n    s[i] = 97\n    k -= t\nif k > 0:\n  k %= 26\n  s[-1] += k\n  if s[-1] > ord(\"z\"):\n    s[-1] -= 26\nprint(\"\".join(list(map(chr, s))))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3923": {"id": 3923, "code": "X = 12;Y = 3;Z = 1\nprint(int((X-Z)/(Z+Y)))", "coverage": [">", ">"]}, "17227": {"id": 17227, "code": "a = \"D\";b = \"H\"\nif a == \"H\": print(b)\nelse: print(\"H\" if b == \"D\" else \"D\")", "coverage": [">", ">", ">"]}, "4295": {"id": 4295, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\na1 = h1*60+m1\na2 = h2*60+m2\nprint(a2-a1-k)", "coverage": [">", ">", ">", ">"]}, "8641": {"id": 8641, "code": "n = 5\nal = [3, 2, 2, 4, 1]\nbl = [1, 2, 2, 2, 1]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8004": {"id": 8004, "code": "n = 3;k = 3\na = [1, 2, 3]\nm = n-k\nif m>0:\n  if m%(k-1)==0:\n    print(m//(k-1) + 1)\n  else:\n    print(m//(k-1) + 2)\nelse:\n  print(m//(k-1) + 1)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "7118": {"id": 7118, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nhitpoint=h\natack = a[:]\nfor e in atack:\n    hitpoint -= e\n    if hitpoint <= 0:\n        break\nif hitpoint <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "19395": {"id": 19395, "code": "s = 10\nif s%2==0:\n  print(s)\nelse:\n  print(2*s)", "coverage": [">", ">", ">", "!", "!"]}, "14723": {"id": 14723, "code": "N = 2;P = 0\nA = [1, 3]\nin_odd = False\nfor i in range(N):\n    if A[i]%2:\n        in_odd = True\n        break\nif not in_odd:\n    if P:\n        print(0)\n    else:\n        print(2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "1960": {"id": 1960, "code": "N = 10;A = 3;B = 5\nprint(min(A, B), max(0, A+B-N))", "coverage": [">", ">"]}, "15659": {"id": 15659, "code": "x = 13;y = 3;z = 1\nnum = x//(y+z)\nmod = x%(y+z)\nif 0<=mod<z:num-=1\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "11580": {"id": 11580, "code": "s = \"SUN\"\nt = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nprint(7-int(t.index(s)))", "coverage": [">", ">", ">"]}, "2174": {"id": 2174, "code": "n = 10;a = 7;b = 5\nprint(min(a, b),0 if (a + b) <= n else abs(b - (n - a)))", "coverage": [">", ">"]}, "6359": {"id": 6359, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (n - bisect.bisect(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17261": {"id": 17261, "code": "a = \"D\";b = \"D\"\nx={'H':1,'D':-1}\nif x[a]*x[b]==1:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", ">", "!", "!"]}, "3753": {"id": 3753, "code": "x = 64145;y = 123;z = 456\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "5761": {"id": 5761, "code": "N = 5\nif N%2==0: print(N//2)\nelse: print(N//2+1)", "coverage": [">", ">", ">"]}, "8182": {"id": 8182, "code": "n = 4;k = 3\nA = [2, 3, 1, 4]\ncounter = 0\nfor i in range(0,n,k-1):\n  min_n = min(A[i:i+k])\n  max_n = max(A[i:i+k])\n  if min_n != max_n:\n    counter += 1\n  if i+k-1 < n:\n    A[i+k-1] = min_n\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1485": {"id": 1485, "code": "n = 750\nfor i in range(1,10):\n  if i * 111 >= n:\n    print(i *111)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "8125": {"id": 8125, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ncnt = 1\nlength = K\nwhile True:\n    if length >= N:\n        print(cnt)\n        break\n    length += K-1 \n    cnt += 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12204": {"id": 12204, "code": "date1 = ['11', '30']\ndate2 = ['12', '1']\nif date1[0] != date2[0]:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "4649": {"id": 4649, "code": "l = ['s', 'm', 'i', 'l', 'e', 's']\nprint('{}{}{}'.format(l[0],len(l)-2,l[-1]))", "coverage": [">", ">"]}, "2641": {"id": 2641, "code": "s={1,7,9,4}\nt = {1, 4, 9, 7}\nprint(\"YES\" if t==s else \"NO\")", "coverage": [">", ">", ">"]}, "2134": {"id": 2134, "code": "N = 10;A = 3;B = 5\nmaxv = min(A, B)\nif A+B-N >= 0:\n    minv = A+B-N\nelse:\n    minv = 0\nprint(maxv, minv)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "8851": {"id": 8851, "code": "n = 1\nA1 = [2]\nA2 = [3]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7588": {"id": 7588, "code": "H = 211;N = 5\nlist_A = [31, 41, 59, 26, 53]\nsum_list_A = sum(list_A)\nif sum_list_A >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7460": {"id": 7460, "code": "n = 20;m = 3\nl = [4, 5, 6]\ns=sum(l)\nif(s>=n):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9370": {"id": 9370, "code": "s = \"2017/01/07\"\nprint(\"2018/01/\" + s[8::])", "coverage": [">", ">"]}, "7969": {"id": 7969, "code": "n = 8;k = 3\ns = \"7 3 1 8 4 6 2 5\"\ni = s.find(\"1\")/2\nans = 0\nwhile ans * (k-1) < i:\n    ans += 1\ni = max(i, ans * (k-1))\ntmp = 0\nwhile tmp * (k-1) + i < n-1:\n    tmp += 1\nprint(ans + tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7644": {"id": 7644, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nsum=0\nfor i in range(len(A)):\n    sum+=A[i]\nif H<=sum :\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16965": {"id": 16965, "code": "icase=0\nif icase==0:\n    a = \"H\";b = \"H\"\n    if a==\"H\":\n        print(b)\n    elif a==\"D\":\n        if b==\"H\":\n            print(\"D\")\n        elif b==\"D\":\n            print(\"H\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "15168": {"id": 15168, "code": "x = 64146;y = 123;z = 456\nx-=z\nans=x//(y+z)\nrem=x%(y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "6121": {"id": 6121, "code": "N = 3\nL = []\nL.extend(((int(x), 3)  for x in \"1 1 1\".split()))\nL.extend(((int(x), 2)  for x in \"2 2 2\".split()))\nL.extend(((int(x), 1)  for x in \"3 3 3\".split()))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4186": {"id": 4186, "code": "string = \"10 0 15 0 30\"\nX = 0\nli = []\nfor a in range(len(string)):\n    if string[a] == \" \":\n        li.append(string[X:a])\n        X = a+1\nli.append(string[X:])\nfor aa in range(len(li)):\n    li[aa] = int(li[aa])\nh1 = li[0]\nm1 = li[1]\nh2 = li[2]\nm2 = li[3]\nk = li[4]\nTime = (h2 * 60 + m2) - (h1 * 60 + m1) - k\nprint(int(Time))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "186": {"id": 186, "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nfor i in range(len(S)):\n  n = ord(S[i])\n  if S[i] == 'a':\n    continue\n  if ord('z') - n + 1 <= K:\n    K -= ord('z') - n + 1\n    S[i] = 'a'\nassert K >= 0\nif K != 0:\n  n = ord(S[-1])\n  n -= ord('a')\n  n += K\n  n %= 26\n  n += ord('a')\n  S[-1] = chr(n)\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13416": {"id": 13416, "code": "S = \"haiku,atcoder,tasks\"\nprint(S[:5]+' '+S[6:13]+' '+S[14:])", "coverage": [">", ">"]}, "10216": {"id": 10216, "code": "N = 8\nS = \"))))((((\"\ndiff = [0] * (N + 1)\nfor i in range(N):\n    if S[i] == \"(\":\n        diff[i + 1] = diff[i] + 1\n    else:\n        diff[i + 1] = diff[i] - 1\nmin_diff = min(diff)\nprint(\"(\" * -min_diff + S + \")\" * (diff[N] - min_diff))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "4205": {"id": 4205, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ntimeW = M1 + H1 * 60\ntimeS = M2 + H2 * 60\nprint(timeS - timeW - K)", "coverage": [">", ">", ">", ">"]}, "17325": {"id": 17325, "code": "a = \"H\";b = \"H\"\nif a == \"H\" and b == \"H\":\n  print(\"H\")\nelif a == \"D\" and b == \"D\":\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "3361": {"id": 3361, "code": "A = 12;B = 4\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "10786": {"id": 10786, "code": "s = \"atcoder\"\na = s[:len(s)//2]\nb = s[len(s)//2+1:]\nprint('Yes' if s == s[::-1] and a == a[::-1] and b == b[::-1] else 'No')", "coverage": [">", ">", ">", ">"]}, "8504": {"id": 8504, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16694": {"id": 16694, "code": "a = \"D\";b = \"D\"\nif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" or b == \"D\":\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "8354": {"id": 8354, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "554": {"id": 554, "code": "s = \"xyz\"\nk = 4\nn = len(s)\nans = []\nfor i in range(n):\n    if s[i] == \"a\":\n        ans.append(\"a\")\n    elif 123 - ord(s[i]) <= k:\n        ans.append(\"a\")\n        k -= 123 - ord(s[i])\n    else:\n        ans.append(s[i])\nk %= 26  \nans[-1] = chr((ord(ans[-1]) + k - 97) % 26 + 97)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "7297": {"id": 7297, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if sum(a)>=h else 'No')", "coverage": [">", ">", ">"]}, "1228": {"id": 1228, "code": "n = \"112\"\nfor i in [\"111\",\"222\",\"333\",\"444\",\"555\",\"666\",\"777\",\"888\",\"999\"]:\n    if i == n:\n        print(n)\n        break\n    elif n < i:\n        print(i)\n        break", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "11802": {"id": 11802, "code": "X = 11;Y = 16\nX1 = 11;Y1 = 17\nif Y1 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "5773": {"id": 5773, "code": "n = 5\nprint((n//2)+int(n%2!=0))", "coverage": [">", ">"]}, "7842": {"id": 7842, "code": "n = 3;k = 3\na = [1, 2, 3]\nn-=1\nk-=1\nif n%k==0: print(n//k)\nelse: print(n//k+1)", "coverage": [">", ">", ">", ">", ">", "!"]}, "11980": {"id": 11980, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2==1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "493": {"id": 493, "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n    if s[i] != \"a\" and (123-ord(s[i])) <= k:\n        k -= (123-ord(s[i]))\n        s[i] = \"a\"\n    if i == len(s)-1:\n        s[i] = (chr((((ord(s[i])+(k%26))-97)%26)+97))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13947": {"id": 13947, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nup = False\ndown = False\nprev = a.pop(0)\nfor i in a:\n    if (not up) and (not down):\n        if prev < i:\n            up = True\n        elif prev > i:\n            down = True\n    elif up:\n        if prev > i:\n            ans += 1\n            up = False\n    elif down:\n        if prev < i:\n            ans += 1\n            down = False\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "15811": {"id": 15811, "code": "x = 64145;y = 123;z = 456\nwidth = y + z\nprint((x-z) // width)", "coverage": [">", ">", ">"]}, "7805": {"id": 7805, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\ncount =0\nfirst = True\nwhile N >=K:\n    if  first ==True:\n        count +=1\n        N-=K\n        first =False\n    else:\n        count+=1\n        N-=(K-1)\nif N!=0:\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "9880": {"id": 9880, "code": "n = 8\ns = \"))))((((\"\nL=0\nR=0\nfor i in s:\n  if i==')':\n    if R:R-=1\n    else:L+=1\n  else:\n    R+=1\nprint('('*L+s+')'*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "11732": {"id": 11732, "code": "M = 11;D = 16\nMM = 11;DD = 17\nif MM-1==M or (MM-1==0 and M==12):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16306": {"id": 16306, "code": "n = 2\na = [100, 0]\na.sort()\na.reverse()\nx=a[0]\ndiff=10**9\nfor i in range(1,n):\n  if abs(x-2*a[i])<diff:\n    y=a[i]\n    diff=abs(x-2*y)\nprint(x)\nprint(y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6447": {"id": 6447, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nA.sort()\nB = [58, 9, 79, 323, 84, 6]\nB.sort()\nC = [-2643, -383, -2, -79, -50, -288]\nC.sort()\nans=0\nfor b in B:\n    a=bisect.bisect_left(A,b)\n    c=bisect.bisect_left(C,-b)\n    ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12376": {"id": 12376, "code": "import sys\nS = \"akasaka\"\nN=len(S)\nif S[:N//2]==S[N//2+1:][::-1]:\n  if N==3:\n    print(\"Yes\")\n  elif (N//2)%2==1:\n    if S[:(N//2)//2]==S[(N//2)//2+1:N//2][::-1] and S[N//2+1:-(N//2)//2]==S[-(N//2)//2+1:][::-1]:\n      print(\"Yes\")\n    else:\n      print(\"No\")\n  else:\n    if S[:(N//2)//2]==S[(N//2)//2:N//2][::-1] and S[N//2+1:-(N//2)//2]==S[-(N//2)//2:][::-1]:\n      print(\"Yes\")\n    else:\n      print(\"No\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18975": {"id": 18975, "code": "N = 12\na=0\nfor i in range(1,36):a+=N//2//5**i\nprint(0 if N%2 else a)", "coverage": [">", ">", ">", ">"]}, "16104": {"id": 16104, "code": "a = 12;b = 4\nresult = a - (b * 2)\nif result <= 0:\n    result = 0\nprint(result)", "coverage": [">", ">", ">", "!", ">"]}, "6605": {"id": 6605, "code": "from bisect import bisect_left,bisect_right\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor i in B:\n    ans +=bisect_left(A,i)*(n-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "119": {"id": 119, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n        if ord(\"z\")-ord(s[i])+1<=k:\n                k -= (ord(\"z\")-ord(s[i])+1)%26\n                s[i] = \"a\"\nif k: s[-1] = chr((ord(s[-1])+k-ord(\"a\"))%26+ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "16741": {"id": 16741, "code": "a = \"D\";b = \"H\"\nif a == b: print(\"H\")\nelse: print(\"D\")  ", "coverage": [">", ">", ">"]}, "1288": {"id": 1288, "code": "n = 111\nfor i in range(9):\n  if n<=i*111:\n    print((i)*111)\n    break\nelse:\n  print(999)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10083": {"id": 10083, "code": "N = 6\nS = \")))())\"\nT = list(1 if c == \"(\" else -1 for c in S)\nl, l_min = 0, 0\nr, r_min = 0, 0\nfor i in range(N):\n    l += T[i]\n    l_min = min(l_min, l)\n    r -= T[N - i - 1]\n    r_min = min(r_min, r)\nprint(\"\".join([\"(\" * -l_min, S, \")\" * -r_min]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14396": {"id": 14396, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\nelse:\n    pre = A[0]\n    flg = 0\n    ans = 1\n    for i in range(1, N):\n        now = A[i]\n        diff = now - pre\n        if flg == 1:\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        elif flg == -1:\n            if diff <= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        else:\n            if diff > 0:\n                flg = 1\n            elif diff < 0:\n                flg = -1\n            else:\n                pass\n        pre = now\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "812": {"id": 812, "code": "k = 2\na = 7 % k\ncount = 1\nfor i in range(1,k+1):\n  if a == 0:\n    print(count)\n    break\n  else:\n    a = (10 * a + 7) % k\n    count += 1\n    if i == k:\n      print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "9610": {"id": 9610, "code": "S = \"2017/01/07\"\nprint(S.replace(\"7\",\"8\",1))", "coverage": [">", ">"]}, "7383": {"id": 7383, "code": "h = 210;n = 5\ndamage = [31, 41, 59, 26, 53]\nif h - sum(damage) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "6801": {"id": 6801, "code": "H = 10;N = 3\nA = [4, 5, 6]\nans = 'Yes' if H<=sum(A) else 'No'\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "5266": {"id": 5266, "code": "N = {1, 2, 9}\nif len(N) == 4 and set([1,9,7,4]) == N:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "15355": {"id": 15355, "code": "x = 13;y = 3;z = 1\ncnt = 0\nwhile x >= 0:\n    x -= z\n    if x >= y+z:\n        x -= y\n        cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6348": {"id": 6348, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    lenA = bisect.bisect_left(A,b)\n    lenC = N - bisect.bisect(C,b)\n    ans += lenA*lenC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1666": {"id": 1666, "code": "N = 100;A = 100;B = 100\nr_max = min(A, B)\nif A + B > N:\n    r_min = A + B - N\nelse:\n    r_min = 0\nprint(r_max, r_min)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "593": {"id": 593, "code": "S = \"codefestival\"\nK = 100\nans = ''\nfor s in S:\n    to_a_cost = (26 - (ord(s) - 97)) % 26\n    if to_a_cost <= K:\n        ans += 'a'\n        K -= to_a_cost\n    else:\n        ans += s\nif K:\n    K %= 26\n    ans = ans[:-1] + chr(97 + (((ord(ans[-1]) - 97) + K) % 26))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "4944": {"id": 4944, "code": "s = \"xyz\"\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">"]}, "6233": {"id": 6233, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor b in B: \n    s = bisect.bisect_left(A,b) \n    t = bisect.bisect_right(C,b) \n    ans += s*(N-t)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9879": {"id": 9879, "code": "n = 6\ns = \")))())\"\nL=0\nR=0\nfor i in s:\n  if i==')':\n    if R:R-=1\n    else:L+=1\n  else:\n    R+=1\nprint('('*L+s+')'*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5737": {"id": 5737, "code": "import sys\nimport math\nfrom math import ceil\ninput = sys.stdin.readline\nprint(ceil(int(\"5\") / 2))", "coverage": [">", ">", ">", ">", ">"]}, "6506": {"id": 6506, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\nans = 0\nfor i in range(n):\n    ans1 = 0\n    ans2 = 0\n    ok = -1\n    ng = n\n    while abs(ng - ok) > 1:\n        mid = (ok + ng) // 2\n        if a[mid] < b[i] :\n            ok = mid\n        else:\n            ng = mid\n        if abs(ng - ok) == 1:\n            ans1 += ok + 1\n    ok = n\n    ng = -1\n    while abs(ng - ok) > 1:\n        mid = (ok + ng) // 2\n        if b[i] < c[mid]:\n            ok = mid\n        else:\n            ng = mid\n        if abs(ng - ok) == 1:\n            ans2 += n - ok\n    ans += ans1 * ans2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "4825": {"id": 4825, "code": "A = \"internationalization\"\nprint(A[0]+str(len(A)-2)+A[-1])", "coverage": [">", ">"]}, "8825": {"id": 8825, "code": "import sys\ninput = sys.stdin.readline\nN = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2022": {"id": 2022, "code": "N = 10;A = 7;B = 5\nma = str(min(A,B))\nif A+B-N > 0:\n    mi = str(A + B - N)\nelse:\n    mi = str(0)\nprint(ma+' '+mi)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "586": {"id": 586, "code": "S = \"a\"\nK = 25\nc2i=lambda c: ord(c)-ord(\"a\")\ni2c=lambda i: chr(i+ord(\"a\"))\nA=list(map(c2i, S))\nfor i in range(len(A)):\n    if A[i] and 26-A[i]<=K:\n        K-=26-A[i]\n        A[i]=0\nA[-1]+=K\nA[-1]%=26\nprint(\"\".join(map(i2c,A)))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "505": {"id": 505, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nfor i in range(len(s)):\n    if s[i] == 'a':\n        continue\n    n = ord('z') - ord(s[i]) + 1\n    if n <= K:\n        K -= n\n        s[i] = 'a'\nK %= 26\ns[-1] = chr((ord(s[-1]) - ord('a') + K) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11925": {"id": 11925, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nl=[31,28,31,30,31,30,31,31,30,31,30,31]\nif D2==1:\n print(\"1\")\nelse:\n print(\"0\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "6156": {"id": 6156, "code": "import bisect\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in range(len(b)):\n    la=bisect.bisect_left(a, b[i])\n    ra=bisect.bisect_right(c, b[i])\n    ans+=la*(len(c)-ra)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4814": {"id": 4814, "code": "n = \"smiles\"\nprint(n[0] + str((len(n)- 2)) + n[-1])", "coverage": [">", ">"]}, "3778": {"id": 3778, "code": "import sys\nimport math\nx = 13;y = 3;z = 1\ntmp=1\nwhile ((tmp*y+(tmp+1)*z)<=x):\n    tmp += 1\nprint(tmp-1)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18109": {"id": 18109, "code": "s = \"1700\"\na = int(s[:2])\nb = int(s[2:])\nif 0<a<=12 and 0<b<=12:\n    print('AMBIGUOUS')\nelif a<=99 and 0<b<=12:\n    print('YYMM')\nelif 0<a<=12 and b<=99:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18187": {"id": 18187, "code": "s = \"1700\"\nif 12<int(s[:2]) or 0==int(s[:2]):\n    if 12>=int(s[2:])>=1:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif 1<=int(s[:2])<=12:\n    if 12>=int(s[2:])>=1:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "544": {"id": 544, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nans = []\nfor alf in s:\n    if alf == 'a':\n        ans.append('a')\n    else:\n        if 123 - ord(alf) <= k:\n            k -= 123 - ord(alf)\n            ans.append('a')\n        else:\n            ans.append(alf)\nif 0 < k:\n    amari = (ord(ans[-1])-97+k)%26\n    ans[-1] = chr(amari+97)\nprint(''.join(map(str,ans)))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "4750": {"id": 4750, "code": "inputstr = \"internationalization\"\nlength = len(inputstr) - 2\nprint('{}{}{}'.format(inputstr[0],length,inputstr[-1]))", "coverage": [">", ">", ">"]}, "9909": {"id": 9909, "code": "N = 6\nS = \")))())\"\nLR = [0,0]\nl = \"(\"\nr = \")\"\nfor i in range(N):\n  if S[i] == r:\n    if LR[1] == 0:\n      LR[0] += 1\n    else:\n      LR[1] -= 1\n  elif S[i] == l:\n    LR[1] += 1\nS = l * LR[0] + S + r * LR[1]\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "1577": {"id": 1577, "code": "n = 111\nif 111*(n//100)>=n:\n    print(111*(n//100))\nelse:\n    print(111*(n//100 + 1))", "coverage": [">", ">", ">", "!", "!"]}, "16689": {"id": 16689, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    tcd = b\n    print(tcd)\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "4441": {"id": 4441, "code": "a = \"internationalization\"\nprint(a[0]+str(int(len(a)-2))+a[-1])", "coverage": [">", ">"]}, "19298": {"id": 19298, "code": "N = 5\nif N%2 or N<10:\n  print(0)\nelse:\n  cnt,n=0,1\n  while n<=N:\n    cnt+=N//(10*(n))\n    n*=5\n  print(cnt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "13046": {"id": 13046, "code": "X = 5\nlistage = [ 7, 5, 3 ]\nprint( [ \"NO\", \"YES\" ][ X in listage ] )", "coverage": [">", ">", ">"]}, "16515": {"id": 16515, "code": "n = 5\na = [6, 9, 4, 2, 11]\nmaxa = max(a)\nmini = [[] for _ in range(n)]\nfor i, v in enumerate(a):\n    r = maxa - v\n    mini[i] = [v, abs(v - r)]\nmini.sort(key=lambda x: x[1])\nif n == 2:\n    print(maxa, min(a))\nelse:\n    print(maxa, mini[0][0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13500": {"id": 13500, "code": "x = \"haiku\";y = \"atcoder\";z = \"tasks\"\nprint(x,y,z)", "coverage": [">", ">"]}, "11202": {"id": 11202, "code": "S = \"SAT\"\ndays=['MON','TUE','WED','THU','FRI','SAT','SUN']\ncnt =days.index('SUN')-days.index(S)\nif cnt==0:\n  print(7)\nelse:\n  print(cnt)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13487": {"id": 13487, "code": "s = \"happy,newyear,enjoy\"\nprint(*s.split(','))", "coverage": [">", ">"]}, "19025": {"id": 19025, "code": "import math\nn = 5\nif n % 2 == 1:\n    print(0)\nelse:\n    s = 0\n    p = 0\n    while 10 * (5 ** p) <= n:\n        s += n // (10 * (5 ** p))\n        p += 1\n    print(s)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "6736": {"id": 6736, "code": "H = 211;N = 5\nC = [31, 41, 59, 26, 53]\ns = 0\nfor i in range(N):\n    s += C[i]\nr = H - s\nif r <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2540": {"id": 2540, "code": "n = map(int, \"1 2 9 1\".split())\nbeginning = set([1, 9, 7, 4])\nprint('YES' if beginning == set(n) else 'NO')", "coverage": [">", ">", ">"]}, "12972": {"id": 12972, "code": "x = 5\nif x%2 == 0 or x == 9 or x ==1:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "coverage": [">", ">", "!", "!", ">"]}, "12861": {"id": 12861, "code": "a = 6\nprint([\"NO\",\"YES\"][a==3 or a==5 or a==7])", "coverage": [">", ">"]}, "7016": {"id": 7016, "code": "h = 20;n = 3\nsum = 0\nfor i in list(map(int, \"4 5 6\".split())):\n    sum += i\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "1352": {"id": 1352, "code": "n = [1, 1, 2]\nif n[0]<n[1] or (n[0]==n[1] and n[0]<n[2]):\n  print(str(n[0]+1)*3)\nelse:\n  print(str(n[0])*3)", "coverage": [">", ">", ">", "!", "!"]}, "676": {"id": 676, "code": "k = 2\na=0\nfor i in range(k):\n  a+=7*pow(10,i,k)\n  a%=k\n  if a==0:\n    print(i+1)\n    exit()\nprint(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9573": {"id": 9573, "code": "y = \"2017\";m = \"01\";d = \"31\"\nprint(\"{}/{}/{}\".format(int(y)+1,m,d))", "coverage": [">", ">"]}, "10067": {"id": 10067, "code": "n = 8\ns = \"))))((((\"\nl=0\nr=0\nfor i in s:\n    if i ==')' and l==0:\n        r+=1\n    elif i==')':\n        l-=1\n    elif i=='(':\n        l+=1\ns1 = '('*r\ns2 = ')'*l\ns=s1+s+s2\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "12202": {"id": 12202, "code": "M = 11;D = 30\nMM = 12;DD = 1\nif D>DD:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "89": {"id": 89, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n    if s[i] == \"a\":\n        continue\n    c = ord(s[i]) - ord(\"a\")\n    if k >= (26 - c):\n        k -= 26 - c\n        s[i] = \"a\"\ns[-1] = chr(((ord(s[-1]) - ord(\"a\")) + k) % 26 + ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "11171": {"id": 11171, "code": "S = \"atcoder\"\nL=len(S)\nans=0\nS1=S[:(L-1)//2]\nS2=S[((L+3)//2)-1:]\nif (S==S[::-1]) & (S1==S1[::-1]) & (S2==S2[::-1]):\n    ans='Yes'\nelse:\n    ans='No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12327": {"id": 12327, "code": "S = \"level\"\nT=True\nfor i in range(int((len(S)-1)/2)-1):\n  if S[i]!=S[int(len(S))-1-i]:\n    T=False\nfor i in range(int((len(S)-3)/4)+1):\n  if S[i]!=S[int((len(S)-3)/2)-i]:\n    T=False\nif T==False:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "18633": {"id": 18633, "code": "h = 14\nw = 12\nn = 112\np=max(h,w)\nprint(n//p+(n%p!=0))", "coverage": [">", ">", ">", ">", ">"]}, "7317": {"id": 7317, "code": "hp = 10;count_skills = 3\na = map(int, \"4 5 6\".split())\nskills_list = list(a)\nfor skill in skills_list:\n    hp -= skill\n    if hp <= 0:\n        print('Yes')\n        break\nif hp >= 1:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "9400": {"id": 9400, "code": "a = \"2018/01/07\"\nprint(a)", "coverage": [">", ">"]}, "4824": {"id": 4824, "code": "lit = ['x', 'y', 'z']\nmojisu = len(lit) - 2\nans = lit[0] + str(mojisu) + lit[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1955": {"id": 1955, "code": "N = 10;A = 7;B = 5\nsmax = min(A,B)\nsmin = max(A+B-N,0)\nprint(smax,smin)", "coverage": [">", ">", ">", ">"]}, "7322": {"id": 7322, "code": "H = 20;N = 3\na_nums = [4, 5, 6]\na_sum = sum(a_nums)\nif a_sum>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9277": {"id": 9277, "code": "a = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\na[3] = \"8\"\nprint(\"\".join(a))", "coverage": [">", ">", ">"]}, "15181": {"id": 15181, "code": "a = 12;b = 3;c = 1\na-=c\nb+=c\nprint(a//b)", "coverage": [">", ">", ">", ">"]}, "4907": {"id": 4907, "code": "S = \"smiles\"\nT = len(S)-2\nprint(S[0]+ str(T) + S[-1])", "coverage": [">", ">", ">"]}, "18865": {"id": 18865, "code": "N = 12\nans = 0\nif N%2 == 1:\n    print(0)\nelse:\n    for i in range(1,len(str(N))+100):\n        ans += N//(2*5**i)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "19035": {"id": 19035, "code": "import sys\ninput = sys.stdin.readline\nn = 12\nimport math\nif n%2 == 1:\n    print(0)\n    exit()\nk = 0\nwhile n - 2*5**k >= 0:\n    k += 1\nk -= 1\nans = 0\nfor i in range(1, k+1):\n    ans += n//(2*5**i)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9872": {"id": 9872, "code": "N = 3\nn = \"())\"\nl=0;r=0\nfor i in n:\n    if i==\"(\":\n        r+=1\n    else:\n        if r:\n            r-=1\n        else:\n            l+=1\nprint(\"(\"*l+n+\")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "404": {"id": 404, "code": "S = ['x', 'y', 'z']\nN = 4\nfor i, s in enumerate(S):\n  if ord(s) - 97 > 0  and 122 - ord(s) < N:\n    S[i] = \"a\"\n    N -= 123 - ord(s)\nelse:\n  S[i] = chr(N % 26 + ord(S[i])) \nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "7599": {"id": 7599, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint(\"Yes\" if sum(a) >= h else \"No\")", "coverage": [">", ">", ">"]}, "14275": {"id": 14275, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif n<=2:\n    print(1)\n    exit(0)\nflg=0\ncnt=0\ntmp=[]\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        tmp.append(1)\n    elif a[i]==a[i-1]:\n        tmp.append(0)\n    else:\n        tmp.append(-1)\nflg=0\nswi=0\nfor j in range(len(tmp)):\n    if swi==1:\n        flg=tmp[j]\n        swi=0\n        continue\n    if flg==0:\n        flg=tmp[j]\n    elif flg==1:\n        if tmp[j]==-1:\n            cnt+=1\n            flg=-1\n            swi=1\n    elif flg==-1:\n        if tmp[j]==1:\n            cnt+=1\n            flg=1\n            swi=1\nprint(cnt+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "17929": {"id": 17929, "code": "S = \"0112\"\na=int(S[:2])\nb=int(S[2:])\naa = a < 13 and a != 0\nbb = b < 13 and b != 0\nif aa and bb:\n    ans = 'AMBIGUOUS'\nelif aa and not bb:\n    ans = 'MMYY'\nelif bb and not aa:\n    ans = 'YYMM'\nelse:\n    ans = 'NA'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "147": {"id": 147, "code": "s = \"xyz\"\nl=len(s)\nk = 4\nz=''\nfor i in range(l):\n  t=123-ord(s[i])\n  if s[i]=='a':\n    z+='a'\n  elif t<=k:\n    z+='a'\n    k-=t\n  else:\n    z+=s[i]\nv=ord(z[l-1])-97+k\nz=z[:l-1]+chr(v%26+97)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14773": {"id": 14773, "code": "n = 3;p = 0\na = [1, 1, 1]\ndp=[[0]*2 for i in range(n+1)]\ndp[0][0]=1\nfor i in range(n):\n  if a[i]%2==0:\n    dp[i+1][0]=dp[i][0]*2\n    dp[i+1][1]=dp[i][1]*2\n  else:\n    dp[i+1][0]=dp[i][0]+dp[i][1]\n    dp[i+1][1]=dp[i][0]+dp[i][1]\nprint(dp[-1][p])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "4353": {"id": 4353, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nh = H2 - H1\nm = M2 - M1\ns = 0\ns = h * 60 + m\ns = s - K\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1185": {"id": 1185, "code": "n = 111\nwhile True:\n  if len(set(str(n)))==1:\n    print(n)\n    break\n  n+=1", "coverage": [">", ">", ">", ">", ">", "!"]}, "18282": {"id": 18282, "code": "h = 14\nw = 12\nn = 112\nprint((n+max(w,h) - 1) // max(w,h))", "coverage": [">", ">", ">", ">"]}, "8837": {"id": 8837, "code": "n = 4\nlist_1 = [1, 1, 1, 1]\nlist_2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10064": {"id": 10064, "code": "n = 8\ns = \"))))((((\"\na=0\nb=0\nfor i in range(n):\n    if s[i]=='(':\n        a+=1\n    else:\n        if a==0:\n            b+=1\n        else:\n            a-=1\nprint('('*b+s+')'*a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "5673": {"id": 5673, "code": "n = 100\nans=divmod(n,2)\nA=ans[0]+ans[1]\nprint(A)", "coverage": [">", ">", ">", ">"]}, "15344": {"id": 15344, "code": "X_all = 64145;Y_hito = 123;Z_interval = 456\nsyou = X_all // (Y_hito + Z_interval)\nif (syou * (Y_hito + Z_interval) + Z_interval <= X_all):\n    ans = syou\nelse:\n    ans = syou - 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "2277": {"id": 2277, "code": "n = 100;a = 100;b = 100\nmaxa = min(a,b)\nmina = abs(min(0, n-(a+b)))\nprint(maxa,mina)", "coverage": [">", ">", ">", ">"]}, "15051": {"id": 15051, "code": "N = 1;P = 1\nA = [50]\nC = [0,0]\nfor i in range(N):\n    if A[i]%2==0:\n        C[0] += 1\n    else:\n        C[1] += 1\nif C[1]==0 and P==1:\n    print(0)\nelif C[1]==0 and P==0:\n    print(2**C[0])\nelse:\n    print((2**C[0])*(2**(C[1]-1)))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!"]}, "15990": {"id": 15990, "code": "A = 20;B = 15\nprint('0') if A <= 2*B else print(A - 2*B)", "coverage": [">", ">"]}, "3954": {"id": 3954, "code": "x = 64145;y = 123;z = 456\nX = x -z\nans = X // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "9841": {"id": 9841, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nins=0\napp=0\nfor i in range(n):\n    if s[i]=='(':\n        app += 1\n    else:\n        if app>0:\n            app -= 1\n        else:\n            ins += 1\ninL=['(']*ins\napp=[')']*app\nans=inL+s+app\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "9665": {"id": 9665, "code": "N = 8\nS = \"))))((((\"\nfront_not_close = 0\nend_not_close = 0\nfor s in list(S):\n    if s == '(':\n        front_not_close += 1\n    else:\n        if front_not_close > 0:\n            front_not_close -= 1\n        else:\n            end_not_close += 1\nfor i in range(end_not_close):\n    S = '(' + S\nfor i in range(front_not_close):\n    S = S + ')'\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15734": {"id": 15734, "code": "x = 64145;y = 123;z = 456\nx -= z\nprint(x // (y + z))", "coverage": [">", ">", ">"]}, "7248": {"id": 7248, "code": "H = 20;N = 3\nA = [4, 5, 6]\nattack = sum(A)\nif attack >= H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18198": {"id": 18198, "code": "n = 6\na=map(int,\"2 3 3 1 3 1\".split())\npulasu_i=dict()\nmainasu_i=dict()\nfor i,num in enumerate(a):\n    x=i+1\n    if num+x not in pulasu_i:\n        pulasu_i[num+x]=1\n    else:\n        pulasu_i[num+x]+=1\n    if num-x not in mainasu_i:\n        mainasu_i[num-x]=1\n    else:\n        mainasu_i[num-x]+=1\nans=0\nfor num,cnt in pulasu_i.items():\n    if -num not in mainasu_i:\n        continue\n    else:\n        ans+=cnt*mainasu_i[-num]\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "18306": {"id": 18306, "code": "h = 14\nw = 12\nn = 112\nif h >= w:\n    larger = h\nelse:\n    larger = w\nif n % larger == 0:\n    print(n // larger)\nelse:\n    print(n // larger + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "1242": {"id": 1242, "code": "for i in range(int(\"750\"),1000):\n  if i%111==0:\n    print(i)\n    break", "coverage": [">", ">", ">", ">"]}, "4661": {"id": 4661, "code": "s = \"smiles\"\nchar_number = len(s)\nstart = s[0]\nend   = s[-1]\nanswer = start + str(char_number - 2) + end\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8240": {"id": 8240, "code": "from math import ceil\nN = 3;K = 3\nA = [1, 2, 3]\nans = ceil((N-K)/(K-1)) + 1\nprint(ans) ", "coverage": [">", ">", ">", ">", ">"]}, "14394": {"id": 14394, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\nelse:\n    pre = A[0]\n    flg = 0\n    ans = 1\n    for i in range(1, N):\n        now = A[i]\n        diff = now - pre\n        if flg == 1:\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        elif flg == -1:\n            if diff <= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        else:\n            if diff > 0:\n                flg = 1\n            elif diff < 0:\n                flg = -1\n            else:\n                pass\n        pre = now\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15832": {"id": 15832, "code": "X = 13;Y = 3;Z = 1\nsum = 0\nfor i in range(1,X):\n    if sum > X:\n        ans = i-2\n        break\n    if sum == X:\n        ans = i-1\n        break\n    else:\n        sum = Y*i+Z*(i+1)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">"]}, "5827": {"id": 5827, "code": "import math\na = 5\nprint(math.ceil(a/2))", "coverage": [">", ">", ">"]}, "6271": {"id": 6271, "code": "from bisect import bisect_left, bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    x = bisect_left(A,B[i])\n    y = bisect_right(C,B[i])\n    ans += x*(N-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1460": {"id": 1460, "code": "n = 112\nfor i in range(10):\n  if 111* i < n and n <= 111*(i+1):\n    print(111*(i+1))", "coverage": [">", ">", ">", ">"]}, "16332": {"id": 16332, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\nmax_a = max(a)\na.remove(max_a)\nda = [abs(ai - max_a / 2) for ai in a]\nmed_i = da.index(min(da))\nprint(\"%d %d\" % (max_a, a[med_i]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8696": {"id": 8696, "code": "N = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4228": {"id": 4228, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\nprint(t2 - t1 - k)", "coverage": [">", ">", ">", ">"]}, "10183": {"id": 10183, "code": "n = 8\nsl = [')', ')', ')', ')', '(', '(', '(', '(']\nmax_k = 0\nnow = 0\nfor s in sl:\n    if s == \"(\":\n        now += 1\n    else:\n        now -= 1\n    max_k = min(now, max_k)\nprint(\"(\" * (-max_k) + \"\".join(sl) + max(now-max_k, 0) * \")\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "4046": {"id": 4046, "code": "from sys import stdin\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(((H2-H1)*60 + (M2-M1)) - K)", "coverage": [">", ">", ">"]}, "11755": {"id": 11755, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "11359": {"id": 11359, "code": "a = \"SUN\"\nif a == 'SUN':\n  print(7)\nelif a == 'MON':\n  print(6)\nelif a == 'TUE':\n  print(5)\nelif a == 'WED':\n  print(4)\nelif a == 'THU':\n  print(3)\nelif a == 'FRI':\n  print(2)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5316": {"id": 5316, "code": "N = 100\nprint((N+1)//2)", "coverage": [">", ">"]}, "11751": {"id": 11751, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(1) if(M1 != M2) else print(0)", "coverage": [">", ">", ">"]}, "110": {"id": 110, "code": "import sys\ns = ['a']\nK = 25\ni = 0\nwhile i < len(s):\n    if K == 0:\n        break\n    if i == len(s) - 1:\n        n = (ord(s[i]) - ord(\"a\") + K) % 26\n        s[i] = chr(ord(\"a\") + n)\n        break\n    if s[i] == \"a\":\n        i += 1\n        continue\n    n = 26 - (ord(s[i]) - ord(\"a\"))\n    if n <= K:\n        s[i] = \"a\"\n        K -= n\n    i += 1\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "9914": {"id": 9914, "code": "n = 3\ns = ['(', ')', ')']\nsurplus_left, surplus_right = 0, 0\nright_count, left_count = 0, 0\nfor i in range(n - 1, -1, -1):\n    if s[i] == \"(\":\n        if left_count > 0:\n            left_count -= 1\n        else:\n            surplus_left += 1\n    else:\n        left_count += 1\nfor i in range(n):\n    if s[i] == \")\":\n        if right_count > 0:\n            right_count -= 1\n        else:\n            surplus_right += 1\n    else:\n        right_count += 1\nprint(\"(\" * surplus_right + \"\".join(s) + \")\" * surplus_left)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "1824": {"id": 1824, "code": "N = 10;A = 7;B = 5\nprint(str(min(A,B))+' '+str(max(A+B-N,0)))", "coverage": [">", ">"]}, "16776": {"id": 16776, "code": "a = \"H\";b = \"H\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "12197": {"id": 12197, "code": "_, d = \"11 17\".split()\nprint('1' if d == '1' else '0')", "coverage": [">", ">"]}, "6055": {"id": 6055, "code": "N = \"5\"\nn=int(N)\na=int(n//2)\nb=int(n%2)\nprint(a+b)", "coverage": [">", ">", ">", ">", ">"]}, "19431": {"id": 19431, "code": "N = 10\n[print(N) if N%2 == 0 else print(N*2)]  ", "coverage": [">", ">"]}, "12736": {"id": 12736, "code": "X = \"5\"\nif (X == \"7\" or X == \"5\" or X == \"3\"):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "4766": {"id": 4766, "code": "s = \"smiles\"\ncount = 0\nfor i in s:\n    count +=1\nprint(\"{}{}{}\".format(s[0], count-2, s[-1]))", "coverage": [">", ">", ">", ">", ">"]}, "16735": {"id": 16735, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    print(b)\nelif b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "11101": {"id": 11101, "code": "S = \"akasaka\"\nL=(len(S)-1)//2\nans='Yes'\nif S[:L]!=S[-L:]:\n    ans='No'\nfor n in range(L):\n    m=L-1-n\n    if S[n]!=S[m]:\n        ans='No'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "1808": {"id": 1808, "code": "a = 10;b = 3;c = 5\nans_max = min(b,c)\nans_min = min(b,c)-(a-max(b,c))\nif ans_min < 0:\n  ans_min = 0\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13279": {"id": 13279, "code": "s = \"abcde,fghihgf,edcba\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">"]}, "9274": {"id": 9274, "code": "s = \"2017/01/07\"\nprint('2018/01/' + s[8:])", "coverage": [">", ">"]}, "14085": {"id": 14085, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\nup = 0\ndown = 0\ni=0\nwhile (i+1)<n:\n    if up == down:\n        if a[i+1] > a[i]:\n            up += 1\n            down = 0\n        elif a[i+1] < a[i]:\n            up = 0\n            down += 1\n        else:\n            up += 1\n            down += 1\n    elif up == 0 and down !=0:\n        if a[i+1] <= a[i]:\n            down += 1\n        else:\n            ans += 1\n            down = 0\n    elif down == 0 and up!= 0:\n        if a[i+1] >= a[i]:\n            up += 1\n        else:\n            ans += 1\n            up = 0\n    i += 1\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "8216": {"id": 8216, "code": "N = 3;K = 3\nA = [1, 2, 3]\nN -= K\nK -= 1\nans = 1\nans += (N-1)//K + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5790": {"id": 5790, "code": "N = 100\nans = (N +1)//2\nprint(ans)", "coverage": [">", ">", ">"]}, "7044": {"id": 7044, "code": "import math\nH = 20;N = 3\nA = [4, 5, 6]\nans = sum(A)\nif ans >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13250": {"id": 13250, "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "2824": {"id": 2824, "code": "S = \"1234567876\"\nl = len(S) - 2\nmin_diff = float(\"inf\")\nfor i in range(0, l):\n    num = int(S[i:i+3])\n    diff = abs(753 - num)\n    if min_diff > diff:\n        min_diff = diff\nprint(min_diff)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13768": {"id": 13768, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nhrtom= (h2-h1)\nif (m2-m1 < 0) and (h2-h1 >=0) : \n    min = (h2-h1)*60 + (m2-m1) - k\n    print(min)\nelif (m2-m1 >= 0) and (h2-h1 >=0 ):\n    min = (h2-h1)*60 + (m2-m1) - k \n    print(min)\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "10822": {"id": 10822, "code": "S = \"atcoder\"\nl = len(S)\nT = ''.join(list(reversed(S)))\na = S[:(l-1)//2]\na1 = ''.join(list(reversed(a)))\nb = S[(l+3)//2-1:l]\nb1 = ''.join(list(reversed(b)))\nif S == T:\n    if a == a1 and b == b1:\n        print('Yes')\n    if a != a1 or b != b1:\n        print('No')\nif S != T:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "17886": {"id": 17886, "code": "s = \"1905\"\nif 1 <= int(s[:2]) <= 12:\n    if 1 <= int(s[2:]) <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= int(s[2:]) <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "1760": {"id": 1760, "code": "n = 10;a = 3;b = 5\nans_min = 0 if a+b-n <0 else a+b-n\nprint(min(a, b), ans_min)", "coverage": [">", ">", ">"]}, "9402": {"id": 9402, "code": "S = \"2017/01/07\"\nyear=int(S[:4])\nyear+=1\nprint(str(year)+\"/\"+S[5:])", "coverage": [">", ">", ">", ">"]}, "6855": {"id": 6855, "code": "h = 210;n = 5\nlst = [31, 41, 59, 26, 53]\nif sum(lst) < h:\n  print('No')\nelse:\n  print('Yes')", "coverage": [">", ">", ">", "!", "!", ">"]}, "10618": {"id": 10618, "code": "A = 1;B = 1;K = 1\ngcd=[]\nC=min(A,B)\nfor i in range(1,C+1):\n  if A%i==0 and B%i==0:\n    gcd.append(i)\nprint(gcd[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18171": {"id": 18171, "code": "s = \"0112\"\nfirst_two=int(''.join(s[:2]))\nlast_two=int(''.join(s[2:]))\nif 1<=first_two<=12 and 1<=last_two<=12:\n  print('AMBIGUOUS')\nelif 1<=last_two<=12:\n  print('YYMM')\nelif 1<=first_two<=12:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9131": {"id": 9131, "code": "s = \"2017/01/31\"\nx = s[:3] + \"8\" + s[4:]\nprint(x)", "coverage": [">", ">", ">"]}, "154": {"id": 154, "code": "A = {i-97:chr(i) for i in range(97,123)}\nB = {v:k for k,v in A.items()}\ns = ['a']\nK = 25\nfor i in range(len(s)-1):\n    if s[i]!=\"a\" and K>=26-B[s[i]]:\n        K -= (26-B[s[i]])\n        s[i]=\"a\"\nk = K%26\nind = (B[s[-1]]+k)%26\ns[-1] = A[ind]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "12842": {"id": 12842, "code": "x = 5\na = [3, 5, 7]\nprint('YES' if x in a else 'NO')", "coverage": [">", ">", ">"]}, "11105": {"id": 11105, "code": "s = \"akasaka\"\ns_len = int((len(s) - 1) / 2)\ns_1 = s[:s_len]\ns_1_len = int((len(s_1) - 1) / 2)\ns_2 = s[s_len+1:]\ns_2_len = int((len(s_2) - 1) / 2)\nans = 'Yes'\nfor i in range(s_len+1):\n  if s[i] != s[-i-1]:\n    ans = 'No'\n    break\nfor i in range(s_1_len+1):\n  if s_1[i] != s_1[-i-1]:\n    ans = 'No'\n    break\nfor i in range(s_2_len+1):\n  if s_2[i] != s_2[-i-1]:\n    ans = 'No'\n    break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "6354": {"id": 6354, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nC = sorted(C)\nans = 0\nfor i in B:\n    ans += (bisect.bisect_left(A, i)) * (N - bisect.bisect_right(C, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16907": {"id": 16907, "code": "a = \"D\";b = \"D\"\ndic = {\"H\":True,\"D\":False}\na = dic[a]\nb = dic[b]\nprint(\"D\" if a^b else \"H\")", "coverage": [">", ">", ">", ">", ">"]}, "10287": {"id": 10287, "code": "n = 6\ns = \")))())\"\ns_ = s\nwhile s_.count('()'):\n    s_ = s_.replace('()', '')\nl = s_.count(')')\nr = len(s_) - l\nans = '(' * l + s + ')' * r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4873": {"id": 4873, "code": "s = \"internationalization\"\nans=[]\nans.append(s[0])\nans.append(len(s)-2)\nans.append(s[-1])\nprint(*ans,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "6290": {"id": 6290, "code": "n = 2\nal = [1, 5]\nbl = [2, 4]\ncl = [3, 6]\nal = sorted(al)\nbl = sorted(bl)\ncl = sorted(cl)\nimport bisect\nbl_ac = []\nfor b in bl:\n    idx = bisect.bisect_right(cl, b)\n    bl_ac.append(n-idx)\nimport itertools\nbl_ac = [0] + list(itertools.accumulate(bl_ac[::-1]))\nbl_ac = bl_ac\nans = 0\nfor a in al:\n    idx = bisect.bisect_right(bl, a)\n    ans += bl_ac[n-idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4925": {"id": 4925, "code": "s = \"smiles\"\ns1, s2, s3 = s[0], s[1:-1], s[-1]\nans = s1 + str(len(s2)) + s3\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18786": {"id": 18786, "code": "H = 2\nW = 100\nN = 200\nif N%max(H,W)==0:\n  print(N//max(H,W))\nelse:\n  print(N//max(H,W)+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13249": {"id": 13249, "code": "a = \"abcde,fghihgf,edcba\"\nb = a.replace(',', ' ')\nprint(b)", "coverage": [">", ">", ">"]}, "14072": {"id": 14072, "code": "n = 9\na_s = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = 0\nans = 1\ntmp = 0\nfor i in range(n):\n    if i == 0:\n        continue\n    elif a_s[i] > a_s[i-1]:\n        if flag == -1:\n            ans += 1\n            flag = 0\n        else:\n            flag = 1\n    elif a_s[i] < a_s[i-1]:\n        if flag == 1:\n            ans += 1\n            flag = 0\n        else:\n            flag = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4177": {"id": 4177, "code": "from datetime import datetime,timedelta\na = ['10', '0', '12', '0', '120']\na=[int(_) for _ in a]\nt1=datetime(2000,1,1,a[0],a[1],0)\nt2=datetime(2000,1,1,a[2],a[3],0)\ndelta=t2-t1\ntotal_seconds=delta.seconds\nans=(total_seconds-a[4]*60)/60\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8516": {"id": 8516, "code": "N = 7\nU = [3, 3, 4, 5, 4, 5, 3]\nD = [5, 3, 4, 4, 2, 3, 2]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18586": {"id": 18586, "code": "H = 2\nW = 100\nN = 200\ncnt=0\nblack=0\nif H>=W:\n  for i in range(W):\n    black+=H\n    cnt+=1\n    if black>=N:\n      break\nelif H<W:\n  for i in range(H):\n    black+=W\n    cnt+=1\n    if black>=N:\n      break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "780": {"id": 780, "code": "k = 101\nx = 0\nans = -1\nfor i in range(10**6+1):\n    x = 10*x + 7\n    x %= k\n    if x == 0:\n        ans = i+1\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17276": {"id": 17276, "code": "a = \"D\";b = \"D\"\nif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8211": {"id": 8211, "code": "n = 8;m = 3\nl = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(-(-(len(l)-m)//(m-1))+1) ", "coverage": [">", ">", ">"]}, "18559": {"id": 18559, "code": "import math\nH = 2\nW = 100\nN = 200\nprint(math.ceil(N/max(H,W)))", "coverage": [">", ">", ">", ">", ">"]}, "5672": {"id": 5672, "code": "n = 2\nans=divmod(n,2)\nA=ans[0]+ans[1]\nprint(A)", "coverage": [">", ">", ">", ">"]}, "9873": {"id": 9873, "code": "N = 6\nn = \")))())\"\nl=0;r=0\nfor i in n:\n    if i==\"(\":\n        r+=1\n    else:\n        if r:\n            r-=1\n        else:\n            l+=1\nprint(\"(\"*l+n+\")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "3931": {"id": 3931, "code": "x = 100000;y = 1;z = 1\nans = int((x-z)//(y+z))\nprint(ans)", "coverage": [">", ">", ">"]}, "15615": {"id": 15615, "code": "icase=0\nif icase==0:\n    x = 100000;y = 1;z = 1\n    n=x//(y+z)\n    if x%(y+z)>=z:\n        print(n)\n    else:\n        print(n-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15165": {"id": 15165, "code": "x = 13;y = 3;z = 1\nx-=z\nans=x//(y+z)\nrem=x%(y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2418": {"id": 2418, "code": "n = 0;m = 3\nx = n*(n-1)//2\nr = m*(m-1)//2\nprint(x+r)", "coverage": [">", ">", ">", ">"]}, "10587": {"id": 10587, "code": "a = 100;b = 50;k = 4\nw_list=[]\nnum=min(a,b)+1\nfor i in range(1,num):\n    if a%i==0 and b%i==0:\n        w_list.append(i)\nw_list.sort(reverse=True)\nprint(w_list[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1458": {"id": 1458, "code": "N = 750\na = 0\nfor i in range(N,1000):\n  if i == 111 or i == 222 or i == 333 or i ==444 or i ==555 or i == 666 or i ==777 or i ==888 or i == 999:\n    a = i\n    break\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16376": {"id": 16376, "code": "n = 2\na_list = [100, 0]\na_list.sort()\na_max = a_list.pop()\nresult = []\nimport math\nfor a in a_list:\n  result.append(abs(math.ceil(a_max /2) - a))\nprint(a_max,a_list[result.index(min(result))])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17641": {"id": 17641, "code": "s = \"0112\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif (a == 0 or 13 <= a <= 99) and 1 <= b <= 12:\n    print(\"YYMM\")\nelif 1 <= a <= 12 and (b == 0 or 13 <= b <= 99):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3852": {"id": 3852, "code": "x = 13;y = 3;z = 1\nx -= z\ny += z\nprint(x//y)", "coverage": [">", ">", ">", ">"]}, "12059": {"id": 12059, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint((m1<m2 and d1>d2)+0)", "coverage": [">", ">", ">"]}, "6048": {"id": 6048, "code": "n = 100\nprint((n+2-1)//2)", "coverage": [">", ">"]}, "13177": {"id": 13177, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "11505": {"id": 11505, "code": "week_list =[\"\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(week_list.index(\"SUN\"))", "coverage": [">", ">"]}, "10081": {"id": 10081, "code": "n = 3\ns = ['(', ')', ')']\nans = \"\".join(s)\nf = True\nwhile f:\n    f = False\n    l = [True] * len(s)\n    ns = []\n    for i in range(len(s)-1):\n        if (s[i] == \"(\") and (s[i + 1] == \")\"):\n            l[i], l[i + 1] = False, False\n            f = True\n    for i in range(len(s)):\n        if l[i]:\n            ns.append(s[i])\n    s = ns.copy()\ncnt = [0, 0]\nfor c in s:\n    cnt[c == \"(\"] += 1\nprint(\"(\" * cnt[0] + ans + \")\" * cnt[1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15827": {"id": 15827, "code": "x = 13;y = 3;z = 1\nres = (x - z) // (y + z)\nprint(res)", "coverage": [">", ">", ">"]}, "2913": {"id": 2913, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"1234567876\"\nans = 753\nfor i in range(len(s) - 3):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6564": {"id": 6564, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b)\n    c = bisect.bisect_right(C, b)\n    ans += a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19321": {"id": 19321, "code": "N = 10\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2*N)", "coverage": [">", ">", ">", "!", "!"]}, "1550": {"id": 1550, "code": "N = 111\nfor i in range(N,1000):\n  I = str(i)\n  if I[0] == I[1] and I[1] == I[2]:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "8599": {"id": 8599, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=[0]*n\nfor i in range(n):\n  ans[i] += sum(A1[:i+1])+sum(A2[i:])\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9132": {"id": 9132, "code": "date = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ndate[3] = \"8\"\nprint(\"\".join(map(str, date)))", "coverage": [">", ">", ">"]}, "18758": {"id": 18758, "code": "H = 14\nW = 12\nN = 112\nbig = max(H,W)\nbigsum = 0\nans = 0\nwhile bigsum < N:\n    bigsum += big\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10224": {"id": 10224, "code": "N = 6\nS = \")))())\"\nadd_left=0\nadd_right=0\nfor s in S:\n  if s==\"(\":\n    add_right+=1\n  elif add_right==0:\n    add_left+=1\n  else:\n    add_right-=1\nprint('(' * add_left + S + ')' * add_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "18053": {"id": 18053, "code": "S = \"0112\"\nf = int(S[:2])\ns = int(S[2:])\nif 1 <= f <= 12 and 1 <= s <= 12:\n    print('AMBIGUOUS')\nelif 1 <= f <= 12:\n    print('MMYY')\nelif 1 <= s <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8645": {"id": 8645, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "8242": {"id": 8242, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nimport math\nprint( math.ceil( (n-1)/(k-1) ) )", "coverage": [">", ">", ">", ">"]}, "8427": {"id": 8427, "code": "n = 1\na = []\na.append([int(i) for i in \"2\".split()])\na.append([int(i) for i in \"3\".split()])\nans = 0\nfor i in range(n):\n    tmp = a[0][0]\n    x = 0\n    y = 0\n    for j in range(n):\n        if i == j:\n            y += 1\n        else:\n            x += 1\n        tmp += a[y][x]\n    ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3093": {"id": 3093, "code": "s = \"1111111111\"\nn = len(s)\nm = 1000\nfor i in range(n-2):\n    m = min(m, abs(753 - int(s[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18235": {"id": 18235, "code": "H = 14\nW = 12\nN = 112\nm = max(H, W)\nn = 0\nwhile True:\n    n += 1\n    if n*m >= N:\n        print(n)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9288": {"id": 9288, "code": "S = ['2017', '01', '07']\nS[0] = '2018'\nprint('/'.join(S))", "coverage": [">", ">", ">"]}, "12374": {"id": 12374, "code": "s = \"level\"\ns = list(s)\ns1 = s[0:len(s)//2]\ns2 = s[len(s)//2+1:len(s)]\nif (\"\".join(s1) == \"\".join(s2)) :\n  print(\"Yes\")\nelse :    \n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4356": {"id": 4356, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\ntime = (c * 60 + d) - (a * 60 + b)\ntime = time + 24 * 60 if time < 0 else time\nprint((60 * c + d) - (60 * a + b) - e)", "coverage": [">", ">", ">", ">"]}, "12921": {"id": 12921, "code": "X = 6\nif X % 2 == 1 and 3 <= X <= 7:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "10831": {"id": 10831, "code": "s = \"level\"\nif s==s[::-1]:\n  if s[:(len(s)-1)//2] == s[:(len(s)-1)//2:-1]:\n    ss=s[(len(s)+3)//2-1:len(s)]\n    if ss ==  ss[::-1]:\n      print('Yes')\n    else:\n      print('No')\n  else:\n    print('No')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!"]}, "17828": {"id": 17828, "code": "s = \"1700\"\ns1 = int(s[0]+s[1])\ns2 = int(s[2]+s[3])\nL=[]\nfor i in range(1, 13):\n    L.append(i)\nif s1 not in L and s2 not in L:\n    print('NA')\nelif s1 in L and s2 not in L:\n    print('MMYY')\nelif s1 not in L and s2 in L:\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2034": {"id": 2034, "code": "n = 10;a = 7;b = 5\nif a+b > n: x = (a+b)-n\nelse: x = 0\nprint(min(a,b), x)", "coverage": [">", ">", "!", ">"]}, "8111": {"id": 8111, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\ni = 1\nwhile  n > k + (k-1)*(i-1):\n    i += 1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15594": {"id": 15594, "code": "X = 64146;Y = 123;Z = 456\nX -= Z\nprint(X // (Y + Z))", "coverage": [">", ">", ">"]}, "4054": {"id": 4054, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\na = m2 - m1\nif a < 0:\n    mm = (h2 - h1 - 1) * 60 + (60 + a)\nelse:\n    mm = (h2 - h1) * 60 + a\nprint(0 if mm - k <= 0 else mm - k)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "13426": {"id": 13426, "code": "s = \"abcde,fghihgf,edcba\"\na=s[:5]\nb=s[6:13]\nc=s[14:]\nprint(a,b,c)", "coverage": [">", ">", ">", ">", ">"]}, "19200": {"id": 19200, "code": "import math\nn = 12\nans = 0\nif n== 0:\n  print(0)\n  exit()\nif n%2 == 1:\n  print(0)\nelse:\n  for j in range(1,100):\n    if n//((5**j)*2) == 0:\n      break\n    ans += n//((5**j)*2)\n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "743": {"id": 743, "code": "k = 2\nn = 7\nfor i in range(k):\n    if n % k == 0:\n        print(i+1)\n        exit()\n    n %= k\n    n = (n*10+7) % k\nprint(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2088": {"id": 2088, "code": "n = 100;a = 100;b = 100\nans = []\nans.append(min(a,b))\nans.append(max(0,a+b-n))\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "2803": {"id": 2803, "code": "S = \"1234567876\"\nmin_val=10**9\nfor i in range(len(S)-2):\n  temp=abs(753-int(S[i:(i+3)]))\n  min_val=min(min_val,temp)\nprint(min_val)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3222": {"id": 3222, "code": "A = 12;B = 4\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "5651": {"id": 5651, "code": "N = 2\nif N%2==1:\n  print(int((N-1)/2+1))\nelse:\n  print(int(N/2))", "coverage": [">", ">", "!", "!", ">"]}, "9874": {"id": 9874, "code": "N = 8\nn = \"))))((((\"\nl=0;r=0\nfor i in n:\n    if i==\"(\":\n        r+=1\n    else:\n        if r:\n            r-=1\n        else:\n            l+=1\nprint(\"(\"*l+n+\")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "1616": {"id": 1616, "code": "N = 10;A = 3;B = 5\nMax=min(A,B)\nmin=0\nif (A+B)>=N:\n    min=A+B-N\nelse:\n    min=0\nprint(Max,min)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "151": {"id": 151, "code": "import string\nS = \"a\"\nK = 25\nLEN = len(S)\nans = ''\nfor pos, s in enumerate(S, 1):\n    idx = string.ascii_lowercase.find(s)\n    if pos < LEN:\n        if idx > 0 and 26-idx <= K:\n            ans += 'a'\n            K -= (26 - idx)\n        else:\n            ans += s\n    else:\n        ans += string.ascii_lowercase[(idx + K)%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "6754": {"id": 6754, "code": "H = 20;N = 3\na1 = ['4', '5', '6']\na2=[int(i) for i in a1]\nx=0\nfor i in a2:\n    x+=i\nprint('Yes' if x>=H else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7797": {"id": 7797, "code": "n = 3;k = 3\na_ls = [1, 2, 3]\nstroke = k - 1\nif k < n:\n    rest = n - k\n    ans = 1 + -(-rest // stroke)\nelse:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "3168": {"id": 3168, "code": "s = \"1234567876\"\nans=1000\nfor i in range(1,len(s)-1):\n    x=int(s[i-1]+s[i]+s[i+1])\n    if abs(x-753)<ans:\n        ans=abs(x-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "616": {"id": 616, "code": "s = \"a\"\nn = 25\nk = ord(\"z\")\na = [0]*len(s)\nfor i in range(len(s)):\n    a[i] = ord(s[i])\nfor i in range(len(s)):\n    if a[i] == ord(\"a\"):\n        continue\n    if n>=k+1-a[i]:\n        n = n-k-1+a[i]\n        a[i] = ord(\"a\")\n    if n<=0:\n        break\nif n>0:\n    a[-1] += n%26\nans = \"\"\nfor i in range(len(s)):\n    ans += chr(a[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "17888": {"id": 17888, "code": "s = \"1700\"\nif 1 <= int(s[:2]) <= 12:\n    if 1 <= int(s[2:]) <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= int(s[2:]) <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "6598": {"id": 6598, "code": "import sys\ninput = sys.stdin.readline\nimport bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort();B.sort();C.sort()\nBok = []\nfor b in B:\n  temp = bisect.bisect_left(A,b) \n  Bok.append(temp) \nSB = [0]\nfor i in range(N):\n  temp = SB[-1]+Bok[i]\n  SB.append(temp)\nans = 0\nfor c in C:\n  temp = bisect.bisect_left(B,c) \n  ans += SB[temp]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "750": {"id": 750, "code": "k = 101\ns = 7\nnum = 1\nres = True\nif k == 2:\n    print(-1)\nelse:\n    for i in range(k):\n        s %= k\n        if s == 0:\n            res = False\n            print(num)\n            break\n        num += 1\n        s *= 10\n        s += 7\n    if res:\n        print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "7473": {"id": 7473, "code": "H = 210;N = 5\nlist = [31, 41, 59, 26, 53]\nfor i in list:\n    H=H-i\nif H<=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3113": {"id": 3113, "code": "S = \"1234567876\"\nanswer = 1000000\nfor i in range(len(S) - 2):\n    answer = min(abs(753 - int(S[i:i + 3])), answer)\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "6311": {"id": 6311, "code": "import bisect\nfrom sys import stdin\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n  ans += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15388": {"id": 15388, "code": "X = 100000;Y = 1;Z = 1\nX_new = X-Z\nprint(int(X_new /(Z+Y)))", "coverage": [">", ">", ">"]}, "2175": {"id": 2175, "code": "n = 100;a = 100;b = 100\nprint(min(a, b),0 if (a + b) <= n else abs(b - (n - a)))", "coverage": [">", ">"]}, "9260": {"id": 9260, "code": "a = \"2017\";b = \"01\";c = \"07\"\na = '2018'\nprint(a + '/' + b + '/' + c)", "coverage": [">", ">", ">"]}, "4646": {"id": 4646, "code": "S = \"smiles\"\ns_between_len = len(S) - 2\na = S[:1] + str(s_between_len) + S[-1]\nprint(a)", "coverage": [">", ">", ">", ">"]}, "18131": {"id": 18131, "code": "S = \"1905\"\nANS = {0:'NA', 1:'YYMM', 2:'MMYY', 3:'AMBIGUOUS'}\nans = 0\nif '00' <= S[:2] <= '99' and '01' <= S[2:] <= '12':\n    ans += 1\nif '00' <= S[2:] <= '99' and '01' <= S[:2] <= '12':\n    ans += 2\nprint(ANS[ans])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "11736": {"id": 11736, "code": "pm = 11;pd = 16\nnm = 11;nd = 17\nprint(0 if pm == nm else 1)", "coverage": [">", ">", ">"]}, "1833": {"id": 1833, "code": "n = 100;a = 100;b = 100\nprint(min(a, b), max(0, (a + b) - n))", "coverage": [">", ">"]}, "4729": {"id": 4729, "code": "s = \"internationalization\"\na = s[0]\nb = s[-1]\nlong = len(s) - 2\nprint(a + str(long) + b)", "coverage": [">", ">", ">", ">", ">"]}, "7399": {"id": 7399, "code": "h = 10;n = 3\nl = [4, 5, 6]\na=0\nfor i in range(n):\n    a+=l[i]\nif a>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7125": {"id": 7125, "code": "import math\nh = 210;n = 5\nsum = 0\nli = [31, 41, 59, 26, 53]\nfor val in li:\n    sum += val\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9149": {"id": 9149, "code": "import sys\nS = \"2017/01/31\"\nprint(\"2018\" + S[4:])", "coverage": [">", ">", ">"]}, "4868": {"id": 4868, "code": "S = \"smiles\"\nl=len(S)-2\nA=S[0]\nB=S[-1]\nprint(A+str(l)+B)", "coverage": [">", ">", ">", ">", ">"]}, "12813": {"id": 12813, "code": "n = \"6\"\nprint(\"YES\" if n in \"753\" else \"NO\")", "coverage": [">", ">"]}, "15958": {"id": 15958, "code": "a = 20;b = 30\nans = a - b * 2\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13020": {"id": 13020, "code": "n = 5\nprint('YES' if n in [3, 5, 7] else 'NO')", "coverage": [">", ">"]}, "2263": {"id": 2263, "code": "n = 10;a = 3;b = 5\nif a+b < n:\n    max = min(a, b)\n    min = 0\nelse:\n    max = min(a, b)\n    min = (a+b)-n\nprint(max, min)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "8672": {"id": 8672, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nres = 0\ntmp1 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    tmp2 = 0\n    for j in range(i, n):\n        tmp2 += a2[j]\n    res = max(res, tmp1+tmp2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17094": {"id": 17094, "code": "a = \"H\";b = \"H\"\nif a==\"H\":\n  print(b)\nelse:\n  if b==\"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "4115": {"id": 4115, "code": "import math\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\nprint(t2 - t1 - k)", "coverage": [">", ">", ">", ">", ">"]}, "3448": {"id": 3448, "code": "a = 12;b = 4\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10098": {"id": 10098, "code": "n = 6\ns = \")))())\"\ncountr, countl = 0, 0\nfor i in range(n-1, -1, -1):\n    if s[i] == ')': countr += 1\n    elif countr > 0: countr -= 1\ns = '('*countr+s\nn = len(s)\nfor i in range(n):\n    if s[i] == '(': countl += 1\n    elif countl > 0: countl -= 1\ns += ')'*countl\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4224": {"id": 4224, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nx1 = h1 * 60 + m1\nx2 = h2 * 60 + m2\nprint(x2 - x1 - k)", "coverage": [">", ">", ">", ">"]}, "4013": {"id": 4013, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint((H2 * 60 + M2) - (H1 * 60 + M1) - K)", "coverage": [">", ">"]}, "877": {"id": 877, "code": "str = \"101\"\nnum = int(str)\nif num % 2 == 0:\n  print('-1');\nelse:\n  i = 1\n  j = 7\n  while j % num != 0 and i <= num:\n    j = (j % num) * 10 + 7\n    i += 1\n  if i > num:\n    print('-1');\n  else:\n    print(i);", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1211": {"id": 1211, "code": "N = 111\nif N < 111:\n  print(111)\nelse:\n  for i in range(1,10):\n    if N <= 111*i:\n      ans = 111*i\n      break\n  print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "4818": {"id": 4818, "code": "S = \"xyz\"\nl = int(len(S))\ns1 = S[0]\ns2 = S[-1]\nL = int(l-2)\nprint(s1 + str(L) + s2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5783": {"id": 5783, "code": "temp = 1.5\nprint(int(temp))", "coverage": [">", ">"]}, "15267": {"id": 15267, "code": "X = 64145;Y = 123;Z = 456\nans = X - Z\nYZ = Y + Z\nprint(ans // YZ)", "coverage": [">", ">", ">", ">"]}, "1220": {"id": 1220, "code": "n = 111\nc = [111,222,333,444,555,666,777,888,999]\nfor i in range(9):\n    if c[i] >= n:\n        print(c[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "11838": {"id": 11838, "code": "b = \"11 16\"\na = \"11 17\"\nprint(int(a[-2:]==' 1'))", "coverage": [">", ">", ">"]}, "13878": {"id": 13878, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nb = []\nflg = 'hi'\nfor i in range(n-1):\n    if a[i] > a[i+1]:\n        if flg != 'pl':\n            flg = 'mi'\n        else:\n            b.append(i)\n            flg = 'hi'\n    elif a[i] < a[i+1]:\n        if flg != 'mi':\n            flg = 'pl'\n        else:\n            b.append(i)\n            flg = 'hi'\nprint(len(b)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "12829": {"id": 12829, "code": "x = 6\nif x == 3 or x == 5 or x == 7:\n    ans = 'YES'\nelse:\n    ans = 'NO'\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "17845": {"id": 17845, "code": "S = \"0112\"\nA = int(S[0] + S[1])\nB = int(S[2] + S[3])\nif 1 <= A <= 12 and 1 <= B <= 12:\n    print('AMBIGUOUS')\nelif (A > 12 or A <= 0) and 1 <= B <= 12:\n    print('YYMM')\nelif 1 <= A <= 12 and (B > 12 or B <= 0):\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6131": {"id": 6131, "code": "from bisect import bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0]*(N+1)\nidx = N\nfor i in range(N-1,-1,-1):\n    idx = bisect_right(C,B[i],hi=idx)\n    Bcnt[i] = N-idx+Bcnt[i+1]\nans = 0\nidx = 0\nfor i in range(N):\n    idx = bisect_right(B,A[i],lo=idx)\n    ans += Bcnt[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17363": {"id": 17363, "code": "a = \"D\";b = \"D\"\nt = {'HH': 'H', 'HD': 'D', 'DH': 'D', 'DD':'H'}\nprint(t[a+b])", "coverage": [">", ">", ">"]}, "5000": {"id": 5000, "code": "s = \"smiles\"\na = s[0]\nb = s[-1]\nc = s[1:-1]\nprint(a+str(len(c))+b)", "coverage": [">", ">", ">", ">", ">"]}, "7165": {"id": 7165, "code": "h = 10;a = 3\nA = [4, 5, 6]\nsum_A=sum(A)\nif h>sum_A:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "771": {"id": 771, "code": "K = 2\nans = -1\nkeep = 0\ncheck = 7\nfor i in range(K):\n    keep = (keep + check) % K\n    if keep == 0:\n        ans = i + 1\n        break\n    check = (check * 10) % K\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17589": {"id": 17589, "code": "s = [1, 9, 0, 5]\nl = [0]*2\nl[0] = s[0]*10 + s[1]\nl[1] = s[2]*10 + s[3]\nF = False\nL = False\nif 0 < l[0] <= 12:\n  F = True\nif 0 < l[1] <= 12:\n  L = True\nif F == True and L == True:\n  print('AMBIGUOUS')\nelif F == True:\n  print('MMYY')\nelif L == True:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "2428": {"id": 2428, "code": "import math\nn = 0;m = 3\nnC2 = math.factorial(n) // (math.factorial(2) * math.factorial(n - 2)) if n >= 2 else 0\nmC2 = math.factorial(m) // (math.factorial(2) * math.factorial(m - 2)) if m >= 2 else 0\nprint(nC2 + mC2)", "coverage": [">", ">", ">", ">", ">"]}, "4361": {"id": 4361, "code": "from math import ceil, floor\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndiff = (h2-h1)*60 + (m2-m1) \nprint('%d' % max(0, diff-k))", "coverage": [">", ">", ">", ">"]}, "5120": {"id": 5120, "code": "import sys\ns = \"smiles\"\nprint(s[0]+str(len(s[1:-1]))+s[-1])", "coverage": [">", ">", ">"]}, "12237": {"id": 12237, "code": "w = \"akasaka\"\nl = len(w)\nflag = True\nfor i in range((l - 1)//2):\n  if w[i] != w[l - i - 1]:\n    flag = False\n    break\nmid = (l - 1) // 2\nmid_mid = mid // 2\nfor i in range(mid_mid + 1):\n  if w[i] != w[mid - i - 1] or not flag:\n    flag = False\n    break\n  if w[i + mid + 1] != w[l - i - 1]:\n    flag = False\n    break\nif flag:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", "!", "!"]}, "17259": {"id": 17259, "code": "a = \"H\";b = \"H\"\nx={'H':1,'D':-1}\nif x[a]*x[b]==1:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", ">", "!", "!"]}, "18675": {"id": 18675, "code": "h = 14\nw = 12\nn = 112\na = max(h, w)\nif n%a == 0:\n    print(n//a)\nelse:\n    print(n//a + 1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "16265": {"id": 16265, "code": "import bisect\nn = 5\naas = [6, 9, 4, 2, 11]\naas.sort()\nl = aas[-1]\na = l // 2\nb = l // 2 + 1\nidx_a = bisect.bisect_left(aas,a)\nidx_b = bisect.bisect_left(aas,a)\nres = []\nif aas[idx_a] != l:\n    res.append(idx_a)\nif aas[idx_b] != l:\n    res.append(idx_b)\nif idx_a > 0:\n    if aas[idx_a-1] != l:\n        res.append(idx_a-1)\nif idx_b > 0:\n    if aas[idx_b-1] != l:\n        res.append(idx_b-1)\nif idx_a < n - 1:\n    if aas[idx_a+1] != l:\n        res.append(idx_a+1)\nif idx_b < n - 1:\n    if aas[idx_b+1] != l:\n        res.append(idx_b+1)\nbest = l // 2\nres_f = n - 1\nfor i in set(res):\n    if abs(best-aas[i]) <= abs(best-aas[res_f]):\n        res_f = i\n    if l%2 != 0:\n        if abs(best+1 - aas[i]) <= abs(best+1 - aas[res_f]):\n            res_f = i\nprint(str(l)+\" \"+str(aas[res_f]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14698": {"id": 14698, "code": "import sys\nN = 3;P = 0\nA = [1, 1, 1]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a % 2 == 1:\n        kisu += 1\n    else:\n        gusu += 1\ntotal = 2 ** N \nif kisu == 0:\n    ans = 2 ** gusu\nelse:   \n    ans = (2 ** gusu) * (2 ** (kisu - 1)) \nif P == 0:\n    print(ans)\nelse:\n    print(total - ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "5637": {"id": 5637, "code": "n = 100\na = n // 2\nb = n % 2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "17080": {"id": 17080, "code": "s = \"D H\"\nif s==\"D D\" or s == \"H H\":print('H')\nelse:print('D')", "coverage": [">", ">", ">"]}, "5853": {"id": 5853, "code": "import math\nn = 100\nx = n / 2\ny = n % 2\nif y == 0:\n  print(math.floor(x))\nelse:\n  print(math.ceil(x))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "4002": {"id": 4002, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nhm1=60*h1+m1\nhm2=60*h2+m2\nans=hm2-hm1-k\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "7058": {"id": 7058, "code": "H = 211;N = 5\ndata = [31, 41, 59, 26, 53]\nif H <= sum(data):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "1767": {"id": 1767, "code": "n = 10;a = 7;b = 5\nans1 = min(a,b)\nans2 = a+b-n\nans2 = max(ans2,0)\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">", ">"]}, "1725": {"id": 1725, "code": "n = 10;a = 7;b = 5\nprint(*[min(a,b), max((a+b)-n, 0)])", "coverage": [">", ">"]}, "18233": {"id": 18233, "code": "h = 2\nw = 100\nn = 200\nq,r = divmod(n, max(h,w))\nprint(q + int(bool(r)))", "coverage": [">", ">", ">", ">", ">"]}, "9999": {"id": 9999, "code": "n = 8\ns = \"))))((((\"\nnopen = 0\nsl = ''\nsr = ''\nfor c in s:\n    if c == '(':\n        nopen += 1\n    else:\n        if nopen == 0:\n            sl += '('\n        else:\n            nopen -= 1\nnopen = sum([1 if c == '(' else -1 for c in sl + s])\nsr = ')' * nopen\nprint(sl + s + sr)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "17125": {"id": 17125, "code": "a = \"D\";b = \"H\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n    print(\"H\")\nif (a == \"H\" and b == \"D\") or (a == \"D\" and b == \"H\"):\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">"]}, "6952": {"id": 6952, "code": "H = 20;N = 3\nA = [4, 5, 6]\nprint(\"Yes\" if H<=sum(A) else \"No\")", "coverage": [">", ">", ">"]}, "3159": {"id": 3159, "code": "S = \"1234567876\"\nans = abs(753 - int(S[:3]))\nfor i in range(1, len(S)-1):\n    tmp = int(S[i:i+3])\n    ans = min(abs(753-tmp), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18679": {"id": 18679, "code": "from math import ceil\nh = 2\nw = 100\nn = 200\nif h >= w:\n    print(ceil(n/h))\nelse:\n    print(ceil(n/w))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "10096": {"id": 10096, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nco, cc = 0, 0\nfor ch in s:\n    if ch == '(':\n        co += 1\n    if ch == ')':\n        if co > 0:\n            co -= 1\n        else:\n            cc += 1\nans = \"(\" * cc + \"\".join(s) + \")\" * co\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12578": {"id": 12578, "code": "A = \"8\";B = \"12\";K = \"2\"\nA, B, K = int(A), int(B), int(K)\nres = []\nfor i in range(A, 0, -1):\n  if A % i == 0 and B % i == 0:\n    res.append(i)\nprint(res[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4194": {"id": 4194, "code": "s = [10, 0, 15, 0, 30]\nh = 60 * (s[2]-s[0])\nm = s[3] - s[1]\nk = s[4]\nprint(h+m-k)", "coverage": [">", ">", ">", ">", ">"]}, "8779": {"id": 8779, "code": "N = 1\nrow1 = [2]\nrow2 = [3]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "281": {"id": 281, "code": "s = \"codefestival\"\nk = 100\nl = \"abcdefghijklmnopqrstuvwxyz\"\nans = \"\"\nfor i in range(len(s) - 1):\n    num = (26 - l.index(s[i])) % 26\n    if k >= num:\n        ans += \"a\"\n        k -= num\n    else:\n        ans += s[i]\nans += l[(l.index(s[-1]) + k) % 26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "1292": {"id": 1292, "code": "n = 112\nl=[111,222,333,444,555,666,777,888,999]\nfor i in range(len(l)):\n    if n<= l[i]:\n        print(l[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "8130": {"id": 8130, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nprint(math.ceil((N - K) / (K - 1)) + 1) ", "coverage": [">", ">", ">", ">"]}, "863": {"id": 863, "code": "K = 101\ncount = 1\nn = 0\nif K % 2 == 0 or K % 5 == 0:\n    count = -1\n    print(count)\nelse:\n    while True:\n        n = (n*10+7)%K\n        if n == 0:\n            break\n        count += 1\n    print(count)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "4541": {"id": 4541, "code": "s = \"smiles\"\nans = s[0]+str(len(s[1:len(s)-1]))+s[len(s)-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "9613": {"id": 9613, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3]=\"8\"\nprint(*S,sep=\"\")", "coverage": [">", ">", ">"]}, "18315": {"id": 18315, "code": "h = 14\nw = 12\nprint((int(\"112\")-1)//max(h,w)+1)", "coverage": [">", ">", ">"]}, "8762": {"id": 8762, "code": "from itertools import accumulate\nN = 7\nA = [3, 6, 10, 15, 19, 24, 27]\nB = [23, 18, 15, 11, 7, 5, 2]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2797": {"id": 2797, "code": "s = \"1234567876\"\nans = 1000\nfor i in range(len(s) -2):\n  ans = min(abs(int(s[i:i+3])- 753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "5621": {"id": 5621, "code": "x = 2\nprint(x//2+x%2)", "coverage": [">", ">"]}, "5956": {"id": 5956, "code": "N = 5\nans = (N-1)//2 + 1\nprint(int(ans))", "coverage": [">", ">", ">"]}, "7136": {"id": 7136, "code": "h = 211;n = 5\nL = [31, 41, 59, 26, 53]\nL.sort(reverse = True)\ncnt = 0\nfor i in range(n):\n    cnt  += L[i]\n    if cnt >= h:\n        print(\"Yes\")\n        exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5128": {"id": 5128, "code": "s = \"internationalization\"\nprint(s[0] +str(len(s[1:-1]))+ s[-1])", "coverage": [">", ">"]}, "12711": {"id": 12711, "code": "a = \"6\"\na = int(a)\nif a == 7 or a == 5 or a == 3:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "2337": {"id": 2337, "code": "N = 13;M = 3\nprint(int(N*max(N-1, 0)/2) + int(M*max(M-1, 0)/2))", "coverage": [">", ">"]}, "12712": {"id": 12712, "code": "import sys\nimport math\nimport itertools\nn = 5\nif n==5 or n==7 or n==3 :\n\tprint(\"YES\")\nelse :\n\tprint(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "1299": {"id": 1299, "code": "N = [1, 1, 2]\nif N[1] < N[0]:\n  print(N[0] * 111)\nelif N[1] > N[0]:\n  print((N[0]+1) * 111)\nelse:\n  if N[2] <= N[0]:\n    print(N[0] * 111)\n  else:\n    print((N[0]+1) * 111)", "coverage": [">", ">", "!", ">", "!", "!", ">", "!", "!", ">"]}, "13006": {"id": 13006, "code": "x = 5\nif x in {3, 5, 7}:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "13256": {"id": 13256, "code": "s = \"happy,newyear,enjoy\"\ns = s.replace(\",\", \" \", 3)\nprint(s)", "coverage": [">", ">", ">"]}, "3652": {"id": 3652, "code": "a = 20;b = 30\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "15016": {"id": 15016, "code": "import collections\nn = 3;p = 0\na = [1, 1, 1]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif a2[1] == 0:\n  print(2 ** n if p == 0 else 0)\nelse:\n  print( 2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9502": {"id": 9502, "code": "n = \"2017/01/07\"\nprint(n.replace('2017','2018'))", "coverage": [">", ">"]}, "15717": {"id": 15717, "code": "a = 64145;b = 123;c = 456\nprint((a-b-2*c)//(b+c)+1)", "coverage": [">", ">"]}, "11784": {"id": 11784, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "14433": {"id": 14433, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ntop = True\nfor i in range(1,N):\n    if A[i] == A[i-1]:\n        continue\n    if top == True:\n        inc = (A[i]>A[i-1])\n        top = False\n        continue\n    flag = (A[i]>A[i-1])\n    if inc != flag:\n        cnt += 1\n        top = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12284": {"id": 12284, "code": "import sys\nS = \"level\"\nif not S.islower():sys.exit()\nif not ( 3 <= len(S) <= 99 and len(S) % 2 == 1 ): sys.exit()\nfirst = int((len(S)-1)/2)\nF = S[0:first]\nlast = int((len(S)+3)/2)\nL = S[last-1:]\ncondition = 0\nif S == S[::-1]:\n    condition += 1\nif F == F[::-1]:\n    condition += 1\nif L == L[::-1]:\n    condition += 1\nprint('Yes') if condition == 3 else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "9300": {"id": 9300, "code": "s = \"2017/01/07\"\nprint(s[:3]+'8'+s[4:])", "coverage": [">", ">"]}, "17977": {"id": 17977, "code": "S = \"0112\"\nmonths = [i for i in range(1, 13)]\nleft = int(S[:2])\nright = int(S[2:])\nif left in months and right in months:\n    print('AMBIGUOUS')\nelif left in months:\n    print('MMYY')\nelif right in months:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17671": {"id": 17671, "code": "s = 112\na = s % 100\nb = ((s-a) / 100)\nif a <= 12 and b <= 12 and a != 0 and b != 0:\n  print(\"AMBIGUOUS\")\nelif b <= 12 and b != 0:\n  print(\"MMYY\")\nelif a <= 12 and a != 0:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2425": {"id": 2425, "code": "import math\nn = 4;m = 3\nnC2 = math.factorial(n) // (math.factorial(2) * math.factorial(n - 2)) if n >= 2 else 0\nmC2 = math.factorial(m) // (math.factorial(2) * math.factorial(m - 2)) if m >= 2 else 0\nprint(nC2 + mC2)", "coverage": [">", ">", ">", ">", ">"]}, "14345": {"id": 14345, "code": "N = 9\nif N == 1:print(1);exit()\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncur = A[0]\nDecided = A[0] != A[1]\nFlat = A[0] == A[1]\nUp = A[0] < A[1]\nfor n in range(1,N):\n    if Decided:\n        if A[n] == cur:\n            continue\n        if (A[n]>=cur) == Up:\n            cur = A[n]\n        else:\n            cur = A[n]\n            Up = 1 - Up\n            Decided = False\n            ans += 1\n    else:\n        if A[n] != cur:\n            Up = A[n] > cur\n            cur = A[n]\n            Decided = True\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "2920": {"id": 2920, "code": "S = \"35753\"\nm=1000\nfor i in range(0,len(S)-2):\n    m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "1734": {"id": 1734, "code": "import sys\ninput = sys.stdin.readline\nN = 10;A = 7;B = 5\nif A + B <= N:\n\tprint(min(A, B), 0)\nelse:\n\tprint(min(A, B), (A+B)-N)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2344": {"id": 2344, "code": "N = 2;M = 1\nres = 0\nif N >= 2:\n  res += N * (N - 1) / 2\nif M >= 2:\n  res += M * (M - 1) / 2\nprint(int(res))", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "6040": {"id": 6040, "code": "n = 5\nans = n//2\nans += n%2\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "17642": {"id": 17642, "code": "s = \"1700\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif (a == 0 or 13 <= a <= 99) and 1 <= b <= 12:\n    print(\"YYMM\")\nelif 1 <= a <= 12 and (b == 0 or 13 <= b <= 99):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "11918": {"id": 11918, "code": "m1 = \"11\"\nm2 = \"11\"\nans = 0\nif m1 != m2:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "7619": {"id": 7619, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nH = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif H-sum(A)<=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "13991": {"id": 13991, "code": "num = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nvar = var2 = 0\nc = l[0]\nfor i in l[1:]:\n    if c < i:\n        var = 1\n    elif c > i:\n        var2 = 1\n    if var == 1 and var2 == 1:\n        count += 1\n        var = var2 = 0\n    c = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9497": {"id": 9497, "code": "S = \"2017/01/31\"\nprint(\"2018\"+S[4:])", "coverage": [">", ">"]}, "7836": {"id": 7836, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif N == K:\n    print(1)\nelse:\n    cnt = 1\n    N -= K\n    while N > 0:\n        cnt += 1\n        N -= K\n        N += 1\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11187": {"id": 11187, "code": "S = \"atcoder\"\nN = len(S)\nT = S[:(N-1)//2]\nU = S[(N+3)//2-1:]\nif S==S[::-1] and T == T[::-1] and U == U[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "17936": {"id": 17936, "code": "s = \"1700\"\nf1=1<=int(s[:2])<=12\nf2=1<=int(s[2:4])<=12\nif f1 and f2:print(\"AMBIGUOUS\")\nelif not f1 and not f2:print(\"NA\")\nelif f1:print(\"MMYY\")\nelse:print(\"YYMM\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3204": {"id": 3204, "code": "s = \"1234567876\"\nn=len(s)\nans=100000\nfor i in range(n-2):\n  t=str(s[i])+str(s[i+1])+str(s[i+2])\n  x=abs(753-int(t))\n  ans=min(ans,x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10954": {"id": 10954, "code": "S = ['l', 'e', 'v', 'e', 'l']\nN = len(S)\nS_1=S[:N//2]\nS_2=S[N//2+1:]\nN_=len(S_1)\nans='Yes'\nfor n in range(N_):\n    if S_1[n] != S_1[-(n+1)]:\n        ans='No'\n        break\n    if S_2[n] != S_2[-(n+1)]:\n        ans='No'\n        break   \nfor n in range(N):\n    if S[n] != S[-(n+1)]:\n        ans='No'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">"]}, "17638": {"id": 17638, "code": "s = \"0112\"\na = (1 <= int(s[:2]) <= 12)\nb = (1 <= int(s[2:]) <= 12)\nif a and b:\n    print(\"AMBIGUOUS\")\nelif a:\n    print(\"MMYY\")\nelif b:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12718": {"id": 12718, "code": "X = \"5\"\nprint('YES' if X in '753' else 'NO')", "coverage": [">", ">"]}, "2184": {"id": 2184, "code": "N = 100;A = 100;B = 100\nmax_ans = min(A,B)\ntmp = A + B - N\nmin_ans = 0 if tmp<=0 else tmp\nprint(max_ans, min_ans)", "coverage": [">", ">", ">", ">", ">"]}, "4280": {"id": 4280, "code": "h_1 = 10;m_1 = 0;h_2 = 12;m_2 = 0;k = 120\nminute_1 = h_1*60 + m_1\nminute_2 = h_2*60 + m_2\nans = minute_2 - k - minute_1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "12669": {"id": 12669, "code": "a = \"6\"\nprint(\"YES\" if a in \"753\" else \"NO\")", "coverage": [">", ">"]}, "6420": {"id": 6420, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in range(n):\n    tmp = 1\n    x = bisect.bisect_left(a, b[i])\n    y = bisect.bisect_right(c, b[i])\n    ans += x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2206": {"id": 2206, "code": "n1 = 10;n2 = 3;n3 = 5\nx = min(n2,n3)\nif n2+n3<=10:\n    y=0\nelse:\n    y = max(n2+n3-n1,0)\nprint(x,y)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16483": {"id": 16483, "code": "N = 2\nA = [100, 0]\nA.sort()\nx = A[-1]\nA.pop()\nz = x*10\nfor a in A:\n    if abs(x-a*2) < abs(x-z*2):\n        z = a\nprint(x, z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10478": {"id": 10478, "code": "a = 8;b = 12;k = 2\na_divisor = []\nab_divisor = []\nfor i in range(1,a+1):\n    if a % i == 0:\n        a_divisor.append(i)\nfor j in a_divisor:\n    if b % j == 0:\n        ab_divisor.append(j)\nprint(ab_divisor[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17509": {"id": 17509, "code": "S = \"0112\"\nhigh = int(S[0:2])\nlow = int(S[2:4])\nif 1<= high <= 12:\n    if 1<= low <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nif high < 1 or high > 12:\n    if 1<= low <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!"]}, "5796": {"id": 5796, "code": "N = 100\nr = (N +2-1)//2\nprint(r)", "coverage": [">", ">", ">"]}, "1818": {"id": 1818, "code": "n = 10;a = 7;b = 5\nans1 = min(a, b)\nif a + b < n:\n  ans2 = 0\nelse:\n  ans2 = abs(n - a - b)\nprint(ans1, ans2)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "732": {"id": 732, "code": "n = 101\nx = 7\nans = 1\nfor i in range(3*n):\n  if x%n==0:\n    break\n  ans+=1\n  x= x*10 + 7\n  x=x%n\nif ans < 3*n:\n  print(ans)\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7707": {"id": 7707, "code": "n = 3;k = 3\nA = [1, 2, 3]\nA.sort()\nk -= 1\ncnt = -(-(n-1)//k)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">"]}, "672": {"id": 672, "code": "K = 2\na=7\nfor i in range(1,K+1):\n    if a%K==0:\n        print(i)\n        exit()\n    a=(a*10+7)%K\nprint(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "11419": {"id": 11419, "code": "days = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nS = \"SUN\"\nif S == \"SUN\":\n    print(7)\nelse:\n    print(days.index(\"SUN\") - days.index(S))", "coverage": [">", ">", ">", ">", "!", "!"]}, "17100": {"id": 17100, "code": "hd = ['H', 'H']\na, b = hd[0], hd[1]\nif a == b:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", ">", "!", "!"]}, "7015": {"id": 7015, "code": "h = 10;n = 3\nsum = 0\nfor i in list(map(int, \"4 5 6\".split())):\n    sum += i\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "2168": {"id": 2168, "code": "n = 10;a = 7;b = 5\nif a+b>=n:\n    c = a+b-n\nelse:\n    c = 0\nprint(min(a,b), c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12210": {"id": 12210, "code": "s = \"akasaka\"\nn = len(s)\na = s[0:n//2]\nb = s[n//2+1:n]\nif s == s[::-1] and a == a[::-1] and b == b[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "16303": {"id": 16303, "code": "N = 5\na = [6, 9, 4, 2, 11]\na.sort()\nans1 = a[-1]\nans2 = 0\nfor i in a:\n    if abs(ans1/2-ans2) > abs(ans1/2-i):\n        ans2 = i\nprint(ans1, ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "293": {"id": 293, "code": "s = \"xyz\"\nK = 4\nafter = []\nrem = K\nfor i in range(len(s)-1):\n    if s[i] == 'a':\n        after.append('a')\n        continue\n    c = ord('z') - ord(s[i]) + 1\n    if c <= rem:\n        rem -= c\n        after.append('a')\n    else:\n        after.append(s[i])\nlast = ord(s[-1])\nif rem > 0:\n    last += rem%26\n    if last > ord('z'):\n        last -= 26\nafter.append(chr(last))\nprint(''.join(after))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14735": {"id": 14735, "code": "N = 1;P = 1\no = 0\nprint(2**(N-1) if o else 2**N if P==0 else 0)", "coverage": [">", ">", ">"]}, "16366": {"id": 16366, "code": "import sys\nN = 5\nA = [6, 9, 4, 2, 11]\nn = max(A)\nmid = n / 2\nr = float(\"inf\")\nfor a in A:\n    if a == n:\n        continue\n    if abs(mid - r) > abs(mid - a):\n        r = a\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13744": {"id": 13744, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;lens = 120\navailable = (h2 * 60 + m2) - (h1 * 60 + m1)\nanswer = available - lens if available > lens else 0\nprint(answer)", "coverage": [">", ">", ">", ">"]}, "4465": {"id": 4465, "code": "s = \"internationalization\"\nL=len(s)\nL_a=L-2\nprint(s[0]+str(L_a)+s[-1])", "coverage": [">", ">", ">", ">"]}, "10079": {"id": 10079, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nover=0\nleft=0\nright=0\ncenter=\"\"\nfor i in s:\n    if over==0 and i==\")\":\n        left+=1\n    elif over!=0 and i==\")\":\n        over-=1\n    else:\n        over+=1\n    center+=i\nright=over\nprint(\"(\"*left+center+\")\"*right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3681": {"id": 3681, "code": "a = 12;b = 4\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15238": {"id": 15238, "code": "X = 12;Y = 3;Z = 1\nX = X-Z\nA = (X/(Y+Z))//1\nprint (round (A))", "coverage": [">", ">", ">", ">"]}, "4742": {"id": 4742, "code": "s = \"smiles\"\ns1 = s[0]\ns2 = s[-1]\nprint(s1+str(len(s[1:-1]))+s2)", "coverage": [">", ">", ">", ">"]}, "15939": {"id": 15939, "code": "A = 20;B = 15\nprint(\"{}\".format(0 if (A - 2*B <= 0) else A - 2*B))", "coverage": [">", ">"]}, "16319": {"id": 16319, "code": "n = 2\nA = [100, 0]\nA.sort()\ny = max(A)\nx = A[0]\nfor a in A:\n    if abs(y/2-a) < abs(y/2 - x):\n        x = a\nprint(y, x)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "15272": {"id": 15272, "code": "x = 100000;y = 1;z = 1\na=x//(y+z)\nif x-a*(y+z)>=z:\n  print(a)\nelse:\n  print(max(0,a-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "16320": {"id": 16320, "code": "N = 5\nlsa = [6, 9, 4, 2, 11]\nn = max(lsa)\nr = 0\nfor i in range(N):\n    r1 = lsa[i]\n    if min(r1,n-r1) >= min(r,n-r):\n        r = r1\nprint(n,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18124": {"id": 18124, "code": "S = ['1', '7', '0', '0']\na = int(\"\".join(S[0:2]))\nb = int(\"\".join(S[2:4]))\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n    print(\"MMYY\")\nelif 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "13718": {"id": 13718, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(max(H2*60 + M2 - H1*60 - M1 - K, 0))", "coverage": [">", ">"]}, "12755": {"id": 12755, "code": "n = \"6\"\nif n in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "9372": {"id": 9372, "code": "a = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\na[3]=8\nprint(*a, sep='')", "coverage": [">", ">", ">"]}, "13965": {"id": 13965, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nb = A[0]\natt = ''\ncnt = 1\nfor a in A:\n    if a != b:\n        if att == '':\n            if a > b:\n                att = '+'\n            elif a < b:\n                att = '-'\n        elif att == '+':\n            if a < b:\n                cnt += 1\n                att = ''\n        elif att == '-':\n            if a > b:\n                cnt += 1\n                att = ''\n    b = a\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "9951": {"id": 9951, "code": "n = 3\nS = \"())\"\nl = 0\nr = 0\nprev = \")\"\nfor s in S:\n    if prev == \")\" and s == \")\":\n        if r > 0:\n            r -= 1\n        else:\n            l += 1\n    elif prev == \")\" and s == \"(\":\n        r += 1\n    elif prev == \"(\" and s == \")\":\n        r -= 1\n    elif prev == \"(\" and s == \"(\":\n        r += 1\n    prev = s\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2852": {"id": 2852, "code": "import sys\nS = \"35753\"\nt=1000\nfor x in range(len(S)-2):\n  if t>abs(753-int(S[x]+S[x+1]+S[x+2])):\n    t=abs(753-int(S[x]+S[x+1]+S[x+2]))\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5398": {"id": 5398, "code": "S = 5\nq , mod = divmod(S , 2)\nprint(q+mod)", "coverage": [">", ">", ">"]}, "8528": {"id": 8528, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14906": {"id": 14906, "code": "n = 2;p = 0\na = [1, 3]\ncnt = 0\nfor num in a:\n    if num % 2 == 1:\n        cnt += 1\nans = 0\nif cnt == 0:\n    if p % 2 == 0:\n        ans = 2**n\nelse:\n    ans = 2**(n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "7474": {"id": 7474, "code": "H = 211;N = 5\nlist = [31, 41, 59, 26, 53]\nfor i in list:\n    H=H-i\nif H<=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3409": {"id": 3409, "code": "A = 12;B = 4\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13378": {"id": 13378, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "16706": {"id": 16706, "code": "a = \"D\";b = \"D\"\nd={'H':0, 'D':1}\nprint(['H','D'][d[a]^d[b]])", "coverage": [">", ">", ">"]}, "8767": {"id": 8767, "code": "N = 1\nA_1 = [2]\nA_2 = [3]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4460": {"id": 4460, "code": "s = \"smiles\"\nN = s[-1]\nH = s[0]\nK = str(len(s) - 2)\nprint(H+K+N)", "coverage": [">", ">", ">", ">", ">"]}, "12693": {"id": 12693, "code": "a = 6\nb = [3,5,7]\nprint(\"YES\" if a in b else \"NO\")", "coverage": [">", ">", ">"]}, "16525": {"id": 16525, "code": "n = 5\na_list = [6, 9, 4, 2, 11]\na_list.sort()\na_max = a_list[n - 1]\ntemp_max = [1, 0]\nbunbo = 1\nbunshi = 1\ncenter = int((a_max + 1) / 2)\na_set = set(a_list)\ndiff_min = a_max\nans = 0\nfor a in a_set:\n    diff = abs(a-center)\n    if diff_min > diff:\n        diff_min = diff\n        ans = a\nprint(a_max, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15712": {"id": 15712, "code": "X = 12;Y = 3;Z = 1\ni = 0\nwidth = Z\nwhile True :\n    width += Y + Z\n    i += 1\n    if X < width:\n        break\nprint(i - 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14000": {"id": 14000, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup = down = 0\ncur = a[0]\nans = 0\nfor x in a:\n    if cur < x:\n        up = 1\n    elif cur > x:\n        down = 1\n    if up and down:\n        ans += 1\n        up = down = 0\n    cur = x\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6865": {"id": 6865, "code": "H = 10;N = 3\nA = [4, 5, 6]\ntotal = sum(A)\nr = 'Yes' if H <= total else 'No'\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "18859": {"id": 18859, "code": "n = 5;x = 9\nA = (3, 1, 4, 1, 5)\npre = max(0, A[0] - x)\nans = pre\nfor i in range(n - 1):\n    a = A[i]\n    b = A[i + 1]\n    a -= pre\n    tmp = 0\n    if b > x:\n        tmp += b - x\n        b = x\n    if a + b > x:\n        tmp += a + b - x\n    ans += tmp\n    pre = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">"]}, "913": {"id": 913, "code": "b = 0\nK = 101\na = 7 % K\nfor i in range(K):\n  if a == 0:\n    b = 1\n    break\n  else:\n    a = (10 * a +7) % K\nif b == 0:\n  print(-1)\nelse:\n  print(i + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "2317": {"id": 2317, "code": "N = 10;A = 3;B = 5\nmaxA = min(A, B)\nminA = 0\nif N - max(A, B) < maxA:\n    minA = maxA - (N- max(A, B))\nprint(maxA, minA)", "coverage": [">", ">", ">", ">", "!", ">"]}, "8766": {"id": 8766, "code": "N = 7\nA_1 = [3, 3, 4, 5, 4, 5, 3]\nA_2 = [5, 3, 4, 4, 2, 3, 2]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8152": {"id": 8152, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 0\nleast_g = (N-1) / (K-1)\nif least_g.is_integer():\n    print(int(least_g))\nelse:\n    print(int(least_g)+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15380": {"id": 15380, "code": "x = 12;y = 3;z = 1\nans=0\nfor i in range(x):\n    if x>=i*(y+z)+z and i>ans:\n        ans=i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6228": {"id": 6228, "code": "import bisect\nimport sys\nn = 3\nup = [1, 1, 1]\nmid = [2, 2, 2]\nlow = [3, 3, 3]\nans = 0\nfor i in range(len(mid)):\n    pre = bisect.bisect_left(up, mid[i])\n    over = len(low) - bisect.bisect(low, mid[i])\n    ans += pre * over\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16737": {"id": 16737, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    print(b)\nelif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    elif b == \"D\":\n        print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "14292": {"id": 14292, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nmode = 0\nfor i in range(N-1):\n  if mode == 0:\n    if A[i] < A[i+1]:\n      mode = 1\n    elif A[i] > A[i+1]:\n      mode = -1\n    else:\n      mode = 0\n  if mode == 1:\n    if A[i] > A[i+1]:\n      ans += 1\n      mode = 0\n  elif mode == -1:\n    if A[i] < A[i+1]:\n      ans += 1\n      mode = 0\n  else:\n    pass\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "3196": {"id": 3196, "code": "S = \"35753\"\nMIN = 1000\nfor T in range(0,len(S)-2):\n    X = int(S[T:T+3])\n    Num = abs(X-753)\n    if Num<MIN:\n        MIN = Num\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1278": {"id": 1278, "code": "n = 750\nk=n//100\nnex=111*k\nif nex>=n:\n    print(nex)\nelse:\n    print(nex+111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15108": {"id": 15108, "code": "n = 2;p = 0\nA = [1, 3]\nf = 0\nfor a in A:\n    if a%2:\n        f = 1\n        break\nif f:\n    ans = 2**(n-1)\nelse:\n    if p:\n        ans = 0\n    else:\n        ans = 2**n\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "7618": {"id": 7618, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nH = 20;N = 3\nA = [4, 5, 6]\nif H-sum(A)<=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "985": {"id": 985, "code": "import bisect\nN = 750\narr = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nans_idx = bisect.bisect_left(arr, N)\nprint(arr[ans_idx])", "coverage": [">", ">", ">", ">", ">"]}, "17341": {"id": 17341, "code": "a = \"D\";b = \"H\"\nif a==b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", "!", "!", ">"]}, "107": {"id": 107, "code": "import string\ns = ['x', 'y', 'z']\nk = 4\nstr=string.ascii_lowercase\nabc=str+str\ns_len=len(s)\nfor i in range(s_len):\n  si_inx=abc.index(s[i])\n  if i==s_len-1:\n    k%=26\n    s[i]=abc[si_inx+k]\n    break\n  if s[i]=='a':\n    continue\n  if k>=26-si_inx:\n    k-=26-si_inx\n    s[i]='a'\n  else:\n    continue\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "18167": {"id": 18167, "code": "s = \"1905\"\nmonths = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\nif s[:2] in months and s[2:] in months:\n\tprint(\"AMBIGUOUS\")\nelif s[:2] in months and s[2:] not in months:\n\tprint(\"MMYY\")\nelif s[:2] not in months and s[2:] in months:\n\tprint(\"YYMM\")\nelse:\n\tprint(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "969": {"id": 969, "code": "n = 112\nv = [999,888,777,666,555,444,333,222,111]\nans = 0\nfor i in range(9):\n    if v[i] >= n:\n        ans = v[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "601": {"id": 601, "code": "S = \"a\"\nK = 25\nans = \"\"\nfor i, s in enumerate(S):\n    if i == len(S) - 1:\n        if ord(s) + K <= ord(\"z\"):\n            ans += chr(ord(s) + K)\n        else:\n            ans += chr(ord(\"a\") + (ord(s) + K - ord(\"z\") - 1) % 26)\n    elif s == \"a\":\n        ans += \"a\"\n        continue\n    elif ord(\"z\") + 1 - ord(s) <= K:\n        ans += \"a\"\n        K -= (ord(\"z\") + 1 - ord(s))\n    else:\n        ans += s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "17946": {"id": 17946, "code": "s = 1905\nb = s%100\na = (s - b)//100\nif (0 < a <= 12 and 0 < b <= 12):\n    print(\"AMBIGUOUS\")\nelif (0 < a <= 12):\n    print(\"MMYY\")\nelif (0 < b <= 12):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "706": {"id": 706, "code": "k = 2\nflag=0\ns=0\nfor i in range(1,9*k):\n   s+=7\n   s%=k\n   if s==0:\n       flag=i\n       break\n   s*=10\nif flag:\n    print(flag)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "14349": {"id": 14349, "code": "N = 7\nL = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans1 = 1\nflag = ''\nfor i in range(1, N):\n  if flag == '':\n    if L[i] < L[i-1]:\n      flag = 'minus'\n    elif L[i] > L[i-1]:\n      flag = 'plus'\n    else:\n      flag = ''\n  if flag == 'plus':\n    if L[i] < L[i-1]:\n      flag = ''\n      ans1 += 1\n  elif flag == 'minus':\n    if L[i] > L[i-1]:\n      flag = ''\n      ans1 += 1\nprint(ans1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9031": {"id": 9031, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif k< b-a:\n  print(\":(\")\nelif k< c-a:\n  print(\":(\")\nelif k< d-a:\n  print(\":(\")\nelif k< e-a:\n  print(\":(\")\nelif k< c-b:\n  print(\":(\")\nelif k< d-b:\n  print(\":(\")\nelif k< e-b:\n  print(\":(\")\nelif k< d-c:\n  print(\":(\")\nelif k< e-c:\n  print(\":(\")\nelif k< e-d:\n  print(\":(\")\nelse:\n  print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "910": {"id": 910, "code": "k = 2\ns=7\ni=1\nwhile s%k!=0:\n  i+=1\n  s=10*(s%k)+7\n  if i==k+1:\n    break\nelse:\n  print(i)\n  exit()\nprint(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "8451": {"id": 8451, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nl = []\nfor i in range(N):\n    l.append(sum(A[:N-i])+sum(B[:i+1]))\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8156": {"id": 8156, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nt = A.index(1)\nans = 10 ** 7\nfor i in range(K):\n    pre = max(t + i, 0)\n    tail = max(N - 1 - t - i, 0)\n    unit = K - 1\n    pre_unit = -(-pre // unit)\n    tail_unit = -(-tail // unit)\n    ans = min(ans, pre_unit + tail_unit)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11244": {"id": 11244, "code": "S = \"SAT\"\nlis=['SUN','MON','TUE','WED','THU','FRI','SAT']\ni=lis.index(S)\nif S=='SUN':\n    print(7)\nelse:\n    for j in range(1,8):\n        if lis[i-j]=='SUN':\n            print(7-j)\n            break", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12752": {"id": 12752, "code": "X = 5\nif X in (3, 5, 7):\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "1374": {"id": 1374, "code": "n = ['1', '1', '1']\nx = int(n[0]*3)\ny = int(n[0]+n[1]+n[2])\nif x >= y:\n  print(x)\nelse:\n  print(x+111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "6682": {"id": 6682, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\na_sum = sum(a)\nif h <= a_sum:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6616": {"id": 6616, "code": "from bisect import bisect_left, bisect_right\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    a_upperbound = bisect_left(A, b)\n    c_lowerbound = bisect_right(C, b)\n    ans += a_upperbound * (N - c_lowerbound)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18799": {"id": 18799, "code": "h = 3\nw = 7\nn = 10\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "6066": {"id": 6066, "code": "n = 100\ns=n//2\na=n%2\nif a==1:\n  print(s+1)\nelse:\n  print(s)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6321": {"id": 6321, "code": "import bisect\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ntotal = 0\nfor b in B:\n    total += bisect.bisect_left(A, b) * (len(C) - bisect.bisect_right(C, b))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5513": {"id": 5513, "code": "N = 2\ng = N // 2\nk = ( N + 1 ) // 2\nif N % 2 == 0:\n    print(g)\nelse:\n    print(k)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10998": {"id": 10998, "code": "s = ['l', 'e', 'v', 'e', 'l']\nn = len(s)\nflag = 0\nfor i in range(n//2):\n    if s[i] != s[n-i-1]:\n        flag = 1\nif flag == 0:\n    s2 = s[:(n-1)//2]\n    n2 = len(s2)\n    for i in range(n2//2):\n        if s2[i] != s2[n2-i-1]:\n            flag = 1\nif flag == 0:\n    if flag == 0:\n        s2 = s[(n+3)//2-1:]\n        n2 = len(s2)\n    for i in range(n2//2):\n        if s2[i] != s2[n2-i-1]:\n            flag = 1\nif flag == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "7043": {"id": 7043, "code": "import math\nH = 10;N = 3\nA = [4, 5, 6]\nans = sum(A)\nif ans >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "1459": {"id": 1459, "code": "n = 111\nfor i in range(10):\n  if 111* i < n and n <= 111*(i+1):\n    print(111*(i+1))", "coverage": [">", ">", ">", ">"]}, "14215": {"id": 14215, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n        cur = A[i]\n        continue\n    if(flag == 1 and A[i] < cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 1 and A[i] > cur):\n        cur = A[i]\n        continue\n    if(flag == 0 and A[i] > cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 0 and A[i] < cur):\n        cur = A[i]\n        continue\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "878": {"id": 878, "code": "str = \"2\"\nnum = int(str)\nif num % 2 == 0:\n  print('-1');\nelse:\n  i = 1\n  j = 7\n  while j % num != 0 and i <= num:\n    j = (j % num) * 10 + 7\n    i += 1\n  if i > num:\n    print('-1');\n  else:\n    print(i);", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "15706": {"id": 15706, "code": "import math\nX = 13;Y = 3;Z = 1\nans=0\nans=math.floor((X-Z)/(Y+Z))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "14265": {"id": 14265, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n <= 2:\n    print(1)\n    exit()\nf = 0\ncnt = 0\nif a[0] < a[1]:\n    f = 1\nelif a[0] > a[1]:\n    f = 2\ntmp = a[1]\nfor i in range(2,n):\n    if tmp < a[i]:\n        if f == 2:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 1\n    elif tmp > a[i]:\n        if f == 1:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 2\n    tmp = a[i]\ncnt += 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10664": {"id": 10664, "code": "a = 100;b = 50;k = 4\nans = 0\ncounter = 0\nfor i in range(min(a, b), 0, -1):\n    if a % i == 0 and b % i == 0:\n        counter += 1\n        if counter == k:\n            ans = i\n            break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5815": {"id": 5815, "code": "n = 5\nif n % 2 == 0:\n  print(int(n//2))\nelse:\n  print(int(n//2+1))", "coverage": [">", ">", "!", "!", ">"]}, "18379": {"id": 18379, "code": "import math\nif __name__=='__main__':\n   H = 2\n   W = 100\n   N = 200\n   t = math.ceil(N/(H if H>W else W))\n   print (t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8989": {"id": 8989, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nT = [a, b, c, d, e]\nfor t in T:\n    if t - a > k or e -t > k:\n        print(':(')\n        exit(0)\nprint('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3152": {"id": 3152, "code": "s = \"1111111111\"\np = 999\nfor i in range(len(s) - 2 ):\n    j = s[i:i+3]\n    j = int(j)\n    if p > abs(753 - j):\n        p = abs(753 - j)\nprint(p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14314": {"id": 14314, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nl = []\nprev = None\nfor i in range(n):\n    if prev!=a[i]:\n        l.append(a[i])\n    prev = a[i]\nif len(l)==1:\n    ans = 1\nelse:\n    m = len(l)\n    prev = None\n    ans = 0\n    for i in range(m-1):\n        s = l[i]<l[i+1]\n        if prev is None:\n            prev = s\n        elif prev!=s:\n            ans += 1\n            prev = None\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1699": {"id": 1699, "code": "n = 100;a = 100;b = 100\nif n-(a+b)>0:\n    print(min(a,b), 0)\nelse:\n    print(min(a,b), abs(n-(a+b)))", "coverage": [">", ">", "!", "!", ">"]}, "18146": {"id": 18146, "code": "S = \"1905\"\nS1, S2 = S[0:2], S[2:5]\nif (int(S1) >= 1 and int(S1) <=12) and (int(S2) >= 1 and int(S2) <=12):\n\tprint('AMBIGUOUS')\nelif int(S2) >= 1 and int(S2) <= 12:\n\tprint('YYMM')\nelif int(S1) >= 1 and int(S1) <=12:\n\tprint('MMYY')\nelse:\n\tprint('NA')", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "4028": {"id": 4028, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif m2 >= m1:\n    time = (h2 - h1)*60 + m2 - m1\nelif m2 < m1:\n    time = (h2 - h1 - 1) * 60 + m2 + 60 - m1\nprint(time-k)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16527": {"id": 16527, "code": "n = 5\na = [6, 9, 4, 2, 11]\nma = max(a)\na.sort(key=lambda x:abs(x-ma/2))\nr = a[0] if a[0]!=ma else a[1]\nprint(ma, r)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13087": {"id": 13087, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nn = 6\nif n==7 or n==5 or n==3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14986": {"id": 14986, "code": "N = 2;P = 0\nA = [1, 3]\nodd_cnt = 0\nfor a in A:\n    if a % 2 != 0:\n        odd_cnt += 1\nif odd_cnt == 0:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\n    exit(0)\nprint(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "3574": {"id": 3574, "code": "from sys import stdin\na = 12;b = 4\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "12123": {"id": 12123, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d1 == 31:\n    print(\"1\")\nelif d1 == 30 and d2 == 1:\n    print(\"1\")\nelif d1 == 28 and m1 == 2:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14166": {"id": 14166, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ntmp = 0\nfor i in range(1, n):\n    if (A[i] - A[i-1]) * tmp < 0:\n        ans += 1\n        tmp = 0\n    elif A[i] - A[i-1] != 0:\n        tmp = A[i] - A[i-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11483": {"id": 11483, "code": "L = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nn = 0\nprint( 7-n )", "coverage": [">", ">", ">"]}, "5101": {"id": 5101, "code": "S = \"internationalization\"\nstart=S[0]\nend=S[len(S)-1]\nnum=len(S)-2\nprint(\"{}{}{}\".format(start,num,end))", "coverage": [">", ">", ">", ">", ">"]}, "11239": {"id": 11239, "code": "S = \"SUN\"\nL =[\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nct = L.index(S)\nx = 7 - ct\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "12833": {"id": 12833, "code": "x = \"6\"\nif x in '753':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "7046": {"id": 7046, "code": "import math\nH = 211;N = 5\nA = [31, 41, 59, 26, 53]\nans = sum(A)\nif ans >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18221": {"id": 18221, "code": "H = 2\nW = 100\nN = 200\nm = max(H, W)\nprint((N + m - 1) // m)", "coverage": [">", ">", ">", ">", ">"]}, "1854": {"id": 1854, "code": "n = 100;a = 100;b = 100\nc = min(a,b)\nd = max(0,(a+b)-n)\nprint(c,d)", "coverage": [">", ">", ">", ">"]}, "19074": {"id": 19074, "code": "N = 12\nif N % 2 == 1:\n    print(0)\nelse:\n    ret = 0\n    for i in range(1, 27):\n        ret += N // (2*5**i)\n    print(ret)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "10365": {"id": 10365, "code": "A = 1;B = 1;K = 1\ncd = []\nfor i in range(min([A,B])):\n  if A % (i + 1) == 0 and B % (i + 1) == 0:\n    cd.append(i+1)\nprint(cd[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "2208": {"id": 2208, "code": "n1 = 100;n2 = 100;n3 = 100\nx = min(n2,n3)\nif n2+n3<=10:\n    y=0\nelse:\n    y = max(n2+n3-n1,0)\nprint(x,y)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "4658": {"id": 4658, "code": "S = \"smiles\"\nN = len(S)-2\nprint(S[0]+str(N)+S[-1])", "coverage": [">", ">", ">"]}, "2299": {"id": 2299, "code": "n = 10;a = 3;b = 5\nma = min(a, b)\nif a + b - n < 0:\n    mi = 0\nelse:\n    mi = a + b - n\nprint(ma, mi)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8403": {"id": 8403, "code": "n = 4\na_l1 = [1, 1, 1, 1]\na_l2 = [1, 1, 1, 1]\nc = 0\nm_a_l1 = []\nfor i in a_l1:\n    c += i\n    m_a_l1.append(c)\nc = 0\nm_a_l2 = [0] * n\nfor i,j in enumerate(reversed(a_l2)):\n    c += j\n    m_a_l2[-1-i] = c\nans = 0\nfor i,j in zip(m_a_l1, m_a_l2):\n    ans = max(i+j, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1346": {"id": 1346, "code": "N = 112\nif N % 111:\n    print(111*(N//111 + 1))\nelse:\n    print(111*int((N/111)))", "coverage": [">", ">", ">", "!", "!"]}, "12923": {"id": 12923, "code": "x = 6\nif x == 3 or x == 5 or x == 7:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "2303": {"id": 2303, "code": "n = 10;a = 7;b = 5\nprint(min(a,b),(0 if n>=a+b else (a+b)-n))", "coverage": [">", ">"]}, "10785": {"id": 10785, "code": "s = \"level\"\na = s[:len(s)//2]\nb = s[len(s)//2+1:]\nprint('Yes' if s == s[::-1] and a == a[::-1] and b == b[::-1] else 'No')", "coverage": [">", ">", ">", ">"]}, "15697": {"id": 15697, "code": "x = 64146;y = 123;z = 456\nxx=x-z\nyy=y+z\nprint(int(xx/yy))", "coverage": [">", ">", ">", ">"]}, "1737": {"id": 1737, "code": "N = 10;A = 7;B = 5\nif(A>B):\n  ans1=B\n  ans2=max(0,A-(N-B))\nelse:\n  ans1=A\n  ans2=max(0,B-(N-A))\nprint(str(ans1)+\" \"+str(ans2))", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "5095": {"id": 5095, "code": "s = \"internationalization\"\nprint(s[0] + '{}'.format(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "6593": {"id": 6593, "code": "from bisect import bisect_right,bisect_left\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in b:ans+=bisect_left(a,i)*(n-bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19486": {"id": 19486, "code": "i = 999999999\nif i%2==0:\n    print(i)\nelse:\n    print(2*i)", "coverage": [">", ">", "!", "!", ">"]}, "13623": {"id": 13623, "code": "first = \"haiku\";middle = \"atcoder\";last = \"tasks\"\nprint(first, middle, last)", "coverage": [">", ">"]}, "3826": {"id": 3826, "code": "x = 100000;y = 1;z = 1\nans=1\nx-=(y+2*z)\nprint(ans+x//(y+z))", "coverage": [">", ">", ">", ">"]}, "12641": {"id": 12641, "code": "import sys\ninput = sys.stdin.readline\nX = \"6\"\nprint(\"YES\" if X in \"753\" else \"NO\")", "coverage": [">", ">", ">", ">"]}, "1529": {"id": 1529, "code": "n = 111\nprint((n+110)//111*111)", "coverage": [">", ">"]}, "2786": {"id": 2786, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    x = int(S[i:i+3])\n    dif = abs(753 - x)\n    ans = min(dif, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5351": {"id": 5351, "code": "N = 2\nprint(int((N+1)//2))", "coverage": [">", ">"]}, "4080": {"id": 4080, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nwake_time = h2*60 + m2 - (h1 *60 + m1);\nif wake_time > k:\n    print(wake_time - k);\nelse:\n    print(0);", "coverage": [">", ">", ">", ">", "!", "!"]}, "8720": {"id": 8720, "code": "from itertools import accumulate\nn = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nSA = list(accumulate(A))\nSB = list(accumulate(B))\nans = 0\nfor i in range(n):\n    if i >= 1:\n        ans = max(SA[i] + SB[n - 1] - SB[i - 1], ans)\n    else:\n        ans = max(SA[i] + SB[n - 1], ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8168": {"id": 8168, "code": "n = 3;k = 3\na = [1, 2, 3]\nfor i_1 in range(n):\n    if a[i_1]==1:\n        break\nif len(a[:i_1])==0:\n    ans = len(a[i_1+1:])//(k-1)\n    if len(a[i_1+1:])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)\nelif len(a[i_1+1:])==0:\n    ans = len(a[:i_1])//(k-1)\n    if len(a[:i_1])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)\nelse:\n    ans = len(a[:i_1])//(k-1) + 1\n    tmp = ans * (k-1)\n    ans += len(a[tmp+1:])//(k-1)\n    if len(a[tmp+1:])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "11462": {"id": 11462, "code": "s = \"SAT\"\nl=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nnum=l.index(s)\nprint(7-num)", "coverage": [">", ">", ">", ">"]}, "6042": {"id": 6042, "code": "n = 100\nans = n//2\nans += n%2\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "16391": {"id": 16391, "code": "from bisect import bisect\nn = 2\na = [100, 0]\na.sort()\ni = bisect(a, (a[-1]+1) // 2)\nif a[i] - a[-1] / 2 < a[-1] / 2 - a[i-1]:\n    print(a[-1], a[i])\nelse:\n    print(a[-1], a[i-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19184": {"id": 19184, "code": "n = 12\nif n%2==1:\n  print(0)\nelse:\n  ans = 0\n  div = 10\n  pt = 1\n  while div<=n:\n    ans += n//div\n    div *=5\n  print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8832": {"id": 8832, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18747": {"id": 18747, "code": "H = 2\nW = 100\nN = 200\na=0\ncount=0\nif H>W:\n    for i in range(W):\n        a+=H\n        count+=1\n        if a>=N:\n            break\nelse:\n    for i in range(H):\n        a+=W\n        count+=1\n        if a>=N:\n            break\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "1180": {"id": 1180, "code": "N = 112\na = N//100\nif N >(a*111):\n    b = a+1\n    print(b*111)\nelse:\n    print(a*111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "8017": {"id": 8017, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif (N-1)%(K-1) == 0:\n  print((N-1)//(K-1))\nelse:\n  print((N-1)//(K-1)+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4773": {"id": 4773, "code": "S = \"xyz\"\nl = len(S)-1\nn = len(S)-2\nans = S[0] + str(n) + S[l]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "9082": {"id": 9082, "code": "a = \"2017/01/07\"\nb = a[:3] + \"8\" + a[4:]\nprint(b)", "coverage": [">", ">", ">"]}, "14328": {"id": 14328, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup=0\ndown=0\ncnt=0\nfor i in range(n-1):\n    if up==1:\n        if a[i]>a[i+1]:\n            up=0\n            cnt+=1\n    elif down==1:\n        if a[i]<a[i+1]:\n            down=0\n            cnt+=1\n    else:\n        if a[i]<a[i+1]:\n            up=1\n        elif a[i]>a[i+1]:\n            down=1\nelse:\n    cnt+=1\n    print(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", "!", ">", ">"]}, "2865": {"id": 2865, "code": "N = \"1111111111\"\nSta = 753\nAns = 1000\nfor i in range(len(N)-2):\n    C_Ans = abs(Sta-int(\"\".join(N[i:i+3])))\n    if C_Ans < Ans:\n        Ans = C_Ans\nprint(Ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8883": {"id": 8883, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9810": {"id": 9810, "code": "N = 3\nS = ['(', ')', ')']\na = 0 \nb = 0 \nfor i in range(N):\n  if S[i] == '(':\n    a += 1\n  else:\n    if a > 0:\n      a -= 1\n    else:\n      b += 1\nans = \"\".join(S)\nif b > 0:\n  ans = \"(\"*b + ans\nif a > 0:\n  ans = ans + \")\"*a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "8922": {"id": 8922, "code": "n = 4\nau = [1, 1, 1, 1]\nad = [1, 1, 1, 1]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10588": {"id": 10588, "code": "a = 1;b = 1;k = 1\nw_list=[]\nnum=min(a,b)+1\nfor i in range(1,num):\n    if a%i==0 and b%i==0:\n        w_list.append(i)\nw_list.sort(reverse=True)\nprint(w_list[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16323": {"id": 16323, "code": "n = 2\na_l = [100, 0]\na_l.sort(reverse=True)\nans_n = a_l[0]\na_l2 = []\nfor i, val in enumerate(a_l):\n    a_l2.append((abs(val-float(ans_n)/2),i))\na_l2.sort()\nif a_l2[0][1] == 0:\n    ans_r_index = a_l2[1][1]\nelse:\n    ans_r_index = a_l2[0][1]\nans_r = a_l[ans_r_index]\nprint(ans_n, ans_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15772": {"id": 15772, "code": "X = 12;Y = 3;Z = 1\nlength = Z\ncnt = 0\nwhile length <= X:\n    length += Y + Z\n    if length > X:\n        break\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4596": {"id": 4596, "code": "s = \"xyz\"\nfirst_s = s[0]\nlast_s = s[-1]\nmiddle_s = str(len(s) - 2)\nans = first_s + middle_s + last_s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9651": {"id": 9651, "code": "n = 6\ns = \")))())\"\nl, r = 0, 0\nfor i in s:\n    if i == \"(\":\n        r += 1\n    elif r > 0 and i == \")\":\n        r -= 1\n    else:\n        l += 1\nprint(\"(\" * l + s + \")\" * r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "4543": {"id": 4543, "code": "x = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(x[0],len(x)-2,x[-1],sep='')", "coverage": [">", ">"]}, "9217": {"id": 9217, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3]=str(8)\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "13894": {"id": 13894, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\n    quit()\nA.append(A[N-1])\nans = 1\nlast = A[0]\ns = 0\nfor i in range(N-1):\n    if not(A[s] <= A[i] <= A[i+1]) and not(A[s] >= A[i] >= A[i+1]):\n        s = i + 1\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9719": {"id": 9719, "code": "n = 6\nstring = \")))())\"\nstart_cnt = 0\nend_cnt = 0\ntmp = 0\nfor s in string:\n    if s == \")\":\n        if tmp == 0:\n            start_cnt += 1\n        else:\n            tmp -= 1\n    else:\n        tmp += 1\ntmp = 0\nfor s in string[::-1]:\n    if s == \"(\":\n        if tmp == 0:\n            end_cnt += 1\n        else:\n            tmp -= 1\n    else:\n        tmp += 1\nfor _ in range(start_cnt):\n    print(\"(\", end = \"\")\nprint(string, end = \"\")\nfor _ in range(end_cnt):\n    print(\")\", end = \"\")\nprint()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "6834": {"id": 6834, "code": "H = 20;N = 3\na = [4, 5, 6]\nif sum(a) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "5465": {"id": 5465, "code": "n = 2\nif(n//2==n/2):\n    m=n//2\nelse:\n    m=n//2+1\nprint(m)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2916": {"id": 2916, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n  s = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n  ans = min(max(753-s, s-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19503": {"id": 19503, "code": "R = 3\nif R%2==0:\n    print(R)\nelse:\n    print(R*2)", "coverage": [">", ">", "!", "!", ">"]}, "5154": {"id": 5154, "code": "dx = [0, 0, 1, -1, 1, -1, -1, 1]\ndy = [1, -1, 0, 0, 1, -1, 1, -1]\ns = \"xyz\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17593": {"id": 17593, "code": "S = \"0112\"\nl, r =  map(int, [S[:2], S[2:]])\nif 1 <= l <= 12 and 1 <= r <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= l <= 12 and (r == 0 or r > 12):\n  print(\"MMYY\")\nelif (l == 0 or l > 12) and 1 <= r <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "18985": {"id": 18985, "code": "n = 5\ntwoes = [0]\nfives = [0]\nif n % 2 == 1:\n    print(0)\nelse:\n    i = 0\n    while 1:\n        if n // (2 ** (i +1)) != 0:\n            twoes.append(n // (2 ** (i + 1)))\n            i += 1\n        else:\n            break\n    i = 0\n    while 1:\n        temp5 = (n // (5** (i +1))) //2\n        if temp5 != 0:\n            fives.append(temp5)\n            i += 1\n        else:\n            break\n    print(min(sum(twoes), sum(fives)))    ", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6826": {"id": 6826, "code": "H = 20;N = 3\nA = map(int, \"4 5 6\".split())\na_sum = sum(A)\nif H - a_sum <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12439": {"id": 12439, "code": "S = \"atcoder\"\nS2 = S[:(len(S)-1)//2]\nS3 = S[(len(S)+3)//2-1:]\nprint(\"Yes\" if S == S[::-1] and S2 == S2[::-1] and S3 == S3[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "8073": {"id": 8073, "code": "N = 3;K = 3\nA = [1, 2, 3]\nA.sort()\nfor i in range(1, N):\n    if A[i] != A[0]:\n        idx = i\n        break\nif (N - idx) % (K - 1) == 0:\n    print(int((N - idx) / (K - 1)))\nelse:\n    print(int((N - idx) / (K - 1)) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16340": {"id": 16340, "code": "n = 5\narr = [6, 9, 4, 2, 11]\ni = max(arr)\narr.remove(i)\nj = min(arr, key=lambda a: min(abs(i//2-a), abs((i+1)//2-a)))\nprint(i, j)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8559": {"id": 8559, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13107": {"id": 13107, "code": "icase=0\nif icase==0:\n    x = 6\n    if x==7 or x==5 or x==3:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13677": {"id": 13677, "code": "import sys\ninput = sys.stdin.readline\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nminute = (h2 - h1) * 60 + (m2 -m1)\nprint(minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "10958": {"id": 10958, "code": "S = \"level\"\nSkai1 = S[0:(len(S)-1)//2]\nSkai1 = Skai1[::-1]\nSkai2 = S[((len(S)+3)//2)-1:len(S)]\nSkai2 = Skai2[::-1]\nif S==S[::-1] and S[0:(len(S)-1)//2] ==Skai1 and S[((len(S)+3)//2)-1:len(S)] == Skai2: \n  print('Yes')\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18718": {"id": 18718, "code": "H = 3\nW = 7\nN = 10\nk=max(H, W)\ncnt=0\nwhile k*cnt<N:\n    cnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3541": {"id": 3541, "code": "a = 12;b = 4\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4704": {"id": 4704, "code": "s = \"xyz\"\ns_len =str(len(s[1:-1]))\nprint(s[0]+s_len+s[-1])", "coverage": [">", ">", ">"]}, "9615": {"id": 9615, "code": "import sys\nsys.setrecursionlimit(10**6)\ninput = \"<function <lambda>>\"\ns = \"2017/01/31\"\nprint(s.replace(\"2017/\",\"2018/\"))", "coverage": [">", ">", ">", ">", ">"]}, "16019": {"id": 16019, "code": "import sys\ninput = sys.stdin.readline\na = 12;b = 4\nif a > b * 2:\n    ans = a - b * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16317": {"id": 16317, "code": "N = 2\nA = [100, 0]\nmx = max(A)\nA = [a for a in A if a < mx]\nA.sort(key=lambda a: abs(mx / 2 - a))\nprint(mx, A[0])", "coverage": [">", ">", ">", ">", ">", ">"]}, "6704": {"id": 6704, "code": "import sys\nH = 20;N = 3\narray = [4, 5, 6]\nif not ( 1 <= H <= 10**9 and 1 <= N <= 10**5 ): sys.exit()\nif not ( 1 <= min(array) and max(array) <= 10**4 ): sys.exit()\nprint('Yes') if sum(array) >= H else print('No')", "coverage": [">", ">", ">", ">", ">", ">"]}, "10228": {"id": 10228, "code": "N = 8\nS = \"))))((((\"\nl = 0\nr = 0\nfor i in range(N):\n    if S[i]==\")\":\n        r -= 1\n        if r<0:\n            l += 1\n            r = 0\n    else:\n        r += 1\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6184": {"id": 6184, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11679": {"id": 11679, "code": "w = [\"SAT\", \"FRI\", \"THU\", \"WED\", \"TUE\", \"MON\", \"SUN\"]\ns = \"SUN\"\nprint((w.index(s)+1)%8)", "coverage": [">", ">", ">"]}, "2479": {"id": 2479, "code": "N = {'9', '4', '1', '7'}\nprint('YES' if N == {'1', '4', '7', '9'} else 'NO')", "coverage": [">", ">"]}, "17188": {"id": 17188, "code": "a = \"H\";b = \"H\"\nif a==b==\"H\" or a==b==\"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "18249": {"id": 18249, "code": "import math\nh = 14\nw = 12\nn = 112\na=max(h,w)\nprint(math.ceil(n/a))", "coverage": [">", ">", ">", ">", ">", ">"]}, "8421": {"id": 8421, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16736": {"id": 16736, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    print(b)\nelif b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "4534": {"id": 4534, "code": "s = \"internationalization\"\nsl = len(s)\nprint(s[0]+str(sl-2)+s[sl-1])", "coverage": [">", ">", ">"]}, "8428": {"id": 8428, "code": "n = 1\na = [[2], [3]]\name = 0\name_l = []\nfor i in range(n): \n  for j in range(n): \n    if i > j:\n      ame += a[0][j]\n    elif i == j:\n      ame += a[0][j]+a[1][j]\n    else:\n      ame += a[1][j]\n    if j == n-1:\n      ame_l.append(ame)\n      ame = 0\nprint(max(ame_l))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "13391": {"id": 13391, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint('{} {} {}'.format(a, b, c))", "coverage": [">", ">"]}, "12153": {"id": 12153, "code": "N = 11;M = 16\nn = 11;m = 17\nif N==n:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "2138": {"id": 2138, "code": "N = 10;A = 7;B = 5\nma = min(A,B)\nmi = A+B-N\nif mi<=0:\n    mi = 0\nprint(ma,mi)", "coverage": [">", ">", ">", ">", "!", ">"]}, "17840": {"id": 17840, "code": "S = \"1700\"\nif 1 <= int(S[0:2]) <= 12:\n  if 1 <= int(S[2:4]) <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= int(S[2:4]) <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "9727": {"id": 9727, "code": "n = 3\ns = \"())\"\nns = s\nwhile '()' in ns:\n    ns = ns.replace('()', '')\nl = ns.count(')')\nr = ns.count('(')\nprint('(' * l + s + ')' * r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19019": {"id": 19019, "code": "N = 5\nif(N%2 != 0):\n    print(0)\nelse:\n    cnt = 0\n    n = 1\n    while n <= N:\n        n *= 5\n        if(n > N):\n            break\n        num = n*2\n        cnt += N//num\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18150": {"id": 18150, "code": "import sys\nsys.setrecursionlimit(10**6)\ns = \"0112\"\nl = [i for i in range(1,13)]\nl = [str(i) if len(str(i))==2 else '0'+str(i) for i in l]\nif s[:2] not in l and s[2:] not in l:\n    print('NA')\nelif s[:2] not in l and s[2:] in l:\n    print('YYMM')\nelif s[:2] in l and s[2:] not in l:\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17494": {"id": 17494, "code": "s = \"0112\"\nf=int(s[:2])\nb=int(s[2:])\nif 0<f<13 and 0<b<13:\n    print('AMBIGUOUS')\nelif 0<b<13:\n    print('YYMM')\nelif 0<f<13:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "14070": {"id": 14070, "code": "from collections import deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd=deque(a)\ntmp=[d[0]]\nd.popleft()\nans=1\nwhile d:\n    t=tmp[-1]-tmp[0]\n    if len(tmp)==1 or t==0:\n        tmp.append(d.popleft())\n    elif t>0 and d[0]>=tmp[-1]:\n        tmp.append(d.popleft())\n    elif t<0 and d[0]<=tmp[-1]:\n        tmp.append(d.popleft())\n    else:\n        ans+=1\n        tmp=[d.popleft()]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "420": {"id": 420, "code": "original_s = ['a']\ns = list(map(lambda x:ord(x)-97-26, original_s))\nK = 25\nans = original_s\nfor i in range(len(s)):\n    if abs(s[i]) <= K and s[i] != -26:\n        ans[i] = \"a\"\n        K += s[i]\nans[-1] = chr(((ord(ans[-1]) + K) - 97) % 26 + 97)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19292": {"id": 19292, "code": "N = 12\nif N%2:\n    print(0)\nelse:\n    a = 0\n    for i in range(1, 40):\n        a += N//2//5**i\n    print(a)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "6758": {"id": 6758, "code": "HP = 20;N = 3\nATK = [4, 5, 6]\nprint('Yes' if sum(ATK) >= HP else 'No')", "coverage": [">", ">", ">"]}, "16424": {"id": 16424, "code": "n = 2\nl = [100, 0]\nl.sort()\nans1 = l[-1]\nans2 = -1\ndiff = 1000000000\nfor i in range(n-1):\n    if diff >= abs(l[i] - ans1//2):\n        ans2 = l[i]\n        diff = abs(l[i] - ans1//2)\nprint(ans1, ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "399": {"id": 399, "code": "s = ['a']\nk = 25\nn = len(s)\nfor i in range(n):\n    if k <= 0 or s[i] == 'a':\n        continue\n    if 123 - ord(s[i]) <= k:\n        k -= 123 - ord(s[i])\n        s[i] = 'a'\nk %= 26\nif ord(s[-1])+k > 122:\n    s[-1] = chr(97+(122-ord(s[-1])+k))\nelse:\n    s[-1] = chr(ord(s[-1])+k)\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "20": {"id": 20, "code": "S = ['x', 'y', 'z']\nN = 4\ni=0\nwhile i<len(S)-1:\n    if S[i]!='a' and 123-ord(S[i])<=N:\n        N-=123-ord(S[i])\n        S[i]='a'\n    i+=1\nN=N%26\nwhile N:\n    if S[-1]=='z':\n        S[-1]='a'\n    else:\n        S[-1]=chr(ord(S[-1])+1)\n    N-=1\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16197": {"id": 16197, "code": "n = 2\nt = [100, 0]\nt.sort()\nmax_value = t[-1]\nmid_value = 0\nfor a in t:\n    if abs(max_value/2-a) < abs(max_value/2-mid_value):\n        mid_value = a\nprint(max_value, mid_value)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17833": {"id": 17833, "code": "s = \"0112\"\nF, T = False, True\nans = {(F, F): 'NA', (F, T): 'YYMM', (T, F): 'MMYY', (T, T): 'AMBIGUOUS'}\nprint(ans[1 <= int(s[:2]) <= 12, 1 <= int(s[2:]) <= 12])", "coverage": [">", ">", ">", ">"]}, "1575": {"id": 1575, "code": "n = 111\nfor i in range(n,n + 111):\n    s = str(i)\n    if s[0]== s[1] and s[1] == s[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "841": {"id": 841, "code": "K = 2\nA=0\nfor i in range(K):\n  A=(A*10+7)%K\n  if A%K==0:\n    print(i+1)\n    break\n  if i==K-1:print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "9153": {"id": 9153, "code": "S = \"2017/01/31\"\nans = S.replace('2017','2018') \nprint(ans)", "coverage": [">", ">", ">"]}, "9582": {"id": 9582, "code": "s = \"2017/01/07\"\ns_fix = s.replace('2017', '2018')\nprint(s_fix)", "coverage": [">", ">", ">"]}, "6525": {"id": 6525, "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nX = []\nj = 0\nfor i in range(n):\n    while j < n and B[i] >= C[j]:\n        j += 1\n    X.append(n-j)\nS = [0]\nfor i in range(n):\n    S.append(S[-1]+X[i])\nj = 0\nans = 0\nfor i in range(n):\n    while j < n and A[i] >= B[j]:\n        j += 1\n    ans += S[n]-S[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12915": {"id": 12915, "code": "X = 6\nif (X%2==1)and(not(X==1))and(not(X==9)):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "17342": {"id": 17342, "code": "a = \"D\";b = \"D\"\nif a==b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "18005": {"id": 18005, "code": "s = \"1700\"\nl = list(s)\nx = int(l[0]+l[1])\ny = int(l[2]+l[3])\nif 0 < x < 13 and (y > 12 or y == 0):\n    print(\"MMYY\")\nelif (x > 12 or x == 0) and 0 < y < 13:\n    print(\"YYMM\")\nelif x > 12 or y > 12 or (x == 0 and y == 0):\n    print(\"NA\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6798": {"id": 6798, "code": "H = 20;N = 3\nmy_list = [4, 5, 6]\nif H <= sum(my_list):\n    answer = 'Yes'\nelse:\n    answer = 'No'\nprint(answer)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5893": {"id": 5893, "code": "n = 5\npages = 0\nif n%2 == 1:\n    pages += 1\npages += n//2\nprint(pages)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6479": {"id": 6479, "code": "import bisect\nn = 2\nal = [1, 5]\nbl = [2, 4]\ncl = [3, 6]\nal.sort()\nbl.sort()\ncl.sort()\nans = 0\ntmp1 = [n]*n\ntmp2 = [n]*n\nfor i in range(n):\n    j = bisect.bisect_left(al, bl[i])\n    tmp1[i] = j\nfor i in range(n):\n    j = bisect.bisect_right(cl, bl[i])\n    tmp2[i] = n-j\nfor i in range(n):\n    ans += tmp1[i]*tmp2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11839": {"id": 11839, "code": "b = \"11 30\"\na = \"12 1\"\nprint(int(a[-2:]==' 1'))", "coverage": [">", ">", ">"]}, "16813": {"id": 16813, "code": "a = \"D\";b = \"H\"\nif a=='H':\n    if b=='H':print('H')\n    else: print('D')\nelse:\n    if b=='H':print('D')\n    else: print('H')", "coverage": [">", ">", "!", "!", "!", ">", "!"]}, "11285": {"id": 11285, "code": "S = \"SUN\"\nprint()\nif S==\"SUN\":\n    print(7)\nif S==\"MON\":\n    print(6)\nif S==\"TUE\":\n    print(5)\nif S==\"WED\":\n    print(4)\nif S==\"THU\":\n    print(3)\nif S==\"FRI\":\n    print(2)\nif S==\"SAT\":\n    print(1)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!"]}, "8691": {"id": 8691, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1860": {"id": 1860, "code": "n = 100;a = 100;b = 100\nd = min(a,b)\nm = a+b-n\nif m < 0:\n    m = 0\nprint(\"{} {}\".format(d,m))", "coverage": [">", ">", ">", ">", "!", ">"]}, "1102": {"id": 1102, "code": "n = ['7', '5', '0']\nif n[1]<n[2]:n[1]=str(int(n[1])+1)\nif n[0]<n[1]:n[0]=str(int(n[0])+1)\nprint(n[0]*3)", "coverage": [">", ">", ">", ">"]}, "8765": {"id": 8765, "code": "N = 4\nA_1 = [1, 1, 1, 1]\nA_2 = [1, 1, 1, 1]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12109": {"id": 12109, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(int(a!=c))", "coverage": [">", ">", ">"]}, "6244": {"id": 6244, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    idx_a = bisect.bisect_left(A,b)\n    idx_c = bisect.bisect_right(C,b)\n    ans += idx_a * (N - idx_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4087": {"id": 4087, "code": "sh = 10;sm = 0;eh = 12;em = 0;t = 120\nprint((eh-sh)*60+em-sm-t)", "coverage": [">", ">"]}, "13343": {"id": 13343, "code": "s = \"happy,newyear,enjoy\"\nprint(' '.join(s.split(',')))", "coverage": [">", ">"]}, "1838": {"id": 1838, "code": "n = 10;a = 7;b = 5\nmaxi=min(a,b)\nmini=a+b-n\nif a+b-n<=0:\n    mini=0\nprint(maxi,mini)", "coverage": [">", ">", ">", ">", "!", ">"]}, "5645": {"id": 5645, "code": "import math\nn = 2\nm = n//2\nif n % 2 == 0:\n    print(m)\nelse:\n    print(m+1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16544": {"id": 16544, "code": "v = ['D', 'D']\nif v[0]==v[1]:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "10217": {"id": 10217, "code": "from collections import deque\nn = 3\ns = \"())\"\nans=deque(s)\ncnt=0\nfor i in range(n):\n  if (cnt==0)and(s[i]==')'):\n    ans.appendleft('(')\n  elif (cnt!=0)and(s[i]==')'):\n    cnt-=1\n    pass\n  elif s[i]=='(':\n    cnt+=1\nif cnt>0:\n  ans.append(')'*cnt)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "906": {"id": 906, "code": "import sys\nk = 101\na = dict()\ncnt = 0\nbase = 0\nwhile True:\n    cnt += 1\n    base = (base*10+7)%k\n    if base == 0:\n        break\n    if base in a:\n        cnt = -1\n        break\n    else:\n        a[base] = 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "8714": {"id": 8714, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7830": {"id": 7830, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nnum=min(a)\nif a[0]==num:\n    n-=1\nif a[-1]==num:\n    n-=1\nn-=1\nk-=1\nprint(-1*(n//-k))", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "7544": {"id": 7544, "code": "H = 211;n = 5\narr = [31, 41, 59, 26, 53]\nsum = 0\nfor x in arr:\n\tsum += x\nprint(\"Yes\" if sum >= H else \"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "9312": {"id": 9312, "code": "str = \"2017/01/07\"\nprint(str.replace(\"2017\", \"2018\"))", "coverage": [">", ">"]}, "2498": {"id": 2498, "code": "s = {'9', '4', '1', '7'}\na = {'1','9','7','4'}\ns = s&a\nif len(s) == 4:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5933": {"id": 5933, "code": "N = 2\nans = 0\nans = -(-N//2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "15944": {"id": 15944, "code": "a = 12;b = 4\nprint(a-2*b if a-2*b>0 else 0)", "coverage": [">", ">"]}, "782": {"id": 782, "code": "import sys\nk = 2\ns=0\nfor i in range(k):\n    s=s*10+7\n    if s%k!=0:\n        s=s%k\n    else:\n        print(i+1)\n        sys.exit()\nprint(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "2336": {"id": 2336, "code": "N = 1;M = 1\nprint(int(N*max(N-1, 0)/2) + int(M*max(M-1, 0)/2))", "coverage": [">", ">"]}, "3828": {"id": 3828, "code": "x = 64145;y = 123;z = 456\nans=1\nx-=(y+2*z)\nprint(ans+x//(y+z))", "coverage": [">", ">", ">", ">"]}, "4405": {"id": 4405, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nsm = h2*60 + m2\ngm = h1*60 + m1\nans = sm - gm - k\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "1604": {"id": 1604, "code": "n = 10;a = 3;b = 5\nx = min(a,b)\ny = max(a+b-n, 0)\nprint(x, y)", "coverage": [">", ">", ">", ">"]}, "13635": {"id": 13635, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c,sep=\" \")", "coverage": [">", ">"]}, "13799": {"id": 13799, "code": "import math\nimport sys\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = \"Init\"\nans = 0\nfor i in range(1, n):\n    if flag == \"Init\":\n        if a[i - 1] == a[i]:\n            pass\n        elif a[i - 1] > a[i]:\n            flag = \"-\"\n        else:\n            flag = \"+\"\n    elif flag == \"-\":\n        if a[i - 1] < a[i]:\n            ans += 1\n            flag = \"Init\"\n    else:\n        if a[i - 1] > a[i]:\n            ans += 1\n            flag = \"Init\"\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "10714": {"id": 10714, "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nif s == list(reversed(s)) and s[:len(s)//2] == list(reversed(s[:len(s)//2])):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", "!", "!", ">"]}, "214": {"id": 214, "code": "s = \"codefestival\"\nk = 100\nslen = len(s)\nnew_s = \"\"\nfor i in range(slen):\n  val = (ord(\"z\") + 1 - ord(s[i])) % 26\n  if k >= val:\n    k -= val\n    new_s += \"a\"\n  else:\n    new_s += s[i]\nif k > 0:\n  tmp_val = ord(new_s[slen-1]) + k % 26\n  if tmp_val > ord(\"z\"):\n    tmp_val -= 26\n  new_s = new_s[:-1] + chr(tmp_val)\nprint(new_s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "10623": {"id": 10623, "code": "A = 8;B = 12;K = 2\nlist = []\nfor i in range(1, max(A, B)+1):\n    if A % i == 0 and B % i == 0:\n        list.append(i)\n    else:\n        pass\nlist = sorted(list, reverse=True)\nprint(list[K-1])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8054": {"id": 8054, "code": "import math\ns = [4, 3]\nn=s[0]\nk=s[1]-1\ns = [2, 3, 1, 4]\nind=s.index(1)\nprint(math.ceil((n-1)/(k)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8401": {"id": 8401, "code": "n = 1\na1 = [2]\na2 = [3]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12203": {"id": 12203, "code": "date1 = ['11', '16']\ndate2 = ['11', '17']\nif date1[0] != date2[0]:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "1584": {"id": 1584, "code": "N = 10;A = 7;B = 5\nC = A + B - N\nif C < 0:\n    C = 0\nprint(min(A, B), C)", "coverage": [">", ">", ">", "!", ">"]}, "779": {"id": 779, "code": "k = 2\nif k % 2 == 0 or k % 5 == 0:\n    x = -1\nelse:\n    x = 1\n    y = 7\n    z = 7\n    while y % k != 0:\n        z = (z * 10) % k\n        y += z\n        x += 1\nprint(x)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "19484": {"id": 19484, "code": "i = 3\nif i%2==0:\n    print(i)\nelse:\n    print(2*i)", "coverage": [">", ">", "!", "!", ">"]}, "17303": {"id": 17303, "code": "a = \"D\";b = \"D\"\nif (a == 'H' or a == 'D') and (b == 'H' or b == 'D'):\n    if a == 'H':\n        if b=='H':\n            print('H')\n        else:\n            print('D')\n    if a == 'D':\n        if b=='H':\n            print('D')\n        else:\n            print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "11465": {"id": 11465, "code": "week = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ns = \"SUN\"\ni = 1\nwhile s != week[-i]:\n    i = i + 1\nprint(int(i))", "coverage": [">", ">", ">", ">", ">", ">"]}, "2270": {"id": 2270, "code": "n = 10;a = 7;b = 5\nans1 = min(a, b)\nans2 = max(a + b - n, 0)\nans = ' '.join([str(ans1), str(ans2)]) \nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "4681": {"id": 4681, "code": "S = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nZ = len(S) - 2\nZ = str(Z)\nprint(S[0] + Z + S[-1])", "coverage": [">", ">", ">", ">"]}, "3755": {"id": 3755, "code": "x = 12;y = 3;z = 1\nc = (x - z)//(y+z)\nprint(c)", "coverage": [">", ">", ">"]}, "12190": {"id": 12190, "code": "m = 11;d = 30\nmm = 12;dd = 1\nprint('01'[m<mm])", "coverage": [">", ">", ">"]}, "8514": {"id": 8514, "code": "N = 5\nU = [3, 2, 2, 4, 1]\nD = [1, 2, 2, 2, 1]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1774": {"id": 1774, "code": "n = 100;a = 100;b = 100\nif a == 0 or b == 0:\n    print(0, 0)\nelif n > a+b:\n    max_ab = min(a, b)\n    print(max_ab, 0)\nelse:\n    max_ab = min(a, b)\n    print(max_ab, a+b-n)", "coverage": [">", ">", "!", ">", "!", "!", "!", ">", ">"]}, "4254": {"id": 4254, "code": "Hs = 10;Ms = 0;He = 15;Me = 0;K = 30\nprint(str((He-Hs)*60+Me-Ms-K))", "coverage": [">", ">"]}, "3732": {"id": 3732, "code": "x = 12;y = 3;z = 1\nx -= z\nif x >= 0:\n   print(x//(y+z))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18553": {"id": 18553, "code": "H = 2\nW = 100\nN = 200\nc=0\nch=0\ncw=0\nwhile c<N:\n    if H-cw>W-ch:\n        c+=H-cw\n        ch+=1\n    else:\n        c+=W-ch\n        cw+=1\nprint(ch+cw)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "4642": {"id": 4642, "code": "s = \"internationalization\"\nhead, *center, tail = s\nprint(head + str(len(center)) + tail)", "coverage": [">", ">", ">"]}, "7167": {"id": 7167, "code": "h = 210;a = 5\nA = [31, 41, 59, 26, 53]\nsum_A=sum(A)\nif h>sum_A:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3808": {"id": 3808, "code": "X = 12;Y = 3;Z = 1\nW = X - Z*2\nif W < Y:\n    print(0)\nelse:\n    W -= Y\n    ans = 1\n    ans += W // (Y+Z)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "10603": {"id": 10603, "code": "A = 1;B = 1;K = 1\nanslist = []\nfor i in range(1,max(A,B)+1):\n    if A % i == 0 and B % i == 0:\n        anslist.append(i)\nprint(anslist[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "1397": {"id": 1397, "code": "n = 111\nif int(str(n)[0]*3) >= n:\n    print(str(n)[0]*3)\nelse:\n    print((int(str(n)[0]) + 1)*111)", "coverage": [">", ">", ">", "!", "!"]}, "4869": {"id": 4869, "code": "S = \"xyz\"\nl=len(S)-2\nA=S[0]\nB=S[-1]\nprint(A+str(l)+B)", "coverage": [">", ">", ">", ">", ">"]}, "13058": {"id": 13058, "code": "ans = \"YES\"\nprint(ans)", "coverage": [">", ">"]}, "6226": {"id": 6226, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\no = []\np = []\ni = 0\nk = 0\nfor j in range(N):\n    while i < N and A[i] < B[j]:\n        i = i + 1\n    o.append(i)\n    while k < N and B[j] >= C[k]:\n        k = k + 1\n    p.append(N-k)\nsum = 0\nfor x in range(N):\n    sum = sum + o[x] * p[x]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "17158": {"id": 17158, "code": "a = \"H\";b = \"H\"\nif a == \"H\"and b == 'H':\n  print('H')\nelif a == 'H' and b == 'D':\n  print('D')\nelif a == 'D' and b == 'H':\n  print('D')\nelif a == 'D' and b == 'D':\n  print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4402": {"id": 4402, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nv1 = 60*H1+M1\nv2 = 60*H2+M2\nprint(v2-v1-K)", "coverage": [">", ">", ">", ">"]}, "7455": {"id": 7455, "code": "H = 10;N = 3\nA = [4, 5, 6]\nattack = sum(A)\nif H <= attack:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "8808": {"id": 8808, "code": "from itertools import accumulate\nn = 5\nau = [3, 2, 2, 4, 1]\nal = [1, 2, 2, 2, 1]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3480": {"id": 3480, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 20;b = 30\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "6143": {"id": 6143, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor j in range(n):\n    ai = bisect.bisect_left(a,b[j])\n    ci = n-bisect.bisect_right(c,b[j])\n    cnt += ai*ci\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15264": {"id": 15264, "code": "X = 12;Y = 3;Z = 1\nans = X - Z\nYZ = Y + Z\nprint(ans // YZ)", "coverage": [">", ">", ">", ">"]}, "8532": {"id": 8532, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nprint(max(sum(A[:n+1]+B[n:]) for n in range(N)))", "coverage": [">", ">", ">", ">"]}, "2918": {"id": 2918, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n  s = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n  ans = min(max(753-s, s-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9714": {"id": 9714, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nc0 = 0\nc1 = 0\nz0 = 0\nz1 = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nans = [\"(\"]*c1 + s + [\")\"]*c0\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "10598": {"id": 10598, "code": "A = 1;B = 1;K = 1\nans_lst = []\nfor i in range(1,min(A,B)+1):\n    if A%i==0 and B%i==0:\n        ans_lst += [i]\nans_lst.reverse()\nprint(ans_lst[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10441": {"id": 10441, "code": "a = 8;b = 12;k = 2\nn = []\nfor x in range(1, min(a, b) + 1):\n    if a % x == 0 and b % x == 0:\n        n.append(x)\nprint(tuple(reversed(n))[k - 1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "18489": {"id": 18489, "code": "h = 14\nw = 12\nn = 112\nif h >= w:\n    m = h\nelse:\n    m = w\nif n%m == 0:\n    ans = n//m\nelse:\n    ans = n//m +1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "8786": {"id": 8786, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11579": {"id": 11579, "code": "s = \"SAT\"\nt = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nprint(7-int(t.index(s)))", "coverage": [">", ">", ">"]}, "17334": {"id": 17334, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        ans = 'H'\n    else:\n        ans = 'D'\nelse:\n    if b == 'H':\n        ans = 'D'\n    else:\n        ans = 'H'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "4669": {"id": 4669, "code": "a =[]\nb = 0\ns = \"internationalization\"\nfor i in s:\n  a.append(i)\n  b += 1\nprint(str(a[0])+str((b-2))+str(a[b-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "972": {"id": 972, "code": "n = 112\nwhile len(set(str(n)))!=1:\n\tn+=1\nprint(n)", "coverage": [">", ">", ">", ">"]}, "2378": {"id": 2378, "code": "n = 0;m = 3\nod_od = n*(n-1)/2\nev_ev = m*(m-1)/2\nprint(int(od_od+ev_ev))", "coverage": [">", ">", ">", ">"]}, "8041": {"id": 8041, "code": "n = 3;k = 3\nlst = [1, 2, 3]\nn -= 1\nk -= 1\nprint(-(-n // k))", "coverage": [">", ">", ">", ">", ">"]}, "11206": {"id": 11206, "code": "week_dict = {\n    'MON': 1,\n    'TUE': 2,\n    'WED': 3,\n    'THU': 4,\n    'FRI': 5,\n    'SAT': 6,\n    'SUN': 7\n}\nday_of_week = \"SAT\"\nif day_of_week == 'SUN':\n    print(week_dict[day_of_week])\nelse:\n    days_left_to_sunday = 7 - week_dict[day_of_week]\n    print(days_left_to_sunday)", "coverage": ["!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "7212": {"id": 7212, "code": "x = 211;y = 5\nz = map(int, \"31 41 59 26 53\".split())\nif sum(z) >= x:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "19455": {"id": 19455, "code": "import math\nN = 3\nprint(2*N//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "4365": {"id": 4365, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh3=h1*60\nh4=h2*60\na=m1+h3\nb=m2+h4\nc=b-a\nif k>c:\n  print(0)\nelse:\n  print(c-k)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12356": {"id": 12356, "code": "S = \"atcoder\"\nN = len(S)\ns = S[:(N-1)//2]\nt = S[(N+3)//2-1:]\nif s == t[::-1] and s == s[::-1] and t == t[::-1]:\n  ans = \"Yes\"\nelse:\n  ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8710": {"id": 8710, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12818": {"id": 12818, "code": "X = 5\nx = [3, 5, 7]\nfor i in range(3):\n    if X == x[i]:\n        print('YES')\n        break\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "7133": {"id": 7133, "code": "H = 210;N = 5\na = [31, 41, 59, 26, 53]\nsum = 0\nfor i in range(N):\n    sum += a[i]\nif sum >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9077": {"id": 9077, "code": "import itertools\na = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nfor x,y in itertools.permutations([a,b,c,d,e],2):\n    if x-y > k:\n        print(\":(\")\n        exit()\nprint(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14033": {"id": 14033, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = A[0]\nans = 1\nfor i in range(1, N):\n    if A[i] > prev:\n        pls = \"plus\"\n        break\n    elif A[i] < prev:\n        pls = \"minus\"\n        break\nelse:\n    print(1)\n    exit()\nfor i in range(1, N):\n    if pls == \"plus\" and prev > A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"minus\" and prev < A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"even\" and prev < A[i]:\n        pls = \"plus\"\n    elif pls == \"even\" and prev > A[i]:\n        pls = \"minus\"\n    prev = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "3331": {"id": 3331, "code": "\u3042 = 12;\u3044 = 4\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "13398": {"id": 13398, "code": "x = \"haiku,atcoder,tasks\"\nprint(x.replace(\",\",\" \"))", "coverage": [">", ">"]}, "14820": {"id": 14820, "code": "N = 2;P = 0\na = [1, 3]\nnum_odd = sum([i%2 == 1 for i in a])\nnum_even = N - num_odd\nce = 2 ** num_even\nco = 2 ** (num_odd - 1)\nif num_odd == 0:\n    co = P^1\nprint(co * ce)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "2658": {"id": 2658, "code": "n = \"1 2 9 1\"\nif n.count('1') == 1 and n.count('9') == 1 and n.count('7') == 1 and n.count('4') == 1:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "4847": {"id": 4847, "code": "N = \"smiles\"\na = len(N)\nans = N[0] +str(a-2) + N[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18116": {"id": 18116, "code": "n = \"1905\"\nans = 0\nif 1 <= int(n[0:2]) <= 12 and 0 <= int(n[2:4]) <= 99:\n  ans += 1\nif 0 <= int(n[0:2]) <= 99 and 1 <= int(n[2:4]) <= 12:\n  ans += 3\nif ans == 1:\n  print('MMYY')\nelif ans == 3:\n  print('YYMM')\nelif ans == 4:\n  print('AMBIGUOUS')\nelse:\n  print('NA')", "coverage": [">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "10974": {"id": 10974, "code": "S = \"level\"\nN = len(S)\nflag = [0,0,0]\nif S==\"\".join(reversed(list(S))):\n    flag[0]=1\nif S[:int((N-1)/2)]==\"\".join(reversed(list(S[:int((N-1)/2)]))):\n    flag[1]=1\nif S[int((N+3)/2)-1:]==\"\".join(reversed(list(S[int((N+3)/2)-1:]))):\n    flag[2]=1\nprint(\"Yes\" if flag==[1,1,1] else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "8531": {"id": 8531, "code": "n = 1\nL = [[2], [3]]\nans = 0\nfor i in range(n):\n  cnt = 0\n  for j in range(n):\n    if j < i: \n      cnt += L[0][j]\n    elif j == i:\n      cnt += L[0][j] + L[1][j]\n    else:\n      cnt += L[1][j]\n  ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "17984": {"id": 17984, "code": "s = 1700\na = s % 100\nb = (s-a) / 100\nif a >= 1 and a <= 12:\n    if b >= 1 and b <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('YYMM')\nelse:\n    if b >= 1 and b <= 12:\n        print('MMYY')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "11139": {"id": 11139, "code": "S = \"level\"\nN = len(S)\nif S != S[::-1]:\n    print('No')\nelif S[:(N - 1) // 2] != (S[:(N - 1) // 2])[::-1]:\n    print('No')\nelif S[(N + 3) // 2 - 1:] != (S[(N + 3) // 2 - 1:])[::-1]:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "11404": {"id": 11404, "code": "weekday = ['SUN', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON']\nval = \"SAT\"\nif val == 'SUN':\n    print(\"7\")\nelse:\n    print(weekday.index(val))", "coverage": [">", ">", ">", "!", "!", ">"]}, "654": {"id": 654, "code": "K = 2\nnana=7\nkou=1\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\nelse:\n    for i in range(1,K):\n        if nana % K == 0:\n            break\n        nana = (nana * 10 + 7) % K\n        kou +=1\n    print(kou)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "13481": {"id": 13481, "code": "t1 = \"happy\";t2 = \"newyear\";t3 = \"enjoy\"\nprint(t1,t2,t3)", "coverage": [">", ">"]}, "4497": {"id": 4497, "code": "string = \"xyz\"\nstring_length = len(string)\nprint(string[0] + \"%d\" % (string_length - 2) + string[string_length - 1])", "coverage": [">", ">", ">"]}, "4506": {"id": 4506, "code": "strings = ['x', 'y', 'z']\nstr_len = len(strings)\nprint(strings[0] + str(str_len - 2) + strings[str_len - 1])", "coverage": [">", ">", ">"]}, "16671": {"id": 16671, "code": "a = \"H\";b = \"H\"\nif a==\"H\"and b==\"H\":\n    print(\"H\")\nelif a==\"H\"and b==\"D\":\n    print(\"D\")\nelif a==\"D\"and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2702": {"id": 2702, "code": "s = \"1291\"\nif s.count(\"1\")==1 and  s.count(\"9\")==1 and  s.count(\"7\")==1 and  s.count(\"4\")==1:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "17986": {"id": 17986, "code": "S = \"0112\"\nf = int(S[:2])\nb = int(S[2:])\nif (not 0 < f <= 12) and 0 < b <= 12:\n    print('YYMM')\nelif (not 0 < b <= 12) and 0 < f <= 12:\n    print('MMYY')\nelif 0 < f <= 12 and 0 < b <= 12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "13955": {"id": 13955, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzougen = 4 \nans=1\nfor i in range(N-1):\n    if zougen==4:\n        if A[i]-A[i+1]<0:\n            zougen = 2\n        elif A[i]-A[i+1]>0:\n            zougen = 1\n        else:\n            zougen =0\n    if A[i]-A[i+1]<0:\n        if zougen == 1:\n            ans+=1\n            zougen=4\n        if zougen == 0:\n            zougen =2\n    if A[i]-A[i+1]>0:\n        if zougen == 2:\n            ans+=1\n            zougen=4\n        if zougen ==0:\n            zougen = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "2118": {"id": 2118, "code": "N = 100;A = 100;B = 100\nif A > B:\n  max = B\nelse:\n  max = A\nif A + B > N:\n  min = A + B - N\nelse:\n  min = 0\nprint(max, min)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "19470": {"id": 19470, "code": "n = 3\nprint(2*n) if n%2 else print(n)", "coverage": [">", ">"]}, "4374": {"id": 4374, "code": "x = 10;d = 0;y = 12;r = 0;k = 120\ns=x*60+d\nss=y*60+r\nprint(ss-s-k)", "coverage": [">", ">", ">", ">"]}, "18216": {"id": 18216, "code": "import math\nh = 3\nw = 7\nn = 10\nif h>=w: print(math.ceil(n/h))\nelse: print(math.ceil(n/w))", "coverage": [">", ">", ">", ">", ">", ">"]}, "16513": {"id": 16513, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nma = a[-1]\nmn = float(\"inf\")\nmni = -1\nfor i in range(n-1):\n  if abs(2*a[i]-ma) < mn:\n    mn = abs(2*a[i]-ma)\n    mni = i\nprint(ma,a[mni])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14193": {"id": 14193, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nL = [A[0]]\nfor i in range(1, N):\n  if A[i] != A[i - 1]:\n    L.append(A[i])\nN = len(L)\nif N == 1:\n  print(1)\n  exit()\nf = L[1] > L[0]\nans = 1\ni = 2\nwhile i < N:\n  if (L[i] > L[i - 1]) != f:\n    ans += 1\n    if i == N - 1:\n      break\n    i += 1\n    f = L[i] > L[i - 1]\n  i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4901": {"id": 4901, "code": "S = \"smiles\"\nans = S[0] + str(len(S) - 2) + S[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "12036": {"id": 12036, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 in [1,3,5,7,8,10,12] and d1==31:\n  print(1)\nelif m1 in [4,6,9,11] and d1==30:\n  print(1)\nelif m1==2 and d1 in [28,29]:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "1059": {"id": 1059, "code": "n = 111\nfor num in range(n, 1000):\n    if num % 111 == 0:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "4403": {"id": 4403, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nf = (c - a) * 60\nf += (d - b)\nprint(f - e)", "coverage": [">", ">", ">", ">"]}, "8256": {"id": 8256, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ncnt=0\nfor i in range(10**5+1):\n    N-=K\n    cnt+=1\n    if N<=0:\n        break\n    else:\n        N+=1\nprint(cnt)   ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5312": {"id": 5312, "code": "A = 2\nprint(A//2+A%2)", "coverage": [">", ">"]}, "8299": {"id": 8299, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nA.pop(1)\nf=len(A)//(K-1)\nif len(A)%(K-1)==0:\n    print(f)\nelse:\n    print(f+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18725": {"id": 18725, "code": "h = 14\nw = 12\nn = 112\na = max(h,w)\nprint((n+a-1)//a)", "coverage": [">", ">", ">", ">", ">"]}, "9480": {"id": 9480, "code": "a = \"2017/01/07\"\nprint(a.replace('2017','2018'))", "coverage": [">", ">"]}, "11172": {"id": 11172, "code": "s = \"akasaka\"\nn = len(s)\nt = s[:(n - 1) // 2]\nu = s[(n + 1) // 2:]\nprint(\"YNeos\"[any([s != s[::-1], t != t[::-1], u != u[::-1]])::2])", "coverage": [">", ">", ">", ">", ">"]}, "18569": {"id": 18569, "code": "import math\na = 3\nb = 7\nn = 10\ndum = max(a,b)\nans = n/dum\nprint(math.ceil(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6707": {"id": 6707, "code": "H = 10;N = 3\nA = [4, 5, 6]\nprint(\"Yes\") if H <= sum(A) else print(\"No\")", "coverage": [">", ">", ">"]}, "1012": {"id": 1012, "code": "n = 112\nlis = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nif n <= lis[0]:\n    print(lis[0])\nelif n <= lis[1]:\n    print(lis[1])\nelif n <= lis[2]:\n    print(lis[2])\nelif n <= lis[3]:\n    print(lis[3])\nelif n <= lis[4]:\n    print(lis[4])\nelif n <= lis[5]:\n    print(lis[5])\nelif n <= lis[6]:\n    print(lis[6])\nelif n <= lis[7]:\n    print(lis[7])\nelif n <= lis[8]:\n    print(lis[8])", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "3825": {"id": 3825, "code": "x = 12;y = 3;z = 1\nans=1\nx-=(y+2*z)\nprint(ans+x//(y+z))", "coverage": [">", ">", ">", ">"]}, "8864": {"id": 8864, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "18528": {"id": 18528, "code": "H = 14\nW = 12\nN = 112\nprint(int(N/max(H,W)) + (1 if N % max(H,W) != 0 else 0))", "coverage": [">", ">", ">", ">"]}, "9458": {"id": 9458, "code": "s = \"2017/01/07\"\nif s[0:4] == '2017':\n    print(s.replace('2017', '2018'))", "coverage": [">", ">", ">"]}, "12605": {"id": 12605, "code": "import math\na = 100;b = 50;k = 4\nl = []\nfor i in range(1, math.gcd(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        l.append(i)\nL = sorted(l)\nprint(L[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4874": {"id": 4874, "code": "s = \"smiles\"\nans=[]\nans.append(s[0])\nans.append(len(s)-2)\nans.append(s[-1])\nprint(*ans,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "11199": {"id": 11199, "code": "a=['MON','TUE','WED','THU','FRI','SAT','SUN']\nb = \"SUN\"\nprint(6-a.index(b) if b!='SUN' else '7')", "coverage": [">", ">", ">"]}, "8715": {"id": 8715, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11391": {"id": 11391, "code": "S = \"SUN\"\nwait_day = 0\nif S == \"SUN\":\n  wait_day = 7\nelif S == \"MON\":\n  wait_day = 6\nelif S == \"TUE\":\n  wait_day = 5\nelif S == \"WED\":\n  wait_day = 4\nelif S == \"THU\":\n  wait_day = 3\nelif S == \"FRI\":\n  wait_day = 2\nelif S == \"SAT\":\n  wait_day = 1\nprint(wait_day)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "351": {"id": 351, "code": "s = \"codefestival\"\nk = 100\nlens=len(s)\nalp=\"azyxwvutsrqponmlkjihgfedcb\"\nans=[]\nfor i in range(lens):\n    d=alp.index(s[i])\n    if k>=d:\n        k-=d\n        ans.append(\"a\")\n    else:\n        ans.append(s[i])\nlas=ans.pop()\nalp=\"abcdefghijklmnopqrstuvwxyz\"\nans.append(alp[(alp.index(las)+k)%26])\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "4795": {"id": 4795, "code": "S = \"internationalization\"\nn = str(len(S)-2)\nres = S[0]+n+S[len(S)-1]\nprint(res)", "coverage": [">", ">", ">", ">"]}, "17533": {"id": 17533, "code": "S = \"0112\"\nif int(S[:2]) > 12 or int(S[:2]) == 0:\n  if int(S[2:]) > 12 or int(S[2:]) == 0: print('NA')\n  else: print('YYMM')\nelse:\n  if int(S[2:]) > 12 or int(S[2:]) == 0: print('MMYY')\n  else: print('AMBIGUOUS')", "coverage": [">", ">", "!", "!", "!", ">", ">"]}, "9607": {"id": 9607, "code": "a = \"2017/01/31\"\ns=a[:3]+\"8\"+a[4:]\nprint(s)", "coverage": [">", ">", ">"]}, "12559": {"id": 12559, "code": "A = 100;B = 50;K = 4\ncount=0\nfor i in reversed(range(min(A,B))):\n  if A%(i+1)==0 and B%(i+1)==0:\n    count+=1\n  if count==K:\n    print(i+1)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15291": {"id": 15291, "code": "x = 100000;y = 1;z = 1\nx-=(y+2*z)\nc=1\nc+=x//(y+z)\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "11035": {"id": 11035, "code": "s = \"akasaka\"\ncount=0\nn=int(len(s))\nt1=s[:int((n-1)/2)]\nt2=s[int((n+3)/2-1):]\nresult='No'\nif s==s[::-1]:\n    if t1==t1[::-1]:\n        if t2==t2[::-1]:\n            result='Yes'\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5466": {"id": 5466, "code": "n = 100\nif(n//2==n/2):\n    m=n//2\nelse:\n    m=n//2+1\nprint(m)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10864": {"id": 10864, "code": "S = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nN=len(S)\nx=0\nfor i in range(int((N-1)/2)):\n    if S[i]!=S[-(i+1)]:\n        print(\"No\")\n        break\n    elif i==int((N-1)/2)-1:\n        x+=1\nimport math\nif x==1:\n    S_l=S[:int((N-1)/2)]\n    for i in range(int(math.ceil(len(S_l)/2))):\n        if S_l[i]!=S_l[-(i+1)]:\n            print(\"No\")\n            break\n        elif i==int(math.ceil(len(S_l)/2))-1:\n            x+=1\nif x==2:\n    S_m=S[int((N+3)/2)-1:N]\n    for i in range(int(math.ceil(len(S_m)/2))):\n        if S_m[i]!=S_m[-(i+1)]:\n            print(\"No\")\n            break\n        elif i==int(math.ceil(len(S_m)/2))-1:\n            print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!"]}, "11324": {"id": 11324, "code": "s = \"SAT\"\nres = 0\nif s == \"SUN\":\n  res = 7\nelif s == \"MON\":\n  res = 6\nelif s == \"TUE\":\n  res = 5\nelif s == \"WED\":\n  res = 4\nelif s == \"THU\":\n  res = 3\nelif s == \"FRI\":\n  res = 2\nelif s == \"SAT\":\n  res = 1\nprint(res)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "11659": {"id": 11659, "code": "from sys import stdin\nlis = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nS = \"SUN\"\nk = 0\nfor i in range(7):\n    if lis[i] == S:\n        k = i\nprint(7 - k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2504": {"id": 2504, "code": "N = {1, 2, 9}\nif {1, 9, 7, 4} == N:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "17771": {"id": 17771, "code": "S = \"1905\"\na=int(S[:2])\nb=int(S[2:])\nif 0<a<=12 and b==0 or 0<a<=12 and b>12:\n  print(\"MMYY\")\nelif 0<a<=12 and 0<b<=12:\n  print(\"AMBIGUOUS\")\nelif 0<b<=12 and a==0 or 0<b<=12 and a>12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "14371": {"id": 14371, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nm = 0\nfor i in range(1, n):\n    if (a[i] - a[i - 1]) * m < 0:\n        ans += 1\n        m = 0\n    elif a[i] - a[i - 1] != 0:\n        m = a[i] - a[i - 1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5447": {"id": 5447, "code": "import math\nprint(math.ceil(int(\"2\")/2))", "coverage": [">", ">"]}, "5402": {"id": 5402, "code": "N = 2\nq, r = divmod(N, 2)\nprint(q + r)", "coverage": [">", ">", ">"]}, "9128": {"id": 9128, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3]=8\nstr_s=''.join(map(str,S))\nprint(str_s)", "coverage": [">", ">", ">", ">"]}, "4568": {"id": 4568, "code": "S = \"smiles\"\nnumber = len(S)-2\nprint(''.join([S[0],str(number),S[-1]]))", "coverage": [">", ">", ">"]}, "7535": {"id": 7535, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nA.sort(reverse=True)\nS = sum(A[:N])\nif S >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18991": {"id": 18991, "code": "n = \"5\"\nm = len(n)\nn = int(n)\nif n%2==1:\n    print(0)\nelse:\n    if m==1:\n        print(0)\n    else:\n        ans = 0\n        i = 1\n        while  True:\n            ans_plus=n//(2*5**i)\n            if ans_plus==0:\n                break\n            ans += ans_plus\n            i += 1\n        print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6699": {"id": 6699, "code": "number = [10, 3]\nscore = [4, 5, 6]\nwaza = 0\nfor i in range(number[1]):\n    waza += score[i]\nif number[0] <= waza:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6993": {"id": 6993, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif h<=sum(a):print(\"Yes\")\nelse:print(\"No\")", "coverage": [">", ">", ">", "!"]}, "3975": {"id": 3975, "code": "X = 12;Y = 3;Z = 1\nused_space = Y + (Z * 2)\nans = 0\nwhile True:\n    if used_space > X:\n        break\n    used_space = used_space + Y + Z\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7354": {"id": 7354, "code": "H = 20;N = 3\nA = [4, 5, 6]\nS = sum(A)\nif S >= H: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", ">"]}, "4593": {"id": 4593, "code": "s = ['x', 'y', 'z']\nfirst = s.pop(0)\nlast = s.pop(-1)\nprint(str(first)+str(len(s))+str(last))", "coverage": [">", ">", ">", ">"]}, "13237": {"id": 13237, "code": "s = \"abcde,fghihgf,edcba\"\nnew_s = s.replace(',',' ')\nprint(new_s)", "coverage": [">", ">", ">"]}, "9863": {"id": 9863, "code": "N = 3\nS = \"())\";T = \"())\"\nwhile \"()\" in S:\n  S = S.replace(\"()\",\"\")\nprint(\"(\"*S.count(\")\")+T+S.count(\"(\")*\")\")", "coverage": [">", ">", ">", ">", ">"]}, "16860": {"id": 16860, "code": "a = \"H\";b = \"H\"\nif (a == 'H') ^ (b == 'H'):\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", "!", "!", ">"]}, "12064": {"id": 12064, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3390": {"id": 3390, "code": "a = 20;b = 30\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "7096": {"id": 7096, "code": "a = 20;b = 3\narr = [4, 5, 6]\nif sum(arr) >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "4019": {"id": 4019, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nprint(h2*60+m2-h1*60-m1-k)", "coverage": [">", ">"]}, "2576": {"id": 2576, "code": "n = {1, 4, 9, 7}\nif n == {1, 4, 7, 9}:\n\tprint('YES')\nelse:\n\tprint('NO')", "coverage": [">", ">", ">", "!", "!"]}, "6465": {"id": 6465, "code": "import bisect as bi\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in b:\n  ans+=bi.bisect_left(a,i)*(N-bi.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3065": {"id": 3065, "code": "S = \"35753\"\nnum_len = 999\nfor i in range(len(S)-2):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18873": {"id": 18873, "code": "N = 5\nif N%2 == 1:\n    print(0)\nelse:\n    ans = 0\n    x = 1\n    while 5**x <= N:\n        ans += (N//(5**x))//2\n        x += 1\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "14765": {"id": 14765, "code": "N = 2;P = 0\nA = [1, 3]\nx,y=1,0\nfor a in A:\n    if a%2:\n        x,y=x+y,x+y\n    else:\n        x,y=x*2,y*2\nprint(y if P else x)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19151": {"id": 19151, "code": "import math\nN = 12\nif N%2 == 1:\n    print(0)\n    exit()\nans = 0\ni = 1\nwhile 1:\n    a = 2*5**i\n    if N//a == 0:\n        break\n    ans += (N//a)\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16977": {"id": 16977, "code": "a = True;b = True\nif a ^ b:\n    print('D')\nelse:\n    print('H')", "coverage": [">", ">", "!", "!", ">"]}, "16914": {"id": 16914, "code": "a = \"H\";b = \"H\"\nif a == b:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "7443": {"id": 7443, "code": "H = 10;N = 3\nN_list = [4, 5, 6]\nfor i in range(0, N):\n    H -= N_list[i]\nif H <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11742": {"id": 11742, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", ">", "!", "!"]}, "18692": {"id": 18692, "code": "H = 3\nW = 7\nN = 10\ncount1 = 0\ncount2 = 0\nfor i in range(1,W+1):\n    count1 += 1\n    if i*H >= N:\n        break\nfor j in range(1,H+1):\n    count2 += 1\n    if j*W >= N:\n        break\nif count1 > count2:\n    print(count2)\nelse:\n    print(count1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3958": {"id": 3958, "code": "X = 64146;Y = 123;Z = 456\nif (X-2*Z)%(Y+Z) >= Y:\n    print((X-2*Z)//(Y+Z)+1)\nelse:\n    print((X-2*Z)//(Y+Z))", "coverage": [">", ">", ">", "!", "!"]}, "18041": {"id": 18041, "code": "s = 1700\nyy = s // 100\nmm = s % 100\nif 1 <= yy <= 12:\n    if 1 <= mm <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= mm <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12445": {"id": 12445, "code": "s = \"atcoder\"\nn=len(s)\nx=s[:(n-1)//2]\ny=s[(n+3)//2-1:]\nans=0\nfor i in range(3):\n    if s==s[::-1]:\n        ans +=1\n    if i==0:\n        s=x\n    elif i==1:\n        s=y\nprint(\"Yes\" if ans==3 else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5585": {"id": 5585, "code": "import math\nn = 2\nx = math.ceil(n/2)\nprint(x)", "coverage": [">", ">", ">", ">"]}, "4876": {"id": 4876, "code": "a = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(a[0]+str(len(a)-2)+a[-1])", "coverage": [">", ">"]}, "12648": {"id": 12648, "code": "X = 5\nif X==3 or X==5 or X==7: print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", "!"]}, "3730": {"id": 3730, "code": "X = 64145;Y = 123;Z = 456\ns = X - (X//(Y+Z))*(Y+Z)\nprint(X//(Y+Z) if s >= Z else X//(Y+Z)-1)", "coverage": [">", ">", ">"]}, "6331": {"id": 6331, "code": "from bisect import bisect_right, bisect_left\nN = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\nans = 0\nfor B in Bs:\n    A_idx = bisect_left(As, B)\n    C_idx = bisect_right(Cs, B)\n    ans += A_idx * (N - C_idx)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1197": {"id": 1197, "code": "N = 111\nfor i in range(N,1000,1):\n    n = list(str(i))\n    if n[0]==n[1] and n[1]==n[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "2608": {"id": 2608, "code": "if set(list(map(int, \"1 7 9 4\".split()))) == {1, 4, 7, 9}:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", "!", "!"]}, "3022": {"id": 3022, "code": "S = \"35753\"\nans = 10**9\nfor i in range(len(S) - 2):\n    x = S[i:i+3]\n    now = abs(int(x) - 753)\n    ans = min(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18995": {"id": 18995, "code": "N = 12\nif (N%2 == 1):\n    print(0)\nelif N == 0:\n    print(0)\nelse:\n    N //= 2\n    res = 0\n    div_coef = 1\n    while True:\n        tmp_add = N // (5 ** div_coef)\n        res += int(tmp_add)\n        div_coef += 1\n        if tmp_add < 1:\n            break\n    print(int(res))", "coverage": [">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4191": {"id": 4191, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nh1 = 60*H1+M1\nh2 = 60*H2+M2\nd = h2-h1\nprint(d-K)", "coverage": [">", ">", ">", ">", ">"]}, "1026": {"id": 1026, "code": "n = 112\ni = n\nwhile True:\n    if str(i)[0] != str(i)[1] or str(i)[1] != str(i)[2]:\n        i += 1\n    else:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "6405": {"id": 6405, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nba = []\nbaccum = []\ntmp = 0\nfor bb in b:\n    ba.append(bisect.bisect_right(a, bb-1))\n    tmp += ba[-1]\n    baccum.append(tmp) \ncb = []\nfor cc in c:\n    cb.append(bisect.bisect_right(b, cc-1))\nret = 0\nfor cc in cb:\n    if cc == 0:\n        continue\n    ret += baccum[cc-1] \nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8423": {"id": 8423, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9084": {"id": 9084, "code": "s = \"2017/01/07\"\nprint(s.replace(s[3], '8', 1))", "coverage": [">", ">"]}, "3720": {"id": 3720, "code": "a = 12;b = 4\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "19448": {"id": 19448, "code": "N = 10\nif N==1:\n    x = 2\nelif N%2==0:\n    x = N\nelse:\n    x = 2*N\nprint(x)", "coverage": [">", ">", "!", ">", ">", "!", "!", ">"]}, "4359": {"id": 4359, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh_dif = h2 - h1\nm_dif = m2 - m1\ntime = 60*h_dif + m_dif\nprint(time - k)", "coverage": [">", ">", ">", ">", ">"]}, "8093": {"id": 8093, "code": "import math\nN = 4;K = 3\nlist_ai = map(int,\"2 3 1 4\".split())\nprint(math.ceil(1+(N-K)/(K-1)))", "coverage": [">", ">", ">", ">"]}, "19537": {"id": 19537, "code": "n = 3\nif n%2!=0:\n  n*=2\nprint(n)", "coverage": [">", ">", ">", ">"]}, "12974": {"id": 12974, "code": "n = 5\nprint(['NO','YES'][n==3 or n==5 or n==7])", "coverage": [">", ">"]}, "18470": {"id": 18470, "code": "h = 3\nw = 7\nn = 10\nprint(min(-(-n//h),-(-n//w)))", "coverage": [">", ">", ">", ">"]}, "14883": {"id": 14883, "code": "n = 1;p = 1\na_list = [0]\ndp = [[0] * 2 for x in range(n+1)]\nif a_list[0] == 0:\n    dp[0][0] = 1\nelse:\n    dp[0][1] = 1\nfor i in range(n):\n    _a = a_list[i]\n    if _a == 0:\n        dp[i+1][0] = dp[i][0]*2\n        dp[i+1][1] = dp[i][1]*2\n    else:\n        dp[i+1][0] = dp[i][1]+dp[i][0]\n        dp[i+1][1] = dp[i][1]+dp[i][0]\nprint(dp[n][p])        ", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "1246": {"id": 1246, "code": "n = 111\na = 0\nfor i in range(1, 10):\n    ans = [str(i)]*3\n    ans_ = \"\".join(ans)\n    if int(ans_) >= n:\n        a = ans_\n        if a != 0:\n            break\nprint(int(a))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8104": {"id": 8104, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\naa=min(a)\nn-=k\nimport math\nq=0\nif n%(k-1)==0:\n    q+=n//(k-1)\nelse:\n    q+=n//(k-1)+1\nprint(q+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11966": {"id": 11966, "code": "a = 11;b = 16\nc = 11;d = 17\nif ((a+1)==c or (a==12 and c==1)):\n  if d ==1:\n    print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "19159": {"id": 19159, "code": "n = 5\nif n%2==1:\n    print(0)\nelse:\n    cnt=1\n    ans=0\n    while 2*5**cnt<=n:\n        ans+=n//(2*5**cnt)\n        cnt+=1\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17345": {"id": 17345, "code": "a = \"D\";b = \"D\"\nif a == b:\n    print(\"H\")\nelif a != b:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "5500": {"id": 5500, "code": "n = 5\nx, y = divmod(n, 2)\nprint(x + y)", "coverage": [">", ">", ">"]}, "18018": {"id": 18018, "code": "s = \"1905\"\nmae = int(s[:2])\nato = int(s[2:])\nflag1 = 0\nflag2 = 0\nif 0<mae and mae<=12:\n    flag1 = 1\nif 0<ato and ato<=12:\n    flag2 = 1\nif flag1 == 1 and flag2 == 1:\n    print('AMBIGUOUS')\nelif flag1 == 1:\n    print('MMYY')\nelif flag2 == 1:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "14762": {"id": 14762, "code": "n = 2;p = 0\nA = [1, 3]\ncnt = 0\nfor a in A:\n    if a%2==0: cnt += 1\nif n == cnt:\n    if p == 0: ans = 2**n\n    else: ans = 0\nelse: ans = 2**(n-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17400": {"id": 17400, "code": "s = \"1905\"\nfir = int(s[:2])\nsec = int(s[2:])\nif fir > 0 or sec > 0:\n    if 1 <= fir <= 12 and 1 <= sec <= 12 :\n        print(\"AMBIGUOUS\")\n    elif 1 <= fir <= 12: \n        print(\"MMYY\")\n    elif 1 <= sec <= 12:\n        print(\"YYMM\") \n    else:\n        print(\"NA\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "4462": {"id": 4462, "code": "s = \"internationalization\"\nprint(s[0], len(s[1:-1]), s[-1], sep='')", "coverage": [">", ">"]}, "17577": {"id": 17577, "code": "S = \"1905\"\nA=int(S[0:2])\nB=int(S[2:4])\nif (1<=A and A<=12) and (1<=B and B<=12):\n  print(\"AMBIGUOUS\")\nelif (1<=A and A<=12) and not(1<=B and B<=12):\n  print(\"MMYY\")\nelif not(1<=A and A<=12) and (1<=B and B<=12):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "16233": {"id": 16233, "code": "from itertools import combinations\nn = 2\na = [100, 0]\na.sort()\nai = a[-1]\naj = -1\nfor i in range(n-1):\n    if abs(a[i] - ai/2) <= abs(aj - ai/2):\n        aj = a[i]\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1911": {"id": 1911, "code": "n = 100;a = 100;b = 100\nx = min(a, b)\nif (a + b) > n:\n    y = (a + b) - n\nelse:\n    y = 0 \nprint(x, y)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16829": {"id": 16829, "code": "arr = ['D', 'D']\narr = list(map(str,arr))\na = arr[0]\nb = arr[1]\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')\nelif a == 'H' and b == 'D':\n    print('D')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "17801": {"id": 17801, "code": "N = 1905\na = N // 100\nb = N % 100\nif 1 <= a <= 12:\n  if 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= b <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "11515": {"id": 11515, "code": "l = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = \"SAT\"\nfor i, day in enumerate(l):\n    if day == s:\n        if i == 0:\n            print(7)\n        else:\n            print(7-i)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15417": {"id": 15417, "code": "x = 13;y = 3;z = 1\nfor i in range(x,0,-1):\n    if i*y+(i+1)*z<=x:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "18952": {"id": 18952, "code": "N = 5\nif N % 2 == 0:\n    answer = 0\n    N //= 2\n    for i in range(100):\n        answer += N // 5\n        N //= 5\n    print(answer)\nelse:\n    print('0')", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "4211": {"id": 4211, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh = 0\nm = m2 - m1\nif m < 0:\n    m += 60\n    h -= 1\nh = h2 - h1 + h\nprint((h * 60) + m - k)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "10661": {"id": 10661, "code": "A = 100;B = 50;K = 4\nm = min(A, B)\nans = []\nfor i in range(1, m+1):\n    if A%i==0 and B%i==0:\n        ans.append(i)\nprint(sorted(ans, reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "831": {"id": 831, "code": "k = 2\nnum=0\nfor i in range(k+1):\n    num=(num*10+7)%k\n    if num==0:\n        print(i+1)\n        break\nif num:\n    print(\"-1\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3335": {"id": 3335, "code": "A = 20;B = 15\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", "!", ">", ">"]}, "6712": {"id": 6712, "code": "H = 20;N = 3\nA = [4, 5, 6]\nans = \"No\"\nsum_ = sum(A)\nif H <= sum_:\n  ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "18064": {"id": 18064, "code": "s = \"1905\"\nfirst = int(s[:2])\nsecond = int(s[2:])\nmonth = [False,False]\nif(1 <= first and first <= 12):\n    month[0] = True\nif(1 <= second and second <= 12):\n    month[1] = True\nif(month[0] & month[1]):\n    print('AMBIGUOUS')\nelif(month[0]):\n    print('MMYY')\nelif(month[1]):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "8896": {"id": 8896, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    s1 = sum(A1[:i+1])\n    s2 = sum(A2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17832": {"id": 17832, "code": "s = \"1905\"\nF, T = False, True\nans = {(F, F): 'NA', (F, T): 'YYMM', (T, F): 'MMYY', (T, T): 'AMBIGUOUS'}\nprint(ans[1 <= int(s[:2]) <= 12, 1 <= int(s[2:]) <= 12])", "coverage": [">", ">", ">", ">"]}, "8408": {"id": 8408, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans=[0]*N\ni=0\nwhile i<N:\n    ans[i]+=sum(A1[:i+1])\n    ans[i]+=sum(A2[i:])\n    i+=1\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17134": {"id": 17134, "code": "a = \"D\";b = \"H\"\nif a == 'H' and b == 'H':\n    result = 'H'\nif a == 'D' and b == 'H':\n    result = 'D'\nif a == 'D' and b == 'D':\n    result = 'H'\nif a == 'H' and b == 'D':\n    result = 'D'\nprint(result)", "coverage": [">", ">", "!", ">", ">", ">", "!", ">", "!", ">"]}, "8796": {"id": 8796, "code": "n = 7\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13964": {"id": 13964, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N <= 2:\n    print(1)\n    exit()\nd = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n        d.append(1)\n    elif A[i+1] - A[i] < 0:\n        d.append(-1)\nflag = [True]*len(d)\nans = 1\nfor i in range(len(d)-1):\n    if flag[i]:\n        if d[i] == -d[i+1]:\n            ans += 1\n            flag[i+1] = False\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9716": {"id": 9716, "code": "from itertools import accumulate\nN = 3\nS = \"())\"\nm = -min(min(accumulate(1 if c == '(' else -1 for c in S)),0)\ns = sum(1 if c == '(' else -1 for c in S)\nprint('('*m+S+')'*(s+m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "4910": {"id": 4910, "code": "s = \"smiles\"\nls= list(s)\nprint(ls[0]+str(len(s)-2)+ls[-1])", "coverage": [">", ">", ">"]}, "16896": {"id": 16896, "code": "a = \"H\";b = \"H\"\nx= a==\"H\"\ny= b==\"H\"\nif x^y:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13839": {"id": 13839, "code": "n = 7\na_li = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n < 3:\n    print(1)\n    exit()\nans = 1\nflag = \"flat\"\nfor i in range(1,n):\n    if a_li[i-1] > a_li[i]:\n        if flag == \"up\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"down\"\n    elif a_li[i-1] < a_li[i]:\n        if flag == \"down\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"up\"\n    else:\n        if flag == \"flat\":\n            flag = \"flat\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "15821": {"id": 15821, "code": "a = 64145;b = 123;c = 456\nm = a % (b+c)\nans = a // (b+c)\nif m >= c:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17422": {"id": 17422, "code": "a = \"0112\"\nb = int(a[:2])\nc = int(a[2:])\nif 0< b < 13:\n    a_month_flag = 1\n    a_year_flag = 1\nelif b == 0:\n    a_month_flag = 0\n    a_year_flag = 0\nelse:\n    a_month_flag = 0\n    a_year_flag = 1\nif 0< c < 13:\n    b_month_flag = 1\n    b_year_flag = 1\nelif c == 0:\n    b_month_flag = 0\n    b_year_flag = 0\nelse:\n    b_month_flag = 0\n    b_year_flag = 1\nif a_month_flag ==1 and b_month_flag==1:\n    print(\"AMBIGUOUS\")\nelif a_month_flag == 1 and b_month_flag == 0:\n    print(\"MMYY\")\nelif a_month_flag == 0 and b_month_flag ==1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10277": {"id": 10277, "code": "n = 3\nN = \"())\"\nL = 0\nR = 0\nnum = 0\nfor c in N:\n    if c == '(':\n        num += 1\n    else:\n        if num:\n            num -= 1\n        else:\n            L += 1\nR = num\nprint('('*L+N+')'*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "12179": {"id": 12179, "code": "L = [11, 16]\nK = [11, 17]\nif L[0]==K[0]:\n\tprint(0)\nelse:\n\tprint(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "4890": {"id": 4890, "code": "s = \"xyz\"\nans=s[0]\nans+=str(len(s)-2)\nans+=s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "1967": {"id": 1967, "code": "N = 10;A = 7;B = 5\nprint(min(A,B),max(A+B-N,0))", "coverage": [">", ">"]}, "11188": {"id": 11188, "code": "s = \"akasaka\"\nn=len(s)\nm=(n-1)//2\nt=s[:m]\nfor i in range(m):\n  if s[i]!=s[-i-1]:\n    print('No')\n    exit()\nif m%2==1: l=(m-1)//2\nelse: l=m//2\nfor i in range(l):\n  if t[i]!=t[-i-1]:\n    print('No')\n    exit()\nprint('Yes')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", "!", "!", ">"]}, "13689": {"id": 13689, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndifh = h2 - h1\ndifm = m2 - m1\nt = 60 * difh + difm\nprint(max(0, t - k))", "coverage": [">", ">", ">", ">", ">"]}, "15438": {"id": 15438, "code": "x = 100000;y = 1;z = 1\nprint (-(-((x-z)//(y+z))))", "coverage": [">", ">"]}, "2756": {"id": 2756, "code": "a = \"1479\"\nprint(\"YES\" if a==\"1479\" else \"NO\")", "coverage": [">", ">"]}, "18930": {"id": 18930, "code": "N = 5\nk, l = divmod(N, 2)\nif l == 1:\n    print(0)\nelse:\n    cnt = 0\n    while k > 1:\n        cnt += k // 5\n        k //= 5\n    print(cnt)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "15883": {"id": 15883, "code": "x = 13;y = 3;z = 1\nr, q = divmod(x, y + z)\nif q >= z:\n    print(r)\nelse:\n    print(r - 1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "14682": {"id": 14682, "code": "N = 3;P = 0\nA = [1, 1, 1]\neven=0\nfor i in range(N):\n    if A[i]%2==0:\n        even+=1\nif even==N:\n    if P==0:\n        ans=2**N\n    else:\n        ans=0\nelse:\n    ans=2**(N-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">", ">"]}, "9574": {"id": 9574, "code": "s = \"2017/01/07\"\nprint(str(int(s[:4]) + 1) +  s[4:])", "coverage": [">", ">"]}, "2530": {"id": 2530, "code": "n1 = 1;n2 = 7;n3 = 9;n4 = 4\nif {n1, n2, n3, n4} == {1, 9, 7, 4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "17606": {"id": 17606, "code": "S = \"1700\"\ns1=int(S[0:2])\ns2=int(S[2:])\nif 1<=s1<=12 and 1<=s2<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=s2<=12:\n  print(\"YYMM\")\nelif 1<=s1<=12:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18924": {"id": 18924, "code": "n = 12\nif n%2==1:\n    print(0)\nelse:\n    ans=0\n    i=10\n    while (n//i !=0):\n        ans+=(n//i)\n        i*=5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18": {"id": 18, "code": "s = \"codefestival\"\nk = 100\nans = \"\"\nfor i in s:\n    if k >= (123 - ord(i)) % 26:\n        k -= (123 - ord(i)) % 26\n        ans += \"a\"\n    else:\n        ans += i\nprint(ans[:-1] + chr((ord(ans[-1]) - 97 + k) % 26 + 97))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "7342": {"id": 7342, "code": "n = 20;m = 3\nli = [4, 5, 6]\nif n>sum(li):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3686": {"id": 3686, "code": "a = 20;b = 30\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "5441": {"id": 5441, "code": "n = 2\nprint(n//2 + (n % 2)*1)", "coverage": [">", ">"]}, "4328": {"id": 4328, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif m1 <= m2:\n    h = h2 - h1\n    m = m2 - m1\nelse:\n    h = h2 - h1 - 1\n    m = m2 - m1 + 60\nm += 60 * h\nprint(m - k)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "18950": {"id": 18950, "code": "n = 5\nif n%2==1:\n    ans=0\nelse:\n    fs=[2*5**i for i in range(1,41)]\n    ans=0\n    for i in range(40):\n        ans+=n//fs[i]\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "18027": {"id": 18027, "code": "s = \"1905\"\nfor c in s:\n    if not '0'<=c<='9':\n        print('NA')\n        exit(0)\na = int(s[:2])\nb = int(s[2:])\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12:\n    print('MMYY')\nelif 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "3579": {"id": 3579, "code": "a = 20;b = 30\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "10848": {"id": 10848, "code": "s = \"akasaka\"\nt = s[::-1]\nn = len(s)\na = s[:(n - 1) // 2]\nb = t[:(n - 1) // 2]\nif s == t and a == a[::-1] and b == b[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4946": {"id": 4946, "code": "s = \"smiles\"\nn = len(s) - 2\nans = s[0] + str(n) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11272": {"id": 11272, "code": "S = \"SAT\"\nDate = [\"SUN\", 'MON', \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"][::-1]\nprint(Date.index(S)+1)", "coverage": [">", ">", ">"]}, "18823": {"id": 18823, "code": "h = 3\nw = 7\nn = 10\nif w > h:\n    h, w = w, h\nprint((n+h-1)//h)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13090": {"id": 13090, "code": "if \"5\" in \"357\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "17829": {"id": 17829, "code": "s = ['1', '9', '0', '5']\ns = [int(i+j) for (i,j) in zip(s[::2],s[1::2])]\nif 1 <= s[0] <= 12:\n  if 1 <= s[1] <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= s[1] <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "5794": {"id": 5794, "code": "N = 5\nr = (N +2-1)//2\nprint(r)", "coverage": [">", ">", ">"]}, "19433": {"id": 19433, "code": "N = 3\nprint(N*2) if N % 2 == 1 else print(N)", "coverage": [">", ">"]}, "1332": {"id": 1332, "code": "n = 750\na = n // 100\nb = a * 100 + a * 10 + a\nif(n > b):\n  ans = (a + 1) * 100 + (a + 1) * 10 + (a + 1)\nelse:\n  ans = a * 100 + a * 10 + a\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "13890": {"id": 13890, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzo=0 ; mi=0 ;ans=1\nfor i in range(n-1):\n    if zo==mi==0:\n        if A[i]==A[i+1]:\n            continue\n        elif A[i]>A[i+1]:\n            mi=1; continue\n        else:\n            zo=1;continue\n    if zo:\n        if A[i+1]<A[i]:\n            zo=0; ans+=1\n    if mi and A[i]<A[i+1]:\n        mi=0 ; ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17770": {"id": 17770, "code": "s = \"1700\"\na, b = int(s[:2]), int(s[2:])\nr = [\"AMBIGUOUS\", \"YYMM\", \"MMYY\", \"NA\"]\nprint(r[(0 if (0 < b < 13) else 2) + (0 if (0 < a < 13) else 1)])", "coverage": [">", ">", ">", ">"]}, "18384": {"id": 18384, "code": "H = 14\nW = 12\nN = 112\nlonger = H\nif longer < W:\n    longer = W\nprint(((N-1)//longer)+1)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "13049": {"id": 13049, "code": "n = \"6\"\nprint(\"YES\" if n in \"753\" else \"NO\")", "coverage": [">", ">"]}, "1509": {"id": 1509, "code": "n = 111\nfor i in range(120):\n    dum = str(n)\n    set_dum = set(dum)\n    if 1 == len(set_dum):\n        break\n    n += 1\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "14476": {"id": 14476, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nif n == 1:\n  print (1)\n  exit()\nc = 0\nfor i in range(n-1):\n  if c == 2 and a[i+1] < a[i]:\n    cnt += 1\n    c = -1\n  elif c == 1 and a[i+1] > a[i]:\n    cnt += 1\n    c = -1\n  else:\n    if c < 1:\n      if a[i+1] > a[i]:\n        c = 2\n      elif a[i+1] == a[i]:\n        c = 0\n      else:\n        c = 1\nprint (cnt+1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "1339": {"id": 1339, "code": "N = 111\ncount=0\nfor i in range(1,10):\n    if (N-1)//int(str(i)*3)>=1:\n        count=i\nprint(str(count+1)*3)", "coverage": [">", ">", ">", ">", "!", ">"]}, "18248": {"id": 18248, "code": "import math\nh = 3\nw = 7\nn = 10\na=max(h,w)\nprint(math.ceil(n/a))", "coverage": [">", ">", ">", ">", ">", ">"]}, "6409": {"id": 6409, "code": "from bisect import bisect_left, bisect_right\nn = 6\nlst_a = [2, 3, 6, 14, 53, 159]\nlst_b = [6, 9, 58, 79, 84, 323]\nlst_c = [2, 50, 79, 288, 383, 2643]\nlgth = len(lst_c)\nans = 0\nfor i in lst_b:\n    ans += bisect_left(lst_a, i) * (lgth - bisect_right(lst_c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5558": {"id": 5558, "code": "N = 2\nprint(int((N/2))+(N%2))", "coverage": [">", ">"]}, "12396": {"id": 12396, "code": "S = \"atcoder\"\nN=len(S)\nif S!=S[::-1]:\n    print('No')\nelse:\n    S1=S[0:(N-1)//2]\n    S2=S[(N+1)//2:N]\n    if S1==S1[::-1] and S2==S2[::-1]:\n        print('Yes')\n    else:\n        print('No')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "15570": {"id": 15570, "code": "x = 64146;y = 123;z = 456\nX = x - 2*z\nn = X//(y+z)\nif X - (y+z)*n >= y:\n  print(n+1)\nelse:\n  print(n)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13725": {"id": 13725, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nt1=60*H1 + M1\nt2=60*H2 + M2\nt=t2 - K\nans=t-t1\nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13284": {"id": 13284, "code": "S = \"haiku,atcoder,tasks\"\nres1 = S[0:5]\nres2 = S[6:13]\nres3 = S[14:19]\nprint(res1,res2,res3)", "coverage": [">", ">", ">", ">", ">"]}, "10805": {"id": 10805, "code": "s = \"akasaka\"\nprint(\"Yes\" if s == s[::-1] and s[:len(s)//2] == s[len(s)//2-1::-1] else \"No\")", "coverage": [">", ">"]}, "13985": {"id": 13985, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc = 1; w = 0\nfor i in range(N-1):\n    if w == 0:\n        if A[i] < A[i+1]:\n            w = 1\n        elif A[i] > A[i+1]:\n            w = -1\n    elif (w > 0 and A[i] > A[i+1]) or (w < 0 and A[i] < A[i+1]):\n         w = 0\n         c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8618": {"id": 8618, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = []\nfor i in range(n+1):\n    if i == 0:\n        ans.append(sum(a1))\n    elif 1<=i<=n:\n        ans.append(sum(a1[:i]) + sum(a2[i-1:]))\n    elif i==n:\n        ans.append(sum(a2))\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6003": {"id": 6003, "code": "N = 100\nans = N//2 + (1 if N % 2 == 1 else 0)\nprint(ans)", "coverage": [">", ">", ">"]}, "14042": {"id": 14042, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = [0 for _ in range(n-1)]\nfor i in range(n-1):\n    d[i] = a[i+1]-a[i]\nans = 1 \nflg = [False, False]\nfor i in range(n-1):\n    if d[i] > 0:\n        flg[0] = True\n    elif d[i] < 0:\n        flg[1] = True\n    if flg[0] == flg[1] == True:\n        ans += 1\n        flg = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8712": {"id": 8712, "code": "N = 1\nA1 = [2]\nA2 = [3]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "2463": {"id": 2463, "code": "print('YES' if sorted(list(map(int, \"1 9 7 4\".split())))\n      == [1, 4, 7, 9] else 'NO')", "coverage": [">", ">"]}, "16715": {"id": 16715, "code": "a = \"D\";b = \"D\"\nif a==\"H\" and b==\"H\":\n  print(\"H\")\nelif a==\"D\" and b==\"D\":\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "16656": {"id": 16656, "code": "a = \"H\";b = \"H\"\nS = a+b\nif (S == 'DD') or (S == 'HH'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", ">", "!", "!"]}, "6229": {"id": 6229, "code": "import bisect\nimport sys\nn = 6\nup = [2, 3, 6, 14, 53, 159]\nmid = [6, 9, 58, 79, 84, 323]\nlow = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(len(mid)):\n    pre = bisect.bisect_left(up, mid[i])\n    over = len(low) - bisect.bisect(low, mid[i])\n    ans += pre * over\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16387": {"id": 16387, "code": "n = 2\nA = [100, 0]\nA.sort(reverse=True)\nans1 = max(A)\nif A[1] == 0:\n    print(ans1, 0)\nfor i in range(n):\n    if i == 0:\n        pass\n    elif i == 1:\n        ans2 = A[i]\n        now_div = abs(ans1/2 - ans2)\n    else:\n        chk = A[i]\n        chk_div = abs(ans1/2 - chk)\n        if chk_div > now_div:\n            print(ans1, ans2)\n            exit()\n        if abs(ans1/2 - chk) < abs(ans1/2 - ans2):\n            ans2 = chk\n            now_div = abs(ans1/2 - ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "4995": {"id": 4995, "code": "n = \"xyz\"\nprint(n[0] + str(len(n)-2) + n[-1])", "coverage": [">", ">"]}, "2153": {"id": 2153, "code": "n = 10;a = 7;b = 5\nmin_num = min(a,b)\nmax_num = max(a+b-n,0)\nprint(min_num, max_num)", "coverage": [">", ">", ">", ">"]}, "14116": {"id": 14116, "code": "inc = False\ndec = False\nval = 0\nans = 1\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nfor i in range(1, n):\n    if inc:\n        if a[i-1] > a[i]:\n            ans += 1\n            inc = False\n    elif dec:\n        if a[i-1] < a[i]:\n            ans+=1\n            dec =False\n    else:\n        if a[i-1] < a[i]:\n            inc = True\n        elif a[i-1] > a[i]:\n            dec = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "17630": {"id": 17630, "code": "s = ['1', '7', '0', '0']\na = int(\"\".join(s[:2]))\nb = int(\"\".join(s[2:]))\nc = 0\nd = 0\nif a and a <= 12:\n    c = 1\nif b and b <= 12:\n    d = 1\nif c and d:\n    print(\"AMBIGUOUS\")\nelif c:\n    print(\"MMYY\")\nelif d:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18328": {"id": 18328, "code": "h = 2\nw = 100\nn = 200\nprint(n//max(h,w) if n%max(h,w)==0 else n//max(h,w)+1)", "coverage": [">", ">", ">", ">"]}, "2569": {"id": 2569, "code": "n = map(int, \"1 9 7 4\".split())\nif [1, 4, 7, 9] == sorted(n):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "5023": {"id": 5023, "code": "s = \"internationalization\"\nN = len(s)\nx = s[0]+str(N-2)+s[-1]\nprint(x)", "coverage": [">", ">", ">", ">"]}, "19140": {"id": 19140, "code": "n = 5\nif n%2==1:\n    print(0)\nelse:\n    cnt=0\n    n //= 2\n    while n:\n        n //= 5\n        cnt += n\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "9388": {"id": 9388, "code": "s = \"2017/01/07\"\ns.replace(\"2017\", \"2018\")\nprint(s.replace(\"2017\", \"2018\"))", "coverage": [">", ">", ">"]}, "10391": {"id": 10391, "code": "A = 1;B = 1;K = 1\nif A > B:\n    num = A\n    A = B\n    B = num\nflag = 0\ncount = 0\nel = []\nfor i in range(1,A+1):\n    if A % i == 0 and B % i == 0:\n        el.append(i)\nprint(el[-K])", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "9123": {"id": 9123, "code": "s = \"2017/01/31\"\na = int(s[0])*1000+int(s[1])*100+int(s[2])*10+int(s[3])+1\nb = s[4]+s[5]+s[6]+s[7]+s[8]+s[9] \nprint(str(a)+b)", "coverage": [">", ">", ">", ">"]}, "3310": {"id": 3310, "code": "a = 12;b = 4\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "12408": {"id": 12408, "code": "S = \"atcoder\"\nN=len(S)\nif S==S[::-1] and S[0:(N-1)//2]==S[(N-1)//2-1::-1] and S[(N+3)//2-1:]==S[-1:(N+3)//2-2:-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "5814": {"id": 5814, "code": "n = 100\nx = int(n/2)\nif n%2 == 1:\n    ans = x + 1\nelse:\n    ans = x\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1825": {"id": 1825, "code": "N = 100;A = 100;B = 100\nprint(str(min(A,B))+' '+str(max(A+B-N,0)))", "coverage": [">", ">"]}, "6876": {"id": 6876, "code": "H = 20;N = 3\nlist=[]\nfor i in map(int,\"4 5 6\".split()):\n    list.append(i)\nif H - sum(list) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11300": {"id": 11300, "code": "l = ['_', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\ns = \"SAT\"\nprint(l.index(s))", "coverage": [">", ">", ">"]}, "14021": {"id": 14021, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nsw='n'\nans=0\nfor i in range(1,n):\n    if sw=='u':\n        if l[i-1]-l[i]<=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    elif sw=='d':\n        if l[i-1]-l[i]>=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    else:\n        if l[i-1]-l[i]<0:\n            sw='u'\n        elif l[i-1]-l[i]>0:\n            sw='d'\n        else:\n            continue\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", ">"]}, "6421": {"id": 6421, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in range(n):\n    tmp = 1\n    x = bisect.bisect_left(a, b[i])\n    y = bisect.bisect_right(c, b[i])\n    ans += x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17072": {"id": 17072, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "17723": {"id": 17723, "code": "s = ['1', '7', '0', '0']\ns1=\"\".join(s[:2])\ns2=\"\".join(s[2:])\nif 0<int(s1)<=12 and 0<int(s2)<=12:\n    print(\"AMBIGUOUS\")\nelif 0<int(s1)<=12 and (int(s2)>12 or int(s2)==0):\n    print(\"MMYY\")\nelif 0<int(s2)<=12 and (int(s1)>12 or int(s1)==0):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "181": {"id": 181, "code": "s = \"xyz\"\nk = 4\nans=\"\"\nfor i in s[:-1]:\n    if i==\"a\":\n        ans+=i\n        continue\n    if k>=123-ord(i):\n        k-=123-ord(i)\n        ans+=\"a\"\n    else:\n        ans+=i\ni=s[-1]\nans+=chr((ord(i)+k-97)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "11629": {"id": 11629, "code": "S = \"SUN\"\nW = ['', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nprint(W.index(S))", "coverage": [">", ">", ">"]}, "1310": {"id": 1310, "code": "n = \"750\"\nans_1 = 0\nans_2 = 0\nx = int(n[0])\nfor i in range(len(n)):\n    ans_1 += x * 10**i\n    ans_2 += (x+1)*10**i\nif ans_1 >= int(n):\n    print(ans_1)\nelse:\n    print(ans_2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "13816": {"id": 13816, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\ncount=0\ni=0\nwhile i < n:\n    j=i\n    while j < n-1 and A[j]<=A[j+1]:\n        j += 1\n    k=i\n    while k < n-1 and A[k]>=A[k+1]:\n        k += 1\n    count += 1\n    i = max(j,k)+1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9580": {"id": 9580, "code": "s = \"2017/01/07\"\nprint('2018'+s[4:10])", "coverage": [">", ">"]}, "14211": {"id": 14211, "code": "if __name__ == '__main__':\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 1\n    flag = \"Init\"\n    for i in range(1, n):\n        if flag == \"Init\":\n            if a[i - 1] == a[i]:\n                pass\n            elif a[i - 1] > a[i]:\n                flag = \"-\"\n            else:\n                flag = \"+\"\n        elif flag == \"-\":\n            if a[i - 1] < a[i]:\n                ans += 1\n                flag = \"Init\"\n        else:\n            if a[i - 1] > a[i]:\n                ans += 1\n                flag = \"Init\"\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "18660": {"id": 18660, "code": "h = 14\nw = 12\nn = 112\nans = 0\nsum = 0\nwhile(sum < n):\n  if h >= w :\n    sum += h\n    ans += 1\n    w -= 1\n  else :\n    sum += w\n    ans += 1\n    h -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "18100": {"id": 18100, "code": "s = \"1700\"\na=int(s[:2])\nb=int(s[2:])\nac=0\nbc=0\nif 0<a and a<13:\n  ac=1\nif 0<b and b<13:\n  bc=1\nif ac and bc:\n  print(\"AMBIGUOUS\")\nelif ac:\n  print(\"MMYY\")\nelif bc:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "15276": {"id": 15276, "code": "X = 12;Y = 3;Z = 1\nX -= Z\npeople = 0\nwhile X >= 0:\n    X -= (Y + Z)\n    if X >= 0:\n        people += 1\nprint(people)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3699": {"id": 3699, "code": "a = 12;b = 4\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "5631": {"id": 5631, "code": "n = 100\nprint(-(-n//2))", "coverage": [">", ">"]}, "9706": {"id": 9706, "code": "N = 8\nS = \"))))((((\"\na = 0\nb = 0\nfor i in S:\n    if i == \"(\":\n        a += 1\n    else:\n        if a <= 0:\n            b += 1\n        else:\n            a -= 1\nprint(\"(\"*b+S+\")\"*a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "1462": {"id": 1462, "code": "N = 111\nif N%111==0:\n    print(N)\nelse:   \n    A=(N//111+1)*111\n    print(A)", "coverage": [">", ">", ">", "!", "!", "!"]}, "8196": {"id": 8196, "code": "from math import ceil\nn = 8;k = 3\na_list = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(ceil((n - 1) / (k - 1)))", "coverage": [">", ">", ">", ">"]}, "2825": {"id": 2825, "code": "S = \"35753\"\nl = len(S) - 2\nmin_diff = float(\"inf\")\nfor i in range(0, l):\n    num = int(S[i:i+3])\n    diff = abs(753 - num)\n    if min_diff > diff:\n        min_diff = diff\nprint(min_diff)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12164": {"id": 12164, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "8329": {"id": 8329, "code": "N = 4\ncandies_i = [1, 1, 1, 1]\ncandies_j = [1, 1, 1, 1]\nl = []\nfor i in range(N):\n    total_li = sum(candies_i[:i+1])\n    total_lj = sum(candies_j[i:])\n    total = total_li + total_lj\n    l.append(total)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4223": {"id": 4223, "code": "h = 10;m = 0;H = 12;M = 0;K = 120\npre=60*h+m\npost=60*H+M\nprint(post-pre-K)", "coverage": [">", ">", ">", ">"]}, "11316": {"id": 11316, "code": "S = \"SAT\"\nresult=7\nl=['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in l:\n    if i != S:\n        result=result-1\n    else:\n        break\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "9137": {"id": 9137, "code": "n = ['2017', '01', '31']\nif n[0] == \"2017\":\n    n[0] = \"2018\"\nprint(n[0]+\"/\"+n[1]+\"/\"+n[2])", "coverage": [">", ">", ">", ">"]}, "7439": {"id": 7439, "code": "H = 10;N = 3\nAs = [4, 5, 6]\nsumA = sum(As)\nif sumA >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7366": {"id": 7366, "code": "h = 20;n = 3\narr = [4, 5, 6]\nprint(\"No\" if h>sum(arr) else \"Yes\")", "coverage": [">", ">", ">"]}, "4611": {"id": 4611, "code": "a = \"x\";b = ['y'];c = \"z\"\nprint(a,len(b),c,sep=\"\")", "coverage": [">", ">"]}, "5998": {"id": 5998, "code": "from sys import stdin\nN = 5\nif N%2==1:\n    print(N//2+1)\nelse:\n    print(N//2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "7511": {"id": 7511, "code": "H = 210;N = 5\nattack = [31, 41, 59, 26, 53]\ntotal = sum(attack)\nif H - total <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3190": {"id": 3190, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s) - 2):\n    diff = abs(int(s[i:i+3]) - 753)\n    if diff < ans:\n        ans = diff\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3910": {"id": 3910, "code": "x = 13;y = 3;z = 1\nans = 2*z+y\nfor i in range(2, 1000002): \n    ans += y+z\n    if(ans >= x):\n        print(i-1 if ans > x else i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7916": {"id": 7916, "code": "n = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = (n-1) // (k-1)\nif (n-1) % (k-1) > 0: ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "9379": {"id": 9379, "code": "S = \"2017/01/31\"\nSS=S.replace('2017','2018')\nprint(SS)", "coverage": [">", ">", ">"]}, "7": {"id": 7, "code": "S = ['a']\nk = 25\nAns=[0]*len(S)\nc=0\nfor i in range(len(S)):\n  if (26-(ord(S[i])-97))%26<=k:\n    Ans[i]=\"a\"\n    k=k-(26-(ord(S[i])-97))%26\n    c=c+(26-(ord(S[i])-97))%26\n  else:\n    Ans[i]=S[i]\n  if i==len(S)-1:\n    c=ord(Ans[i])+k%26\n    if ord(Ans[i])+k%26>=123:\n      c=c-26\n    Ans[i]=chr(c)\nprint(\"\".join(Ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">"]}, "1478": {"id": 1478, "code": "import bisect\nN = 112\nA = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nprint(A[bisect.bisect_left(A, N)])", "coverage": [">", ">", ">", ">"]}, "472": {"id": 472, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\ns = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n    num = (ord('z') - ord(s[i]) + 1) % 26\n    if num <= k:\n        k -= num\n        s[i] = 'a'\ns[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1429": {"id": 1429, "code": "a = 750\nb=a%100\nc=a//100\nif b<=c*11:\n  print(c*111)\nelse:\n  print((c+1)*111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "1962": {"id": 1962, "code": "N = 100;A = 100;B = 100\nprint(min(A, B), max(0, A+B-N))", "coverage": [">", ">"]}, "17289": {"id": 17289, "code": "s = \"H H\"\nd = {'H H': 'H', 'H D': 'D', 'D H': 'D', 'D D': 'H'}\nprint(d[s])", "coverage": [">", ">", ">"]}, "18090": {"id": 18090, "code": "s = ['0', '1', '1', '2']\nif s[0]=='0':\n  t=int(s[1])\nelse:\n  t=int(''.join(s[:2]))\nif s[2]=='0':\n  u=int(s[3])\nelse:\n  u=int(''.join(s[2:]))\nif t>=1 and t<=12:\n  if u>=1 and u<=12:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if u>=1 and u<=12:\n    print('YYMM')\n  else:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "15074": {"id": 15074, "code": "n = 3;p = 0\na = [1, 1, 1]\nodd = 0\nfor i in a:\n    if i%2:\n        odd += 1\neven = n-odd\nans = 0\nfor i in range(0,odd+2,2):\n    if i+p > odd:\n        break\n    for j in range(0,even+1):\n        if j > even:\n            break\n        a = 1\n        for k in range(i+p):\n            a *= (odd-k)\n            a /= k+1\n        b = 1\n        for k in range(j):\n            b *= (even-k)\n            b /= k+1\n        ans += a*b\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5805": {"id": 5805, "code": "n = 100\nif n % 2 == 0:\n    print(int(n/2))\nelse:\n    print(n//2 + 1)", "coverage": [">", ">", ">", "!", "!"]}, "7697": {"id": 7697, "code": "from math import ceil\nn = 4;k = 3\nA = [2, 3, 1, 4]\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "13602": {"id": 13602, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\ns=a+\" \"+b+\" \"+c\nprint(s)", "coverage": [">", ">", ">"]}, "1644": {"id": 1644, "code": "N = 10;A = 7;B = 5\nans1 = min(A, B)\nans2 = max(A + B - N, 0)\nprint(\"{} {}\".format(ans1, ans2))", "coverage": [">", ">", ">", ">"]}, "12533": {"id": 12533, "code": "import math\na = 100;b = 50;k = 4\ngcd = math.gcd(a, b)\ncount = 0\nfor i in range(gcd, 0, -1):\n    if gcd % i == 0:\n        count += 1\n        if count == k:\n            print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4043": {"id": 4043, "code": "H = ['10', '0', '12', '0', '120']\nsdy =0\nif int(H[2]) >= int(H[0]):\n  sdy = int(H[2])*60 +int(H[3])-int(H[0])*60 -int(H[1]) - int(H[4])\nelse:\n  H[2] = (int(H[2])+24)\n  sdy = int(H[2])*60 +int(H[3])-int(H[0])*60 -int(H[1]) - int(H[4])\nif int(sdy) < 0:\n  sdy = 0\nprint(sdy)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "26": {"id": 26, "code": "s = \"a\"\nK = 25\nS = [ord(i)-97 for i in s]\nlast = K\nfor i in range(len(S)):\n    if S[i] != 0:\n        if 26 - S[i] <= last:\n            last -= 26 - S[i]\n            S[i] = 0\nif last > 0:\n    S[-1] += last\n    S[-1] %= 26\nS = [chr(i+97) for i in S]\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "16106": {"id": 16106, "code": "a = 20;b = 30\nresult = a - (b * 2)\nif result <= 0:\n    result = 0\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "5074": {"id": 5074, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\ns = \"internationalization\"\nn = len(s)-2\nans = s[0] + str(n) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10979": {"id": 10979, "code": "import sys\ninput = sys.stdin.readline\ns = \"akasak\";n = 6\nprint('Yes' if s == s[::-1] and s[:(n-1)//2] == s[:(n-1)//2][::-1] and s[(n+1)//2:] == s[(n+1)//2:][::-1] else 'No')", "coverage": [">", ">", ">", ">"]}, "2246": {"id": 2246, "code": "N = 10;A = 7;B = 5\nMAX = min(A, B)\nMIN = max(0,A+B-N)\nprint(MAX,MIN)", "coverage": [">", ">", ">", ">"]}, "10799": {"id": 10799, "code": "S = \"akasaka\"\ni=0\nkot=[]\nfor a in S:\n    kot.append(a)\ntok=list(reversed(kot))\nfor a in range(len(kot)):\n    if kot[a]==tok[a]:\n        i=0\n    else:\n        print(\"No\")\n        i=1\n        break\nif i==0:\n    for a in range(int((len(kot)-1)/2)):\n        if kot[a]==tok[int((len(kot)-1)/2)-a-1]:\n            i=0\n        else:\n            print(\"No\")\n            i=1\n            break\nif i==0:\n        for a in range(int((len(kot)-1)/2)):\n            if kot[int((len(kot)+3)/2)+a-1]==tok[-a-1]:\n                i=0\n            else:\n                print(\"No\")\n                i=1\n                break\nif i==0:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "16091": {"id": 16091, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nA = 20;B = 30\nprint(max(A-2*B, 0))", "coverage": [">", ">", ">", ">", ">"]}, "14665": {"id": 14665, "code": "n = 2;p = 0\na = [1, 3]\ncount = 0\nfor i in a:\n    if i%2 == 0:\n        count += 1\nif count == n:\n    if p == 1:\n        print(0)\n    else:\n        print(2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">"]}, "215": {"id": 215, "code": "s = \"xyz\"\nK = 4\ns = list(s)\nfor i in range(len(s)):\n    if s[i] != 'a':\n        dist = ord('z') - ord(s[i]) + 1\n        if dist <= K:\n            K -= dist\n            s[i] = 'a'\ntemp = K % 26\ns[-1] = chr(ord(s[-1]) + temp)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9747": {"id": 9747, "code": "n = 8\ns = \"))))((((\"\ndata = [0, 0]  \ntemp = -1\nfor i in range(n):\n    temp += 1\n    tar = s[temp]\n    if (tar == '('):\n        data[0] += 1\n    else:\n        if (data[0] > data[1]):\n            data[0] -= 1\n        else:\n            s = '(' + s\n            temp += 1\nadd = ')' * data[0]\ns = s + add\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "9054": {"id": 9054, "code": "a = \"1\"\nb = \"2\"\nc = \"4\"\nd = \"8\"\ne = \"9\"\nk = \"15\"\nif int(e)-int(a)>int(k):\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "307": {"id": 307, "code": "s = \"xyz\"\nk = 4\nL = []\nfor i in range(len(s)):\n    L.append((ord(\"z\")-ord(s[i])+1))\nans = \"\"\ni = 0\nwhile i < len(s):\n    if s[i] == \"a\":\n        ans +=\"a\"\n        i +=1\n    elif k-L[i] >= 0:\n        ans +=\"a\"\n        k -=L[i]\n        i +=1\n    else:\n        ans +=s[i]\n        i +=1\nk = k%26\nans = ans[:-1] + chr(ord(ans[-1]) + k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "4521": {"id": 4521, "code": "import sys\ns = \"xyz\"\nif len(s) < 3 or len(s) > 100:\n    sys.exit()\nprint(s[0:1]+str((len(s)-2))+s[-1])", "coverage": [">", ">", ">", "!", ">"]}, "11989": {"id": 11989, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nprint(1 if d2 == '1' else 0)", "coverage": [">", ">", ">"]}, "19305": {"id": 19305, "code": "n = 999999999\nprint(n*2 if n&1 else n)", "coverage": [">", ">"]}, "5489": {"id": 5489, "code": "import math\npages = 2\nprint(math.ceil(pages/2))", "coverage": [">", ">", ">"]}, "6919": {"id": 6919, "code": "import math\nH = 10;N = 3\nprint(\"Yes\" if sum(list(map(int,\"4 5 6\".split())))>=H else \"No\")", "coverage": [">", ">", ">"]}, "13524": {"id": 13524, "code": "d = \"haiku,atcoder,tasks\"\nprint( d[:5] + \" \" + d[6:13] + \" \" +d[14:] )", "coverage": [">", ">"]}, "7598": {"id": 7598, "code": "h = 20;n = 3\na = [4, 5, 6]\nprint(\"Yes\" if sum(a) >= h else \"No\")", "coverage": [">", ">", ">"]}, "10514": {"id": 10514, "code": "a = 1;b = 1;k = 1\nans = [i for i in range(min(a, b), 0, -1) if a%i==0 and b%i==0]\nprint(ans[k-1])", "coverage": [">", ">", ">"]}, "12491": {"id": 12491, "code": "a = 1;b = 1;c = 1\ni = 1\nd = []\nwhile True:\n  if a % i ==0 and b % i ==0:\n    d.append(i)\n  if i > max(a,b):\n    break\n  else:\n    i += 1\nprint(d[-c])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "9571": {"id": 9571, "code": "S = \"2017/01/31\"\nans = '2018' + S[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "6604": {"id": 6604, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nresult = 0\nfor b in B:\n    result += bisect.bisect_right(A, b - 1) * (N-bisect.bisect_left(C, b + 1))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8106": {"id": 8106, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif (N-K)%(K-1)==0:\n    ans = 1+(N-K)//(K-1)\nelse:\n    ans = 2+(N-K)//(K-1)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10487": {"id": 10487, "code": "a = 8;b = 12;k = 2\nl = [i for i in range(1, min(a, b) + 1) if not (a % i or b % i)]\nprint(l[-k])", "coverage": [">", ">", ">"]}, "5413": {"id": 5413, "code": "n = 5\nif n%2==0:print(n//2)\nelse:print(n//2+1)", "coverage": [">", ">", ">"]}, "5192": {"id": 5192, "code": "s = \"smiles\"\nl=len(s)-2\nt=s[0]+str(l)+s[l+1]\nprint(t)", "coverage": [">", ">", ">", ">"]}, "3719": {"id": 3719, "code": "A = 20;B = 30\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "1056": {"id": 1056, "code": "n = 750\nans = 999\nfor i in range(1,10):\n    if 111*i-n>=0:\n        ans = min(ans,111*i-n)\nprint(ans+n)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8157": {"id": 8157, "code": "N = 3;K = 3\nA = [1, 2, 3]\nt = A.index(1)\nans = 10 ** 7\nfor i in range(K):\n    pre = max(t + i, 0)\n    tail = max(N - 1 - t - i, 0)\n    unit = K - 1\n    pre_unit = -(-pre // unit)\n    tail_unit = -(-tail // unit)\n    ans = min(ans, pre_unit + tail_unit)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3308": {"id": 3308, "code": "a = 20;b = 15\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")", "coverage": [">", ">", "!", ">"]}, "14376": {"id": 14376, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncnt = 1\ninc = False\ndec = False\np = A.pop(0)\nfor Ai in A:\n    if (not inc) and (not dec):\n        if Ai < p:\n            dec = True\n        elif Ai > p:\n            inc = True\n    elif inc:\n        if Ai < p:\n            cnt += 1\n            inc = False\n    elif dec:\n        if Ai > p:\n            cnt += 1\n            dec = False\n    p = Ai\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "5935": {"id": 5935, "code": "N = 5\nr = (N + 1) / 2\nprint(int(r))", "coverage": [">", ">", ">"]}, "17089": {"id": 17089, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    print(b)\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "12139": {"id": 12139, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 != M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7699": {"id": 7699, "code": "from math import ceil\nn = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "10008": {"id": 10008, "code": "N = 8\nS = \"))))((((\"\nx, y, z=0, 0, 0\nfor i in range(N):\n  if S[i]=='(':\n    x+=1\n  else:\n    y+=1\n  z=min(z, x-y)\nprint('('*-z+S+')'*max(0, x-z-y))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13067": {"id": 13067, "code": "x = 6\nli753 = [7,5,3]\nif x in li753:\n    ans = \"YES\"\nelse:\n    ans = \"NO\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "9203": {"id": 9203, "code": "s = \"2017/01/31\"\nx = \"2018\" + s[4:]\nprint(x)", "coverage": [">", ">", ">"]}, "17417": {"id": 17417, "code": "s = \"1700\"\nyymm = 1 <= int(s[2:]) <= 12\nmmyy = 1 <= int(s[:2]) <= 12\nif yymm and mmyy:\n    print('AMBIGUOUS')\nelif yymm:\n    print('YYMM')\nelif mmyy:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6181": {"id": 6181, "code": "import bisect\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\ntotal = 0\nfor i in range(N):\n  total += bisect.bisect_left(a,b[i]) * (N - bisect.bisect_right(c,b[i]))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3776": {"id": 3776, "code": "x = 64146;y = 123;z = 456\none_length = y + z\nprint(int((x-z) / one_length))", "coverage": [">", ">", ">"]}, "2456": {"id": 2456, "code": "a = \"1\";b = \"2\";c = \"9\";d = \"1\"\ns = set()\ns.add(a)\ns.add(b)\ns.add(c)\ns.add(d)\nif s == {\"1\",\"9\",\"7\",\"4\"}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2755": {"id": 2755, "code": "a = \"0489\"\nif(a=='1479'):\n\tprint('YES')\nelse:\n\tprint('NO')", "coverage": [">", ">", "!", "!", ">"]}, "2876": {"id": 2876, "code": "S = \"35753\"\nans = 10**9\nfor i in range(len(S)):\n    s = int(S[i:i+3])\n    val = abs(753 - s)\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1923": {"id": 1923, "code": "n = 100;a = 100;b = 100\nprint(min(a, b), max((a + b) - n, 0))", "coverage": [">", ">"]}, "12890": {"id": 12890, "code": "sinchi = [7, 5, 3]\nano = 5\nif ano in sinchi:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "17836": {"id": 17836, "code": "S = \"0112\"\nx=int(S[:2])\ny=int(S[2:4])\nif 1<=x<=12:\n    if 1<=y<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=y<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "19129": {"id": 19129, "code": "n = 5\nif n & 1:\n    print(0)\nelse:\n    ans = 0\n    x = 10\n    while n >= x:\n        ans += n // x\n        x *= 5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "18012": {"id": 18012, "code": "a = \"1905\"\nn=int(a[0:2])\nm=int(a[2:4])\nif 0<n<=12 and 0<m<=12:\n    print('AMBIGUOUS')\nelif 0<n<=12:\n    print('MMYY')\nelif 0<m<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "3402": {"id": 3402, "code": "a = 20;b = 30\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", "!"]}, "6289": {"id": 6289, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nLC = len(C)\nans = 0\nfor b in B:\n    na = bisect.bisect_left(A, b)\n    nc = LC - bisect.bisect_right(C, b)\n    ans += na * nc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6563": {"id": 6563, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b)\n    c = bisect.bisect_right(C, b)\n    ans += a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14860": {"id": 14860, "code": "n = 2;p = 0\nA = [1, 1]\nA0=A.count(0)\nA1=A.count(1)\nif p==1 and A1==0:\n    print(0)\nelif p==0 and A1==0:\n    print(2**A0)\nelse:\n    print((2**A0)*(2**A1)//2)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "17126": {"id": 17126, "code": "a = \"D\";b = \"D\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n    print(\"H\")\nif (a == \"H\" and b == \"D\") or (a == \"D\" and b == \"H\"):\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!"]}, "1987": {"id": 1987, "code": "n = 100;a = 100;b = 100\nprint(str(min(a,b)) + \" \" + str(max(0,a + b - n)))", "coverage": [">", ">"]}, "18191": {"id": 18191, "code": "yymm = \"1905\"\nif (1 <= int(yymm[0:2]) and int(yymm[0:2]) <= 12) and (1 <= int(yymm[2:4]) and int(yymm[2:4]) <= 12):\n    print('AMBIGUOUS')\nelif (1 <= int(yymm[0:2]) and int(yymm[0:2]) <= 12) and int(yymm[2:4]) <= 99:\n    print('MMYY')\nelif int(yymm[0:2]) <= 99 and (1 <= int(yymm[2:4]) and int(yymm[2:4]) <= 12):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6890": {"id": 6890, "code": "h = 211;n = 5\naa = [31, 41, 59, 26, 53]\nall = sum(aa)\nif h <= all :\n  print(\"Yes\")\nelse :\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8899": {"id": 8899, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncandies = []\nfor i in range(N):\n    candies.append(sum(A1[:i+1])+sum(A2[i:]))\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9102": {"id": 9102, "code": "S = ['2017', '01', '07']\nprint(\"2018/\"+S[1]+\"/\"+S[2])", "coverage": [">", ">"]}, "7397": {"id": 7397, "code": "a = 210;b = 5\nc = [31, 41, 59, 26, 53]\nif(sum(c)>=a):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "14188": {"id": 14188, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(n - 1):\n    if flag == 0:\n        if a[i + 1] - a[i] > 0:\n            flag = 1\n        elif a[i + 1] - a[i] < 0:\n            flag = -1\n    elif flag == 1 and a[i + 1] - a[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a[i + 1] - a[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19114": {"id": 19114, "code": "n = 12\nans = 0\nif n >= 2 and n % 2 == 0:\n    j = 10\n    while n >= j:\n        ans += (n // j)\n        j *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19266": {"id": 19266, "code": "N = 12\nn = N // 10\ncnt = 0\nif N % 2 == 0:\n    while n != 0:\n        cnt += n\n        n //= 5\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11043": {"id": 11043, "code": "S = \"atcoder\"\nflag=0\nif S==S[::-1]:\n  s = S[:(len(S)-1)//2]\n  if s==s[::-1]:\n    s2 = S[(len(S)+3)//2-1:]\n    if s2==s2[::-1]:\n      flag=1\nif flag:print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "12131": {"id": 12131, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nb=int(b)\nd=int(d)\nif d-b==1:\n    print(\"0\")\nelse:\n    print(\"1\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9575": {"id": 9575, "code": "s = \"2017/01/31\"\nprint(str(int(s[:4]) + 1) +  s[4:])", "coverage": [">", ">"]}, "14367": {"id": 14367, "code": "n = 6\na = [0] * n\na = [1, 2, 3, 2, 2, 1]\nlast = 0\ncnt = 1\nincrease_flag = None\nfirst_flag = True\nfor i in range(len(a) - 1):\n    if a[i] < a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = True\n        elif not (increase_flag):\n            cnt += 1\n            increase_flag = None\n        else:\n            continue\n    elif a[i] > a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = False\n        elif not (increase_flag):\n            continue\n        else:\n            cnt += 1\n            increase_flag = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "1106": {"id": 1106, "code": "N = \"111\"\nif len(set(N))==1:\n    print(int(N))\nelse:\n    for i in range(111,1110,111):\n        if i>=int(N):\n            print(i)\n            exit()", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "17876": {"id": 17876, "code": "s = 1700\ns1 = s // 100\ns2 = s % 100\nc = 0\nl = [\"NA\",\"YYMM\",\"MMYY\",\"AMBIGUOUS\"]\nif 1<=s2<=12:\n  c += 1\nif 1<=s1<=12:\n  c += 2\nprint(l[c])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "7067": {"id": 7067, "code": "H = 10;N = 3\ndata = [4, 5, 6]\nS = 0\nfor i in range(0,len(data)):\n    S += data[i]\nif H > S:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13246": {"id": 13246, "code": "S = \"abcde,fghihgf,edcba\"\nS=S.replace(\",\",\" \")\nprint(S)", "coverage": [">", ">", ">"]}, "3217": {"id": 3217, "code": "S = \"35753\"\nr = 1000\nfor i in range(0, len(S)-2):\n    r = min(r, abs(int(S[i:i+3])-753))\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "18762": {"id": 18762, "code": "h = 2\nw = 100\nn = 200\ncnt = 0\nans = 0\nwhile ans < n:\n    if h < w:\n        ans += w\n        h -= 1\n    else:\n        ans += h\n        w -= 1\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "7081": {"id": 7081, "code": "H = 210;N = 5\na = [31, 41, 59, 26, 53]\nif H > sum(a):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "10776": {"id": 10776, "code": "s = \"level\"\ns1 = list(s[:((len(s)) - 1) // 2])\ns2 = list(s[(len(s) + 2) // 2:])\nif s1 == s2:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19045": {"id": 19045, "code": "N = 12\nans = 0\nif N % 2 == 0:\n  ans += N//10\n  ans += N//50\n  N //= 50\n  while N > 0:\n    N //= 5\n    ans += N\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5098": {"id": 5098, "code": "s = \"internationalization\"\nlength = len(s)-2\nprint(s[0]+str(length)+s[-1])", "coverage": [">", ">", ">"]}, "16264": {"id": 16264, "code": "import bisect\nN = 2\nA = [100, 0]\nA.sort()\nn = A[-1]\nmid = bisect.bisect(A, n/2)\nif abs(n/2-A[mid-1]) > abs(n/2-A[mid]):\n    print(n, A[mid])\nelse:\n    print(n, A[mid-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12738": {"id": 12738, "code": "X = 5\nprint('YES' if X in (3, 5, 7) else 'NO')", "coverage": [">", ">"]}, "10919": {"id": 10919, "code": "S = \"atcoder\"\ns = list(S)\nf = s[:int((len(s)-1)/2)]\nl = s[int((len(s)+3)/2-1):]\nif f == l:\n    while len(f) > 1:\n        if f[0] == f[-1]:\n            f.pop(0)\n            f.pop()\n    if len(f) <= 1:\n        while len(l) > 1:\n            if l[0] == l[-1]:\n                l.pop(0)\n                l.pop()\n        if len(l) <= 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "2106": {"id": 2106, "code": "n = 100;a = 100;b = 100\nma = min(a,b)\nmi = max(0, a+b-n)\nprint(str(ma) + ' ' + str(mi))", "coverage": [">", ">", ">", ">"]}, "17148": {"id": 17148, "code": "a = \"D\";b = \"D\"\nif b == \"H\":\n    b = \"HD\"\nelse:\n    b = \"DH\"\nprint(b[0] if a == \"H\" else b[1])", "coverage": [">", ">", "!", "!", ">", ">"]}, "11200": {"id": 11200, "code": "a=['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SAT\"\nfor i in range(7):\n  if a[i]==s:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "12876": {"id": 12876, "code": "n = \"5\"\nif n in \"357\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "12161": {"id": 12161, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 != 12:\n  if m2 == m1+1:\n    print(1)\n  else:\n    print(0)\nelse:\n  if m2 == 1:\n    print(1)\n  else:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "6983": {"id": 6983, "code": "H = 10;N = 3\nlst = [4, 5, 6]\ns=sum(lst)\nif s>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5600": {"id": 5600, "code": "x = 2\nprint(x//2+x%2)", "coverage": [">", ">"]}, "7047": {"id": 7047, "code": "str = \"10 3\"\nstr2 = \"4 5 6\"\nnums  = str.split()\nnums2  = str2.split()\nif len(nums2) != int(nums[1]):\n    print(\"error\")\nelse:\n   totalDamege = 0\n   for num in nums2:\n       totalDamege += int(num)\n   if int(nums[0]) <= totalDamege:\n       print(\"Yes\")\n   else:\n       print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "9696": {"id": 9696, "code": "n = 6\ns = \")))())\"\ncntl=0\nfor i in range(n-1,-1,-1):\n    if s[i]==\")\":\n        cntl+=1\n    elif s[i]==\"(\" and cntl>0:\n        cntl-=1\nsl=\"(\"*cntl\ncntr=0\nfor i in range(n):\n    if s[i]==\"(\":\n        cntr+=1\n    elif s[i]==\")\" and cntr>0:\n        cntr-=1\nsr=\")\"*cntr\nprint(sl+s+sr)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8289": {"id": 8289, "code": "import math\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nx=a.index(1)\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "18967": {"id": 18967, "code": "import sys\nN = 12\nif N % 2 == 0:\n    k = N // 2\n    tmp = 5\n    ans = 0\n    while k >= tmp:\n        ans += k // tmp\n        tmp *= 5\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "128": {"id": 128, "code": "s = [99, 111, 100, 101, 102, 101, 115, 116, 105, 118, 97, 108]\nK = 100\nret = []\nfor c in s[:-1] :\n    if c == 97 :\n        ret.append('a')\n        continue\n    if c + K > 122 :\n        ret.append('a')\n        K -= 123 - c\n    else :\n        ret.append(chr(c))\nK %= 26\nret.append(chr((s[-1] + K - 97) % 26 + 97))\nprint(''.join(ret))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14029": {"id": 14029, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nbefore = A[0]\nis_ascending = None\nans = 0\nfor a in A:\n    d = a - before\n    if d == 0:\n        pass\n    else:\n        if is_ascending == None:\n            is_ascending = d > 0\n        elif (is_ascending and d < 0) or (not is_ascending and d > 0):\n            ans += 1\n            is_ascending = None\n    before = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "19210": {"id": 19210, "code": "n = 12\nif n % 2 == 1:\n    print(0)\nelif n % 2 == 0:\n    ans = 0\n    k = 10\n    while n >= k:\n        ans += n//k\n        k *= 5\n    print(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "1492": {"id": 1492, "code": "n = \"111\"\na = int(n[0]*3)\nif int(n) <= a:\n    print(a)\nelse:\n    print(str(int(n[0])+1)*3)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9481": {"id": 9481, "code": "a = \"2017/01/31\"\nprint(a.replace('2017','2018'))", "coverage": [">", ">"]}, "12758": {"id": 12758, "code": "x = \"5\"\nif x in \"357\":\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "16308": {"id": 16308, "code": "n = 2\nlst = [0, 100]\nm=lst[-1]/2\nanslst=[]\nfor i in range(n-1):\n    anslst.append([abs(m-lst[i]),lst[i]])\nanslst.sort()\nprint(int(m*2),anslst[0][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2988": {"id": 2988, "code": "s = \"1234567876\"\nm=1000\nfor i in range(len(s)-2):\n  x=int(s[i]+s[i+1]+s[i+2])\n  m=min(m,abs(x-753))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4966": {"id": 4966, "code": "s = \"internationalization\"\ns_length = len(s)\ns_first = s[0]\ns_last = s[-1]\nanswer = s_first + str(len(s)-2) + s_last\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1233": {"id": 1233, "code": "n = 112\nfrom math import ceil\nprint(ceil(n/111)*111)", "coverage": [">", ">", ">"]}, "8373": {"id": 8373, "code": "n = 4\nlst1 = [1, 1, 1, 1]\nlst2 = [1, 1, 1, 1]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14430": {"id": 14430, "code": "n = 6\nL = [1, 2, 3, 2, 2, 1]\nif n == 1:\n    print(1)\n    exit()\nd = [0] * (n - 1)\nif (L[0] > L[1]):\n    d[0] = -1\nelif (L[0] < L[1]):\n    d[0] = 1\nfor i in range(n):\n    if (i == 0):\n        continue\n    elif (i == n - 1):\n        break\n    else:\n        if (L[i] < L[i + 1]):\n            d[i] = 1\n        elif (L[i] > L[i + 1]):\n            d[i] = -1\nprev = 0\ncount = 0\nfor i in range(len(d)):\n    if (i == 0):\n        prev = d[i]\n        continue\n    if (prev == 1):\n        if (d[i] == 1):\n            continue\n        elif (d[i] == 0):\n            continue\n        else:\n            count += 1\n            prev = 0\n    elif (prev == -1):\n        if (d[i] == -1):\n            continue\n        elif (d[i] == 0):\n            continue\n        else:\n            count += 1\n            prev = 0\n    elif (prev == 0):\n        if (d[i] == 1):\n            prev = 1\n        elif (d[i] == -1):\n            prev = -1\nprint(count + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">"]}, "18396": {"id": 18396, "code": "h = 14\nw = 12\nn = 112\nif h >= w and n%h != 0:\n    print(n//h+1)\nelif h >= w and n%h == 0:\n    print(n//h)\nelif w >= h and n%w != 0:\n    print(n//w+1)\nelse:\n    print(n//w)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "2087": {"id": 2087, "code": "n = 10;a = 7;b = 5\nans = []\nans.append(min(a,b))\nans.append(max(0,a+b-n))\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "15792": {"id": 15792, "code": "X = 13;Y = 3;Z = 1\ncnt = 0\nwhile (X-Z) >= (Z+Y):\n    X -= (Z+Y)\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18524": {"id": 18524, "code": "from math import ceil\nH = 3\nW = 7\nN = 10\nprint(ceil(N/max(H,W)))", "coverage": [">", ">", ">", ">", ">"]}, "15590": {"id": 15590, "code": "x = 64145;y = 123;z = 456\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "3154": {"id": 3154, "code": "s = \"35753\"\nd=1000\nfor i in range(len(s)-1):\n  if abs(int(s[i:i+3])-753)<d:\n    d=abs(int(s[i:i+3])-753)\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2989": {"id": 2989, "code": "s = \"35753\"\nm=1000\nfor i in range(len(s)-2):\n  x=int(s[i]+s[i+1]+s[i+2])\n  m=min(m,abs(x-753))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11893": {"id": 11893, "code": "a = []\nb = []\na = ['11', '30']\nb = ['12', '1']\nif a[0] == b[0]:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7539": {"id": 7539, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\ngokei=0\nans=\"No\"\nfor i in range(n):\n    gokei+=a[i]\n    if gokei>=h:\n        ans=\"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "48": {"id": 48, "code": "s = [2, 14, 3, 4, 5, 4, 18, 19, 8, 21, 0, 11]\nK = 100\ni = 0\nwhile K > 0 and i < len(s)-1:\n    if s[i] != 0 and 26-s[i] <= K:\n        K -= 26-s[i]\n        s[i] = 0\n    else:\n        i += 1\ns[-1] = (s[-1]+K)%26 \nprint(*[chr(x+97) for x in s], sep = '')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "11177": {"id": 11177, "code": "s = \"atcoder\"\nn = len(s)\nif s != s[::-1]:\n    print(\"No\")\nelse:\n    t = s[:int((n - 1) / 2)]\n    u = s[int((n + 1) / 2):]\n    if t == t[::-1] and u == u[::-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "18354": {"id": 18354, "code": "h = 14\nw = 12\nn = 112\nif h >= w:\n    print(-(-n//h))\nelse:\n    print(-(-n//w))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "14293": {"id": 14293, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nmode = 0\nfor i in range(N-1):\n  if mode == 0:\n    if A[i] < A[i+1]:\n      mode = 1\n    elif A[i] > A[i+1]:\n      mode = -1\n    else:\n      mode = 0\n  if mode == 1:\n    if A[i] > A[i+1]:\n      ans += 1\n      mode = 0\n  elif mode == -1:\n    if A[i] < A[i+1]:\n      ans += 1\n      mode = 0\n  else:\n    pass\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "4391": {"id": 4391, "code": "H = 10;M = 0;h = 15;m = 0;k = 30\ntime = h*60 + m - (H*60 + M) - k\nprint(time)", "coverage": [">", ">", ">"]}, "14609": {"id": 14609, "code": "N = 3;P = 0\nA = [1, 1, 1]\nif all(a%2==0 for a in A):\n    print(0 if P else 2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3446": {"id": 3446, "code": "a = 20;b = 15\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12047": {"id": 12047, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m2 != m1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "13344": {"id": 13344, "code": "s = \"haiku,atcoder,tasks\"\nprint(' '.join(s.split(',')))", "coverage": [">", ">"]}, "7546": {"id": 7546, "code": "H = 20;N = 3\nA = map(int, \"4 5 6\".split())\nprint(\"Yes\" if H <= sum(A) else \"No\")", "coverage": [">", ">", ">"]}, "17170": {"id": 17170, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    print(b)\nelif a == 'D':\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "413": {"id": 413, "code": "s = ['x', 'y', 'z']\nk = 4\nnum = len(s)\nfor i in range(num):\n    a = 122-ord(s[i])+1\n    if a <= k and s[i] != 'a':\n        k -= a\n        s[i] = 'a'\nif k > 0:\n    s[-1] = chr(ord(s[-1])+k%26)\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11779": {"id": 11779, "code": "n = 11;m = 30\nn2 = 12;m2 = 1\nif n2 != n:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3433": {"id": 3433, "code": "x = 12;y = 4\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "9163": {"id": 9163, "code": "s = \"2017/01/31\"\nif s[3] == '7':\n    s = s[:3] + '8' + s[4:]\nprint(s)  ", "coverage": [">", ">", ">", ">"]}, "6209": {"id": 6209, "code": "n = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nimport bisect\nfor b in B:\n    ia = bisect.bisect_left(A, b)\n    ic = n-bisect.bisect_right(C, b)\n    ans += ia*ic\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12515": {"id": 12515, "code": "A = 8;B = 12;K = 2\nl=[]\nfor i in range(1,min(A,B)+1):\n    if A%i==0 and B%i==0:\n        l.append(i)\nl=sorted(l)[::-1]\nprint(l[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8980": {"id": 8980, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nx=max(a,b,c,d,e)\ny=min(a,b,c,d,e)\nif x-y>k:\n    print(':(')\nelse:\n    print('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15894": {"id": 15894, "code": "A = 20;B = 15\nif A > B*2:\n  print(A-B*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "16782": {"id": 16782, "code": "a = \"H\";b = \"H\"\nprint('H'if (a=='H' and b=='H') or (a=='D'and b=='D')else 'D')", "coverage": [">", ">"]}, "11248": {"id": 11248, "code": "weekday = \"SAT\"\nlist = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in list:\n    if weekday == i:\n        daynum = list.index(weekday)\nnext = 7 - daynum\nprint(next)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11321": {"id": 11321, "code": "li=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nday = \"SUN\"\nfor i in range(7):\n    if(li[i]==day):\n        print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "745": {"id": 745, "code": "k = 101\nx = 7 % k\ni = 1\nset = set()\nis_there = False\nwhile not is_there:\n    set.add(x)\n    if x == 0:\n        print(i)\n        break\n    x = (x*10+7) % k\n    if x in set:\n        is_there = True\n    set.add(x)\n    i += 1\n    if x == 0:\n        print(i)\n        break\nelse:\n    print('-1')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "11277": {"id": 11277, "code": "s = \"SUN\"\nif 'SU' in s:\n  print('7')\nif 'MO' in s:\n  print('6')\nif 'TU' in s:\n  print('5')\nif 'WE' in s:\n  print('4')\nif 'TH' in s:\n  print('3')\nif 'FR' in s:\n  print('2')\nif 'SA' in s:\n  print('1')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!"]}, "7385": {"id": 7385, "code": "h = 20;n = 3\na = [4, 5, 6]\nfor i in range(n):\n    h = h - a[i]\n    if h <= 0:\n        print('Yes')\n        exit(0)\nprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16878": {"id": 16878, "code": "a = \"H\";b = \"H\"\nif a!=b:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", "!", "!", ">"]}, "16566": {"id": 16566, "code": "a = \"H\";b = \"H\"\nif a==\"H\":\n    if b==\"H\": print(\"H\")\n    else: print(\"D\")\nelse:\n    if b==\"H\": print(\"D\")\n    else: print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "3238": {"id": 3238, "code": "a = 20;b = 15\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "6956": {"id": 6956, "code": "h = 20;n = 3\nlist01 = ['4', '5', '6']\nlist02 = [int(a) for a in list01]\nif sum(list02) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7145": {"id": 7145, "code": "h = 10;a = 3\nl = [4, 5, 6]\nif h - sum(l) <= 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "9227": {"id": 9227, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3] = '8'\nprint(*s,sep=\"\")", "coverage": [">", ">", ">"]}, "4570": {"id": 4570, "code": "s = \"internationalization\"\nn=str(len(s)-2)\np=s[0]+n+s[len(s)-1]\nprint(p)", "coverage": [">", ">", ">", ">"]}, "17042": {"id": 17042, "code": "a = \"D\";b = \"D\"\nstrings=\"H\",\"D\"\nif a==b:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "5102": {"id": 5102, "code": "S = \"smiles\"\nstart=S[0]\nend=S[len(S)-1]\nnum=len(S)-2\nprint(\"{}{}{}\".format(start,num,end))", "coverage": [">", ">", ">", ">", ">"]}, "12431": {"id": 12431, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nl = len(s)\nt = s[::-1]\nif s == t and (s[:(l-1)//2] == t[(l+1)//2:]) and (s[(l+1)//2:] == t[:(l-1)//2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9545": {"id": 9545, "code": "date = \"2017/01/31\"\nprint(date.replace('2017', '2018'))", "coverage": [">", ">"]}, "3833": {"id": 3833, "code": "x = 13;y = 3;z = 1\ni = 0\nwhile y*i + z*(i+1) <= x:\n    i += 1\ni -= 1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1661": {"id": 1661, "code": "n = 10;a = 3;b = 5\nab = a+b\nc = n < ab\nr = ab - n if c else 0\nprint(' '.join([str(i) for i in [min(a,b), r]]))", "coverage": [">", ">", ">", ">", ">"]}, "15567": {"id": 15567, "code": "x = 13;y = 3;z = 1\nX = x - 2*z\nn = X//(y+z)\nif X - (y+z)*n >= y:\n  print(n+1)\nelse:\n  print(n)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16709": {"id": 16709, "code": "a = \"D\";b = \"D\"\nif (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\"):\n    ans=\"H\"\nelse:\n    ans=\"D\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7066": {"id": 7066, "code": "n1 = 211;n2 = 5\nn3 = [31, 41, 59, 26, 53]\nfor i1 in range(n2):\n    n1 -= n3[i1]\nif n1 <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12560": {"id": 12560, "code": "A = 1;B = 1;K = 1\ncount=0\nfor i in reversed(range(min(A,B))):\n  if A%(i+1)==0 and B%(i+1)==0:\n    count+=1\n  if count==K:\n    print(i+1)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15947": {"id": 15947, "code": "n = [12, 4]\nprint(max(n[0] - 2*n[1], 0))", "coverage": [">", ">"]}, "18467": {"id": 18467, "code": "h = 3\nw = 7\nN = 10\nm = max(h,w)\nd = N//m\nif N%m == 0:\n  print(d)\nelse:\n  print(d+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1555": {"id": 1555, "code": "n = 111\nif 100<=n<=111: print(111)\nelif 112<=n<=222:print(222)\nelif 223<=n<=333:print(333)\nelif 334<=n<=444:print(444)\nelif 445<=n<=555:print(555)\nelif 556<=n<=666:print(666)\nelif 667<=n<=777:print(777)\nelif 778<=n<=888:print(888)\nelse:print(999)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "11570": {"id": 11570, "code": "N = \"SUN\"\nS = {\"SUN\":\"7\", \"MON\": \"6\", \"TUE\": \"5\", \"WED\": \"4\", \"THU\": \"3\", \"FRI\": \"2\", \"SAT\": \"1\"}\nprint(S[N])", "coverage": [">", ">", ">"]}, "15395": {"id": 15395, "code": "import math\nx = 64145;y = 123;z = 456\nprint(math.floor((x-z)/(y+z)))", "coverage": [">", ">", ">"]}, "13844": {"id": 13844, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1;before=a[0];mode=0\nfor i,v in enumerate(a):\n    nmode=0\n    if before>v:\n        nmode=-1\n    elif before<v:\n        nmode=1\n    before=v\n    if mode*nmode==-1:\n        mode=0\n        ans+=1\n    elif mode==0:\n        mode=nmode\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1739": {"id": 1739, "code": "n = 10;a = 3;b = 5\nprint(min(a,b))\nif a+b <= n:\n    print('0')\nelse:\n    print((a+b)-n)", "coverage": [">", ">", ">", ">", "!", "!"]}, "8852": {"id": 8852, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13270": {"id": 13270, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "4652": {"id": 4652, "code": "s = \"smiles\"\na = len(s) -2\nm = list(s)\nprint(str(m[0]) + str(a) + str(m[-1]))", "coverage": [">", ">", ">", ">"]}, "16042": {"id": 16042, "code": "A = 20;B = 30\nprint([A-2*B,0][A<=2*B])", "coverage": [">", ">"]}, "11348": {"id": 11348, "code": "s = \"SAT\"\nif \"SUN\" in s:\n    print(\"7\")\nelif \"MON\" in s:\n    print(\"6\")\nelif \"TUE\" in s:\n    print(\"5\")\nelif \"WED\" in s:\n    print(\"4\")\nelif \"THU\" in s:\n    print(\"3\")\nelif \"FRI\" in s:\n    print(\"2\")\nelse:\n    print(\"1\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "15245": {"id": 15245, "code": "x = 64146;y = 123;z = 456\nhito=x//(y+z)\nif x%(y+z)<z:\n    hito -=1\n    print(hito)\nelse:\n    print(hito)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "13277": {"id": 13277, "code": "s = \"happy,newyear,enjoy\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">"]}, "18367": {"id": 18367, "code": "h = 2\nw = 100\nn = 200\ncnt = 0\nflg = True\nif h > w:\n    while flg:\n        if h * cnt >= n:\n            flg = False\n            break\n        cnt += 1\nelse:\n    while flg:\n        if w * cnt >= n:\n            flg = False\n            break\n        cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15754": {"id": 15754, "code": "X = 13;Y = 3;Z = 1\nN = ((X - Z ) // (Y + Z))\nprint(N)", "coverage": [">", ">", ">"]}, "16541": {"id": 16541, "code": "a = \"D\";b = \"D\"\nif a=='H' and b=='H':print('H')\nelif a=='D' and b=='D':print('H')\nelse:print('D')", "coverage": [">", ">", ">", "!"]}, "10038": {"id": 10038, "code": "N = 6\nS = [')', ')', ')', '(', ')', ')']\nc = [0,0]\nfor s in S:\n    if s == '(':\n        c[0] += 1\n    else:\n        if c[0] > 0:\n            c[0] -= 1\n        else:\n            c[1] += 1\npre = ['('] * c[1]\nrear = [')'] * c[0]\nans = pre+S+rear\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "17268": {"id": 17268, "code": "a = \"H\";b = \"H\"\nif(a==b):print(\"H\")\nelse:print(\"D\")", "coverage": [">", ">", "!"]}, "14999": {"id": 14999, "code": "n = 1;p = 1\na = [50]\nif all(i%2==0for i in a):print(0 if p%2else 2**n)\nelse:print(2**(n-1))", "coverage": [">", ">", ">", "!"]}, "10529": {"id": 10529, "code": "a = 8;b = 12;k = 2\ni=min(a,b)+1\nwhile(k):\n  i-=1\n  if max(a%i,b%i)==0:\n    k-=1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4641": {"id": 4641, "code": "s = \"xyz\"\nle = len (s)-2\nle = str (le)\nprint (s[0]+le+s[-1])", "coverage": [">", ">", ">", ">"]}, "18130": {"id": 18130, "code": "S = 1700\nL = S // 100 \nR = S % 100 \nif L > 12 or L == 0:\n  if R > 12 or R == 0: print('NA')\n  else: print('YYMM')\nelse:\n  if R > 12 or R == 0: print('MMYY')\n  else: print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "11577": {"id": 11577, "code": "arr=['MON','TUE','WED','THU','FRI','SAT','SUN']\ns = \"SAT\"\nif s=='SUN':\n    print (7)\nelse:\n    k=arr.index(s)\n    print (6-k)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "6147": {"id": 6147, "code": "from bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nB1 = []\nfor i in range(N):\n    ind = bisect_right(C,B[i])\n    B1.append(ind)\nB2 = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    B2[i] = B2[i+1]+N-B1[i]\ncnt = 0\nfor i in range(N):\n    ind = bisect_right(B,A[i])\n    cnt += B2[ind]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8717": {"id": 8717, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    t = 0\n    for j in range(0, min(N, i + 1)):\n        t += A1[j]\n    for k in range(i, N):\n        t += A2[k]\n    ans = max(t, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18787": {"id": 18787, "code": "h = 3\nw = 7\nn = 10\nans = 0\nmax = max(h, w)\nwhile n > 0:\n  n -= max\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12969": {"id": 12969, "code": "n = \"6\"\nif (n == '3') or (n == '5') or (n == '7'):\n print(\"YES\")\nelse:\n print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "17141": {"id": 17141, "code": "a = \"D\";b = \"H\"\nprint('H' if a == b == 'H' or a == b == 'D' else 'D')", "coverage": [">", ">"]}, "8993": {"id": 8993, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif e - a <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1225": {"id": 1225, "code": "a = \"112\"\nzyun= len(a)*9+int(a[0])\nzoro=0\nz = zyun//9\naf= zyun%9\nif af==0:\n    if int(a)<=int(str(9)*(z-1)):\n        print(int(str(9)*(z-1)))\n    else:\n            print(str(1)*(z))\nelse :\n    if int(a)<=int(str(af)*(z)):\n        print(int(str(af)*(z)))\n    else:\n        print(int(str(af+1)*(z)))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "13043": {"id": 13043, "code": "x = 6\nif x==3 or x==5 or x==7:print('YES')\nelse:print('NO')", "coverage": [">", ">", ">"]}, "16232": {"id": 16232, "code": "from itertools import combinations\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nai = a[-1]\naj = -1\nfor i in range(n-1):\n    if abs(a[i] - ai/2) <= abs(aj - ai/2):\n        aj = a[i]\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6551": {"id": 6551, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\na.sort()\nb.sort()\nc.sort(reverse=True)\nc = [-x for x in c]\nans = 0\nfor x in b:\n    ans += bisect.bisect_left(a, x) * (bisect.bisect_left(c, -x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "21": {"id": 21, "code": "S = ['a']\nN = 25\ni=0\nwhile i<len(S)-1:\n    if S[i]!='a' and 123-ord(S[i])<=N:\n        N-=123-ord(S[i])\n        S[i]='a'\n    i+=1\nN=N%26\nwhile N:\n    if S[-1]=='z':\n        S[-1]='a'\n    else:\n        S[-1]=chr(ord(S[-1])+1)\n    N-=1\nprint(''.join(S))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8940": {"id": 8940, "code": "n = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2032": {"id": 2032, "code": "n = 100;a = 100;b = 100\nprint(\"{} {}\".format(min(n, min(a, b)), max(0, (a+b) - n)))", "coverage": [">", ">"]}, "4551": {"id": 4551, "code": "s = \"xyz\"\nl=len(s)\nprint(s[0]+str(l-2)+s[-1])", "coverage": [">", ">", ">"]}, "7931": {"id": 7931, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\npos_of_1 = A.index(1)\nif K >= pos_of_1 + 1 or N - K <= pos_of_1:\n  print(math.ceil((N - K) / (K - 1)) + 1) \nelse:\n  L = A[:pos_of_1 + 1]\n  R = A[pos_of_1:]\n  res = []\n  for i in range(1, K):\n    l = math.ceil((len(L) - i) / (K - 1)) + 1\n    r = math.ceil((len(R) - K - 1 + i) / (K - 1)) + 1\n    res.append(l + r - 1)\n  print(min(res))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "17969": {"id": 17969, "code": "s = \"1700\"\na = int(s[0:2])\nb = int(s[2:])\nif 13 <= a or a == 0:\n    if 1 <= b and b <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nelse:\n    if 1<= b  and b<= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "16713": {"id": 16713, "code": "a = \"H\";b = \"H\"\nif a==\"H\" and b==\"H\":\n  print(\"H\")\nelif a==\"D\" and b==\"D\":\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "16217": {"id": 16217, "code": "n = 5\na = [2, 4, 6, 9, 11]\np = a[-1]\nc = 0\nfor i in range(n-1):\n  if abs(a[i+1]-p/2) < abs(a[i]-p/2):\n    c = a[i+1]\n  else:\n    break\nprint(p,c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "11664": {"id": 11664, "code": "n = \"SAT\"\nd = {\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(d[n])", "coverage": [">", ">", ">"]}, "13769": {"id": 13769, "code": "h = 10;m = 0;H = 15;M = 0;K = 30\nd = H*60+M-(h*60+m)\nprint(d-K)", "coverage": [">", ">", ">"]}, "6174": {"id": 6174, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\nans=0\nfor i in range(n):\n    num_a=bisect.bisect_left(a,b[i])\n    idx_c=bisect.bisect_right(c,b[i])\n    num_c=n-idx_c\n    ans+=num_a*num_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16322": {"id": 16322, "code": "n = 5\na_l = [6, 9, 4, 2, 11]\na_l.sort(reverse=True)\nans_n = a_l[0]\na_l2 = []\nfor i, val in enumerate(a_l):\n    a_l2.append((abs(val-float(ans_n)/2),i))\na_l2.sort()\nif a_l2[0][1] == 0:\n    ans_r_index = a_l2[1][1]\nelse:\n    ans_r_index = a_l2[0][1]\nans_r = a_l[ans_r_index]\nprint(ans_n, ans_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "18039": {"id": 18039, "code": "s = 1905\nyy = s // 100\nmm = s % 100\nif 1 <= yy <= 12:\n    if 1 <= mm <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= mm <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "11438": {"id": 11438, "code": "l = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SAT\"\nif s in l:\n    print(7-l.index(s))\nelse:\n    pass", "coverage": [">", ">", ">", ">", "!", ">"]}, "252": {"id": 252, "code": "S = \"xyz\"\nK = 4\noz = ord(\"z\")\nans = \"\"\nfor s in S[:-1]:\n    if s != \"a\" and oz+1-ord(s) <= K:\n        K -= oz+1-ord(s)\n        ans += \"a\"\n    else:\n        ans += s\nans += chr(((ord(S[-1])-ord(\"a\")+K)%26)+ord(\"a\"))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14680": {"id": 14680, "code": "N = 2;P = 0\nA = [1, 3]\neven=0\nfor i in range(N):\n    if A[i]%2==0:\n        even+=1\nif even==N:\n    if P==0:\n        ans=2**N\n    else:\n        ans=0\nelse:\n    ans=2**(N-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">", ">"]}, "11501": {"id": 11501, "code": "s = \"SUN\"\nw = ['SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nprint(w.index(s)+1)", "coverage": [">", ">", ">"]}, "4479": {"id": 4479, "code": "n = \"xyz\"\nA = n[0]\nB = n[-1]\nprint(n[0] + str(len(n)-2) +n[-1])", "coverage": [">", ">", ">", ">"]}, "17535": {"id": 17535, "code": "s = \"1905\"\nmmyy = (1 <= int(s[:2]) <= 12)\nyymm = (1 <= int(s[2:]) <= 12)\nif mmyy:\n  if yymm:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if yymm:\n    print('YYMM')\n  else:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "10837": {"id": 10837, "code": "S = \"atcoder\"\nn = len(S)\nn\nm = int(((n - 1)/2)-1)\nl = int(((n + 3)/2)-1)\nif S[::1] == S[::-1]:\n        if S[:m+1:] == S[m::-1]:\n            if S[l::] == S[:l-1:-1]:\n                print('Yes')\n                exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "9813": {"id": 9813, "code": "s = \"())\"\nt=0\nfor c in s:\n  if c=='(': t+=1\n  else: t-=1\n  if t<0: s='('+s; t+=1\nprint(s+')'*t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8967": {"id": 8967, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif b-a<=k and c-b<=k and d-c<=k and e-d<=k and c-a<=k and d-a<=k and e-a<=k and d-b<=k and e-b<=k and e-c<=k:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15336": {"id": 15336, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nx = 12;y = 3;z = 1\nq = x // (y + z)\nr = x % (y + z)\nans = q if z <= r else q - 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18486": {"id": 18486, "code": "H = 14\nW = 12\nN = 112\na = max(H,W)\nif N%a == 0:\n    print(N//a)\nelse:\n    print(N//a+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12008": {"id": 12008, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif (m1+1)%13==m2:\n  if d2==1:\n    print(1)\n    exit()\nprint(0)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "6848": {"id": 6848, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nx = sum(a)\nif h <= x: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", ">"]}, "4670": {"id": 4670, "code": "a =[]\nb = 0\ns = \"smiles\"\nfor i in s:\n  a.append(i)\n  b += 1\nprint(str(a[0])+str((b-2))+str(a[b-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18045": {"id": 18045, "code": "s = 1700\na=s//100\nb=s%100\nif 1<=a<=12 and 1<=b<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=a<=12 and (b>12 or b==0):\n  print(\"MMYY\")\nelif (a==0 or a>12) and 1<=b<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5302": {"id": 5302, "code": "n = 5\nif n%2==1:\n    n+=1\nprint(n//2)", "coverage": [">", ">", ">", ">"]}, "9392": {"id": 9392, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[:4] = list('2018')\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "18782": {"id": 18782, "code": "H = 14\nW = 12\nN = 112\nr = (N +max(H, W)-1)//max(H, W)\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "19230": {"id": 19230, "code": "N = 12\nif N % 2 == 1:\n    ans = 0\nelse:\n    ans = 0\n    for i in range(1,50):\n        ans += (N//2) // 5**i\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "8953": {"id": 8953, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17980": {"id": 17980, "code": "s = \"0112\"\ns1 = int(s[0:2])\ns2 = int(s[2:])\nif s1 > 0 and s1 < 13:\n    if s2 > 0 and s2 < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if s2 > 0 and s2 < 13:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3322": {"id": 3322, "code": "a = 12;b = 4\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "12749": {"id": 12749, "code": "n = 6\njudge = [3,5,7]\nif n in judge:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "16766": {"id": 16766, "code": "S = ['D', 'D']\nif S[0]==S[1]:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "317": {"id": 317, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nz = ord(\"z\")\na = ord(\"a\")\nfor i in range(len(s)-1):\n    if s[i] == \"a\":\n        continue\n    if z - ord(s[i]) + 1 <= k:\n        k -= z - ord(s[i]) + 1\n        s[i] = \"a\"\nif k > 0:\n    k = k%26\n    x = z - ord(s[-1]) +1\n    if k >= x:\n        k -= z - ord(s[-1]) + 1\n        s[-1] = chr(a + k)\n    else:\n        s[-1] = chr(ord(s[-1])+k)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "6310": {"id": 6310, "code": "import bisect\nfrom sys import stdin\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n  ans += bisect.bisect_left(A, b) * (N - bisect.bisect_right(C, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1145": {"id": 1145, "code": "n = 750\ntmp=(n+110)//111\nprint(111*tmp)", "coverage": [">", ">", ">"]}, "13519": {"id": 13519, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5]+' '+s[6:13]+' '+s[14:])", "coverage": [">", ">"]}, "17938": {"id": 17938, "code": "s = \"0112\"\nl = int(s[0]) * 10 + int(s[1])\nr = int(s[2]) * 10 + int(s[3])\nres = \"NA\"\nif l == 0:\n    if 1 <= r <= 12:\n        res = \"YYMM\"\n    else:\n        res = \"NA\"\nelif 1 <= l <= 12:\n    if 1 <= r <= 12:\n        res =\"AMBIGUOUS\"\n    else:\n        res = \"MMYY\"\nelse:\n    if 1 <= r <= 12:\n        res = \"YYMM\"\n    else:\n        res = \"NA\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "17754": {"id": 17754, "code": "s = 1905\na = s // 100\nb = s % 100\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n    print(\"MMYY\")\nelif 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4717": {"id": 4717, "code": "txt = \"internationalization\"\nn=len(txt)-2\nprint(txt[0]+str(n)+txt[-1])", "coverage": [">", ">", ">"]}, "7475": {"id": 7475, "code": "H = 10;N = 3\nprint('No' if sum(list(map(int,\"4 5 6\".split()))) < H else 'Yes')", "coverage": [">", ">"]}, "2981": {"id": 2981, "code": "S = \"1111111111\"\nprint(min(abs(int(S[i:i+3])-753) for i in range(len(S)-2)))", "coverage": [">", ">"]}, "18647": {"id": 18647, "code": "import math\nH = 3\nW = 7\nN = 10\nans = max([H,W])\nfa = N/ans\nprint(math.ceil(fa))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14725": {"id": 14725, "code": "N = 3;P = 0\nA = [1, 1, 1]\nin_odd = False\nfor i in range(N):\n    if A[i]%2:\n        in_odd = True\n        break\nif not in_odd:\n    if P:\n        print(0)\n    else:\n        print(2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "10884": {"id": 10884, "code": "s = \"level\"\nn = len(s)\ns1 = s[0:(n - 1) // 2]\ns2 = s[(n + 3) // 2 - 1:]\nif s == s[::-1] and s1 == s1[::-1] and s2 == s2[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "17322": {"id": 17322, "code": "s = \"H H\"\nif s == 'H H' or s == 'D D':\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "13895": {"id": 13895, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N == 1:\n    print(1)\n    quit()\nA.append(A[N-1])\nans = 1\nlast = A[0]\ns = 0\nfor i in range(N-1):\n    if not(A[s] <= A[i] <= A[i+1]) and not(A[s] >= A[i] >= A[i+1]):\n        s = i + 1\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16663": {"id": 16663, "code": "deck = [\"H\",\"D\"]\na = \"D\";b = \"H\"\nif deck.index(a) == 0:\n  print(b)\nelif deck.index(b) == 0:\n  print(deck[1])\nelse:\n  print(deck[0])", "coverage": [">", ">", ">", "!", ">", ">", "!", "!"]}, "14169": {"id": 14169, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=0\nanswer=1\nif N==1:\n    print(1)\nelse:\n    if A[0] < A[1]:\n        flag = 1\n    elif A[0]>A[1]:\n        flag = -1\n    for n in range(N - 1):\n        if flag == 1:\n            if A[n] <= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        elif flag == -1:\n            if A[n] >= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        else:\n            if A[n] == A[n + 1]:\n                pass\n            elif A[n] < A[n + 1]:\n                flag = 1\n            else:\n                flag = -1\n    print(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", ">", ">", "!", ">", ">"]}, "2433": {"id": 2433, "code": "even = 0;odd = 3\nprint(int(even * (even-1)/2 + odd * (odd-1)/2))", "coverage": [">", ">"]}, "19144": {"id": 19144, "code": "N = 5\nif N%2==1:\n    ans = 0\nelse:\n    n = N//10\n    ans = n\n    k = 1\n    while 5**k<=n:\n        ans += n//(5**k)\n        k += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11032": {"id": 11032, "code": "S = \"akasaka\"\nN=len(S)\nSH=S[:(N-1)//2]\nST=S[(N+3)//2-1:]\np=False\nif SH==SH[::-1] and SH==ST:\n  p=True\nprint(\"Yes\" if p else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3761": {"id": 3761, "code": "X = 13;Y = 3;Z = 1\nN=(X-Z)//(Y+Z)\nprint(N)", "coverage": [">", ">", ">"]}, "16002": {"id": 16002, "code": "A = 20;B = 15\nX=A-2*B\nif X>=1:\n    print(X)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "15060": {"id": 15060, "code": "n = 1;p = 1\na = [50]\na_new=[]\nfor i in range(n):\n    a_new.append(a[i]%2)\neven=a_new.count(0)\nodd=a_new.count(1)\nif odd==0 and p==0:\n    print(2**n)\nelif odd==0 and p==1:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "15046": {"id": 15046, "code": "N = 45;P = 1\nA = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nodd = False\nfor i in range(N):\n    if A[i] % 2 == 1:\n        odd = True\n        break\nif odd:\n    print(2**(N-1))\nelse:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "6903": {"id": 6903, "code": "h = 10;n = 3\nAi = [4, 5, 6]\nprint('Yes' if h <= sum(Ai) else 'No')", "coverage": [">", ">", ">"]}, "13477": {"id": 13477, "code": "n = \"abcde,fghihgf,edcba\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "14236": {"id": 14236, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\npumi=0\nff=0\ncut=1\nfor i in range(0,N-1):\n    if pumi==0:\n        ff=0\n    elif pumi==-1:\n        ff=-1\n    elif pumi==1:\n        ff=1\n    if A[i+1]>A[i]:\n        pumi=1\n    elif A[i+1]<A[i]:\n        pumi=-1\n    if pumi==-1 and ff==1:\n        cut+=1\n        pumi=0\n    elif pumi==1 and ff==-1:\n        cut+=1\n        pumi=0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5388": {"id": 5388, "code": "import math\nx = \"100\"\npage = (int(x)+1) // 2\nprint(page)", "coverage": [">", ">", ">", ">"]}, "11961": {"id": 11961, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2:\n    print (0)\nelse:\n    print (1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "844": {"id": 844, "code": "K = 101\na = 7\nflag = True\nfor i in range(K):\n    if a % K == 0:\n        print(i+1)\n        flag = False\n        break\n    a = (a * 10 + 7) % K\nif flag:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "644": {"id": 644, "code": "K = 101\nif K % 7 == 0:\n    K //= 7\nL = 9 * K\nif L % 2 == 0 or L % 5 == 0:\n    ans = -1\nelse:\n    ans = 0\n    R = 10\n    while 1:\n        ans += 1\n        if R % L == 1:\n            break\n        else:\n            R = (10 * R) % L\nprint(ans)", "coverage": [">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "3543": {"id": 3543, "code": "a = 20;b = 30\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9060": {"id": 9060, "code": "a=int(\"1\")\ne=int(\"9\")\nk=int(\"15\")\nprint(\"Yay!\" if k>=e-a else \":(\")", "coverage": [">", ">", ">", ">"]}, "3751": {"id": 3751, "code": "x = 100000;y = 1;z = 1\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "1209": {"id": 1209, "code": "n = 112\nm = list(str(n))\nif m[0] == m[1] == m[2]:\n    print(n)\nelse:\n    for i in range(1, 10):\n        if n<=i*111:\n            print(i*111)\n            break", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "7603": {"id": 7603, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11417": {"id": 11417, "code": "S = \"SUN\"\nweek = [\"SUN\",\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nfor i in range(7):\n  if week[i] == S:\n    print(7 - i)", "coverage": [">", ">", ">", ">", ">"]}, "3933": {"id": 3933, "code": "x = 64145;y = 123;z = 456\nans = int((x-z)//(y+z))\nprint(ans)", "coverage": [">", ">", ">"]}, "12263": {"id": 12263, "code": "s = \"level\"\ns1 = s[:len(s) // 2]\ns2 = s[:len(s) // 2:-1]\ns3 = s[len(s) // 2 + 1:]\nif s1 == s2 == s3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "5650": {"id": 5650, "code": "N = 5\nif N%2==1:\n  print(int((N-1)/2+1))\nelse:\n  print(int(N/2))", "coverage": [">", ">", ">", "!", "!"]}, "17288": {"id": 17288, "code": "a = \"D\";b = \"D\"\nif a == 'H' and b == 'H':\n  print('H')\nelif a == 'D' and b == 'D':\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "14263": {"id": 14263, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif n <= 2:\n    print(1)\n    exit()\nf = 0\ncnt = 0\nif a[0] < a[1]:\n    f = 1\nelif a[0] > a[1]:\n    f = 2\ntmp = a[1]\nfor i in range(2,n):\n    if tmp < a[i]:\n        if f == 2:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 1\n    elif tmp > a[i]:\n        if f == 1:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 2\n    tmp = a[i]\ncnt += 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5380": {"id": 5380, "code": "n = 5\nif n%2==0:\n  print(int(n*0.5))\nelse:\n  print(int(0.5*n)+1)", "coverage": [">", ">", "!", "!", ">"]}, "13771": {"id": 13771, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nif a==c:\n    t=d-b\n    if e<=t:\n        print(t-e)\n    else:\n        print(0)\nif c>a:\n    if b>d:\n        t=60*(c-a)-b+d\n        if e<=t:\n            print(t-e)\n        else:\n            print(0)\n    if b<=d:\n        t=(c-a)*60+d-b\n        if e<=t:\n            print(t-e)\n        else:\n            print(0)", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!"]}, "18101": {"id": 18101, "code": "s = \"1905\"\nf = (0 < int(s[:2]) < 13)\ns = (0 < int(s[2:]) < 13)\nans = 'NA'\nif f and s:\n    ans = 'AMBIGUOUS'\nelif s:\n    ans = 'YYMM'\nelif f:\n    ans = 'MMYY'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "40": {"id": 40, "code": "s = ['a']\nk = 25\nn=len(s)\nfor i in range(n-1):\n    t=s[i]\n    order=ord(t)-97\n    if order==0:\n        continue\n    elif k>=26-order:\n        s[i]='a'\n        k-=26-order\n    else:\n        continue\ns[n-1]=chr(97+(ord(s[n-1])-97+k)%26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "7915": {"id": 7915, "code": "n = 3;k = 3\nA = [1, 2, 3]\nans = (n-1) // (k-1)\nif (n-1) % (k-1) > 0: ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "16498": {"id": 16498, "code": "n = 2\na = [100, 0]\np=max(a)\nr=p/2\nprint(p,int(min([i-r for i in a if i!=p],key=abs)+r))", "coverage": [">", ">", ">", ">", ">"]}, "12389": {"id": 12389, "code": "S = \"level\"\nN = len(S)\nS1 = S[:(N-1)//2]\nS2 = S[(N+1)//2:]\nif S==S[::-1] and S1==S1[::-1] and S2==S2[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16000": {"id": 16000, "code": "a = 20;b = 30\nans = 0\nif a - (2 * b) > 0:\n    ans = a - (2 * b)\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "1582": {"id": 1582, "code": "n = 750\nans = 0\nwhile n > ans:\n    ans += 111\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "9904": {"id": 9904, "code": "n = 8\ns = \"))))((((\"\nans=[]\nminscore=0\nscore=0\nfor i in range(n):\n  if s[i]=='(':\n    score+=1\n  else:\n    score-=1\n  minscore=min(minscore,score)\nfinalscore=score\nfor i in range(-minscore):\n  ans.append('(')\nfor i in range(n):\n  ans.append(s[i])\nfor i in range(-minscore+finalscore):\n  ans.append(')')\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12221": {"id": 12221, "code": "N = \"atcoder\"\nlenN = len(N)\nfN =N[0:(lenN - 1)//2]\nlN =N[(lenN + 3)//2-1:]\nprint((\"No\",\"Yes\")[(0,1)[fN == fN[-1::-1]]*(0,1)[lN == lN[-1::-1]]*(0,1)[lN == fN]])", "coverage": [">", ">", ">", ">", ">"]}, "1302": {"id": 1302, "code": "n = 750\nfor i in range(n,1000):\n    x = list(str(i))\n    if len(set(x)) == 1:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "17748": {"id": 17748, "code": "S = \"1905\"\na,b=int(S[:2]),int(S[2:])\nif 0<a<13 and 0<b<13:\n    print('AMBIGUOUS')\nelif 0<a<13:\n    print('MMYY')\nelif 0<b<13:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "11803": {"id": 11803, "code": "X = 11;Y = 30\nX1 = 12;Y1 = 1\nif Y1 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "8675": {"id": 8675, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7554": {"id": 7554, "code": "h = 20;n = 3\na = [4, 5, 6]\na.sort(reverse=True)\nans=0\npower=0\nfor i in range(n):\n    power+=a[i]\n    if power>=h:\n        ans=1\n        break\nif ans==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "4348": {"id": 4348, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nr=((h2-h1)*60)+m2-m1-k\nif r>=0:\n  print(r)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "25": {"id": 25, "code": "s = \"xyz\"\nK = 4\nS = [ord(i)-97 for i in s]\nlast = K\nfor i in range(len(S)):\n    if S[i] != 0:\n        if 26 - S[i] <= last:\n            last -= 26 - S[i]\n            S[i] = 0\nif last > 0:\n    S[-1] += last\n    S[-1] %= 26\nS = [chr(i+97) for i in S]\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2785": {"id": 2785, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    x = int(S[i:i+3])\n    dif = abs(753 - x)\n    ans = min(dif, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3372": {"id": 3372, "code": "A = 20;B = 30\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "14043": {"id": 14043, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\ncnt = 0\nwhile i < N:\n    while i < N - 1 and A[i + 1] == A[i]:\n        i += 1\n    if i >= N - 1:\n        cnt += 1\n        print(cnt)\n        sys.exit()\n    if A[i + 1] < A[i]:\n        while i < N - 1 and A[i + 1] <= A[i]:\n            i += 1\n    else:\n        while i < N - 1 and A[i + 1] >= A[i]:\n            i += 1\n    cnt += 1\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5425": {"id": 5425, "code": "import itertools\nimport functools\nimport math\nfrom collections import Counter\nfrom itertools import combinations\nN = 5\nprint((N+1)//2)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5540": {"id": 5540, "code": "import math\ns = 2\nprint(math.ceil(s/2))", "coverage": [">", ">", ">"]}, "9363": {"id": 9363, "code": "n = \"2017/01/31\"\nn=n[:3] + '8' + n[4:]\nprint(n)", "coverage": [">", ">", ">"]}, "17484": {"id": 17484, "code": "S = \"1905\"\na = S[0:2]\nb = S[2:4]\nA = int(a)\nB = int(b)\nif A>=1 and A <=12:\n  if B>= 1 and B <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if B>= 1 and B<= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "4740": {"id": 4740, "code": "s = \"xyz\"\nk=len(s)-2\nprint(\"{0}{1}{2}\".format(s[0],str(k),s[-1]))", "coverage": [">", ">", ">"]}, "9579": {"id": 9579, "code": "s = \"2017/01/31\"\nprint('2018/01/' + s[-2:])", "coverage": [">", ">"]}, "4555": {"id": 4555, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nt = str(len(s)-2)\nprint(s[0]+t+s[-1])", "coverage": [">", ">", ">"]}, "14472": {"id": 14472, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc = 1\nd = 0\nfor i in range(n-1):\n  if a[i] == a[i+1]:\n    pass\n  elif a[i] < a[i+1]:\n    if d < 0:\n      d = 0\n      c += 1\n    else:\n      d += 1\n  else:\n    if d > 0:\n      d = 0\n      c += 1\n    else:\n      d -= 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "6343": {"id": 6343, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nd=0\nfor t in b:\n    d+=bisect.bisect_left(a,t)*(n-bisect.bisect_right(c,t))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6401": {"id": 6401, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\ncnt = 0\nfor i in b:\n    cnt += bisect_left(a,i)*(n-bisect_right(c,i))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "702": {"id": 702, "code": "k = 101\nflag = 0\ntemp = 7\nfor i in range(k):\n    if(temp % k == 0):\n        flag = 1\n        break\n    else:\n        temp = temp % k\n        temp = temp * 10 % k\n        temp = temp + 7\nif (flag == 0):\n    print(\"-1\")\nelse:\n    print(i+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "11521": {"id": 11521, "code": "youbi = \"SUN,MON,TUE,WED,THU,FRI,SAT\".split(\",\")\na = \"SAT\"\nprint(7 - youbi.index(a))", "coverage": [">", ">", ">"]}, "8589": {"id": 8589, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8995": {"id": 8995, "code": "a = 15;b = 18;c = 26;d = 35;e = 36;k = 18\nl=[a,b,c,d,e]\nf=0\nfor i in range(4):\n    for j in range(i+1,5):\n        d=abs(l[j]-l[i])\n        if(d>k):\n            f=1\n            break\nif(f==0):\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16634": {"id": 16634, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "12936": {"id": 12936, "code": "X = 5\nif  X < 9 and X > 1 and X % 2 == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "592": {"id": 592, "code": "S = \"a\"\nK = 25\nans = ''\nfor s in S:\n    to_a_cost = (26 - (ord(s) - 97)) % 26\n    if to_a_cost <= K:\n        ans += 'a'\n        K -= to_a_cost\n    else:\n        ans += s\nif K:\n    K %= 26\n    ans = ans[:-1] + chr(97 + (((ord(ans[-1]) - 97) + K) % 26))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "1024": {"id": 1024, "code": "n = 750\nfor i in range(1, 10):\n    l = [i, i, i]\n    num = int(''.join(map(str, l)))\n    if n <= num:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15333": {"id": 15333, "code": "from sys import stdin\nimport math\nx = 64146;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "15363": {"id": 15363, "code": "X = 12;Y = 3;Z = 1\nfor i in range(100000):\n    if X / (i* Y + (i + 1) * Z) >= 1:\n        pass\n    else:\n        print(i - 1)\n        break", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "8018": {"id": 8018, "code": "import sys\nimport math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nfor i in range(N):\n    if A[i] == 1:\n        ans = N\n        for j in range(max(0, i-(K-1)), min(N, i+K-1)):\n            ans = min(math.ceil(j/(K-1)) + math.ceil((N-j-1)/(K-1)), ans)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2402": {"id": 2402, "code": "N = 13;M = 3\nans = (N * (N-1)) // 2 + (M * (M-1)) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "19041": {"id": 19041, "code": "n = 12\nans = 0\ndeno = 10\nif n % 2 == 1:\n    pass\nelse:\n    while n//deno > 0:\n        ans += n//deno\n        deno *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "4519": {"id": 4519, "code": "import sys\ns = \"internationalization\"\nif len(s) < 3 or len(s) > 100:\n    sys.exit()\nprint(s[0:1]+str((len(s)-2))+s[-1])", "coverage": [">", ">", ">", "!", ">"]}, "7287": {"id": 7287, "code": "H = 10;N = 3\nA = [4, 5, 6]\nT = 0\nfor i in range(N):\n  T += A[i]\nif H-T <=0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2541": {"id": 2541, "code": "n = map(int, \"4 9 0 8\".split())\nbeginning = set([1, 9, 7, 4])\nprint('YES' if beginning == set(n) else 'NO')", "coverage": [">", ">", ">"]}, "8187": {"id": 8187, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(-((1 - N) // (K - 1)))", "coverage": [">", ">", ">"]}, "2259": {"id": 2259, "code": "a = 100;b = 100;c = 100\nprint(min(b,c),b+c-a if b + c >= a else 0)", "coverage": [">", ">"]}, "9333": {"id": 9333, "code": "s = \"2017/01/31\"\nprint(s.replace('2017', '2018'))", "coverage": [">", ">"]}, "16192": {"id": 16192, "code": "N = 5\nX = [6, 9, 4, 2, 11]\nM=max(X)\nX.remove(M)\nm=min([abs(2*x-M) for x in X])\nif (M+m)//2 in X:\n    m=(M+m)//2\nelse:\n    m=(M-m)//2\nprint(M,m)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16032": {"id": 16032, "code": "A = 20;B = 15\nprint(max(0, A - 2 * B))", "coverage": [">", ">"]}, "6": {"id": 6, "code": "S = ['x', 'y', 'z']\nk = 4\nAns=[0]*len(S)\nc=0\nfor i in range(len(S)):\n  if (26-(ord(S[i])-97))%26<=k:\n    Ans[i]=\"a\"\n    k=k-(26-(ord(S[i])-97))%26\n    c=c+(26-(ord(S[i])-97))%26\n  else:\n    Ans[i]=S[i]\n  if i==len(S)-1:\n    c=ord(Ans[i])+k%26\n    if ord(Ans[i])+k%26>=123:\n      c=c-26\n    Ans[i]=chr(c)\nprint(\"\".join(Ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "8887": {"id": 8887, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))", "coverage": [">", ">", ">", ">"]}, "15613": {"id": 15613, "code": "icase=0\nif icase==0:\n    x = 13;y = 3;z = 1\n    n=x//(y+z)\n    if x%(y+z)>=z:\n        print(n)\n    else:\n        print(n-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11830": {"id": 11830, "code": "m1 = 11\nm2 = 11\nif m1 < m2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2062": {"id": 2062, "code": "n = 100;a = 100;b = 100\nif a+b-n>0:\n  ans=a+b-n\nelse:\n  ans=0\nprint(min(a,b),ans,sep=' ')", "coverage": [">", ">", ">", "!", "!", ">"]}, "19313": {"id": 19313, "code": "N = 10\nprint(N * 2 if N % 2 == 1 else N)", "coverage": [">", ">"]}, "15909": {"id": 15909, "code": "a = 20;b = 15\nc = a - 2*b\nif c>0:\n    print(c)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "1700": {"id": 1700, "code": "n = 10.0;a = 3.0;b = 5.0\nprint(int(min(a,b)), int(max(a+b-n, 0)))", "coverage": [">", ">"]}, "3053": {"id": 3053, "code": "S = \"35753\"\nZ = 753\nfor i in range(3, len(S)+1):\n  s = int(S[i-3:i])\n  a = abs(753-s)\n  if Z-a>0:\n    Z = a\nprint(Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "55": {"id": 55, "code": "s = ['x', 'y', 'z']\nn = len(s)\nk = 4\nt = [ord(s[i]) - 97 for i in range(n)]\nfor i in range(n):\n    if k == 0:\n        break\n    x = 26 - t[i]\n    if 0 < x % 26 <= k:\n        k -= x\n        s[i] = \"a\"\nt[-1] = ord(s[-1]) - 97\nif k > 0:\n    s[-1] = chr((k + t[-1]) % 26 + 97)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1441": {"id": 1441, "code": "n = 750\nq, mod = divmod(n,111)\nif mod == 0:\n    print(q*111)\nelse:\n    print((q+1)*111)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14888": {"id": 14888, "code": "import math\nn = 2;p = 0\na = [1, 3]\nodd=0\neven=0\nfor i in range(n):\n  if a[i]%2==0:\n    even+=1\n  else:\n    odd+=1\nans=0\nt=1\nwhile t<=odd:\n  res=math.factorial(odd)//(math.factorial(t)*math.factorial(odd-t))\n  t+=2\n  if even!=0:\n    w=0\n    while w<=even:\n      res1=math.factorial(even)//(math.factorial(w)*math.factorial(even-w))\n      w+=1\n      ans+=res*res1\n  else:\n    ans+=res\nif p==1:\n  print(ans)\nelse:\n  print(2**n-ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "2355": {"id": 2355, "code": "import sys\nimport math\nN = 4;M = 3\nif not ( 0 <= N <= 100 and 0 <= M <= 100 ): sys.exit()\nif not ( 2 <= N+M ): sys.exit()\nif not ( isinstance(N,int) and isinstance(M,int) ): sys.exit()\nans = 0\nif N >= 2:\n    ans += math.factorial(N) // (math.factorial(N - 2) * math.factorial(2))\nif M >= 2:\n    ans += math.factorial(M) // (math.factorial(M - 2) * math.factorial(2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18340": {"id": 18340, "code": "h = 2\nw = 100\nn = 200\ncnt = 0\nblk = 0\nif h > w:\n  for i in range(w):\n    blk += h\n    cnt += 1\n    if blk >= n:\n      break\nelse:\n  for j in range(h):\n    blk += w\n    cnt += 1\n    if blk >= n:\n      break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9586": {"id": 9586, "code": "s = \"2017/01/07\"\nmodify = '2018'+ s[4:]\nprint(modify)", "coverage": [">", ">", ">"]}, "11796": {"id": 11796, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(\"1\" if M1 != M2 else \"0\")", "coverage": [">", ">", ">"]}, "19197": {"id": 19197, "code": "n = 5\nif n % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    for i in range(1, 30):\n        ans += n // (5**i * 2)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "18990": {"id": 18990, "code": "n = \"12\"\nm = len(n)\nn = int(n)\nif n%2==1:\n    print(0)\nelse:\n    if m==1:\n        print(0)\n    else:\n        ans = 0\n        i = 1\n        while  True:\n            ans_plus=n//(2*5**i)\n            if ans_plus==0:\n                break\n            ans += ans_plus\n            i += 1\n        print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7939": {"id": 7939, "code": "nim = 8;mike = 3\narray = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((nim+mike-3)//(mike-1))", "coverage": [">", ">", ">"]}, "2963": {"id": 2963, "code": "S = \"1111111111\"\nm = 0\nfor i in range(len(S)):\n    if i == 0:\n        m = abs(int(S[i: i + 3]) - 753)\n    elif i == len(S) - 2:\n        break\n    else:\n        m = min(m, abs(int(S[i: i + 3]) - 753))\nprint(m)    ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12733": {"id": 12733, "code": "x = 6\na = set([7,5,3])\nprint('YES' if x in a else 'NO')", "coverage": [">", ">", ">"]}, "3283": {"id": 3283, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 15\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11831": {"id": 11831, "code": "m1 = 11\nm2 = 12\nif m1 < m2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "16025": {"id": 16025, "code": "A = [12, 4]\nif A[0] < A[1]*2:\n    print(0)\nelse:\n    print(A[0]-A[1]*2)", "coverage": [">", ">", "!", "!", ">"]}, "17960": {"id": 17960, "code": "s = \"1700\"\nm = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\nif s[:2] not in m and s[2:] not in m:\n    print('NA')\nelif s[:2] not in m:\n    print('YYMM')\nelif s[2:] not in m:\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "11873": {"id": 11873, "code": "a = 11;b = 30\nA = 12;B = 1\nprint(\"1\" if A != a else \"0\")", "coverage": [">", ">", ">"]}, "10968": {"id": 10968, "code": "S = \"level\"\nn = len(S)\ns1 = S[:(n-1)//2]\ns2 = S[(n+3)//2-1:]\nif S[::-1]==S and s1[::-1]==s1 and s2[::-1]==s2:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11849": {"id": 11849, "code": "a = 11\nc = 12;d = 1\nif a != c and d == 1:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "6996": {"id": 6996, "code": "H = 20;N = 3\nl = [4, 5, 6]\ntotal=0\nfor k in range(N):\n  total+=l[k]\nif total>=H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4231": {"id": 4231, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nz = (c-a)*60 + (d-b)- e\nprint(z)", "coverage": [">", ">", ">"]}, "885": {"id": 885, "code": "k = 2\nt = 7\nflag = True\nfor i in range(k):\n  if t % k == 0:\n    print(i + 1)\n    flag = False\n    break\n  else:\n    t = (t * 10 + 7) % k\nif flag:\n  print('-1')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "2781": {"id": 2781, "code": "s = \"1111111111\"\nm=999999999\nfor i in range(0,len(s)-2):\n    k=int(s[i:i+3])\n    if abs(k-753)<m:\n        m=abs(k-753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5375": {"id": 5375, "code": "from math import ceil\nprint(ceil(int(\"2\") / 2))", "coverage": [">", ">"]}, "434": {"id": 434, "code": "S = ['a']\nK = 25\nN=len(S)\nfor i in range(N):\n    if S[i]==\"a\":\n        continue\n    sa=ord(\"z\")-ord(S[i])+1\n    if sa<=K:\n        K-=sa\n        S[i]=\"a\"\nif K!=0:\n    K%=26\n    S[i]=chr(ord(S[i])+K)\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "13083": {"id": 13083, "code": "age = 6\nif age in [7,5,3]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "19416": {"id": 19416, "code": "a = 3\nif int(a % 2) == 0:\n    print(a)\nelse:\n    print(a * 2)", "coverage": [">", ">", "!", "!", ">"]}, "674": {"id": 674, "code": "k = 2\nsevens = 7 % k\nif k % 2 ==0:\n    print(-1)\nelse:\n    for i in range(k):\n        if sevens % k ==0:\n            print(i+1)\n            break\n        else:\n            sevens = (sevens*10 + 7) % k\n    else:\n        print(-1)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "13913": {"id": 13913, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=True\ns=False\ne=0\nc=1\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        continue\n    if a[i]>a[i-1]:\n        flag=True\n        e=i\n        break\n    elif a[i]<a[i-1]:\n        flag=False\n        e=i\n        break\nif e==n:\n    print(1)\n    exit()\nfor i in range(e+1,n):\n    if a[i]==a[i-1]:\n        continue\n    if s==True:\n        if a[i]>a[i-1]:\n            s=False\n            flag=True\n        else:\n            s=False\n            flag=False\n    elif a[i]>a[i-1] and flag==False:\n        c+=1\n        s=True\n    elif a[i]<a[i-1] and flag==True:\n        c+=1\n        s=True\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "2879": {"id": 2879, "code": "S = \"35753\"\nans = 10000\nfor i in range(len(S)-2):\n    tmp = abs(753-int(S[i:i+3]))\n    if tmp < ans:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4990": {"id": 4990, "code": "s = \"internationalization\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "9786": {"id": 9786, "code": "n = 8\ns = \"))))((((\"\nneed_left = 0\npointer = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        pointer += 1\n    else:\n        if pointer == 0:\n            need_left += 1\n        else:\n            pointer -= 1\nres = \"\"\nfor i in range(need_left):\n    res += \"(\"\nres += s\nfor i in range(pointer):\n    res += \")\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4468": {"id": 4468, "code": "s = \"internationalization\"\nprint(s[0],len(s[1:-1]),s[-1],sep='')", "coverage": [">", ">"]}, "4887": {"id": 4887, "code": "s = \"xyz\"\nres = s[0] + str(len(s) - 2) + s[-1]\nprint(res)", "coverage": [">", ">", ">"]}, "3413": {"id": 3413, "code": "A = 20;B = 15\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", ">", "!", ">"]}, "4783": {"id": 4783, "code": "moji = \"internationalization\"\nprint(moji[0] + str(len(moji)-2) + moji[-1]) ", "coverage": [">", ">"]}, "6624": {"id": 6624, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nsum = 0\nfor i in range(len(b)):\n    ai = bisect.bisect_left(a, b[i])\n    ci = bisect.bisect_right(c, b[i])\n    sum += ai * (n - ci)\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8371": {"id": 8371, "code": "N = 1\nA = [2]\nB = [3]\nma = 0\nfor i in range(N):\n    c = sum(A[:i+1]) + sum(B[i:])\n    ma = max(ma, c)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "49": {"id": 49, "code": "s = \"xyz\"\nK = 4\nif K>len(s)*26:\n    d = (K-len(s)*26)//26\n    K = K-26*d\nx = \"\"\nfor i in range(len(s)):\n    if i<len(s)-1 and (26-(ord(s[i])-ord(\"a\")))%26 <= K:\n        x += \"a\"\n        K -= (26-(ord(s[i])-ord(\"a\")))%26\n    elif i<len(s)-1:\n        x += s[i]\n    elif i==len(s)-1:\n        k = ord(s[i])+K%26\n        if k<=122:\n            x += chr(k)\n        else:\n            x += chr(k-26)\nprint(x)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14696": {"id": 14696, "code": "import sys\nN = 2;P = 0\nA = [1, 3]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a % 2 == 1:\n        kisu += 1\n    else:\n        gusu += 1\ntotal = 2 ** N \nif kisu == 0:\n    ans = 2 ** gusu\nelse:   \n    ans = (2 ** gusu) * (2 ** (kisu - 1)) \nif P == 0:\n    print(ans)\nelse:\n    print(total - ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "2499": {"id": 2499, "code": "s = {'9', '4', '1', '7'}\na = {'1','9','7','4'}\ns = s&a\nif len(s) == 4:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10685": {"id": 10685, "code": "A = 8;B = 12;K = 2\ncount=0\ni=min(A,B)+1\nwhile count<K:\n    i-=1\n    if A%i==0 and B%i==0:\n        count+=1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4332": {"id": 4332, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt = 0\nif h1 == h2:\n    t = m2 - m1\nelse:\n    if m2 >= m1:\n        t = (h2 - h1) * 60 + m2 - m1\n    else:\n        t = (h2 - h1 -1) * 60 + m2 +60 - m1\nprint(t - k)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "3514": {"id": 3514, "code": "A = 12;B = 4\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "8722": {"id": 8722, "code": "from itertools import accumulate\nn = 1\nA = [2]\nB = [3]\nSA = list(accumulate(A))\nSB = list(accumulate(B))\nans = 0\nfor i in range(n):\n    if i >= 1:\n        ans = max(SA[i] + SB[n - 1] - SB[i - 1], ans)\n    else:\n        ans = max(SA[i] + SB[n - 1], ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13012": {"id": 13012, "code": "x = 5\na = False\nif x == 7 or x == 5 or x == 3:\n  a = True\nprint('YES' if a else 'NO')", "coverage": [">", ">", ">", ">", ">"]}, "2883": {"id": 2883, "code": "S = \"1111111111\"\nM=1000\nN=len(S)\nfor i in range(N-2):\n  M=min(abs(753-int(S[i]+S[i+1]+S[i+2])),M)\nprint(M)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19050": {"id": 19050, "code": "N = 5\nif N % 2 == 1:\n  print(0)\nelse:\n  i = 1\n  ans = 0\n  while 2*(5**i) <= N:\n    div = 2 * (5 ** i)\n    ans += int(N//div)\n    i += 1\n  print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6756": {"id": 6756, "code": "H = 211;N = 5\na1 = ['31', '41', '59', '26', '53']\na2=[int(i) for i in a1]\nx=0\nfor i in a2:\n    x+=i\nprint('Yes' if x>=H else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "995": {"id": 995, "code": "n = 111\nif n % 100 <= n // 100 * 11:\n  print(n // 100 * 111)\nelse:\n  print((n // 100 + 1) * 111)", "coverage": [">", ">", ">", "!", "!"]}, "6063": {"id": 6063, "code": "n = 100\nif n%2 == 1:\n  print(n//2 + 1)\nelse:\n  print(n//2)", "coverage": [">", ">", "!", "!", ">"]}, "1355": {"id": 1355, "code": "if __name__ == '__main__':\n    n = 112\n    list =[111,222,333,444,555,666,777,888,999]\n    for i in list:\n        if i>= n:\n            print(i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7450": {"id": 7450, "code": "a = \"211\";b = \"5\"\na=int(a)\nb=int(b)\nc = [31, 41, 59, 26, 53]\nif sum(c)>=a:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3790": {"id": 3790, "code": "X = 13;Y = 3;Z = 1\nans = 0\nfor i in range(1, X):\n    if i*Y+(i+1)*Z <= X:\n        ans = i\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "3701": {"id": 3701, "code": "a = 20;b = 30\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "9860": {"id": 9860, "code": "N = 3\nS = \"())\"\nans = S\ncount = 0\nfor i in range(N):\n    if(S[i] == \"(\"):\n        count += 1\n    else:\n        count -= 1\n    if(count<0):\n        ans = \"(\" + ans\n        count += 1\ncount = 0\nfor i in range(N-1,-1,-1):\n    if(S[i] == \"(\"):\n        count += 1\n    else:\n        count -= 1\n    if(count>0):\n        ans = ans + \")\"\n        count -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "8907": {"id": 8907, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nif N == 1:\n    print(A1[0] + A2[0])\n    exit()\ncum_A1 = [A1[0]] * N\nfor i in range(1, N):\n    cum_A1[i] = cum_A1[i - 1] + A1[i]\ncum_A2 = [A2[0]] * N\nfor i in range(1, N):\n    cum_A2[i] = cum_A2[i - 1] + A2[i]\nbest_total = 0\nfor down in range(N):\n    total = cum_A1[down]\n    total += cum_A2[-1]\n    if down >= 1:\n        total -= cum_A2[down - 1]\n    best_total = max(total, best_total)\nprint(best_total)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16085": {"id": 16085, "code": "A = 12;B = 4\nif A-2*B<0:\n    print(0)\n    exit(0)\nprint(A-2*B)", "coverage": [">", ">", "!", "!", ">"]}, "12613": {"id": 12613, "code": "A = 8;B = 12;K = 2\np = []\ni = 0\nm = min(A,B)\nfor i in range(1,m+1):\n  if A%i == 0 and B%i == 0:\n    p.append(i)\np.sort()\nprint(p[len(p)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9989": {"id": 9989, "code": "N = 6\nS = \")))())\"\nwhile True:\n    lv = 0\n    lmin = len(S)\n    for i in range(len(S)):\n        if S[i]==\"(\":\n            lv += 1\n        else:\n            lv -= 1\n        lmin = min(lmin,lv)\n    if lmin<0:\n        S = \"(\"*(-lmin)+S\n    else:break\nlv = 0\nfor i in range(len(S)):\n    if S[i]==\"(\":\n        lv += 1\n    else:\n        lv -= 1\nif lv>0:\n    S = S+\")\"*lv\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "2076": {"id": 2076, "code": "N = 10;A = 7;B = 5\ncheck = [0 for _ in range(N)]\nfor i in range(A):\n    check[i] += 1\nfor i in range(B):\n    check[-(i + 1)] += 1\ncnt = 0\nfor c in check:\n    if c == 2:\n        cnt += 1\nprint(min(A, B), cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11150": {"id": 11150, "code": "S = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nk = (len(S) -1) // 2 \nT = S[0:k]\nprint(\"Yes\" if S == S[::-1] and T == T[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "5601": {"id": 5601, "code": "x = 100\nprint(x//2+x%2)", "coverage": [">", ">"]}, "18542": {"id": 18542, "code": "H = 3\nW = 7\nN = 10\ncnt = 0\nres = 0\nwhile True:\n    if cnt >= N:\n        break\n    cnt += max(H, W)\n    res += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1526": {"id": 1526, "code": "n = 111\na = n // 111\nb = n % 111\nif b > 0:\n    ans = (a + 1) * 111\nelse:\n    ans = a * 111   \nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "5774": {"id": 5774, "code": "n = 2\nprint((n//2)+int(n%2!=0))", "coverage": [">", ">"]}, "6101": {"id": 6101, "code": "N = 2\nans = -(-N // 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "11528": {"id": 11528, "code": "s = \"SUN\"\ndays = [\"\", \"SAT\", \"FRI\", \"THU\", \"WED\", \"TUE\", \"MON\", \"SUN\"]\nprint(days.index(s))", "coverage": [">", ">", ">"]}, "2894": {"id": 2894, "code": "S = \"35753\"\nans = 753\nfor i in range(len(S)-2):\n  ans = min(ans, abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17884": {"id": 17884, "code": "n = ['0', '1', '1', '2']\nx = int(n[0]+n[1])\ny = int(n[2]+n[3])\nif 1 <= x and x <= 12:\n  if 1 <= y and y <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelif 1 <= y and y <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "5945": {"id": 5945, "code": "N = 2\nprint(int((N+2-1)/2))", "coverage": [">", ">"]}, "6972": {"id": 6972, "code": "import sys\ninput = sys.stdin.readline\nH = 20;N = 3\nA = [4, 5, 6]\nprint('Yes' if sum(A)>=H else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "17219": {"id": 17219, "code": "a = \"D\";b = \"D\"\nif (a=='H')and(b=='H'):\n    print('H')\nelif (a=='H')and(b=='D'):\n    print('D')\nelif (a=='D')and(b=='D'):\n    print('H')\nelif (a=='D')and(b=='H'):\n    print('D')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9275": {"id": 9275, "code": "s = \"2017/01/31\"\nprint('2018/01/' + s[8:])", "coverage": [">", ">"]}, "16614": {"id": 16614, "code": "a = \"H\";b = \"H\"\nprint((\"D\", \"H\")[a == b])", "coverage": [">", ">"]}, "8944": {"id": 8944, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7035": {"id": 7035, "code": "H = 10;N = 3\nA = 15\nif H<=A:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "12316": {"id": 12316, "code": "S = \"atcoder\"\ns=len(S)\na=''\nb=''\nfor i in range((s-1)//2):\n    a+=S[i]\nfor n in range((s+3)//2-1,s):\n    b+=S[n]\nif a==b:\n    A=a[::-1]\n    B=b[::-1]\n    if A==a and B==b:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11195": {"id": 11195, "code": "S = \"akasaka\"\nN = len(S)\nsList = [str(s) for s in S]\nisPalindrome = 1\nstr1 = ''\nstr2 = ''\nstr3 = ''\nstr4 = ''\nfor i in range(N):\n  if (sList[i] != sList[N - 1 - i]):\n    isPalindrome = 0\nif isPalindrome == 1:\n  for i in range(int((N - 1) / 2)):\n    str1 += sList[i]\n    str2 += sList[int((N - 1) / 2 - 1 - i)]\n    str3 += sList[int((N + 3) / 2 - 1 + i)]\n    str4 += sList[N - 1 - i]\n    if str1 != str2:\n      isPalindrome = 0\n    if str3 != str4:\n      isPalindrome = 0\nif isPalindrome == 0:\n  print('No')\nelse:\n  print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4857": {"id": 4857, "code": "moji = \"xyz\"\nstart = moji[0]\nlength = len(moji)\nend = moji[length - 1]\ncentre = length - 2\nprint(start + str(centre) + end)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15071": {"id": 15071, "code": "N = 3;P = 0\nA = [1, 1, 1]\nx = y = 0\nfor i in range (N):\n  if A[i]%2 == 0:\n    x += 1\n  else:\n    y += 1\nif P%2 == 0:\n  print(2**N if y == 0 else 2**(N-1))\nelse:\n  print(0 if y == 0 else 2**(N-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "18425": {"id": 18425, "code": "h = 3\nw = 7\nn = 10\nk = max(h, w)\nprint((n + k - 1) // k)", "coverage": [">", ">", ">", ">", ">"]}, "13551": {"id": 13551, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "3340": {"id": 3340, "code": "A = 12;B = 4\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "7755": {"id": 7755, "code": "N = 3;K = 3\nA = [1, 2, 3]\nans = 1 + (N - K) // (K - 1)\nif (N - K) % (K - 1) != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "2412": {"id": 2412, "code": "n = 13;m = 3\nimport math \nif n>=2 and m>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2) + math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif n<2 and m>=2 :\n  ans =  math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif m<2 and n>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2)\nelse:\n  ans = 0\nprint(int(ans))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "10847": {"id": 10847, "code": "S = \"atcoder\"\nN = len(S)\nflag = 0\nif S==S[::-1]:\n    x = S[:N//2]\n    if x==x[::-1]:\n        flag = 1\nif flag==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "6416": {"id": 6416, "code": "n = 3\nan = [1, 1, 1]\nbn = [0, 2, 2, 2]\ncn = [3, 3, 3]\ndpb = [0]*(n+1)\ndpc = [0]*n\ncnt = 0\nfor i in range(n+1):\n  while cnt < n and bn[i] > an[cnt]:\n    cnt += 1\n  dpb[i] = cnt\ncnt = 0\ntemp = 0\nfor i in range(n):\n  while cnt < n+1 and cn[i] > bn[cnt]:\n    temp += dpb[cnt]\n    cnt += 1\n  dpc[i] = temp\nprint(sum(dpc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4267": {"id": 4267, "code": "A = 10;B = 0;C = 15;D = 0;E = 30\nL = (C - A) * 60 + (D - B)\nprint(L - E)", "coverage": [">", ">", ">"]}, "6851": {"id": 6851, "code": "import math\nH = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif H <= sum(A):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4836": {"id": 4836, "code": "s = \"xyz\"\na = str(len(s) - 2)\nS = s[0] + a + s[len(s) - 1]\nprint(S)", "coverage": [">", ">", ">", ">"]}, "14598": {"id": 14598, "code": "N = 2;P = 0\nA = [1, 3]\nodd = 0\nfor a in A:\n    if a % 2 != 0:\n        odd += 1\nif odd == 0:\n    if P == 1:\n        res = 0\n    else:\n        res = 2 ** N\nelse:\n    res = 2 ** (N - 1)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "1846": {"id": 1846, "code": "N = 10;A = 3;B = 5\nmaxab = min([A , B])\nminab = max([A + B - N , 0] )\nprint(str(maxab) + \" \" + str(minab))", "coverage": [">", ">", ">", ">"]}, "16814": {"id": 16814, "code": "a = \"D\";b = \"D\"\nif a=='H':\n    if b=='H':print('H')\n    else: print('D')\nelse:\n    if b=='H':print('D')\n    else: print('H')", "coverage": [">", ">", "!", "!", "!", ">", ">"]}, "17324": {"id": 17324, "code": "s = \"D D\"\nif s == 'H H' or s == 'D D':\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "6403": {"id": 6403, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    ia = min(bisect.bisect_left(A,b),N-1)\n    ic = min(bisect.bisect_right(C,b),N-1)\n    a = ia if A[ia]>=b else ia+1\n    c = N-ic-1 if C[ic]<=b else N-ic\n    ans += a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14783": {"id": 14783, "code": "n = 2;p = 0\na = [1, 3]\no = 0\nfor i in a:\n    if  i % 2:\n        o += 1 \ne = n-o\nif o != 0:\n    print((2**e)*int(2**(o-1)))\nelse:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "6694": {"id": 6694, "code": "a = 211;b = 5\nn = [31, 41, 59, 26, 53]\nif sum(n) >= a:\n  print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", "!", ">"]}, "18870": {"id": 18870, "code": "n = 12\nif n%2 == 1:\n    print(0)\nelse:\n    if n < 10:\n        print(0)\n    else:\n        list5 = []\n        flag = True\n        num = 5\n        while flag:\n            tmp = n//(num*2)\n            if tmp > 0:\n                list5.append(tmp)\n                num *= 5\n            else:\n                flag = False\n        ans_list = []\n        for i in range(len(list5)-1):\n            ans_list.append(list5[i] - list5[i+1])\n        ans_list.append(list5[-1])\n        ans = 0\n        for i in range(len(ans_list)):\n            ans += ans_list[i]*(i+1)\n        print(ans)", "coverage": [">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14703": {"id": 14703, "code": "n = 1;p = 1\na = [0]\nif a.count(1)==0:\n  print((1-p)*2**n)\nelse:\n  print(2**(n-1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "14138": {"id": 14138, "code": "N = 7\nsrc = [1, 2, 3, 2, 1, 999999999, 1000000000]\nasc = None\nans=1\nfor i in range(N-1):\n    d = src[i+1]-src[i]\n    if d==0:\n        continue\n    if asc==None:\n        asc = d > 0\n        continue\n    if (asc and d<0) or (not asc and d>0):\n        asc = None\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4392": {"id": 4392, "code": "H = 10;M = 0;h = 12;m = 0;k = 120\ntime = h*60 + m - (H*60 + M) - k\nprint(time)", "coverage": [">", ">", ">"]}, "17147": {"id": 17147, "code": "a = \"D\";b = \"H\"\nif b == \"H\":\n    b = \"HD\"\nelse:\n    b = \"DH\"\nprint(b[0] if a == \"H\" else b[1])", "coverage": [">", ">", ">", "!", "!", ">"]}, "3326": {"id": 3326, "code": "A = 20;B = 15\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "16117": {"id": 16117, "code": "a = [20, 15]\nprint(0 if a[0]-2*a[1]<=0 else a[0]-2*a[1])", "coverage": [">", ">"]}, "3474": {"id": 3474, "code": "a = 20;b = 30\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "7169": {"id": 7169, "code": "H = 10;N = 3\nA = [4, 5, 6]\nAll = sum(A)\nif H - All > 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18876": {"id": 18876, "code": "N = 5\nif N % 2 == 1:\n    print(0)\nelse:\n    cnt = 0\n    for i in range(0,30):\n        tmp = 10*(5**i)\n        a = N // tmp\n        cnt += a\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17930": {"id": 17930, "code": "S = \"1700\"\na=int(S[:2])\nb=int(S[2:])\naa = a < 13 and a != 0\nbb = b < 13 and b != 0\nif aa and bb:\n    ans = 'AMBIGUOUS'\nelif aa and not bb:\n    ans = 'MMYY'\nelif bb and not aa:\n    ans = 'YYMM'\nelse:\n    ans = 'NA'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "18421": {"id": 18421, "code": "import math\nh = 2\nw = 100\nn = 200\nprint(math.ceil(n/max(h,w)))", "coverage": [">", ">", ">", ">", ">"]}, "6217": {"id": 6217, "code": "import sys\nfrom bisect import bisect_right as br\ninput = sys.stdin.readline\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nb.sort()\nc.sort()\nres = 0\nbt = [0] * N\nfor j in range(N):\n  y = b[j]\n  k = br(c, y)\n  bt[j] = N - k\ncsbt = [0] * (N + 1)\nfor i in range(N):\n  csbt[i + 1] = csbt[i] + bt[i]\nfor i in range(N):\n  x = a[i]\n  j = br(b, x)\n  if j < N:\n    res += csbt[-1] - csbt[j]\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14216": {"id": 14216, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n        cur = A[i]\n        continue\n    if(flag == 1 and A[i] < cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 1 and A[i] > cur):\n        cur = A[i]\n        continue\n    if(flag == 0 and A[i] > cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 0 and A[i] < cur):\n        cur = A[i]\n        continue\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "7095": {"id": 7095, "code": "a = 10;b = 3\narr = [4, 5, 6]\nif sum(arr) >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7238": {"id": 7238, "code": "h = 211;n = 5\nl = [31, 41, 59, 26, 53]\nprint(\"Yes\" if h <= sum(l) else \"No\")", "coverage": [">", ">", ">"]}, "3962": {"id": 3962, "code": "X = 13;Y = 3;Z = 1\nans = 0\nX -= Z\nwhile True:\n    if X >= Y+Z:\n        ans += 1\n        X -= (Y+Z)\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2057": {"id": 2057, "code": "n = 10;a = 3;b = 5\nl = []\nl.append(min(a,b))\nif n >= a + b:\n    l.append(0)\nelse:\n    l.append(a + b - n)\nprint(l[0],l[1])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11837": {"id": 11837, "code": "a = 11;b = 30\nc = 12;d = 1\nif a + 1 == c and d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "431": {"id": 431, "code": "s = \"xyz\"\nk = 4\nv = list(s)\nn = len(s)\na = [0 for i in range(n)]\nfor i in range(n):\n  a[i] = (123 - ord(s[i]))%26\n  if k == 0:\n    break\n  if k >= a[i]:\n    v[i] = 'a'\n    k -= a[i]\nif k > 0:\n  k %= 26\n  v[n-1] = chr(ord(v[n-1])+k)\nprint (''.join(v))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "4501": {"id": 4501, "code": "s = \"internationalization\"\nss=len(s[1:len(s)-1])\nsss=str(ss)\nprint(s[0]+sss+s[-1])", "coverage": [">", ">", ">", ">"]}, "1764": {"id": 1764, "code": "if __name__ == '__main__':\n    N = 10;A = 7;B = 5\n    print(min(A, B), max(A+B - N, 0))", "coverage": [">", ">", ">"]}, "3298": {"id": 3298, "code": "a = 12;b = 4\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "11511": {"id": 11511, "code": "days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ni = 0\nprint(7 - i if i < 7 else 7)", "coverage": [">", ">", ">"]}, "14919": {"id": 14919, "code": "n = 1;p = 1\na = [50]\nlength = len(a)\neven = len([i for i in a if i % 2 == 0])\nodd = len([i for i in a if i % 2 == 1])\nif length == even and p == 1:\n    print(0)\nelif length == even:\n    print(2 ** n)\nelse:\n    print(2 ** n // 2)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "1307": {"id": 1307, "code": "N = 750\nX=set(str(N))\nY=len(X)\nif Y==1:\n  print(N)\nif Y!=1:\n  Z=0\n  for i in range(111,1000,111):\n    if N-i<0:\n      Z+=i\n      break\n  print(Z)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11890": {"id": 11890, "code": "s1 = [11, 16]\ns2 = [11, 17]\nif int(s1[0])+1 == int(s2[0]):\n         print(1)\nelse:\n         print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17055": {"id": 17055, "code": "a = \"H\";b = \"H\"\nif a==\"H\" and b==\"H\":\n    print(\"H\")\nelif a==\"H\" and b==\"D\":\n    print(\"D\")\nelif a==\"D\" and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9455": {"id": 9455, "code": "S = \"2017/01/31\"\nprint(S.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "6870": {"id": 6870, "code": "h = \"20\";n = \"3\"\na = ['4', '5', '6']\nattack = 0\nfor i in range(int(n)):\n    attack += int(a[i])\nif int(h) - attack <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8634": {"id": 8634, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nfor i in range(1,N): A[i]+=A[i-1]\nfor i in range(N-2,-1,-1): B[i]+=B[i+1]\nans=max(A[i]+B[i] for i in range(N))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17195": {"id": 17195, "code": "a = \"D\";b = \"D\"\nif a==\"H\":\n  print(b)\n  exit()\nelse:\n  if b==\"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "7764": {"id": 7764, "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint((N+K-3)//(K-1))", "coverage": [">", ">", ">"]}, "14250": {"id": 14250, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\np = 0\nres = 0\nwhile p < N:\n    while p + 1 < N and A[p] == A[p + 1]:\n        p += 1\n    if p + 1 < N and A[p] < A[p + 1]:\n        while p + 1 < N and A[p] <= A[p + 1]:\n            p += 1\n    elif p + 1 < N and A[p] > A[p + 1]:\n        while p + 1 < N and A[p] >= A[p + 1]:\n            p += 1\n    res += 1\n    p += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3029": {"id": 3029, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\ns = \"1111111111\"\nn=len(s)\nres=900\nfor i in range(n-2):\n    if abs(753-int(s[i:i+3]))<res:\n        res=abs(753-int(s[i:i+3]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8638": {"id": 8638, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nmax=0\nfor i in range(n):\n  tmp=sum(a[:i+1])\n  tmp+=sum(b[i:])\n  if max<tmp:\n    max=tmp\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5889": {"id": 5889, "code": "a = 100\nif a/2==int(a/2):\n    print(int(a/2))\nelse:\n    print(int(a/2)+1)", "coverage": [">", ">", ">", "!", "!"]}, "3979": {"id": 3979, "code": "x = 12;y = 3;z = 1\np = y + z + z\nc = 0\nwhile p <= x:\n    c += 1\n    p = p + y + z\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12393": {"id": 12393, "code": "S1 = \"atcoder\"\nN = len(S1)\nS2 = S1[::-1]\na = S1 == S2\nS3 = S1[:int((N - 1) / 2)]\nS4 = S3[::-1]\nb = S3 == S4\nS5 = S1[int((N + 3) / 2) - 1:]\nS6 = S5[::-1]\nc = S5 == S6\nif a and b and c:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3724": {"id": 3724, "code": "N = 20;M = 15\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "18608": {"id": 18608, "code": "hei = 3\nwei = 7\nn = 10\nkuro =0\ncount = 0\nif hei > wei:\n  data = hei\nelse:\n  data = wei \nwhile kuro<n:\n  kuro +=data \n  count +=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "3348": {"id": 3348, "code": "A = 20;B = 30\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "8933": {"id": 8933, "code": "n = 5\nal = [3, 2, 2, 4, 1]\nbl = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    tmp = sum(al[0:i+1]) + sum(bl[i:])\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12585": {"id": 12585, "code": "a = 1;b = 1;k = 1\nl = []\nfor i in range(1,min(a,b)+1):\n    if a%i == 0 and b%i == 0:\n        l.append(i)\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">"]}, "13527": {"id": 13527, "code": "A = \"haiku\";B = \"atcoder\";C = \"tasks\"\nprint(A, B, C)", "coverage": [">", ">"]}, "4471": {"id": 4471, "code": "if __name__ == '__main__':\n    a = \"internationalization\"\n    print(a[0] + str(len(a)-2)+a[len(a)-1])", "coverage": [">", ">", ">"]}, "13518": {"id": 13518, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5]+' '+s[6:13]+' '+s[14:])", "coverage": [">", ">"]}, "16995": {"id": 16995, "code": "a = \"H\";b = \"H\"\nprint('H' if a==b else \"D\")", "coverage": [">", ">"]}, "16157": {"id": 16157, "code": "n = 2\na = [100, 0]\na.sort()\nimport bisect\nbl = bisect.bisect_left(a, a[-1]//2)\nif abs(a[-1]/2 - a[bl]) < abs(a[-1]/2 - a[bl-1]):\n    print(a[-1] , a[bl])\nelse:\n    print(a[-1] , a[bl-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9482": {"id": 9482, "code": "s = \"2017/01/07\"\nans='2018'+s[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "12330": {"id": 12330, "code": "S = \"level\"\nN=len(S)\ns=''.join(list(reversed(S)))\nT=S[0:int((N-1)/2)]\nNT=len(T)\nt=''.join(list(reversed(T)))\nU=S[int((N+1)/2):N]\nNU=len(U)\nu=''.join(list(reversed(U)))\nif S[0:int((N-1)/2)] == s[0:int((N-1)/2)] and T == t and U == u:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "437": {"id": 437, "code": "s = \"codefestival\"\nn = 100\nl=\"\"\nfor i in range(len(s)):\n    f=(26+ord(\"a\")-ord(s[i]))%26\n    if n>=f:n-=f;l+=\"a\"\n    else:l+=s[i]\n    if n==0:print(l+s[i+1:]);exit()\nprint(l[:-1]+chr(ord(l[-1])+n%26))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3865": {"id": 3865, "code": "A = 12;B = 3;C = 1\nprint((A-C)//(B+C))", "coverage": [">", ">"]}, "16853": {"id": 16853, "code": "a = \"D\";b = \"D\"\nprint('H' if a == b else 'D')", "coverage": [">", ">"]}, "12530": {"id": 12530, "code": "a = 100;b = 50;k = 4\ncounter = 0\nfor i in list(range(1,min(a,b)+1))[::-1] :\n    if a%i == 0 and b%i == 0 :\n        counter += 1\n    if counter == k :\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4860": {"id": 4860, "code": "a = \"xyz\"\nprint(f\"{a[0]}{len(a[1:-1])}{a[-1]}\")", "coverage": [">", ">"]}, "12261": {"id": 12261, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\ns = \"atcoder\"\nn = len(s)\nt = s[0:(n-1)//2]\nq = s[(n+2)//2:n]\nif s == s[::-1] and t == t[::-1] and q == q[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6275": {"id": 6275, "code": "import bisect\nimport sys\ninput = sys.stdin.readline\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\ncnt = 0\na.sort()\nc.sort()\nfor i in range(n):\n    cnt += (bisect.bisect_left(a, b[i])) * (n-bisect.bisect_right(c, b[i]))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8810": {"id": 8810, "code": "from itertools import accumulate\nn = 7\nau = [3, 3, 4, 5, 4, 5, 3]\nal = [5, 3, 4, 4, 2, 3, 2]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1856": {"id": 1856, "code": "N = 10;A = 7;B = 5\nif A < B:\n    print(A)\nelse:\n    print(B)\nif ((A + B) - N) >= 0:\n    print((A + B) - N)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "14942": {"id": 14942, "code": "inp1 = 1;inp2 = 1\nc = [0]\nadd = sum(c)\nif add:\n    ans = 2**(inp1-1)\nelse:\n    ans = 2**inp1*(1-inp2)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "4586": {"id": 4586, "code": "s = \"smiles\"\nl = len(s)\nfront = s[0]\nback = s[l-1]\ncenter = str(l-2)\nans = front + center + back\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14171": {"id": 14171, "code": "import collections\nimport itertools as it\nimport math\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n == 1:\n    print(1)\nelse:\n    ans = 1\n    state = lambda n1, n2: 0 if n1 == n2 else (1 if n2 > n1 else -1)\n    diff = [state(a1, a2) for a1, a2 in zip(a[:-1], a[1:]) if state(a1, a2) != 0]\n    p = 1\n    while p < len(diff):\n        if abs(diff[p] - diff[p-1]) == 2:\n            ans += 1\n            p += 1\n        p += 1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6846": {"id": 6846, "code": "h = 20;n = 3\na = [4, 5, 6]\nx = sum(a)\nif h <= x: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", ">"]}, "17821": {"id": 17821, "code": "S = \"0112\"\nl, r = int(S[:2]), int(S[2:])\nif 0<l<13 and 0<r<13:\n    print(\"AMBIGUOUS\")\nelif 0<l<13:\n    print(\"MMYY\")\nelif 0<r<13:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3628": {"id": 3628, "code": "a = 20;b = 30\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", "!"]}, "18267": {"id": 18267, "code": "import math\nh = 14\nw = 12\nn = 112\nprint(math.ceil(n / h) if h > w else math.ceil(n / w))", "coverage": [">", ">", ">", ">", ">"]}, "8197": {"id": 8197, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nprint(1 if n <= k else 1 + -(-(n - k) // (k - 1)))", "coverage": [">", ">", ">"]}, "18837": {"id": 18837, "code": "h = 2\nw = 100\nn = 200\nif h >= w:\n    _max = h\n    _min = w\nelse:\n    _max = w\n    _min = h\nfor i in range(1, _min+1):\n    if _max * i >= n:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "2105": {"id": 2105, "code": "n = 10;a = 7;b = 5\nma = min(a,b)\nmi = max(0, a+b-n)\nprint(str(ma) + ' ' + str(mi))", "coverage": [">", ">", ">", ">"]}, "10669": {"id": 10669, "code": "import math\na = 100;b = 50;k = 4\nc=math.gcd(a,b)\nd=[i for i in range(1,c+1) if c%i==0]\nprint(d[-k])", "coverage": [">", ">", ">", ">", ">"]}, "16812": {"id": 16812, "code": "a = \"H\";b = \"H\"\nif a=='H':\n    if b=='H':print('H')\n    else: print('D')\nelse:\n    if b=='H':print('D')\n    else: print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "17675": {"id": 17675, "code": "s = \"1700\"\na, b = int(s[:2]), int(s[2:])\nif 1<=a<=12 and 1<=b<=12:\n  print('AMBIGUOUS')\nelif 1<=b<=12:\n  print('YYMM')\nelif 1<=a<=12:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12784": {"id": 12784, "code": "n = 5\nif(3<=n<=7 and n%2==1):print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", "!"]}, "11041": {"id": 11041, "code": "S = \"akasaka\"\nflag=0\nif S==S[::-1]:\n  s = S[:(len(S)-1)//2]\n  if s==s[::-1]:\n    s2 = S[(len(S)+3)//2-1:]\n    if s2==s2[::-1]:\n      flag=1\nif flag:print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "14468": {"id": 14468, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nsw=\"1\"\nans=1\nfor i in range(N-1):\n    if sw==\"1\":\n        if A[i]>A[i+1]:\n            sw=\"2\"\n        if A[i]<A[i+1]:\n            sw=\"3\"\n    elif sw==\"2\":\n        if A[i]<A[i+1]:\n            ans+=1\n            sw=\"1\"\n    elif sw==\"3\":\n        if A[i]>A[i+1]:\n            ans+=1\n            sw=\"1\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "11623": {"id": 11623, "code": "days = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ncurrent_day = \"SUN\"\ni = 0\nwhile True:\n    if days[i] == current_day:\n        break\n    i += 1\nprint(7 - i)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "8279": {"id": 8279, "code": "n = 3;k = 3\na = [1, 2, 3]\np = min(a)\na += [p]\nans,i,temp = 0,0,0\nwhile i<n:\n  if a[i]==p:\n    m = -(-(i-temp)//(k-1))\n    ans += m\n    temp += m*(k-1)+1\n    i = temp\n  else:\n    i += 1\nans += -(-(n-temp)//(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "12730": {"id": 12730, "code": "X = 5\nwk = (X-7)*(X-5)*(X-3)\nif wk == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "9322": {"id": 9322, "code": "x = \"2017/01/07\"\nprint(\"2018\" + x[4:])", "coverage": [">", ">"]}, "17184": {"id": 17184, "code": "a = \"D\";b = \"D\"\nif a=='H':\n    a=1\nelse:\n    a=0\nif b=='H':\n    b=1\nelse:\n    b=0\nif a^b==0:\n    print('H')\nelse :\n    print('D')", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "11772": {"id": 11772, "code": "a = 11;b = 16\nb = 17;c = 11\nif a!=c:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4058": {"id": 4058, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\nif t2 > t1:\n\tawake = t2 - t1\nelse:\n    awake = 24 * 60 - t1 + t2\nprint(awake - k)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "5324": {"id": 5324, "code": "n = 2\nprint(int(n/2)) if n%2 == 0 else print(int(n/2+1))", "coverage": [">", ">"]}, "926": {"id": 926, "code": "K = 101\nans = -1\nr = 7 % K\nSUM = r\nif SUM % K == 0:\n    ans = 1\nelse:\n    for i in range(1, K):\n        r = (r * 10) % K\n        SUM += r\n        if SUM % K == 0:\n            ans = i + 1\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17157": {"id": 17157, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    answer = b\nelif b == \"H\":\n    answer = \"D\"\nelse:\n    answer = \"H\"\nprint(answer)", "coverage": [">", ">", "!", ">", "!", "!", ">", ">"]}, "2908": {"id": 2908, "code": "S = \"1234567876\"\nN = len(S)\nans = 999\nfor i in range(0,N-2):\n  n = int(S[i:i+3])\n  ans = min(ans, abs(n - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17339": {"id": 17339, "code": "import sys\na = \"D\";b = \"D\"\nif not a in (\"H\",\"D\"):\n    sys.exit()\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", ">", ">", "!", "!"]}, "4724": {"id": 4724, "code": "s = \"smiles\"\ncnt = 0\nfor i in range(1,len(s)-1):\n    cnt += 1\nprint(s[0]+str(cnt)+s[len(s)-1])", "coverage": [">", ">", ">", ">", ">"]}, "13603": {"id": 13603, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\ns=a+\" \"+b+\" \"+c\nprint(s)", "coverage": [">", ">", ">"]}, "8921": {"id": 8921, "code": "n = 5\nau = [3, 2, 2, 4, 1]\nad = [1, 2, 2, 2, 1]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1250": {"id": 1250, "code": "n = 112\nif n<112:\n    print(111)\nelif n<223:\n    print(222)\nelif n<334:\n    print(333)\nelif n<445:\n    print(444)\nelif n<556:\n    print(555)\nelif n<667:\n    print(666)\nelif n<778:\n    print(777)\nelif n<889:\n    print(888)\nelse:\n    print(999)", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "11306": {"id": 11306, "code": "ary = [\"aaa\", \"SAT\", \"FRI\", \"THU\", \"WED\", \"TUE\", \"MON\", \"SUN\"]\nday = \"SAT\"\nprint(ary.index(day))", "coverage": [">", ">", ">"]}, "7038": {"id": 7038, "code": "H = 211;N = 5\nA = 210\nif H<=A:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "10945": {"id": 10945, "code": "s = \"level\"\nn = len(s)\na, b = s[:(n - 1) // 2], s[(n + 1) // 2:]\nprint(\"Yes\" if s == s[::-1] and a == a[::-1] and b == b[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "3932": {"id": 3932, "code": "x = 64146;y = 123;z = 456\nans = int((x-z)//(y+z))\nprint(ans)", "coverage": [">", ">", ">"]}, "6411": {"id": 6411, "code": "import sys\nfrom bisect import bisect_left\ninput = sys.stdin.buffer.readline\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncumsum = [0]\nfor i in range(len(B)):\n    b = B[i]\n    a_idx = bisect_left(A, b)\n    cumsum.append(cumsum[i] + a_idx)\nans = 0\nfor i in range(len(C)):\n    c = C[i]\n    b_idx = bisect_left(B, c)\n    ans += cumsum[b_idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14383": {"id": 14383, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnum = 0\ncount = 1\nmode = 0\nwhile num < n - 1:\n    if a[num] == a[num + 1]:\n        num += 1\n    elif a[num] > a[num + 1]:\n        num += 1\n        if mode == -1:\n            pass\n        elif mode == 0:\n            mode = -1\n        else:\n            count += 1\n            mode = 0\n    else:\n        num += 1\n        if mode == 1:\n            pass\n        elif mode == 0:\n            mode = 1\n        else:\n            count += 1\n            mode = 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", ">", ">", "!", ">", ">", "!", "!", "!", ">"]}, "2356": {"id": 2356, "code": "import sys\nimport math\nN = 1;M = 1\nif not ( 0 <= N <= 100 and 0 <= M <= 100 ): sys.exit()\nif not ( 2 <= N+M ): sys.exit()\nif not ( isinstance(N,int) and isinstance(M,int) ): sys.exit()\nans = 0\nif N >= 2:\n    ans += math.factorial(N) // (math.factorial(N - 2) * math.factorial(2))\nif M >= 2:\n    ans += math.factorial(M) // (math.factorial(M - 2) * math.factorial(2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "15588": {"id": 15588, "code": "x = 100000;y = 1;z = 1\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "13299": {"id": 13299, "code": "inp = \"haiku,atcoder,tasks\"\nprint(inp.replace(',',' '))", "coverage": [">", ">"]}, "7852": {"id": 7852, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nif n == k:\n    print(1)\nelif k == 2:\n    print(n-1)\nelse:\n    rem = n % (k-1)\n    m = (n - rem) / (k-1)\n    if rem <= 1:\n        print(int(m))\n    else:\n        print(int(m+1))", "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "9360": {"id": 9360, "code": "S = \"2017/01/07\"\nprint(S.replace('2017', '2018'))", "coverage": [">", ">"]}, "11744": {"id": 11744, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1!=m2:\n  print(1)\nelse:print(0)", "coverage": [">", ">", ">", "!", ">"]}, "373": {"id": 373, "code": "s = \"codefestival\"\nk = 100\nans = []\nrem = k\nfor si in s[:-1]:\n    if si == 'a':\n        to_a = 0\n    else:\n        to_a = ord('z') - ord(si) + 1\n    if to_a <= rem:\n        rem -= to_a\n        ans.append('a')\n    else:\n        ans.append(si)\nlast_s_ord = (ord(s[-1]) + rem - ord('a'))%26\nlast_s = chr(ord('a') + last_s_ord)\nans.append(last_s)\nans = ''.join(ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "8228": {"id": 8228, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif (N-1)%(K-1) == 0:\n    print(int((N-1)/(K-1)))\nelse:\n    print(int((N-1)/(K-1)) + 1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13435": {"id": 13435, "code": "l = \"abcde\";m = \"fghihgf\";r = \"edcba\"\nprint(l, m, r)", "coverage": [">", ">"]}, "10033": {"id": 10033, "code": "N = 8\nS = [')', ')', ')', ')', '(', '(', '(', '(']\ncount=0\nLR=[0,0]\nfor i in range(N):\n    if S[i]==\"(\":\n        count+=1\n    else:\n        if count==0:\n            LR[0]+=1\n            continue\n        count-=1\nLR[1]=count\nfor i in range(2):\n    for j in range(LR[i]):\n        if i==0:\n            S.insert(0,\"(\")\n        else:\n            S.append(\")\")\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "7660": {"id": 7660, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5050": {"id": 5050, "code": "s = \"internationalization\"\nl = len(s)-2\ni = s[0] + str(l) + s[-1]\nprint(i)", "coverage": [">", ">", ">", ">"]}, "12229": {"id": 12229, "code": "S = \"level\"\nN = len(S)//2\nprint('Yes' if S[:N] == S[-N:] else 'No')", "coverage": [">", ">", ">"]}, "17375": {"id": 17375, "code": "s = 1700\na, b = s // 100, s % 100\nx = \"YY\" if a == 0 or a > 12 else \"MM\"\ny = \"YY\" if b == 0 or b > 12 else \"MM\"\nif x != y:\n    print(x + y)\nelse:\n    print(\"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "8862": {"id": 8862, "code": "N = 1\nU = [2]\nD = [3]\nU = U[::-1]\nD = D[::-1]\nup = 0\ndown = 0\nupper = [0]\ndowner = []\nfor i in range(N):\n    up += U[i]\n    down += D[i]\n    upper.append(up)\n    downer.append(down)\nupper = upper[::-1]\ndowner = downer[::-1]\nans = 0\nfor i in range(N):\n    ret = upper[0] - upper[i+1] + downer[i]\n    ans = max(ans, ret)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "957": {"id": 957, "code": "n = 750\na = n//100\nb = 100*a+10*a+a\nif b >= n:\n    print(b)\nelse:\n    print(b+111)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13315": {"id": 13315, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "6072": {"id": 6072, "code": "N = 100\namari = N % 2\ncount = int( N // 2 )\nprint( count + amari )", "coverage": [">", ">", ">", ">"]}, "12430": {"id": 12430, "code": "import copy\na = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nif len(a) == 5:\n  print(\"No\")\n  exit()\nelse:\n  b = copy.copy(a)\n  b.reverse()\n  x = int((len(a)/2))\n  for i in range(x):\n    if a[i] != b[i]:\n      print(\"No\")\n      exit()\n  c = a[:x]\n  d = a[x+1:]\n  y = int((len(c)/2))\n  for i in range(y):\n    if c[i] != c[-(i+1)] or d[i] != d[-(i+1)]:\n      print(\"No\")\n      exit()\n  print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14013": {"id": 14013, "code": "from itertools import groupby\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nB = []\nfor key, v in groupby(A):\n    B.append(key)\ndiff = []\nfor i in range(len(B) - 1):\n    diff.append(1 if B[i] < B[i + 1] else -1)\nnums = []\nfor d, v in groupby(diff):\n    nums.append(len(list(v)))\nis_can_del = 0\nans = 0\nfor n in nums:\n    if n == 1 and is_can_del == 1:\n        is_can_del = 0\n    else:\n        ans += 1\n        is_can_del = 1\nif is_can_del == 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">"]}, "6594": {"id": 6594, "code": "import bisect\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nsorted_a = sorted(a)\nsorted_c = sorted(c)\nans = 0\nfor each_b in b:\n    ai = bisect.bisect_left(sorted_a, each_b)\n    ci = bisect.bisect_right(sorted_c, each_b)\n    ans += ai * (len(c)-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17780": {"id": 17780, "code": "s = \"1905\"\nf,b = int(s[:2]),int(s[2:])\nif 1 <= f <= 12:\n  if 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= b <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "1573": {"id": 1573, "code": "n = 112\nprint(((n+110)//111)*111)", "coverage": [">", ">"]}, "9671": {"id": 9671, "code": "from collections import deque\nN = 8\nS = \"))))((((\"\nans = deque([])\nemp = deque([])\nfor s in S[::-1]:\n    if s == \")\":\n        ans.append('(')\n    else:\n        if ans:\n            ans.pop()\n        else:\n            emp.append(')')\nans = list(ans)\nemp = list(emp)\nprint(\"\".join(ans)+S+\"\".join(emp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "18999": {"id": 18999, "code": "N = 12\nimport sys\nif N & 1:\n    print(0)\n    sys.exit()\nans = 0\nN //= 2\nwhile N != 0:\n    ans += N // 5\n    N //= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "12394": {"id": 12394, "code": "S = \"akasaka\"\nN=len(S)\nif S!=S[::-1]:\n    print('No')\nelse:\n    S1=S[0:(N-1)//2]\n    S2=S[(N+1)//2:N]\n    if S1==S1[::-1] and S2==S2[::-1]:\n        print('Yes')\n    else:\n        print('No')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "6728": {"id": 6728, "code": "h = 20;n = 3\na = [4, 5, 6]\ns = sum(a)\nif h > s:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11620": {"id": 11620, "code": "yobi = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nS = \"SAT\"\nprint(7 - yobi.index(S))", "coverage": [">", ">", ">"]}, "8511": {"id": 8511, "code": "N = 4\nl1 = [1, 1, 1, 1]\nl2 = [1, 1, 1, 1]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13340": {"id": 13340, "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "10328": {"id": 10328, "code": "a = 1;b = 1;k = 1\nwar=[]\nfor i in range(1,max(a,b)+1):\n  if a%i==0 and b%i==0:\n    war.append(i)\nwar.reverse()\nprint(war[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16572": {"id": 16572, "code": "import math\na = \"H\";b = \"H\"\nprint(\"H\" if a==b else \"D\")", "coverage": [">", ">", ">"]}, "18956": {"id": 18956, "code": "N = 12\nn = 0\nif not N%2:\n    s = 5\n    N = N//2\n    while N>=s:\n        n += N//s\n        s *= 5\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13935": {"id": 13935, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nup = dn = False\npre = A[0]\nfor a in A[1:]:\n    if pre < a:\n        up = True\n    elif pre > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17252": {"id": 17252, "code": "a = \"D\";b = \"D\"\nif a==b:print('H')\nelse:print('D')", "coverage": [">", ">", "!"]}, "15437": {"id": 15437, "code": "x = 12;y = 3;z = 1\nprint (-(-((x-z)//(y+z))))", "coverage": [">", ">"]}, "3054": {"id": 3054, "code": "S = \"1111111111\"\nZ = 753\nfor i in range(3, len(S)+1):\n  s = int(S[i-3:i])\n  a = abs(753-s)\n  if Z-a>0:\n    Z = a\nprint(Z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9338": {"id": 9338, "code": "S = \"2017/01/07\"\nprint(\"2018\"+S[4:])", "coverage": [">", ">"]}, "18558": {"id": 18558, "code": "import math\nH = 14\nW = 12\nN = 112\nprint(math.ceil(N/max(H,W)))", "coverage": [">", ">", ">", ">", ">"]}, "10037": {"id": 10037, "code": "N = 3\nS = ['(', ')', ')']\nc = [0,0]\nfor s in S:\n    if s == '(':\n        c[0] += 1\n    else:\n        if c[0] > 0:\n            c[0] -= 1\n        else:\n            c[1] += 1\npre = ['('] * c[1]\nrear = [')'] * c[0]\nans = pre+S+rear\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14465": {"id": 14465, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = A[0]\nisUp = True\nisDown = True\nans = 0\nfor a in A[1:]:\n  if prev == a:\n    pass\n  elif prev < a:\n    isDown = False\n    if not isUp:\n      isUp = True\n      isDown = True\n      ans += 1\n  elif a < prev:\n    isUp = False\n    if not isDown:\n      isUp = True\n      isDown = True\n      ans += 1\n  prev = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17843": {"id": 17843, "code": "S = 1700\nflag = [0, 0] \nl = S // 100\nr = S % 100\nif 1<=r and r<=12:\n  flag[0] += 1\nif 1<=l and l<=12:\n  flag[1] += 1\nif flag == [0, 0]:\n  print('NA')\nelif flag == [0, 1]:\n  print('MMYY')\nelif flag == [1, 0]:\n  print('YYMM')\nelif flag == [1, 1]:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "11424": {"id": 11424, "code": "S = \"SAT\"\nweek = {'SUN': 0, 'MON': 1, 'TUE': 2, 'WED': 3,\n        'THU': 4, 'FRI': 5, 'SAT': 6}\nif S == 'SUN':\n    print(7)\nelse:\n    print(7 - week[S])", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16186": {"id": 16186, "code": "import bisect\nn = 2\nlis = [100, 0]\nlis.sort()\nmid = (lis[-1] + 1) // 2\np = bisect.bisect_left(lis, mid)\nx = abs(lis[p] - mid)\ny = abs(lis[p-1] - mid)\nif x >= y:\n    print(lis[-1], lis[p-1])\nelse:\n    print(lis[-1], lis[p])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8659": {"id": 8659, "code": "N = 1\nA1 = [2]\nA2 = [3]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2890": {"id": 2890, "code": "s = \"1234567876\"\nans = 1000\nfor i in range(len(s)-2):\n    u = abs(eval(s[i]+s[i+1]+s[i+2])-753)\n    if u < ans:\n        ans = u\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8501": {"id": 8501, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = a1[0] + sum(a2)\ntmp = ans\nfor i in range(1, n):\n    tmp += a1[i] - a2[i - 1]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7151": {"id": 7151, "code": "a = 210;b = 5\nc = [31, 41, 59, 26, 53]\nif sum(c) >= a:\n    print('Yes')\nif sum(c) < a:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!"]}, "15646": {"id": 15646, "code": "X = 64145;Y = 123;Z = 456\nn = X // (Y+Z)\nif X % (Y+Z) < Z :\n    print(n-1)\nelse:\n    print(n)", "coverage": [">", ">", ">", ">", "!", "!"]}, "19512": {"id": 19512, "code": "N = 10\nif N%2: print(2*N)\nelse: print(N)", "coverage": [">", ">", ">"]}, "3144": {"id": 3144, "code": "import sys\nS = \"1234567876\"\nmin = 1000\nfor I in range(len(S)):\n    if min > abs(753 - int(S[I:I+3])):\n        min = abs(753 - int(S[I:I+3]))\nprint(min)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11503": {"id": 11503, "code": "Ds = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nSs = \"SUN\"\nans = 7 - Ds.index(Ss)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "16711": {"id": 16711, "code": "input1 = ['D', 'H']\na = input1[0]\nb = input1[1]\nif a == \"H\":\n  if b == \"H\":\n    print(\"H\")\n  else:\n    print(\"D\")\nelse:\n  if b == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "17177": {"id": 17177, "code": "ab = \"D H\"\nif ab.count(\"D\")==1:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", "!", "!"]}, "12672": {"id": 12672, "code": "x = 5\nif x == 7:\n    print('YES')\nelif x == 5:\n    print('YES')\nelif x == 3:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "13206": {"id": 13206, "code": "s = \"haiku\";t = \"atcoder\";u = \"tasks\"\nprint(s+\" \"+t+\" \"+u)", "coverage": [">", ">"]}, "8456": {"id": 8456, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7767": {"id": 7767, "code": "a = 3;b = 3\nc = [1, 2, 3]\nans = -(-(a - b) // (b - 1)) + 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "6200": {"id": 6200, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nBB = [0] * N\ncidx = 0\nfor i in range(N):\n    while cidx < N and C[cidx] <= B[i]:\n        cidx += 1\n    BB[i] = N - cidx\nBBB = [0] * N\nfor i in range(N - 1, -1, -1):\n    if (i == N - 1):\n        BBB[i] = BB[i]\n    else:\n        BBB[i] = BB[i] + BBB[i+1]\nsum = 0\nbidx = 0\nfor i in range(N):\n    while bidx < N and B[bidx] <= A[i]:\n        bidx += 1\n    if bidx != N:\n        sum += BBB[bidx]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "9707": {"id": 9707, "code": "n = 3\ns = \"())\"\nwrittenC = 0\nwrittenD = 0\nfor i in range(n):\n    if s[i] == \")\" and writtenC == 0:\n        writtenD += 1\n    elif s[i] == \")\":\n        writtenC -= 1\n    else:\n        writtenC += 1\nprint(\"(\" * writtenD + s + \")\"*writtenC)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "1936": {"id": 1936, "code": "N = 10;A = 3;B = 5\nmaxN,minN = 0,0\nif N >= A + B:\n  minN = 0\n  maxN = min([A,B])\nelse:\n  minN = A + B - N\n  maxN = min([A,B])\nprint('{} {}'.format(maxN,minN))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "3": {"id": 3, "code": "S = \"xyz\"\nK = 4\nN = len(S)\nA = [0]*N\nans = \"\"\nfor i in range(N):\n  A[i] = (ord(\"z\") - ord(S[i]) + 1) % 26\n  if i != N-1:\n    if K >= A[i]:\n      K -= A[i]\n      ans += \"a\"\n    else:\n      ans += S[i]\n  else:\n    K = K % 26\n    s = ord(S[i]) + K\n    if s > ord(\"z\"):\n      s -= 26\n    ans += chr(s)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "6658": {"id": 6658, "code": "from bisect import bisect,bisect_left\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    ca = bisect_left(A,b)\n    cc = N - bisect(C,b)\n    ans += ca*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18885": {"id": 18885, "code": "N = 12\nif N%2==1:\n    print(0)\nelse:\n    i = 10\n    count = 0\n    while i <= N:\n        count += N//i\n        i = i*5\n    print(count)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18158": {"id": 18158, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a and a <= 12 and 1<= b and b <=12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <=12 and (12 < b or b < 1):\n    print(\"MMYY\")\nelif (12 < a or a < 1) and 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4971": {"id": 4971, "code": "S = \"xyz\"\nprefix = S[0]\nsufix = S[-1]\ncontent = str(len(S[1:-1]))\nprint(prefix + content + sufix)", "coverage": [">", ">", ">", ">", ">"]}, "10727": {"id": 10727, "code": "s = \"akasaka\"\nn = len(s)\nflag = 1\nfor i in range(int(n/2)):\n    if s[i] != s[n-i-1]:\n        flag = 0\n        break\nn2 = int((n-1)/2)\nif flag == 1:\n    for i in range(int(n2/2)):\n        if s[i] != s[n2-i-1]:\n            flag = 0\n            break\nif flag == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "2735": {"id": 2735, "code": "n = 4;a = 9;b = 0;c = 8\nans='NO'\nif n==1 or a==1 or b==1 or c==1:\n    if n==9 or a==9 or b==9 or c==9:\n        if n==7 or a==7 or b==7 or c==7:\n            if n==4 or a==4 or b==4 or c==4:\n                ans='YES'\nprint(ans)                ", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "6182": {"id": 6182, "code": "n = 2\narr1 = [5, 1]\narr2 = [4, 2]\narr3 = [6, 3]\ncnt=[0]*n\nans=0\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr1[j]<arr2[i]:\n      cnt[i]=n-pos\n      break\n    else:\n      pos+=1\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr2[i]<arr3[j]:\n      pos+=1\n    else:\n      ans+=cnt[i]*pos\n      break\n  else:\n    ans+=cnt[i]*pos\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "17217": {"id": 17217, "code": "a = \"H\";b = \"H\"\nif (a=='H')and(b=='H'):\n    print('H')\nelif (a=='H')and(b=='D'):\n    print('D')\nelif (a=='D')and(b=='D'):\n    print('H')\nelif (a=='D')and(b=='H'):\n    print('D')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6808": {"id": 6808, "code": "HP = 211;n = 5\na = [31, 41, 59, 26, 53]\ncount = 0\nfor i in a:\n  count += i\nif count >= HP:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2058": {"id": 2058, "code": "n = 10;a = 7;b = 5\nl = []\nl.append(min(a,b))\nif n >= a + b:\n    l.append(0)\nelse:\n    l.append(a + b - n)\nprint(l[0],l[1])", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "15724": {"id": 15724, "code": "a = 64145;b = 123;c = 456\nprint(int((a-c)/(b+c)))", "coverage": [">", ">"]}, "7921": {"id": 7921, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif N == K:\n    print(1)\nelse:\n    print((N+K-3)//(K-1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "4659": {"id": 4659, "code": "S = \"xyz\"\nN = len(S)-2\nprint(S[0]+str(N)+S[-1])", "coverage": [">", ">", ">"]}, "5248": {"id": 5248, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nS = \"internationalization\"\nprint(S[0] + str(len(S) - 2) + S[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8065": {"id": 8065, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nnow=0\nans=0\nif n==k:\n  print(1)\nelse:\n  while(True):\n    n-=k\n    ans+=1\n    if n<=0:\n      break\n    else:\n      n+=1\n  print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "18058": {"id": 18058, "code": "S = \"1905\"\na,b = int(S[:2]),int(S[2:])\nif (1<=a and a<=12) or (1<=b and b<=12):\n    if (1<=a and a<=12) and (1<=b and b<=12): \n        print(\"AMBIGUOUS\")\n    elif (1<=b and b<=12):\n        print(\"YYMM\")\n    elif  (1<=a and a<=12): \n        print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "701": {"id": 701, "code": "K = 2\na = 0\ncount = -1\nfor i in range(K):\n    a = (7 + a*10) % K\n    if a  == 0:\n        count=i+1\n        break\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8263": {"id": 8263, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nans = 1\nn -= k\nk -= 1\nif n % k == 0:\n    ans += n // k\nelse:\n    ans += n // k + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2133": {"id": 2133, "code": "n = 100;a = 100;b = 100\nprint(\"{} {}\".format(min(a,b), max(a+b-n,0) ))", "coverage": [">", ">"]}, "17505": {"id": 17505, "code": "S = \"1905\"\nans='None'\nif 1<=int(S[:2]) <=12 and 1<=int(S[2:])<=12:\n    ans='AMBIGUOUS'\nelif 1<=int(S[:2])<=12:\n    ans='MMYY'\nelif 1<=int(S[2:])<=12:\n    ans='YYMM'\nelse:\n    ans='NA'\nprint(ans)", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "14625": {"id": 14625, "code": "n = 3;p = 0\na = [1, 1, 1]\ncnt0 = a.count(0)\ncnt1 = n-cnt0\nif cnt0==n and p==0:\n    print(2**n)\nelif cnt0==n and p==1:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "3035": {"id": 3035, "code": "s = \"1111111111\"\nans = 753\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    gap = abs(753-num)\n    if gap < ans:\n        ans = gap\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5124": {"id": 5124, "code": "s = \"xyz\"\nnew_s=s[0]+str(len(s[1:-1]))+s[-1]\nprint(new_s)", "coverage": [">", ">", ">"]}, "6937": {"id": 6937, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nprint(\"Yes\" if sum(A)>=H else \"No\")", "coverage": [">", ">", ">"]}, "1274": {"id": 1274, "code": "n = 112\na = (n-1)//111+1\nprint(a*100+a*10+a)", "coverage": [">", ">", ">"]}, "8044": {"id": 8044, "code": "n = 3;k = 3\nA = [1, 2, 3]\nprint(-((1-n)//(k-1)))", "coverage": [">", ">", ">"]}, "17948": {"id": 17948, "code": "s = 1700\nb = s%100\na = (s - b)//100\nif (0 < a <= 12 and 0 < b <= 12):\n    print(\"AMBIGUOUS\")\nelif (0 < a <= 12):\n    print(\"MMYY\")\nelif (0 < b <= 12):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14575": {"id": 14575, "code": "n = 3;p = 0\nlis = [1, 1, 1]\nodd = [i for i in lis if i % 2==1]\neven = [i for i in lis if i % 2 == 0]\nif len(odd) == 0:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    odd_m = len(odd)\n    even_m = len(even)\n    t1 = 2**even_m\n    t2 = 2**(odd_m-1)\n    print(t1*t2)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6256": {"id": 6256, "code": "from bisect import bisect_right\nif __name__ == \"__main__\":\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a = sorted(a)\n    b = sorted(b)\n    c = sorted(c)\n    ans = 0\n    clist = [0] * n\n    clist[n-1] = n - bisect_right(c, b[n-1])\n    for i in range(n-2, -1, -1):\n        clist[i] = n - bisect_right(c, b[i]) + clist[i+1]\n    for aa in a:\n        b_pos = bisect_right(b, aa)\n        if b_pos != n:\n            ans += clist[b_pos]\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6966": {"id": 6966, "code": "hp = \"211\";N = \"5\"\na = ['31', '41', '59', '26', '53']\nprint(\"Yes\") if sum([int(x) for x in a]) >= int(hp) else print(\"No\")", "coverage": [">", ">", ">"]}, "11459": {"id": 11459, "code": "d = dict(zip( ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'], '6543217'))\ns = \"SUN\"\nprint(d[s])", "coverage": [">", ">", ">"]}, "14230": {"id": 14230, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\na.append(a[n - 1])\nans = 1\ns = 0\ni = 1\nwhile i < n:\n    if not(a[s] <= a[i] <= a[i + 1]) and not(a[s] >= a[i] >= a[i + 1]):\n        s = i + 1\n        ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12604": {"id": 12604, "code": "import math\na = 8;b = 12;k = 2\nl = []\nfor i in range(1, math.gcd(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        l.append(i)\nL = sorted(l)\nprint(L[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17262": {"id": 17262, "code": "s = ['H', ' ', 'H']\nif s[0] == s[2]:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "631": {"id": 631, "code": "K = 101\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\n    exit()\ni = 0\nai = 0\nwhile True:\n    ai = (ai * 10 + 7) % K\n    i += 1\n    if ai == 0:\n        break\nprint(i)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13063": {"id": 13063, "code": "a = 6\nif a==7:\n  print(\"YES\")\nif a>7:\n  print(\"NO\")\nif a<7:\n  if a>3:\n    if a==5:\n      print(\"YES\")\nif a<7:\n  if a>3:\n    if a!=5:\n      print(\"NO\")\nif a==3:\n  print(\"YES\")\nif a<3:\n  print(\"NO\")", "coverage": [">", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!"]}, "2881": {"id": 2881, "code": "S = \"1234567876\"\nM=1000\nN=len(S)\nfor i in range(N-2):\n  M=min(abs(753-int(S[i]+S[i+1]+S[i+2])),M)\nprint(M)", "coverage": [">", ">", ">", ">", ">", ">"]}, "698": {"id": 698, "code": "K = 2\ncnt=1\nNum=7%K\nwhile cnt<=K:\n  if K%2==0:\n    print('-1')\n    break\n  if Num%K==0:\n    print(cnt)\n    break\n  else:\n    Num = (10*Num + 7)%K\n    cnt+=1\nelse:\n  print('-1')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "14238": {"id": 14238, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\npumi=0\nff=0\ncut=1\nfor i in range(0,N-1):\n    if pumi==0:\n        ff=0\n    elif pumi==-1:\n        ff=-1\n    elif pumi==1:\n        ff=1\n    if A[i+1]>A[i]:\n        pumi=1\n    elif A[i+1]<A[i]:\n        pumi=-1\n    if pumi==-1 and ff==1:\n        cut+=1\n        pumi=0\n    elif pumi==1 and ff==-1:\n        cut+=1\n        pumi=0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6843": {"id": 6843, "code": "H = 210;N = 5\nlists = [31, 41, 59, 26, 53]\nlists.sort()\nSAM = sum(lists)\nif SAM>=H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "2051": {"id": 2051, "code": "N = 10;A = 3;B = 5\nif N > A+B:\n  mini = 0\nelse:\n  mini = A+B-N\nprint(str(min(A, B)) + \" \" + str(mini))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3632": {"id": 3632, "code": "a = 12;b = 4\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "9561": {"id": 9561, "code": "s = \"2017/01/31\"\ns = s.replace('2017','2018')\nprint(s)", "coverage": [">", ">", ">"]}, "1823": {"id": 1823, "code": "N = 10;A = 3;B = 5\nprint(str(min(A,B))+' '+str(max(A+B-N,0)))", "coverage": [">", ">"]}, "18992": {"id": 18992, "code": "n = 5\nans = 0\nif n%2 == 0:\n    m = 1\n    for _ in range(25):\n        ans += n//(m*10)\n        m *= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "3488": {"id": 3488, "code": "a = 20;b = 15\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "4387": {"id": 4387, "code": "S = [10, 0, 15, 0, 30]\nA = S[0]*60 + S[1]\nB = S[2]*60 + S[3]\nprint(B-A-S[4])", "coverage": [">", ">", ">", ">"]}, "14231": {"id": 14231, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\na.append(a[n - 1])\nans = 1\ns = 0\ni = 1\nwhile i < n:\n    if not(a[s] <= a[i] <= a[i + 1]) and not(a[s] >= a[i] >= a[i + 1]):\n        s = i + 1\n        ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6860": {"id": 6860, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nx = sum(a)\nif (h - x) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19175": {"id": 19175, "code": "N = 5\nif N%2:\n    print(0)\nelse:\n    X=0\n    Y=N//5\n    while Y:\n        X+=Y//2\n        Y//=5\n    print(X)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "15880": {"id": 15880, "code": "x = 12;y = 3;z = 1\nx = x-z\nc = y+z\nn = 0\nwhile 0 < x:\n  if c <= x:\n    n = n+1\n    x = x-c\n  else:\n    break\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8741": {"id": 8741, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,sum(A[:i])+sum(B[i:])+A[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18393": {"id": 18393, "code": "div = 0\nmod = 0\nh = 14\nw = 12\nn = 112\nif h > w:\n  div = n // h\n  mod = n % h\nelse:\n  div = n // w\n  mod = n % w\nif mod > 0:\n  print(div+1)\nelse:\n  print(div)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "1888": {"id": 1888, "code": "n = 10;a = 3;b = 5\nif a+b > n:\n  q = a+b-n\nelse :\n  q = 0\nprint( str(min(a,b)) +\" \"+ str(q))", "coverage": [">", ">", "!", "!", ">", ">"]}, "5485": {"id": 5485, "code": "n = 5\nif n%2==0:\n    x=int(n/2)\nelse:\n    x=int(n/2)+1\nprint(x)", "coverage": [">", ">", "!", "!", ">", ">"]}, "14931": {"id": 14931, "code": "N = 45;P = 1\nA = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nB=[a%2 for a in A]\nif sum(B)==0:\n    print((P==0)*2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2128": {"id": 2128, "code": "n = 10;a = 3;b = 5\nmax_ = min(a, b)\nmin_ = max(a + b - n, 0)\nprint(max_, min_)", "coverage": [">", ">", ">", ">"]}, "9870": {"id": 9870, "code": "N = 6\nS = \")))())\"\nl = r = 0\nL = \"\"\nfor i in S:\n    if i == \"(\":\n        l += 1\n    else:\n        r += 1\n    if l < r:\n        L += \"(\"\n        l += 1\nR = \")\"* (l-r)\nprint(L+S+R)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "330": {"id": 330, "code": "s = \"a\"\nk = 25\nn=len(s)\nans=\"\"\nfor i in range(n):\n    if i<n-1:\n        if s[i]==\"a\":\n            ans+=\"a\"\n        else:\n            t=123-ord(s[i])\n            if k>=t:\n                ans+=\"a\"\n                k-=t\n            else:\n                ans+=s[i]\n    if i==n-1:\n        tt=(ord(s[i])-97+k)%26\n        ans+=chr(tt+97)\nprint(ans)                ", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "1036": {"id": 1036, "code": "n = 750\na = -(-n//111)\nif a == 10:\n    print(1111)\nelse:\n    print(a*111)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17051": {"id": 17051, "code": "s = ['D', 'D']\nif s[0] == s[1]:print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", "!"]}, "2503": {"id": 2503, "code": "N = {1, 4, 9, 7}\nif {1, 9, 7, 4} == N:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "14325": {"id": 14325, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncounter=1\nres=0\nfor i in range(len(A)-1):\n    if (A[i+1]<A[i] and res>0) or (A[i+1]>A[i] and res<0):\n        counter+=1\n        res=0\n    elif A[i+1]!=A[i]:\n        res=A[i+1]-A[i]\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11781": {"id": 11781, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(1 if m2 == m1 % 12 + 1 and d2 == 1 else 0)", "coverage": [">", ">", ">"]}, "8016": {"id": 8016, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif (N-1)%(K-1) == 0:\n  print((N-1)//(K-1))\nelse:\n  print((N-1)//(K-1)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15593": {"id": 15593, "code": "X = 100000;Y = 1;Z = 1\nX -= Z\nprint(X // (Y + Z))", "coverage": [">", ">", ">"]}, "7979": {"id": 7979, "code": "import math,sys\nN = 8;K = 3\nwindow = K - 1\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nl = K\ncount = 1\nif l >= N:\n  print(count)\n  sys.exit()\nwhile l < N:\n  l += K - 1\n  count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "5182": {"id": 5182, "code": "s = \"internationalization\"\nS = s[0] + str(len(s) - 2) + s[-1]\nprint(S)", "coverage": [">", ">", ">"]}, "19198": {"id": 19198, "code": "n = 12\nans = 0\nd = 10\nif n%2==1:\n    print(0)\n    import sys\n    sys.exit()\nwhile True:\n    ans += n//d\n    d *= 5\n    if d>n:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "1580": {"id": 1580, "code": "n = 111\nans = 0\nwhile n > ans:\n    ans += 111\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3722": {"id": 3722, "code": "a = 20;b = 30\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "2471": {"id": 2471, "code": "n1 = 1;n2 = 9;n3 = 7;n4 = 4\ns=set()\ns.add(n1)\ns.add(n2)\ns.add(n3)\ns.add(n4)\nif s=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9119": {"id": 9119, "code": "import sys\ninput = sys.stdin.readline\nS = ['2017', '01', '31']\nS = list(S)\nprint(\"2018\" + \"/\" + S[1] + \"/\" + S[2])", "coverage": [">", ">", ">", ">", ">"]}, "8860": {"id": 8860, "code": "N = 5\nU = [3, 2, 2, 4, 1]\nD = [1, 2, 2, 2, 1]\nU = U[::-1]\nD = D[::-1]\nup = 0\ndown = 0\nupper = [0]\ndowner = []\nfor i in range(N):\n    up += U[i]\n    down += D[i]\n    upper.append(up)\n    downer.append(down)\nupper = upper[::-1]\ndowner = downer[::-1]\nans = 0\nfor i in range(N):\n    ret = upper[0] - upper[i+1] + downer[i]\n    ans = max(ans, ret)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3181": {"id": 3181, "code": "x = \"35753\"\nmini=1e+5\nfor i in range(len(x)-2):\n    mini=min(mini,abs(753-int(x[i:i+3])))\nprint(mini)", "coverage": [">", ">", ">", ">", ">"]}, "17200": {"id": 17200, "code": "a = \"D\";b = \"H\"\nprint('H' if (a == 'H') ^ (b == 'D') else 'D')", "coverage": [">", ">"]}, "14237": {"id": 14237, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\npumi=0\nff=0\ncut=1\nfor i in range(0,N-1):\n    if pumi==0:\n        ff=0\n    elif pumi==-1:\n        ff=-1\n    elif pumi==1:\n        ff=1\n    if A[i+1]>A[i]:\n        pumi=1\n    elif A[i+1]<A[i]:\n        pumi=-1\n    if pumi==-1 and ff==1:\n        cut+=1\n        pumi=0\n    elif pumi==1 and ff==-1:\n        cut+=1\n        pumi=0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11509": {"id": 11509, "code": "x = \"SUN\"\narr=['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7-arr.index(x))", "coverage": [">", ">", ">"]}, "4398": {"id": 4398, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nx = H1*60+M1\ny = H2*60+M2\nprint(y-x-K)", "coverage": [">", ">", ">", ">"]}, "3614": {"id": 3614, "code": "a = \"12\";b = \"4\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12076": {"id": 12076, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nok = False\nif d1+1 != d2:\n    ok = True\nif ok:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "6342": {"id": 6342, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na = sorted(a)\nfor i in range(n):\n    b[i] = (b[i], bisect.bisect_right(a, b[i]-1))\nb = sorted(b)\nbsum = [b[0][1]]\nb[0] = b[0][0]\nfor i in range(1, n):\n    bsum.append(bsum[i-1] + b[i][1])\n    b[i] = b[i][0]\ncnt = 0\nfor i in range(n):\n    ind = bisect.bisect_right(b, c[i]-1)\n    if ind > 0:\n        cnt += bsum[ind-1]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19536": {"id": 19536, "code": "n = 999999999\nprint(n if n%2==0 and n%n==0 else n*2)", "coverage": [">", ">"]}, "16834": {"id": 16834, "code": "A = \"D\";B = \"H\"\nif A == B:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "7108": {"id": 7108, "code": "h = 20;n = 3\na = map(int,\"4 5 6\".split())\nif sum(a) >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12454": {"id": 12454, "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nn = len(s)\nl = s[: (n - 1) // 2]\nr = s[(n + 1) // 2 :]\nif l == l[::-1] and r == r[::-1] and s == s[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3658": {"id": 3658, "code": "n = 20;m = 30\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "10004": {"id": 10004, "code": "n = 6\ns = \")))())\"\nl = 0\nr = 0\np = []\nfor i in range(n):\n  if s[i] == \"(\": p.append(\"(\")\n  else:\n    if p == []: l += 1\n    else: p.pop()\nr = p.count(\"(\")\nprint(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "12900": {"id": 12900, "code": "n = 5\nprint(\"YES\" if n == 3 or n == 5 or n == 7 else \"NO\")", "coverage": [">", ">"]}, "15610": {"id": 15610, "code": "X = 64145;Y = 123;Z = 456\nans = (X-Z)//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">"]}, "17990": {"id": 17990, "code": "S = ['1', '7', '0', '0']\nx = int(\"\".join(S[0:2]))\ny = int(\"\".join(S[2:4]))\nif 1 <= x <= 12:\n    if 1 <= y <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= y <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\npass", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "12015": {"id": 12015, "code": "M = 11;D = 16\nN = 11;A = 17\nif N>M:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3888": {"id": 3888, "code": "X = 100000;Y = 1;Z = 1\nprint(1+(X-Y-2*Z)//(Y+Z))", "coverage": [">", ">"]}, "5995": {"id": 5995, "code": "i = 5\nprint(int(i / 2) + (i % 2))", "coverage": [">", ">"]}, "19466": {"id": 19466, "code": "s = 999999999\nif s % 2 == 0:\n    print(int(s))\nelse:\n    print(int(s*2))", "coverage": [">", ">", "!", "!", ">"]}, "14917": {"id": 14917, "code": "n = 3;p = 0\na = [1, 1, 1]\neven=0\nodd=0\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\nimport math\nans=2**even\nif p==0:\n    m=odd//2\n    t=1\n    for i in range(1,m+1):\n        i*=2\n        t+=math.factorial(odd)/math.factorial(i)/math.factorial(odd-i)\nelse:\n    m=(odd+1)//2\n    t=0\n    for i in range(1,m+1):\n        i=2*i-1\n        t+=math.factorial(odd)/math.factorial(i)/math.factorial(odd-i)\nans*=t\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "3705": {"id": 3705, "code": "A = 12;B = 4\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "16910": {"id": 16910, "code": "a = \"D\";b = \"D\"\nif a=='H':\n  print(b)\nelse:\n  print('HD'[b=='H'])", "coverage": [">", ">", "!", "!", ">"]}, "18338": {"id": 18338, "code": "h = 3\nw = 7\nn = 10\ncnt = 0\nblk = 0\nif h > w:\n  for i in range(w):\n    blk += h\n    cnt += 1\n    if blk >= n:\n      break\nelse:\n  for j in range(h):\n    blk += w\n    cnt += 1\n    if blk >= n:\n      break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8250": {"id": 8250, "code": "n = 8;k = 3\nlst = [7, 3, 1, 8, 4, 6, 2, 5]\nidx = lst.index(1)\nk -= 1\na = (len(lst[:idx]) + k - 1) // k\nb = (len(lst[idx + 1:]) + k - 1) // k\nc = ((n - 1) + k - 1) // k\nprint(min(c, a + b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3258": {"id": 3258, "code": "x = \"12 4\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "16411": {"id": 16411, "code": "n = 2\na = [100, 0]\na.sort()\nx = a[-1]\ny1 = x//2\ny2 = x//2 + 1\nsa1, sa2 = float(\"inf\"), float(\"inf\")\nz1, z2 = 0, 0\nfor i in range(n-1):\n    if sa1 > abs(y1 - a[i]):\n        sa1 = abs(y1-a[i])\n        z1 = a[i]\n    if sa2 > abs(y2 - a[i]):\n        sa2 = abs(y2 - a[i])\n        z2 = a[i]\nif sa1 > sa2:\n    print(x, z2)\nelse:\n    print(x, z1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19209": {"id": 19209, "code": "N = 5\nif N%2 == 1 or N <= 9:\n  print(0)\nelse:\n  t = 10\n  ans = 0\n  while N >= t:\n    ans += N//t\n    t *= 5\n  print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17621": {"id": 17621, "code": "s = \"1700\"\nhead = int(s[:2])\ntail = int(s[2:])\nis_mmyy = False\nis_yymm = False\nif 1 <= head <= 12:\n    is_mmyy = True\nif 1 <= tail <= 12:\n    is_yymm = True\nif is_yymm and is_mmyy:\n    print('AMBIGUOUS')\nelif is_yymm:\n    print('YYMM')\nelif is_mmyy:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "10835": {"id": 10835, "code": "S = \"atcoder\"\nN = len(S)\na = S[:N // 2]\nb = S[N // 2 + 1:]\nprint('Yes' if a == a[::-1] == b == b[::-1] else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "16312": {"id": 16312, "code": "n = 2\na = [100, 0]\na.sort()\nlarge = max(a)\na.remove(large)\nmin_list = [0, large/2]\nfor i in a:\n    if abs(i - large/2) < min_list[1]:\n        min_list = [i, abs(i - large/2)]\nprint(large, min_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1900": {"id": 1900, "code": "n = 10;a = 3;b = 5\nmax_ = min(a, b)\nif max(n, a+b) == a+b:\n    min_ = a + b - n\nelse:\n    min_ = 0\nprint(max_, min_)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "14047": {"id": 14047, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nfirst = True\nup = False\ndown = False\nfor i in range(n):\n    if first:\n        cnt += 1\n        now = a[i]\n        if i < n-1:\n            if a[i+1] > now:\n                up = True\n                down = False\n                first = False\n            elif a[i+1] < now:\n                down = True\n                up = False\n                first = False\n            else:\n                up = False\n                down = False\n                first = True\n                cnt -= 1\n    else:\n        now = a[i]\n        if i < n-1:\n            if up:\n                if now > a[i+1]:\n                    first = True\n            elif down:\n                if now < a[i+1]:\n                    first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8794": {"id": 8794, "code": "n = 5\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11815": {"id": 11815, "code": "md1 = [11, 30]\nmd2 = [12, 1]\nif md1[0]==md2[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1776": {"id": 1776, "code": "n = 10;a = 7;b = 5\nif n>(a+b):\n    print(\"{} {}\".format(min([a,b]), 0))\nelse:\n    print(\"{} {}\".format(min([a,b]), abs(n-(a+b))))", "coverage": [">", ">", "!", "!", ">"]}, "18427": {"id": 18427, "code": "h = 2\nw = 100\nn = 200\nk = max(h, w)\nprint((n + k - 1) // k)", "coverage": [">", ">", ">", ">", ">"]}, "12645": {"id": 12645, "code": "x = 6\nli = [3,5,7]\nif x in li:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "16130": {"id": 16130, "code": "input_line = \"20 30\"\ninputs = input_line.split(' ')\ninputs = [int(input) for input in inputs]\nA = inputs[0]\nB = inputs[1]\ndual_B = 2 * B\nres = 0\nif A > dual_B:\n    res = A - dual_B\nelse:\n    res = 0\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "18612": {"id": 18612, "code": "H = 14\nW = 12\nN = 112\nM = max(H, W)\nprint((N+M-1)//M)", "coverage": [">", ">", ">", ">", ">"]}, "7750": {"id": 7750, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((N-1-1)//(K-1)+1)", "coverage": [">", ">", ">"]}, "9225": {"id": 9225, "code": "S = \"2017/01/31\"\nS_list = list(S)\nS_list[S.index(\"7\")] = \"8\"\na = \"\"\nfor i in S_list:\n  a += i\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "419": {"id": 419, "code": "original_s = ['x', 'y', 'z']\ns = list(map(lambda x:ord(x)-97-26, original_s))\nK = 4\nans = original_s\nfor i in range(len(s)):\n    if abs(s[i]) <= K and s[i] != -26:\n        ans[i] = \"a\"\n        K += s[i]\nans[-1] = chr(((ord(ans[-1]) + K) - 97) % 26 + 97)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "34": {"id": 34, "code": "s = ['x', 'y', 'z']\nK = 4\nfor i in range(len(s)-1):\n    if s[i]!=\"a\":\n        a= ord(\"z\")+1 - ord(s[i])\n        if K>=a:\n            s[i]=\"a\"\n            K-=a\nif K:\n    s[-1]=chr((K+ord(s[-1])-ord(\"a\"))%(ord(\"z\") - ord(\"a\")+1)+ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7353": {"id": 7353, "code": "H = 10;N = 3\nA = [4, 5, 6]\nS = sum(A)\nif S >= H: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", "!"]}, "8978": {"id": 8978, "code": "a = 15;b = 18;c = 26;d = 35;e = 36;k = 18\nif k>=max(a,b,c,d,e)-min(a,b,c,d,e):\n  print('Yay!')\nelse:\n  print(':(')", "coverage": [">", ">", "!", "!", ">"]}, "2764": {"id": 2764, "code": "s = \"1234567876\"\nz=753\nfor i in range(len(s)-2):\n  x=int(s[i:i+3])\n  y=abs(753-x)\n  z=min(z,y)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7816": {"id": 7816, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nprint((n-1+k-2)//(k-1))", "coverage": [">", ">", ">"]}, "10491": {"id": 10491, "code": "integer1 = 1;integer2 = 1;term = 1\nterm_value = max(integer1, integer2)\nlargest_term = 0\nwhile term_value <= 100:\n    if integer1 % term_value == 0 and integer2 % term_value == 0:\n        largest_term += 1\n    if term == largest_term:\n        break\n    term_value -= 1\nprint(term_value)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17696": {"id": 17696, "code": "s = \"1700\"\ns1=s[0]+s[1]\ns2=s[2]+s[3]\nn1=int(s1)\nn2=int(s2)\nif 1<=n1<=12:\n    if 1<=n2<=12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1<=n2<=12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "13800": {"id": 13800, "code": "import math\nimport sys\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = \"Init\"\nans = 0\nfor i in range(1, n):\n    if flag == \"Init\":\n        if a[i - 1] == a[i]:\n            pass\n        elif a[i - 1] > a[i]:\n            flag = \"-\"\n        else:\n            flag = \"+\"\n    elif flag == \"-\":\n        if a[i - 1] < a[i]:\n            ans += 1\n            flag = \"Init\"\n    else:\n        if a[i - 1] > a[i]:\n            ans += 1\n            flag = \"Init\"\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "17644": {"id": 17644, "code": "S = \"0112\"\nA = int(S[:2])\nB = int(S[2:])\nif 1<=A<=12 and 1<=B<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=A<=12:\n  print(\"MMYY\")\nelif 1<=B<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6805": {"id": 6805, "code": "HP = 10;n = 3\na = [4, 5, 6]\ncount = 0\nfor i in a:\n  count += i\nif count >= HP:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11756": {"id": 11756, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12271": {"id": 12271, "code": "S = \"akasaka\"\nl = len(S) // 2\nformer = S[:l]\nlatter = S[l+1:]\nprint(\"Yes\" if S == S[::-1] and former == former[::-1] and latter == latter[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "4481": {"id": 4481, "code": "voca = \"smiles\"\na = len(voca) - 2\noutput = voca[0] + str(a) + voca[-1]\nprint(output)", "coverage": [">", ">", ">", ">"]}, "15651": {"id": 15651, "code": "X = 64145;Y = 123;Z = 456\nans = X//(Y+Z) - 1\nif ans*(Y+Z)+(Y+Z+Z) <= X: ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "15573": {"id": 15573, "code": "x = 12;y = 3;z = 1\ntemp=z\nresult=0\nwhile temp<=x-y-z:\n  temp=temp+y+z\n  result=result+1\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3558": {"id": 3558, "code": "A = 20;B = 30\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "9118": {"id": 9118, "code": "import sys\ninput = sys.stdin.readline\nS = ['2017', '01', '07']\nS = list(S)\nprint(\"2018\" + \"/\" + S[1] + \"/\" + S[2])", "coverage": [">", ">", ">", ">", ">"]}, "1607": {"id": 1607, "code": "N = 10;A = 3;B = 5\nans = (min(A, B), max(0, A + B - N))\nprint(ans[0], ans[1])", "coverage": [">", ">", ">"]}, "11078": {"id": 11078, "code": "import math\ns = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nn = len(s)\ns1 = s[ : (n-1) // 2]\ns2 = s[(n+3) // 2 - 1 : n]\nflag = 1\nfor i in range(len(s) // 2):\n    if s[i] != s[- i - 1]:\n        flag = 0\nfor i in range(len(s1) // 2):\n    if s1[i] != s1[- i - 1]:\n        flag = 0\nfor i in range(len(s2) // 2):\n    if s2[i] != s2[- i - 1]:\n        flag = 0\nprint('Yes' if flag == 1  else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12999": {"id": 12999, "code": "X = 6\nif X in [3,5,7]:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "422": {"id": 422, "code": "al=[chr(ord('a') + i) for i in range(26)]\ns = \"a\"\nN=len(s)\nK = 25\nfor i in range(N):\n  if i<N-1:\n    a=26-al.index(s[i])\n    if K>=a and s[i]!=\"a\":\n      K -= a\n      s=s[0:i]+al[(al.index(s[i])+a)%26]+s[i+1:]\n  else:\n    K %= 26\n    p= (K+al.index(s[i]))% 26\n    s=s[0:N-1]+al[p]\n    K=0\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "15392": {"id": 15392, "code": "import math\nx = 12;y = 3;z = 1\nprint(math.floor((x-z)/(y+z)))", "coverage": [">", ">", ">"]}, "18748": {"id": 18748, "code": "h = 3\nw = 7\nn = 10\nm=max(h,w)\nif n%m==0:\n  print(int(n/m))\nelse:\n  print(int(n/m+1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13542": {"id": 13542, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "2319": {"id": 2319, "code": "N = 100;A = 100;B = 100\nmaxA = min(A, B)\nminA = 0\nif N - max(A, B) < maxA:\n    minA = maxA - (N- max(A, B))\nprint(maxA, minA)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13397": {"id": 13397, "code": "x = \"happy,newyear,enjoy\"\nprint(x.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13048": {"id": 13048, "code": "n = \"5\"\nprint(\"YES\" if n in \"753\" else \"NO\")", "coverage": [">", ">"]}, "9858": {"id": 9858, "code": "N = 3\nS = \"())\"\nleft = 0\nright = 0\nleft_ans = 0\nright_ans = 0\nfor i in range(N):\n    now = S[i]\n    if now == \"(\":\n        left += 1\n    else:\n        right += 1\n        if left == 0:\n            left_ans += 1\n        else:\n            left -= 1\n            left = max(0, left)\nS_mirror = \"\"\nfor i in range(N-1, -1, -1):\n    if S[i] == \"(\":\n        S_mirror += \")\"\n    else:\n        S_mirror += \"(\"\nleft = 0\nright = 0\nright_ans = 0\nfor i in range(N):\n    now = S_mirror[i]\n    if now == \"(\":\n        left += 1\n    else:\n        right += 1\n        if left == 0:\n            right_ans += 1\n        else:\n            left -= 1\n            left = max(0, left)        \nans = \"(\"*left_ans + S + \")\"*right_ans\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "5169": {"id": 5169, "code": "l = \"xyz\"\nprint(l[0]+str(len(l)-2)+l[-1])", "coverage": [">", ">"]}, "8943": {"id": 8943, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1470": {"id": 1470, "code": "n = 750\nl = list(range(111,1000,111))\nif n % 111 == 0:\n    print(n)\nelse:\n    print(l[n // 111])", "coverage": [">", ">", ">", "!", "!", ">"]}, "9384": {"id": 9384, "code": "a = \"2017/01/07\"\nprint('2018'+a[4:])", "coverage": [">", ">"]}, "4088": {"id": 4088, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt1, t2 = h1*60+m1, h2*60+m2\nif t1 > t2:\n    t2 += 60*24\nans = t2-t1-k\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">"]}, "1396": {"id": 1396, "code": "N = 750\nfor i in range(10):\n    if N <= i * 111:\n        print(i * 111)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "13142": {"id": 13142, "code": "n = 5\nprint(\"YES\" if any((n == 3,n == 5,n == 7)) else \"NO\")", "coverage": [">", ">"]}, "1248": {"id": 1248, "code": "n = 750\na = 0\nfor i in range(1, 10):\n    ans = [str(i)]*3\n    ans_ = \"\".join(ans)\n    if int(ans_) >= n:\n        a = ans_\n        if a != 0:\n            break\nprint(int(a))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4395": {"id": 4395, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nd1 = h1 * 60 + m1\nd2 = h2 * 60 + m2\nprint(d2 - d1 - k)", "coverage": [">", ">", ">", ">"]}, "16530": {"id": 16530, "code": "n = 2\na = [100, 0]\nmax_a = max(a)\na.remove(max_a)\nda = [abs(ai - max_a/2) for ai in a]\nmed_i = da.index(min(da))\nprint(max_a, a[med_i])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1539": {"id": 1539, "code": "N = 112\nfor i in range(N,1000):\n  i = str(i)\n  if i[0] == i[1] and i[1] == i[2] and i[2] == i[0]:\n    ans = i\n    break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13593": {"id": 13593, "code": "x = \"haiku\";y = \"atcoder\";z = \"tasks\"\nprint(x + ' ' + y + ' ' + z)", "coverage": [">", ">"]}, "10825": {"id": 10825, "code": "s = ['l', 'e', 'v', 'e', 'l']\nf1 = s == list(reversed(s))\nf2 = s[:(len(s)-1)//2] == list(reversed(s[:(len(s)-1)//2]))\nf3 = s[(len(s)+2)//2:] == list(reversed(s[(len(s)+2)//2:]))\nprint(\"Yes\" if all([f1, f2, f3]) else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "42": {"id": 42, "code": "s = \"xyz\"\nK = 4\nalpha = \"abcdefghijklmnopqrstuvwxyz\"\ninv_alpha = \"azyxwvutsrqponmlkjihgfedcb\"\nD = {inv_alpha[i]: i for i in range(26)}\nn = len(s)\nfor i in range(n):\n  if i == n - 1:\n    x = K % 26\n    print(alpha[(26-D[s[i]]+x)%26], end = '')\n  else:\n    if K >= D[s[i]]:\n      K -= D[s[i]]\n      print('a', end = '')\n    else:\n      print(s[i], end = '')\nprint()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14916": {"id": 14916, "code": "n = 1;p = 1\na = [50]\neven=0\nodd=0\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\nimport math\nans=2**even\nif p==0:\n    m=odd//2\n    t=1\n    for i in range(1,m+1):\n        i*=2\n        t+=math.factorial(odd)/math.factorial(i)/math.factorial(odd-i)\nelse:\n    m=(odd+1)//2\n    t=0\n    for i in range(1,m+1):\n        i=2*i-1\n        t+=math.factorial(odd)/math.factorial(i)/math.factorial(odd-i)\nans*=t\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "6128": {"id": 6128, "code": "from bisect import bisect_right, bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nans = 0\nfor i in B:\n    a = bisect_left(A, i)\n    b = N-bisect_right(C, i)\n    ans += (a*b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4789": {"id": 4789, "code": "import sys\ninput = sys.stdin.readline\nS = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o']\nprint(S[0] + str(len(S) - 2) + S[-1])", "coverage": [">", ">", ">", ">"]}, "12490": {"id": 12490, "code": "a = 8;b = 12;c = 2\ni = 1\nd = []\nwhile True:\n  if a % i ==0 and b % i ==0:\n    d.append(i)\n  if i > max(a,b):\n    break\n  else:\n    i += 1\nprint(d[-c])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13948": {"id": 13948, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nup = False\ndown = False\nprev = a.pop(0)\nfor i in a:\n    if (not up) and (not down):\n        if prev < i:\n            up = True\n        elif prev > i:\n            down = True\n    elif up:\n        if prev > i:\n            ans += 1\n            up = False\n    elif down:\n        if prev < i:\n            ans += 1\n            down = False\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "1085": {"id": 1085, "code": "n = 750\nh = n // 100\nx = h * 100 + h * 10 + h\nprint(x) if n <= x else print(x + 111) ", "coverage": [">", ">", ">", ">"]}, "16538": {"id": 16538, "code": "a = \"D\";b = \"D\"\nprint(\"H\" if a==b==\"H\" or a==b==\"D\" else\"D\")", "coverage": [">", ">"]}, "12744": {"id": 12744, "code": "N = \"5\"\nif N in ['7','5','3']:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "3737": {"id": 3737, "code": "X = 12;Y = 3;Z = 1\nprint((X-(Y+2*Z)) // (Y+Z) + 1)", "coverage": [">", ">"]}, "13546": {"id": 13546, "code": "s = \"abcde,fghihgf,edcba\"\nprint(\" \".join(s.split(',')))", "coverage": [">", ">"]}, "2392": {"id": 2392, "code": "n = 13;m = 3\nif n<=1:\n    n_ans=0\nelse:\n    n_ans=n*(n-1)/2\nif m<=1:\n    m_ans=0\nelse:\n    m_ans=m*(m-1)/2\nprint(int(n_ans+m_ans))", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "8781": {"id": 8781, "code": "n = 1\na = [2]\nb = [3]\nans=0\nfor i in range(n):\n    z=0\n    for j in range(i+1):\n        z+=a[j]\n    for j in range(i,n):\n        z+=b[j]\n    ans=max(ans,z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12869": {"id": 12869, "code": "X = 6\nprint([\"NO\",\"YES\"][X==3 or X==5 or X==7])", "coverage": [">", ">"]}, "1691": {"id": 1691, "code": "N = 10;A = 3;B = 5\nmx = min(A,B)\nmi = max(A+B-N,0)\nprint(str(mx) + \" \" + str(mi))", "coverage": [">", ">", ">", ">"]}, "6740": {"id": 6740, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif h <= sum(a):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "9295": {"id": 9295, "code": "S = \"2017/01/31\"\nt=S.replace('2017', '2018')\nprint(t)", "coverage": [">", ">", ">"]}, "17379": {"id": 17379, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= b <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "10236": {"id": 10236, "code": "N = 6\nS = \")))())\"\nd = [0]*(N+1) \nfor i in range(1, N+1):\n    d[i] = S[:i].count(\"(\") - S[:i].count(\")\")\nx = min(d)\nif x == 0 and d[N] == 0:\n    print(S)\n    exit()\nans = \"(\"*abs(x) + S + \")\"*(d[N]+abs(x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15401": {"id": 15401, "code": "x = 64146;y = 123;z = 456\nans = 0\nx -= z\nans += x // (y + z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2452": {"id": 2452, "code": "x = 4;y = 3\na=x*(x-1)//2\nb=y*(y-1)//2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "13679": {"id": 13679, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndh = h2 - h1\ndm = m2 - m1\nif dm < 0:\n    dh -= 1\n    dm += 60\nwm = dh*60 + dm\nans = wm - k\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "7640": {"id": 7640, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nsum =0\nfor i in range(len(A)):\n\tsum = sum + A[i]\nif sum >= H:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9612": {"id": 9612, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3]=\"8\"\nprint(*S,sep=\"\")", "coverage": [">", ">", ">"]}, "3592": {"id": 3592, "code": "a = 20;b = 30\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "8390": {"id": 8390, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "15789": {"id": 15789, "code": "a = 100000;b = 1;c = 1\nprint((a-c)//(b+c))", "coverage": [">", ">"]}, "13382": {"id": 13382, "code": "s = \"happy,newyear,enjoy\"\nresult=''\nfor i in s:\n    if i==',':\n        result+=' '\n    else:\n        result+=i\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "5035": {"id": 5035, "code": "s = \"internationalization\"\nh = s[0]\nt = s[len(s) - 1]\nl = str(len(s[1:-1]))\nprint(h+l+t)", "coverage": [">", ">", ">", ">", ">"]}, "355": {"id": 355, "code": "s = \"xyz\"\nk = 4\nalp = 'bcdefghijklmnopqrstuvwxyza'\nt = alp.find(s[0])\nif len(s) == 1:\n    s = alp[(k+t)%26]\nelse: \n    if k >= 25-t:\n        s = 'a' + s[1:]\n        k -= 25-t\n    for i in range(1, len(s)-1):\n        t = alp.find(s[i])\n        if k >= 25-t:\n            s = s[:i] + 'a' + s[i+1:]\n            k -= 25-t\n    s = s[:len(s)-1] + alp[(k+alp.find(s[-1]))%26]\nprint(s)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16884": {"id": 16884, "code": "A = \"H\";B = \"H\"\nif A == \"H\":\n  if B == \"H\":\n    print(\"H\")\n  else:\n    print(\"D\")\nelif A == \"D\":\n  if B == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8191": {"id": 8191, "code": "n = 4;k = 3\nnums = [2, 3, 1, 4]\ncount = 0\nwhile n > 0:\n    if n > k:\n        n -= k-1\n    else:\n        n -= k\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14198": {"id": 14198, "code": "from collections import deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)>=2:\n    if not (v >= tmp[-1] >= tmp[0] or v <= tmp[-1] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nprint(cnt+1 if tmp else cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "303": {"id": 303, "code": "alf = {c:i for i,c in enumerate('abcdefghijklmnopqrstuvwxyz')}\na = 'abcdefghijklmnopqrstuvwxyz'\ns = \"a\"\nk = 25\ndiff = [26-alf[c] if c != 'a' else 0 for c in s]\nans = []\nfor i in range(len(s)):\n    if k >= diff[i]:\n        ans.append('a')\n        k -= diff[i]\n    else:\n        ans.append(s[i])\nif k > 0:\n    ans[-1] = a[(alf[ans[-1]] + k % 26)]\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "1902": {"id": 1902, "code": "n = 100;a = 100;b = 100\nmax_ = min(a, b)\nif max(n, a+b) == a+b:\n    min_ = a + b - n\nelse:\n    min_ = 0\nprint(max_, min_)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14887": {"id": 14887, "code": "n = 3;p = 0\na = [1, 1, 1]\nm = len([x for x in a if x & 1])\nif m == 0:\n  if p == 0:\n    ans = 2 ** n\n  else:\n    ans = 0\nelse:\n  ans = 2 ** (n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "17412": {"id": 17412, "code": "S = 1905\nx=S//100\ny=S%100\nyymm=1<=y<=12\nmmyy=1<=x<=12\nans=\"\"\nif yymm and mmyy:\n    ans=\"AMBIGUOUS\"\nelif yymm:\n    ans=\"YYMM\"\nelif mmyy:\n    ans=\"MMYY\"\nelse:\n    ans=\"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "18286": {"id": 18286, "code": "import math\nsize = {}\nsize = {'H': 2}\nsize = {'H': 2, 'W': 100}\nN = 200\nif size['H'] > size['W']:\n    bigsize = 'H'\nelse:\n    bigsize = 'W'\nlines_num = math.ceil(N/size[bigsize])\nprint(lines_num)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12135": {"id": 12135, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(1 if m1 != m2 else 0)", "coverage": [">", ">", ">"]}, "4700": {"id": 4700, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\ncount = len(s)-2\nprint(s[0] + str(count) + s[-1])", "coverage": [">", ">", ">"]}, "8664": {"id": 8664, "code": "n = 5\np = [3, 2, 2, 4, 1]\nq = [1, 2, 2, 2, 1]\nans = sum(p)+q[n-1]\ntmp = ans\nfor i in range(n-1):\n  tmp = tmp + q[n-i-2] - p[n-i-1]\n  ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "727": {"id": 727, "code": "K = 2\nif K%2==0:\n    print(-1)\nelif K==1:\n    print(1)\nelif K==7:\n    print(1)\nelse:\n    if K%7==0:\n        K = K//7\n    a = 1\n    cnt = 1\n    ind = -1\n    for i in range(K):\n        a = (a*10)%K\n        cnt += a\n        if cnt%K==0:\n            ind = i\n            break\n    if ind<0:\n        print(-1)\n    else:\n        print(ind+2)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5957": {"id": 5957, "code": "N = 2\nans = (N-1)//2 + 1\nprint(int(ans))", "coverage": [">", ">", ">"]}, "13178": {"id": 13178, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a, b, c)", "coverage": [">", ">"]}, "12627": {"id": 12627, "code": "a = 1;b = 1;k = 1\nl=[0]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        l.append(i)\nl.sort()\nl.reverse()\nprint(l[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13092": {"id": 13092, "code": "x = 5\nif x in (3,5,7):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "13188": {"id": 13188, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a + \" \" + b + \" \" + c)", "coverage": [">", ">"]}, "4660": {"id": 4660, "code": "s = \"internationalization\"\nchar_number = len(s)\nstart = s[0]\nend   = s[-1]\nanswer = start + str(char_number - 2) + end\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "14823": {"id": 14823, "code": "N = 45;P = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nnum_odd = sum([i%2 == 1 for i in a])\nnum_even = N - num_odd\nce = 2 ** num_even\nco = 2 ** (num_odd - 1)\nif num_odd == 0:\n    co = P^1\nprint(co * ce)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14632": {"id": 14632, "code": "from collections import Counter\nN = 3;P = 0\nA = [1, 1, 1]\nn0 = 0\nn1 = 0\nfor i, a in enumerate(A):\n    b = a % 2\n    A[i] = b\n    if b == 0:\n        n0 += 1\n    else:\n        n1 += 1\nC1 = [1]\nfor i in range(n1):\n    C1.append(C1[-1] * (n1-i)//(i+1))\nans = 0\nfor i in range(0, 51, 2):\n    if i + P > n1:\n        break\n    ans += C1[i+P] * (2**(n0))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8884": {"id": 8884, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15631": {"id": 15631, "code": "x = 12;y = 3;z = 1\nnum = x-z\nans = 0\nans += num // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2978": {"id": 2978, "code": "S = \"1111111111\"\nMIN=10**9\nfor i in range(len(S)-2):\n  tmp = abs(int(S[i:i+3])-753)\n  if tmp < MIN:MIN=tmp\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11973": {"id": 11973, "code": "m1 = \"11\"\nm2 = \"12\"\nprint(int(m1 != m2))", "coverage": [">", ">", ">"]}, "7349": {"id": 7349, "code": "H = 10\nA = [4, 5, 6]\nif H <= sum(A):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "2765": {"id": 2765, "code": "s = \"35753\"\nz=753\nfor i in range(len(s)-2):\n  x=int(s[i:i+3])\n  y=abs(753-x)\n  z=min(z,y)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6622": {"id": 6622, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\ni,j,k=0,0,0\nm1=[]\nwhile k<n and i<n:\n  if b[i]>a[k]:\n    j+=1\n    k+=1\n  else:\n    m1.append(j)\n    i+=1\nfor t in range(len(m1),len(b)):\n  m1.append(j)\ni,j,k=0,0,0\nm2=[]\nwhile k<n and i<n:\n  if c[i]>b[k]:\n    j+=m1[k]\n    k+=1\n  else:\n    m2.append(j)\n    i+=1\nfor t in range(len(m2),len(c)):\n  m2.append(j)\nprint(sum(m2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15788": {"id": 15788, "code": "a = 12;b = 3;c = 1\nprint((a-c)//(b+c))", "coverage": [">", ">"]}, "6135": {"id": 6135, "code": "from bisect import bisect_left,bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    i = bisect_left(A,b)\n    j = bisect(C,b)\n    ans += i*(N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14286": {"id": 14286, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N==1:\n    print(1)\n    exit()\nB=[A[i]-A[i-1] for i in range(1,N)]\nans=0\nflag=False\nfor i in range(N-1):\n    if B[i]!=0:\n        first=B[i]\n        flag=True\n    if flag:\n        break\nfor i in range(N-1):\n    if first*B[i]>=0:\n        pass\n    else:\n        ans+=1\n        j=i+1\n        while j<=N-2:\n            if B[j]!=0:\n                first=B[j]\n                break\n            else:\n                j+=1\nprint(ans+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13794": {"id": 13794, "code": "n = 7\nL = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nstate = None\ni = 1\nwhile i < n:\n    if state is None:\n        if L[i] > L[i - 1]:\n            state = 'up'\n        elif L[i] < L[i - 1]:\n            state = 'down'\n        i += 1\n    else:\n        if state == 'up':\n            while L[i] >= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\n        else:\n            while L[i] <= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "11947": {"id": 11947, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "60": {"id": 60, "code": "s = \"xyz\"\nn=len(s)\nk = 4\nans=[]\nfor i in range(n):\n    if i==n-1:\n        ans.append(chr(((ord(s[i])-97+k)%26)+97))\n    else:\n        if s[i]==\"a\":\n            ans.append(\"a\")\n        else:\n            if 26-(ord(s[i])-97)<=k:\n                ans.append(\"a\")\n                k-=(26-(ord(s[i])-97))\n            else:\n                ans.append(s[i])\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", ">", ">"]}, "13301": {"id": 13301, "code": "text = \"happy,newyear,enjoy\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "8835": {"id": 8835, "code": "n = 1\na1 = [2]\na2 = [3]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12552": {"id": 12552, "code": "A = 8;B = 12;K = 2\ncount = 0\nimport math\nR = []\nfor i in range(1,int(math.sqrt(A))+1+1):\n    if A%i == 0:\n        R.append(i)\n        if not i == A//i:\n            R.append(A//i)\nR.sort(reverse=True)\nfor r in R:\n    if B%r==0:\n        count+=1\n        if count == K:\n            print(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18260": {"id": 18260, "code": "H = 3;W = 7;N = 10\nHW=[H,W][H<W]\nNdivHW=N/HW\nNdivHW=int(NdivHW)+([0, 1][NdivHW%1>0])\nprint(NdivHW)", "coverage": [">", ">", ">", ">", ">"]}, "5438": {"id": 5438, "code": "n = 2\nprint(n//2) if n%2==0 else print(n//2+1)", "coverage": [">", ">"]}, "18468": {"id": 18468, "code": "h = 14\nw = 12\nN = 112\nm = max(h,w)\nd = N//m\nif N%m == 0:\n  print(d)\nelse:\n  print(d+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4408": {"id": 4408, "code": "h = 10;m = 0;H = 12;M = 0;K = 120\nprint(H * 60 + M - h * 60 - m - K)", "coverage": [">", ">"]}, "15606": {"id": 15606, "code": "X = 13;Y = 3;Z = 1\nans = (X-Z)//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">"]}, "14297": {"id": 14297, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\n    sys.exit()\ninc = 0  \nans = 1\nfor i in range(N - 1):\n    if A[i] < A[i + 1]:\n        if inc == -1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = 1\n    elif A[i] > A[i + 1]:\n        if inc == 1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = -1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5632": {"id": 5632, "code": "N = 5\na = N % 2\nmy_result = (N + a) / 2\nprint(int(my_result))", "coverage": [">", ">", ">", ">"]}, "18768": {"id": 18768, "code": "H = 2\nW = 100\nN = 200\nimport math\nm = max(H,W)\nprint(math.ceil(N/m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "4490": {"id": 4490, "code": "s = \"smiles\"\nprint('%s%d%s' % (s[0], len(s[1:-1]), s[-1]))", "coverage": [">", ">"]}, "5115": {"id": 5115, "code": "a = \"xyz\"\nans=a[0]+str(len(a)-2)+a[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "19069": {"id": 19069, "code": "N = 12\nif N%2:\n    print(0)\n    exit()\nans = 0\nr = 10\nwhile r <= N:\n    ans += N//r\n    r *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13171": {"id": 13171, "code": "s = \"abcde,fghihgf,edcba\"\ns = s[:5] + \" \" + s[6:13] + \" \" + s[14:]\nprint(s)", "coverage": [">", ">", ">"]}, "11833": {"id": 11833, "code": "a = 11\nb = 12\nif a==b:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18531": {"id": 18531, "code": "import math\nH = 14\nW = 12\nN = 112\nlarge = max(H,W)\nprint(math.ceil(N/large))", "coverage": [">", ">", ">", ">", ">", ">"]}, "7833": {"id": 7833, "code": "import sys\nimport math\nn = 4;k = 3\nalist = [2, 3, 1, 4]\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "15199": {"id": 15199, "code": "import io\nn = 100000;m = 1;k = 1\nprint((n-k)//(m+k))", "coverage": [">", ">", ">"]}, "9284": {"id": 9284, "code": "S = \"2017/01/07\"\nans = ''\nfor i in range(len(S)):\n    if i == 3:\n        ans += '8'\n    else:\n        ans += S[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "15356": {"id": 15356, "code": "x = 12;y = 3;z = 1\ncnt = 0\nwhile x >= 0:\n    x -= z\n    if x >= y+z:\n        x -= y\n        cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6114": {"id": 6114, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nans=0\nfor mid in b:\n    ind_t = bisect.bisect_left(a,mid)\n    ind_b = bisect.bisect_right(c,mid)\n    ans+=ind_t*(n-ind_b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7194": {"id": 7194, "code": "v = 20;n = 3\narr = [4, 5, 6]\nprint(\"Yes\") if sum(arr[-n:]) >= v else print(\"No\")", "coverage": [">", ">", ">"]}, "5259": {"id": 5259, "code": "c = \"x\";s = ['y'];d = \"z\"\nprint(c+str(len(s))+d)", "coverage": [">", ">"]}, "19421": {"id": 19421, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nn = 999999999\nprint(2*n if n % 2 else n)", "coverage": [">", ">", ">", ">", ">", ">"]}, "14493": {"id": 14493, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nflag=0 \ncnt=0\nfor i in range(N-1):\n    if A[i+1]-A[i] >0:\n        if flag ==1:\n            continue\n        elif flag ==-1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =1\n    elif A[i+1]-A[i] <0:\n        if flag ==-1:\n            continue\n        elif flag ==1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =-1\n    elif A[i+1]-A[i] ==0:\n        if flag == 0:\n            flag = 0\n        elif flag ==1:\n            flag =1\n        elif flag ==-1:\n            flag =-1\nprint(cnt+1) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "18300": {"id": 18300, "code": "h = 14\nw = 12\nN = 112\ncnt, loop = 0, 0\nwhile cnt < N:\n  cnt += max(w, h)\n  loop += 1\nprint(loop)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17090": {"id": 17090, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    print(b)\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')", "coverage": [">", ">", "!", ">", "!", ">", ">"]}, "16443": {"id": 16443, "code": "n = 5\narr = [6, 9, 4, 2, 11]\ni = max(arr)\narr.remove(i)\nj = min(arr, key=lambda a: abs(i/2-a))\nprint(i, j)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17830": {"id": 17830, "code": "s = ['0', '1', '1', '2']\ns = [int(i+j) for (i,j) in zip(s[::2],s[1::2])]\nif 1 <= s[0] <= 12:\n  if 1 <= s[1] <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= s[1] <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "10207": {"id": 10207, "code": "from itertools import accumulate\nN = 8\nS = \"))))((((\"\nSS = [1 if S[i]=='(' else -1 for i in range(N)]\nSSS = list(accumulate(SS))\nm = max(0,-min(SSS))\nM = SSS[-1]\nprint('('*m+S+')'*(M+m))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3275": {"id": 3275, "code": "a = 20;b = 30\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", ">", "!", "!"]}, "18618": {"id": 18618, "code": "h = 14\nw = 12\nn = 112\nif n % max(h,w) == 0:\n  print(n // max(h,w))\nelse:\n  print(n // max(h,w) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3106": {"id": 3106, "code": "S = \"1234567876\"\ndiff_min = 1000\nfor i in range(len(S)-2):\n    if diff_min > abs(753 - int(S[i:i+3])):\n        diff_min = abs(753 - int(S[i:i+3]))\nprint(diff_min)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12506": {"id": 12506, "code": "A = 100;B = 50;K = 4\nI = []\nif A < B:\n    C = A\nelse:\n    C = B\nfor i in range(1, C+1):\n    if (A % i == 0) & (B % i == 0):\n        I.append(i)\nprint(I[-K])", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "19281": {"id": 19281, "code": "N = 12\nif N % 2:\n    print(0)\n    exit()\nans = 0\ndiv = 10\nwhile(div <= N):\n    ans += N // div\n    div *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15338": {"id": 15338, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nx = 64146;y = 123;z = 456\nq = x // (y + z)\nr = x % (y + z)\nans = q if z <= r else q - 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11467": {"id": 11467, "code": "s = \"SUN\"\ns=s.lower()\nweek=['sun','mon','tue','wed','thu','fri','sat']\nans=week.index(s)\nprint(7-int(ans))", "coverage": [">", ">", ">", ">", ">"]}, "12824": {"id": 12824, "code": "N = 5\nprint('YES' if N == 3 or N == 5 or N == 7 else 'NO')", "coverage": [">", ">"]}, "2357": {"id": 2357, "code": "import sys\nimport math\nN = 13;M = 3\nif not ( 0 <= N <= 100 and 0 <= M <= 100 ): sys.exit()\nif not ( 2 <= N+M ): sys.exit()\nif not ( isinstance(N,int) and isinstance(M,int) ): sys.exit()\nans = 0\nif N >= 2:\n    ans += math.factorial(N) // (math.factorial(N - 2) * math.factorial(2))\nif M >= 2:\n    ans += math.factorial(M) // (math.factorial(M - 2) * math.factorial(2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6845": {"id": 6845, "code": "h = 10;n = 3\na = [4, 5, 6]\nx = sum(a)\nif h <= x: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", "!"]}, "15423": {"id": 15423, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nX = 64145;Y = 123;Z = 456\nprint((X-Z) // (Y + Z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8780": {"id": 8780, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    z=0\n    for j in range(i+1):\n        z+=a[j]\n    for j in range(i,n):\n        z+=b[j]\n    ans=max(ans,z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5141": {"id": 5141, "code": "s = \"s\";t = ['m', 'i', 'l', 'e'];r = \"s\"\nprint(s+str(len(t))+r)", "coverage": [">", ">"]}, "3749": {"id": 3749, "code": "x = 13;y = 3;z = 1\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "4288": {"id": 4288, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nfin = h2 * 60 + m2\nst = h1 * 60 + m1\nans = fin - st - k \nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">"]}, "7613": {"id": 7613, "code": "a = 10;b = 3\nl = [4, 5, 6]\nl[::-1]\ns=0\nf=0\nfor i in range(len(l)):\n  s+=l[i]\n  if s>=a:\n    f=1\n    break \n  else:\n    continue\nif f==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "16954": {"id": 16954, "code": "a = \"D\";b = \"H\"\ntable = [['H','D'],['D','H']]\nind = ['H','D']\nprint(table[ind.index(a)][ind.index(b)])", "coverage": [">", ">", ">", ">"]}, "7952": {"id": 7952, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint((N-2)//(K-1)+1)", "coverage": [">", ">", ">"]}, "4885": {"id": 4885, "code": "s = \"internationalization\"\nres = s[0] + str(len(s) - 2) + s[-1]\nprint(res)", "coverage": [">", ">", ">"]}, "6207": {"id": 6207, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nimport bisect\nfor b in B:\n    ia = bisect.bisect_left(A, b)\n    ic = n-bisect.bisect_right(C, b)\n    ans += ia*ic\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7654": {"id": 7654, "code": "h = 20;n = 3\nA = [4, 5, 6]\nfor a in A:\n  h -= a\nprint(\"Yes\" if h <= 0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "16865": {"id": 16865, "code": "x = \"D\";y = \"D\"\nif x == 'H':\n    print(y)\nelif x == 'D':\n    print('H' if y=='D' else 'D')", "coverage": [">", ">", "!", ">", ">"]}, "17242": {"id": 17242, "code": "a = \"D\";b = \"H\"\nif a == \"D\":\n    if b ==\"H\":\n        b =\"D\"\n    else:\n        b =\"H\"\nprint(b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9303": {"id": 9303, "code": "a = \"2017\";b = \"01\";c = \"31\"\nn = int(a)\nn += 1\nprint(\"{}/{}/{}\".format(n,b,c))", "coverage": [">", ">", ">", ">"]}, "14683": {"id": 14683, "code": "n = 2;p = 0\neven_count = 0\nodd_count = n - even_count\nif odd_count == 0:\n  print(0 if p == 1 else 2 ** even_count)\nelse:\n  print((2 ** even_count) * (2 ** (odd_count - 1)))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5142": {"id": 5142, "code": "s = \"x\";t = ['y'];r = \"z\"\nprint(s+str(len(t))+r)", "coverage": [">", ">"]}, "8698": {"id": 8698, "code": "N = 1\na = [2]\nb = [3]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8051": {"id": 8051, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nN -= K\nprint(math.ceil(N/(K-1))+1)", "coverage": [">", ">", ">", ">", ">"]}, "16622": {"id": 16622, "code": "a = \"D\";b = \"D\"\nif len(set((a,b))) == 1:\n    ans = \"H\"\nelse:\n    ans = \"D\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10054": {"id": 10054, "code": "N = 3\nS = \"())\"\nT = S\nfor n in range(N):\n  T = T.replace(\"()\",\"\")\nL = T.count(\"(\")\nR = T.count(\")\")\nS = R*\"(\"+S+L*\")\"\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19338": {"id": 19338, "code": "num = 10\nif num % 2 == 0:\n    print(num)\nelse:\n    print(num * 2)", "coverage": [">", ">", ">", "!", "!"]}, "16978": {"id": 16978, "code": "a = False;b = True\nif a ^ b:\n    print('D')\nelse:\n    print('H')", "coverage": [">", ">", ">", "!", "!"]}, "17000": {"id": 17000, "code": "a = \"D\";b = \"D\"\nprint(\"H\" if a == b else 'D')", "coverage": [">", ">"]}, "3845": {"id": 3845, "code": "X = 13;Y = 3;Z = 1\nX = X - Z\nY = Y + Z\nprint(X//Y)", "coverage": [">", ">", ">", ">"]}, "6646": {"id": 6646, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    ai = bisect.bisect_left(A, b)\n    ci = bisect.bisect_right(C, b)\n    ans += ai * (N-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12867": {"id": 12867, "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nx = 6\nif x == 7 or x == 5 or x == 3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7880": {"id": 7880, "code": "N = 3;K = 3\nA = [1, 2, 3]\nb=min(A)\np=0\nfor i in range(N):\n  if A[i]!=b:\n    p+=1\nif p%(K-1)==0:\n  print(p//(K-1))\nelse:\n  print(p//(K-1)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "233": {"id": 233, "code": "s = ['x', 'y', 'z']\nn=len(s)\nk = 4\na=[]\nfor i in range(n):\n  if i==n-1:\n    s[i]=chr(97+(ord(s[i])-97+k)%26)\n    break\n  if s[i]==\"a\":continue\n  t=26-(ord(s[i])-97)%26\n  if t>k:continue\n  k-=min(t,k)\n  s[i]=chr(97+(ord(s[i])-97+t)%26)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5582": {"id": 5582, "code": "N = 2\nif N%2==1:\n  N+=1\nprint(int(N/2))", "coverage": [">", ">", "!", ">"]}, "16462": {"id": 16462, "code": "n = 5\na = [6, 9, 4, 2, 11]\nbase = max(a)\ntmp = 10**9\ntmp_i = 0\nfor x in a:\n    if x == base:\n        pass\n    elif abs(base - 2*x) < tmp:\n        tmp = abs(base - 2*x)\n        tmp_i = x\nprint(base, tmp_i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13616": {"id": 13616, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a, b, c)", "coverage": [">", ">"]}, "185": {"id": 185, "code": "S = ['a']\nK = 25\nfor i in range(len(S)):\n  n = ord(S[i])\n  if S[i] == 'a':\n    continue\n  if ord('z') - n + 1 <= K:\n    K -= ord('z') - n + 1\n    S[i] = 'a'\nassert K >= 0\nif K != 0:\n  n = ord(S[-1])\n  n -= ord('a')\n  n += K\n  n %= 26\n  n += ord('a')\n  S[-1] = chr(n)\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11313": {"id": 11313, "code": "S = \"SUN\"\nif S == (\"SUN\"):\n    output = (7)\nelif S == (\"MON\"):\n    output = (6)\nelif S == (\"TUE\"):\n    output = (5)\nelif S == (\"WED\"):\n    output = (4)\nelif S == (\"THU\"):\n    output = (3)\nelif S == (\"FRI\"):\n    output = (2)\nelif S == (\"SAT\"):\n    output = (1)\nprint(output)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14607": {"id": 14607, "code": "N = 2;P = 0\nA = [1, 3]\nif all(a%2==0 for a in A):\n    print(0 if P else 2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "6062": {"id": 6062, "code": "n = 2\nif n%2 == 1:\n  print(n//2 + 1)\nelse:\n  print(n//2)", "coverage": [">", ">", "!", "!", ">"]}, "8960": {"id": 8960, "code": "n = 4\nl1 = [1, 1, 1, 1]\nl2 = [1, 1, 1, 1]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "421": {"id": 421, "code": "al=[chr(ord('a') + i) for i in range(26)]\ns = \"xyz\"\nN=len(s)\nK = 4\nfor i in range(N):\n  if i<N-1:\n    a=26-al.index(s[i])\n    if K>=a and s[i]!=\"a\":\n      K -= a\n      s=s[0:i]+al[(al.index(s[i])+a)%26]+s[i+1:]\n  else:\n    K %= 26\n    p= (K+al.index(s[i]))% 26\n    s=s[0:N-1]+al[p]\n    K=0\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "12792": {"id": 12792, "code": "x = \"5\"\nprint([\"NO\",\"YES\"][x in \"357\"])", "coverage": [">", ">"]}, "5745": {"id": 5745, "code": "n = 100\nif n%2==0:\n  print(str(int(n/2)))\nelse:\n  print(str(int(n/2)+1))", "coverage": [">", ">", ">", "!", "!"]}, "5508": {"id": 5508, "code": "n = 100\nans = n//2+n%2\nprint(ans)", "coverage": [">", ">", ">"]}, "6248": {"id": 6248, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nali = [0] * (N+1)\nbli = [N - bisect.bisect_left(C,B[i]+1) for i in range(N)]\nfor i in range(N):\n    ali[i+1] = ali[i] + bli[i]\nprint(sum([ali[N]-ali[bisect.bisect_left(B,A[i]+1)] for i in range(N)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1880": {"id": 1880, "code": "n = 10;a = 7;b = 5\nc=min(a,b)\nd=max(a,b)\nif n-d<c:\n    d=c-(n-d)\nelse:\n    d=0\nprint(c,d)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "6104": {"id": 6104, "code": "import math\nN = 2\nO = N // 2 + N % 2\nprint(O)", "coverage": [">", ">", ">", ">"]}, "17681": {"id": 17681, "code": "s = [1, 7, 0, 0]\na = s[0]*10+s[1]\nb = s[2]*10+s[3]\nif a == 0 and b == 0:\n    print('NA')\n    exit()\nif 0 < a<= 12 and (b>12 or b==0):\n    print('MMYY')\nelif (a > 12 or a==0) and 0 < b <= 12:\n    print('YYMM')\nelif a <= 12 and b <= 12:\n    print('AMBIGUOUS')\nelse:print('NA')", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", ">", "!", ">", "!", ">"]}, "6485": {"id": 6485, "code": "from bisect import bisect_left,bisect_right\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in range(n):\n    bc=n-bisect_right(c,b[i])\n    ba=bisect_left(a,b[i])\n    ans+=bc*ba    \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16678": {"id": 16678, "code": "a = \"D\";b = \"H\"\nd = {'H':'D','D':'H'}\nif a=='H':\n  print(b)\nelse:\n  print(d[b])", "coverage": [">", ">", ">", "!", "!", ">"]}, "13492": {"id": 13492, "code": "s = \"abcde,fghihgf,edcba\"\nprint (s[:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "16053": {"id": 16053, "code": "a = 20;b = 15\nn = max([a - 2 * b, 0])\nprint(n)", "coverage": [">", ">", ">"]}, "9406": {"id": 9406, "code": "s = \"2017/01/07\"\nres = []\nfor i in range(len(s)):\n    if i == 3:\n        res.append(8)\n    else:\n        res.append(s[i])\nprint(\"\".join(map(str, res)))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "6198": {"id": 6198, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nans = 0\nmidnum = []\nindex = 0\nfor i in B:\n    while True:\n        if index == N or A[index] >= i:\n            midnum.append(index)\n            break\n        else:\n            index += 1\nindex = 0\nmidCnum = []\ntmp = 0\nfor i in midnum:\n    tmp += i\n    midCnum.append(tmp)\nfor i in C:\n    while True:\n        if index == N:\n            ans += midCnum[index-1]\n            break\n        elif i <= B[index]:\n            if index != 0:\n                ans += midCnum[index-1]\n            break\n        else:\n            index += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14569": {"id": 14569, "code": "N = 1;P = 1\nA = [50]\nresZero = resOne = 0\nfor a in A:\n    if a % 2 == 0:\n        resZero += 1\n    else:\n        resOne += 1\nif resOne == 0:\n    if P == 1:\n        print(0)\n    else:\n        print(2 ** N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!"]}, "3819": {"id": 3819, "code": "import math\nx = 13;y = 3;z = 1\nans = math.floor((x - z) / (y + z))\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10520": {"id": 10520, "code": "A = 8;B = 12;K = 2\nlis=[]\nblis=[]\ncount=0\nsm=min([A,B])\nbm=max([A,B])\nfor i in range(1,sm+1):\n\tif sm/i == sm//i:\n\t\tlis.append(i)\nfor i in lis:\n\tif bm/i == bm//i:\n\t\tblis.append(i)\nblis=list(set(blis))\nblis.sort()\nblis.reverse()\nprint(blis[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14374": {"id": 14374, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nlast = 0\nans = 1\nfor i in range(N - 1):\n    diff = A[i] - A[i + 1]\n    if last == 0:\n        if diff > 0:\n            last = 1\n        elif diff < 0:\n            last = -1\n    elif last * diff < 0:\n        ans += 1\n        last = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "11879": {"id": 11879, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1!=m2:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "6245": {"id": 6245, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    idx_a = bisect.bisect_left(A,b)\n    idx_c = bisect.bisect_right(C,b)\n    ans += idx_a * (N - idx_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18656": {"id": 18656, "code": "h = 3\nw = 7\nn = 10\nprint(-(-n//max(h,w)))", "coverage": [">", ">", ">", ">"]}, "8535": {"id": 8535, "code": "N = 1\nA = [2]\nB = [3]\nprint(max(sum(A[:n+1]+B[n:]) for n in range(N)))", "coverage": [">", ">", ">", ">"]}, "5851": {"id": 5851, "code": "import math\nn = 5\nx = n / 2\ny = n % 2\nif y == 0:\n  print(math.floor(x))\nelse:\n  print(math.ceil(x))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "19269": {"id": 19269, "code": "N = 5\nres = 0\nif N % 2 == 0:\n    div = N // 2\n    for i in range(1,30):\n        res += div // 5**i\nprint(res)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "1249": {"id": 1249, "code": "n = 111\nif n<112:\n    print(111)\nelif n<223:\n    print(222)\nelif n<334:\n    print(333)\nelif n<445:\n    print(444)\nelif n<556:\n    print(555)\nelif n<667:\n    print(666)\nelif n<778:\n    print(777)\nelif n<889:\n    print(888)\nelse:\n    print(999)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18104": {"id": 18104, "code": "s = \"1905\"\nif s[0:2] in \"01 02 03 04 05 06 07 08 09 10 11 12\":\n  l = \"m\"\nelse:\n  l = \"y\"\nif s[2:4] in \"01 02 03 04 05 06 07 08 09 10 11 12\":\n  r = \"m\"\nelse:\n  r = \"y\"\nif l+r == \"mm\":\n  print(\"AMBIGUOUS\")\nelif l+r == \"my\":\n  print(\"MMYY\")\nelif l+r == \"ym\":\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9600": {"id": 9600, "code": "S = \"2017/01/07\"\nprint(S[:3]+'8'+S[4:])", "coverage": [">", ">"]}, "2161": {"id": 2161, "code": "n = 10;a = 3;b = 5\npopulation_max = a\nif b < a:\n    population_max = b\npopulation_min = 0\nif a+b > n:\n    population_min = (a+b)-n\nprint('{0} {1}'.format(population_max, population_min))", "coverage": [">", ">", ">", "!", ">", ">", "!", ">"]}, "17239": {"id": 17239, "code": "a = \"D\";b = \"H\"\nchar_honest = \"H\"\nchar_dishonest = \"D\"\nif a == char_honest:\n    if b == char_honest:\n        print(char_honest)\n    else:\n        print(char_dishonest)\nelse:\n    if b == char_honest:\n        print(char_dishonest)\n    else:\n        print(char_honest)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "12754": {"id": 12754, "code": "n = \"5\"\nif n in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "5862": {"id": 5862, "code": "N = 100\nif N % 2 == 1:\n    print(int(N/2 +1))\nelse:\n    print(int(N/2))", "coverage": [">", ">", "!", "!", ">"]}, "10743": {"id": 10743, "code": "S = \"level\"\nt=len(S)\nprint(\"YNeos\"[sum(1for i in range(t) if S[i]!=S[~i] )!=0 or S[(t+2)//2:]!=S[:(t-1)//2]::2])", "coverage": [">", ">", ">"]}, "10283": {"id": 10283, "code": "n = 3\ns = ['(', ')', ')']\nx = 0\ny = 0\nfor i in range(n):\n    if s[i] == '(':\n        x += 1\n    if s[i] == ')':\n        if x >= 1:\n            x -= 1\n        else:\n            y += 1\nfor _ in range(x):\n    s.append(')')\nfor _ in range(y):\n    s.insert(0,'(')\nans = ''.join(s)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "10144": {"id": 10144, "code": "n = 8\ns = \"))))((((\"\nL = 0  \nR = 0  \ncnt = 0  \nfor i in s:\n    if i == \"(\":\n        cnt += 1\n    else:\n        if cnt > 0:\n            cnt -= 1\n        else:  \n            L += 1\nR = cnt\nprint(\"(\"*L + s + \")\"*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "15107": {"id": 15107, "code": "n = 3;p = 0;a = [1, 1, 1]\ns = t = u = 0; b = [1]\nfor i in range(n):\n    if a[i]%2 == 0: s += 1\n    else: t += 1\nfor i in range(1, n+1):\n    b.append(b[-1]*i)\nif p == 0:\n    for i in range(0, t//2*2+1, 2):\n        u += b[t]//b[i]//b[t-i]\nelse:\n    for i in range(1, (t+1)//2*2, 2):\n        u += b[t]//b[i]//b[t-i]\nprint(2**s*u)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "6820": {"id": 6820, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nfor i in range(N):\n  H -= A[i]\nif H > 0:\n  print('No')\nelse:\n  print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11617": {"id": 11617, "code": "S = \"SUN\"\nif S == 'MON':\n    print(\"6\")\nelif S == 'TUE':\n    print(\"5\")\nelif S == 'WED':\n    print(\"4\")\nelif S == 'THU':\n    print(\"3\")\nelif S == 'FRI':\n    print(\"2\")\nelif S == 'SAT':\n    print(\"1\")\nelif S == 'SUN':\n    print(\"7\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "1736": {"id": 1736, "code": "N = 10;A = 3;B = 5\nif(A>B):\n  ans1=B\n  ans2=max(0,A-(N-B))\nelse:\n  ans1=A\n  ans2=max(0,B-(N-A))\nprint(str(ans1)+\" \"+str(ans2))", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "6837": {"id": 6837, "code": "H = 10;N = 3\nA = [4, 5, 6]\nprint(\"Yes\" if(sum(A) >= H) else \"No\")", "coverage": [">", ">", ">"]}, "657": {"id": 657, "code": "k = 101\nif k % 2 == 0 or k % 5 == 0:\n  print(-1)\nelse:\n  ans = 7\n  cnt = 1\n  while 1:\n    if ans % k == 0:\n      break\n    else:\n      cnt += 1\n      ans *= 10\n      ans += 7\n      ans %= k\n  print(cnt)      ", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "1005": {"id": 1005, "code": "n = 111\nfor i in range(n,1111):\n    i = str(i)\n    if len(set(i))==1:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "9040": {"id": 9040, "code": "a = 1;b = 2;c = 4;d = 8;e = 9;k = 15\nif e-a<=k:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", "!", "!"]}, "5297": {"id": 5297, "code": "import math\nn = 2\nprint(math.ceil(n / 2))", "coverage": [">", ">", ">"]}, "11914": {"id": 11914, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9675": {"id": 9675, "code": "n = 3\ns = \"())\"\nd=[0]*n\ncnt=0\nfor i in range(n):\n    if s[i]=='(':\n        cnt+=1\n    else:\n        cnt-=1\n    d[i]=cnt\nx=min(d)\ns='('*(-x) + s\nd2=[0]*(len(s))\ncnt=0\nfor i in range(len(s)):\n    if s[i]=='(':\n        cnt+=1\n    else:\n        cnt-=1\n    d2[i]=cnt\ns=s+')'*d2[-1]\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14183": {"id": 14183, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nF=0\nK=1\nb=A[0]\nfor a in A:\n    if F==0:\n        if b<a:\n            F=1\n            b=a\n        elif b>a:\n            F=-1\n            b=a\n    elif F==1 and b>a:\n        K+=1\n        F=0\n    elif F==-1 and b<a:\n        K+=1\n        F=0\n    b=a\nprint(K)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14248": {"id": 14248, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\np = 0\nres = 0\nwhile p < N:\n    while p + 1 < N and A[p] == A[p + 1]:\n        p += 1\n    if p + 1 < N and A[p] < A[p + 1]:\n        while p + 1 < N and A[p] <= A[p + 1]:\n            p += 1\n    elif p + 1 < N and A[p] > A[p + 1]:\n        while p + 1 < N and A[p] >= A[p + 1]:\n            p += 1\n    res += 1\n    p += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "918": {"id": 918, "code": "k = 2\nt = 7\nfor i in range(k):\n    t = t % k\n    if t == 0:\n        print(i + 1)\n        exit()\n    else:\n        t = t * 10 + 7\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "13856": {"id": 13856, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstate = None\ncnt = 1\nfor i in range(1, n):\n    if state == None:\n        if a[i] > a[i-1]:\n            state = 'up'\n        elif a[i] < a[i-1]:\n            state = 'down'\n        else:\n            continue\n    elif state == 'up' and a[i] < a[i-1]:\n        cnt += 1\n        state = None\n    elif state == 'down' and a[i] > a[i-1]:\n        cnt += 1\n        state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "19314": {"id": 19314, "code": "N = 999999999\nprint(N * 2 if N % 2 == 1 else N)", "coverage": [">", ">"]}, "10289": {"id": 10289, "code": "N = 3\nS = \"())\"\nS1 = S\ncur = 0\nfor i in range(len(S)):\n    if S[i]==\"(\":\n        cur += 1\n    else:\n        cur -= 1\n    if cur<0:\n        S1 = \"(\"+S1\n        cur += 1\nS1 = S1+\")\"*cur\nprint(S1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "15297": {"id": 15297, "code": "X = 12;Y = 3;Z = 1\nanswer=0\nwidth=Y+2*Z\nwhile(width<=X):\n  answer+=1\n  width+=Y+Z\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "62": {"id": 62, "code": "s = \"codefestival\"\nn=len(s)\nk = 100\nans=[]\nfor i in range(n):\n    if i==n-1:\n        ans.append(chr(((ord(s[i])-97+k)%26)+97))\n    else:\n        if s[i]==\"a\":\n            ans.append(\"a\")\n        else:\n            if 26-(ord(s[i])-97)<=k:\n                ans.append(\"a\")\n                k-=(26-(ord(s[i])-97))\n            else:\n                ans.append(s[i])\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "7179": {"id": 7179, "code": "H = 210;N = 5\nprint('Yes' if H <= sum(map(int,\"31 41 59 26 53\".split())) else 'No')", "coverage": [">", ">"]}, "9655": {"id": 9655, "code": "n = 8\ns = \"))))((((\"\nstack=0\nneedleft=0\nneedright=0\nfor c in s:\n    if c=='(':\n        needright+=1\n    else:\n        if needright>0:\n            needright-=1\n        else:\n            needleft+=1\ns='('*needleft+s\ns+=')'*needright\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "15239": {"id": 15239, "code": "X = 100000;Y = 1;Z = 1\nX = X-Z\nA = (X/(Y+Z))//1\nprint (round (A))", "coverage": [">", ">", ">", ">"]}, "5504": {"id": 5504, "code": "N = 2\nprint(N//2 if N/2 == N//2 else N//2 + 1)", "coverage": [">", ">"]}, "12369": {"id": 12369, "code": "s = \"atcoder\"\nn = len(s)\nflg = True\nfor i in range(n//2):\n    if s[i] != s[n-1-i]:\n        flg = False\nfor i in range(n//4):\n    if s[i] != s[n//2-1-i]:\n        flg = False\nprint('Yes') if flg else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3119": {"id": 3119, "code": "S = \"35753\"\ni = 0\nans = int(S)\nwhile i < len(S)-2:\n    num = int(S[i:i+3])\n    i += 1\n    ans = min(ans, abs(num-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2904": {"id": 2904, "code": "S = \"1111111111\"\nS_len = len(S)\nans = 1000\nfor i in range(S_len - 2):\n    t = int(S[i:i + 3])\n    t_abs = abs(t - 753)\n    ans = min(ans, t_abs)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17478": {"id": 17478, "code": "S = \"1905\"\nif 1<=int(S[:2])<=12:\n    if 1<=int(S[2:])<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=int(S[2:])<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "1320": {"id": 1320, "code": "N = 750\nfor n in [111, 222, 333, 444, 555, 666, 777, 888, 999]:\n  if n >= N:\n    print(n)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "6400": {"id": 6400, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\ncnt = 0\nfor i in b:\n    cnt += bisect_left(a,i)*(n-bisect_right(c,i))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16508": {"id": 16508, "code": "import math\nn = 2\na = [100, 0]\na = sorted(a, reverse = True)\nmid = a[0]//2\ndiff = abs(mid - a[0])\nif n == 2:\n    print(max(a[0],a[1]),min(a[0],a[1]))\nelse:\n    for i in range(n):\n        if abs(a[i] - mid) < diff:\n            diff = abs(a[i] - mid)\n            ans = i\n    print(a[0], a[ans])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7325": {"id": 7325, "code": "H = 10;N = 3\ndata = [4, 5, 6]\nsum = sum(data)\nif H - sum > 0:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10798": {"id": 10798, "code": "S = \"atcoder\"\ncount = 0\nN = len(S)\na = int((N-1)/2 )\nb = int((N +3)/2)\nif S[:a] ==S[b-1:]:\n  pass\nelse:\n  count +=1\nSS = S[b-1:]\nSSS =list(SS)\nfor i in range(len(SSS)):\n  if SSS[i] != SSS[-i-1]:\n    count +=1\nif count==0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7098": {"id": 7098, "code": "a = 211;b = 5\narr = [31, 41, 59, 26, 53]\nif sum(arr) >= a:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3243": {"id": 3243, "code": "a = 12;b = 4\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", "!", "!", ">", ">"]}, "9633": {"id": 9633, "code": "n = 3\ns = \"())\"\nl = []\nleft, right = 0, 0\nfor c in s:\n    if c == ')':\n        if l == []:\n            left += 1\n        else:\n            l.pop()\n    else:\n        l.append(1)\nright = len(l)\nprint('(' * left + s + ')' * right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "10967": {"id": 10967, "code": "S = \"akasaka\"\nn = len(S)\ns1 = S[:(n-1)//2]\ns2 = S[(n+3)//2-1:]\nif S[::-1]==S and s1[::-1]==s1 and s2[::-1]==s2:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "17305": {"id": 17305, "code": "a = \"D\";b = \"H\"\nh = 'H'\nd = 'D'\nresult = h\nif a == h:\n    if b == d:\n        result = d\nelse:\n    if b == h:\n        result = d\n    else:\n        result = h\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">"]}, "11965": {"id": 11965, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint('1' if d2 == 1 else '0')", "coverage": [">", ">", ">"]}, "1806": {"id": 1806, "code": "import math\nimport itertools\nimport sys\nimport copy\nN = 10;A = 7;B = 5\nmaxN = min(A, B)\nminN = max(A+B-N, 0)\nprint (str(maxN) + \" \" + str(minN))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15268": {"id": 15268, "code": "x = 13;y = 3;z = 1\nn = 1\nwhile x >= (n+1)*z + n*y:\n  n += 1\nprint(n-1)", "coverage": [">", ">", ">", ">", ">"]}, "17391": {"id": 17391, "code": "S = 1905\na = S//100\nb = S%100\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12 and (b>12 or b==0):\n    print('MMYY')\nelif (a==0 or a>12) and 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6945": {"id": 6945, "code": "hp = 210;n = 5\ndamage_list = [31, 41, 59, 26, 53]\ndamage_sum = sum(damage_list)\nif damage_sum >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "19273": {"id": 19273, "code": "n = 5\nif n % 2 == 1:\n    print(0)\nelse:\n    res = 0\n    m = 10\n    while n // m > 0:\n        res += n // m\n        m *= 5\n    print(res)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "6481": {"id": 6481, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\ntotal = 0\nfor i in range(N):\n    a = bisect.bisect_left(A,B[i])\n    c = N - bisect.bisect_right(C,B[i])\n    total += a*c\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15515": {"id": 15515, "code": "x = 64146;y = 123;z = 456\nn = int((x-z)/(y+z))\nprint(n)", "coverage": [">", ">", ">"]}, "10774": {"id": 10774, "code": "S = \"atcoder\"\nN = len(S)\nS1 = S[0:(N-1)//2]\nS2 = S[(N+3)//2-1:N]\nprint(\"Yes\" if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1] else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "16116": {"id": 16116, "code": "a = [12, 4]\nprint(0 if a[0]-2*a[1]<=0 else a[0]-2*a[1])", "coverage": [">", ">"]}, "17561": {"id": 17561, "code": "s = \"1700\"\nfirst = 0 < int(s[:2]) < 13\nsecond = 0 < int(s[2:]) < 13\nif first and second:\n    print('AMBIGUOUS')\nelif first:\n    print('MMYY')\nelif second:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17438": {"id": 17438, "code": "S = \"1700\"\nl = int(S[:2])\nr = int(S[2:])\na = 0\nans = ['NA', 'MMYY', 'YYMM', 'AMBIGUOUS']\nif 0 < l and l < 13:\n  a += 1\nif 0 < r and r < 13:\n  a += 2\nprint(ans[a])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "1652": {"id": 1652, "code": "N = 10;A = 3;B = 5\nM = min(A,B)\nm = max(0,A+B-N)\nprint(M,m)", "coverage": [">", ">", ">", ">"]}, "15751": {"id": 15751, "code": "x = 100000;y = 1;z = 1\nchair = (x - z) // (y + z)\nprint(chair)", "coverage": [">", ">", ">"]}, "15415": {"id": 15415, "code": "x = 13;y = 3;z = 1\nw=y+2*z\nans=1\nwhile w<=x-(y+z):\n    w+=y+z\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14105": {"id": 14105, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=0\ncount=1\nfor i in range(1,N):\n    if A[i-1]<A[i]:\n        if flag==-1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=1\n    elif A[i-1]>A[i]:\n        if flag==1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=-1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9361": {"id": 9361, "code": "S = \"2017/01/31\"\nprint(S.replace('2017', '2018'))", "coverage": [">", ">"]}, "17981": {"id": 17981, "code": "s = \"1700\"\ns1 = int(s[0:2])\ns2 = int(s[2:])\nif s1 > 0 and s1 < 13:\n    if s2 > 0 and s2 < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if s2 > 0 and s2 < 13:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "17955": {"id": 17955, "code": "s = \"1905\"\nif 1 <= int(s[:2]) <= 12 and 1 <= int(s[2:]) <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= int(s[:2]) <= 12:\n  print(\"MMYY\")\nelif 1 <= int(s[2:]) <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "12534": {"id": 12534, "code": "import math\na = 1;b = 1;k = 1\ngcd = math.gcd(a, b)\ncount = 0\nfor i in range(gcd, 0, -1):\n    if gcd % i == 0:\n        count += 1\n        if count == k:\n            print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15416": {"id": 15416, "code": "x = 12;y = 3;z = 1\nw=y+2*z\nans=1\nwhile w<=x-(y+z):\n    w+=y+z\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9679": {"id": 9679, "code": "N = 8\nmotoS = \"))))((((\"\nS = list(motoS)\nstart = 0\nend = 0\nfor i in range(N):\n    if S[i] == '(':\n        end += 1\n    else:\n        end -= 1\n    if end < 0:\n        start += 1\n        end = 0\nprint('('*start+motoS+')'*end)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "8102": {"id": 8102, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\naa=min(a)\nn-=k\nimport math\nq=0\nif n%(k-1)==0:\n    q+=n//(k-1)\nelse:\n    q+=n//(k-1)+1\nprint(q+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11630": {"id": 11630, "code": "S = \"SAT\"\nif S == 'SUN':\n    answer = 7\nelif S == 'MON':\n    answer = 6\nelif S == 'TUE':\n    answer = 5\nelif S == 'WED':\n    answer = 4\nelif S == 'THU':\n    answer = 3\nelif S == 'FRI':\n    answer = 2\nelif S == 'SAT':\n    answer = 1\nelse:\n    answer = '\u5165\u529b\u9593\u9055\u3044\u3010SUN\u3011\u3010MON\u3011\u3010TUE\u3011\u3010WED\u3011\u3010THU\u3011\u3010FRI\u3011\u3010SAT\u3011\u3092\u5165\u529b'\nprint(answer)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "17140": {"id": 17140, "code": "a = \"H\";b = \"H\"\nprint('H' if a == b == 'H' or a == b == 'D' else 'D')", "coverage": [">", ">"]}, "16281": {"id": 16281, "code": "n = \"5\"\na = [6, 9, 4, 2, 11]\nmax_ele = 0\nfor i in range(len(a)):\n    if a[i] > max_ele:\n        max_ele = a[i]\nmid = 0\nmid_val = max_ele / 2\nfor j in range(len(a)):\n    if abs(mid_val - a[j]) < abs(mid_val - mid):\n        mid = a[j]\nprint(str(max_ele) + \" \" + str(mid))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16240": {"id": 16240, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nnum1=a[-1]\nnum2=a[-1]/2\nnum3=a[-1]\nans=-1\nfor i in range(n-1):\n    if abs(a[i]-num2)<num3:\n        ans=a[i]\n        num3=abs(a[i]-num2)\nprint(num1,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1651": {"id": 1651, "code": "n = 100;a = 100;b = 100\nif(a+b <= n):\n    print(str(min(a,b)) + \" 0\")\nelse:\n    print(str(min(a,b)) + \" \" + str(abs(a+b-n)))", "coverage": [">", ">", "!", "!", ">"]}, "11017": {"id": 11017, "code": "s = \"akasaka\"\nN = len(s)\ns_first = s[:(N-1)//2]\ns_second = s[(N+1)//2:]\nif(s == s[::-1] and s_first == s_first[::-1] and s_second == s_second[::-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "14663": {"id": 14663, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nN = 1;P = 1\nA = [50]\ndp = [[0]*2 for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(N):\n    if A[i]%2==0:\n        dp[i+1][0] = 2*dp[i][0]\n        dp[i+1][1] = 2*dp[i][1]\n    else:\n        dp[i+1][0] = dp[i][0]+dp[i][1]\n        dp[i+1][1] = dp[i][0]+dp[i][1]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "12001": {"id": 12001, "code": "a = ['11', '30']\nb = ['12', '1']\nif int(a[0])<int(b[0]):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "17736": {"id": 17736, "code": "from sys import exit\nS = \"1905\"\nif 0 < int(S[0:2]) < 13:\n    if 0 < int(S[2:]) < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 0 < int(S[2:]) < 13:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "559": {"id": 559, "code": "s = \"codefestival\"\nk = 100\nl = [(26 - (ord(c) - ord('a'))) % 26 for c in s]\nfor i in range(len(s) - 1):\n    if k >= l[i]:\n        k -= l[i]\n        s = s[:i] + 'a' + s[i + 1 :]\nk %= 26\ns = s[:-1] + chr(ord('a') + (ord(s[-1]) - ord('a') + k) % 26)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13634": {"id": 13634, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c,sep=\" \")", "coverage": [">", ">"]}, "7284": {"id": 7284, "code": "h = 20;m = 3\na = [4, 5, 6]\nhissatsu_hp = 0\nfor i in range(0, m):\n    hissatsu_hp += a[i]\nresult = \"\"\nif hissatsu_hp >= h:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15139": {"id": 15139, "code": "n = 1;p = 1\nA = [50]\neven = 0\nodd = 0\nfor a in A:\n    if a % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nif odd == 0:\n    if p == 0:\n        ans = 2 ** n\n    else:\n        ans = 0\nelse:\n    ans = 2 ** (n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "13980": {"id": 13980, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nA = A\nf = 0\nans = 1\nfor k in range(N-1):\n    if f == 0:\n        if A[k] > A[k+1]:\n            f = -1\n        elif A[k] < A[k+1]:\n            f = 1\n    elif f == 1:\n        if A[k] > A[k+1]:\n            ans += 1\n            f = 0\n    else:\n        if A[k] < A[k+1]:\n            ans += 1\n            f = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "16038": {"id": 16038, "code": "from sys import stdin\nA = 20;B = 15\nif A > 2*B:\n    print(A - 2*B)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "5253": {"id": 5253, "code": "s = \"xyz\"\nprint(f\"{s[0]}{len(s)-2}{s[-1]}\")", "coverage": [">", ">"]}, "1778": {"id": 1778, "code": "N = 10;A = 3;B = 5\nif A+B > N:\n    mi = A+B -N\nelse:\n    mi = 0\nma =min([A,B])\nprint(ma,mi)", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "7519": {"id": 7519, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nans = 'No'\ntotal = 0\nfor i in range(n):\n    total += a[i]\n    if total >= h:\n        ans = 'Yes'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "217": {"id": 217, "code": "s = \"codefestival\"\nK = 100\ns = list(s)\nfor i in range(len(s)):\n    if s[i] != 'a':\n        dist = ord('z') - ord(s[i]) + 1\n        if dist <= K:\n            K -= dist\n            s[i] = 'a'\ntemp = K % 26\ns[-1] = chr(ord(s[-1]) + temp)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16915": {"id": 16915, "code": "a = \"D\";b = \"H\"\nif a == b:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "1177": {"id": 1177, "code": "x = \"112\"\nif int(x[0])>int(x[1]):\n  print (x[0]*3)\nelif int(x[0])==int(x[1]):\n  if int(x[0])>=int(x[2]):\n    print (x[0]*3)\n  else:\n    print (str(int(x[0])+1)*3)\nelse:\n  print (str(int(x[0])+1)*3)", "coverage": [">", ">", "!", ">", ">", "!", "!", ">", "!", "!"]}, "4339": {"id": 4339, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif m2 < m1:\n    while m2 < m1:\n        h2 -= 1\n        m2 += 60\ntm = m2 - m1\nth = h2 - h1\nif k > (th*60 + tm):\n    print (0)\nelse:\n    print(th*60 + tm - k)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "18459": {"id": 18459, "code": "h = 14\nw = 12\nn = 112\nv = max(h,w)\ncnt = (n-1)//v + 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">"]}, "117": {"id": 117, "code": "import sys\nreadline = sys.stdin.readline\nS = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nz = ord(\"z\")\nfor i in range(len(S) - 1):\n  if S[i] == \"a\":\n    continue\n  cost = z + 1 - ord(S[i])\n  if cost <= K:\n    S[i] = \"a\"\n    K -= cost\nK %= 26\nnex = ord(S[-1]) + K\nif nex > ord(\"z\"):\n  nex -= 26\nS[-1] = chr(nex)\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "15348": {"id": 15348, "code": "import sys\ninput = sys.stdin.readline\nx = 64146;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "9619": {"id": 9619, "code": "S = \"2017/01/31\"\nprint(S.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "761": {"id": 761, "code": "from sys import stdin\nk = 2\nnum = 7\nflag = 0\nfor i in range(1, k + 1):\n    if num % k == 0:\n        flag = 1\n        break\n    num = (num * 10 + 7) % k\nif flag == 1:\n    print(i)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "2693": {"id": 2693, "code": "n = \"1479\"\nprint('YNEOS'[n != '1479'::2])", "coverage": [">", ">"]}, "2932": {"id": 2932, "code": "S = \"35753\"\nt = 1000\nfor s in range(len(S)-2):\n    t = min(abs(753 - int(S[s:s+3])),t)\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "4587": {"id": 4587, "code": "s = \"xyz\"\nl = len(s)\nfront = s[0]\nback = s[l-1]\ncenter = str(l-2)\nans = front + center + back\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "893": {"id": 893, "code": "k = 101\nrem = 7%k\nfor i in range(10**6+1):\n    if rem == 0:\n        print(i+1)\n        break\n    rem = (rem*10+7)%k\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11508": {"id": 11508, "code": "x = \"SAT\"\narr=['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7-arr.index(x))", "coverage": [">", ">", ">"]}, "16703": {"id": 16703, "code": "a = \"D\";b = \"D\"\nif a == b:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "5847": {"id": 5847, "code": "n = 100\na,b = divmod(n,2)\nprint(a+b)", "coverage": [">", ">", ">"]}, "8027": {"id": 8027, "code": "n = 3;k = 3\na = [1, 2, 3]\nif (n + k - 1) // k == 1:\n    print(1)\nelse:\n    res = ((n - k) + (k - 2)) // (k - 1) + 1\n    print(res)", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "15559": {"id": 15559, "code": "x = 12;y = 3;z = 1\nans = x // (y+z)\nif (x % (y+z) < z):\n    ans -= 1\nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">"]}, "1546": {"id": 1546, "code": "n = 750\nwhile True:\n    if str(n)[0]==str(n)[1]==str(n)[2]:\n        print(n)\n        break\n    n+=1", "coverage": [">", ">", ">", ">", ">", ">"]}, "2910": {"id": 2910, "code": "S = \"1111111111\"\nN = len(S)\nans = 999\nfor i in range(0,N-2):\n  n = int(S[i:i+3])\n  ans = min(ans, abs(n - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14022": {"id": 14022, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nsw='n'\nans=0\nfor i in range(1,n):\n    if sw=='u':\n        if l[i-1]-l[i]<=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    elif sw=='d':\n        if l[i-1]-l[i]>=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    else:\n        if l[i-1]-l[i]<0:\n            sw='u'\n        elif l[i-1]-l[i]>0:\n            sw='d'\n        else:\n            continue\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "16672": {"id": 16672, "code": "a = \"D\";b = \"H\"\nif a==\"H\"and b==\"H\":\n    print(\"H\")\nelif a==\"H\"and b==\"D\":\n    print(\"D\")\nelif a==\"D\"and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9945": {"id": 9945, "code": "N = 3\nS = \"())\"\ni=0\nhidari=str()\nmigi=str()\na=0\nwhile i<N:\n  if S[i]==\")\":\n    hidari+=\"(\"\n    i+=1\n  else:\n    break\nwhile i<N:\n  if S[i]==\"(\":\n    a+=1\n  else:\n    a-=1\n  i+=1\nif a<0:\n  hidari+=abs(a)*\"(\"\nelif a>0:\n  migi+=a*\")\"\ns=hidari+S+migi\ni=0\nhidari=str()\nmigi=str()\na=0\nwhile i<N:\n  if S[i]==\")\":\n    hidari+=\"(\"\n    i+=1\n  else:\n    break\nwhile i<N:\n  if S[i]==\"(\":\n    if a<0:\n      a=0\n    a+=1\n    mina=0\n  else:\n    a-=1\n    if a<0:\n      if mina>a:\n        hidari+=\"(\"\n  i+=1\nif a>0:\n  migi+=a*\")\"\nt=hidari+S+migi\nif len(s)==len(t):\n  print(s)\nelif len(s)>len(t):\n  print(s)\nelse:\n  print(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!"]}, "7983": {"id": 7983, "code": "from math import ceil\nN = 4;K = 3\nA = [2, 3, 1, 4]\nans = ceil((N-1)/(K-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "14148": {"id": 14148, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nup = dn = False\nans = 1\np = A[0]\nfor a in A:\n    if p < a:\n        up = True\n    elif p > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    p = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8159": {"id": 8159, "code": "import math\nn = 4;k = 3\naa = (2, 3, 1, 4)\np = 0\nfor i in range(n):\n    if aa[i] == 1:\n        p = i\n        break\nn -= 1\nk -= 1\nx = math.ceil(n / k)\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9162": {"id": 9162, "code": "s = \"2017/01/07\"\nif s[3] == '7':\n    s = s[:3] + '8' + s[4:]\nprint(s)  ", "coverage": [">", ">", ">", ">"]}, "8418": {"id": 8418, "code": "n = 4\na_1 = [1, 1, 1, 1]\na_2 = [1, 1, 1, 1]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19389": {"id": 19389, "code": "n = 10\nprint(n+n%2*n)", "coverage": [">", ">"]}, "10878": {"id": 10878, "code": "s = \"level\"\nn = len(s)\nif s[:(n-1)//2] ==s[:(n-1)//2][::-1] and s == s[::-1] and s[(n+3)//2-1:] == s[(n+3)//2-1:][::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "13015": {"id": 13015, "code": "n = \"6\"\nl=\"753\"\nflag = 0\nfor m in l:\n    if m in n:\n        flag = 1\nprint(\"YES\" if flag ==1 else \"NO\")", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "8443": {"id": 8443, "code": "N = 5\nA = [[],[]]\nA = [[3, 2, 2, 4, 1], []]\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1809": {"id": 1809, "code": "a = 10;b = 7;c = 5\nans_max = min(b,c)\nans_min = min(b,c)-(a-max(b,c))\nif ans_min < 0:\n  ans_min = 0\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">", "!", ">"]}, "6934": {"id": 6934, "code": "import math\na = 211;b = 5\nA = [31, 41, 59, 26, 53]\nif a<=sum(A):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14780": {"id": 14780, "code": "N = 2;P = 0\nA = [1, 3]\nC = {0:0,1:0}\nfor i in range(N):\n    if A[i]%2==0:\n        C[0] += 1\n    else:\n        C[1] += 1\nif P==0:\n    if C[1]==0:\n        n = 2**C[0]\n    else:\n        n = 2**C[0]*2**(C[1]-1)\nelse:\n    if C[1]==0:\n        n = 0\n    else:\n        n = 2**C[0]*2**(C[1]-1)\nprint(n)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">"]}, "17615": {"id": 17615, "code": "S = \"1700\"\nmm = [\"0\"+str(x) for x in range(1,10)]+[\"10\",\"11\",\"12\"]\nmmyy = (S[:2] in mm)\nyymm = (S[2:] in mm)\na = \"NA\"\nif yymm and mmyy:\n  a = \"AMBIGUOUS\"\nelif yymm:\n  a = \"YYMM\"\nelif mmyy:\n  a = \"MMYY\"\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "1381": {"id": 1381, "code": "n = 112\nif n % 111 == 0:\n    print(n)\n    quit()\nprint((n//111+1)*111)", "coverage": [">", ">", "!", "!", ">"]}, "10778": {"id": 10778, "code": "s = \"akasaka\"\nn=len(s)\np=n//2\nt=1\nfor i in range(p):\n    if s[i]==s[p-1-i]:\n        t=1\n    else:\n        t=0\n        break;\nx=1\nfor i in range(p):\n    if s[p+1+i]==s[n-1-i]:\n        x=1\n    else:\n       x=0\n       break\ny=1\nfor i in range(n):\n    if s[i]==s[n-1-i]:\n        y=1\n    else:\n       y=0\n       break\nif (t==1 and x==1 and y==1):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!"]}, "17500": {"id": 17500, "code": "S = \"0112\"\nflagA = False\nflagB = False\nif 1 <= int(S[2:4])<= 12:\n  flagB = True\nif 1 <= int(S[0:2])<= 12:\n  flagA = True\nif flagA and flagB:\n  print(\"AMBIGUOUS\")\nelif flagA and not flagB:\n  print(\"MMYY\")\nelif flagB and not flagA:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "14899": {"id": 14899, "code": "N = 3;P = 0\nA = [1, 1, 1]\nodd=[]\neven=[]\nfor a in A:\n  if a%2==0:\n    even.append(a)\n  else:\n    odd.append(a)\namod=len(odd)\namev=len(even)\nevonly=2**amev\nfrom math import factorial\nif P==0:\n  evod=0\n  i=0\n  while amod>=i:\n    evod+=factorial(amod)//(factorial(i)*factorial(amod-i))\n    i+=2\n  print(evonly*evod)\nelse:\n  evod=0\n  i=1\n  while amod>=i:\n    evod+=factorial(amod)//(factorial(i)*factorial(amod-i))\n    i+=2\n  print(evonly*evod)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8612": {"id": 8612, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18655": {"id": 18655, "code": "import math\nH = 2\nW = 100\nl = max([H, W])\nN = 200\nprint(math.ceil(N/l))", "coverage": [">", ">", ">", ">", ">", ">"]}, "8493": {"id": 8493, "code": "N = 4\narray1 = [1, 1, 1, 1]\narray2 = [1, 1, 1, 1]\nma = 0\nfor i in range(N):\n    candy = sum(array1[:i+1])+sum(array2[i:])\n    ma = max(ma,candy)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8505": {"id": 8505, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13770": {"id": 13770, "code": "h = 10;m = 0;H = 12;M = 0;K = 120\nd = H*60+M-(h*60+m)\nprint(d-K)", "coverage": [">", ">", ">"]}, "2330": {"id": 2330, "code": "N = 4;M = 3\na = N*(N-1) // 2\nb = M*(M-1) // 2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "18288": {"id": 18288, "code": "h = 14\nw = 12\nn = 112\nc1=0\nc2=0\nt=0\nwhile t<n:\n  if h-c2<=w-c1:\n    t+=w-c1\n    c2+=1\n  else:\n    t+=h-c2\n    c1+=1\nprint(c1+c2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "6381": {"id": 6381, "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nfrom bisect import*\nans=0\nfor b in B:\n    x=bisect_left(A,b)\n    y=N-bisect_right(C,b)\n    ans+=x*y\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7838": {"id": 7838, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif N == K:\n    print(1)\nelse:\n    cnt = 1\n    N -= K\n    while N > 0:\n        cnt += 1\n        N -= K\n        N += 1\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8019": {"id": 8019, "code": "import sys\nimport math\nN = 3;K = 3\nA = [1, 2, 3]\nfor i in range(N):\n    if A[i] == 1:\n        ans = N\n        for j in range(max(0, i-(K-1)), min(N, i+K-1)):\n            ans = min(math.ceil(j/(K-1)) + math.ceil((N-j-1)/(K-1)), ans)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8437": {"id": 8437, "code": "N = 1\nA = [[],[]]\nA = [[2], []]\nA = [[2], [3]]\nresult = 0\nfor i in range(N+1):\n    result = max(sum(A[0][:i]) + sum(A[1][i-1:]), result)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5801": {"id": 5801, "code": "N = 2\nprint(N//2 + N % 2)", "coverage": [">", ">"]}, "8605": {"id": 8605, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10243": {"id": 10243, "code": "N = 8\nS = \"))))((((\"\nstack= []\nans=\"\"\nL=0\nR=0\nfor i in range(N):\n  if S[i]==\"(\":\n    stack.append(S[i])\n  else:\n    if len(stack)>0:\n      stack.pop()\n    else:\n      L += 1\nR=len(stack)\nans = L * \"(\" + S + R * \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "1335": {"id": 1335, "code": "n_list = ['7', '5', '0']\nn=[int(i) for i in n_list]\nans=str(n[0]+1)*3\nif n[0]>n[1]:\n    ans=str(n[0])*3\nelif n[0]==n[1]:\n    if n[1]>=n[2]:\n        ans=str(n[0])*3\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "3211": {"id": 3211, "code": "s = \"35753\"\nl = len(s)\nans = 999\nfor i in range(l - 2):\n    a = int(s[i:i + 3])\n    b = abs(753 - a)\n    if b < ans:\n        ans = b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6789": {"id": 6789, "code": "h = 10;n = 3\nA = [4, 5, 6]\nA.sort(reverse=True)\nmax_point = sum(A[:n])\nans = 'Yes'\nif max_point < h:\n    ans = 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "1229": {"id": 1229, "code": "n = \"750\"\nfor i in [\"111\",\"222\",\"333\",\"444\",\"555\",\"666\",\"777\",\"888\",\"999\"]:\n    if i == n:\n        print(n)\n        break\n    elif n < i:\n        print(i)\n        break", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3313": {"id": 3313, "code": "import math\na = 12;b = 4\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "17715": {"id": 17715, "code": "n = 1905\nr = n // 100\nl = n % 100\nif r <= 12 and 1 <= r:\n  if l <= 12 and 1 <= l:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if l <= 12 and 1 <= l:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "2162": {"id": 2162, "code": "n = 10;a = 7;b = 5\npopulation_max = a\nif b < a:\n    population_max = b\npopulation_min = 0\nif a+b > n:\n    population_min = (a+b)-n\nprint('{0} {1}'.format(population_max, population_min))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9812": {"id": 9812, "code": "N = 8\nS = [')', ')', ')', ')', '(', '(', '(', '(']\na = 0 \nb = 0 \nfor i in range(N):\n  if S[i] == '(':\n    a += 1\n  else:\n    if a > 0:\n      a -= 1\n    else:\n      b += 1\nans = \"\".join(S)\nif b > 0:\n  ans = \"(\"*b + ans\nif a > 0:\n  ans = ans + \")\"*a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13967": {"id": 13967, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nb = A[0]\natt = ''\ncnt = 1\nfor a in A:\n    if a != b:\n        if att == '':\n            if a > b:\n                att = '+'\n            elif a < b:\n                att = '-'\n        elif att == '+':\n            if a < b:\n                cnt += 1\n                att = ''\n        elif att == '-':\n            if a > b:\n                cnt += 1\n                att = ''\n    b = a\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1347": {"id": 1347, "code": "N = 750\nif N % 111:\n    print(111*(N//111 + 1))\nelse:\n    print(111*int((N/111)))", "coverage": [">", ">", ">", "!", "!"]}, "19065": {"id": 19065, "code": "N = 12\nif N % 2 == 1:\n    print('0')\n    exit()\nN //= 2\nans = 0\nwhile N:\n    ans += N // 5\n    N //= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16328": {"id": 16328, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nsort_A=sorted(A)\nmax_A=sort_A[-1]\nanswer=[]\nhalf_A=max_A//2\nnumber=pow(10,9)\nanswer=0\nfor n in range(N-1):\n    if number>=abs(sort_A[n]-half_A):\n        answer=n\n        number=abs(sort_A[n]-half_A)\nprint(max_A,sort_A[answer])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11898": {"id": 11898, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(['0','1'][m1<m2])", "coverage": [">", ">", ">"]}, "8088": {"id": 8088, "code": "N = 3;K = 3\nL = [1, 2, 3]\nres = (N-1)//(K-1)\nif (N-1) % (K-1) != 0:\n  print(res+1)\nelse:\n  print(res)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16316": {"id": 16316, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nmx = max(A)\nA = [a for a in A if a < mx]\nA.sort(key=lambda a: abs(mx / 2 - a))\nprint(mx, A[0])", "coverage": [">", ">", ">", ">", ">", ">"]}, "388": {"id": 388, "code": "s = \"codefestival\"\nk = 100\nloop = ord('z') + 1\nremaining = k\nans = []\nfor c in s:\n    if c == 'a':\n        ans.append(c)\n        continue\n    r = loop - ord(c)\n    if r <= remaining:\n        ans.append('a')\n        remaining -= r\n    else:\n        ans.append(c)\nif remaining > 0:\n    remaining %= 26\n    ans[-1] = chr(ord(ans[-1]) + remaining)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "12793": {"id": 12793, "code": "x = \"6\"\nprint([\"NO\",\"YES\"][x in \"357\"])", "coverage": [">", ">"]}, "8805": {"id": 8805, "code": "n = 4\ncandy_map = []\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\nans = 0\nfor i in range(n):\n    upper = sum(candy_map[0][:i])\n    lower = sum(candy_map[1][i+1:])\n    Sum = upper + lower + candy_map[0][i] + candy_map[1][i]\n    ans = max(ans, Sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17804": {"id": 17804, "code": "S = 1905\na = int(S/100 - (S%100)/100)\nb = int(S%100)\nif( 0<a<13 and 0<b<13 ):\n  print(\"AMBIGUOUS\")\nif( (0<a<13 and 12<b<100) or (0<a<13 and b==0) ):\n  print(\"MMYY\")\nif( (12<a<100 and 0<b<13) or (a==0 and 0<b<13) ):\n  print(\"YYMM\")\nif( 12<a<100 and 12<b<100 ):\n  print(\"NA\")\nif( a==0 and 12<b<100 ):\n  print(\"NA\")\nif( 12<a<100 and b==0 ):\n  print(\"NA\")\nif( a==0 and b==0 ):\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!"]}, "15895": {"id": 15895, "code": "A = 20;B = 30\nif A > B*2:\n  print(A-B*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "15408": {"id": 15408, "code": "a = \"64146\";b = \"123\";c = \"456\"\na=int(a)\nb=int(b)\nc=int(c)\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">"]}, "19518": {"id": 19518, "code": "a = 999999999\ni=1\nif a%2==0 and a%a==0:\n  print(a)\nelse:\n print(a*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "312": {"id": 312, "code": "s = ['x', 'y', 'z']\nK = 4\nzp1 = 1+ord('z')\nfor i in range(len(s)):\n    si = s[i]\n    cost = (zp1-ord(si))%26\n    if cost <= K:\n        K -= cost\n        s[i] = 'a'\ns[-1] = chr(ord('a') + (K + ord(s[-1]) - ord('a')) % 26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18098": {"id": 18098, "code": "s = \"1905\"\na=int(s[:2])\nb=int(s[2:])\nac=0\nbc=0\nif 0<a and a<13:\n  ac=1\nif 0<b and b<13:\n  bc=1\nif ac and bc:\n  print(\"AMBIGUOUS\")\nelif ac:\n  print(\"MMYY\")\nelif bc:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "15350": {"id": 15350, "code": "X = 13;Y = 3;Z = 1\nprint((X-Z)//(Z+Y))", "coverage": [">", ">"]}, "2389": {"id": 2389, "code": "n = 2;m = 1\nif n<=1:\n    n_ans=0\nelse:\n    n_ans=n*(n-1)/2\nif m<=1:\n    m_ans=0\nelse:\n    m_ans=m*(m-1)/2\nprint(int(n_ans+m_ans))", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "18801": {"id": 18801, "code": "h = 2\nw = 100\nn = 200\nif h >= w:\n  if n%h == 0:\n    print(str(n//h))\n  else:\n    print(str(n//h+1))\nelse:\n  if n%w == 0:\n    print(str(n//w))\n  else:\n    print(str(n//w+1))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "15763": {"id": 15763, "code": "x = 100000;y = 1;z = 1\nmitumori=x//(y+z)\nif x - mitumori*(y+z)>=z:print(mitumori)\nelse:print(mitumori-1)", "coverage": [">", ">", ">", ">"]}, "11126": {"id": 11126, "code": "S = \"atcoder\"\nN = len(S)\nS_1 = S[0:int((N-1)/2)]\nS_2 = S[int((N+3)/2-1):N+1]\nprint('Yes' if S[::-1] == S and S_1[::-1] == S_1 and S_2[::-1] == S_2 else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "16437": {"id": 16437, "code": "N = 5\na = [6, 9, 4, 2, 11]\nn = max(a)\nr = 0\nfor i in range(N):\n  if(abs(a[i] -  (n/2)) < abs(r -  (n/2))):\n    r = a[i]\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14730": {"id": 14730, "code": "N = 2;P = 0\nA = [1, 3]\ndic = {\"even\":0, \"odd\":0}\nfor i in range(N):\n    if A[i] % 2 == 0:\n        dic[\"even\"] += 1\n    else:\n        dic[\"odd\"]  += 1\nif dic[\"odd\"] == 0:\n    if P == 1:\n        print(0)\n    else:\n        print(2 ** dic[\"even\"])\nelse:\n    print(2 ** (N-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">"]}, "15331": {"id": 15331, "code": "from sys import stdin\nimport math\nx = 12;y = 3;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "6714": {"id": 6714, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nans = \"No\"\nsum_ = sum(A)\nif H <= sum_:\n  ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3517": {"id": 3517, "code": "A = 12;B = 4\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "7883": {"id": 7883, "code": "n = 3;k = 3\na = [1, 2, 3]\nprint((n-2)//(k-1)+1)", "coverage": [">", ">", ">"]}, "1291": {"id": 1291, "code": "n = 111\nl=[111,222,333,444,555,666,777,888,999]\nfor i in range(len(l)):\n    if n<= l[i]:\n        print(l[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "1819": {"id": 1819, "code": "n = 100;a = 100;b = 100\nans1 = min(a, b)\nif a + b < n:\n  ans2 = 0\nelse:\n  ans2 = abs(n - a - b)\nprint(ans1, ans2)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "4721": {"id": 4721, "code": "s = \"smiles\"\nn=len(s)\nS=list(s)\nt=S[0]+str(n-2)+S[n-1]\nprint(t)", "coverage": [">", ">", ">", ">", ">"]}, "3945": {"id": 3945, "code": "x = 13;y = 3;z = 1\nx -= z\nr = x // (y + z)\nprint(r)", "coverage": [">", ">", ">", ">"]}, "16239": {"id": 16239, "code": "n = 2\nlst = [100, 0]\nm = max(lst)\nr = m//2\nk = float('inf')\nfor i in range(n):\n  if lst[i] != m and abs(r-lst[i]) < abs(r-k):\n    k = lst[i]\nprint(m, k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5647": {"id": 5647, "code": "n = 5\ncount = n // 2\nif n % 2 == 0 :\n    print(count)\nelse :\n    count = count + 1\n    print(count)     ", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "15819": {"id": 15819, "code": "a = 100000;b = 1;c = 1\nm = a % (b+c)\nans = a // (b+c)\nif m >= c:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18011": {"id": 18011, "code": "a = 17;b = 0\nx = \"MM\" if 0 < a < 13 else \"YY\"\ny = \"MM\" if 0 < b < 13 else \"YY\"\nprint(x + y if x != y else \"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">"]}, "16492": {"id": 16492, "code": "import bisect\nN = 2\nA = [100, 0]\nA.sort()\nt, r = divmod(A[-1], 2)\nidx = bisect.bisect_left(A, t)\nif r == 1:\n    if idx != 0:\n        if abs(A[idx - 1] - t) < abs(A[idx] - t):\n            idx = idx - 1\nelse:\n    if idx != 0:\n        if abs(A[idx - 1] - t) <= abs(A[idx] - t):\n            idx = idx - 1\nprint(' '.join([str(A[-1]), str(A[idx])]))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "8824": {"id": 8824, "code": "import sys\ninput = sys.stdin.readline\nN = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12368": {"id": 12368, "code": "s = \"level\"\nn = len(s)\nflg = True\nfor i in range(n//2):\n    if s[i] != s[n-1-i]:\n        flg = False\nfor i in range(n//4):\n    if s[i] != s[n//2-1-i]:\n        flg = False\nprint('Yes') if flg else print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "11827": {"id": 11827, "code": "m = \"11\";d = \"30\"\nmm = \"12\";dd = \"1\"\nprint('0' if m==mm else '1')", "coverage": [">", ">", ">"]}, "5620": {"id": 5620, "code": "x = 5\nprint(x//2+x%2)", "coverage": [">", ">"]}, "19001": {"id": 19001, "code": "n = 5\nans = 0\nif n % 2 == 0:\n    denom = 2 * 5\n    while denom <= n:\n        ans += n // denom\n        denom *= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "10210": {"id": 10210, "code": "n = 8\ns = \"))))((((\"\nstack_len = 0\nans = \"\"\nstreak = 0\nfor i in s:\n    if i == \")\":\n        if stack_len:\n            stack_len -= 1\n            ans += \")\"\n        else:\n            ans = \"(\" + ans + \")\"\n    else:\n        ans += \"(\"\n        stack_len += 1\nans += \")\" * stack_len\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", ">"]}, "4523": {"id": 4523, "code": "s = \"smiles\"\nprint(s[0]+'%d' % len(s[1:-1])+s[-1])", "coverage": [">", ">"]}, "14104": {"id": 14104, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=0\ncount=1\nfor i in range(1,N):\n    if A[i-1]<A[i]:\n        if flag==-1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=1\n    elif A[i-1]>A[i]:\n        if flag==1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=-1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15325": {"id": 15325, "code": "x = 13;y = 3;z = 1\nprint(int((x - z) / (y + z)))", "coverage": [">", ">"]}, "18310": {"id": 18310, "code": "h = 2\nw = 100\nn = 200\nans = n // max(h,w) if n % max(h,w) == 0 else n // max(h,w) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "5548": {"id": 5548, "code": "N = 5\nans = (N + 2 - 1) / 2\nprint(int(ans))", "coverage": [">", ">", ">"]}, "728": {"id": 728, "code": "K = 101\nans=-1\np=10\nif K%7==0:\n  l=9*K//7\nelse:\n  l=9*K\nfor i in range(K):\n  if p%l==1:\n    ans=i+1\n    break\n  else:\n    p=(p%l)*10\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "7504": {"id": 7504, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nres = \"No\"\nfor i in range(n):\n  h -= a[i]\n  if h <= 0:\n    res = \"Yes\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "15116": {"id": 15116, "code": "N = 3;P = 0\nA = [1, 1, 1]\nB = [a % 2 for a in A]\ncount_0 = B.count(0)\ncount_1 = B.count(1)\nif count_1 == 0:\n    if P == 0:\n        ans = 2 ** N\n    else:\n        ans = 0\nelse:\n    ans = 2 ** (N - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "250": {"id": 250, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n    if s[i] != \"a\":\n        num = 26-(ord(s[i])-ord(\"a\"))\n        if k >= num:\n            k -= num\n            s[i] = \"a\"\ns[-1] = chr(ord(\"a\")+((ord(s[i])-ord(\"a\")+k)%26))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "12061": {"id": 12061, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M2==M1+1 and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2531": {"id": 2531, "code": "n1 = 1;n2 = 9;n3 = 7;n4 = 4\nif {n1, n2, n3, n4} == {1, 9, 7, 4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "17183": {"id": 17183, "code": "a = \"D\";b = \"H\"\nif a=='H':\n    a=1\nelse:\n    a=0\nif b=='H':\n    b=1\nelse:\n    b=0\nif a^b==0:\n    print('H')\nelse :\n    print('D')", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "16561": {"id": 16561, "code": "a = \"D\";b = \"H\"\nif a ==\"H\":\n  print(\"H\") if b ==\"H\" else print(\"D\")\nelse:\n  print(\"D\") if b ==\"H\" else print(\"H\")", "coverage": [">", ">", "!", "!", ">"]}, "16826": {"id": 16826, "code": "a = \"D\";b = \"D\"\nresult = ''\nif(a == 'H' and b == 'H'):\n  result = 'H'\nelif(a == 'H' and b == 'D'):\n  result = 'D'\nelif(a == 'D' and b == 'H'):\n  result = 'D'\nelif(a == 'D' and b == 'D'):\n  result = 'H'\nprint(result)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "9631": {"id": 9631, "code": "N = 6\nS = \")))())\"\nleft = [] \nfor i, s in enumerate(S):\n    if s == \"(\":\n        left.append(\"(\")\n    else:\n        if len(left) > 0:\n            left.pop()\n        else:\n            S = \"(\" + S\nfor _ in range(len(left)):\n    S += \")\"\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">"]}, "889": {"id": 889, "code": "k = 2\nif k%2==0 or k%5==0:\n    print(-1)\nelse:\n    i=1\n    t=7\n    while t%k!=0:\n        i+=1\n        t=(t*10+7)%k\n    print(i)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "5306": {"id": 5306, "code": "n = 2\nans=(n+1)//2\nprint(ans)", "coverage": [">", ">", ">"]}, "12418": {"id": 12418, "code": "s = \"akasaka\"\na=s[:len(s)//2+1//2]\nb=s[len(s)//2+1:]\nif s==s[::-1] and a==a[::-1] and b==b[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "18681": {"id": 18681, "code": "H = 14\nW = 12\nN = 112\ncnt, paint = 0, 0\nwhile paint < N:\n    paint += max(H,W)\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19203": {"id": 19203, "code": "N = 5\nans=0\nif ~N%2:\n    for i in range(1,30):\n        ans+=N//(2*5**i)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2700": {"id": 2700, "code": "s = \"1794\"\nif s.count(\"1\")==1 and  s.count(\"9\")==1 and  s.count(\"7\")==1 and  s.count(\"4\")==1:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "8841": {"id": 8841, "code": "n = 4\nup = [1, 1, 1, 1]\ndw = [1, 1, 1, 1]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11797": {"id": 11797, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(\"1\" if M1 != M2 else \"0\")", "coverage": [">", ">", ">"]}, "7926": {"id": 7926, "code": "N = 4;K = 3\nAx = [2, 3, 1, 4]\nif N == K:\n    print(1)\n    exit()\nN -= K\nans = 1\nwhile N > 0:\n    N = N-(K-1)\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "4430": {"id": 4430, "code": "s = \"smiles\"\nprint('{}{}{}'.format(s[0],len(s)-2,s[-1]))", "coverage": [">", ">"]}, "16638": {"id": 16638, "code": "s={'H':0,'D':1}\nt=0\na = ['H', 'H']\nfor i in range(2):\n  t+=s[a[i]]\nif t%2!=0:\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1922": {"id": 1922, "code": "n = 10;a = 7;b = 5\nprint(min(a, b), max((a + b) - n, 0))", "coverage": [">", ">"]}, "18945": {"id": 18945, "code": "n = 12\nif n==0 or n%2==1:\n  print(0)\nelse:\n  k=n//2\n  s=5\n  ans=0\n  while k>=s:\n    ans+=k//s\n    s*=5\n  print (ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17564": {"id": 17564, "code": "S = \"1700\"\nF = S[:2]\nL = S[2:]\nif F == \"00\" or int(F)>12:\n    if L == \"00\" or int(L) > 12:\n        ans = \"NA\"\n    else:\n        ans = \"YYMM\"\nelif int(F) <= 12:\n    if int(L) >= 1 and int(L) <=12:\n        ans = \"AMBIGUOUS\"\n    else:\n        ans = \"MMYY\"    \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "18303": {"id": 18303, "code": "H = 14\nW = 12\nN = 112\nif N // H > N // W:\n\tprint((N // W) + 1 ) if N % W != 0 else print(N // W)\nelse:\n\tprint((N // H) + 1 ) if N % H != 0 else print(N // H)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17086": {"id": 17086, "code": "a = \"D\";b = \"H\"\nif a == b:\n  ans = 'H'\nelse:\n  ans = 'D'\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "1538": {"id": 1538, "code": "N = 111\nfor i in range(N,1000):\n  i = str(i)\n  if i[0] == i[1] and i[1] == i[2] and i[2] == i[0]:\n    ans = i\n    break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14558": {"id": 14558, "code": "n = 3;p = 0\na = [1, 1, 1]\ncnt = [0, 0]\nfor i in a:\n    cnt[i % 2] += 1\nif cnt[1] == 0:\n    print(0 if p == 1 else 2 ** n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16775": {"id": 16775, "code": "a = \"D\";t = \"D\"\nprint('H' if a==t else 'D')", "coverage": [">", ">"]}, "11706": {"id": 11706, "code": "s = \"SAT\"\nS = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nprint(7-S.index(s))", "coverage": [">", ">", ">"]}, "5572": {"id": 5572, "code": "a = 5\nprint((a+1)//2)", "coverage": [">", ">"]}, "2936": {"id": 2936, "code": "S = \"1111111111\"\nm = 753 \nfor i in range(len(S)-2):\n    tmp=(S[i:i+3])\n    m=min(abs(753-int(tmp)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4220": {"id": 4220, "code": "ip = [10, 0, 15, 0, 30]\nh = ip[2] - ip[0]\nm = ip[3] - ip[1]\ntotal = (h * 60) + m - ip[4]\nif total >= 0:\n    print(str(total))\nelse:\n    print(str(0))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18439": {"id": 18439, "code": "h = 2\nw = 100\nn = 200\nj = 0\nk = 1\nif h > w:\n  j = h\nelse:\n  j = w\nwhile n > j:\n  n = n - j\n  k = k + 1\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "12375": {"id": 12375, "code": "s = \"atcoder\"\ns = list(s)\ns1 = s[0:len(s)//2]\ns2 = s[len(s)//2+1:len(s)]\nif (\"\".join(s1) == \"\".join(s2)) :\n  print(\"Yes\")\nelse :    \n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12227": {"id": 12227, "code": "S = \"atcoder\"\nN=len(S)\nA=S[:(N-1)//2]\nB=S[(N+3)//2-1:]\nif S!=S[::-1] or A!=A[::-1] or B!=B[::-1]:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9374": {"id": 9374, "code": "y = \"2017\";m = \"01\";d = \"07\"\nprint('2018' + '/' + m + '/' + d)", "coverage": [">", ">"]}, "12487": {"id": 12487, "code": "a = 8;b = 12;k = 2\nnum = min(a, b)\ncnt = 0\nwhile cnt < k:\n    if a%num == 0 and b%num == 0:\n        cnt += 1\n        num -= 1\n    else:\n        num -= 1\nprint(num + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "18111": {"id": 18111, "code": "s = \"0112\"\na, b = int(s[:2]), int(s[2:])\nym, my = False, False\nif a > 0 and a <13:\n    my = True\nif b > 0 and b <13:\n    ym = True\nif ym and my:\n    print('AMBIGUOUS')\nelif ym and not my:\n    print('YYMM')\nelif not ym and my:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8319": {"id": 8319, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nnow = k\nres = 1\nwhile now < n:\n    now += k-1\n    res += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9325": {"id": 9325, "code": "date = \"2017/01/31\"\ndate_list = list(date)\ndate_list[3] = '8'\noutput = ''.join(date_list)\nprint(output)", "coverage": [">", ">", ">", ">", ">"]}, "1827": {"id": 1827, "code": "n = 10;a = 7;b = 5\ntotal=a+b\nif n==a==b:\n    print(n,n)\n    exit()\nif n<total:\n    print(min(a,b),total-n)\nelse:\n    print(min(a,b),0)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "1150": {"id": 1150, "code": "N = 112\nS = str(N)\nif S[0] == S[1] == S[2]:\n    print(N)\nelse:\n    print(111 * (N // 111 + 1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "8761": {"id": 8761, "code": "from itertools import accumulate\nN = 4\nA = [1, 2, 3, 4]\nB = [4, 3, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4286": {"id": 4286, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ntime1 = H1 * 60 + M1\ntime2 = H2 * 60 + M2\nprint(max(0, time2 - time1 - K))", "coverage": [">", ">", ">", ">"]}, "9447": {"id": 9447, "code": "S = \"2017/01/31\"\nans = '2018/01/' + S[8:]\nprint(ans)", "coverage": [">", ">", ">"]}, "2170": {"id": 2170, "code": "A = [10, 3, 5]\nif A[1] + A[2] < A[0]:\n  b = 0\nelse:\n  b = A[1] + A[2] - A[0]\nx = [A[1], A[2]]\nprint(min(x) ,b)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "15372": {"id": 15372, "code": "X = 64146;Y = 123;Z = 456\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "14571": {"id": 14571, "code": "n = 2;p = 0\na = [1, 3]\nfor i in range(n):\n    a[i]=a[i]%2\none=sum(a)\nzero=n-one\nif p==1 and one==0:\n    print(0)\n    exit()\nif p==0 and one==0:\n    print(2**n)\n    exit()\nprint(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "3293": {"id": 3293, "code": "a = 20;b = 30\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", "!", ">"]}, "1799": {"id": 1799, "code": "n = 10;a = 3;b = 5\nmax = 0\nmin = 0\nif a > b:\n  max = b\n  min = b - (n - a)\nelse:\n  max = a\n  min = a - (n - b)\nif min < 0:\n  min = 0\nprint('{} {}'.format(max, min))", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6719": {"id": 6719, "code": "h = 10;n = 3\nlist_a = [4, 5, 6]\nif h <= sum(list_a): print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", "!"]}, "10885": {"id": 10885, "code": "s = \"atcoder\"\nn = len(s)\ns1 = s[0:(n - 1) // 2]\ns2 = s[(n + 3) // 2 - 1:]\nif s == s[::-1] and s1 == s1[::-1] and s2 == s2[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11253": {"id": 11253, "code": "S = \"SUN\"\nyoubi = ['SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nprint(youbi.index(S) + 1)", "coverage": [">", ">", ">"]}, "9605": {"id": 9605, "code": "S = \"2017/01/31\"\ns1 = \"2018\"\ns2 = S[4:]\ns = s1 + s2\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "11930": {"id": 11930, "code": "l1 = [11, 16]\nl2 = [11, 17]\nif l1[0] == l2[0]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "17772": {"id": 17772, "code": "S = \"0112\"\na=int(S[:2])\nb=int(S[2:])\nif 0<a<=12 and b==0 or 0<a<=12 and b>12:\n  print(\"MMYY\")\nelif 0<a<=12 and 0<b<=12:\n  print(\"AMBIGUOUS\")\nelif 0<b<=12 and a==0 or 0<b<=12 and a>12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "260": {"id": 260, "code": "t=\"abcdefghijklmnopqrstuvwxyz\"\ns = \"a\"\nk = 25\na=[t.index(i)for i in s]\nans=\"\"\nfor i in a:\n  j=i\n  if i==0:\n    ans+=\"a\"\n    continue\n  if k>=26-i:\n    k-=26-i\n    j=0\n  ans+=t[j]\nj+=k\nj%=26\nans=ans[:-1]+t[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "5171": {"id": 5171, "code": "s = \"smiles\"\nprint(s[0] + str(len(s[0:-2])) + s[-1])", "coverage": [">", ">"]}, "6499": {"id": 6499, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left\nfrom bisect import bisect_right\ncount = 0\nfor bi in range(n):\n  c_right = bisect_right(c, b[bi])\n  a_left = bisect_left(a, b[bi])\n  count += (n-c_right) * a_left\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10074": {"id": 10074, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nstack = []\nfor i in range(n):\n    if s[i] == \"(\":\n        stack.append(\"(\")\n    elif len(stack) == 0 or stack[-1] == \")\":\n        stack.append(\")\")\n    else:\n        stack.pop()\nstack = sorted(stack, reverse=True)\nidx = 0\nwhile idx < len(stack):\n    if stack[idx] == \"(\":\n        break\n    else:\n        print(\"(\", end=\"\")\n    idx+=1\nfor ch in s:\n    print(ch, end=\"\")\nfor i in range(idx, len(stack)):\n    print(\")\", end=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">"]}, "18982": {"id": 18982, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit()\nelif n % 2 == 0:\n    ans = 0\n    t = 10\n    while n >= t:\n        ans += n // t\n        t *= 5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "18964": {"id": 18964, "code": "n = 5\nans=0\nif n%2==0:\n    for i in range(1,26):\n        ans+=(n//(2*5**i))\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15294": {"id": 15294, "code": "X = 13;Y = 3;Z = 1\nfor i in range(1,X):\n  if (Y+Z)*i+Z > X:\n    print(i-1)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "17215": {"id": 17215, "code": "a = \"D\";b = \"H\"\nif a == 'H' and b == 'H':\n  print('H')\nelif a == 'H' and b == 'D':\n  print('D')\nelif a == 'D' and b == 'H':\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "3604": {"id": 3604, "code": "A = 20;B = 30\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "9987": {"id": 9987, "code": "n = \"8\"\ns = \"))))((((\"\ncount = 0\nmax_l = 0\nmax_r = 0\nfor c in s:\n    if c ==\"(\":\n        count -= 1\n    else:\n        count += 1\n    max_l = max(max_l, count)\ncount = 0\nfor c in s[::-1]:\n    if c ==\"(\":\n        count += 1\n    else:\n        count -= 1\n    max_r = max(max_r, count)\nprint(\"(\"*max_l + s + \")\"*max_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15616": {"id": 15616, "code": "icase=0\nif icase==0:\n    x = 64146;y = 123;z = 456\n    n=x//(y+z)\n    if x%(y+z)>=z:\n        print(n)\n    else:\n        print(n-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "5990": {"id": 5990, "code": "N = 2\na = N // 2\nb = N % 2\nprint(a + b)", "coverage": [">", ">", ">", ">"]}, "3666": {"id": 3666, "code": "A = 12;B = 4\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "12485": {"id": 12485, "code": "a = 100;b = 50;k = 4\nn = min(a,b)\ncount = 0\nfor i in reversed(range(1,n+1)):\n    if a % i == 0 and b % i == 0:\n        count += 1\n    if count == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1407": {"id": 1407, "code": "n = 112\nprint(((n-1)//111+1)*111)", "coverage": [">", ">"]}, "7372": {"id": 7372, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\ntemp = 0\nans = \"No\"\nfor i in a:\n    temp += i \n    if temp>=h:\n        ans = \"Yes\"\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5119": {"id": 5119, "code": "import sys\ns = \"internationalization\"\nprint(s[0]+str(len(s[1:-1]))+s[-1])", "coverage": [">", ">", ">"]}, "16482": {"id": 16482, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nx = A[-1]\nA.pop()\nz = x*10\nfor a in A:\n    if abs(x-a*2) < abs(x-z*2):\n        z = a\nprint(x, z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4085": {"id": 4085, "code": "string = \"10 0 12 0 120\"\nnums = string.split(' ')\nhour = int(nums[2]) - int(nums[0])\nminute = int(nums[3]) - int(nums[1])\ntime = hour * 60 + minute - int(nums[4])\nprint(time)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4600": {"id": 4600, "code": "s = \"internationalization\"\nx = len(s) - 2\nword = s[0] + str(x) + s[-1]\nprint(word)", "coverage": [">", ">", ">", ">"]}, "14960": {"id": 14960, "code": "import math\nn = 3;p = 0\na = [1, 1, 1]\nzero_count = 0\none_count = 0\nfor num in a:\n    if num % 2 == 0:\n        zero_count += 1\n    else:\n        one_count += 1\ncoef = 2 ** zero_count\nans = 0\nfor i in range(one_count + 1):\n    if i % 2 != p:\n        continue\n    ans += math.factorial(one_count) // math.factorial(one_count - i) // math.factorial(i)\nprint(ans * coef)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19134": {"id": 19134, "code": "N = 12\nif N % 2 != 0:\n    print(0)\n    exit(0)\nans = 0\na = 10\nwhile True:\n    if N < a:\n        break\n    ans += N//a\n    a *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "171": {"id": 171, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n    a = 26-(ord(s[i])-97)\n    if k >= a and a != 26:\n        k -= a\n        s[i] = \"a\"\ns[-1] = chr(ord(s[-1]) + k % 26)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5758": {"id": 5758, "code": "score = 5\nif score % 2 == 1:\n    print(int((score+1)/2))\nelse:\n    print(int(score/2))", "coverage": [">", ">", ">", "!", "!"]}, "17222": {"id": 17222, "code": "a = \"D\";b = \"D\"\nprint(['D', 'H'][a==b])", "coverage": [">", ">"]}, "12195": {"id": 12195, "code": "import sys\ninput = sys.stdin.readline\nM1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif(M1+1==M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16728": {"id": 16728, "code": "a = \"H\";b = \"H\"\nprint(\"H\" if (a == \"D\") ^ (b == \"H\") else \"D\")", "coverage": [">", ">"]}, "4917": {"id": 4917, "code": "import math\na = \"xyz\"\nprint(a[0]+str(len(a)-2)+a[-1])", "coverage": [">", ">", ">"]}, "17136": {"id": 17136, "code": "import sys\na = \"D\";b = \"H\"\nif (a, b) == ('H', 'H'):\n    print('H')\n    sys.exit()\nif (a, b) == ('D', 'D'):\n    print('H')\n    sys.exit()\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", ">"]}, "1294": {"id": 1294, "code": "n = 111\nif n//100<(n%100)//10 or (n//100==(n%100)//10 and n//100<(n%10)):\n  print(((n//100)+1)*111)\nelse:\n  print((n//100)*111)", "coverage": [">", ">", "!", "!", ">"]}, "12844": {"id": 12844, "code": "N = \"5\"\nprint(\"YES\" if N in \"753\" else \"NO\")", "coverage": [">", ">"]}, "7864": {"id": 7864, "code": "from math import ceil\nn = 4;k = 3\na = [2, 3, 1, 4]\nm = a.index(1)\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "11279": {"id": 11279, "code": "S = \"SUN\"\nyoubi = ['MON','TUE','WED','THU','FRI','SAT','SUN']\nprint(7 if S == 'SUN' else 6-youbi.index(S))", "coverage": [">", ">", ">"]}, "14170": {"id": 14170, "code": "import collections\nimport itertools as it\nimport math\nn = 6\na = [1, 2, 3, 2, 2, 1]\nif n == 1:\n    print(1)\nelse:\n    ans = 1\n    state = lambda n1, n2: 0 if n1 == n2 else (1 if n2 > n1 else -1)\n    diff = [state(a1, a2) for a1, a2 in zip(a[:-1], a[1:]) if state(a1, a2) != 0]\n    p = 1\n    while p < len(diff):\n        if abs(diff[p] - diff[p-1]) == 2:\n            ans += 1\n            p += 1\n        p += 1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13446": {"id": 13446, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(\",\", \" \"))", "coverage": [">", ">"]}, "16549": {"id": 16549, "code": "a = \"D\";b = \"H\"\nif a=='H':\n    print(b)\nelse:\n    print('HD'.replace(b,''))", "coverage": [">", ">", "!", "!", ">"]}, "15115": {"id": 15115, "code": "N = 1;P = 1\nA = [50]\nB = [a % 2 for a in A]\ncount_0 = B.count(0)\ncount_1 = B.count(1)\nif count_1 == 0:\n    if P == 0:\n        ans = 2 ** N\n    else:\n        ans = 0\nelse:\n    ans = 2 ** (N - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "10763": {"id": 10763, "code": "if __name__ == '__main__':\n    s = \"level\"\n    cnt = 0\n    r = s[::-1]\n    if s == r:\n        cnt += 1\n    n = len(s)\n    n2 = (n-1)//2\n    ss = s[:n2]\n    rr = ss[::-1]\n    if ss == rr:\n        cnt += 1\n    n3 = (n+3) //2\n    sss = s[n3-1:]\n    rrr = sss[::-1]\n    if sss == rrr:\n        cnt += 1\n    if cnt==3 :\n        print(\"Yes\")\n    else:\n        print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "1226": {"id": 1226, "code": "a = \"750\"\nzyun= len(a)*9+int(a[0])\nzoro=0\nz = zyun//9\naf= zyun%9\nif af==0:\n    if int(a)<=int(str(9)*(z-1)):\n        print(int(str(9)*(z-1)))\n    else:\n            print(str(1)*(z))\nelse :\n    if int(a)<=int(str(af)*(z)):\n        print(int(str(af)*(z)))\n    else:\n        print(int(str(af+1)*(z)))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "11364": {"id": 11364, "code": "S = \"SAT\"\nls = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ncnt = 0\ndict = {}\nfor item in ls:\n    dict[item] = cnt\n    cnt += 1\nprint(7 - dict[S])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8610": {"id": 8610, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18223": {"id": 18223, "code": "import math\nH = 14\nW = 12\nN = 112\nfor i in range(1, max(H, W)+1):\n    if(max(H, W)*i >= N):\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "981": {"id": 981, "code": "n = 112\ntemp = (n // 100) * 111\nprint(temp if temp >= n else temp + 111)", "coverage": [">", ">", ">"]}, "2768": {"id": 2768, "code": "S = \"35753\"\nresult = 10 ** 9\nfor i in range(len(S) - 3 + 1):\n  result = min(result, abs(753 - int(S[i:i+3])))\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "12871": {"id": 12871, "code": "x = \"6\"\nprint(\"YES\" if x in \"753\" else \"NO\")", "coverage": [">", ">"]}, "11356": {"id": 11356, "code": "S = \"SAT\"\nWeek=['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(7):\n  if S==Week[i]:\n    today=i\nprint(7-today)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12938": {"id": 12938, "code": "x = \"5\"\nif x in '357':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "4047": {"id": 4047, "code": "from sys import stdin\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(((H2-H1)*60 + (M2-M1)) - K)", "coverage": [">", ">", ">"]}, "17543": {"id": 17543, "code": "S = \"1700\"\nif int(S[0: 2]) >= 13 or int(S[0: 2]) == 0:\n    if int(S[2: 4]) == 0 or int(S[2: 4]) >= 13:\n        print('NA')\n    else:\n        print('YYMM')\nelse:\n    if int(S[2: 4]) == 0 or int(S[2: 4]) >= 13:\n        print('MMYY')\n    else:\n        print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "1688": {"id": 1688, "code": "n = 10;a = 3;b = 5\nmx = min(a, b)\nmn = max(0, a + b - n)\nprint(mx, mn)", "coverage": [">", ">", ">", ">"]}, "1959": {"id": 1959, "code": "N = 100;A = 100;B = 100\nmaximum=min(A,B)\nif N>A+B:\n    minimum=0\nelse:\n    minimum=A+B-N\nprint(str(maximum)+' '+str(minimum))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "16205": {"id": 16205, "code": "n = 2\na = [100, 0]\na.sort()\nleft = a.pop()\nyoi = left/2\nfor i in range(n-1):\n    if a[i] >= yoi:\n        a[i] = (abs(a[i]-yoi), 1)\n    else:\n        a[i] = (abs(a[i]-yoi), -1)\na.sort()\nright = abs(int(a[0][0]+a[0][1]*yoi))\nprint(left, right)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6347": {"id": 6347, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    lenA = bisect.bisect_left(A,b)\n    lenC = N - bisect.bisect(C,b)\n    ans += lenA*lenC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11121": {"id": 11121, "code": "S = \"akasaka\"\nN = len(S)\nsubS1 = S[:int((N - 1) / 2)]\nsubS2 = S[int((N + 3) / 2) - 1:]\nif subS1 == subS1[::-1] and subS2 == subS2[::-1] and S == S[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9792": {"id": 9792, "code": "from collections import deque\nn = 8\ns = \"))))((((\"\nA = deque([])\nl = 0\nr = 0\nfor i in range(n):\n  if s[i]=='(':\n    A.append(s[i])\n    l += 1\n  else:\n    if l!=0:\n      A.append(s[i])\n      l -=1\n    else:\n      A.appendleft(\"(\")\n      A.append(s[i])\nfor j in range(l):\n  A.append(\")\")\nprint(\"\".join(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14094": {"id": 14094, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nwhile i < n:\n    j = i\n    while j < n-1 and l[j] >= l[j+1]:\n        j += 1\n    k = i\n    while k < n-1 and l[k] <= l[k+1]:\n        k += 1\n    i = max(j, k) + 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16994": {"id": 16994, "code": "a = \"D\";b = \"D\"\nif a==b: print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", "!"]}, "9349": {"id": 9349, "code": "a = \"2017/01/31\"\nprint(\"2018\"+a[4:])", "coverage": [">", ">"]}, "13838": {"id": 13838, "code": "n = 9\na_li = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n < 3:\n    print(1)\n    exit()\nans = 1\nflag = \"flat\"\nfor i in range(1,n):\n    if a_li[i-1] > a_li[i]:\n        if flag == \"up\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"down\"\n    elif a_li[i-1] < a_li[i]:\n        if flag == \"down\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"up\"\n    else:\n        if flag == \"flat\":\n            flag = \"flat\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", "!", "!", ">"]}, "2975": {"id": 2975, "code": "import sys\ninput = sys.stdin.readline\nS = \"1111111111\"\nans = 999\nfor i in range(len(S) - 3):\n    ans = min(abs(int(S[i:i+3])-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13236": {"id": 13236, "code": "s = \"haiku,atcoder,tasks\"\nnew_s = s.replace(',',' ')\nprint(new_s)", "coverage": [">", ">", ">"]}, "1475": {"id": 1475, "code": "n = 112\nif 100<=n<=111:\n    print(111)\nelif 112<=n<=222:\n    print(222)\nelif 223<=n<=333:\n    print(333)\nelif 334<=n<=444:\n    print(444)\nelif 445<=n<=555:\n    print(555)\nelif 556<=n<=666:\n    print(666)\nelif 667<=n<=777:\n    print(777)\nelif 778<=n<=888:\n    print(888)\nelif 889<=n<=999:\n    print(999)", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "3500": {"id": 3500, "code": "A = 20;B = 15\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", ">", "!", "!"]}, "6994": {"id": 6994, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif h<=sum(a):print(\"Yes\")\nelse:print(\"No\")", "coverage": [">", ">", ">", ">"]}, "12278": {"id": 12278, "code": "s = ['l', 'e', 'v', 'e', 'l']\nn = len(s)\nif (\n    s[: (n - 1) // 2] == s[: (n - 1) // 2][::-1]\n    and s[(n + 1) // 2 :] == s[(n + 1) // 2 :][::-1]\n    and s == s[::-1]\n):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", "!", ">", "!", "!", "!", "!", "!", ">"]}, "17395": {"id": 17395, "code": "s = \"0112\"\nflag=[0,0]\nif 1<=int(s[0:2])<=12:\n    flag[0]=1\nif 1<=int(s[2:4])<=12:\n    flag[1]=1\nif flag==[0,0]:\n    print(\"NA\")\nif flag==[1,0]:\n    print(\"MMYY\")\nif flag==[0,1]:\n    print(\"YYMM\")\nif flag==[1,1]:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "457": {"id": 457, "code": "s = \"codefestival\"\nk = 100\nn=len(s)\ni=0\nans=\"\"\nwhile i<n:\n    if i!=n-1:\n        if s[i]==\"a\":\n            ans+=\"a\"\n        elif k>=123-ord(s[i]):\n            ans+=\"a\"\n            k-=(123-ord(s[i]))\n        else:\n            ans+=s[i]\n    else:\n        if k>=123-ord(s[i]):\n            k-=(123-ord(s[i]))\n            k=k%26\n            ans+=chr(97+k)\n        else:\n            ans+=chr(ord(s[i])+k)\n    i+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", "!", "!", ">", ">", ">"]}, "125": {"id": 125, "code": "alphabet = list(\"abcdefghijklmnopqrstuvwxyz\")\ns = ['a']\nS = [alphabet.index(x) for x in s]\nK = 25\ntmp = K\ni = 0\nwhile i < len(S) and tmp > 0:\n  if S[i] != 0 and 26-S[i] <= tmp:\n    tmp -= 26-S[i]\n    S[i] = 0\n  i += 1\nif tmp > 0:\n  S[-1] = (S[-1]+tmp)%26\nprint(\"\".join([alphabet[x] for x in S]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6318": {"id": 6318, "code": "import bisect\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nL = [0] * n\nfor i in range(n):\n    a = bisect.bisect_left(A, B[i])\n    L[i] = a\ncum = [0] * (n + 1)\nfor i in range(n):\n    cum[i+1] = cum[i] + L[i]\nfor i in range(n):\n    b = bisect.bisect_left(B, C[i])\n    ans += cum[b]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3851": {"id": 3851, "code": "MM = ['12', '3', '1']\nX = int(MM[0])\nY = int(MM[1])\nZ = int(MM[2])\nx = 0\nwhile True:\n  if x*(Y+Z)+Z >X:\n    break\n  else:\n    x +=1\nprint(x-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12340": {"id": 12340, "code": "S = \"atcoder\"\nN = len(S)\nif S == S[::-1]:\n  if S[:(N-1)//2] == S [(N+1)//2:]:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "1897": {"id": 1897, "code": "n = 10;a = 3;b = 5\nsaidai = min(a,b)\nsaisyo = max(0,a+b-n)\nprint(saidai,saisyo)", "coverage": [">", ">", ">", ">"]}, "236": {"id": 236, "code": "s = \"xyz\";k = 4\nans = []\na = ord('z') + 1\nfor i in s:\n    if k == 0:\n        ans.append(ord(i))\n    elif a - ord(i) <= k and i != 'a':\n        k -= a - ord(i)\n        ans.append(ord('a'))\n    else:\n        ans.append(ord(i))\nans[-1] += k % 26\nif ans[-1] >= a:\n    ans[-1] -= 26\nprint(*map(chr, ans), sep='')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "1400": {"id": 1400, "code": "n = \"111\"\nif n[0] >= n[1] and (n[0] >= n[2] or n[1] >= n[2]):\n    print(n[0]+n[0]+n[0])\nelse:\n    print(str(int(n[0])+1) + str(int(n[0])+1) + str(int(n[0])+1))", "coverage": [">", ">", ">", "!", "!"]}, "11262": {"id": 11262, "code": "days = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SAT\"\nx = days.index(s)\nprint(7-x)", "coverage": [">", ">", ">", ">"]}, "3351": {"id": 3351, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 30\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "11270": {"id": 11270, "code": "s = \"SAT\"\nx = 7\nif s == \"SUN\":\n    pass\nelif s == \"SAT\":\n    x = x - 6\nelif s == \"FRI\":\n    x = x - 5\nelif s == \"THU\":\n    x = x - 4\nelif s == \"WED\":\n    x = x - 3\nelif s == \"TUE\":\n    x = x - 2\nelif s == \"MON\":\n    x = x - 1\nprint(x)", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "10031": {"id": 10031, "code": "N = 3\nS = ['(', ')', ')']\ncount=0\nLR=[0,0]\nfor i in range(N):\n    if S[i]==\"(\":\n        count+=1\n    else:\n        if count==0:\n            LR[0]+=1\n            continue\n        count-=1\nLR[1]=count\nfor i in range(2):\n    for j in range(LR[i]):\n        if i==0:\n            S.insert(0,\"(\")\n        else:\n            S.append(\")\")\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3427": {"id": 3427, "code": "A = 12;B = 4\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3399": {"id": 3399, "code": "line = \"20 30\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12305": {"id": 12305, "code": "s = \"akasaka\"\nn = len(s)\ns1 = s[:(n - 1) // 2]\ns2 = s[(n + 1) // 2:]\nif s == s[::-1] and s1 == s1[::-1] and s2 == s2[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "4067": {"id": 4067, "code": "HMK = [10, 0, 12, 0, 120]\nH1 = HMK[0]\nM1 = HMK[1]\nH2 = HMK[2]\nM2 = HMK[3]\nK = HMK[4]\nif H2 < H1:\n\tH2 += 24\nans = ((H2 - H1) * 60 + (M2 - M1)) - K\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "11741": {"id": 11741, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nM1=int(M1)\nM2=int(M2)\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11758": {"id": 11758, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nM1 = 1 if M1 + 1 > 12 else M1 + 1\nif M1 == M2 and D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14546": {"id": 14546, "code": "N = 2;P = 0\nA = [1, 3]\nif all(a % 2 == 0 for a in A):\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "5618": {"id": 5618, "code": "N = 2\nimport math\nans = math.ceil(N / 2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "17975": {"id": 17975, "code": "s = \"1700\"\nfirst = int(s[:2])\nsecond = int(s[2:])\nif (first>0) and (first<13) and (second>0) and (second<13):\n    print(\"AMBIGUOUS\")\nelif (first>0) and (first<13) and ((second==0) or (second>=13)):\n    print(\"MMYY\")\nelif (second>0) and (second<13) and ((first==0) or (first>=13)):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "1037": {"id": 1037, "code": "N = 111\nfor i in range(10):\n    num = 100*i+10*i+i\n    if num>=N:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "2830": {"id": 2830, "code": "s = \"1234567876\"\ninf = float('inf')\nmin_ = inf\nfor i in range(len(s)-2):\n    tmp = int(s[i:i+3])\n    if abs(753 - tmp) < min_:\n        min_ = abs(753 - tmp)\nprint(min_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4733": {"id": 4733, "code": "word = \"smiles\"\nn=len(word)\nprint(word[0]+str(n-2)+word[n-1])", "coverage": [">", ">", ">"]}, "18889": {"id": 18889, "code": "n = 12\nfives = [0]\nif n % 2 == 1:\n    print(0)\nelse:\n    i = 0\n    while 1:\n        temp5 = (n // (5** (i +1))) //2\n        if temp5 != 0:\n            fives.append(temp5)\n            i += 1\n        else:\n            break\n    print(sum(fives))    ", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "10175": {"id": 10175, "code": "N = 3\nS = \"())\"\nL, R = 0, 0\ncnt = 0\nfor s in S:\n    if s == '(':\n        cnt += 1\n    else:\n        if cnt > 0:\n            cnt -= 1\n        else:\n            L += 1\nR = cnt\nprint(L * '(' + S + R * ')')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "17617": {"id": 17617, "code": "s = \"0112\"\nyy = [\"%02d\" % i for i in range(100)]\nmm = [\"%02d\" % i for i in range(1, 13)]\nyymm = s[:2] in yy and s[2:] in mm\nmmyy = s[:2] in mm and s[2:] in yy\nprint([\"NA\",\"MMYY\",\"YYMM\",\"AMBIGUOUS\"][yymm*2+mmyy])", "coverage": [">", ">", ">", ">", ">", ">"]}, "16565": {"id": 16565, "code": "s = \"D D\"\nif s == \"H H\" or s == \"D D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "19453": {"id": 19453, "code": "N = 10\nprint(N*2 if N&1 else N)", "coverage": [">", ">"]}, "15771": {"id": 15771, "code": "X = 13;Y = 3;Z = 1\nlength = Z\ncnt = 0\nwhile length <= X:\n    length += Y + Z\n    if length > X:\n        break\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2212": {"id": 2212, "code": "n = 10;a = 3;b = 5\nmax1 = min(a,b)\nif a+b <= n:\n  min1 =0\nelif a+b >n:\n  min1 = a+b-n\nprint(max1,min1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6265": {"id": 6265, "code": "import bisect\nfrom itertools import accumulate\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nD = [0]*(n+1)\nfor i in range(n):\n    D[i+1] = n-bisect.bisect_right(C,B[i])\nD = tuple(accumulate(D))\nans = 0\nfor i in range(n):\n    j = bisect.bisect_right(B,A[i])\n    ans += D[-1]-D[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17580": {"id": 17580, "code": "S = \"1905\"\ns=list(S)\nleft=int(s[0])*10+int(s[1])\nright=int(s[2])*10+int(s[3])\nif 1<=left<=12:\n    if 1<=right<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=right<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "10248": {"id": 10248, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nans = ''\ncnt = 0\nfor c in s:\n    ans += c\n    if c == ')':\n        cnt -= 1\n    else:\n        cnt += 1\n    if cnt < 0:\n        ans = '(' + ans\n        cnt = 0\ncnt = 0\nfor c in s[::-1]:\n    if c == ')':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt < 0:\n        ans += ')'\n        cnt = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "9166": {"id": 9166, "code": "S = ['2017', '01', '07']\nS[0]= \"2018\"\nprint(\"/\".join(S))", "coverage": [">", ">", ">"]}, "8115": {"id": 8115, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif N<=K:\n  print(1)\nelse:\n  i=K\n  a=1\n  while i<N:\n    i+=(K-1)\n    a+=1\n  print(a)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4474": {"id": 4474, "code": "s = \"internationalization\"\nfirst = s[0]\nend = s[-1]\nstrCount = len(s)-2\nprint('{}{}{}'.format(first, strCount, end))", "coverage": [">", ">", ">", ">", ">"]}, "18132": {"id": 18132, "code": "S = \"0112\"\nANS = {0:'NA', 1:'YYMM', 2:'MMYY', 3:'AMBIGUOUS'}\nans = 0\nif '00' <= S[:2] <= '99' and '01' <= S[2:] <= '12':\n    ans += 1\nif '00' <= S[2:] <= '99' and '01' <= S[:2] <= '12':\n    ans += 2\nprint(ANS[ans])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13440": {"id": 13440, "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1, s2, s3)", "coverage": [">", ">"]}, "2252": {"id": 2252, "code": "N = 10;A = 7;B = 5\nprint(min(A,B),0 if min(A,B)-N+max(A,B) < 0 else min(A,B)-N+max(A,B))", "coverage": [">", ">"]}, "1641": {"id": 1641, "code": "N = 10;A = 7;B = 5\nprint(min(A, B), max(0, (A + B) - N))", "coverage": [">", ">"]}, "221": {"id": 221, "code": "S = \"xyz\"\nK = 4\nN = len(S)\nT = list(S)\nfor i in range(N - 1):\n    if T[i] == 'a':\n        continue\n    if K >= ord('z') - ord(T[i]) + 1:\n        K -= ord('z') - ord(T[i]) + 1\n        T[i] = 'a'\nT[N - 1] = chr(ord('a') + (ord(T[N - 1]) - ord('a') + K) % 26)\nprint(\"\".join(T))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "17536": {"id": 17536, "code": "s = \"0112\"\nmmyy = (1 <= int(s[:2]) <= 12)\nyymm = (1 <= int(s[2:]) <= 12)\nif mmyy:\n  if yymm:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if yymm:\n    print('YYMM')\n  else:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "684": {"id": 684, "code": "k = 2\nans = -1\nprev = 0\nfor i in range(1, k + 1):\n    prev = (10 * prev + 7) % k\n    if prev == 0:\n        ans = i\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1587": {"id": 1587, "code": "n = 10;a = 7;b = 5\nm=0\ns=0\nif a<b:\n  m=a\nelse:\n  m=b\nif a+b>n:\n  s=a+b-n\nprint(m,s)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "9711": {"id": 9711, "code": "n = 6\ns = \")))())\"\nd=[0]*n\nlcount=0\nrcount=0\nfor i in range(len(s)):\n  if s[i]==\"(\":\n    lcount+=1\n  else:\n    if lcount>=1:\n      lcount-=1\n    else:\n      rcount+=1\nprint(\"(\"*rcount+s+\")\"*lcount)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "8143": {"id": 8143, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ni=A.index(1)+1\nif i<=K or i>=N-K:\n    ans=(N-K)//(K-1)+1 if (N-K)%(K-1)==0 else (N-K)//(K-1)+2\nelse:\n    for a in range(K):\n        b=0 if (i-a)%(K-1)==0 and (N-(i+(K-a)))%(K-1)==0 else 1\n    front=i//(K-1)\n    back=(N-(i+K))//(K-1)\n    ans=front+back+1+b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "18349": {"id": 18349, "code": "H = 2\nW = 100\nN = 200\nN += max(H-1,W-1)\nans = N//max(H,W)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1096": {"id": 1096, "code": "n = 750\nif n <= 111:\n    print(111)\nelif n <= 222:\n    print(222)\nelif n <= 333:\n    print(333)\nelif n <= 444:\n    print(444)\nelif n <= 555:\n    print(555)\nelif n <= 666:\n    print(666)\nelif n <= 777:\n    print(777)\nelif n <= 888:\n    print(888)\nelif n <= 999:\n    print(999)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "16098": {"id": 16098, "code": "a = ['12', '4']\nif int(a[0]) <= int(a[1]) * 2:\n  print(\"0\")\nelse:\n  print(int(int(a[0]) - int(a[1]) * 2))", "coverage": [">", ">", "!", "!", ">"]}, "7147": {"id": 7147, "code": "h = 210;a = 5\nl = [31, 41, 59, 26, 53]\nif h - sum(l) <= 0:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11565": {"id": 11565, "code": "s = \"SAT\"\nl = [0,'SAT','FRI','THU','WED','TUE','MON','SUN']\nprint(l.index(s))", "coverage": [">", ">", ">"]}, "13630": {"id": 13630, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S[:5] + \" \" + S[6:13] + \" \" + S[14:])", "coverage": [">", ">"]}, "13373": {"id": 13373, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "13361": {"id": 13361, "code": "icase=0\nif icase==0:\n    s = \"happy,newyear,enjoy\"\n    ss=s[0:5]+\" \"+s[6:13]+\" \"+s[14:19]\n    print(ss)", "coverage": [">", ">", ">", ">", ">"]}, "15557": {"id": 15557, "code": "x = 64145;y = 123;z = 456\nx -= z\ny += z\nprint(x // y)", "coverage": [">", ">", ">", ">"]}, "5747": {"id": 5747, "code": "n = 2\nprint(n//2+1 if n%2!=0 else n//2)", "coverage": [">", ">"]}, "15563": {"id": 15563, "code": "X = 13;Y = 3;Z = 1\ni=0\nwhile True:\n    need= i*Y + (i+1)*Z\n    if need>X:\n        break\n    i+=1\nprint(i-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11724": {"id": 11724, "code": "d={'SUN':7,'MON':6,'TUE':5,'WED':4,'THU':3,'FRI':2,'SAT':1}\nprint(d[\"SAT\"])", "coverage": [">", ">"]}, "14761": {"id": 14761, "code": "n = 3;m = 0\nn -= 1\ndat = [1, 1, 1]\niseven = True\nfor i in range(len(dat)):\n    if dat[i] %2 == 1:\n        iseven = False\nif iseven:\n    if m == 0:\n        print(2**(n+1))\n    else:\n        print(0)\nelse:\n    if n == 0:\n        print(0)\n    else:\n        print(pow(2, n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "10894": {"id": 10894, "code": "s = \"atcoder\"\nfor i in [s, s[:len(s)//2], s[len(s)//2+1:]]:\n  if i != i[::-1]:\n    print(\"No\")\n    break\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12727": {"id": 12727, "code": "N = 6\ngre = [3,5,7]\nif (N in gre):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "8270": {"id": 8270, "code": "n = 3;k = 3\nl = [1, 2, 3]\nimport math\nres=math.ceil((n-1)/(k-1))\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "6183": {"id": 6183, "code": "n = 3\narr1 = [1, 1, 1]\narr2 = [2, 2, 2]\narr3 = [3, 3, 3]\ncnt=[0]*n\nans=0\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr1[j]<arr2[i]:\n      cnt[i]=n-pos\n      break\n    else:\n      pos+=1\npos=0\nfor i in range(n):\n  for j in range(pos,n):\n    if arr2[i]<arr3[j]:\n      pos+=1\n    else:\n      ans+=cnt[i]*pos\n      break\n  else:\n    ans+=cnt[i]*pos\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "18684": {"id": 18684, "code": "h = 14\nw = 12\nn = 112\nlines = 0\nact = 0\nif h <= w:\n    lines = h\n    act = w\nelse:\n    lines = w\n    act = h\ndraw = 0 \nfor i in range(lines):\n    if n <= (i + 1) * act:\n        print(i + 1)\n        break", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4377": {"id": 4377, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nprint((h2 - h1) * 60 + m2 - m1 - k)", "coverage": [">", ">"]}, "5342": {"id": 5342, "code": "from math import ceil\nn = 2\nans = ceil(n/2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3616": {"id": 3616, "code": "a = \"20\";b = \"30\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15710": {"id": 15710, "code": "import math\nX = 64145;Y = 123;Z = 456\nans=0\nans=math.floor((X-Z)/(Y+Z))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18423": {"id": 18423, "code": "H = 14\nW = 12\nN = 112\nx = max(H,W)\nprint((N+x-1)//x)", "coverage": [">", ">", ">", ">", ">"]}, "3043": {"id": 3043, "code": "s = \"1234567876\"\nans=1000\nvalue=\"\"\nfor i in range(len(s)-2):\n    value=s[i:i+3]\n    if abs(753-int(value))<=ans:\n        ans=abs(753-int(value))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11783": {"id": 11783, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(\"1\" if m2==m1+1 else \"0\")", "coverage": [">", ">", ">"]}, "8312": {"id": 8312, "code": "N = 3;K = 3\nA = [1, 2, 3]\nLeft  = A.index(1)\nRight = (N-1)-Left\nCount = (Right%(K-1)!=0)+Right//(K-1)\nLeft -= ((K-1)-Right%(K-1))%(K-1)\nCount += (Left%(K-1)!=0)+Left//(K-1)\nprint(Count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19059": {"id": 19059, "code": "N = 5\nif N%2==0:\n    ans=0\n    x=10\n    while x<=N:\n        ans+=N//x\n        x*=5\nelse:\n    ans=0\nprint(ans)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "1603": {"id": 1603, "code": "n = 100;a = 100;b = 100\nprint(min(a, b), a + b - n if n <= a + b else 0)", "coverage": [">", ">"]}, "15385": {"id": 15385, "code": "x = 64145;y = 123;z = 456\nret = (x-z)//(y+z)\nprint(ret)", "coverage": [">", ">", ">"]}, "10373": {"id": 10373, "code": "a = 1;b = 1;k = 1\nans = []\nif a > b:\n    n = a\nelif a < b:\n    n = b\nelse:\n    n = a\nfor x in range(1,n+1):\n    if b % x == 0:\n        if a % x == 0:\n            ans.append(x)\nprint(ans[-k])", "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16555": {"id": 16555, "code": "N = \"D\";M = \"H\"\nif N=='H':\n    N=0\nelse:\n    N=1\nif M=='H':\n    M=0\nelse:\n    M=1\nif N^M==0:\n    ans = 'H'\nelse:\n    ans = 'D'\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]}, "11346": {"id": 11346, "code": "S = \"SAT\"\nday = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nprint(7 - day.index(S))", "coverage": [">", ">", ">"]}, "3095": {"id": 3095, "code": "S = \"35753\"\nN = len(S)\nans = float(\"inf\")\nfor i in range(N-2):\n  ans = min(ans, abs(753 - int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2441": {"id": 2441, "code": "if __name__ == '__main__':\n    n = 1;m = 1\n    eve = (n*(n-1)) // 2\n    odd = (m*(m-1)) // 2\n    print(eve+odd)", "coverage": [">", ">", ">", ">", ">"]}, "12342": {"id": 12342, "code": "s = \"level\"\nn = len(s)\nn1 = (n-1)//2\nn2 = (n+1)//2\nif s == s[::-1]:\n    if s[:n1] == s[n2:]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "7064": {"id": 7064, "code": "n1 = 20;n2 = 3\nn3 = [4, 5, 6]\nfor i1 in range(n2):\n    n1 -= n3[i1]\nif n1 <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7422": {"id": 7422, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\natack = sum(a)\ncan = h <= atack\nprint(\"Yes\" if can else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "6606": {"id": 6606, "code": "from bisect import bisect_left,bisect_right\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans=0\nfor i in B:\n    ans +=bisect_left(A,i)*(n-bisect_right(C,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13829": {"id": 13829, "code": "n = 9\nnum_list = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncnt_list = [0] * n\na = int()\nfor i in range(1,n):\n    if num_list[i-1] > num_list[i]:\n        cnt_list[i] = -1\n    if num_list[i-1] < num_list[i]:\n        cnt_list[i] = 1\nwhile 1 in cnt_list and -1 in cnt_list:\n    del cnt_list[:max(cnt_list.index(1),cnt_list.index(-1))]\n    cnt_list[0] = 0\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14674": {"id": 14674, "code": "n = 2;p = 0\na = [1, 1]\non=a.count(1)\nze=a.count(0)\nans=0\nif on==0:\n    if p==0:\n        print(2**n)\n        exit()\n    if p==1:\n        print(0)\n        exit()\nprint(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "4291": {"id": 4291, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nx=a*60+b\ny=c*60+d\nprint(y-x-e)", "coverage": [">", ">", ">", ">"]}, "8833": {"id": 8833, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10498": {"id": 10498, "code": "A = 8;B = 12;K = 2\ncount = []\nfor i in range(1, min(A, B) + 1, 1):\n  if (A % i == 0) and (B % i == 0):\n    count.append(i)\ncount.sort(reverse = True)\nprint(count[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9136": {"id": 9136, "code": "n = ['2017', '01', '07']\nif n[0] == \"2017\":\n    n[0] = \"2018\"\nprint(n[0]+\"/\"+n[1]+\"/\"+n[2])", "coverage": [">", ">", ">", ">"]}, "2754": {"id": 2754, "code": "a = \"1129\"\nif(a=='1479'):\n\tprint('YES')\nelse:\n\tprint('NO')", "coverage": [">", ">", "!", "!", ">"]}, "639": {"id": 639, "code": "K = 2\ntmp = 7\nfor i in range(1,K+1):\n    if tmp%K == 0:\n        print(i)\n        exit()\n    tmp = (tmp*10 + 7)%K\n    tmp %= K\nprint(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3815": {"id": 3815, "code": "x = 12;y = 3;z = 1\nx -= z * 2\nc = x // (y + z)\nif x - (y + z) * c >= y:\n    c += 1\nprint(c)", "coverage": [">", ">", ">", ">", "!", ">"]}, "3406": {"id": 3406, "code": "A = 12;B = 4\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "10624": {"id": 10624, "code": "A = 1;B = 1;K = 1\nlist = []\nfor i in range(1, max(A, B)+1):\n    if A % i == 0 and B % i == 0:\n        list.append(i)\n    else:\n        pass\nlist = sorted(list, reverse=True)\nprint(list[K-1])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "9046": {"id": 9046, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nfrom itertools import permutations, combinations,combinations_with_replacement,product\nls = [a,b,c,d,e]\ncomb = list(combinations(ls,2))\nflag=0\nfor i in range(10):\n    sa = abs(comb[i][1] - comb[i][0])\n    if sa > k:\n        flag=1\nif flag==0:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "15929": {"id": 15929, "code": "A = 12;B = 4\nX = A-B*2\nif X < 0:\n  print (0)\nelse:\n  print (X)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10046": {"id": 10046, "code": "n = \"6\"\ns = \")))())\"\nss = s\nfor i in range(50):\n  s = s.replace('()','')\nl = s.count(')')\nr = s.count('(')\nprint('('*l+ss+')'*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3736": {"id": 3736, "code": "X = 13;Y = 3;Z = 1\nprint((X-(Y+2*Z)) // (Y+Z) + 1)", "coverage": [">", ">"]}, "13680": {"id": 13680, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndh = h2 - h1\ndm = m2 - m1\nif dm < 0:\n    dh -= 1\n    dm += 60\nwm = dh*60 + dm\nans = wm - k\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17957": {"id": 17957, "code": "s = \"1700\"\nif 1 <= int(s[:2]) <= 12 and 1 <= int(s[2:]) <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= int(s[:2]) <= 12:\n  print(\"MMYY\")\nelif 1 <= int(s[2:]) <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "2789": {"id": 2789, "code": "s = \"35753\"\nminDiff = abs(int(s[:3]) - 753)\nfor i in range(1, len(s) - 2):\n    minDiff = min(minDiff, abs(int(s[i:i+3]) - 753))\nprint(minDiff)", "coverage": [">", ">", ">", ">", ">"]}, "7822": {"id": 7822, "code": "import math\nN = 4;K = 3\nL = [2, 3, 1, 4]\nprint(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">"]}, "16893": {"id": 16893, "code": "A = \"H\";B = \"H\"\nif A == B:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "7547": {"id": 7547, "code": "H = 210;N = 5\nA = map(int, \"31 41 59 26 53\".split())\nprint(\"Yes\" if H <= sum(A) else \"No\")", "coverage": [">", ">", ">"]}, "16173": {"id": 16173, "code": "n = 2\nA = [100, 0]\nmax_val = max(A)\nmid_val = max_val - max_val//2\nm = 0\nfor a in A:\n    if abs(a - mid_val) < abs(m - mid_val):\n        m = a\nprint(\"{} {}\".format(max_val, m))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "7768": {"id": 7768, "code": "a = 8;b = 3\nc = [7, 3, 1, 8, 4, 6, 2, 5]\nans = -(-(a - b) // (b - 1)) + 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3734": {"id": 3734, "code": "x = 64146;y = 123;z = 456\nx -= z\nif x >= 0:\n   print(x//(y+z))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11869": {"id": 11869, "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nprint(1 if a != c else 0)", "coverage": [">", ">", ">"]}, "305": {"id": 305, "code": "s = \"a\"\nK = 25\nans=''\nfor c in s:\n    if c!='a' and ord('z')+1-ord(c)<=K:\n        ans+='a'\n        K-=ord('z')+1-ord(c)\n    else:\n        ans+=c\nif K>0:\n    ans=ans[:-1]+chr(ord(ans[-1])+K%26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "12837": {"id": 12837, "code": "X = 6\nnum = abs(X -5)\nans = \"NO\"\nif num == 0 or num == 2:\n    ans = \"YES\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "18364": {"id": 18364, "code": "h = 2\nw = 100\nn = 200\ncount = 0\nif h < w:\n  a = w\n  b = h\nelse:\n  a = h\n  b = w\nx = int(n/a)\nif n%a != 0:\n  x += 1\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">"]}, "16850": {"id": 16850, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n  print(b) \nelif a == \"D\" and b == \"H\":\n  print(\"D\")\nelse:\n  print(\"H\")", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "17346": {"id": 17346, "code": "a = \"H\";b = \"H\"\nif (a=='H' and b=='H'):\n    print('H')\nelif (a=='H' and b=='D'):\n    print('D')\nelif (a=='D' and b=='H'):\n    print('D')\nelse:\n    print('H')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "13973": {"id": 13973, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < N:\n    j = i\n    while j < N-1 and A[j]<=A[j+1]:\n        j += 1\n    k = i\n    while k < N-1 and A[k]>=A[k+1]:\n        k += 1\n    ans += 1\n    i = max(j, k) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16690": {"id": 16690, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    tcd = b\n    print(tcd)\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", ">", ">", "!", "!"]}, "5724": {"id": 5724, "code": "a = 100\nprint(a//2+a%2)", "coverage": [">", ">"]}, "5586": {"id": 5586, "code": "import math\nn = 100\nx = math.ceil(n/2)\nprint(x)", "coverage": [">", ">", ">", ">"]}, "9587": {"id": 9587, "code": "s = \"2017/01/31\"\nmodify = '2018'+ s[4:]\nprint(modify)", "coverage": [">", ">", ">"]}, "18417": {"id": 18417, "code": "H = 14\nW = 12\nN = 112\nif H < W:\n    H, W = W, H\nans = 0\nwhile N > 0:\n    N -= H\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5784": {"id": 5784, "code": "temp = 50.5\nprint(int(temp))", "coverage": [">", ">"]}, "9416": {"id": 9416, "code": "year = \"2018\"\nS = \"2017/01/07\"\nans = year + S[4:]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10488": {"id": 10488, "code": "a = 100;b = 50;k = 4\nl = [i for i in range(1, min(a, b) + 1) if not (a % i or b % i)]\nprint(l[-k])", "coverage": [">", ">", ">"]}, "17632": {"id": 17632, "code": "s = \"0112\"\nif 0 < int(s[:2]) <13 and 0< int(s[2:]) < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < int(s[:2]) < 13:\n    print(\"MMYY\")\nelif 0 < int(s[2:]) < 13:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10635": {"id": 10635, "code": "a = 1;b = 1;k = 1\nans = []\nab = [a,b]\nfor i in range(1,max(ab)+1):\n  if(a%i == 0 and b%i == 0):\n    ans.append(i)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "495": {"id": 495, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n    if s[i] != \"a\" and (123-ord(s[i])) <= k:\n        k -= (123-ord(s[i]))\n        s[i] = \"a\"\n    if i == len(s)-1:\n        s[i] = (chr((((ord(s[i])+(k%26))-97)%26)+97))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11913": {"id": 11913, "code": "a = 11;b = 30\nc = 12;d = 1\nif d == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "4470": {"id": 4470, "code": "s = \"xyz\"\nprint(s[0],len(s[1:-1]),s[-1],sep='')", "coverage": [">", ">"]}, "9340": {"id": 9340, "code": "y = \"2017\";m = \"01\";d = \"07\"\nans = '2018/'+m+'/'+d\nprint(ans)", "coverage": [">", ">", ">"]}, "12087": {"id": 12087, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nif m1 != m2:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12958": {"id": 12958, "code": "x = 5\nans=[\"NO\",\"YES\"][x==7 or x==5 or x==3]\nprint(ans)", "coverage": [">", ">", ">"]}, "10578": {"id": 10578, "code": "a = 1;b = 1;k = 1\nfor i in range(max(a, b), 0, -1):\n  if a%i ==0 and b%i ==0:\n    k -= 1\n    if k==0:\n      print(i)\n      break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15496": {"id": 15496, "code": "x = 64146;y = 123;z = 456\nans = x // (y + z)\nif x - ans*(y + z) < z:\n    ans = max(0, ans-1)\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "8218": {"id": 8218, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint(((N-1)+(K-2))//(K-1))", "coverage": [">", ">", ">"]}, "897": {"id": 897, "code": "k = 101\nmod = 7 % k\ncounter = 1\nmemo = 1\nmod_map = set()\nmod_map.add(mod)\nwhile mod != 0:\n    memo = ((memo % k) * (10 % k)) % k\n    mod = (mod + 7 * memo) % k\n    if mod not in mod_map:\n        mod_map.add(mod)\n    else:\n        counter = -1\n        break\n    counter += 1\n    if mod == 0:\n        break\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "7288": {"id": 7288, "code": "H = 20;N = 3\nA = [4, 5, 6]\nT = 0\nfor i in range(N):\n  T += A[i]\nif H-T <=0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10670": {"id": 10670, "code": "import math\na = 1;b = 1;k = 1\nc=math.gcd(a,b)\nd=[i for i in range(1,c+1) if c%i==0]\nprint(d[-k])", "coverage": [">", ">", ">", ">", ">"]}, "15732": {"id": 15732, "code": "x = 100000;y = 1;z = 1\nx -= z\nprint(x // (y + z))", "coverage": [">", ">", ">"]}, "84": {"id": 84, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n  dp = 26-ord(s[i])+97\n  if k >= dp and s[i] != \"a\":\n    k-=dp\n    s[i] = \"a\"\n    if k == 0:\n      break\nelse:\n  s[-1] = chr((ord(s[-1])-97+k)%26+97)\nprint(*s,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17578": {"id": 17578, "code": "S = \"0112\"\nA=int(S[0:2])\nB=int(S[2:4])\nif (1<=A and A<=12) and (1<=B and B<=12):\n  print(\"AMBIGUOUS\")\nelif (1<=A and A<=12) and not(1<=B and B<=12):\n  print(\"MMYY\")\nelif not(1<=A and A<=12) and (1<=B and B<=12):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9703": {"id": 9703, "code": "n = 8\ns = \"))))((((\"\na=[1 if i=='(' else -1 for i in s]\ne=[0]\nfor i in range(n):\n    e.append(e[i]+a[i])\ns=-min(e)*'('+s\ns+=(s.count('(')-s.count(')'))*')'\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14102": {"id": 14102, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup_or_down = 0\nans = 1\nfor i in range(len(A) - 1):\n    if up_or_down == 0:\n        up_or_down = A[i+1] - A[i]\n    else:\n        if up_or_down > 0 and A[i+1] - A[i] < 0:\n            ans += 1\n            up_or_down = 0\n        elif up_or_down < 0 and A[i+1] - A[i] > 0:\n            ans += 1\n            up_or_down = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "7486": {"id": 7486, "code": "H = 211;N = 5\ndata = [31, 41, 59, 26, 53]\nif H - sum(data) > 0:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11354": {"id": 11354, "code": "S = \"SAT\"\nif S == 'SUN':\n    answer = 7\nelif S == 'MON':\n    answer = 6\nelif S == 'TUE':\n    answer = 5\nelif S == 'WED':\n    answer = 4\nelif S == 'THU':\n    answer = 3\nelif S == 'FRI':\n    answer = 2\nelif S == 'SAT':\n    answer = 1\nprint(answer)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "12580": {"id": 12580, "code": "A = 8;B = 12;K = 2\nn = min(A, B)\nwhile K:\n  if A % n == 0 and B % n == 0:\n    K -= 1\n  if K == 0:\n    print(n)\n  n -= 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16219": {"id": 16219, "code": "n = 5\naa = [2, 4, 6, 9, 11]\nlist1 = []\nma = aa[-1]\nfor i in range(n):\n  d = abs(aa[i]-(ma+1)//2)\n  list1.append([d,i])\nmd = min(list1, key=lambda x:x[0])\nprint(ma, aa[md[1]])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7581": {"id": 7581, "code": "h = 10;n = 3\na = [4, 5, 6]\nprint(\"No\" if sum(a)<h else \"Yes\")", "coverage": [">", ">", ">"]}, "11985": {"id": 11985, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "5308": {"id": 5308, "code": "n = 5\nprint(n//2 if n%2 == 0 else n//2+1)", "coverage": [">", ">"]}, "12924": {"id": 12924, "code": "X = 5\np=[3,5,7]\nif X in p:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12947": {"id": 12947, "code": "X = \"6\"\nif X == \"7\" or X == \"5\" or X == \"3\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "7587": {"id": 7587, "code": "H = 210;N = 5\nlist_A = [31, 41, 59, 26, 53]\nsum_list_A = sum(list_A)\nif sum_list_A >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11535": {"id": 11535, "code": "S = \"SAT\"\nif S==\"SUN\":\n    print(7)\nelif S==\"MON\":\n    print(6)\nelif S==\"TUE\":\n    print(5)\nelif S==\"WED\":\n    print(4)\nelif S==\"THU\":\n    print(3)\nelif S==\"FRI\":\n    print(2)\nelif S==\"SAT\":\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "1865": {"id": 1865, "code": "n = 10;x = 7;y = 5\nr = x+y-n\nif r < 0:\n  r = 0\nprint(min(x,y),r)", "coverage": [">", ">", ">", "!", ">"]}, "14814": {"id": 14814, "code": "n = 2;p = 0\nl = [1, 3]\nl1 = []\nfor i in l:\n  if i%2==0:\n    l1.append(0)\n  else:\n    l1.append(1)\na = l1.count(1)\nb = l1.count(0)\nif a!=0:\n  cou = (2**(b))*(2**(a-1))\n  print(cou)\nelse:\n  if p%2==0:\n    print(2**b)\n  else:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "8783": {"id": 8783, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18456": {"id": 18456, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nimport math\nh = 14\nw = 12\nn = 112\nans = min(math.ceil(n / h), math.ceil(n / w))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16321": {"id": 16321, "code": "N = 2\nlsa = [100, 0]\nn = max(lsa)\nr = 0\nfor i in range(N):\n    r1 = lsa[i]\n    if min(r1,n-r1) >= min(r,n-r):\n        r = r1\nprint(n,r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15043": {"id": 15043, "code": "N = 2;P = 0\nA = [1, 3]\nodd = False\nfor i in range(N):\n    if A[i] % 2 == 1:\n        odd = True\n        break\nif odd:\n    print(2**(N-1))\nelse:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "15759": {"id": 15759, "code": "x = 13;y = 3;z = 1\nn = 0\nwhile (y+z)*n + z <= x:\n    n += 1\nprint(n-1)", "coverage": [">", ">", ">", ">", ">"]}, "11312": {"id": 11312, "code": "S = \"SAT\"\nif S == (\"SUN\"):\n    output = (7)\nelif S == (\"MON\"):\n    output = (6)\nelif S == (\"TUE\"):\n    output = (5)\nelif S == (\"WED\"):\n    output = (4)\nelif S == (\"THU\"):\n    output = (3)\nelif S == (\"FRI\"):\n    output = (2)\nelif S == (\"SAT\"):\n    output = (1)\nprint(output)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "14357": {"id": 14357, "code": "if __name__ == '__main__':\n    n = 7\n    arr = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    dp = [[10 ** 9 for j in range(2)] for i in range(n)]\n    dp[0][0] = 1 \n    dp[0][1] = 1 \n    for i in range(1, n):\n        if arr[i] > arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1] + 1)\n            dp[i][1] = min(dp[i-1][0], dp[i-1][1]) + 1\n        elif arr[i] < arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1]) + 1\n            dp[i][1] = min(dp[i-1][0] + 1, dp[i-1][1])\n        else:\n            dp[i][0] = dp[i-1][0]\n            dp[i][1] = dp[i-1][1]\n    print(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "18842": {"id": 18842, "code": "import math\nH = 14\nW = 12\nN = 112\nif H < W:\n    H = W\nprint(math.ceil(N/H))", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "11064": {"id": 11064, "code": "S = \"akasaka\"\nflag = 0\nN = len(S)\ns1 = int((N-1)/2)\ns2 = int((N+3)/2)\nif S[0:s1] == S[s1+1:]:\n  flag = 1\nelse:\n  flag = 0    \nif S[s2-1:] == S[:s2-2]:\n  flag = 1\nelse:\n  flag = 0\nif flag == 1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!"]}, "8774": {"id": 8774, "code": "N = 7\narray1 = [3, 3, 4, 5, 4, 5, 3]\narray2 = [5, 3, 4, 4, 2, 3, 2]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5960": {"id": 5960, "code": "n = 2\nprint(-(-n//2))", "coverage": [">", ">"]}, "13883": {"id": 13883, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 6\na = [1, 2, 3, 2, 2, 1]\na_ = []\nfor i in a:\n    if not a_:\n        a_.append(i)\n    elif i != a_[-1]:\n        a_.append(i)\ncnt = 0\nflag = 0\nfor i in range(len(a_) - 1):\n    if flag == 0:\n        if a_[i + 1] - a_[i] > 0:\n            flag = 1\n        else:\n            flag = -1\n        continue\n    if flag == 1 and a_[i + 1] - a_[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a_[i + 1] - a_[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11227": {"id": 11227, "code": "s = \"SUN\"\nif s == 'SUN':\n    print(7)\nelif s == 'MON':\n    print(6)\nelif s == 'TUE':\n    print(5)\nelif s == 'WED':\n    print(4)\nelif s == 'THU':\n    print(3)\nelif s == 'FRI':\n    print(2)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8397": {"id": 8397, "code": "n = 1\na = [2]\nb = [3]\nres = 0\nfor i in range(n):\n  c = 0\n  for j in range(n):\n    if j < i:\n      c += a[j]\n    elif j == i:\n      c += a[j]\n      c += b[j]\n    else:\n      c += b[j]\n  res = max(res,c)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "11531": {"id": 11531, "code": "from sys import stdin\nfrom sys import setrecursionlimit\nimport bisect\nsetrecursionlimit(10 ** 7)\ns = \"SAT\"\nli = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7-li.index(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8303": {"id": 8303, "code": "n = 3;k = 3\nlist_A = [1, 2, 3]\na = list_A.index(1) + 1\nans = 0\ncnt = 0\namari = 0\nif a == 1:\n    ans += 0\nelse:\n    ans += (a-1)//(k-1)\n    if (a-1)%(k-1) != 0:\n        ans += 1\n        cnt += 1\n        amari += (a-1)%(k-1)\nif a == n:\n    ans += 0\nelse:\n    ans += (n-a)//(k-1)\n    if (n-a)%(k-1) != 0:\n        ans += 1\n        cnt += 1\n        amari += (n-a)%(k-1)\nif cnt == 2 and amari <= k-1:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", "!", "!", "!", ">", "!", ">"]}, "10296": {"id": 10296, "code": "n = 6\ns = \")))())\"\nss = s\nl = 0\nfor c in ss:\n    if c == \"(\":\n        l += 1\n    else:\n        if l > 0:\n            l -= 1\n        else:\n            s = \"(\" + s\nfor i in range(l):\n    s = s + \")\"\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">"]}, "10908": {"id": 10908, "code": "S = \"level\"\nN = len(S)\ncount1,count2,count3 = 0,0,0\nflg1,flg2,flg3 = False,False,False\nfor i in range(N):\n    if S[i] == S[-1-i]:\n        count1 += 1\nif count1 == N:\n    flg1 = True\na = int((N-1)/2)\nfor i in range(a):\n    if S[i] == S[a-1-i]:\n        count2 += 1\nif count2 == int((N-1)/2):\n    flg2 = True\nb = int((N+3)/2)\nfor i in range(N-b+1):\n    if S[b+i-1] == S[N-i-1]:\n        count3 += 1\nif count3 == N-b+1 :\n    flg3 = True\nif flg1 == True and flg2 == True and flg3 == True:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "9851": {"id": 9851, "code": "n = 8\ns = \"))))((((\"\nl, r = 0, 0\nfor i in range(n):\n  if s[i] == \"(\":\n    r += 1\n  else:\n    if r:\n      r -= 1\n    else:\n      l += 1\nans = \"(\"*l + s + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "7669": {"id": 7669, "code": "hp = 10;n = 3\narr = [4, 5, 6]\nif sum(arr) >= hp: print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", "!"]}, "10663": {"id": 10663, "code": "a = 8;b = 12;k = 2\nans = 0\ncounter = 0\nfor i in range(min(a, b), 0, -1):\n    if a % i == 0 and b % i == 0:\n        counter += 1\n        if counter == k:\n            ans = i\n            break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7799": {"id": 7799, "code": "n = 4;k = 3\nk-=1\na = [2, 3, 1, 4]\nfor i in range(n):\n    if a[i]==1:\n        index=i\nprint(-(-i//k)-(-(n-i-1)//k))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5360": {"id": 5360, "code": "from math import ceil\nn = 2\nprint(ceil(n/2))", "coverage": [">", ">", ">"]}, "17367": {"id": 17367, "code": "s = ['1', '9', '0', '5']\ns1 = int(\"\".join(s[:2]))\ns2 = int(\"\".join(s[2:]))\nif 1 <= s1 <= 12 and 1 <= s2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= s1 <= 12:\n    print('MMYY')\nelif 1 <= s2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "16220": {"id": 16220, "code": "n = 2\naa = [0, 100]\nlist1 = []\nma = aa[-1]\nfor i in range(n):\n  d = abs(aa[i]-(ma+1)//2)\n  list1.append([d,i])\nmd = min(list1, key=lambda x:x[0])\nprint(ma, aa[md[1]])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6678": {"id": 6678, "code": "h = 211;n = 5\nA = [31, 41, 59, 26, 53]\nif h-sum(A)>0 :\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "7532": {"id": 7532, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif h <= sum(a): print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">"]}, "3290": {"id": 3290, "code": "a = 20;b = 30\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15269": {"id": 15269, "code": "x = 12;y = 3;z = 1\nn = 1\nwhile x >= (n+1)*z + n*y:\n  n += 1\nprint(n-1)", "coverage": [">", ">", ">", ">", ">"]}, "11858": {"id": 11858, "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10369": {"id": 10369, "code": "a = 8;b = 12;k = 2\ncount = 0\nfor i in range(min(a,b),0,-1):\n    if (a%i == 0) and (b%i == 0):\n        count+=1\n    if count == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "340": {"id": 340, "code": "S = \"xyz\"\nK = 4\nA = [\" \" for _ in range(len(S))]\nzan = K\nfor i in range(len(S)):\n  n = (ord('z') - ord(S[i]) + 1) % 26 \n  if zan >= n:\n    zan -= n\n    A[i] = 'a'\n  else:\n    A[i] = S[i]\nif zan > 0:\n  A[-1] = chr((ord(A[-1]) - ord('a') + zan)%26 + ord('a'))\nprint(\"\".join(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "2769": {"id": 2769, "code": "S = \"1111111111\"\nresult = 10 ** 9\nfor i in range(len(S) - 3 + 1):\n  result = min(result, abs(753 - int(S[i:i+3])))\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "9176": {"id": 9176, "code": "if __name__ == \"__main__\":\n    s = \"2017/01/07\"\n    print('2018'+s[4:])", "coverage": [">", ">", ">"]}, "19005": {"id": 19005, "code": "N = 5\nif N%2 ==1:\n    print(0)\nelse:\n    ans = 0\n    cnt = 10\n    while N >= cnt:\n       ans += N//cnt\n       cnt *= 5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4665": {"id": 4665, "code": "N = ['x', 'y', 'z']\nM = []\nM.append(N[0])\nM.append(str(len(N) - 2))\nM.append(N[-1])\ndate = ''.join(M)\nprint(date)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1140": {"id": 1140, "code": "n = ['1', '1', '1']\ni = n[0]\nj = n[1]\nk = n[2]\nif int(j + k) <= int(i+i):\n    print(i*3)\nelse:\n    print(str(int(i)+1)*3)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "17718": {"id": 17718, "code": "s = \"1905\"\ns1 = int(s[0])*10 + int(s[1])\ns2 = int(s[2])*10 + int(s[3])\nif  (s1>12 or s1==0) and (s2>12 or s2==0):\n  print('NA')\nelif (s1>12 or s1==0) and 1<=s2<=12:\n  print('YYMM')\nelif (s2>12 or s2==0) and 1<=s1<=12:\n  print('MMYY')\nelif 1<=s1<=12 and 1<=s2<=12:\n  print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "9009": {"id": 9009, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nmi = min(a, b, c, d, e)\nma = max(a, b, c, d, e)\nif ma - mi > k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4950": {"id": 4950, "code": "s = \"xyz\"\nsin = s[1:-1]\nprint(s[0]+str(len(sin))+s[-1])", "coverage": [">", ">", ">"]}, "5091": {"id": 5091, "code": "s = ['x', 'y', 'z']\nk=len(s)-2\nprint(s[0]+str(k)+s[-1])", "coverage": [">", ">", ">"]}, "9692": {"id": 9692, "code": "n = \"3\"\ns = \"())\"\nl = \"(\"\nr = \")\"\nadd_right, add_left = 0, 0\nfor c in s:\n    if c == l:\n        add_right += 1\n    else:\n        if add_right:\n            add_right -= 1\n        else:\n            add_left += 1\nprint(l * add_left + s + r * add_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "6543": {"id": 6543, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nimport bisect\nret = 0\nfor b in B:\n    i = bisect.bisect_left(A, b)\n    j = bisect.bisect_right(C, b)\n    ret += i * (N - j)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17720": {"id": 17720, "code": "s = \"1700\"\ns1 = int(s[0])*10 + int(s[1])\ns2 = int(s[2])*10 + int(s[3])\nif  (s1>12 or s1==0) and (s2>12 or s2==0):\n  print('NA')\nelif (s1>12 or s1==0) and 1<=s2<=12:\n  print('YYMM')\nelif (s2>12 or s2==0) and 1<=s1<=12:\n  print('MMYY')\nelif 1<=s1<=12 and 1<=s2<=12:\n  print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2779": {"id": 2779, "code": "s = \"1234567876\"\nm=999999999\nfor i in range(0,len(s)-2):\n    k=int(s[i:i+3])\n    if abs(k-753)<m:\n        m=abs(k-753)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17678": {"id": 17678, "code": "s = \"1700\"\na = 0\nb = 0\nif s[2] == '0': b = int(s[3])\nelse: b = int(s[2:])\nif s[0] == '0': a = int(s[1])\nelse: a = int(s[:2])\nif (b>=1 and b<=12) and (a>=1 and a<=12): print(\"AMBIGUOUS\")\nelif b>=1 and b<=12: print(\"YYMM\")\nelif a>=1 and a<=12: print(\"MMYY\")\nelse: print(\"NA\") ", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "7466": {"id": 7466, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nfor i in range(N):\n    H -= A[i]\nprint(['No','Yes'][H <= 0])", "coverage": [">", ">", ">", ">", ">"]}, "7791": {"id": 7791, "code": "input_line = ['3', '3']\nnum_array = int(input_line[0])\nnum_equal = int(input_line[1])\ninput_line = \"1 2 3\"\nequalized = 1\ni = 0\nwhile equalized < num_array:\n    equalized += (num_equal - 1)\n    i += 1\nprint(str(i))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13655": {"id": 13655, "code": "N = 20;M = 4\nA = [3, 7, 8, 4]\nA.sort()\nif 1 in A:\n    if N%2==0:\n        print(\"1\"*(N//2))\n    else:\n        if 7 in A:\n            print(\"7\"+\"1\"*(N//2-1))\n        elif 5 in A:\n            print(\"5\"+\"1\"*(N//2-2))\n        elif 3 in A:\n            print(\"3\"+\"1\"*(N//2-2))\n        elif 2 in A:\n            print(\"2\"+\"1\"*(N//2-2))\n        else:\n            print(\"8\"+\"1\"*(N//2-3))\nelif 7 in A:\n    if N%3==0:\n        print(\"7\"*(N//3))\n    elif N%3==1:\n        if 4 in A:\n            print(\"7\"*(N//3-1)+\"4\")\n        elif 8 in A:\n            print(\"8\"+\"7\"*(N//3-2))\n        elif 5 in A:\n            print(\"7\"*(N//3-3)+\"55\")\n        elif 3 in A:\n            print(\"7\"*(N//3-3)+\"33\")\n        elif 2 in A:\n            print(\"7\"*(N//3-3)+\"22\")\n    else:\n        if 5 in A:\n            print(\"7\"*(N//3-1)+\"5\")\n        elif 3 in A:\n             print(\"7\"*(N//3-1)+\"3\")\n        elif 2 in A:\n            print(\"7\"*(N//3-1)+\"2\")\n        elif 4 in A:\n            print(\"7\"*(N//3-2)+\"44\")\n        elif 8 in A:\n            print(print(\"7\"*(N//3-4)+\"88\"))\nelse:\n    B=[[] for i in range(0,10)]\n    for i in range(0,M):\n        if 2 in A:\n            B[5].append(2)\n        if 3 in A:\n            B[5].append(3)\n        if 4 in A:\n            B[4].append(4)\n        if 5 in A:\n            B[5].append(5)\n        if 6 in A:\n            B[6].append(6)\n        if 8 in A:\n            B[7].append(8)\n        if 9 in A:\n            B[6].append(9)\n    dp=['n' for i in range(0,max(10,N+1))]\n    for i in range(0,min(N+1,10)):\n        if i==2:\n            if 2 in A:\n                dp[5]='2'\n        if i==3:\n            if 3 in A:\n                dp[5]='3'\n        if i==4:\n            if 4 in A:\n                dp[4]='4'\n        if i==5:\n            if 5 in A:\n                dp[5]='5'\n        if i==6:\n            if 6 in A:\n                dp[6]='6'\n        if i==8:\n            if 8 in A:\n                dp[7]='8'\n        if i==9:\n            if 9 in A:\n                dp[6]='9'\n    if N>=6:\n        a='0'\n        b='0'\n        c='0'\n        if dp[6]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            x=max(a,b,c)\n            if x!=0:\n                dp[6]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(dp[6])\n            dp[6]=str(max(a,b,c,d))\n    if N>=7:\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        if dp[7]=='n':\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            x=max(a,b,c,d)\n            if x!=0:\n                dp[7]=str(x)\n        else:\n            a=int(a)\n            b=int(b)\n            c=int(c)\n            d=int(d)\n            e=int(dp[7])\n            dp[7]=str(max(e,a,b,c,d))\n    for i in range(8,N+1):\n        a='0'\n        b='0'\n        c='0'\n        d='0'\n        e='0'\n        f='0'\n        if B[4] and dp[i-4]!='n':\n            c='4'+dp[i-4]\n        if B[5] and dp[i-5]!='n':\n            d=str(max(B[5]))+dp[i-5]\n        if B[6] and dp[i-6]!='n':\n            e=str(max(B[6]))+dp[i-6]\n        if B[7] and dp[i-7]!='n':\n            f='8'+dp[i-7]\n        a=int(a)\n        b=int(b)\n        c=int(c)\n        d=int(d)\n        e=int(e)\n        f=int(f)\n        x=max(a,b,c,d,e,f)\n        if x==0:\n            dp[i]='n'\n        else:\n            dp[i]=str(x)\n    print(int(dp[N]))", "coverage}, "9991": {"id": 9991, "code": "N = \"3\"\nS = \"())\"\ns = S\nfor i in range(50):\n  S = S.replace('()','')\nl = S.count(')')\nr = S.count('(')\nprint('('*l+s+')'*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15047": {"id": 15047, "code": "N = 2;P = 0\na_li = [1, 3]\nans = 0\no = 0\nfor a in a_li:\n    if a % 2 != 0:\n        o += 1\nif o == 0:\n    if P == 1:\n        ans = 0\n    else:\n        ans = 2 ** N\nelse:\n    ans = 2 ** (N - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "13638": {"id": 13638, "code": "s = \"haiku\";t = \"atcoder\";u = \"tasks\"\nprint(\"{} {} {}\".format(s,t,u))", "coverage": [">", ">"]}, "15014": {"id": 15014, "code": "import collections\nn = 2;p = 0\na = [1, 3]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif a2[1] == 0:\n  print(2 ** n if p == 0 else 0)\nelse:\n  print( 2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12589": {"id": 12589, "code": "a = 8;b = 12;k = 2\nl = []\nfor i in range(1, min(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        l.append(i)\nprint(sorted(l, reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "10904": {"id": 10904, "code": "S = \"atcoder\"\nprint(\"Yes\" if ( S==S[::-1] and S[:int((len(S)-1)/2)]==S[:int((len(S)-1)/2)][::-1] ) else \"No\")", "coverage": [">", ">"]}, "219": {"id": 219, "code": "S = [0]\nK = 25\nfor i in range(len(S)):\n  if S[i] > K: continue\n  K -= S[i]\n  S[i] = 0\nS[-1] = (S[-1] - K) % 26\nprint(*[chr(ord(\"z\") - (s-1) % 26) for s in S], sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16543": {"id": 16543, "code": "v = ['D', 'H']\nif v[0]==v[1]:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "4684": {"id": 4684, "code": "s = \"internationalization\"\nprint(f'{s[0]}{len(s) - 2}{s[-1]}')", "coverage": [">", ">"]}, "7758": {"id": 7758, "code": "NK = [3, 3]\nno = [1, 2, 3]\nzan = NK[0]\ncounter = 0\nwhile(NK[1] < zan):\n    zan -= NK[1] - 1\n    counter += 1\nprint(counter + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "19076": {"id": 19076, "code": "n = 12\nif n%2 == 1:\n  print(0)\nelse:\n  i = 0\n  a = n//10\n  b = 1\n  while b != 0:\n    i += 1\n    b = n//((5**i)*10)\n    a += b\n  print(a)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6384": {"id": 6384, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nimport bisect\nans=0\nfor i in range(n):\n  b=B[i]\n  ans+=bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9394": {"id": 9394, "code": "S = \"2017/01/07\"\nprint(S.replace('2017', '2018'))", "coverage": [">", ">"]}, "1608": {"id": 1608, "code": "N = 10;A = 7;B = 5\nans = (min(A, B), max(0, A + B - N))\nprint(ans[0], ans[1])", "coverage": [">", ">", ">"]}, "18505": {"id": 18505, "code": "h = 2\nw = 100\nn = 200\nif h>w:\n    print(-(n//-h))\nelse:\n    print(-(n//-w))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14101": {"id": 14101, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup_or_down = 0\nans = 1\nfor i in range(len(A) - 1):\n    if up_or_down == 0:\n        up_or_down = A[i+1] - A[i]\n    else:\n        if up_or_down > 0 and A[i+1] - A[i] < 0:\n            ans += 1\n            up_or_down = 0\n        elif up_or_down < 0 and A[i+1] - A[i] > 0:\n            ans += 1\n            up_or_down = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "16861": {"id": 16861, "code": "a = \"D\";b = \"H\"\nif (a == 'H') ^ (b == 'H'):\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", ">", "!", "!"]}, "12531": {"id": 12531, "code": "a = 1;b = 1;k = 1\ncounter = 0\nfor i in list(range(1,min(a,b)+1))[::-1] :\n    if a%i == 0 and b%i == 0 :\n        counter += 1\n    if counter == k :\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2101": {"id": 2101, "code": "N = 10;A = 3;B = 5\nMAX = min(A,B)\nMIN = max(A+B-N,0)\nans = [MAX,MIN]\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "3363": {"id": 3363, "code": "A = 20;B = 30\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "16245": {"id": 16245, "code": "import sys\ninput = sys.stdin.readline\nn = 2\na = [100, 0]\na.sort()\nl = [ai for ai in a[:-1]]\nl.sort(key=lambda x: abs(a[-1]/2-x))\nprint(a[-1], l[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16968": {"id": 16968, "code": "a = \"H\";b = \"H\"\nok = [(\"H\", \"H\"), (\"D\", \"D\")]\nif (a, b) in ok:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "13899": {"id": 13899, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\ntemp=0\nfor i in range(1,n):\n  if a[i-1]<a[i] and temp==0:\n    temp=1\n  elif a[i-1]>a[i] and temp==0:\n    temp=2\n  elif a[i-1]>a[i] and temp==1:\n    temp=0\n    ans=ans+1\n  elif a[i-1]<a[i] and temp==2:\n    temp=0\n    ans=ans+1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7892": {"id": 7892, "code": "n = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nimport math\nans = math.ceil(((n-1)/(k-1)))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11163": {"id": 11163, "code": "s = \"level\"\nans = 'Yes'\nfor i in range(len(s)//2):\n    if s[i] != s[-i-1]:\n        ans = 'No'\n        break\ns_s = s[:(len(s)-1)//2]\nfor i in range(len(s_s)//2):\n    if s_s[i] != s_s[-i-1]:\n        ans = 'No'\n        break\ns_e = s[(len(s)+3)//2 - 1:]\nfor i in range(len(s_e)//2):\n    if s_e[i] != s_e[-i-1]:\n        ans = 'No'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16723": {"id": 16723, "code": "A = \"D\";B = \"H\"\nif A == 'H' and B == 'H':\n  print('H')\nelif A == 'H' and B == 'D':\n  print('D')\nelif A == 'D' and B == 'H':\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "16989": {"id": 16989, "code": "a = ['H', 'H']\nif (a[0] == 'H' and a[1] == 'H') or (a[0] == 'D' and a[1] == 'D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "13200": {"id": 13200, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c,sep=' ')", "coverage": [">", ">"]}, "4292": {"id": 4292, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nx=a*60+b\ny=c*60+d\nprint(y-x-e)", "coverage": [">", ">", ">", ">"]}, "9899": {"id": 9899, "code": "n = 3\ns = \"())\"\nl=[]\nfor i in s:\n  if i==')':\n    if len(l)>0:\n      if l[-1]=='(':\n        l.pop()\n      else:\n        l.append(i)\n    else:\n      l.append(i)\n  else:\n    l.append(i)\nprint(l.count(')')*'(' + s +l.count('(')*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">"]}, "3165": {"id": 3165, "code": "s = \"1234567876\"\nans = 999\nfor i in range(0, len(s) - 2):\n    if ans > abs(int(s[i:i + 3]) - 753):\n        ans = abs(int(s[i:i + 3]) - 753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13432": {"id": 13432, "code": "n = \"abcde,fghihgf,edcba\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "12723": {"id": 12723, "code": "X = 6\nif (X==7)|(X==5)|(X==3):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "16304": {"id": 16304, "code": "N = 2\na = [100, 0]\na.sort()\nans1 = a[-1]\nans2 = 0\nfor i in a:\n    if abs(ans1/2-ans2) > abs(ans1/2-i):\n        ans2 = i\nprint(ans1, ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "7093": {"id": 7093, "code": "h = 210;a = 5\nA = [31, 41, 59, 26, 53]\nif sum(A) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "8725": {"id": 8725, "code": "N = 1\nA = [2]\nB = [3]\nsumA = [0]*(N+1)\nsumB = [0]*(N+1)\nfor i in range(N):\n    sumA[i+1] = A[i] + sumA[i]\n    sumB[i+1] = B[i] + sumB[i]\nncandy = 0\nfor i in range(1, N+1):\n    nsum = sumA[i] + (sumB[N] - sumB[i-1])\n    if ncandy < nsum:\n        ncandy = nsum\nprint(ncandy)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18803": {"id": 18803, "code": "h = 14\nw = 12\nn = 112\nif w>=h:\n    re=int(n/w)\n    if n%w>0:\n        re+=1\nelse:\n    re=int(n/h)\n    if n%h>0:\n        re+=1\nprint(re)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">"]}, "6928": {"id": 6928, "code": "h = 20;n = 3\na=map(int,\"4 5 6\".split())\ns=sum(a)\nif s>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8248": {"id": 8248, "code": "n = 4;k = 3\nlst = [2, 3, 1, 4]\nidx = lst.index(1)\nk -= 1\na = (len(lst[:idx]) + k - 1) // k\nb = (len(lst[idx + 1:]) + k - 1) // k\nc = ((n - 1) + k - 1) // k\nprint(min(c, a + b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "292": {"id": 292, "code": "s = \"a\"\nl = ''\nn = 25\nalp = [chr(ord('a')+i) for i in range(26)]\nfor i in range(len(s)):\n  if i != len(s)-1:\n    if s[i] != 'a':\n      if 97+26-ord(s[i]) <= n:\n        n -= (123-ord(s[i]))\n        l += 'a'\n      else:\n        l += s[i]\n    else:\n      l += 'a'\n  else:\n    t = ord(s[i])\n    if t+n <= 122:\n      l += chr(t+n)\n    else:\n      n = n%26\n      if t+n <= 122:\n        l += chr(t+n)\n      else:\n        l += chr(t+n-26)\nprint(l)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "2516": {"id": 2516, "code": "n = \"1 2 9 1\"\nif '1' in n and '9' in n and '7' in n and '4' in n:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "16016": {"id": 16016, "code": "A = 12;B = 4\nif(A<=B*2):\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", "!", "!", ">"]}, "11219": {"id": 11219, "code": "s = \"SUN\"\nif s == \"SUN\":\n    print(7)\nif s == \"MON\":\n    print(6)\nif s == \"TUE\":\n    print(5)\nif s == \"WED\":\n    print(4)\nif s == \"THU\":\n    print(3)\nif s == \"FRI\":\n    print(2)\nif s == \"SAT\":\n    print(1)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!"]}, "14187": {"id": 14187, "code": "_ = \"7\"\nA = map(int, \"1 2 3 2 1 999999999 1000000000\".split())\nprev = next(A)\nup = None\ncount = 1\nfor i in A:\n    if prev < i:\n        if up is None:\n            up = True\n        elif not up:\n            count += 1\n            up = None\n    elif prev > i:\n        if up is None:\n            up = False\n        elif up:\n            count += 1\n            up = None\n    prev = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3269": {"id": 3269, "code": "x = 20;y = 30\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "3907": {"id": 3907, "code": "X = 12;Y = 3;Z = 1\nif X < Y+2*Z:\n  ans = 0\nelse:\n  _ = Z\n  ans = 0\n  while _ <= (X-Z):\n    _ += Y\n    _ += Z\n    if _ <= X:\n      ans += 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8478": {"id": 8478, "code": "n = 1\na1 = [2]\na2 = [3]\nl = []\nfor i in range(n):\n  x = sum(a1[:i+1]) + sum(a2[i:])\n  l.append(x)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18475": {"id": 18475, "code": "d = 100\nprint((int(\"200\")+(d-1))//d)", "coverage": [">", ">"]}, "8726": {"id": 8726, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1766": {"id": 1766, "code": "n = 10;a = 3;b = 5\nans1 = min(a,b)\nans2 = a+b-n\nans2 = max(ans2,0)\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">", ">"]}, "11974": {"id": 11974, "code": "n = 11;m = 16\nn1 = 11;m1 = 17\nif n==n1:\n    print('0')\nelse:\n    print('1')", "coverage": [">", ">", ">", ">", "!", "!"]}, "17993": {"id": 17993, "code": "n = \"1700\"\nn1,n2=int(n[:2]),int(n[2:])\nif (n1!=0 and n1<=12) and (n2!=0 and n2<=12):\n    print(\"AMBIGUOUS\")\nelif n1!=0 and n1<=12:\n    print(\"MMYY\")\nelif n2!=0 and n2<=12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "13021": {"id": 13021, "code": "n = 6\nprint('YES' if n in [3, 5, 7] else 'NO')", "coverage": [">", ">"]}, "6298": {"id": 6298, "code": "from bisect import bisect\nN = 2\naa = [1, 5]\nbb = [2, 4]\ncc = [3, 6]\nb_cost = [0]\nfor i,b in enumerate(bb):\n  b_cost.append(N-bisect(cc, b)+b_cost[i])\nans = 0\nfor a in aa:\n  idx = bisect(bb, a)\n  ans += b_cost[-1]-b_cost[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3008": {"id": 3008, "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    t = abs(int(S[i:i+3])- 753)\n    if t < ans:\n        ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16777": {"id": 16777, "code": "a = \"D\";b = \"H\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", "!", "!", ">"]}, "9821": {"id": 9821, "code": "N = 8\nS = \"))))((((\"\nn_left=0\nn_right=0\nfor a in S:\n    if a==\")\":\n        if n_left==0:\n            n_right+=1\n        else:\n            n_left-=1\n    else:\n        n_left+=1\nprint((n_right*\"(\")+S+(n_left*\")\"))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "16027": {"id": 16027, "code": "A = [20, 30]\nif A[0] < A[1]*2:\n    print(0)\nelse:\n    print(A[0]-A[1]*2)", "coverage": [">", ">", ">", "!", "!"]}, "19154": {"id": 19154, "code": "n = 12\ncnt = 0\ni = 1\nx = 10\nif n % 2 == 1:\n  print(0)\nelse:\n  while x <= n:\n    cnt += n//x\n    x *= 5\n  print(cnt)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "16196": {"id": 16196, "code": "n = 5\nt = [6, 9, 4, 2, 11]\nt.sort()\nmax_value = t[-1]\nmid_value = 0\nfor a in t:\n    if abs(max_value/2-a) < abs(max_value/2-mid_value):\n        mid_value = a\nprint(max_value, mid_value)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9508": {"id": 9508, "code": "s = \"2017/01/07\"\nprint('2018'+s[4:])", "coverage": [">", ">"]}, "18218": {"id": 18218, "code": "import math\nh = 2\nw = 100\nn = 200\nif h>=w: print(math.ceil(n/h))\nelse: print(math.ceil(n/w))", "coverage": [">", ">", ">", ">", ">", ">"]}, "8171": {"id": 8171, "code": "n = 3;k = 3\na = [1, 2, 3]\nans=len(a)\nans-=k\nif ans%(k-1)==0:\n  print(ans//(k-1)+1)\nelse:\n  print(ans//(k-1)+2)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12459": {"id": 12459, "code": "s = ['l', 'e', 'v', 'e', 'l']\nn=len(s)\nif list(s[::-1])==list(s[:]) and list(s[(n-1)//2-1::-1])==list(s[:(n-1)//2]) and list(s[:(n+3)//2-2:-1])==list(s[(n+3)//2-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "6197": {"id": 6197, "code": "from bisect import bisect_right,bisect_left\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor b in B:\n    a_index=bisect_left(A,b)\n    c_index=bisect_right(C,b)\n    ans +=a_index*(n-c_index)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2347": {"id": 2347, "code": "N = 13;M = 3\nres = 0\nif N >= 2:\n  res += N * (N - 1) / 2\nif M >= 2:\n  res += M * (M - 1) / 2\nprint(int(res))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3518": {"id": 3518, "code": "A = 20;B = 15\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "4632": {"id": 4632, "code": "s = \"xyz\"\nprint(\"{0}{1}{2}\".format(s[:1], (len(s)-2), s[-1:]))", "coverage": [">", ">"]}, "6629": {"id": 6629, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nans=0\nfor i in b:ans+=bisect.bisect_left(a,i)*(n-bisect.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14745": {"id": 14745, "code": "N = 1;P = 1\na_ls = [50]\ndp = [[0,0] for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(1,N+1):\n    next = (a_ls[i-1])%2\n    if next == 0:\n        dp[i][0] += 2 * dp[i-1][0]\n        dp[i][1] += 2 * dp[i-1][1]\n    else:\n        dp[i][0] += dp[i-1][0] + dp[i-1][1]\n        dp[i][1] += dp[i-1][0] + dp[i-1][1]\nprint(dp[-1][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "6389": {"id": 6389, "code": "from bisect import bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nF = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    b = B[i]\n    indC = bisect_right(C,b)\n    if i<N-1:\n        indC1 = bisect_right(C,B[i+1])\n    else:\n        indC1 = N\n    F[i] = F[i+1]+indC1-indC\nG = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    G[i] = G[i+1]+F[i]\ncnt = 0\nfor i in range(N):\n    a = A[i]\n    indB = bisect_right(B,a)\n    cnt += G[indB]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12932": {"id": 12932, "code": "N = \"5\"\nb = N in [\"3\",\"5\",\"7\"]\nif b:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11986": {"id": 11986, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint('0' if M1 == M2 else '1')", "coverage": [">", ">", ">"]}, "18401": {"id": 18401, "code": "h = 3\nw = 7\nn = 10\nans=(n+max(h,w)-1)//max(h,w)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3580": {"id": 3580, "code": "a = 12;b = 4\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", "!", "!", ">"]}, "6412": {"id": 6412, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na = sorted(a)\nb = sorted(b)\nc = sorted(c)\ncount = 0\nimport bisect\nfor i in range(n):\n    A = bisect.bisect_right(a,b[i]-1)\n    C = bisect.bisect_left(c,b[i]+1)\n    count += A*(n-C)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "819": {"id": 819, "code": "k = 101\nif k%7==0:\n    k = 9*k//7\nelse:\n    k *= 9\nf=10%k\nr = -1\nfor i in range(10**7):\n    if f==1:\n        r = i+1\n        break\n    else:\n        f = f*10%k\nprint(r)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "4010": {"id": 4010, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nall=0\nif m2>=m1:\n    all += (h2-h1)*60 + (m2-m1)\n    all -= k\nelse:\n    all += (h2-1-h1)*60 + (m2+60-m1)\n    all -= k\nprint(all)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "7323": {"id": 7323, "code": "H = 210;N = 5\na_nums = [31, 41, 59, 26, 53]\na_sum = sum(a_nums)\nif a_sum>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "2705": {"id": 2705, "code": "if sorted(list(map(int, \"1 9 7 4\".split()))) == [1, 4, 7, 9]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "17245": {"id": 17245, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        print('H') \n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "2851": {"id": 2851, "code": "import sys\nS = \"1234567876\"\nt=1000\nfor x in range(len(S)-2):\n  if t>abs(753-int(S[x]+S[x+1]+S[x+2])):\n    t=abs(753-int(S[x]+S[x+1]+S[x+2]))\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6574": {"id": 6574, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt = 0\nfor bb in b:\n    anum = bisect.bisect_left(a, bb)\n    cnum = n - bisect.bisect_right(c, bb)\n    cnt += (anum * cnum)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3609": {"id": 3609, "code": "a = 20;b = 15\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", "!"]}, "17099": {"id": 17099, "code": "li = ['D', 'D']\nif li==[\"H\",\"H\"] or li==[\"D\",\"D\"]:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "15964": {"id": 15964, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 30\nprint(A - B * 2) if A > B * 2 else print(0)", "coverage": [">", ">", ">", ">"]}, "8813": {"id": 8813, "code": "n = 4\nup = [1, 1, 1, 1]\nlow = [1, 1, 1, 1]\nleft = [up[0]]\nright = [0 for i in range(n)]\nright[-1] = low[-1]\nfor i in range(1, n):\n    left.append(left[i-1] + up[i])\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + low[i]\nans = 0\nfor i in range(n):\n    ans = max(left[i] + right[i], ans)\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11594": {"id": 11594, "code": "S = \"SAT\"\nW=['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(len(W)):\n  if S==W[i]:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "530": {"id": 530, "code": "s = ['x', 'y', 'z']\nk = 4\nn = len(s)\nalph_map = {chr(ord('a') + i): (26 - i) % 26 for i in range(26)}\nfor i in range(n):\n    if k >= alph_map[s[i]]:\n        k -= alph_map[s[i]]\n        s[i] = 'a'\nif k > 0:\n    s[n-1] = chr((ord(s[n-1]) + k % 26) % 123)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13778": {"id": 13778, "code": "a = ['10', '0', '12', '0', '120']\nprint((int(a[2]) - int(a[0])) * 60 + (int(a[3]) - int(a[1])) - int(a[4]) )", "coverage": [">", ">"]}, "1122": {"id": 1122, "code": "N = 111\nfor i in range(111, 999+1, 111):\n    if i >= N:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "19351": {"id": 19351, "code": "n = 10\nif(n %2==1):\n  n *= 2\nprint(n)", "coverage": [">", ">", "!", ">"]}, "7562": {"id": 7562, "code": "H = 20;N = 3\nA = [4, 5, 6]\nAA = sum(A)\nif AA >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19060": {"id": 19060, "code": "N = 12\nif N % 2 == 1:\n    print(0)\nelse:\n    n = 0\n    i = 1\n    while True:\n        if N < 2*5**i:\n            break\n        n += (N // 5**i // 2)\n        i += 1\n    print(n)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12024": {"id": 12024, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(\"0\" if a == c else \"1\")", "coverage": [">", ">", ">"]}, "7115": {"id": 7115, "code": "h = 10;n = 3\na = [4, 5, 6]\nhitpoint=h\natack = a[:]\nfor e in atack:\n    hitpoint -= e\n    if hitpoint <= 0:\n        break\nif hitpoint <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11319": {"id": 11319, "code": "s = \"SUN\"\nl = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7 - (l.index(s)))", "coverage": [">", ">", ">"]}, "19250": {"id": 19250, "code": "N = 5\ncnt = 1\nanswer = 0\ndiv = 10\nif N % 2 == 0:\n    while div <= N:\n        answer += N//div\n        div *= 5\nprint(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "16111": {"id": 16111, "code": "a = 20;b = 15\nif a-2*b>=0:\n    print(a-2*b)\nelse:\n    print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "16161": {"id": 16161, "code": "n = 2\nA = [100, 0]\nmaxA = max(A)\nabs_min = 10**9\nA.remove(maxA)\nfor a in A:\n  if abs_min > abs(maxA/2 - a):\n    abs_min = abs(maxA/2 - a)\n    r = a\nprint(maxA, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5125": {"id": 5125, "code": "s = \"internationalization\"\nif len(s) >=3:\n    a = s[0] + str((len(s)-2)) + s[-1]\nprint(a)", "coverage": [">", ">", ">", ">"]}, "7694": {"id": 7694, "code": "import math\nh = 20;n = 3\na = [4, 5, 6]\nif sum(a) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7048": {"id": 7048, "code": "str = \"20 3\"\nstr2 = \"4 5 6\"\nnums  = str.split()\nnums2  = str2.split()\nif len(nums2) != int(nums[1]):\n    print(\"error\")\nelse:\n   totalDamege = 0\n   for num in nums2:\n       totalDamege += int(num)\n   if int(nums[0]) <= totalDamege:\n       print(\"Yes\")\n   else:\n       print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "15293": {"id": 15293, "code": "x = 64145;y = 123;z = 456\nx-=(y+2*z)\nc=1\nc+=x//(y+z)\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "3261": {"id": 3261, "code": "a = 12;b = 4\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "13547": {"id": 13547, "code": "s = \"happy,newyear,enjoy\"\ns1 = s[:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(s1 + ' ' + s2 + ' ' + s3)", "coverage": [">", ">", ">", ">", ">"]}, "17381": {"id": 17381, "code": "s = \"1700\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= b <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "4004": {"id": 4004, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nM_all = (H2 *60 + M2) - (H1 *60 + M1) - K\nif M_all <= 0:\n    print('0')\nelse:\n    print(M_all)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2547": {"id": 2547, "code": "if {1,9,7,4}==set(map(int,\"1 9 7 4\".split())):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!"]}, "1190": {"id": 1190, "code": "n = 750\nprint(n) if n%111==0 else print((n//111+1)*111)", "coverage": [">", ">"]}, "16697": {"id": 16697, "code": "a = False;b = False\nf = b if a else not b\nprint(\"H\" if f else \"D\")", "coverage": [">", ">", ">"]}, "16552": {"id": 16552, "code": "a = \"D\";b = \"H\"\nprint('H' if a == b else 'D')", "coverage": [">", ">"]}, "18071": {"id": 18071, "code": "s = \"0112\"\na,b = int(s[:2]),int(s[2:])\nyymm = False\nmmyy = False\nif b > 0 and b <= 12:\n  yymm = True\nif a <= 12 and 0 < a:\n  mmyy = True\nif yymm and mmyy:\n  print(\"AMBIGUOUS\")\nelif yymm:\n  print(\"YYMM\")\nelif mmyy:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2896": {"id": 2896, "code": "S = \"1234567876\"\nmabs = 2000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < mabs:\n        mabs = abs(int(S[i:i+3])-753)\nprint(mabs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "396": {"id": 396, "code": "s = \"a\"\nk = 25\nans=''\nfor i in range(len(s)-1):\n  if s[i]=='a':\n    ans+='a'\n  else:\n    if k>=123-ord(s[i]):\n      k-=(123-ord(s[i]))\n      ans+='a'\n    else:\n      ans+=s[i]\nans+=chr((ord(s[-1])-97+k)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13381": {"id": 13381, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5],s[6:13],s[14:20])", "coverage": [">", ">"]}, "11625": {"id": 11625, "code": "week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = \"SUN\"\nans = 7 - week.index(s)\nans = ans if ans != 0 else 7\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13861": {"id": 13861, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nflag = 0\nfor i in range(len(a)-1):\n    if flag == 1:\n        if a[i] > a[i+1]:\n            flag = 0\n            count += 1\n    elif flag == -1:\n        if a[i] < a[i+1]:\n            flag = 0\n            count += 1\n    else:\n        if i == len(a)-1:\n            count+1\n        elif a[i] < a[i+1]:\n            flag = 1\n        elif a[i] > a[i+1]:\n            flag = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", ">"]}, "11828": {"id": 11828, "code": "x = 11;y = 16\ny = 17\nif y==1:\n\tprint(1)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17842": {"id": 17842, "code": "S = 112\nflag = [0, 0] \nl = S // 100\nr = S % 100\nif 1<=r and r<=12:\n  flag[0] += 1\nif 1<=l and l<=12:\n  flag[1] += 1\nif flag == [0, 0]:\n  print('NA')\nelif flag == [0, 1]:\n  print('MMYY')\nelif flag == [1, 0]:\n  print('YYMM')\nelif flag == [1, 1]:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "527": {"id": 527, "code": "S = \"xyz\"\nK = 4\nans = \"\"\nfor s in S:\n    if s == \"a\":\n        ans += s\n    elif 123-ord(s) <= K:\n        ans += \"a\"\n        K -= 123-ord(s)\n    else:\n        ans += s\nif K > 0:\n    ans = ans[:-1] + chr((ord(ans[-1])-97+K)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", ">"]}, "13755": {"id": 13755, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\na = 60*(h2-h1)\nb = m2-m1\nc = a+b\nd = c-k\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17656": {"id": 17656, "code": "s = 112\na=s//100\nb=s%100\nif a>0 and a<=12:\n  if b>0 and b<=12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if b>0 and b<=12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2268": {"id": 2268, "code": "N = 100;A = 100;B = 100\nans1=min(A,B);ans2=max(0,A+B-N)\nprint(ans1,ans2)", "coverage": [">", ">", ">"]}, "17605": {"id": 17605, "code": "S = \"0112\"\ns1=int(S[0:2])\ns2=int(S[2:])\nif 1<=s1<=12 and 1<=s2<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=s2<=12:\n  print(\"YYMM\")\nelif 1<=s1<=12:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9475": {"id": 9475, "code": "s = ['2017', '01', '31']\nprint(\"2018/\"+s[1]+\"/\"+s[2])", "coverage": [">", ">"]}, "14588": {"id": 14588, "code": "n = 3;p = 0\na = [1, 1, 1]\nif all(i%2==0 for i in a):\n    print(0 if p==1 else 2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "10368": {"id": 10368, "code": "a = 1;b = 1;k = 1\nc=[i for i in range(100,0,-1) if a%i==0 and b%i==0]\nprint(c[k-1])", "coverage": [">", ">", ">"]}, "5861": {"id": 5861, "code": "N = 2\nif N % 2 == 1:\n    print(int(N/2 +1))\nelse:\n    print(int(N/2))", "coverage": [">", ">", "!", "!", ">"]}, "5495": {"id": 5495, "code": "n = 2\nprint(n//2 if n % 2 == 0 else (n+1)//2)", "coverage": [">", ">"]}, "11673": {"id": 11673, "code": "s = \"SUN\"\ncon=['','SAT','FRI','THU','WED','TUE','MON','SUN']\nprint(con.index(s))", "coverage": [">", ">", ">"]}, "11398": {"id": 11398, "code": "s = \"SAT\"\nls = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i, x in enumerate(ls):\n  if s == x:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "14255": {"id": 14255, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni=0\na=1\nt=0\nwhile i<N-1:\n    if A[i]<A[i+1]:\n        if t==-1:\n            a+=1\n            t=0\n        elif not t:\n            t=1\n    elif A[i]>A[i+1]:\n        if t==1:\n            a+=1\n            t=0\n        elif not t:\n            t=-1\n    i+=1\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11894": {"id": 11894, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nif m1==m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "19231": {"id": 19231, "code": "N = 5\nif N % 2 == 1:\n    ans = 0\nelse:\n    ans = 0\n    for i in range(1,50):\n        ans += (N//2) // 5**i\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "17831": {"id": 17831, "code": "s = ['1', '7', '0', '0']\ns = [int(i+j) for (i,j) in zip(s[::2],s[1::2])]\nif 1 <= s[0] <= 12:\n  if 1 <= s[1] <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= s[1] <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "6773": {"id": 6773, "code": "hp_m = 10;n = 3\nattack = [4, 5, 6]\ntotal_attack = sum(attack)\nif total_attack >= hp_m:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13025": {"id": 13025, "code": "if __name__ == '__main__':\n  x = 6\n  if (x == 3) or (x == 5) or (x == 7):\n    print(\"YES\")\n  else:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "13994": {"id": 13994, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nnow = a[0]\nbefore = '-'\nfor i in range(1,n):\n    if before == '-':\n        if now > a[i]:\n            before = 'D'\n        elif now< a[i]:\n            before = 'U'\n    else:\n        if before == 'U' and now > a[i]:\n            ans += 1\n            before = '-'\n        elif before == 'D' and now < a[i]:\n            ans += 1\n            before = '-'\n    now = a[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1693": {"id": 1693, "code": "N = 100;A = 100;B = 100\nmx = min(A,B)\nmi = max(A+B-N,0)\nprint(str(mx) + \" \" + str(mi))", "coverage": [">", ">", ">", ">"]}, "10564": {"id": 10564, "code": "import math\nA = 8;B = 12;K = 2\ngcd_of_AB = math.gcd(A,B)\nl = []\nfor i in range(1,gcd_of_AB+1):\n    if gcd_of_AB % i == 0:\n        l.append(i)\nprint(l[len(l)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4494": {"id": 4494, "code": "a = \"xyz\"\nb=a[0]+str(len(a)-2)+a[-1]\nprint(b)", "coverage": [">", ">", ">"]}, "189": {"id": 189, "code": "s = \"a\"\nk = 25\nans = ''\nfor i,v in enumerate(s):\n    if (ord('a') - ord(v))%26 <= k:\n        k -= (ord('a') - ord(v))%26\n        ans += 'a'\n    else:\n        ans += v\nk %= 26\nlast = chr(ord('a')+(ord(ans[-1])-ord('a')+k)%26)\nprint(ans[:-1]+last)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "1428": {"id": 1428, "code": "a = 112\nb=a%100\nc=a//100\nif b<=c*11:\n  print(c*111)\nelse:\n  print((c+1)*111)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14451": {"id": 14451, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nk = 1\nx = y = 0\nc = A[0]\nfor i in A[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13886": {"id": 13886, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nif n == 1 or n == 2:\n  ans = 1\nelse:\n  b = [a[0], a[1]]\n  if a[1] - a[0] > 0:\n    f = '+'\n  elif a[1] - a[0] < 0:\n    f = '-'\n  elif a[1] - a[0] == 0:\n    f = ''\n  for i in range(2, n):\n    if f == '+' and a[i] - b[-1] >= 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '+' and a[i] - b[-1] < 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '-' and a[i] - b[-1] <= 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '-' and a[i] - b[-1] > 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '' and a[i] - b[-1] > 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '' and a[i] - b[-1] < 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '' and a[i] - b[-1] == 0:\n      b.append(a[i])\n      f = ''\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "5336": {"id": 5336, "code": "n = 2\nif n % 2 == 0:\n    print(round(n / 2))\nelse:\n    print(round((n + 1)/2))", "coverage": [">", ">", ">", "!", "!"]}, "5869": {"id": 5869, "code": "from sys import stdin\nN = \"5\"\nN = int(N)\nprint(N//2 + N%2)", "coverage": [">", ">", ">", ">"]}, "10364": {"id": 10364, "code": "A = 100;B = 50;K = 4\ncd = []\nfor i in range(min([A,B])):\n  if A % (i + 1) == 0 and B % (i + 1) == 0:\n    cd.append(i+1)\nprint(cd[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "13508": {"id": 13508, "code": "sentence = \"happy,newyear,enjoy\"\nprint(sentence.replace(\",\", \" \"))", "coverage": [">", ">"]}, "11256": {"id": 11256, "code": "youbi = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ny = \"SAT\"\nfor i in range(7):\n  if y == youbi[i]:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "5358": {"id": 5358, "code": "N = 100\nprint(N//2+(N%2!=0))", "coverage": [">", ">"]}, "23": {"id": 23, "code": "import string\ns = ['x', 'y', 'z']\nk = 4\nstr=string.ascii_lowercase\nabc=str+str\ns_len=len(s)\nfor i in range(s_len):\n  si_inx=abc.index(s[i])\n  if i==s_len-1:\n    k%=26\n    s[i]=abc[si_inx+k]\n    break\n  if s[i]=='a':\n    continue\n  if k>=26-si_inx:\n    k-=26-si_inx\n    s[i]='a'\n  else:\n    continue\n  if k<=0:\n    break\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", "!", ">"]}, "5664": {"id": 5664, "code": "m = 100\nprint(m//2+m%2)", "coverage": [">", ">"]}, "9150": {"id": 9150, "code": "S = \"2017/01/07\"\nS = '2018/01/'+ S[8:10]\nprint(S)", "coverage": [">", ">", ">"]}, "3664": {"id": 3664, "code": "w = 20;c = 15\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "2328": {"id": 2328, "code": "n = 100;a = 100;b = 100\nmax_read=min(a,b)\nif(a+b-n>0):\n\tmin_read=a+b-n\nelse:\n    min_read=0\nprint(str(max_read)+\" \"+str(min_read))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8957": {"id": 8957, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\np=[]\nfor i in range (N):\n    tempA=A[:1+i]\n    tempB=B[0+i:]\n    p.append(sum(tempA)+sum(tempB))\nprint(max(p))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2103": {"id": 2103, "code": "N = 100;A = 100;B = 100\nMAX = min(A,B)\nMIN = max(A+B-N,0)\nans = [MAX,MIN]\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "8776": {"id": 8776, "code": "N = 5\nrow1 = [3, 2, 2, 4, 1]\nrow2 = [1, 2, 2, 2, 1]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12529": {"id": 12529, "code": "a = 8;b = 12;k = 2\ncounter = 0\nfor i in list(range(1,min(a,b)+1))[::-1] :\n    if a%i == 0 and b%i == 0 :\n        counter += 1\n    if counter == k :\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16750": {"id": 16750, "code": "a = \"D\";b = \"H\"\nif (a == b == 'H') or (a == b == 'D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "19515": {"id": 19515, "code": "s = 10\nstart=s*2\nif s%2==0:\n  start=int(start/2)\nprint(start)", "coverage": [">", ">", ">", ">", ">"]}, "15925": {"id": 15925, "code": "A = 20;B = 30\nif A - 2 * B >= 0:\n  print(A - 2 * B)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "16347": {"id": 16347, "code": "n = 2\na = [100, 0]\nn = max(a)\ntmp = n / 2\nr = n + 1\nd = n + 1\nfor num in a:\n    if num == n:\n        continue\n    d_tmp = abs(num - tmp)\n    if d_tmp < d:\n        d = d_tmp\n        r = num\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12344": {"id": 12344, "code": "s = ['l', 'e', 'v', 'e', 'l']\nn = len(s)\ns_r = list(reversed(s))\ncnt0 = 0\nss0 = False\nfor a,b in zip(s,s_r):\n    if a == b:\n        cnt0 += 1\n    if cnt0 == len(s):\n        ss0 = True\ncnt1 = 0\nss1 = False\ns1 =s[0:(n-1)//2]\ns1_r = list(reversed(s1))\nfor a,b in zip(s1,s1_r):\n    if a == b:\n        cnt1 += 1\n    if cnt1 == len(s1):\n        ss1 = True\ncnt2 = 0\nss2 = False\ns2 =s[(n+3)//2-1:n]\ns2_r = list(reversed(s2))\nfor a,b in zip(s2,s2_r):\n    if a == b:\n        cnt2 += 1\n    if cnt2 == len(s2):\n        ss2 = True\nif ss0 and ss1 and ss2:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "16351": {"id": 16351, "code": "n = 2\na = [100, 0]\nma = max(a)\ncnt = 10**9\nmid = ma/2\nfor i in range(n):\n    if abs(cnt - mid) >= abs(mid - a[i]):\n        cnt = a[i]\nprint(max(ma,cnt),min(ma,cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11038": {"id": 11038, "code": "S = \"akasaka\"\nnew_S1=list(reversed(S))\nnew_S2=''.join(new_S1)\nif S==new_S2:\n    A=S[0:len(S)//2]\n    new_A1 = list(reversed(A))\n    new_A2 = ''.join(new_A1)\n    B=S[len(S)//2+1:len(S)]\n    new_B1 = list(reversed(B))\n    new_B2 = ''.join(new_B1)\n    if A==new_A2 and B==new_B2:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "6657": {"id": 6657, "code": "from bisect import bisect,bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    ca = bisect_left(A,b)\n    cc = N - bisect(C,b)\n    ans += ca*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17997": {"id": 17997, "code": "s = ['1', '9', '0', '5']\na = 10*int(s[0])+int(s[1])\nb = 10*int(s[2])+int(s[3])\nif 0<a<13 and 0<b<13:\n    print(\"AMBIGUOUS\")\nelif 0<a<13:\n    print(\"MMYY\")\nelif 0<b<13:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9943": {"id": 9943, "code": "n = 6\ndata = [')', ')', ')', '(', ')', ')']\nstack = []\nans = ''\nfor c in data:\n    if c == '(':\n        stack.append(c)\n        ans += '('\n    else:\n        if len(stack) == 0 or stack.pop() != '(':\n            ans = '(' + ans + c\n        else:\n            ans += ')'\nans += ')'*len(stack)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "18154": {"id": 18154, "code": "s = \"1700\"\nA = int(s[0:2]); B = int(s[2:4])\nif 1 <= A <= 12 and 1 <= B <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= A <= 12 and 0 <= B <= 99:\n    print(\"MMYY\")\nelif 1 <= B <= 12 and 0 <= A <= 99:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "16318": {"id": 16318, "code": "n = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\ny = max(A)\nx = A[0]\nfor a in A:\n    if abs(y/2-a) < abs(y/2 - x):\n        x = a\nprint(y, x)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "870": {"id": 870, "code": "k = 101\nn = 7 % k\nans = -1\ncnt = 1\nchecked = {n}\nwhile n > 0:\n    n = (n * 10 + 7) % k\n    cnt += 1\n    if n in checked:\n        break\n    checked.add(n)\nif n == 0:\n    print(cnt)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "9625": {"id": 9625, "code": "N = 6\nS = \")))())\"\nA=0 \nB=0 \nfor s in S:\n    if s=='(':\n        A+=1\n    elif s==')' and A>0:\n        A-=1\n    else:\n        B+=1\nprint('('*B+S+')'*A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "1762": {"id": 1762, "code": "n = 100;a = 100;b = 100\nans_min = 0 if a+b-n <0 else a+b-n\nprint(min(a, b), ans_min)", "coverage": [">", ">", ">"]}, "18287": {"id": 18287, "code": "h = 3\nw = 7\nn = 10\nc1=0\nc2=0\nt=0\nwhile t<n:\n  if h-c2<=w-c1:\n    t+=w-c1\n    c2+=1\n  else:\n    t+=h-c2\n    c1+=1\nprint(c1+c2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "18717": {"id": 18717, "code": "from sys import stdin\nH = 2\nW = 100\nN = 200\nif N%(max(H,W))==0:\n    print(N//(max(H,W)))\nelse:\n    print(N//(max(H,W))+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "5405": {"id": 5405, "code": "N = 2\nN += 1\nprint(N // 2)", "coverage": [">", ">", ">"]}, "1009": {"id": 1009, "code": "n = 112\nt = 0\nwhile t*111 < n  and n > (t+1)*111:\n    t += 1\nprint((t+1)*111)", "coverage": [">", ">", ">", ">", ">"]}, "15017": {"id": 15017, "code": "import collections\nn = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif a2[1] == 0:\n  print(2 ** n if p == 0 else 0)\nelse:\n  print( 2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9209": {"id": 9209, "code": "S = \"2017/01/31\"\nprint(S[:3]+\"8\"+S[4:])", "coverage": [">", ">"]}, "18222": {"id": 18222, "code": "import math\nH = 3\nW = 7\nN = 10\nfor i in range(1, max(H, W)+1):\n    if(max(H, W)*i >= N):\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16522": {"id": 16522, "code": "import math \nn = 2\na = [100, 0]\nm = max(a)\nk = 0\nfor x in a:\n    if abs((k * 2 - m)) > abs((x * 2 - m)):\n        k = x\nprint(m, k)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17117": {"id": 17117, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n\tprint(b)\nelse:\n\tprint(\"H\" if b == 'D' else \"D\")", "coverage": [">", ">", "!", "!", ">"]}, "2846": {"id": 2846, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < ans:\n        ans = abs(int(S[i:i+3])-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4562": {"id": 4562, "code": "s = \"smiles\"\nx=len(s)\nnum=x-2\nprint(s[0]+str(num)+s[x-1])", "coverage": [">", ">", ">", ">"]}, "6778": {"id": 6778, "code": "h = 20;n = 3\na = [4, 5, 6]\nprint('Yes') if sum(a)>=h else print('No')", "coverage": [">", ">", ">"]}, "17168": {"id": 17168, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    print(b)\nelif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")", "coverage": [">", ">", "!", ">", "!", ">", ">"]}, "8872": {"id": 8872, "code": "n = 1\na = [2]\nb = [3]\nacount=0\nbcount=0\nans=0\nfor i in range(n):\n  bcount=0\n  acount+=a[i]\n  for j in range(i,n):\n    bcount+=b[j]\n    if ans<acount+bcount:\n      ans=acount+bcount\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4932": {"id": 4932, "code": "a = \"xyz\"\nprint(a[0:1] + str(len(a) - 2) + a[len(a) - 1:len(a)])", "coverage": [">", ">"]}, "3134": {"id": 3134, "code": "import sys\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nread = sys.stdin.buffer.read\nsys.setrecursionlimit(10 ** 7)\nINF = float('inf')\nS = \"1111111111\"\nans = INF\nfor a1, a2, a3 in zip(S, S[1:], S[2:]):\n    num = int(a1 + a2 + a3)\n    tmp = abs(num - 753)\n    ans = min(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4769": {"id": 4769, "code": "s = \"smiles\"\nss = s[0] + str(len(s)-2) + s[len(s)-1]\nprint(ss)", "coverage": [">", ">", ">"]}, "14865": {"id": 14865, "code": "N = 1;P = 1\nA = [50]\nodd = 0\nfor v in A:\n    if  v % 2:\n        odd += 1 \neven = N-odd\nif odd != 0:\n    print((2**even)*int(2**(odd-1)))\nelse:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", "!", "!", ">"]}, "18966": {"id": 18966, "code": "n = 5\nif n%2 == 1:\n    print(0)\nelse:\n    ans = 0\n    cnt = 1\n    while n>=(5**cnt):\n        ans += n//(5**cnt)//2\n        cnt += 1\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "12212": {"id": 12212, "code": "s = \"atcoder\"\nn = len(s)\na = s[0:n//2]\nb = s[n//2+1:n]\nif s == s[::-1] and a == a[::-1] and b == b[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4911": {"id": 4911, "code": "s = \"xyz\"\nls= list(s)\nprint(ls[0]+str(len(s)-2)+ls[-1])", "coverage": [">", ">", ">"]}, "3602": {"id": 3602, "code": "A = 12;B = 4\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "4124": {"id": 4124, "code": "h_1 = 10;m_1 = 0;h_2 = 15;m_2 = 0;k = 30\ntime_m = h_2*60 + m_2 - (h_1*60 + m_1) - k\nprint(time_m)", "coverage": [">", ">", ">"]}, "1215": {"id": 1215, "code": "N = 112\nf = 0\nfor i in range(1, 10):\n  if N <= i * 111:\n    print(i * 111)\n    f = 1\n    break\nif f == 0:\n  print(1111)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "7171": {"id": 7171, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nAll = sum(A)\nif H - All > 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12853": {"id": 12853, "code": "X = \"6\"\nyes = X==\"7\" or X==\"5\" or X==\"3\"\nprint('YES' if yes else 'NO')", "coverage": [">", ">", ">"]}, "6193": {"id": 6193, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfrom bisect import bisect_left, bisect_right\nfor b in B:\n    ac = bisect_left(A,b)\n    cc = N - bisect_right(C,b)\n    ans += ac * cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "401": {"id": 401, "code": "S = \"xyz\"\nK = 4\nV = []\nfor e in S:\n    V.append(ord(e)-97)\nfor i in range(len(S)):\n    if S[i] == 'a':\n        continue\n    if K < 26-V[i]:\n        pass\n    else:\n        K -= 26-V[i]\n        V[i] = 0\nV[-1] += K\nV[-1] %= 26\nV = [chr(e+97) for e in V]\nprint(\"\".join(V))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "8379": {"id": 8379, "code": "n = 1\nx = [2]\ny = [3]\nmx=0\nfor i in range(n):\n  ans=sum(x[:i+1])+sum(y[i:])\n  if ans>mx:\n    mx=ans\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6474": {"id": 6474, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nimport bisect\nrui=[0]\nsm=0\nfor mid in b:\n    ind = bisect.bisect_left(c,mid+1)\n    sm+= (n-ind)\n    rui.append(sm)\nans=0\nfor top in a:\n    ind = bisect.bisect_left(b,top+1)\n    tmp = rui[-1] - rui[ind]\n    ans+=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11609": {"id": 11609, "code": "li = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"] \nS = \"SUN\"\nrest = 7-li.index(S)\nprint(rest)", "coverage": [">", ">", ">", ">"]}, "16502": {"id": 16502, "code": "n = 2\na = [100, 0]\nn1=max(a)\nn2=-n1\nnc=n1/2\nfor m in a:\n  if abs(m-nc)<abs(n2-nc) and m!=n1:\n    n2=m\nprint (n1,n2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "325": {"id": 325, "code": "s = [99, 111, 100, 101, 102, 101, 115, 116, 105, 118, 97, 108]\nk = 100\nfor i in range(len(s)):\n    if s[i] == 97: continue\n    if 123 - s[i] <= k:\n        k -= 123 - s[i]\n        s[i] = 97\n        if k == 0:\n            break\nif k != 0:\n    s[-1] = s[-1] + k % 26\nprint(\"\".join([chr(i) for i in s]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18863": {"id": 18863, "code": "from itertools import accumulate\nN = 6\nA = (1, 3, 6, 10, 15, 21)\nx = A[-1]\ny = A[0]\nans = abs(x - y - y)\nfor a in A[:-1]:\n    ans = min(ans, abs(x - a - a))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6735": {"id": 6735, "code": "H = 210;N = 5\nC = [31, 41, 59, 26, 53]\ns = 0\nfor i in range(N):\n    s += C[i]\nr = H - s\nif r <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "17068": {"id": 17068, "code": "h = \"D\";d = \"H\"\nif h == d:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", "!", "!", ">"]}, "41": {"id": 41, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nn=len(s)\nfor i in range(n-1):\n    t=s[i]\n    order=ord(t)-97\n    if order==0:\n        continue\n    elif k>=26-order:\n        s[i]='a'\n        k-=26-order\n    else:\n        continue\ns[n-1]=chr(97+(ord(s[n-1])-97+k)%26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14304": {"id": 14304, "code": "N = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nb= [a[0]]\nif N > 1:\n    for i in range(1,N):\n        if a[i] != a[i-1]:\n            b.append(a[i])\n    if b[0] < b[1]:\n        up_down = 1\n    else:\n        up_down = -1\ni = 1\nwhile i < len(b):\n    if up_down*(b[i] - b[i-1]) < 0:\n        ans += 1\n        if b[i] < b[min(len(b)-1,i+1)]:\n            up_down = 1\n        else:\n            up_down = -1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">"]}, "12172": {"id": 12172, "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nif a == c:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4819": {"id": 4819, "code": "s = \"internationalization\"\nf = s[0]\ne = s[-1]\nprint(f + str(len(s)-2) + e)", "coverage": [">", ">", ">", ">"]}, "16992": {"id": 16992, "code": "a = \"H\";b = \"H\"\nif a==b: print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", "!"]}, "17166": {"id": 17166, "code": "a = \"D\";b = \"D\"\nprint(\"H\" if a==b or a==b else \"D\")", "coverage": [">", ">"]}, "16708": {"id": 16708, "code": "a = \"D\";b = \"H\"\nif (a==\"H\" and b==\"H\") or (a==\"D\" and b==\"D\"):\n    ans=\"H\"\nelse:\n    ans=\"D\"\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "16778": {"id": 16778, "code": "a = \"D\";b = \"D\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "17922": {"id": 17922, "code": "s = \"1905\"\nflg1 = 1 <= int(s[:2]) <= 12\nflg2 = 1 <= int(s[2:]) <= 12\nl = [\"NA\", \"YYMM\", \"MMYY\", \"AMBIGUOUS\"]\nprint(l[(flg1 << 1) + flg2])", "coverage": [">", ">", ">", ">", ">"]}, "12084": {"id": 12084, "code": "m0 = 11;d0 = 30\nm1 = 12;d1 = 1\nprint('0') if m0 == m1 else print('1')", "coverage": [">", ">", ">"]}, "15206": {"id": 15206, "code": "X = 64145;Y = 123;Z = 456\nans=X//(Y+Z)\nif X<ans*(Y+Z)+Z:\n  print(ans-1)\nelse:  \n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "19021": {"id": 19021, "code": "N = 5\nans = 0\nif N % 2 == 0:\n  a = N//10\n  ans += a\n  while a>1:\n    a = a//5\n    ans+=a\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14996": {"id": 14996, "code": "n = 1;p = 1\nA = [50]\ncheck = all(a%2 == 0 for a in A)\nans = 0\nif check and p == 0:\n  ans = 1 << n\nif not check:\n  ans = 1 << (n-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "7130": {"id": 7130, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if h<=sum(a) else 'No')", "coverage": [">", ">", ">"]}, "2199": {"id": 2199, "code": "rec = ['100', '100', '100']\nn, a, b = map(int, rec)\nnin = [a, b]\nnmax = min(nin)\nnmin = n - min(n, (n - nin[0]) + (n - nin[1]))\nprint(str(nmax) + \" \" + str(nmin))", "coverage": [">", ">", ">", ">", ">", ">"]}, "7090": {"id": 7090, "code": "r = ['211', '5']\nH=int(r[0])\nN=int(r[1])\ndata_pre = ['31', '41', '59', '26', '53']\ndata=[int(s) for s in data_pre]\nif sum(data)>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "850": {"id": 850, "code": "K = 2\nnum = 7%K\nfor i in range(K):\n  if num%K ==0:\n    print(i+1)\n    break\n  else:\n    num = (num*10 + 7)%K\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "13276": {"id": 13276, "code": "S = \"abcde,fghihgf,edcba\"\na = S.replace(',',' ')\nprint(a)", "coverage": [">", ">", ">"]}, "3120": {"id": 3120, "code": "s = \"1234567876\"\nans = 1000000\nfor i in range(len(s)-1):\n    ans = min(ans, abs(int(s[i:i+3]) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18322": {"id": 18322, "code": "H = 2\nW = 100\nN = 200\nK=max(H,W)\nprint(-(-N//K))", "coverage": [">", ">", ">", ">", ">"]}, "5727": {"id": 5727, "code": "N = 100\nif N%2 == 0:\n    n = N/2\nelse:\n    n = (N+1)/2\nprint(round(n))", "coverage": [">", ">", ">", "!", "!", ">"]}, "900": {"id": 900, "code": "K = 2\nL = 0\nif K % 7 == 0:\n  L = 9*K//7\nelse:\n  L = 9*K\nt = 1\nans = -1\nfor i in range(1,L,1):\n  t = t*10\n  if t % L == 1:\n    ans = i\n    break\n  t = t % L\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19396": {"id": 19396, "code": "s = 999999999\nif s%2==0:\n  print(s)\nelse:\n  print(2*s)", "coverage": [">", ">", "!", "!", ">"]}, "18726": {"id": 18726, "code": "h = 2\nw = 100\nn = 200\na = max(h,w)\nprint((n+a-1)//a)", "coverage": [">", ">", ">", ">", ">"]}, "10221": {"id": 10221, "code": "n = 6\ns = \")))())\"\np=0\nq=0\nfor i in s:\n  if i=='(':\n    p+=1\n  else:\n    if p>=1:\n      p-=1\n    else:\n      q+=1\n      p=0\nans='('*q+s+')'*p\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "5022": {"id": 5022, "code": "s = \"xyz\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(''.join(ans))", "coverage": [">", ">", ">"]}, "13275": {"id": 13275, "code": "S = \"haiku,atcoder,tasks\"\na = S.replace(',',' ')\nprint(a)", "coverage": [">", ">", ">"]}, "19508": {"id": 19508, "code": "n = 999999999\nif n % 2 == 0: print(n)\nelse: print(2*n)", "coverage": [">", ">", ">"]}, "4477": {"id": 4477, "code": "n = \"internationalization\"\nA = n[0]\nB = n[-1]\nprint(n[0] + str(len(n)-2) +n[-1])", "coverage": [">", ">", ">", ">"]}, "12279": {"id": 12279, "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nn = len(s)\nif (\n    s[: (n - 1) // 2] == s[: (n - 1) // 2][::-1]\n    and s[(n + 1) // 2 :] == s[(n + 1) // 2 :][::-1]\n    and s == s[::-1]\n):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", "!", ">", "!", "!", "!", "!", "!", ">"]}, "1219": {"id": 1219, "code": "n = 750\ndiv, mod = divmod(n, 111)\nans = div * 111 if mod == 0 else (div + 1) * 111\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "7442": {"id": 7442, "code": "H = 211;N = 5\nAs = [31, 41, 59, 26, 53]\nsumA = sum(As)\nif sumA >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12297": {"id": 12297, "code": "s = \"atcoder\"\nn = len(s)\ns_ = s[:(n-1)//2]\nif s == s[::-1] and s_ == s_[::-1]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2204": {"id": 2204, "code": "n = 10;a = 7;b = 5\nboth_max = min(a, b)\nif a+b <= n:\n    both_min = 0\nelse:\n    both_min = a+b-n\nprint(both_max, both_min)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "18373": {"id": 18373, "code": "import math\nh = 2\nw = 100\nn = 200\na = n / max(h, w)\na = math.ceil(a)\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5162": {"id": 5162, "code": "s = \"smiles\"\nprint('%c%d%c'%(s[0],len(s)-2,s[-1]))", "coverage": [">", ">"]}, "17572": {"id": 17572, "code": "s = ['0', '1', '1', '2']\nS=[]\nfor i in range(len(s)):\n    S.append(int(s[i]))\nif 1<=S[2]*10+S[3] and S[2]*10+S[3]<=12:\n    if 1<=S[0]*10+S[1] and S[0]*10+S[1]<=12:\n        print('AMBIGUOUS')\n    else:\n        print('YYMM')\nelse:\n    if 1<=S[0]*10+S[1] and S[0]*10+S[1]<=12:\n        print('MMYY')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "15629": {"id": 15629, "code": "x = 64145;y = 123;z = 456\ncount = 0\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">", ">"]}, "3430": {"id": 3430, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 12;b = 4\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9965": {"id": 9965, "code": "s = \"())\";t = \"())\";l = \"(\";r = \")\";p = \"()\"\nexec(\"t=t.replace('()','');\"*50)\nc=t.count;print(l*c(r)+s+r*c(l))", "coverage": [">", ">", ">"]}, "3520": {"id": 3520, "code": "a = 12;b = 4\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "5838": {"id": 5838, "code": "N = 100\nans = N//2 + N%2\nprint(ans)", "coverage": [">", ">", ">"]}, "12134": {"id": 12134, "code": "n = 11;m = 30\ns = 12;t = 1\nprint(s-n)", "coverage": [">", ">", ">"]}, "13520": {"id": 13520, "code": "word = \"happy,newyear,enjoy\"\nnew_word = word.replace(',', ' ')\nprint(new_word)", "coverage": [">", ">", ">"]}, "17847": {"id": 17847, "code": "S = \"1905\"\nl=len(S)\nY=0\nM=0\nfor i in range(l):\n    if i==3:\n        if int(S[i-1])==0 and 1<=int(S[i])<=9:\n            Y=1\n        elif int(S[i-1])==1 and 0<=int(S[i])<=2:\n            Y=1\nfor i in range(l):\n    if i==1:\n        if int(S[i-1])==0 and 1<=int(S[i])<=9:\n            M=1\n        elif int(S[i-1])==1 and 0<=int(S[i])<=2:\n            M=1\nif Y==1 and M==1:\n    print('AMBIGUOUS')\nelif Y==1 and M==0:\n    print('YYMM')\nelif Y==0 and M==1:\n    print('MMYY')\nelif Y==0 and M==0:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "12462": {"id": 12462, "code": "S = \"level\"\nN = len(S)\nflag = True\nif S!=\"\".join(reversed(list(S))):\n    flag=False\nif S[:int((N-1)/2)]!=\"\".join(reversed(list(S[:int((N-1)/2)]))):\n    flag=False\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "5811": {"id": 5811, "code": "n = 100\nif n%2==0:\n  print(int(n/2))\nif not n%2==0:\n  print(int(n/2+1))", "coverage": [">", ">", ">", ">", "!"]}, "15069": {"id": 15069, "code": "N = 2;P = 0\nA = [1, 3]\nx = y = 0\nfor i in range (N):\n  if A[i]%2 == 0:\n    x += 1\n  else:\n    y += 1\nif P%2 == 0:\n  print(2**N if y == 0 else 2**(N-1))\nelse:\n  print(0 if y == 0 else 2**(N-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "4730": {"id": 4730, "code": "s = \"smiles\"\na = s[0]\nb = s[-1]\nlong = len(s) - 2\nprint(a + str(long) + b)", "coverage": [">", ">", ">", ">", ">"]}, "12367": {"id": 12367, "code": "s = \"akasaka\"\nn = len(s)\nflg = True\nfor i in range(n//2):\n    if s[i] != s[n-1-i]:\n        flg = False\nfor i in range(n//4):\n    if s[i] != s[n//2-1-i]:\n        flg = False\nprint('Yes') if flg else print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "5411": {"id": 5411, "code": "from math import *\nx=int(\"2\")\nprint(ceil(x/2))", "coverage": [">", ">", ">"]}, "18905": {"id": 18905, "code": "import sys\nn = 12\nans = 0\ni = 1\nif n%2 == 1:\n    print(ans)\n    sys.exit()\nwhile True:\n    d = 5**i\n    if d > n//2:\n        break\n    else:\n        ans += ((n//2) - (n//2)%d)//d\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "4902": {"id": 4902, "code": "S = \"xyz\"\nans = S[0] + str(len(S) - 2) + S[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "2631": {"id": 2631, "code": "a = \"4 9 0 8\"\nif '1' in a and '7' in a and '9' in a and '4' in a:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "11276": {"id": 11276, "code": "s = \"SAT\"\nif 'SU' in s:\n  print('7')\nif 'MO' in s:\n  print('6')\nif 'TU' in s:\n  print('5')\nif 'WE' in s:\n  print('4')\nif 'TH' in s:\n  print('3')\nif 'FR' in s:\n  print('2')\nif 'SA' in s:\n  print('1')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "18086": {"id": 18086, "code": "s = \"1905\"\nif int(s[:2])<=12 and int(s[:2])>0:\n    if int(s[2:4])<=12 and int(s[2:4])>0:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelif int(s[2:4])<=12 and int(s[2:4])>0:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", "!"]}, "10892": {"id": 10892, "code": "s = \"akasaka\"\nfor i in [s, s[:len(s)//2], s[len(s)//2+1:]]:\n  if i != i[::-1]:\n    print(\"No\")\n    break\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "18368": {"id": 18368, "code": "from math import ceil\nh = 3\nw = 7\nn = 10\nres=ceil(n/max(h,w))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13722": {"id": 13722, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ns = 60 * H1 + M1\ne = 60 * H2 + M2\nans = max(0, e - s - K)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "4644": {"id": 4644, "code": "s = \"xyz\"\nhead, *center, tail = s\nprint(head + str(len(center)) + tail)", "coverage": [">", ">", ">"]}, "7964": {"id": 7964, "code": "import math\nn = 4;k = 3;a = [2, 3, 1, 4]\nprint([math.ceil((n-k)/(k-1))+1,1][n==k])", "coverage": [">", ">", ">"]}, "19044": {"id": 19044, "code": "N = 5\nM = 10\nans = 0\nif N % 2 == 0:\n  while N >= M:\n    ans += N//M\n    M *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">"]}, "11109": {"id": 11109, "code": "s = \"akasaka\"\nn = len(s)\ncnt = 0\ns1 = s[:((n-1)//2)]\ns2 = s[(n+3)//2 -1:n]\nfor i in range(n//2):\n    if s[i] != s[-i-1]:\n        print('No')\n        exit()\n    else:\n        if s1[i] != s2[i]:\n            print('No')\n            exit()\nprint('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "10269": {"id": 10269, "code": "n = 6\ns = \")))())\"\nans=s\nwhile len(s)>0:\n  s=ans\n  i=0\n  while i<len(s):\n    if s[i:i+2]=='()':\n      s=(s[:i]+s[i+2:] if i!=0 else s[i+2:])\n      i=-1\n    i+=1\n  l=s.count('(')\n  r=s.count(')')\n  if l>r :\n    ans=ans+')'*(l-r)\n  elif r>l:\n    ans='('*(r-l)+ans\n  elif len(s)>0:\n    ans='('+ans\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "10856": {"id": 10856, "code": "s = \"atcoder\"\nn=int((len(s)-1)/2)\nc=0\nfor i in range(n):\n  if s[i] == s[i+n+1]:\n    c+=1\nif c==n:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "4905": {"id": 4905, "code": "voca = \"xyz\"\noutput = voca[0] + str(int(len(voca) - 2) )+ voca[-1]\nprint(output)", "coverage": [">", ">", ">"]}, "4244": {"id": 4244, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nf=60*c+d-60*a-b-e\nprint(f)", "coverage": [">", ">", ">"]}, "16329": {"id": 16329, "code": "N = 2\nA = [100, 0]\nsort_A=sorted(A)\nmax_A=sort_A[-1]\nanswer=[]\nhalf_A=max_A//2\nnumber=pow(10,9)\nanswer=0\nfor n in range(N-1):\n    if number>=abs(sort_A[n]-half_A):\n        answer=n\n        number=abs(sort_A[n]-half_A)\nprint(max_A,sort_A[answer])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6944": {"id": 6944, "code": "hp = 20;n = 3\ndamage_list = [4, 5, 6]\ndamage_sum = sum(damage_list)\nif damage_sum >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6222": {"id": 6222, "code": "from bisect import *\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nres = 0\nfor i in range(n):\n    temp = b[i]\n    res += bisect_left(a, temp) * (n - bisect_right(c, temp))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "992": {"id": 992, "code": "N = 111\nx = 111\nwhile x < N:\n    x += 111\nprint(x)", "coverage": [">", ">", ">", "!", ">"]}, "5477": {"id": 5477, "code": "N = 2\na = (N + 2 - 1) // 2\nprint(a)", "coverage": [">", ">", ">"]}, "5473": {"id": 5473, "code": "i = 5\nimport math\nprint(math.ceil(i/2))", "coverage": [">", ">", ">"]}, "19355": {"id": 19355, "code": "u = 3\nif u % 2 == 1:\n  print (u*2)\nelse:\n  print (u)", "coverage": [">", ">", ">", "!", "!"]}, "1944": {"id": 1944, "code": "N = 100;A = 100;B = 100\nprint(min(A, B), (A + B - N if A + B > N else 0))", "coverage": [">", ">"]}, "8561": {"id": 8561, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3344": {"id": 3344, "code": "a = \"20\";b = \"15\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "448": {"id": 448, "code": "s = \"xyz\"\nK = 4\nc = [ord(s1)-ord('a') for s1 in s]\nsl = list(s)\nfor i in range(len(s)):\n    if c[i] and 26-c[i] <= K:\n        sl[i] = 'a'\n        K -= 26-c[i]\nsl[len(s)-1] = chr((ord(sl[len(s)-1]) - ord('a') + K) % 26 + ord('a'))\nprint(''.join(sl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7282": {"id": 7282, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= h: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">"]}, "19417": {"id": 19417, "code": "a = 10\nif int(a % 2) == 0:\n    print(a)\nelse:\n    print(a * 2)", "coverage": [">", ">", ">", "!", "!"]}, "14855": {"id": 14855, "code": "n = 1;p = 1\na_list = [50]\ndp = [[0,0] for i in range(n+1)]\ndp[0][0] = 1\ndp[0][1] = 0\nfor i in range(n):\n  if a_list[i] % 2 == 0:\n    dp[i+1][0] = dp[i][0] + dp[i][0] \n    dp[i+1][1] = dp[i][1] + dp[i][1]\n  if a_list[i] % 2 == 1:\n    dp[i+1][0] = dp[i][0] + dp[i][1] \n    dp[i+1][1] = dp[i][1] +dp[i][0] \nprint(dp[-1][p])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14470": {"id": 14470, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nc = 1\nd = 0\nfor i in range(n-1):\n  if a[i] == a[i+1]:\n    pass\n  elif a[i] < a[i+1]:\n    if d < 0:\n      d = 0\n      c += 1\n    else:\n      d += 1\n  else:\n    if d > 0:\n      d = 0\n      c += 1\n    else:\n      d -= 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "13599": {"id": 13599, "code": "str = \"haiku,atcoder,tasks\"\nprint(str.replace(\",\",\" \"))", "coverage": [">", ">"]}, "3221": {"id": 3221, "code": "p = \"20\";q = \"30\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13153": {"id": 13153, "code": "x = 5\ndata = [7, 5, 3]\nif x in data:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "8433": {"id": 8433, "code": "N = 1\nA1 = [2]\nA2 = [3]\nA2.reverse()\nA1_=[]\nA2_=[]\na1_=0\na2_=0\nfor n in range(N):\n    a1_ = a1_+A1[n]\n    a2_ = a2_+A2[n]\n    A1_.append(a1_)\n    A2_.append(a2_)\nA2_.reverse()\nans=0\nfor n in range(N):\n    if ans < A1_[n]+A2_[n]:\n        ans = A1_[n]+A2_[n]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5682": {"id": 5682, "code": "n = \"100\"\nn = int(n)\nif(n==2):\n  print(1)\nelif(n%2==0):\n  print(int(n/2))\nelse:\n  print(int(n/2)+1)", "coverage": [">", ">", ">", "!", ">", ">", "!", "!"]}, "9876": {"id": 9876, "code": "n = 6\ns = \")))())\"\nleft = 0\np = 0\nfor i in range(n):\n    if s[i] == '(':\n        p += 1\n    else:\n        if p == 0:\n            left += 1\n        else:\n            p -= 1\nright = p\nres = \"\"\nfor i in range(left):\n    res += '('\nres += s\nfor i in range(right):\n    res += ')'\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12937": {"id": 12937, "code": "X = 6\nif  X < 9 and X > 1 and X % 2 == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "6266": {"id": 6266, "code": "import bisect\nfrom itertools import accumulate\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nD = [0]*(n+1)\nfor i in range(n):\n    D[i+1] = n-bisect.bisect_right(C,B[i])\nD = tuple(accumulate(D))\nans = 0\nfor i in range(n):\n    j = bisect.bisect_right(B,A[i])\n    ans += D[-1]-D[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13132": {"id": 13132, "code": "X = \"5\"\nif X in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "18712": {"id": 18712, "code": "import math\nH = 3\nW = 7\nN = 10\nn = max(H,W)\nprint(math.ceil(N/n))", "coverage": [">", ">", ">", ">", ">", ">"]}, "1451": {"id": 1451, "code": "N = 112\nfor i in range(N, 1000):\n    if str(i)[0] == str(i)[1] == str(i)[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "12325": {"id": 12325, "code": "s = \"atcoder\"\nn=len(s)\ns1=s[0:n//2]\ns2=s[n//2+1:n]\nif s==s[::-1]and s1==s1[::-1] and s2==s2[::-1]: print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "10820": {"id": 10820, "code": "S = \"akasaka\"\nl = len(S)\nT = ''.join(list(reversed(S)))\na = S[:(l-1)//2]\na1 = ''.join(list(reversed(a)))\nb = S[(l+3)//2-1:l]\nb1 = ''.join(list(reversed(b)))\nif S == T:\n    if a == a1 and b == b1:\n        print('Yes')\n    if a != a1 or b != b1:\n        print('No')\nif S != T:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!"]}, "16273": {"id": 16273, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm=0\nma=0\nfor i in a:\n  t=min(i,a[-1]-i)\n  if m<t:\n    m=t\n    ma=i\nprint(a[-1],ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10854": {"id": 10854, "code": "s = \"akasaka\"\nn=int((len(s)-1)/2)\nc=0\nfor i in range(n):\n  if s[i] == s[i+n+1]:\n    c+=1\nif c==n:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "17553": {"id": 17553, "code": "s = \"1905\"\nflag1=0\nflag2=0\nif 0<int(s[:2])<13:\n  flag1=1\nelse:\n  pass\nif 0<int(s[2:])<13:\n  flag2=1\nelse:\n  pass\nif flag1==0 and flag2==0:\n  print(\"NA\")\nelif flag1==1 and flag2==0:\n  print(\"MMYY\")\nelif flag1==0 and flag2==1:\n  print(\"YYMM\")\nelse:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9523": {"id": 9523, "code": "s = \"2017/01/31\"\nprint(s.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "19330": {"id": 19330, "code": "import math\nn = 10\ngcd = math.gcd(2, n)\nlcm = int(2*n/gcd)\nans = lcm\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4178": {"id": 4178, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt1=h1*60+m1\nt2=h2*60+m2\nprint(max(t2-t1-k,0))", "coverage": [">", ">", ">", ">"]}, "18343": {"id": 18343, "code": "H = 2\nW = 100\nN = 200\ncnt=0\nM=0\nif H>W:\n    selection=H\nelse:\n    selection=W\nwhile M<N:\n    cnt+=1\n    M+=selection\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "4017": {"id": 4017, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nl=(60*c+d)-(60*a+b)\nans=l-e\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13491": {"id": 13491, "code": "s = \"haiku,atcoder,tasks\"\nprint (s[:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "7605": {"id": 7605, "code": "H = 10;N = 3\nA = [4, 5, 6]\nSUM = 0\nfor i in range(len(A)):\n    SUM = SUM + A[i]\nif SUM >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "1558": {"id": 1558, "code": "N = 111\nif N%111==0:\n    print(N)\nelse:\n    print((N//111+1)*111)", "coverage": [">", ">", ">", "!", "!"]}, "10845": {"id": 10845, "code": "S = \"akasaka\"\nN = len(S)\nflag = 0\nif S==S[::-1]:\n    x = S[:N//2]\n    if x==x[::-1]:\n        flag = 1\nif flag==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "17178": {"id": 17178, "code": "ab = \"D D\"\nif ab.count(\"D\")==1:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", "!", "!", ">"]}, "13813": {"id": 13813, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nn = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\nup = None\nprev = None\nfor v in a:\n    if prev == v:\n        continue\n    if prev is not None:\n        if up is None:\n            up = (prev <= v)\n        else:\n            if (prev <= v) != up:\n                ans += 1\n                up = None\n    prev = v\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "963": {"id": 963, "code": "n = 112\nif n%111==0:\n    print(n)\nelse:\n    x=n//111\n    print((x+1)*111)", "coverage": [">", ">", "!", "!", ">", ">"]}, "17162": {"id": 17162, "code": "a = \"D\";b = \"H\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "14008": {"id": 14008, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\np = m = 0\nc = A[0]\nfor i in A[1:]:\n    if i > c:\n        p = 1\n    elif i < c:\n        m = 1\n    if p == 1 and m == 1:\n        p = m = 0\n        ans += 1\n    c = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6410": {"id": 6410, "code": "import sys\nfrom bisect import bisect_left\ninput = sys.stdin.buffer.readline\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ncumsum = [0]\nfor i in range(len(B)):\n    b = B[i]\n    a_idx = bisect_left(A, b)\n    cumsum.append(cumsum[i] + a_idx)\nans = 0\nfor i in range(len(C)):\n    c = C[i]\n    b_idx = bisect_left(B, c)\n    ans += cumsum[b_idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17206": {"id": 17206, "code": "a = \"D H\"\nprint([\"D\",\"H\"][a[0]==a[2]])", "coverage": [">", ">"]}, "10237": {"id": 10237, "code": "N = 8\nS = \"))))((((\"\nd = [0]*(N+1) \nfor i in range(1, N+1):\n    d[i] = S[:i].count(\"(\") - S[:i].count(\")\")\nx = min(d)\nif x == 0 and d[N] == 0:\n    print(S)\n    exit()\nans = \"(\"*abs(x) + S + \")\"*(d[N]+abs(x))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3442": {"id": 3442, "code": "a = 12;b = 4\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18755": {"id": 18755, "code": "import math\nh = 14\nw = 12\nn = 112\nl = max(h, w)\nprint(math.ceil(n / l))", "coverage": [">", ">", ">", ">", ">", ">"]}, "7170": {"id": 7170, "code": "H = 20;N = 3\nA = [4, 5, 6]\nAll = sum(A)\nif H - All > 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "1210": {"id": 1210, "code": "n = 750\nm = list(str(n))\nif m[0] == m[1] == m[2]:\n    print(n)\nelse:\n    for i in range(1, 10):\n        if n<=i*111:\n            print(i*111)\n            break", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12726": {"id": 12726, "code": "N = 5\ngre = [3,5,7]\nif (N in gre):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "5736": {"id": 5736, "code": "N = 100\nprint(N // 2 + 1 if N % 2 else N // 2)", "coverage": [">", ">"]}, "15924": {"id": 15924, "code": "A = 20;B = 15\nif A - 2 * B >= 0:\n  print(A - 2 * B)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "11443": {"id": 11443, "code": "day = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint((-day.index(\"SUN\")-1)%7+1)", "coverage": [">", ">"]}, "1275": {"id": 1275, "code": "n = 750\na = (n-1)//111+1\nprint(a*100+a*10+a)", "coverage": [">", ">", ">"]}, "1388": {"id": 1388, "code": "n = 750\nstr_n = str(n)\nketa = len(str_n)\nsuji = [str(i) for i in range(10)]\nans = 0\nfor i in range(int(str_n[0]),10):\n    tmp = ''\n    for j in range(keta):\n        tmp += suji[i]\n    if int(tmp)>=n:\n        ans = int(tmp)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17045": {"id": 17045, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    print(b)\nelse:\n    if b == 'D':\n        print('H')\n    else:\n        print('D')", "coverage": [">", ">", "!", "!", ">", ">", "!", "!"]}, "18793": {"id": 18793, "code": "h = 3\nw = 7\nn = 10\ncnt=0\nans=0\nwhile cnt<n:\n    if h>=w:\n        cnt+=h\n    elif h<w:\n        cnt+=w\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "16837": {"id": 16837, "code": "A = \"D\";B = \"H\"\nif A==\"H\":\n   print(B)\nelse:\n   if B == \"H\":\n      print(\"D\")\n   else:\n      print(\"H\")", "coverage": [">", ">", "!", "!", ">", ">", "!", "!"]}, "14764": {"id": 14764, "code": "n = 3;p = 0\nA = [1, 1, 1]\ncnt = 0\nfor a in A:\n    if a%2==0: cnt += 1\nif n == cnt:\n    if p == 0: ans = 2**n\n    else: ans = 0\nelse: ans = 2**(n-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3989": {"id": 3989, "code": "x = 64145;y = 123;z = 456\nif x < y+z*2:\n    print(0)\nelse:\n    ans = (x-(y+z*2))//(y+z)+1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "11888": {"id": 11888, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(0 if m1==m2 else 1)", "coverage": [">", ">", ">"]}, "16154": {"id": 16154, "code": "n = 5\nA = [6, 9, 4, 2, 11]\nMaxA = max(A)\nA = sorted(A,key=lambda x: abs(MaxA/2-x))\nif A[0] == MaxA:\n  print(MaxA,A[1])\nelse:\n  print(MaxA,A[0])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12933": {"id": 12933, "code": "N = \"6\"\nb = N in [\"3\",\"5\",\"7\"]\nif b:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "13924": {"id": 13924, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nif n==1:\n    print(ans)\n    exit()\nc=0\nfor i in range(n):\n    if i!=n-1:\n        if c==1:\n            if a[i+1]<a[i]:\n                ans+=1\n                c=0\n                continue\n        elif c==2:\n            if a[i+1]>a[i]:\n                ans+=1\n                c=0\n                continue\n        if a[i+1]>a[i]:\n            c=1\n        elif a[i+1]<a[i]:\n            c=2\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "19102": {"id": 19102, "code": "N = 5\nif N%2==1:\n    print(0)\nelse:\n    ans = 0\n    l = []\n    N//=2\n    n = len(str(N))\n    while True:\n        a = N//5\n        ans += a\n        N = a\n        if a==0:\n            break\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "13418": {"id": 13418, "code": "s = \"happy,newyear,enjoy\"\ns = s.replace(\",\", \" \")\nprint(s)", "coverage": [">", ">", ">"]}, "7409": {"id": 7409, "code": "h = 210;a = 5\nm = [31, 41, 59, 26, 53]\nans='No'\nif h<=sum(m): ans='Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "12456": {"id": 12456, "code": "S = \"level\"\ns = list(map(str, S))\nN = len(s)\nt = 0\nfor i in range(int((N-1)/2)):\n    if s[i] != s[N-i-1]:\n        t += 1\n        break\nfor i in range(int((N-1)/4)):\n    if s[i] != s[int((N-1)/2) - i - 1]:\n        t += 1\n        break\nif t == 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5559": {"id": 5559, "code": "N = 100\nprint(int((N/2))+(N%2))", "coverage": [">", ">"]}, "15826": {"id": 15826, "code": "X = 64145;Y = 123;Z = 456\nif X < (2*Z + Y):\n    print(0)\nelse:\n    print(int((X-Z)/(Z+Y)))", "coverage": [">", ">", "!", "!", ">"]}, "7971": {"id": 7971, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif (N-1)%(K-1)==0:\n    out=(N-1)//(K-1)\nelse:\n    out=(N-1)//(K-1)+1\nprint(out)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3241": {"id": 3241, "code": "A = 20;B = 15\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "11959": {"id": 11959, "code": "a = ['11', '30']\nb = ['12', '1']\nprint(int(b[1]==\"1\"))", "coverage": [">", ">", ">"]}, "15103": {"id": 15103, "code": "n = 1;p = 1\na = [50]\na1 = []\na2 = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        a2.append(a[i])\n    else:\n        a1.append(a[i])\nif len(a2) == n:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!"]}, "4219": {"id": 4219, "code": "chr = ['10', '0', '12', '0', '120']\na = (int(chr[2]) - int(chr[0]))*60 + (int(chr[3]) - int(chr[1])) - int(chr[-1])\nprint(a)", "coverage": [">", ">", ">"]}, "7989": {"id": 7989, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nprint((n-1)//(k-1)+((n-1)%(k-1)>0))", "coverage": [">", ">", ">"]}, "10780": {"id": 10780, "code": "s = \"atcoder\"\nn=len(s)\np=n//2\nt=1\nfor i in range(p):\n    if s[i]==s[p-1-i]:\n        t=1\n    else:\n        t=0\n        break;\nx=1\nfor i in range(p):\n    if s[p+1+i]==s[n-1-i]:\n        x=1\n    else:\n       x=0\n       break\ny=1\nfor i in range(n):\n    if s[i]==s[n-1-i]:\n        y=1\n    else:\n       y=0\n       break\nif (t==1 and x==1 and y==1):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "7790": {"id": 7790, "code": "input_line = ['4', '3']\nnum_array = int(input_line[0])\nnum_equal = int(input_line[1])\ninput_line = \"2 3 1 4\"\nequalized = 1\ni = 0\nwhile equalized < num_array:\n    equalized += (num_equal - 1)\n    i += 1\nprint(str(i))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2969": {"id": 2969, "code": "s = \"1111111111\"\nanswer = 1000\nfor i in range(0,len(s)-2):\n\tif answer > abs(753 - int(s[i:i+3])):\n\t\tanswer = abs(753 - int(s[i:i+3]))\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3462": {"id": 3462, "code": "a = 20;b = 30\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "14264": {"id": 14264, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n <= 2:\n    print(1)\n    exit()\nf = 0\ncnt = 0\nif a[0] < a[1]:\n    f = 1\nelif a[0] > a[1]:\n    f = 2\ntmp = a[1]\nfor i in range(2,n):\n    if tmp < a[i]:\n        if f == 2:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 1\n    elif tmp > a[i]:\n        if f == 1:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 2\n    tmp = a[i]\ncnt += 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "845": {"id": 845, "code": "K = 2\na = 7\nflag = True\nfor i in range(K):\n    if a % K == 0:\n        print(i+1)\n        flag = False\n        break\n    a = (a * 10 + 7) % K\nif flag:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "11575": {"id": 11575, "code": "w=['SUN','MON','TUE','WED','THU','FRI','SAT']\nprint(7-w.index(\"SAT\"))", "coverage": [">", ">"]}, "12232": {"id": 12232, "code": "S = \"level\"\nS_list = list(S)\nN = len(S_list)\nno_flag = 0\nfor i in range(N//2):\n    if S_list[i] != S_list[N-i-1]:\n        no_flag = 1\nfor i in range(int((N-1)/2)//2):\n    if S_list[i] != S_list[(N-1)//2-i-1]:\n        no_flag = 1\nfor i in range((N-3)//2):\n    if S_list[(N+3)//2+i-1] != S_list[N-1-i]:\n        no_flag = 1\nif no_flag == 1:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2823": {"id": 2823, "code": "s = \"1111111111\"\nm = 100000\nfor i in range(len(s)-2):\n    a=(s[i:i+3])\n    m=min(abs(753-int(a)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9266": {"id": 9266, "code": "S = \"2017/01/07\"\nprint(S.replace('2017', '2018'))", "coverage": [">", ">"]}, "15665": {"id": 15665, "code": "X = 12;Y = 3;Z = 1\na = Y+Z\nX=X-Z\nres = X//a\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "5698": {"id": 5698, "code": "import math\nx = 5\nprint(math.ceil(x/2))", "coverage": [">", ">", ">"]}, "4173": {"id": 4173, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ns = -60*h1-m1+60*h2+m2\nprint(s-k)", "coverage": [">", ">", ">"]}, "4610": {"id": 4610, "code": "a = \"s\";b = ['m', 'i', 'l', 'e'];c = \"s\"\nprint(a,len(b),c,sep=\"\")", "coverage": [">", ">"]}, "685": {"id": 685, "code": "K = 2\nnow = 7\nfor i in range(K):\n    if now % K == 0:\n        print(i + 1)\n        exit(0)\n    now = (10 * now + 7) % K\nprint(\"-1\")", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "10351": {"id": 10351, "code": "import math\na = 1;b = 1;k = 1\ncnt=0\nfor i in range(math.gcd(a,b),0,-1):\n    if a%i==0 and b%i==0:\n        cnt+=1\n    if cnt==k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5491": {"id": 5491, "code": "N = 5\nif N&0b1:\n    ans=N//2+1\nelse:\n    ans=N//2\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3733": {"id": 3733, "code": "x = 100000;y = 1;z = 1\nx -= z\nif x >= 0:\n   print(x//(y+z))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3791": {"id": 3791, "code": "X = 12;Y = 3;Z = 1\nans = 0\nfor i in range(1, X):\n    if i*Y+(i+1)*Z <= X:\n        ans = i\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "10972": {"id": 10972, "code": "s = \"atcoder\"\nn = len(s)\nentire = s == s[::-1]\nleft = s[:int((n-1)/2)] == s[:int((n-1)/2)][::-1]\nright = s[int((n+3)/2-1):] == s[int((n+3)/2-1):][::-1]\nif entire and left and right:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13356": {"id": 13356, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint('%s %s %s'%(a,b,c))", "coverage": [">", ">"]}, "14495": {"id": 14495, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=0 \ncnt=0\nfor i in range(N-1):\n    if A[i+1]-A[i] >0:\n        if flag ==1:\n            continue\n        elif flag ==-1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =1\n    elif A[i+1]-A[i] <0:\n        if flag ==-1:\n            continue\n        elif flag ==1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =-1\n    elif A[i+1]-A[i] ==0:\n        if flag == 0:\n            flag = 0\n        elif flag ==1:\n            flag =1\n        elif flag ==-1:\n            flag =-1\nprint(cnt+1) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "3081": {"id": 3081, "code": "s = \"1111111111\"\nn=len(s)\nans=753\nfor i in range(n-2):\n  t=int(s[i]+s[i+1]+s[i+2])\n  ans=min(ans, abs(753-t))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15940": {"id": 15940, "code": "A = 20;B = 30\nprint(\"{}\".format(0 if (A - 2*B <= 0) else A - 2*B))", "coverage": [">", ">"]}, "18093": {"id": 18093, "code": "S = \"0112\"\nif 0<int(S[0]+S[1])<13: \n  if 0<int(S[2]+S[3])<13: \n    print('AMBIGUOUS')\n  else: \n    print('MMYY')\nelse: \n  if 0<int(S[2]+S[3])<13: \n    print('YYMM')\n  else: \n    print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "7648": {"id": 7648, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nfor i in range(n):\n    h -= a[i]\nprint(\"Yes\" if h <=0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "9375": {"id": 9375, "code": "y = \"2017\";m = \"01\";d = \"31\"\nprint('2018' + '/' + m + '/' + d)", "coverage": [">", ">"]}, "10466": {"id": 10466, "code": "a = 1;b = 1;k = 1\nans_list = []\nif a > b:\n    a, b = b, a\nfor i in range(a, 0, -1):\n    if a % i == 0 and b % i == 0:\n        ans_list.append(i)\n        if len(ans_list) == k:\n            print(i)\n            break", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "15470": {"id": 15470, "code": "x = 12;y = 3;z = 1\nans = 0\nwhile (y + z) * ans <= (x - z):\n    ans += 1\nprint(ans-1)", "coverage": [">", ">", ">", ">", ">"]}, "2282": {"id": 2282, "code": "N = 10;A = 7;B = 5\nX = min(A, B)\nY = max(0, A+B-N)\nprint(X, Y)", "coverage": [">", ">", ">", ">"]}, "5161": {"id": 5161, "code": "s = \"internationalization\"\nprint('%c%d%c'%(s[0],len(s)-2,s[-1]))", "coverage": [">", ">"]}, "5789": {"id": 5789, "code": "N = 2\nans = (N +1)//2\nprint(ans)", "coverage": [">", ">", ">"]}, "4330": {"id": 4330, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nx = 60*a + b\ny = 60*c + d\nprint(y-x-k);", "coverage": [">", ">", ">", ">"]}, "18875": {"id": 18875, "code": "N = 5\nif N%2:\n    print(0)\nelse:\n    ans = 0\n    N //= 2\n    while N:\n        N //= 5\n        ans += N\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "7604": {"id": 7604, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!"]}, "2571": {"id": 2571, "code": "n = map(int, \"4 9 0 8\".split())\nif [1, 4, 7, 9] == sorted(n):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "14310": {"id": 14310, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\nmono = 0\nfor i in range(1, n):\n  d = a[i] - a[i - 1]\n  if d * mono < 0:\n    cnt += 1\n    mono = 0\n  elif d != 0:\n    mono = d\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13581": {"id": 13581, "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\",\" \"))", "coverage": [">", ">"]}, "4066": {"id": 4066, "code": "HMK = [10, 0, 15, 0, 30]\nH1 = HMK[0]\nM1 = HMK[1]\nH2 = HMK[2]\nM2 = HMK[3]\nK = HMK[4]\nif H2 < H1:\n\tH2 += 24\nans = ((H2 - H1) * 60 + (M2 - M1)) - K\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "18867": {"id": 18867, "code": "n = 12\nk = 10\nans = 0\nwhile k <= n:\n    ans += n // k\n    k = k * 5\nprint(ans if n % 2 == 0 else 0)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10962": {"id": 10962, "code": "kai = \"atcoder\"\nnum = len(kai)\nans = 0\nn1 = int((num-1) / 2)\nfor i in range(n1):\n    if kai[i] != kai[-1*(i+1)]:\n        ans += 1\nl1 = kai[0:n1]\nfor i in range(len(l1)):\n    if l1[i] != l1[-1*(i+1)]:\n        ans += 1\nl2 = kai[n1+1:]\nfor i in range(len(l2)):\n    if l2[i] != l2[-1*(i+1)]:\n        ans += 1\nif ans == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1237": {"id": 1237, "code": "s = \"750\"\nans = 0\nif int(s[0]) >= int(s[1]) and int(s[0]) >= int(s[2]):\n    ans = int(s[0]) * 100 + int(s[0]) * 10 + int(s[0]) * 1\nelse:\n    ans = int(s[0]) * 100 + int(s[0]) * 10 + int(s[0]) * 1 + 111\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19432": {"id": 19432, "code": "N = 999999999\n[print(N) if N%2 == 0 else print(N*2)]  ", "coverage": [">", ">"]}, "7501": {"id": 7501, "code": "h = 10;n = 3\na = [4, 5, 6]\nres = \"No\"\nfor i in range(n):\n  h -= a[i]\n  if h <= 0:\n    res = \"Yes\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13078": {"id": 13078, "code": "x = \"5\"\nif x in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "1333": {"id": 1333, "code": "n_list = ['1', '1', '1']\nn=[int(i) for i in n_list]\nans=str(n[0]+1)*3\nif n[0]>n[1]:\n    ans=str(n[0])*3\nelif n[0]==n[1]:\n    if n[1]>=n[2]:\n        ans=str(n[0])*3\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3630": {"id": 3630, "code": "A = 20;B = 15\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "10375": {"id": 10375, "code": "a = 1;b = 1;k = 1\ni = 1\nl = []\nwhile i <= min(a,b):\n  if a%i == 0 and b%i == 0:\n    l.append(i)\n  i += 1\nprint(l[len(l)-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7062": {"id": 7062, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nfor i in range(n):\n    h=h-a[i]\nif h<=0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15906": {"id": 15906, "code": "A = 20;B = 15\nprint(A - 2 * B if A - 2 * B > 0 else 0)", "coverage": [">", ">"]}, "18186": {"id": 18186, "code": "s = \"0112\"\nif 12<int(s[:2]) or 0==int(s[:2]):\n    if 12>=int(s[2:])>=1:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif 1<=int(s[:2])<=12:\n    if 12>=int(s[2:])>=1:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "6752": {"id": 6752, "code": "attack = []\nh = 211;n = 5\na = ['31', '41', '59', '26', '53']\nfor move in a:\n    move = int(move)\n    attack.append(move)\nresult = h - sum(attack)\nif result <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18536": {"id": 18536, "code": "H = 3\nW = 7\nN = 10\nans = N // max(H, W)\nif N % max(H, W) > 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10284": {"id": 10284, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nx = 0\ny = 0\nfor i in range(n):\n    if s[i] == '(':\n        x += 1\n    if s[i] == ')':\n        if x >= 1:\n            x -= 1\n        else:\n            y += 1\nfor _ in range(x):\n    s.append(')')\nfor _ in range(y):\n    s.insert(0,'(')\nans = ''.join(s)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "10843": {"id": 10843, "code": "import sys\nS = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nreverse_S = S[::-1]\nif S==reverse_S:\n    for i in range(int(len(S)/2)):\n        if S[i]==S[int(len(S)/2)-i-1] and S[int(len(S)/2)+1+i]==S[len(S)-1-i]:\n            continue\n        else:\n            print(\"No\")\n            sys.exit()\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!"]}, "16840": {"id": 16840, "code": "a = \"D\";b = \"H\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n    print('H')\nelif (a == 'H' and b == 'D') or (a == 'D' and b == 'H'):\n    print('D')", "coverage": [">", ">", "!", ">", ">"]}, "4811": {"id": 4811, "code": "st_list = ['s', 'm', 'i', 'l', 'e', 's']\nprint(st_list[0]+str(len(st_list[1:-1]))+st_list[-1]) ", "coverage": [">", ">"]}, "16643": {"id": 16643, "code": "A = \"D\";B = \"D\"\nif A==B:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "17590": {"id": 17590, "code": "s = [0, 1, 1, 2]\nl = [0]*2\nl[0] = s[0]*10 + s[1]\nl[1] = s[2]*10 + s[3]\nF = False\nL = False\nif 0 < l[0] <= 12:\n  F = True\nif 0 < l[1] <= 12:\n  L = True\nif F == True and L == True:\n  print('AMBIGUOUS')\nelif F == True:\n  print('MMYY')\nelif L == True:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "15961": {"id": 15961, "code": "a = 20;b = 30\nc=0\nif a<=b:\n  print(0)\nelif a>b:\n  c=a-b*2\n  if c>0:\n    print(c)\n  elif c<=0:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "16943": {"id": 16943, "code": "a = \"D\";b = \"D\"\nprint('HD'[a!=b])", "coverage": [">", ">"]}, "662": {"id": 662, "code": "n = 2\nf=0\nfor i in range(n):\n  f=f*10+7\n  f%=n\n  if f==0:\n    print(i+1)\n    break\nelse:print(-1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7848": {"id": 7848, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nif n == k:\n    print(1)\n    exit()\nimport math\nprint(1 + math.ceil(((n - k) / (k-1))))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "8413": {"id": 8413, "code": "N = 5\nA_list = []\nA_list.append(list(map(int, \"3 2 2 4 1\".split())))\nA_list.append(list(map(int, \"1 2 2 2 1\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5249": {"id": 5249, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nS = \"smiles\"\nprint(S[0] + str(len(S) - 2) + S[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "242": {"id": 242, "code": "s = \"xyz\"\nK = 4\nans = ''\nfor i, c in enumerate(s):\n    dif = ord('z') - ord(c) + 1\n    dif %= 26\n    if i == len(s) - 1:\n        K %= 26\n        if ord(c) + K > ord('z'):\n            K -= 26\n        ans += chr(ord(c) + K)\n    elif dif <= K:\n        ans += 'a'\n        K -= dif\n    else:\n        ans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "16068": {"id": 16068, "code": "A = 20;B = 15\nif A-B*2<0:\n    print('0')\nelse:\n    print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "556": {"id": 556, "code": "s = \"codefestival\"\nk = 100\nn = len(s)\nans = []\nfor i in range(n):\n    if s[i] == \"a\":\n        ans.append(\"a\")\n    elif 123 - ord(s[i]) <= k:\n        ans.append(\"a\")\n        k -= 123 - ord(s[i])\n    else:\n        ans.append(s[i])\nk %= 26  \nans[-1] = chr((ord(ans[-1]) + k - 97) % 26 + 97)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "17737": {"id": 17737, "code": "from sys import exit\nS = \"0112\"\nif 0 < int(S[0:2]) < 13:\n    if 0 < int(S[2:]) < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 0 < int(S[2:]) < 13:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8252": {"id": 8252, "code": "N = 3;K = 3\nA = [1, 2, 3]\neq = 1\ncnt = int()\nwhile eq<N:\n    eq += (K-1)\n    cnt +=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2948": {"id": 2948, "code": "S = \"1111111111\"\nans = 100000\ni = 0\nwhile i < len(S) - 2:\n    x = int(str(S[i]) + str(S[i + 1]) + str(S[i + 2]))\n    ans = min(ans, abs(753 - x))\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16147": {"id": 16147, "code": "from bisect import bisect\nn = 2\na = [100, 0]\na.sort()\nai = a[-1]\nmid = ai / 2\ni = bisect(a, mid) - 1\nj = i + 1\nif j == n - 1:\n    j = i\nif abs(a[i] - mid) < abs(a[j] - mid):\n    aj = a[i]\nelse:\n    aj = a[j]\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3126": {"id": 3126, "code": "s = \"1234567876\"\ns_length=len(s)\ntarget=753\nans=753\nfor i in range(s_length-2):\n    comp=int(s[i:i+3])\n    ans=min(abs(target-comp),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2555": {"id": 2555, "code": "from sys import exit, stdin\nN = {1, 4, 9, 7}\nif N == set([1,9,7,4]):\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11619": {"id": 11619, "code": "s = \"SUN\"\nweek = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nans_dic = {k: v for k, v in zip(week, range(7, 0, -1))}\nprint(ans_dic[s])", "coverage": [">", ">", ">", ">"]}, "6583": {"id": 6583, "code": "from bisect import bisect_left, bisect_right\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans = 0\nfor i in range(n):\n    x = b[i]\n    l = bisect_left(a, x)\n    r = bisect_right(c, x)\n    ans += l * (n - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14838": {"id": 14838, "code": "N = 2;P = 0\nA = [1, 3]\ndp0 = 1\ndp1 = 0\nfor a in A:\n    if a & 1:\n        new0 = dp0 + dp1\n        new1 = new0\n    else:\n        new0 = dp0 * 2\n        new1 = dp1 * 2\n    dp0 = new0\n    dp1 = new1\nprint(dp1 if P & 1 else dp0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "17113": {"id": 17113, "code": "a = \"D\";b = \"H\"\nif a == \"H\" and b == \"H\" or a == \"D\" and b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "16540": {"id": 16540, "code": "a = \"D\";b = \"H\"\nif a=='H' and b=='H':print('H')\nelif a=='D' and b=='D':print('H')\nelse:print('D')", "coverage": [">", ">", ">", ">"]}, "8100": {"id": 8100, "code": "import math\ntotal = 0\nN = 3;M = 3\nM = M-1\nn_l = \"123\"\nA = n_l.find(\"1\")\nbefore = A\nafter = N-A-1\nwhile before > 0:\n    before-=M\n    total +=1\nif before < 0:\n    before = abs(before)\n    after -= before\nwhile after > 0:\n    after-=M\n    total +=1\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "10185": {"id": 10185, "code": "n = 6\ns = \")))())\"\nminv = 0\nscore = 0\nfor i in range(n):\n    if s[i] == '(':\n        score += 1\n    else:\n        score -= 1\n    minv = min(minv, score)\nans = \"\"\nfor i in range(0, -minv):\n    ans += \"(\"\nans += s\nfor i in range(0, score-minv):\n    ans += \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "9864": {"id": 9864, "code": "N = 6\nS = \")))())\";T = \")))())\"\nwhile \"()\" in S:\n  S = S.replace(\"()\",\"\")\nprint(\"(\"*S.count(\")\")+T+S.count(\"(\")*\")\")", "coverage": [">", ">", ">", ">", ">"]}, "851": {"id": 851, "code": "k = 101\nseven = 7\nans = -1\nfor i in range(1,k+1):\n    seven %= k\n    if seven  == 0:\n        ans = i\n        break\n    else:\n        seven = seven * 10 + 7\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "10652": {"id": 10652, "code": "a = 100;b = 50;k = 4\nprint([i for i in range(1, 1+min(a, b)) if a%i==0 and b%i==0][-k])", "coverage": [">", ">"]}, "10471": {"id": 10471, "code": "a = 1;b = 1;k = 1\ncd=[]\nfor i in range(1,max(a,b)+1):\n    if a%i ==0 and b%i ==0:\n        cd.append(i)\ncd = sorted(cd,reverse=True)\nprint(cd[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13064": {"id": 13064, "code": "a = \"5\"\nif int(a) == 3 or int(a) == 5 or int(a) == 7:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "10339": {"id": 10339, "code": "A = 1;B = 1;K = 1\ni_list = []\nfor i in range(1, A + 1):\n    if A % i == 0 and B % i == 0:\n        i_list.append(i)\nprint(i_list[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "7756": {"id": 7756, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 1 + (N - K) // (K - 1)\nif (N - K) % (K - 1) != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4406": {"id": 4406, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nsm = h2*60 + m2\ngm = h1*60 + m1\nans = sm - gm - k\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "582": {"id": 582, "code": "S = ['x', 'y', 'z']\nK = 4\nN=len(S)\nL=[]\nfor i in range(N):\n    L.append((26-(ord(S[i])-ord(\"a\")))%26)\nfor i in range(N):\n    if K>=L[i]:\n        S[i]=\"a\"\n        K-=L[i]\nif K>0:\n    S[-1]=chr(ord(\"a\")+((ord(S[-1])+K-ord(\"a\"))%26))\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "7263": {"id": 7263, "code": "H = 10;N = 3\nA_list = map(int, \"4 5 6\".split())\nprint(\"Yes\" if sum(A_list) >= H else \"        No   \")", "coverage": [">", ">", ">"]}, "4469": {"id": 4469, "code": "s = \"smiles\"\nprint(s[0],len(s[1:-1]),s[-1],sep='')", "coverage": [">", ">"]}, "16274": {"id": 16274, "code": "n = 2\na = [100, 0]\na.sort()\nm=0\nma=0\nfor i in a:\n  t=min(i,a[-1]-i)\n  if m<t:\n    m=t\n    ma=i\nprint(a[-1],ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2523": {"id": 2523, "code": "s = {1, 4, 9, 7}\nprint(\"YES\" if s=={1,7,9,4} else \"NO\")", "coverage": [">", ">"]}, "11436": {"id": 11436, "code": "s = \"SAT\"\nif(s == 'SUN'):\n    print(7)\nelif(s == 'MON'):\n    print(6)\nelif(s == 'TUE'):\n    print(5)\nelif(s == 'WED'):\n    print(4)\nelif(s == 'THU'):\n    print(3)\nelif(s == 'FRI'):\n    print(2)\nelif(s == 'SAT'):\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "14288": {"id": 14288, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N==1:\n    print(1)\n    exit()\nB=[A[i]-A[i-1] for i in range(1,N)]\nans=0\nflag=False\nfor i in range(N-1):\n    if B[i]!=0:\n        first=B[i]\n        flag=True\n    if flag:\n        break\nfor i in range(N-1):\n    if first*B[i]>=0:\n        pass\n    else:\n        ans+=1\n        j=i+1\n        while j<=N-2:\n            if B[j]!=0:\n                first=B[j]\n                break\n            else:\n                j+=1\nprint(ans+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17145": {"id": 17145, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "7076": {"id": 7076, "code": "MM = ['20', '3']\nH = int(MM[0])\nN = int(MM[1])\nAA = ['4', '5', '6']\ntotal = 0\nfor i in AA:\n  total += int(i)\nif total >= H:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9438": {"id": 9438, "code": "li = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nli[3] = '8'\nprint(*li, sep='')", "coverage": [">", ">", ">"]}, "4844": {"id": 4844, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nans = s[0] + str(len(s) - 2) + s[len(s) - 1]\nprint(ans)", "coverage": [">", ">", ">"]}, "16029": {"id": 16029, "code": "A = 20;B = 15\ncal = A - B * 2\nif cal >= 0:\n    print(cal)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18604": {"id": 18604, "code": "import math\nh = 2\nw = 100\nn = 200\nm = max(h,w)\nprint(math.ceil(n/m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "8382": {"id": 8382, "code": "n = 7\nla1 = [3, 3, 4, 5, 4, 5, 3]\nla2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12909": {"id": 12909, "code": "n = 6\nprint(\"YES\" if n in [3, 5, 7] else \"NO\")", "coverage": [">", ">"]}, "15687": {"id": 15687, "code": "import sys\ninput = sys.stdin.readline\nX = 64146;Y = 123;Z = 456\nans = 0\nX -= Z\nans += (X // (Y + Z))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4090": {"id": 4090, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nokiteiru = (h2*60+m2)-(h1*60+m1)\nprint(okiteiru - k)", "coverage": [">", ">", ">"]}, "17442": {"id": 17442, "code": "s = \"1905\"\nif s == '0000' or (int(s[:2]) >= 13 and int(s[-2:]) >= 13):\n    print('NA')\nelif 1 <= int(s[:2]) <= 12 and 1 <= int(s[-2:]) <= 12:\n    print('AMBIGUOUS')\nelif 1 <= int(s[:2]) <= 12:\n    print('MMYY')\nelif 1 <= int(s[-2:]) <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "6469": {"id": 6469, "code": "import bisect\na = 3\nb = [1, 1, 1]\nb.sort()\nc = [2, 2, 2]\nd = [3, 3, 3]\nd.sort()\ne = 0\nfor i in c:\n    e += bisect.bisect_left(b, i) * (a - bisect.bisect_right(d, i))\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18937": {"id": 18937, "code": "import math\nn = 5\nans = 0\nif n== 0:\n  print(0)\n  exit()\nm = math.floor(math.log(n,5))\nif n%2 == 1:\n  print(0)\nelse:\n  for j in range(1,m+1):\n    ans += n//((5**j)*2)\n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!"]}, "11246": {"id": 11246, "code": "S = \"SAT\"\nL = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\nans = 7 - L.index(S)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11842": {"id": 11842, "code": "MD1 = [11, 16]\nMD2 = [11, 17]\nif MD1[0] == MD2[0]:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "263": {"id": 263, "code": "s = \"codefestival\"\nk = 100\nsl=[]\nn=len(s)\nfor i in range(n):\n  if s[i]!='a':\n    if 26-(ord(s[i])-97)<=k:\n      sl.append('a')\n      k-=26-(ord(s[i])-97)\n    else:\n      sl.append(s[i])\n  else:\n    sl.append(s[i])\nif k>0:\n  if k%26!=0:\n    sl[n-1]=chr(ord(sl[n-1])+k%26)\nprint(''.join(sl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">"]}, "18044": {"id": 18044, "code": "s = 112\na=s//100\nb=s%100\nif 1<=a<=12 and 1<=b<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=a<=12 and (b>12 or b==0):\n  print(\"MMYY\")\nelif (a==0 or a>12) and 1<=b<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "18546": {"id": 18546, "code": "h = 14\nw = 12\nn = 112\ni=1\nwhile n > max(h,w)*i:\n    i += 1\nelse: print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17139": {"id": 17139, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    print('H' if b == 'H' else 'D')\nelse:\n    print('D' if b == 'H' else 'H')", "coverage": [">", ">", "!", "!", ">"]}, "1969": {"id": 1969, "code": "n = 10;a = 3;b = 5\nnmax = min(a, b)\nnmin = max(a + b - n, 0)\nprint(nmax, nmin, sep = \" \")", "coverage": [">", ">", ">", ">"]}, "19475": {"id": 19475, "code": "import math\nN = 999999999\nprint((2*N)//math.gcd(2,N))", "coverage": [">", ">", ">"]}, "13329": {"id": 13329, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nprint(\"haiku,atcoder,tasks\".replace(\",\", \" \"))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9145": {"id": 9145, "code": "s = \"2017/01/31\"\ns = s.replace(s[3], '8', 1)\nprint(s)", "coverage": [">", ">", ">"]}, "4881": {"id": 4881, "code": "s = \"xyz\"\nprint(s[0],len(s[1:-1]),s[-1],sep=\"\")", "coverage": [">", ">"]}, "5389": {"id": 5389, "code": "n = 2.51\nprint(int(round(n)))", "coverage": [">", ">"]}, "6092": {"id": 6092, "code": "N = 2\nif N % 2 == 0:\n  print(N//2)\nelse:\n  print(N//2 + 1)", "coverage": [">", ">", ">", "!", "!"]}, "13765": {"id": 13765, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(60 * (H2 - H1) + M2 - M1 - K)", "coverage": [">", ">"]}, "19155": {"id": 19155, "code": "n = 5\ncnt = 0\ni = 1\nx = 10\nif n % 2 == 1:\n  print(0)\nelse:\n  while x <= n:\n    cnt += n//x\n    x *= 5\n  print(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "17554": {"id": 17554, "code": "s = \"0112\"\nflag1=0\nflag2=0\nif 0<int(s[:2])<13:\n  flag1=1\nelse:\n  pass\nif 0<int(s[2:])<13:\n  flag2=1\nelse:\n  pass\nif flag1==0 and flag2==0:\n  print(\"NA\")\nelif flag1==1 and flag2==0:\n  print(\"MMYY\")\nelif flag1==0 and flag2==1:\n  print(\"YYMM\")\nelse:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "898": {"id": 898, "code": "k = 2\nmod = 7 % k\ncounter = 1\nmemo = 1\nmod_map = set()\nmod_map.add(mod)\nwhile mod != 0:\n    memo = ((memo % k) * (10 % k)) % k\n    mod = (mod + 7 * memo) % k\n    if mod not in mod_map:\n        mod_map.add(mod)\n    else:\n        counter = -1\n        break\n    counter += 1\n    if mod == 0:\n        break\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">"]}, "2699": {"id": 2699, "code": "s = {0, 9, 4, 8}\nif s==set([1,7,9,4]):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "4692": {"id": 4692, "code": "s = \"xyz\"\nprint(s[0] + str(len(s)-2) + s[-1])", "coverage": [">", ">"]}, "13290": {"id": 13290, "code": "s = \"haiku,atcoder,tasks\"\na = s[0:5]\nb = s[6:13]\nc = s[14:]\nprint(a, b, c)", "coverage": [">", ">", ">", ">", ">"]}, "17591": {"id": 17591, "code": "s = [1, 7, 0, 0]\nl = [0]*2\nl[0] = s[0]*10 + s[1]\nl[1] = s[2]*10 + s[3]\nF = False\nL = False\nif 0 < l[0] <= 12:\n  F = True\nif 0 < l[1] <= 12:\n  L = True\nif F == True and L == True:\n  print('AMBIGUOUS')\nelif F == True:\n  print('MMYY')\nelif L == True:\n  print('YYMM')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "9369": {"id": 9369, "code": "s = \"2017/01/31\"\nt = s.replace('7', '8', 1)\nprint(t)", "coverage": [">", ">", ">"]}, "1796": {"id": 1796, "code": "list = [10, 3, 5]\nprint(min(list),(list[1] + list[2]) - list[0] if (list[1] + list[2]) - list[0] > 0 else 0)", "coverage": [">", ">"]}, "6169": {"id": 6169, "code": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nc.sort()\nfrom bisect import bisect_left, bisect_right\nans = 0\nfor bi in b:\n    ans += bisect_left(a,bi) * (n-bisect_right(c,bi))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10469": {"id": 10469, "code": "a = 1;b = 1;k = 1\nn = []\nfor i in range(1, min(a, b) + 1):\n  if a % i == 0 and b % i == 0:\n    n.append(i)\nprint(n[::-1][k-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "17082": {"id": 17082, "code": "a = \"H\";b = \"H\"\nif a==\"H\":print(b)\nelif b==\"D\":print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", "!", "!"]}, "14392": {"id": 14392, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nc = 0\nwhile i < n:\n    if i == n - 1:\n        c += 1\n        break\n    if a[i] == a[i+1]:\n        i += 1\n    elif a[i] < a[i+1]:\n        while i < n - 1 and a[i] <= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\n    elif a[i] > a[i+1]:\n        while i < n - 1 and a[i] >= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "11982": {"id": 11982, "code": "D1 = 16\nD2 = 17\nprint(0 if D1 < D2 else 1)", "coverage": [">", ">", ">"]}, "1258": {"id": 1258, "code": "n = \"111\"\nwhile True:\n  if len(set(list(n))) == 1:\n    print(n)\n    break\n  n = str(int(n)+1)", "coverage": [">", ">", ">", ">", ">", "!"]}, "16828": {"id": 16828, "code": "arr = ['D', 'H']\narr = list(map(str,arr))\na = arr[0]\nb = arr[1]\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')\nelif a == 'H' and b == 'D':\n    print('D')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "10834": {"id": 10834, "code": "S = \"level\"\nN = len(S)\na = S[:N // 2]\nb = S[N // 2 + 1:]\nprint('Yes' if a == a[::-1] == b == b[::-1] else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "17274": {"id": 17274, "code": "a = \"H\";b = \"H\"\nif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "19519": {"id": 19519, "code": "n = 3\nfor i in range(1, 100000000, 1):\n    if(n*i % 2==0):\n        print(n*i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "16885": {"id": 16885, "code": "A = \"D\";B = \"H\"\nif A == \"H\":\n  if B == \"H\":\n    print(\"H\")\n  else:\n    print(\"D\")\nelif A == \"D\":\n  if B == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "18280": {"id": 18280, "code": "h = 2\nw = 100\nn = 200\nans=0\nwhile n>=1:\n  if h>w:\n    n-=h\n    w-=1\n    ans+=1\n  else:\n    n-=w\n    h-=1\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "11526": {"id": 11526, "code": "a = \"SUN\"\nif a == \"SUN\":\n    print(\"7\")\nelif a == \"MON\":\n    print(\"6\")\nelif a == \"TUE\":\n    print(\"5\")\nelif a == \"WED\":\n    print(\"4\")\nelif a == \"THU\":\n    print(\"3\")\nelif a == (\"FRI\"):\n    print(\"2\")\nelse:\n    print(\"1\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6021": {"id": 6021, "code": "N = \"100\"\nN=int(N)\nq1, mod = divmod(N,2)\nif mod == 0:\n    print(q1)\nelse:\n    print(q1 + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "19447": {"id": 19447, "code": "N = 3\nif N==1:\n    x = 2\nelif N%2==0:\n    x = N\nelse:\n    x = 2*N\nprint(x)", "coverage": [">", ">", "!", ">", "!", "!", ">", ">"]}, "16434": {"id": 16434, "code": "n = 2\na = [100, 0]\nm=max(a)\nr=0\nfor i in range(n):\n    if abs(m/2-a[i])<abs(m/2-r):\n        r=a[i]\nprint(m,r)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "12968": {"id": 12968, "code": "n = \"5\"\nif (n == '3') or (n == '5') or (n == '7'):\n print(\"YES\")\nelse:\n print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "12600": {"id": 12600, "code": "A = 1;B = 1;K = 1\nk=0\nn=min(A,B)\nwhile 1:\n  if A%n==0 and B%n==0:\n    k+=1\n  if K==k:\n    break\n  n-=1\nprint (n)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14273": {"id": 14273, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\na = 0\nS = 0\nnum = 1\nfor i in range(1,N):\n    if A[i] - A[i - 1] == 0:\n        a = 0\n    elif A[i] - A[i - 1] > 0:\n        a = 1\n    else:\n        a = 2\n    if S == 0:\n        S = a\n    elif (S != a) and (a != 0):\n        num += 1\n        S = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "1561": {"id": 1561, "code": "N = 111\nfor i in range(10):\n    if int(str(i)*3) < N <= int(str(i+1)*3):\n        break\nprint(str(i+1)*3)", "coverage": [">", ">", ">", ">", ">"]}, "4933": {"id": 4933, "code": "list_S = \"internationalization\"\nnum = len(list_S)-2\nnum = str(num)\nf = list_S[0]\nl = list_S[-1]\nans = [f, num, l]\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4026": {"id": 4026, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nans2=h2*60+m2\nans1=h1*60+m1\nprint(ans2-ans1-k)", "coverage": [">", ">", ">", ">"]}, "10324": {"id": 10324, "code": "a = 1;b = 1;k = 1\nm = min(a,b)\nl = set()\nfor i in range(1,m+1):\n  if a%i == 0 and b%i == 0:\n    l.add(i)\nprint(sorted(list(l))[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8724": {"id": 8724, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nsumA = [0]*(N+1)\nsumB = [0]*(N+1)\nfor i in range(N):\n    sumA[i+1] = A[i] + sumA[i]\n    sumB[i+1] = B[i] + sumB[i]\nncandy = 0\nfor i in range(1, N+1):\n    nsum = sumA[i] + (sumB[N] - sumB[i-1])\n    if ncandy < nsum:\n        ncandy = nsum\nprint(ncandy)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4973": {"id": 4973, "code": "import sys\ns = ['s', 'm', 'i', 'l', 'e', 's']\ni = s.pop(0)\nf = s.pop(-1)\nprint(i+str(len(s))+f)", "coverage": [">", ">", ">", ">", ">"]}, "13699": {"id": 13699, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndeltaH = h2 - h1\ndeltaM = m2 - m1\ndelta = deltaH * 60 + deltaM - k\nprint(delta)", "coverage": [">", ">", ">", ">", ">"]}, "4264": {"id": 4264, "code": "if __name__ == '__main__':\n    a = [10, 0, 12, 0, 120]\n    print(a[2]*60 + a[3] -a[0]*60 - a[1] -a[4] )", "coverage": [">", ">", ">"]}, "8309": {"id": 8309, "code": "import math\nn = 3;k = 3\ns = [1, 2, 3]\ns.sort()\ns.remove(s[0])\nans = math.ceil(len(s)/(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9656": {"id": 9656, "code": "N = 3\nS = ['(', ')', ')']\nS_orig=list(S)\nwhile True:\n  update=False\n  remove_flg=[False]*len(S)\n  for i in range(1,len(S)):\n    if S[i-1]=='(' and S[i]==')':\n      remove_flg[i-1]=remove_flg[i]=True\n      update=True      \n  if not update:\n    break\n  new_S=[]\n  for i in range(len(S)):\n    if not remove_flg[i]:\n      new_S.append(S[i])      \n  S=new_S\ncnt_l=cnt_r=0\nfor i in range(len(S)):\n  if S[i]=='(':\n    break\n  else:\n    cnt_l+=1\nfor i in reversed(range(len(S))):\n  if S[i]==')':\n    break\n  else:\n    cnt_r+=1\nanswer_S=['(']*cnt_l+S_orig+[')']*cnt_r\nprint(\"\".join(answer_S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5524": {"id": 5524, "code": "n = 5\nnum = int(n / 2)\nif n % 2 == 1:\n  num += 1\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "17806": {"id": 17806, "code": "S = 1700\na = int(S/100 - (S%100)/100)\nb = int(S%100)\nif( 0<a<13 and 0<b<13 ):\n  print(\"AMBIGUOUS\")\nif( (0<a<13 and 12<b<100) or (0<a<13 and b==0) ):\n  print(\"MMYY\")\nif( (12<a<100 and 0<b<13) or (a==0 and 0<b<13) ):\n  print(\"YYMM\")\nif( 12<a<100 and 12<b<100 ):\n  print(\"NA\")\nif( a==0 and 12<b<100 ):\n  print(\"NA\")\nif( 12<a<100 and b==0 ):\n  print(\"NA\")\nif( a==0 and b==0 ):\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!"]}, "17921": {"id": 17921, "code": "S = \"1700\"\nif int(S[:2]) == 0 and 0 < int(S[2:]) <= 12:\n  print(\"YYMM\")\nelif int(S[2:]) == 0 and 0 < int(S[:2]) <= 12:\n  print(\"MMYY\")\nelif int(S[:2]) == 0 or int(S[2:]) == 0 or (int(S[:2]) > 12 and int(S[2:]) > 12):\n  print(\"NA\")\nelif int(S[:2]) > 12 and int(S[2:]) <= 12:\n  print(\"YYMM\")\nelif int(S[:2]) <= 12 and int(S[2:]) > 12:\n  print(\"MMYY\")\nelse:\n  print(\"AMBIGUOUS\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "18080": {"id": 18080, "code": "s = \"0112\"\nans = {(False, False): 'NA', (False, True): 'YYMM', (True, False): 'MMYY', (True, True): 'AMBIGUOUS'}\nprint(ans[1 <= int(s[:2]) <= 12, 1 <= int(s[2:]) <= 12])", "coverage": [">", ">", ">"]}, "15672": {"id": 15672, "code": "import math\nX = 64146;Y = 123;Z = 456\nX -= Z\nprint(math.floor(X/(Y+Z)))", "coverage": [">", ">", ">", ">"]}, "11817": {"id": 11817, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(int(m1 + 1 == m2 and d2 == 1))", "coverage": [">", ">", ">"]}, "14221": {"id": 14221, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nflag = None\nup = False\ndown = False\nans = 1\nbase = A[0]\nfor i in range(1, n):\n    if base < A[i]:\n        up = True\n        base = A[i]\n    elif base > A[i]:\n        down = True\n    if (up == True) and (down == True):\n        up = False\n        down = False\n        ans += 1\n    base = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14422": {"id": 14422, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstatus = 0 \ncnt = 1\nfor i in range(1,N):\n    if A[i-1] < A[i]: \n        if status == 0 or status == 1:\n            status = 1\n        else:\n            status = 0\n            cnt += 1\n    elif A[i-1] > A[i]:\n        if status == 0 or status == 2:\n            status = 2\n        else:\n            status = 0\n            cnt += 1\n    else:\n        continue\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "12721": {"id": 12721, "code": "X = \"6\"\nif X in \"357\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "16307": {"id": 16307, "code": "n = 5\nlst = [2, 4, 6, 9, 11]\nm=lst[-1]/2\nanslst=[]\nfor i in range(n-1):\n    anslst.append([abs(m-lst[i]),lst[i]])\nanslst.sort()\nprint(int(m*2),anslst[0][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6731": {"id": 6731, "code": "from sys import exit\nh = 20;n = 3\na = [4, 5, 6]\nfor i in range(n):\n    h -= a[i]\n    if h <= 0:\n        print(\"Yes\")\n        exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6029": {"id": 6029, "code": "n = 2\ndiv = -(-n // 2)\nprint(div)", "coverage": [">", ">", ">"]}, "8822": {"id": 8822, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "1309": {"id": 1309, "code": "n = \"112\"\nans_1 = 0\nans_2 = 0\nx = int(n[0])\nfor i in range(len(n)):\n    ans_1 += x * 10**i\n    ans_2 += (x+1)*10**i\nif ans_1 >= int(n):\n    print(ans_1)\nelse:\n    print(ans_2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14229": {"id": 14229, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nuf,df = True,True\nx = a[0]\nfor ai in a:\n    if x > ai:\n        uf = False\n    if x < ai:\n        df = False\n    if (uf or df) is False:\n        ans += 1\n        uf,df, = True,True\n    x = ai\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6725": {"id": 6725, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nsuma = sum(a)\nprint('Yes' if h - suma <= 0 else 'No')", "coverage": [">", ">", ">", ">"]}, "11778": {"id": 11778, "code": "n = 11;m = 16\nn2 = 11;m2 = 17\nif n2 != n:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "543": {"id": 543, "code": "s = ['a']\nk = 25\nans = []\nfor alf in s:\n    if alf == 'a':\n        ans.append('a')\n    else:\n        if 123 - ord(alf) <= k:\n            k -= 123 - ord(alf)\n            ans.append('a')\n        else:\n            ans.append(alf)\nif 0 < k:\n    amari = (ord(ans[-1])-97+k)%26\n    ans[-1] = chr(amari+97)\nprint(''.join(map(str,ans)))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "4451": {"id": 4451, "code": "n = \"smiles\"\nm = len(n)\nprint('{}{}{}'.format(n[0],m-2,n[-1]))", "coverage": [">", ">", ">"]}, "12120": {"id": 12120, "code": "in1 = ['11', '30']\nin2 = ['12', '1']\nif int(in1[0])==int(in2[0]):\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "149": {"id": 149, "code": "s = \"codefestival\"\nl=len(s)\nk = 100\nz=''\nfor i in range(l):\n  t=123-ord(s[i])\n  if s[i]=='a':\n    z+='a'\n  elif t<=k:\n    z+='a'\n    k-=t\n  else:\n    z+=s[i]\nv=ord(z[l-1])-97+k\nz=z[:l-1]+chr(v%26+97)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "17331": {"id": 17331, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport collections\na = \"H\";b = \"H\"\nif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" and b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "6891": {"id": 6891, "code": "H = 10;N = 3\nA = [6, 5, 4]\nprint(\"Yes\") if H - sum(A) <= 0 else print(\"No\")", "coverage": [">", ">", ">"]}, "7759": {"id": 7759, "code": "NK = [8, 3]\nno = [7, 3, 1, 8, 4, 6, 2, 5]\nzan = NK[0]\ncounter = 0\nwhile(NK[1] < zan):\n    zan -= NK[1] - 1\n    counter += 1\nprint(counter + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7995": {"id": 7995, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nN=N-1\nK=K-1\nif N==K:\n    print(1)\n    exit()\nif N%K==0:\n    print(N//K)\nelse:\n    print(N//K+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "1845": {"id": 1845, "code": "n = 100;a = 100;b = 100\nif n>=(a+b):\n    ans1=min(a,b)\n    ans2=0\nelse:\n    ans1=min(a,b)\n    ans2=(a+b)-n\nprint(ans1,ans2)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "15908": {"id": 15908, "code": "a = 12;b = 4\nc = a - 2*b\nif c>0:\n    print(c)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "10090": {"id": 10090, "code": "import sys\nreadline = sys.stdin.readline\nN = 8\nS = \"))))((((\"\nopen = 0\na = 0\nfor i in range(len(S)):\n  if S[i] == \"(\":\n    open += 1\n  else:\n    if open == 0:\n      a += 1\n    else:\n      open -= 1\nprint(a * \"(\" + S + \")\" * open)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "11935": {"id": 11935, "code": "day0 = 30\nday1 = 1\nif day0 > day1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "18595": {"id": 18595, "code": "h = 2\nw = 100\nn = 200\ns = max(h,w)\nprint((n+s-1)//s)", "coverage": [">", ">", ">", ">", ">"]}, "8442": {"id": 8442, "code": "N = 1\narray1 = [2]\narray2 = [3]\ncount = [0 for i in range(N)] \nfor k in range(N): \n    i = 0\n    j = k\n    while i <= k:\n        count[k] = count[k] + array1[i] \n        i+=1            \n        while j <= N-1:\n            count[k] = count[k] + array2[j]\n            j+=1\ncount.sort(reverse = True)\nprint(count[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14073": {"id": 14073, "code": "n = 7\na_s = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = 0\nans = 1\ntmp = 0\nfor i in range(n):\n    if i == 0:\n        continue\n    elif a_s[i] > a_s[i-1]:\n        if flag == -1:\n            ans += 1\n            flag = 0\n        else:\n            flag = 1\n    elif a_s[i] < a_s[i-1]:\n        if flag == 1:\n            ans += 1\n            flag = 0\n        else:\n            flag = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14115": {"id": 14115, "code": "inc = False\ndec = False\nval = 0\nans = 1\nn = 6\na = [1, 2, 3, 2, 2, 1]\nfor i in range(1, n):\n    if inc:\n        if a[i-1] > a[i]:\n            ans += 1\n            inc = False\n    elif dec:\n        if a[i-1] < a[i]:\n            ans+=1\n            dec =False\n    else:\n        if a[i-1] < a[i]:\n            inc = True\n        elif a[i-1] > a[i]:\n            dec = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "17994": {"id": 17994, "code": "s = \"1905\"\nif (int(s[:2]) == 0 or int(s[:2]) > 12)&(0 < int(s[2:]) <= 12):\n    print(\"YYMM\")\nelif (0 < int(s[:2]) <= 12)&(int(s[2:]) == 0 or int(s[2:]) > 12):\n    print(\"MMYY\")\nelif (0 < int(s[:2]) <= 12)&(0 < int(s[2:]) <= 12):\n    print(\"AMBIGUOUS\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "14097": {"id": 14097, "code": "n = 6\nL = [1, 2, 3, 2, 2, 1]\ncnt = 0\nud = 0\nch = 1\nfor i in range(n-1):\n    if L[i] < L[i+1] and ud == -1 and ch == 0:\n        ch = 1\n        ud = 1\n        cnt +=1\n    elif L[i] < L[i+1] and ch ==1:\n        ch = 0\n        ud = 1\n    elif L[i] > L[i+1] and ud == 1 and ch == 0:\n        ch = 1\n        ud= -1\n        cnt +=1\n    elif L[i] > L[i+1] and ch == 1:\n        ch = 0\n        ud = -1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8249": {"id": 8249, "code": "n = 3;k = 3\nlst = [1, 2, 3]\nidx = lst.index(1)\nk -= 1\na = (len(lst[:idx]) + k - 1) // k\nb = (len(lst[idx + 1:]) + k - 1) // k\nc = ((n - 1) + k - 1) // k\nprint(min(c, a + b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9291": {"id": 9291, "code": "s = \"2017/01/31\"\ns = list(s)\ns[3] = '8'\nprint(*s, sep=\"\")", "coverage": [">", ">", ">", ">"]}, "19061": {"id": 19061, "code": "N = 5\nif N % 2 == 1:\n    print(0)\nelse:\n    n = 0\n    i = 1\n    while True:\n        if N < 2*5**i:\n            break\n        n += (N // 5**i // 2)\n        i += 1\n    print(n)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "16284": {"id": 16284, "code": "n = 2\nl = [0, 100]\nans=l[0]\nfor i in range(n-1):\n  if abs(l[-1]/2-ans)>abs(l[-1]/2-l[i]):\n    ans=l[i]\nprint(l[-1],ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "14968": {"id": 14968, "code": "a = 2;b = 0\nc = [1, 1]\nodd = sum(c)\nval = 0\nif odd:\n    val = 2**(a-1)\nelse:\n    val = 2**a*(1-b)\nprint(val)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8383": {"id": 8383, "code": "n = 1\nla1 = [2]\nla2 = [3]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13681": {"id": 13681, "code": "if __name__ == \"__main__\":\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print((h2-h1)*60+m2-m1-k)", "coverage": [">", ">", ">"]}, "11938": {"id": 11938, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 + 1 == m2 and d2 == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "16879": {"id": 16879, "code": "a = \"D\";b = \"H\"\nif a!=b:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", "!", "!"]}, "8543": {"id": 8543, "code": "n = 1\na1 = [2]\na2 = [3]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">"]}, "11637": {"id": 11637, "code": "a = \"SUN\"\nmy_list = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nif a == \"SUN\":\n    print(7)\nfor i in range(0, (len(my_list)-1)):\n    if a == my_list[i]:\n        print(6-i)", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "17926": {"id": 17926, "code": "S = 112\nb=S%100\na=S//100\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12:\n    print('MMYY')\nelif 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "13717": {"id": 13717, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(max(H2*60 + M2 - H1*60 - M1 - K, 0))", "coverage": [">", ">"]}, "9990": {"id": 9990, "code": "N = 8\nS = \"))))((((\"\nwhile True:\n    lv = 0\n    lmin = len(S)\n    for i in range(len(S)):\n        if S[i]==\"(\":\n            lv += 1\n        else:\n            lv -= 1\n        lmin = min(lmin,lv)\n    if lmin<0:\n        S = \"(\"*(-lmin)+S\n    else:break\nlv = 0\nfor i in range(len(S)):\n    if S[i]==\"(\":\n        lv += 1\n    else:\n        lv -= 1\nif lv>0:\n    S = S+\")\"*lv\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14134": {"id": 14134, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N<=2:\n    print(1)\n    exit()\nnow=0\nans=1\nfor i in range(1,N):\n    if i==1:\n        if A[i]-A[i-1]==0:\n            now=0\n        else:\n            now=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if now>=1:\n            plus=True\n        elif now==0:\n            plus=-1\n        else:\n            plus=False\n    else:\n        if A[i]-A[i-1]==0:\n            nex=0\n        else:\n            nex=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if plus==-1:\n            if nex>=1:\n                plus=True\n            elif nex<0:\n                plus=False\n        elif plus:\n            if nex<0:\n                plus=-1\n                ans+=1\n        else:\n            if nex>0:\n                plus=-1\n                ans+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "12823": {"id": 12823, "code": "x = 6\nprint(\"YES\" if x == 7 or x == 5 or x == 3 else \"NO\")", "coverage": [">", ">"]}, "66": {"id": 66, "code": "s = \"xyz\"\nK = 4\nrlt = ''\nfor i in range(len(s)-1):\n  c = (26-ord(s[i])+ord('a'))%26\n  if K >= c:\n    rlt += 'a'\n    K -= c\n  else:\n    rlt += s[i]\nrlt += chr((K + ord(s[-1]) - ord('a'))%26 + ord('a'))\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6867": {"id": 6867, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\ntotal = sum(A)\nr = 'Yes' if H <= total else 'No'\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "8343": {"id": 8343, "code": "n = 1\nA = [[2], [3]]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(A[0][:i + 1]) + sum(A[1][i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11661": {"id": 11661, "code": "li = [\"SUN\", \"MON\", \"TUE\", 'WED', \"THU\", \"FRI\", \"SAT\"]\ns = \"SUN\"\nprint(7-li.index(s))", "coverage": [">", ">", ">"]}, "9773": {"id": 9773, "code": "S = \")))())\";l = \"(\";r = \")\"\nt=S\nwhile t.count(l+r):\n t=t.replace(l+r,'')\nprint(l*t.count(r)+S+r*t.count(l))", "coverage": [">", ">", ">", ">", ">"]}, "8863": {"id": 8863, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "2151": {"id": 2151, "code": "N = 100;A = 100;B = 100\nans_max = min(A, B)\nans_min = max(-(N - A - B), 0)\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">"]}, "1104": {"id": 1104, "code": "n = 112\nl = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nfor i in l:\n    if n<=i:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "11485": {"id": 11485, "code": "s = \"SUN\"\nweek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ntoday = week.index(s)\na = 7 - today\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "17077": {"id": 17077, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "6900": {"id": 6900, "code": "H = 20;N = 3\nA = [4, 5, 6]\nA.sort()\nA = A[:N]\ns = sum(A)\nans = 'No'\nif s >= H:\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13289": {"id": 13289, "code": "s = \"happy,newyear,enjoy\"\na = s[0:5]\nb = s[6:13]\nc = s[14:]\nprint(a, b, c)", "coverage": [">", ">", ">", ">", ">"]}, "1134": {"id": 1134, "code": "N = 111\nif N<=111:\n    print(111)\nelif 112<=N and N<=222:\n    print(222)\nelif 223<=N and N<=333:\n    print(333)\nelif 334<=N and N<=444:\n    print(444)\nelif 445<=N and N<=555:\n    print(555)\nelif 556<=N and N<=666:\n    print(666)\nelif 667<=N and N<=777:\n    print(777)\nelif 778<=N and N<=888:\n    print(888)\nelif 889<=N and N<=999:\n    print(999)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6668": {"id": 6668, "code": "H = 20;N = 3\nA_ls = map(int, \"4 5 6\".split(' '))\nif sum(A_ls) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "18630": {"id": 18630, "code": "x = 14\ny = 12\nz=max(x,y)\nprint(-int(\"112\")//z*-1)", "coverage": [">", ">", ">", ">"]}, "17032": {"id": 17032, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    if b == \"D\":\n        ans = \"D\"\n    else:\n        ans = \"H\"\nelse:\n    if b == \"D\":\n        ans = \"H\"\n    else:\n        ans = \"D\"\nprint(ans)", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "4190": {"id": 4190, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nh1 = 60*H1+M1\nh2 = 60*H2+M2\nd = h2-h1\nprint(d-K)", "coverage": [">", ">", ">", ">", ">"]}, "14572": {"id": 14572, "code": "n = 3;p = 0\na = [1, 1, 1]\nfor i in range(n):\n    a[i]=a[i]%2\none=sum(a)\nzero=n-one\nif p==1 and one==0:\n    print(0)\n    exit()\nif p==0 and one==0:\n    print(2**n)\n    exit()\nprint(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "9910": {"id": 9910, "code": "N = 8\nS = \"))))((((\"\nLR = [0,0]\nl = \"(\"\nr = \")\"\nfor i in range(N):\n  if S[i] == r:\n    if LR[1] == 0:\n      LR[0] += 1\n    else:\n      LR[1] -= 1\n  elif S[i] == l:\n    LR[1] += 1\nS = l * LR[0] + S + r * LR[1]\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11475": {"id": 11475, "code": "wd = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SUN\"\nprint(str(7 - wd.index(s) % 7))", "coverage": [">", ">", ">"]}, "532": {"id": 532, "code": "X='abcdefghijklmnopqrstuvwxyz'*2\nS = \"xyz\"\nk = 4\nN=[]\nfor s in S:\n    if s=='a':\n        N.append(0)\n    else:\n        N.append(26-X.index(s))\nans=''\nfor i in range(len(S)):\n    if N[i]<=k :\n        k-=N[i]\n        ans+='a'\n    else:\n        ans+=S[i]\nans=ans[:-1]+X[X.index(ans[-1])+k%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "3906": {"id": 3906, "code": "X = 13;Y = 3;Z = 1\nif X < Y+2*Z:\n  ans = 0\nelse:\n  _ = Z\n  ans = 0\n  while _ <= (X-Z):\n    _ += Y\n    _ += Z\n    if _ <= X:\n      ans += 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10357": {"id": 10357, "code": "a = 8;b = 12;k = 2\nc = [1]\nfor i in range(min(a, b), 0, -1):\n    if a % i == 0 and b % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6159": {"id": 6159, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    count_a = bisect.bisect_left(A,B[i])\n    count_c = N -bisect.bisect_right(C,B[i])\n    ans += count_a*count_c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2822": {"id": 2822, "code": "s = \"35753\"\nm = 100000\nfor i in range(len(s)-2):\n    a=(s[i:i+3])\n    m=min(abs(753-int(a)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "1286": {"id": 1286, "code": "n = 112\nprint(-(-n//111)*111)", "coverage": [">", ">"]}, "10154": {"id": 10154, "code": "from collections import deque\nn = 3\ns = ['(', ')', ')']\nd = deque(s)\nl, r = 0, 0\nfor i in range(n):\n    if l == r and s[i] == \")\":\n        d.appendleft(\"(\")\n    elif s[i] == \")\":\n        r += 1\n    else:\n        l += 1\ns = \"\".join(list(d))\nprint(s + \")\" * max(0, l - r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7529": {"id": 7529, "code": "h = 10;n = 3\na = [4, 5, 6]\nif h <= sum(a): print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", "!"]}, "1674": {"id": 1674, "code": "n = 10;a = 7;b = 5\nif n < a+b:\n    print(min(a, b),  a+b-n)\nelse:\n    print(min(a, b),  0)", "coverage": [">", ">", ">", "!", "!"]}, "2414": {"id": 2414, "code": "n = 2;m = 1\nx = n*(n-1)//2\nr = m*(m-1)//2\nprint(x+r)", "coverage": [">", ">", ">", ">"]}, "1082": {"id": 1082, "code": "x = 750\nfor i in range(x, 1000):\n  if i // 100 == i % 10 and i // 100 == (i // 10) % 10:\n    break\nprint(i)", "coverage": [">", ">", ">", ">", ">"]}, "2250": {"id": 2250, "code": "N = 100;A = 100;B = 100\nprint(\"%d %d\" % (min(A, B), max((A+B)-N, 0)))", "coverage": [">", ">"]}, "16441": {"id": 16441, "code": "import bisect\nn = 5\nA = [2, 4, 6, 9, 11]\nma = A[-1]\nhalf = ma / 2\nindex = bisect.bisect_left(A,half)\nif index != 0:\n    ans = A[index-1] if half - A[index-1] <= A[index] - half else A[index]\nelse:\n    ans = A[0]\nprint(ma,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10713": {"id": 10713, "code": "s = ['l', 'e', 'v', 'e', 'l']\nif s == list(reversed(s)) and s[:len(s)//2] == list(reversed(s[:len(s)//2])):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", "!", "!", ">"]}, "11119": {"id": 11119, "code": "s = \"level\"\nc = int((len(s) - 1)/2)\nans = (list(s) == list(reversed(s)) and list(s[:c]) == list(reversed(s[:c])) and list(s[(c+1):]) == list(reversed(s[(c+1):])))\nprint([\"No\", \"Yes\"][ans])", "coverage": [">", ">", ">", ">"]}, "17355": {"id": 17355, "code": "l = ['H', 'H']\nprint(\"H\" if len(set(l)) == 1 else \"D\")", "coverage": [">", ">"]}, "5084": {"id": 5084, "code": "s = \"smiles\"\nn = len(s)\nprint (s[0]+((str)(n-2))+s[n-1])", "coverage": [">", ">", ">"]}, "10066": {"id": 10066, "code": "n = 6\ns = \")))())\"\nl=0\nr=0\nfor i in s:\n    if i ==')' and l==0:\n        r+=1\n    elif i==')':\n        l-=1\n    elif i=='(':\n        l+=1\ns1 = '('*r\ns2 = ')'*l\ns=s1+s+s2\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2262": {"id": 2262, "code": "n = 100;a = 100;b = 100\nprint(min(a,b), a+b-n if a+b-n > 0 else 0)", "coverage": [">", ">"]}, "9567": {"id": 9567, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = '8'\na = ''.join(S)\nprint(a)", "coverage": [">", ">", ">", ">"]}, "14428": {"id": 14428, "code": "n = 9;a = [1, 2, 1, 2, 1, 2, 1, 2, 1];b = -1;x = 1\nfor i in range(n-1):\n    if b == 0:\n        if a[i] > a[i+1]: b = -1; x += 1\n    elif b == 1:\n        if a[i] < a[i+1]: b = -1; x += 1\n    else:\n        if a[i] < a[i+1]: b = 0\n        elif a[i] > a[i+1]: b = 1\nprint(x)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "4268": {"id": 4268, "code": "A = 10;B = 0;C = 12;D = 0;E = 120\nL = (C - A) * 60 + (D - B)\nprint(L - E)", "coverage": [">", ">", ">"]}, "15747": {"id": 15747, "code": "X = 64146;Y = 123;Z = 456\nprint( (X-Z) // (Z+Y) )", "coverage": [">", ">"]}, "4486": {"id": 4486, "code": "s = \"internationalization\"\nprint(s[0],len(s)-2,s[len(s)-1], sep=\"\")", "coverage": [">", ">"]}, "16996": {"id": 16996, "code": "a = \"D\";b = \"H\"\nprint('H' if a==b else \"D\")", "coverage": [">", ">"]}, "11960": {"id": 11960, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1 == M2:\n    print (0)\nelse:\n    print (1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "16688": {"id": 16688, "code": "a = \"D\";b = \"D\"\nprint(\"H\" if a == b else \"D\")", "coverage": [">", ">"]}, "2104": {"id": 2104, "code": "n = 10;a = 3;b = 5\nma = min(a,b)\nmi = max(0, a+b-n)\nprint(str(ma) + ' ' + str(mi))", "coverage": [">", ">", ">", ">"]}, "7495": {"id": 7495, "code": "h = 210;n = 5\nxlist = [31, 41, 59, 26, 53]\nif sum(xlist)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "18821": {"id": 18821, "code": "h = 14;w = 12;n = 112\nans = 0\ns = 0\nwhile s < n:\n  s += max(h,w)\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15795": {"id": 15795, "code": "x = 12;y = 3;z = 1\nans = 0\nt = z + y + z\nwhile t <= x:\n  ans += 1\n  t += y\n  t += z\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19187": {"id": 19187, "code": "n = 5\nif n%2 == 0:\n    i = 1\n    ans = 0\n    while 2*pow(5,i) <= n:\n        ans += n//(2*pow(5,i))\n        i += 1\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "17397": {"id": 17397, "code": "S = \"1905\"\nL, R =  map(int, [S[:2], S[2:]])\nif 1 <= L <= 12 and 1 <= R <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= L <= 12 and (R == 0 or R > 12):\n  print(\"MMYY\")\nelif (L == 0 or L > 12) and 1 <= R <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4935": {"id": 4935, "code": "list_S = \"xyz\"\nnum = len(list_S)-2\nnum = str(num)\nf = list_S[0]\nl = list_S[-1]\nans = [f, num, l]\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15228": {"id": 15228, "code": "X = 12;Y = 3;Z = 1\np = X - Z\na = Z+Y\nans = p//a\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "5882": {"id": 5882, "code": "N = 2\na=N//2\nif N%2!=0:\n    a+=1\nprint(a)", "coverage": [">", ">", ">", "!", ">"]}, "13871": {"id": 13871, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nsq = 0\na = A[0]\nfor i in range(1,n):\n    if sq == 0 and A[i] < a:\n        sq = -1\n    elif sq == 0 and A[i] > a:\n        sq = 1\n    elif (sq == 1 and A[i] < a) or (sq == -1 and A[i] > a):\n        ans += 1\n        sq = 0\n    a = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17450": {"id": 17450, "code": "n = 1700\nd2 = n % 100\nu2 = n // 100\nif 1 <= d2 <= 12 and 1 <= u2 <= 12:\n    print(\"AMBIGUOUS \")\nelif 1 <= d2 <= 12:\n    print(\"YYMM\")\nelif 1 <= u2 <= 12:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4846": {"id": 4846, "code": "N = \"internationalization\"\na = len(N)\nans = N[0] +str(a-2) + N[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "12136": {"id": 12136, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(1 if m1 != m2 else 0)", "coverage": [">", ">", ">"]}, "10146": {"id": 10146, "code": "from collections import deque\nN = 6\nS = \")))())\"\nque = deque(S)\nl = r = 0\nfor s in S:\n    if s == '(':\n        l += 1\n    else:\n        r += 1\n    if l < r:\n        que.appendleft('(')\n        l += 1\nelse:\n    ans = \"\".join(que)\n    if r < l:\n        ans = ans + \")\" * (l - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "16767": {"id": 16767, "code": "x = \"H\";y = \"H\"\nif x == \"H\" and y == \"H\" or x == \"D\" and y == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "7398": {"id": 7398, "code": "a = 211;b = 5\nc = [31, 41, 59, 26, 53]\nif(sum(c)>=a):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "17562": {"id": 17562, "code": "S = \"1905\"\nF = S[:2]\nL = S[2:]\nif F == \"00\" or int(F)>12:\n    if L == \"00\" or int(L) > 12:\n        ans = \"NA\"\n    else:\n        ans = \"YYMM\"\nelif int(F) <= 12:\n    if int(L) >= 1 and int(L) <=12:\n        ans = \"AMBIGUOUS\"\n    else:\n        ans = \"MMYY\"    \nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">"]}, "2401": {"id": 2401, "code": "N = 1;M = 1\nans = (N * (N-1)) // 2 + (M * (M-1)) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "13532": {"id": 13532, "code": "n = \"happy,newyear,enjoy\"\nfor i in n:\n    if i==\",\":\n        n=n.replace(\",\",\" \")\nprint(n)", "coverage": [">", ">", ">", ">", ">"]}, "17996": {"id": 17996, "code": "s = \"1700\"\nif (int(s[:2]) == 0 or int(s[:2]) > 12)&(0 < int(s[2:]) <= 12):\n    print(\"YYMM\")\nelif (0 < int(s[:2]) <= 12)&(int(s[2:]) == 0 or int(s[2:]) > 12):\n    print(\"MMYY\")\nelif (0 < int(s[:2]) <= 12)&(0 < int(s[2:]) <= 12):\n    print(\"AMBIGUOUS\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6875": {"id": 6875, "code": "H = 10;N = 3\nlist=[]\nfor i in map(int,\"4 5 6\".split()):\n    list.append(i)\nif H - sum(list) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "13031": {"id": 13031, "code": "line = \"6\"\nnum = [int(n) for n in line.split()][0]\npredicted_value = \"NO\"\nif num in [3, 5, 7]:\n    predicted_value = \"YES\"\nprint(predicted_value)", "coverage": [">", ">", ">", ">", "!", ">"]}, "3995": {"id": 3995, "code": "x = 13;y = 3;z = 1\ni=(x-(y+2*z))//(y+z)\nprint(i+1)", "coverage": [">", ">", ">"]}, "17131": {"id": 17131, "code": "a = \"D\";b = \"H\"\na = 1 if a == \"H\" else -1\nb = 1 if b == \"H\" else -1\nprint(\"H\" if a*b == 1 else \"D\")", "coverage": [">", ">", ">", ">"]}, "4053": {"id": 4053, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ns = h1*60+m1\nt = h2*60+m2\nans = t-s-k\nprint (ans)", "coverage": [">", ">", ">", ">", ">"]}, "17989": {"id": 17989, "code": "S = ['0', '1', '1', '2']\nx = int(\"\".join(S[0:2]))\ny = int(\"\".join(S[2:4]))\nif 1 <= x <= 12:\n    if 1 <= y <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= y <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\npass", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16081": {"id": 16081, "code": "a = [20, 30]\nx = a[1]*2\nif x>=a[0]:\n    print(0)\nelse:\n    print(a[0]-x)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9805": {"id": 9805, "code": "n = 6\nx = [')', ')', ')', '(', ')', ')']\nsta = 0\nleft = 0\nfor i in range(n):\n    if x[i] == '(':\n        sta += 1\n    else:\n        if sta == 0:\n            left += 1\n        else:\n            sta -= 1\ns = []\nfor i in range(left):\n    s.append('(')\nfor i in range(n):\n    s.append(x[i])\nfor i in range(sta):\n    s.append(')')\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "10260": {"id": 10260, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nc0 = 0\nc1 = 0\nz0 = 0\nz1 = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nz0 = c1\ns = s[::-1]\nc0 = 0\nc1 = 0\nfor i in range(n):\n    if s[i] == \")\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nz1 = c1\ns = s[::-1]\nans = [\"(\"]*z0 + s + [\")\"]*z1\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14885": {"id": 14885, "code": "n = 2;p = 0\na = [1, 3]\nm = len([x for x in a if x & 1])\nif m == 0:\n  if p == 0:\n    ans = 2 ** n\n  else:\n    ans = 0\nelse:\n  ans = 2 ** (n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "6879": {"id": 6879, "code": "H = 10;N = 3\na = [4, 5, 6]\na.sort()\nreversed(a)\nflag = True\nfor i in range(N):\n  H-=a[i]\n  if H<=0:\n    flag = False\n    print('Yes')\n    break\nif flag == True:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "13559": {"id": 13559, "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "2293": {"id": 2293, "code": "N = 10;A = 3;B = 5\nma = min(A,B)\nmi = max(0,(A+B)-N)\nprint(\"{} {}\".format(ma,mi))", "coverage": [">", ">", ">", ">"]}, "1491": {"id": 1491, "code": "N = 750\nfor i in range(N, N + 111):\n    if str(i).count(str(i)[0]) == 3:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "11559": {"id": 11559, "code": "D = {\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(D[\"SAT\".strip()])", "coverage": [">", ">"]}, "18461": {"id": 18461, "code": "H = 3\nW = 7\nN = 10\nans = n = 0\nwhile n < N:\n    if H<W:\n        n += W\n        H -= 1\n    else:\n        n += H\n        W -= 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "18305": {"id": 18305, "code": "h = 3\nw = 7\nn = 10\nif h >= w:\n    larger = h\nelse:\n    larger = w\nif n % larger == 0:\n    print(n // larger)\nelse:\n    print(n // larger + 1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "16051": {"id": 16051, "code": "X = 20;Y = 30\nif X>=2*Y:\n    print(X-2*Y)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "12482": {"id": 12482, "code": "A = 100;B = 50;K = 4\ncheck=list()\nfor i in range(1,min(A,B)+1):\n  if A%i==B%i==0:\n    check.append(i)\nprint(check[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "8846": {"id": 8846, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nres = [[0]*N for _ in range(2)]\nres[0][0] = A1[0]\nres[1][N-1] = A2[N-1]\nfor i in range(1, N):\n    res[0][i] = res[0][i-1]+A1[i]\n    res[1][N-i-1] = res[1][N-i]+A2[N-i-1]\nr = 0\nfor i in range(N):\n    r = max(res[0][i]+res[1][i], r)\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14356": {"id": 14356, "code": "if __name__ == '__main__':\n    n = 6\n    arr = [1, 2, 3, 2, 2, 1]\n    dp = [[10 ** 9 for j in range(2)] for i in range(n)]\n    dp[0][0] = 1 \n    dp[0][1] = 1 \n    for i in range(1, n):\n        if arr[i] > arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1] + 1)\n            dp[i][1] = min(dp[i-1][0], dp[i-1][1]) + 1\n        elif arr[i] < arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1]) + 1\n            dp[i][1] = min(dp[i-1][0] + 1, dp[i-1][1])\n        else:\n            dp[i][0] = dp[i-1][0]\n            dp[i][1] = dp[i-1][1]\n    print(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "12359": {"id": 12359, "code": "s = \"atcoder\"\nn = len(s)\nif s[0:n] == s[::-1]:\n  if s[0:(n-1)//2] == s[(n+1)//2:n]:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "7684": {"id": 7684, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nb=sum(a)\nif (b>=h):\n    print('Yes')\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "1703": {"id": 1703, "code": "a = 10;b = 3;c = 5\nprint(min(b, c), max((b+c) - a, 0))", "coverage": [">", ">"]}, "2460": {"id": 2460, "code": "n = {'9', '2', '1'}\ns=set([i for i in \"1974\"])\nprint(\"NO\" if n^s else \"YES\")", "coverage": [">", ">", ">"]}, "7895": {"id": 7895, "code": "from math import ceil\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nn-=1\nk-=1\nprint(ceil(n/k))", "coverage": [">", ">", ">", ">", ">", ">"]}, "15986": {"id": 15986, "code": "N = 12;M = 4\nprint(max(N - (M*2),0))", "coverage": [">", ">"]}, "5640": {"id": 5640, "code": "N = 100\npage = int((N - 1 + 2) / 2)\nprint(page)", "coverage": [">", ">", ">"]}, "3677": {"id": 3677, "code": "a = 20;b = 30\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "4275": {"id": 4275, "code": "h = 10;m = 0;hh = 15;mm = 0;k = 30\nx = hh*60-h*60+mm-m\nprint(x-k)", "coverage": [">", ">", ">"]}, "7496": {"id": 7496, "code": "h = 211;n = 5\nxlist = [31, 41, 59, 26, 53]\nif sum(xlist)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "2991": {"id": 2991, "code": "s = \"1234567876\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n  t = abs(753 - int(s[i:i+3]))\n  if t < ans: ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9264": {"id": 9264, "code": "s = \"2017/01/07\"\nprint(s.replace('2017', '2018'))", "coverage": [">", ">"]}, "562": {"id": 562, "code": "alphabet = 'abcdefghijklmnopqrstuvwxyz'\ns = \"xyz\"\nK = 4\nans = ''\nfor i in range(len(s) - 1):\n    s_i = alphabet.index(s[i])\n    if s[i] == 'a':\n        ans += 'a'\n        continue\n    if (26 - s_i <= K):\n        K -= 26 - s_i\n        ans += 'a'\n    else:\n        ans += s[i]\nans += alphabet[(K + alphabet.index(s[-1])) % 26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "6083": {"id": 6083, "code": "import math\na = 2\nprint(math.floor((a + 1) / 2))", "coverage": [">", ">", ">"]}, "7793": {"id": 7793, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nprint(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">"]}, "8212": {"id": 8212, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nx=a.index(1)\nif n==k:\n    print(1)\nelse:\n    if (n-k)%(k-1)==0:\n        ans=1+(n-k)//(k-1)\n    else:\n        ans=1+(n-k)//(k-1)+1\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]}, "6213": {"id": 6213, "code": "from bisect import bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nAB = [0]*N\nsAB = [0]*N\nrlt = 0\nA.sort()\nB.sort()\nC.sort()\nfor i in range(N):\n  AB[i] = bisect_left(A, B[i])\nsAB[0] = AB[0]\nfor i in range(N-1):\n  sAB[i+1] = sAB[i] + AB[i+1]\nfor i in range(N):\n  j = bisect_left(B, C[i])\n  if j == 0:\n    continue\n  else:\n    rlt += sAB[j-1]\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3684": {"id": 3684, "code": "a = 12;b = 4\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "1252": {"id": 1252, "code": "N = \"111\"\nif int(N) > int(N[0]*3):\n    print(str((int(N[0])+1))*3)\nelse:\n    print(N[0]*3)", "coverage": [">", ">", "!", "!", ">"]}, "3507": {"id": 3507, "code": "if __name__ == '__main__':\n    a = 20;b = 30\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "8797": {"id": 8797, "code": "n = 1\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [2]\na2 = [3]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "17358": {"id": 17358, "code": "res = {\n  ('H', 'H'): 'H',\n  ('H', 'D'): 'D',\n  ('D', 'H'): 'D',\n  ('D', 'D'): 'H'\n}\nprint(res[tuple(\"H H\".split())])", "coverage": ["!", ">", ">", ">", ">", "!", ">"]}, "19188": {"id": 19188, "code": "N = 12\nif N % 2 == 1:\n    print(0)\n    exit()\nans = 0\ni = 1\nwhile 5 ** i * 2 <= N:\n    ans += N // (5 ** i * 2)\n    i += 1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10645": {"id": 10645, "code": "temp = []\nl = []\na = 8;b = 12;k = 2\nfor i in range(1, a + 1):\n    if a % i == 0:\n        temp.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0 and i in temp:\n        l.append(i)\nprint(l[k * -1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2202": {"id": 2202, "code": "n = 100;a = 100;b = 100\nt1 = min(a, b)\nt2 = max(0, b-(n-a))\nprint(t1, t2)", "coverage": [">", ">", ">", ">"]}, "2630": {"id": 2630, "code": "a = \"1 2 9 1\"\nif '1' in a and '7' in a and '9' in a and '4' in a:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "17596": {"id": 17596, "code": "s = \"0112\"\nym = 1 <= int(s[2:]) <= 12\nmy = 1 <= int(s[:2]) <= 12\nif ym and my:\n    print('AMBIGUOUS')\nelif ym:\n    print('YYMM')\nelif my:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2537": {"id": 2537, "code": "a = 4;b = 9;c = 0;d = 8\nS={a,b,c,d}\nif S=={1,7,9,4}:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "14937": {"id": 14937, "code": "n = 3;p = 0\na = [1, 1, 1]\nodd = sum(a)\nans = 0\nif odd:\n    ans = 2**(n-1)\nelse:\n    ans = 2**n*(1-p)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3461": {"id": 3461, "code": "a = 20;b = 15\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "12525": {"id": 12525, "code": "A = 1;B = 1;K = 1\nc = 0\nif A < B:\n  R = A\nelse:\n  R = B\nfor i in range (R):\n  I = R-i\n  if A%I==0 and B%I==0:\n    c += 1\n    if c == K:\n      print (I)\n      break", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2342": {"id": 2342, "code": "from math import factorial\nN = 13;M = 3\nif N <= 1:\n    combN = 0\nelse:\n    combN = factorial(N) // (factorial(N - 2) * factorial(2))\nif M <= 1:\n    combM = 0\nelse:\n    combM = factorial(M) // (factorial(M - 2) * factorial(2))\nprint(combN + combM)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "15273": {"id": 15273, "code": "x = 64146;y = 123;z = 456\na=x//(y+z)\nif x-a*(y+z)>=z:\n  print(a)\nelse:\n  print(max(0,a-1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "13517": {"id": 13517, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5]+' '+s[6:13]+' '+s[14:])", "coverage": [">", ">"]}, "11771": {"id": 11771, "code": "i = [11, 30]\nj = [12, 1]\nif j[1]==1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "14336": {"id": 14336, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nl = []\nans = 1\nflag = True\nfor i in range(1, len(a)):\n    num = a[i] - a[i - 1]\n    if num > 0:\n        num = 1\n        l.append(num)\n    elif num < 0:\n        num = -1\n        l.append(num)\n    else:\n        pass\nif len(l) > 1:\n    for i in range(len(l) - 1):\n        if l[i] != l[i + 1]:\n            if flag == True:\n                ans += 1\n                flag = False\n            else:\n                flag = True\n        else:\n            flag = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "6640": {"id": 6640, "code": "from bisect import bisect_left,bisect_right\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor b in B:\n    index_a=bisect_left(A,b)\n    index_c=bisect_right(C,b)\n    ans +=index_a*(n-index_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13341": {"id": 13341, "code": "a = \"haiku,atcoder,tasks\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "6976": {"id": 6976, "code": "H = 20;N = 3\nA = [4, 5, 6]\natk = 0\nfor i in A:\n    atk += i\nif H > atk:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16336": {"id": 16336, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm = max(a) // 2\nres = 0\nc = max(a)\nfor i in range(n-1):\n  if abs(m - a[i]) <= c:\n    res = a[i]\n    c = abs(m - a[i])\nprint(max(a),res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11463": {"id": 11463, "code": "s = \"SUN\"\nl=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nnum=l.index(s)\nprint(7-num)", "coverage": [">", ">", ">", ">"]}, "10417": {"id": 10417, "code": "a = 100;b = 50;k = 4\nans = []\nfor i in range(1, min(a, b)+1):\n    if a % i == b % i == 0:\n        ans.append(i)\nans.sort(reverse=True)\nprint(ans[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4005": {"id": 4005, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nM_all = (H2 *60 + M2) - (H1 *60 + M1) - K\nif M_all <= 0:\n    print('0')\nelse:\n    print(M_all)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6258": {"id": 6258, "code": "import bisect\nN = 2\nA_list = [1, 5]\nB_list = [2, 4]\nC_list = [3, 6]\nA_list = sorted(A_list)\nB_list = sorted(B_list)\nC_list = sorted(C_list)\nans = 0\nfor i in range(N):\n    b = B_list[i]\n    a_nums = bisect.bisect_left(A_list, b)\n    c_nums = N - bisect.bisect_right(C_list, b)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6296": {"id": 6296, "code": "from bisect import *\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncount = 0\nfor i in range(N):\n  a = bisect_left(A, B[i])\n  c = bisect(C, B[i])\n  c = N - c\n  count += (a*c)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16389": {"id": 16389, "code": "n = 2\na = [100, 0]\nm = max(a)\na = sorted(a)\nans = 0\nfor i in a:\n    if abs(m/2-i) < abs(m/2-ans):\n        ans = i\nprint(m, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8727": {"id": 8727, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17502": {"id": 17502, "code": "s = 1905\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "7416": {"id": 7416, "code": "H = 20;N = 3\nA = [4, 5, 6]\nrest_H = H - sum(A)\nif rest_H <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15460": {"id": 15460, "code": "x = 13;y = 3;z = 1\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "18445": {"id": 18445, "code": "A = 2\nB = 100\nN = 200\nif A < B:\n  X = N//B\n  if N%B == 0:\n    print (X)\n  else:\n    print (X+1)\nelse:\n  X = N//A\n  if N%A == 0:\n    print (X)\n  else:\n    print (X+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "17428": {"id": 17428, "code": "s = \"0112\"\ns_a = int(s[:2])\ns_b = int(s[2:])\nif 1 <= s_a <=12 and 1 <= s_b <=12:\n  ans = \"AMBIGUOUS\"\nelif not(1 <= s_a <=12) and 1 <= s_b <=12:\n  ans = \"YYMM\"\nelif 1 <= s_a <=12 and not(1 <= s_b <=12):\n  ans = \"MMYY\"\nelse:\n  ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "12290": {"id": 12290, "code": "s = \"level\"\ns1 = s[:len(s)//2]\ns2 = s[len(s)//2+1:]\nprint(\"Yes\" if s==s[::-1] and s1==s1[::-1] and s2==s2[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "2220": {"id": 2220, "code": "N = 100;A = 100;B = 100\nlargest = min(A, B)\nminimum = max(0, A + B - N)\nprint(largest, minimum)", "coverage": [">", ">", ">", ">"]}, "10123": {"id": 10123, "code": "n = 8\ns = \"))))((((\"\nresult=\"\"\ncnt=0\nfor ss in s:\n    if ss ==\")\":\n        if cnt>0:\n            result+=ss\n            cnt-=1\n        else:\n            result=\"(\"+result+ss\n    else:\n        result+=ss\n        cnt+=1\nL=result.count(\"(\")\nR=result.count(\")\")\nresult+=\")\"*(L-R)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "17369": {"id": 17369, "code": "s = ['1', '7', '0', '0']\ns1 = int(\"\".join(s[:2]))\ns2 = int(\"\".join(s[2:]))\nif 1 <= s1 <= 12 and 1 <= s2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= s1 <= 12:\n    print('MMYY')\nelif 1 <= s2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6214": {"id": 6214, "code": "import bisect\nn = 2\nAs = [1, 5]\nBs = [2, 4]\nCs = [3, 6]\ncnt = [0]*(n+1)\nv = 0\nfor idx, b in enumerate(Bs[::-1]):\n    v += len(Cs) - bisect.bisect_right(Cs, b)\n    cnt[n-1-idx] = v\nprint(sum([cnt[bisect.bisect_right(Bs, a)] for a in As]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12747": {"id": 12747, "code": "x = 6\nprint(\"YES\") if x == 7 or x == 5 or x == 3 else print(\"NO\")", "coverage": [">", ">"]}, "8844": {"id": 8844, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nres = [[0]*N for _ in range(2)]\nres[0][0] = A1[0]\nres[1][N-1] = A2[N-1]\nfor i in range(1, N):\n    res[0][i] = res[0][i-1]+A1[i]\n    res[1][N-i-1] = res[1][N-i]+A2[N-i-1]\nr = 0\nfor i in range(N):\n    r = max(res[0][i]+res[1][i], r)\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15427": {"id": 15427, "code": "x = 12;y = 3;z = 1\nans = x // (y + z)\nif x - (ans * (y + z)) < z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "15524": {"id": 15524, "code": "x = 100000;y = 1;z = 1\nprint(x//(y+z) if x%(y+z)>=z else x//(y+z)-1)", "coverage": [">", ">"]}, "2214": {"id": 2214, "code": "n = 100;a = 100;b = 100\nmax1 = min(a,b)\nif a+b <= n:\n  min1 =0\nelif a+b >n:\n  min1 = a+b-n\nprint(max1,min1)", "coverage": [">", ">", ">", "!", ">", ">", ">"]}, "3915": {"id": 3915, "code": "x = 64146;y = 123;z = 456\nlong = x-z\nf = y+z\nans , b = divmod(long,f)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "16430": {"id": 16430, "code": "n = 2\na = [0, 100]\nl=a[-1]\nb=[abs(i-l/2) for i in a]\nc=float(\"inf\")\nfor i in range(n-1):\n  c=min(c,b[i])\nprint(l,a[b.index(c)])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "923": {"id": 923, "code": "k = 2\nmod = 7 % k\ncounter = 1\nmemo = 1\nmod_map = set()\nmod_map.add(mod)\nwhile mod != 0:\n    mod = ((mod * 10) % k + 7) % k\n    if mod not in mod_map:\n        mod_map.add(mod)\n    else:\n        counter = -1\n        break\n    counter += 1\n    if mod == 0:\n        break\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">"]}, "17459": {"id": 17459, "code": "s = \"1700\"\nif (0<=int(s[:2])<=99 and 1<=int(s[2:])<=12) and not(0<=int(s[2:])<=99 and 1<=int(s[:2])<=12):\n    print(\"YYMM\")\nelif (0<=int(s[2:])<=99 and 1<=int(s[:2])<=12) and not((0<=int(s[:2])<=99 and 1<=int(s[2:])<=12)):\n    print(\"MMYY\")\nelif (0<=int(s[:2])<=99 and 1<=int(s[2:])<=12) and (0<=int(s[2:])<=99 and 1<=int(s[:2])<=12):\n    print(\"AMBIGUOUS\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "7290": {"id": 7290, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nT = 0\nfor i in range(N):\n  T += A[i]\nif H-T <=0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15790": {"id": 15790, "code": "a = 64146;b = 123;c = 456\nprint((a-c)//(b+c))", "coverage": [">", ">"]}, "17664": {"id": 17664, "code": "s = \"1905\"\nx = int(s[:2])\ny = int(s[2:])\nif 1 <= x <= 12 and 1 <= y <= 12:\n    a = \"AMBIGUOUS\"\nelif 1 <= x <= 12:\n    a = \"MMYY\"\nelif 1 <= y <= 12:\n    a = \"YYMM\"\nelse:\n    a = \"NA\"\nprint(a)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "14002": {"id": 14002, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup = down = 0\ncur = a[0]\nans = 0\nfor x in a:\n    if cur < x:\n        up = 1\n    elif cur > x:\n        down = 1\n    if up and down:\n        ans += 1\n        up = down = 0\n    cur = x\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4760": {"id": 4760, "code": "s = \"smiles\"\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">"]}, "5507": {"id": 5507, "code": "n = 2\nans = n//2+n%2\nprint(ans)", "coverage": [">", ">", ">"]}, "10272": {"id": 10272, "code": "n = 6\nS = \")))())\"\nx=y=0\nfor i,s in enumerate(S):\n  y=y-1 if s=='(' else y+1\n  x=max(x,y)\nprint('('*x+S+')'*(x-y))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6043": {"id": 6043, "code": "n = 5\nans = (n+2-1)//2\nprint(ans)", "coverage": [">", ">", ">"]}, "7137": {"id": 7137, "code": "h = 10;n = 3\nA = [4, 5, 6]\nattack=0\nfor i in range(n):\n    attack+=A[i]\nif attack>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "18023": {"id": 18023, "code": "S = \"1700\"\nnum1 = int(S[:2])\nnum2 = int(S[2:])\nif 1 <= num1 <= 12 and 1 <=  num2 <= 12:\n    ans = \"AMBIGUOUS\"\nelif 1 <= num1 <= 12 and (num2 == 0 or 12 < num2):\n    ans = \"MMYY\"\nelif (num1 == 0 or 12 < num1) and 1 <=  num2 <= 12:\n    ans = \"YYMM\"\nelse:\n    ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "1996": {"id": 1996, "code": "n = 100;a = 100;b = 100\nx=min(a,b)\nif a+b<=n:\n    y=0\nelse:\n    y=a+b-n\nprint(x,y)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "16894": {"id": 16894, "code": "A = \"D\";B = \"H\"\nif A == B:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "15212": {"id": 15212, "code": "x = 13;y = 3;z = 1\nn = (x - z) / (y + z)\nprint(int(n))", "coverage": [">", ">", ">"]}, "6985": {"id": 6985, "code": "H = 210;N = 5\nlst = [31, 41, 59, 26, 53]\ns=sum(lst)\nif s>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4620": {"id": 4620, "code": "s = \"xyz\"\nprint('{}{}{}'.format(s[0],len(s[1:-1]),s[-1]))", "coverage": [">", ">"]}, "19477": {"id": 19477, "code": "s = 10\nprint(s if s%2 == 0 else s*2)", "coverage": [">", ">"]}, "8671": {"id": 8671, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7320": {"id": 7320, "code": "hp = 211;count_skills = 5\na = map(int, \"31 41 59 26 53\".split())\nskills_list = list(a)\nfor skill in skills_list:\n    hp -= skill\n    if hp <= 0:\n        print('Yes')\n        break\nif hp >= 1:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11081": {"id": 11081, "code": "S = \"level\"\nans = 'Yes'\nfor i in range(len(S)//2):\n  if S[i] != S[len(S)-1-i]:\n    ans = 'No'\nfront = S[0:(len(S)-1)//2]\nfor i in range(len(front)//2):\n  if front[i] != front[len(front)-1-i]:\n    ans = 'No'\nend = S[(len(S)+1)//2:]\nfor i in range(len(end)//2):\n  if end[i] != front[len(end)-1-i]:\n    ans = 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "4309": {"id": 4309, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif m2-k < 0:\n    m2 = 60+(m2-k)\n    h2 -= 1\nelse :\n    m2 -= k\nminute1 = h1*60+m1\nminute2 = h2*60+m2\nprint(minute2-minute1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "18980": {"id": 18980, "code": "n = 5\nif n % 2 == 0:\n    n5 = 1\n    y = 10\n    c = []\n    while y <= n:\n        c.append(n//y)\n        if len(c) > 1:\n            c[-2] -= c[-1]\n        y *= 5\n    cnt = 0\n    for i in range(len(c)):\n        cnt += c[i]*(i+1)\n    print(cnt)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "6521": {"id": 6521, "code": "from bisect import bisect_right, bisect_left\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a_id = bisect_left(A, b)\n    c_id = bisect_right(C, b)\n    ans += a_id * (len(C) - c_id)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16129": {"id": 16129, "code": "input_line = \"20 15\"\ninputs = input_line.split(' ')\ninputs = [int(input) for input in inputs]\nA = inputs[0]\nB = inputs[1]\ndual_B = 2 * B\nres = 0\nif A > dual_B:\n    res = A - dual_B\nelse:\n    res = 0\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16436": {"id": 16436, "code": "n = 2\na = [100, 0]\na=sorted(a)\nx=a[n-1]/2\nans=a[0]\nfor i in range(1,n-1):\n    if abs(ans-x)>abs(a[i]-x):\n        ans=a[i]\nprint(\"{} {}\".format(a[n-1],ans))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13646": {"id": 13646, "code": "text = \"happy,newyear,enjoy\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "18298": {"id": 18298, "code": "h = 2\nw = 100\nn = 200\nall_cell = 0\ncount = 0\nwhile all_cell < n:\n    if h > w:\n        all_cell += h\n        w -= 1\n    else:\n        all_cell += w\n        h -= 1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "1933": {"id": 1933, "code": "N = 10;A = 3;B = 5\nboth = min(A, B)\nnone = 0 if A+B-N<0 else A+B-N\nprint(both, none)", "coverage": [">", ">", ">", ">"]}, "5715": {"id": 5715, "code": "N = 100\nres = int(N / 2)\nif N % 2 != 0:\n  res += 1\nprint(res)", "coverage": [">", ">", ">", "!", ">"]}, "3468": {"id": 3468, "code": "a = 20;b = 30\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "8613": {"id": 8613, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4900": {"id": 4900, "code": "S = \"internationalization\"\nans = S[0] + str(len(S) - 2) + S[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "12256": {"id": 12256, "code": "S = \"level\"\nN=len(S)\nr_S=S[::-1]\nc1=int((N-1)/2)\nc2=int((N+3)/2)\nS1=S[:c1]\nr_S1=S1[::-1]\nS2=S[(c2-1):]\nr_S2=S2[::-1]\nif S==r_S and S1==r_S1 and S2==r_S2:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2934": {"id": 2934, "code": "S = \"1234567876\"\nm = 753 \nfor i in range(len(S)-2):\n    tmp=(S[i:i+3])\n    m=min(abs(753-int(tmp)),m)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15189": {"id": 15189, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\nx = 64145;y = 123;z = 456\nx-= 2*z\nans = x//(y+z)\nif x%(y+z)>=y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11137": {"id": 11137, "code": "S = \"atcoder\"\nN = len(S)\none = S[:int((N-1) / 2)]\ntwo = S[int((N+3) / 2)-1:]\nif S == S[::-1]:\n    if one == one[::-1]:\n        if two == two[::-1]:\n            print('Yes')\n            exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "10181": {"id": 10181, "code": "n = 3\nsl = ['(', ')', ')']\nmax_k = 0\nnow = 0\nfor s in sl:\n    if s == \"(\":\n        now += 1\n    else:\n        now -= 1\n    max_k = min(now, max_k)\nprint(\"(\" * (-max_k) + \"\".join(sl) + max(now-max_k, 0) * \")\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "19268": {"id": 19268, "code": "N = 12\nres = 0\nif N % 2 == 0:\n    div = N // 2\n    for i in range(1,30):\n        res += div // 5**i\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18159": {"id": 18159, "code": "s = \"0112\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a and a <= 12 and 1<= b and b <=12:\n    print(\"AMBIGUOUS\")\nelif 1 <= a <=12 and (12 < b or b < 1):\n    print(\"MMYY\")\nelif (12 < a or a < 1) and 1 <= b <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3949": {"id": 3949, "code": "x = 64145;y = 123;z = 456\nx -= z\nr = x // (y + z)\nprint(r)", "coverage": [">", ">", ">", ">"]}, "9757": {"id": 9757, "code": "n = 3\ns = \"())\"\ni = 0\nmi = 0\nfor c in s:\n    if c=='(':\n        i += 1\n    else:\n        i -= 1\n    mi = min(mi, i)\nans = '('*(-mi) + s + ')'*(i-mi)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3551": {"id": 3551, "code": "A = 20;B = 15\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6322": {"id": 6322, "code": "import bisect\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\ntotal = 0\nfor b in B:\n    total += bisect.bisect_left(A, b) * (len(C) - bisect.bisect_right(C, b))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11222": {"id": 11222, "code": "days = [\"DAYS\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\ns = \"SAT\"\nfor i in days:\n    if i == s:\n        print(days.index(i))\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "10627": {"id": 10627, "code": "A = 1;B = 1;K = 1\na = []\nfor i in range(1, min(A, B)+1):\n  if A%i == 0 and B%i == 0:\n    a.append(i)\nb = sorted(a, reverse=True)\nprint(b[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5344": {"id": 5344, "code": "n = 5\nprint((n//2)+(n%2))", "coverage": [">", ">"]}, "8597": {"id": 8597, "code": "n = 1\na = [2]\nb = [3]\ncandy=[a,b]\nn_i=0\nn_j=0\nscore=0\nfor i in range(n):\n    tmp_a = a[:i+1]\n    tmp_b = b[i:]\n    tmp_score = sum(tmp_a) + sum(tmp_b)\n    score = max(score,tmp_score)\nprint(score)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2255": {"id": 2255, "code": "n = 10;a = 7;b = 5\nmn = None\nmx = None\nmx = min(a, b)\nif n >= a+b:\n    mn = 0\nelse:\n    mn = a+b-n\nprint(mx, mn)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11421": {"id": 11421, "code": "s = \"SUN\"\nw=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n    if w[i]==s:\n        print(7-i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "9120": {"id": 9120, "code": "s = \"2017/01/07\"\nprint('2018/{}'.format(s[5:]))", "coverage": [">", ">"]}, "10593": {"id": 10593, "code": "import math\na = 100;b = 50;k = 4\nd = math.gcd(a, b)\ne = d + 1\nl = 0\nwhile True:\n    e -= 1\n    if d % e == 0:\n        l += 1\n        if l == k:\n            break\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11146": {"id": 11146, "code": "a = \"akasaka\"\nl = len(a)\nm = a[:l//2]\nn = a[l//2 + 1 :]\nif a[::-1] == a and m == m[::-1] and n == n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "2587": {"id": 2587, "code": "a = {0, 9, 4, 8}\nprint('YES' if 1 in a and 9 in  a and 7 in a and 4 in a else 'NO')", "coverage": [">", ">"]}, "15441": {"id": 15441, "code": "x = 13;y = 3;z = 1\nisu = z\ncount = 0\nwhile isu<=x-z:\n    if isu+y<=x-z:\n        isu += y\n        isu += z\n        count += 1\n    else:\n        break\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15384": {"id": 15384, "code": "x = 64146;y = 123;z = 456\nret = (x-z)//(y+z)\nprint(ret)", "coverage": [">", ">", ">"]}, "580": {"id": 580, "code": "S = ['a']\nN = len(S)\nK = 25\nfor i in range(N - 1):\n    d = (ord(\"a\") - ord(S[i])) % 26\n    if d <= K:\n        S[i] = \"a\"\n        K -= d\nS[-1] = chr((ord(S[-1]) - ord(\"a\") + K) % 26 + ord(\"a\"))\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "4671": {"id": 4671, "code": "a =[]\nb = 0\ns = \"xyz\"\nfor i in s:\n  a.append(i)\n  b += 1\nprint(str(a[0])+str((b-2))+str(a[b-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17057": {"id": 17057, "code": "a = \"D\";b = \"D\"\nif a==\"H\" and b==\"H\":\n    print(\"H\")\nelif a==\"H\" and b==\"D\":\n    print(\"D\")\nelif a==\"D\" and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6395": {"id": 6395, "code": "import bisect\nn = 3\nalist = [1, 1, 1]\nblist = [2, 2, 2]\nclist = [3, 3, 3]\nans = 0\nfor b in blist:\n  ai = bisect.bisect_left(alist, b)\n  ci = bisect.bisect_right(clist, b)\n  if ai == 0 or ci == len(clist):\n    continue\n  else:\n    ans += ai * (len(clist) - ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "7570": {"id": 7570, "code": "a = 20;b = 3\nlis = [4, 5, 6]\nc = sum(lis)\nprint(\"No\" if a > c else \"Yes\")", "coverage": [">", ">", ">", ">"]}, "7065": {"id": 7065, "code": "n1 = 210;n2 = 5\nn3 = [31, 41, 59, 26, 53]\nfor i1 in range(n2):\n    n1 -= n3[i1]\nif n1 <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "16507": {"id": 16507, "code": "import math\nn = 5\na = [6, 9, 4, 2, 11]\na = sorted(a, reverse = True)\nmid = a[0]//2\ndiff = abs(mid - a[0])\nif n == 2:\n    print(max(a[0],a[1]),min(a[0],a[1]))\nelse:\n    for i in range(n):\n        if abs(a[i] - mid) < diff:\n            diff = abs(a[i] - mid)\n            ans = i\n    print(a[0], a[ans])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "19249": {"id": 19249, "code": "N = 12\ncnt = 1\nanswer = 0\ndiv = 10\nif N % 2 == 0:\n    while div <= N:\n        answer += N//div\n        div *= 5\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16886": {"id": 16886, "code": "A = \"D\";B = \"D\"\nif A == \"H\":\n  if B == \"H\":\n    print(\"H\")\n  else:\n    print(\"D\")\nelif A == \"D\":\n  if B == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "17872": {"id": 17872, "code": "S = \"0112\"\nmonth_list = [\"01\",\"02\",\"03\",\"04\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif S[0:2] in month_list:\n    if S[2:4] in month_list:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if S[2:4] in month_list:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "13594": {"id": 13594, "code": "x = \"abcde\";y = \"fghihgf\";z = \"edcba\"\nprint(x + ' ' + y + ' ' + z)", "coverage": [">", ">"]}, "4796": {"id": 4796, "code": "S = \"smiles\"\nn = str(len(S)-2)\nres = S[0]+n+S[len(S)-1]\nprint(res)", "coverage": [">", ">", ">", ">"]}, "6168": {"id": 6168, "code": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nfrom bisect import bisect_left, bisect_right\nans = 0\nfor bi in b:\n    ans += bisect_left(a,bi) * (n-bisect_right(c,bi))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "392": {"id": 392, "code": "s = \"a\"\nn = len(s)\nc = [ord(s[i]) for i in range(n)]\nk = 25\nind = 0\nwhile k > 0:\n    if ind == n:\n        break\n    if c[ind] == 97:\n        ind += 1\n        continue\n    elif 123 - c[ind] <= k:\n        k -= 123-c[ind]\n        c[ind] = 97\n        ind += 1\n    elif 123 - c[ind] > k:\n        ind += 1\n        continue\nif k > 0:\n    k %= 26\n    c[-1] += k\n    if c[-1] >= 123:\n        c[-1] = 97 + (123-c[-1])\nprint(''.join([chr(c[i]) for i in range(n)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">"]}, "14364": {"id": 14364, "code": "n = 6\nif n==1:\n  print(1)\n  exit()\na = [1, 2, 3, 2, 2, 1]\nans=1\nif a[0]<a[1]:flag=1\nelif a[0]>a[1]:flag=-1\nelse:flag=0\nfor i in range(1,n-1):\n  if flag==1 and a[i]>a[i+1]:\n    ans+=1\n    flag=0\n  elif flag==-1 and a[i]<a[i+1]:\n    ans+=1\n    flag=0\n  else:\n    if a[i]>a[i+1]:flag=-1\n    elif a[i]<a[i+1]:flag=1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "4835": {"id": 4835, "code": "s = \"smiles\"\na = str(len(s) - 2)\nS = s[0] + a + s[len(s) - 1]\nprint(S)", "coverage": [">", ">", ">", ">"]}, "9763": {"id": 9763, "code": "N = 3\nT = \"())\"\nS = list(T)\nG = True\nwhile G:\n    G = False\n    for i in range(1, len(S)):\n        if S[i - 1] == '(' and S[i] == ')':\n            S.pop(i)\n            S.pop(i - 1)\n            G = True\n            break\nfor s in S:\n    if s == '(':\n        T = T + ')'\n    else:\n        T = '(' + T\nprint(T)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "82": {"id": 82, "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n  dp = 26-ord(s[i])+97\n  if k >= dp and s[i] != \"a\":\n    k-=dp\n    s[i] = \"a\"\n    if k == 0:\n      break\nelse:\n  s[-1] = chr((ord(s[-1])-97+k)%26+97)\nprint(*s,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17677": {"id": 17677, "code": "s = \"0112\"\na = 0\nb = 0\nif s[2] == '0': b = int(s[3])\nelse: b = int(s[2:])\nif s[0] == '0': a = int(s[1])\nelse: a = int(s[:2])\nif (b>=1 and b<=12) and (a>=1 and a<=12): print(\"AMBIGUOUS\")\nelif b>=1 and b<=12: print(\"YYMM\")\nelif a>=1 and a<=12: print(\"MMYY\")\nelse: print(\"NA\") ", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!"]}, "2657": {"id": 2657, "code": "n = \"1 9 7 4\"\nif n.count('1') == 1 and n.count('9') == 1 and n.count('7') == 1 and n.count('4') == 1:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "15612": {"id": 15612, "code": "import sys\nX = 12;Y = 3;Z = 1\nif not (1 <= X <= 10 ** 5 and 1 <= Y <= 10 ** 5 and 1 <= Z <= 10 ** 5):\n    sys.exit()\nif not (Y + 2*Z <= X):\n    sys.exit()\nmax = 0\nfor I in range(int(X/(Y+Z))+1):\n    if X - (Y * I + Z * (I + 1)) >= 0:\n        max = I\nprint(max)", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">"]}, "1560": {"id": 1560, "code": "N = 750\nif N%111==0:\n    print(N)\nelse:\n    print((N//111+1)*111)", "coverage": [">", ">", "!", "!", ">"]}, "3843": {"id": 3843, "code": "X = 64146;Y = 123;Z = 456\nX -= 2 * Z\nans, r = divmod(X, Y + Z)\nif r >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "9377": {"id": 9377, "code": "s = ['2017', '01', '31']\nprint('2018/'+s[1]+'/'+s[2])", "coverage": [">", ">"]}, "4164": {"id": 4164, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;K = 30\nH=h2-h1\nM=m2-m1\nif(M<0):\n  M += 60\n  H -= 1\nif(H<0):\n  H += 24\nM += H*60\nans =M - K\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">"]}, "633": {"id": 633, "code": "K = 2\ncount = 1\nmod = 7\nanswer = -1\nfor _ in range(K):\n    if mod % K == 0:\n        answer = count\n        break\n    count += 1\n    mod = (mod * 10 + 7) % K\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "5531": {"id": 5531, "code": "n = 2\nprint(n//2+n%2)", "coverage": [">", ">"]}, "18906": {"id": 18906, "code": "N = 12\nif N % 2 == 0:\n    tmp = 10\n    ans = 0\n    while tmp <= N:\n        ans += N // tmp\n        tmp = 5 * tmp\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "17278": {"id": 17278, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n  print('H' if b == 'H' else 'D')\nelif a == 'D':\n  print('D' if b == 'H' else 'H')", "coverage": [">", ">", "!", ">", ">"]}, "14343": {"id": 14343, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nB = []\ni = 0\nwhile i < N - 1:\n    if A[i] != A[i+1]:\n        B.append(A[i])\n    i += 1\nB.append(A[-1])\nans = 1\ni = 0\nwhile i < len(B) - 2:\n    if (B[i + 1] - B[i]) * (B[i + 2] - B[i + 1]) < 0:\n        ans += 1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "1963": {"id": 1963, "code": "n = 10;a = 3;b = 5\nans = [min(a,b), max(0,(a+b)-n)]\nprint(*ans, sep=' ')", "coverage": [">", ">", ">"]}, "15857": {"id": 15857, "code": "x = 100000;y = 1;z = 1\nprint(len(range(z+y,x-z+1,z+y)))", "coverage": [">", ">"]}, "13982": {"id": 13982, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nA = A\nf = 0\nans = 1\nfor k in range(N-1):\n    if f == 0:\n        if A[k] > A[k+1]:\n            f = -1\n        elif A[k] < A[k+1]:\n            f = 1\n    elif f == 1:\n        if A[k] > A[k+1]:\n            ans += 1\n            f = 0\n    else:\n        if A[k] < A[k+1]:\n            ans += 1\n            f = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "5711": {"id": 5711, "code": "i = 2\nprint(i//2+i%2)", "coverage": [">", ">"]}, "7074": {"id": 7074, "code": "h = 211;n = 5\na_list = [31, 41, 59, 26, 53]\nif sum(a_list)>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3040": {"id": 3040, "code": "s=\"35753\";m=float('inf')\nfor i in range(len(s)-2): m=min(m,abs(int(s[i:i+3])-753))\nprint(m)", "coverage": [">", ">", ">"]}, "226": {"id": 226, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nnow = 0\nwhile k>0 and now<len(s):\n    if s[now]=='a':\n        now+=1\n        continue\n    tmp = ord('z')-ord(s[now])+1\n    if tmp<=k:\n        s[now] = 'a'\n        k -= tmp\n        now+=1\n    else:\n        now+=1\nif k>0:\n    s[-1] = chr(ord(s[-1])+k%26 )\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "16796": {"id": 16796, "code": "a = False;b = False\nprint(\"D\" if a ^ b else \"H\")", "coverage": [">", ">"]}, "298": {"id": 298, "code": "s = \"codefestival\"\nk = 100\nresult = \"\"\ni = 0\nwhile i < len(s)-1:\n    s_i = ord(s[i])\n    if s[i]==\"a\":\n        result = result+\"a\"\n    elif 123-s_i <= k:\n        result = result+\"a\"\n        k -= 123-s_i\n    else:\n        result = result+s[i]\n    i += 1\nif k>0:\n    result = result + chr((ord(s[i])-97+k)%26+97)\nelse:\n    result = result + s[i]\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "10470": {"id": 10470, "code": "a = 8;b = 12;k = 2\ncd=[]\nfor i in range(1,max(a,b)+1):\n    if a%i ==0 and b%i ==0:\n        cd.append(i)\ncd = sorted(cd,reverse=True)\nprint(cd[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7111": {"id": 7111, "code": "h = 10;n = 3\nprint('Yes' if sum(map(int, \"4 5 6\".split()))>=h else 'No' )", "coverage": [">", ">"]}, "10082": {"id": 10082, "code": "N = 3\nS = \"())\"\nT = list(1 if c == \"(\" else -1 for c in S)\nl, l_min = 0, 0\nr, r_min = 0, 0\nfor i in range(N):\n    l += T[i]\n    l_min = min(l_min, l)\n    r -= T[N - i - 1]\n    r_min = min(r_min, r)\nprint(\"\".join([\"(\" * -l_min, S, \")\" * -r_min]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16199": {"id": 16199, "code": "import sys\nimport bisect\ninput = sys.stdin.readline\nn = 2\na = [0, 100]\nif n == 2:\n    am = a[-1]\n    amm = a[0]\nelse:\n    am = max(a)\n    ind = bisect.bisect_left(a,am//2)\n    am1 = a[ind]\n    am2 = a[ind-1]\n    am1abs = abs(am/2-am1)\n    am2abs = abs(am/2-am2)\n    if am1abs <= am2abs:\n        amm = am1\n    else:\n        amm = am2\nprint(am,amm)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "15850": {"id": 15850, "code": "x = 64145;y = 123;z = 456\na = x-z\nb = a//(y+z)\nprint(b)", "coverage": [">", ">", ">", ">"]}, "9017": {"id": 9017, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif abs(a - e) > k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16335": {"id": 16335, "code": "import bisect\nn = 2\nA = [100, 0]\nA.sort()\nx = A[-1]\ny = bisect.bisect(A, x / 2)\nif abs(A[y] - x / 2) < abs(A[y-1] - x / 2):\n    print(x, A[y])\nelse:\n    print(x, A[y-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3598": {"id": 3598, "code": "A = 20;B = 30\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "13053": {"id": 13053, "code": "if \"6\" in \"753\":\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", "!", "!", ">"]}, "19240": {"id": 19240, "code": "n = 5\nc=0\nm=n/2\nwhile m>=5:\n  m/=5\n  c+=1\nsm=0\nfor i in range(c):\n  sm+=(n//2)//(5**(i+1))\nprint(sm if n%2==0 else 0)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "6628": {"id": 6628, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nans=0\nfor i in b:ans+=bisect.bisect_left(a,i)*(n-bisect.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19077": {"id": 19077, "code": "n = 5\nif n%2 == 1:\n  print(0)\nelse:\n  i = 0\n  a = n//10\n  b = 1\n  while b != 0:\n    i += 1\n    b = n//((5**i)*10)\n    a += b\n  print(a)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "17604": {"id": 17604, "code": "S = \"1905\"\ns1=int(S[0:2])\ns2=int(S[2:])\nif 1<=s1<=12 and 1<=s2<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=s2<=12:\n  print(\"YYMM\")\nelif 1<=s1<=12:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "9729": {"id": 9729, "code": "n = 8\ns = \"))))((((\"\nns = s\nwhile '()' in ns:\n    ns = ns.replace('()', '')\nl = ns.count(')')\nr = ns.count('(')\nprint('(' * l + s + ')' * r)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "4351": {"id": 4351, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nH_min = (h2-h1)*60\nM_min = m2-m1\ntime = H_min + M_min\nans = time - k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17655": {"id": 17655, "code": "s = 1905\na=s//100\nb=s%100\nif a>0 and a<=12:\n  if b>0 and b<=12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if b>0 and b<=12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "7934": {"id": 7934, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\ng = 1\nwhile N > K + (K - 1) * (g - 1):\n    g += 1\nprint(g)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17406": {"id": 17406, "code": "S = \"1905\"\nif (int(S[:2])>12 or int(S[:2])==0) and (int(S[2:])>12 or int(S[2:])==0):\n    print('NA')\nelif (int(S[:2])<=12 and int(S[:2])!=0) and (int(S[2:])>12 or int(S[2:])==0):\n    print('MMYY')\nelif (int(S[2:])<=12 and int(S[2:])!=0) and (int(S[:2])>12 or int(S[:2])==0):\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "13257": {"id": 13257, "code": "s = \"haiku,atcoder,tasks\"\ns = s.replace(\",\", \" \", 3)\nprint(s)", "coverage": [">", ">", ">"]}, "15443": {"id": 15443, "code": "X = 13;Y = 3;Z = 1\nans = (((X-Z)//(Y+Z)))\nprint(ans)", "coverage": [">", ">", ">"]}, "7784": {"id": 7784, "code": "N = 4;K = 3\narr = [2, 3, 1, 4]\nprint(-(-(N-1)//(K-1)))", "coverage": [">", ">", ">"]}, "8788": {"id": 8788, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4677": {"id": 4677, "code": "s = \"xyz\"\nprint(f'{s[0]}{len(s[1:-1])}{s[-1]}')", "coverage": [">", ">"]}, "4344": {"id": 4344, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(60*H2+M2-(60*H1+M1)-K)", "coverage": [">", ">", ">", ">", ">"]}, "3346": {"id": 3346, "code": "A = 12;B = 4\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "8959": {"id": 8959, "code": "n = 5\nl1 = [3, 2, 2, 4, 1]\nl2 = [1, 2, 2, 2, 1]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "2305": {"id": 2305, "code": "n = 10;a = 3;b = 5\nans1=min(a,b)\nif a+b>n:\n    ans2=a+b-n\nelse:\n    ans2=0\nprint(ans1,ans2)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "17293": {"id": 17293, "code": "a = \"D\";b = \"H\"\nret = \"\"\nif a == \"H\":\n  ret = b\nelse:\n  if b == \"H\":\n    ret = \"D\"\n  else:\n    ret = \"H\"\nprint(ret)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "2194": {"id": 2194, "code": "n = 10;a = 3;b = 5\nM=min(a,b)\nm=a+b-n\nif(m<0):\n    m=0\nprint(M,m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16591": {"id": 16591, "code": "a = \"D\";b = \"H\"\nc = ['H','D']\nc.remove(b)\nif a =='H':\n    print(b)\nelse:\n    print(*c)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7315": {"id": 7315, "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\nfor i in range(n):\n  h-= A[i]\nif h>0:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "2358": {"id": 2358, "code": "import sys\nimport math\nN = 0;M = 3\nif not ( 0 <= N <= 100 and 0 <= M <= 100 ): sys.exit()\nif not ( 2 <= N+M ): sys.exit()\nif not ( isinstance(N,int) and isinstance(M,int) ): sys.exit()\nans = 0\nif N >= 2:\n    ans += math.factorial(N) // (math.factorial(N - 2) * math.factorial(2))\nif M >= 2:\n    ans += math.factorial(M) // (math.factorial(M - 2) * math.factorial(2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "301": {"id": 301, "code": "s = \"codefestival\"\nk = 100\nresult=\"\"\nfor ss in s:\n    if ss==\"a\":\n        result+=\"a\"\n    else:\n        if k>= 123 - ord(ss):\n            k-=123-ord(ss)\n            result+=\"a\"\n        else:\n            result+=ss\nif k>0:\n    k=k%(123-97)\n    temp=chr((((ord(result[-1])-97)+k)%(123-97))+97)\n    print(result[:-1]+temp)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "18049": {"id": 18049, "code": "S = \"1905\"\nyear = int(S[0] + S[1])\nmonth = int(S[2] + S[3])\nif year <= 12 and year >= 1 and month >= 1 and month <= 12:\n    print('AMBIGUOUS')\nelif year >= 0 and year <= 99 and month >= 1 and month <= 12:\n    print('YYMM')\nelif year >= 1 and year <= 12 and month >= 0 and month <= 99:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "1094": {"id": 1094, "code": "n = 111\nif n <= 111:\n    print(111)\nelif n <= 222:\n    print(222)\nelif n <= 333:\n    print(333)\nelif n <= 444:\n    print(444)\nelif n <= 555:\n    print(555)\nelif n <= 666:\n    print(666)\nelif n <= 777:\n    print(777)\nelif n <= 888:\n    print(888)\nelif n <= 999:\n    print(999)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "4991": {"id": 4991, "code": "s = \"smiles\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "4077": {"id": 4077, "code": "import sys\nreadline = sys.stdin.buffer.readline\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nprint(60 * (h2 - h1) + m2 - m1 - k)", "coverage": [">", ">", ">", ">"]}, "16203": {"id": 16203, "code": "N = 2\nA = [100, 0]\nA.sort()\nn = A[-1]\nr1 = n / 2\ntemp = 10 ** 9\nr = 0\nfor i, x in enumerate(A):\n  if abs(r1 - x) <= temp and i != N-1:\n    r = x\n    temp = abs(r1 - x)\nprint(str(n)+\" \"+str(r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5992": {"id": 5992, "code": "n = 5\nif n%2 == 0 :\n    ans = n//2\n    print(ans)\nelse :\n    ans = n//2 + 1\n    print(ans)", "coverage": [">", ">", "!", "!", "!", ">", ">"]}, "16241": {"id": 16241, "code": "n = 2\na = [100, 0]\na.sort()\nnum1=a[-1]\nnum2=a[-1]/2\nnum3=a[-1]\nans=-1\nfor i in range(n-1):\n    if abs(a[i]-num2)<num3:\n        ans=a[i]\n        num3=abs(a[i]-num2)\nprint(num1,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11759": {"id": 11759, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nM1 = 1 if M1 + 1 > 12 else M1 + 1\nif M1 == M2 and D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4325": {"id": 4325, "code": "m = [10, 0, 15, 0, 30]\nl = m[0]*60\nn = m[2]*60\ns = l + m[1]\nk = n + m[3]\na = k - s\nprint(a-m[4])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15367": {"id": 15367, "code": "import math\nx = 64146;y = 123;z = 456\nprint(int(math.floor((x - z) / (y + z))))", "coverage": [">", ">", ">"]}, "18763": {"id": 18763, "code": "H = 3\nW = 7\nN = 10\nv = max(H, W)\nans = N // v\nif N%v != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6878": {"id": 6878, "code": "H = 211;N = 5\nlist=[]\nfor i in map(int,\"31 41 59 26 53\".split()):\n    list.append(i)\nif H - sum(list) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "2938": {"id": 2938, "code": "s = \"35753\"\nans=1000\nfor i in range(len(s)-2):\n    n=''\n    n+=s[i]\n    n+=s[i+1]\n    n+=s[i+2]\n    n=int(n)\n    ans=min(abs(n-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15997": {"id": 15997, "code": "a = 20;b = 30\nif a<=b*2:\n    print(0)\nelse:\n    print(a-b*2)", "coverage": [">", ">", ">", "!", "!"]}, "14358": {"id": 14358, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup=2\nans=1\nfor i in range(1,n):\n    if up==2:\n        if a[i-1]<a[i]:\n            up=1\n        elif a[i-1]>a[i]:\n            up=0\n    elif up==1 and a[i-1]>a[i]:\n        up=2\n        ans+=1\n    elif up==0 and a[i-1]<a[i]:\n        up=2\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17436": {"id": 17436, "code": "S = \"1905\"\nl = int(S[:2])\nr = int(S[2:])\na = 0\nans = ['NA', 'MMYY', 'YYMM', 'AMBIGUOUS']\nif 0 < l and l < 13:\n  a += 1\nif 0 < r and r < 13:\n  a += 2\nprint(ans[a])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "12514": {"id": 12514, "code": "A = 1;B = 1;K = 1\ncount = 0\nfor i in range(1,max(A,B)+1)[::-1]:\n  if A%i==0 and B%i==0:\n    count += 1\n    if count == K:\n      break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14010": {"id": 14010, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt, t = 0, 0\nfor i in range(1,n):\n    if a[i] == a[i - 1] and t == 0:\n        continue\n    elif a[i] >= a[i - 1] and t >= 0:\n        t = 1\n    elif a[i] <= a[i - 1] and t <= 0:\n        t = -1\n    else:\n        cnt += 1\n        t = 0\nelse:\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">"]}, "2185": {"id": 2185, "code": "n = 10;a = 3;b = 5\nmax_sub = min(a, b)\nmin_sub = max_sub - (n-max(a, b))\nprint(max_sub, min_sub if min_sub > 0 else 0)", "coverage": [">", ">", ">", ">"]}, "18161": {"id": 18161, "code": "s = \"1905\"\nv=0\nfor i in range(4):\n    v = v*10+int(s[i])\nv1 = v//100\nv2 = v%100\nif 12>=v1>=1 and 12>=v2>=1:\n    print(\"AMBIGUOUS\")\nelif (v1>=13 or v1==0) and 12>=v2>=1:\n    print(\"YYMM\")\nelif (v2>=13 or v2==0) and 12>=v1>=1:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "4510": {"id": 4510, "code": "a = \"internationalization\"\nprint(f\"{a[0]}{len(a)-2}{a[len(a)-1]}\")", "coverage": [">", ">"]}, "16625": {"id": 16625, "code": "a = \"D\";b = \"D\"\nprint(b if a=='H' else ('H' if b==\"D\" else 'D'))", "coverage": [">", ">"]}, "15794": {"id": 15794, "code": "x = 13;y = 3;z = 1\nans = 0\nt = z + y + z\nwhile t <= x:\n  ans += 1\n  t += y\n  t += z\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5004": {"id": 5004, "code": "S = \"xyz\"\ns_num=len(S)-2\nprint(S[0]+str(s_num)+S[-1])", "coverage": [">", ">", ">"]}, "16140": {"id": 16140, "code": "n = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nm = A[-1]\nM = [abs((m / 2) - a) for a in A[: -1]]\nr = A[M.index(min(M))]\nprint(m, r)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8541": {"id": 8541, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16682": {"id": 16682, "code": "a = \"D\";b = \"D\"\nif (a==\"H\" and b==\"H\")or(a==\"D\"and b==\"D\"):\n    print(\"H\")\nelif (a==\"H\" and b==\"D\") or (a==\"D\" and b==\"H\"):\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "18592": {"id": 18592, "code": "h = 2\nw = 100\nn = 200\nif h >= w:\n  print(-(-n//h))\nelif w > h:\n  print(-(-n//w))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "10174": {"id": 10174, "code": "n = 8\ns = \"))))((((\"\ncnt=0\nfor i in s:\n    if i==\"(\": cnt+=1\n    elif cnt>=1: cnt-=1\ncnt2=0\nfor i in range(n-1,-1,-1):\n    if s[i]==\")\": cnt2+=1\n    elif cnt2>=1: cnt2-=1\nprint(\"(\"*cnt2+s+\")\"*cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6730": {"id": 6730, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\ns = sum(a)\nif h > s:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7614": {"id": 7614, "code": "a = 20;b = 3\nl = [4, 5, 6]\nl[::-1]\ns=0\nf=0\nfor i in range(len(l)):\n  s+=l[i]\n  if s>=a:\n    f=1\n    break \n  else:\n    continue\nif f==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "2266": {"id": 2266, "code": "N = 10;A = 3;B = 5\nans1=min(A,B);ans2=max(0,A+B-N)\nprint(ans1,ans2)", "coverage": [">", ">", ">"]}, "18063": {"id": 18063, "code": "S = \"1700\"\nformer = int(S[:2])\nlatter = int(S[2:])\nif((former >= 13 or former == 0) and 1 <= latter <= 12):\n    print(\"YYMM\")\nif((latter >= 13 or latter == 0) and 1 <= former <= 12):\n    print(\"MMYY\")\nif(1 <= former <= 12 and 1 <= latter <= 12):\n    print(\"AMBIGUOUS\")\nif((former >= 13 or former == 0) and (latter >= 13 or latter == 0)):\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "7888": {"id": 7888, "code": "N = 3;K = 3\nA = [1, 2, 3]\nans = 1\nref = K\nwhile ref < N:\n    ans += 1\n    ref += K-1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "19328": {"id": 19328, "code": "N = 999999999\nprint(N) if N % 2 == 0 else print(2*N)", "coverage": [">", ">"]}, "6768": {"id": 6768, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nsum_A = sum(A)\nif H <= sum_A:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15371": {"id": 15371, "code": "X = 100000;Y = 1;Z = 1\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "15088": {"id": 15088, "code": "import itertools\nimport math\nfrom math import factorial\nN = 1;P = 1\nAs = [50]\nodd = 0\neven = 0\nfor A in As:\n    if(A % 2 == 0):\n        even += 1\n    else:\n        odd += 1\neven_combi = 0\nfor i in range(even+1):\n    even_combi += math.factorial(even) // math.factorial(i) // math.factorial(even-i)\nodd_combi = 0\nif(P == 0):\n    for i in range(0,odd + 1,2):\n        odd_combi += math.factorial(odd) // math.factorial(i) // math.factorial(odd-i)\nelse:\n    for i in range(1, odd + 1 , 2):\n        odd_combi += math.factorial(odd) // math.factorial(i) // math.factorial(odd-(i))\nprint(odd_combi*even_combi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "9268": {"id": 9268, "code": "S = \"2017/01/07\"\nS=\"2018\"+S[4:]\nprint(S)", "coverage": [">", ">", ">"]}, "17826": {"id": 17826, "code": "s = \"1905\"\ns1 = int(s[0]+s[1])\ns2 = int(s[2]+s[3])\nL=[]\nfor i in range(1, 13):\n    L.append(i)\nif s1 not in L and s2 not in L:\n    print('NA')\nelif s1 in L and s2 not in L:\n    print('MMYY')\nelif s1 not in L and s2 in L:\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4794": {"id": 4794, "code": "s = \"xyz\"\nans = []\nans.append(s[0])\nans.append(len(s)-2)\nans.append(s[-1])\nprint(''.join(map(str,ans)))", "coverage": [">", ">", ">", ">", ">", ">"]}, "9289": {"id": 9289, "code": "S = ['2017', '01', '31']\nS[0] = '2018'\nprint('/'.join(S))", "coverage": [">", ">", ">"]}, "11995": {"id": 11995, "code": "a = 11;b = 30\nc = 12;d = 1\nprint([0,1][a==c-1])", "coverage": [">", ">", ">"]}, "2643": {"id": 2643, "code": "s={1,7,9,4}\nt = {0, 9, 4, 8}\nprint(\"YES\" if t==s else \"NO\")", "coverage": [">", ">", ">"]}, "12555": {"id": 12555, "code": "a = 8;b = 12;k = 2\nminnum = min(a,b)\nmaxnum = max(a,b)\nlis = []\nfor mi in reversed(range(1,minnum+1)):\n  if minnum % mi == 0 and maxnum % mi == 0:\n    lis.append(mi)\nprint(lis[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5961": {"id": 5961, "code": "n = 100\nprint(-(-n//2))", "coverage": [">", ">"]}, "16615": {"id": 16615, "code": "a = \"D\";b = \"H\"\nprint((\"D\", \"H\")[a == b])", "coverage": [">", ">"]}, "3794": {"id": 3794, "code": "X = 100000;Y = 1;Z = 1\nX -= Z\nprint(X//(Y+Z))", "coverage": [">", ">", ">"]}, "8129": {"id": 8129, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nprint(math.ceil((N - K) / (K - 1)) + 1) ", "coverage": [">", ">", ">", ">"]}, "567": {"id": 567, "code": "s = \"xyz\"\nk = 4\nfor i in range(len(s)):\n    if s[i] != \"a\":\n        req = ord(\"z\") - ord(s[i]) + 1\n        if req <= k:\n            k -= req\n            s = s[:i] + \"a\" + s[i+1:]\nif k > 0:\n    s = s[:-1] + chr(ord(s[-1]) + k%26)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1771": {"id": 1771, "code": "N = 100;A = 100;B = 100\nM = None\nm = None\nif A + B <= N:\n    M = min(A, B)\n    m = 0\nelse:\n    M = min(A, B)\n    m = A + B - N\nprint(M, m)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "11866": {"id": 11866, "code": "from collections import Counter, defaultdict\na = 11;b = 16\nc = 11;d = 17\nprint(\"1\" if c == a+1 else \"0\")", "coverage": [">", ">", ">", ">"]}, "4758": {"id": 4758, "code": "s = \"xyz\"\nn = len(s)\na = n-2\nprint(s[0] + str(n-2) + s[n-1])", "coverage": [">", ">", ">", ">"]}, "2018": {"id": 2018, "code": "N = 10;A = 3;B = 5\nm = min(A, B)\nM = max(A + B - N, 0)\nprint(m, M)", "coverage": [">", ">", ">", ">"]}, "6733": {"id": 6733, "code": "H = 10;N = 3\nC = [4, 5, 6]\ns = 0\nfor i in range(N):\n    s += C[i]\nr = H - s\nif r <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7729": {"id": 7729, "code": "import math\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(math.ceil((n-k)/(k-1))+1)", "coverage": [">", ">", ">", ">"]}, "15645": {"id": 15645, "code": "X = 64146;Y = 123;Z = 456\nn = X // (Y+Z)\nif X % (Y+Z) < Z :\n    print(n-1)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!", ">"]}, "159": {"id": 159, "code": "S = ['a']\nK = 25\nfor i, s in enumerate(S):\n    if s == \"a\":\n        pass\n    elif ord('z') - ord(s) + 1 <= K:\n        S[i] = 'a'\n        K -= ord('z') - ord(s) + 1\nK %= 26\nS[-1] = chr((ord(S[-1]) - ord('a') + K) % 26 + ord('a'))\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "8636": {"id": 8636, "code": "N = 1\nA = [2]\nB = [3]\nfor i in range(1,N): A[i]+=A[i-1]\nfor i in range(N-2,-1,-1): B[i]+=B[i+1]\nans=max(A[i]+B[i] for i in range(N))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19464": {"id": 19464, "code": "s = 3\nif s % 2 == 0:\n    print(int(s))\nelse:\n    print(int(s*2))", "coverage": [">", ">", "!", "!", ">"]}, "14997": {"id": 14997, "code": "n = 3;p = 0\nA = [1, 1, 1]\ncheck = all(a%2 == 0 for a in A)\nans = 0\nif check and p == 0:\n  ans = 1 << n\nif not check:\n  ans = 1 << (n-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "4431": {"id": 4431, "code": "s = \"xyz\"\nprint('{}{}{}'.format(s[0],len(s)-2,s[-1]))", "coverage": [">", ">"]}, "17182": {"id": 17182, "code": "a = \"H\";b = \"H\"\nif a=='H':\n    a=1\nelse:\n    a=0\nif b=='H':\n    b=1\nelse:\n    b=0\nif a^b==0:\n    print('H')\nelse :\n    print('D')", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!"]}, "3552": {"id": 3552, "code": "A = 20;B = 30\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", ">", "!", "!"]}, "8420": {"id": 8420, "code": "n = 1\na_1 = [2]\na_2 = [3]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9214": {"id": 9214, "code": "s = \"2017/01/07\"\nchange = \"2018\" + s[4:len(s)]\nprint(change)", "coverage": [">", ">", ">"]}, "18617": {"id": 18617, "code": "h = 3\nw = 7\nn = 10\nif n % max(h,w) == 0:\n  print(n // max(h,w))\nelse:\n  print(n // max(h,w) + 1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18661": {"id": 18661, "code": "h = 2\nw = 100\nn = 200\nans = 0\nsum = 0\nwhile(sum < n):\n  if h >= w :\n    sum += h\n    ans += 1\n    w -= 1\n  else :\n    sum += w\n    ans += 1\n    h -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "15057": {"id": 15057, "code": "N = 3;P = 0\nodd = 3\neven = N-odd\nif odd == 0:\n    if P == 0:\n        print(2**even)\n    else:  \n        print(0)\nelse:\n    print(2**even * (2**odd//2))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "3118": {"id": 3118, "code": "S = \"1111111111\"\nn = len(S)\nres = 10 ** 6\nfor i in range(n-2):\n    s = int(S[i:i+3])\n    res = min(res, abs(s - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4041": {"id": 4041, "code": "a = 10;b = 0;c = 12;d = 0;K = 120\nhour = (c-a) * 60\nmin = d - b\nans = hour + min - K\nprint(ans) ", "coverage": [">", ">", ">", ">", ">"]}, "12619": {"id": 12619, "code": "a = 8;b = 12;k = 2\nc = min(a,b)\nlist = []\nfor ci in range(1,c+1):\n    if a % ci == 0 and b % ci == 0:\n        list.append(ci)\nprint(list[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3291": {"id": 3291, "code": "a = 12;b = 4\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", ">", "!"]}, "4622": {"id": 4622, "code": "s = \"smiles\"\nn = str(len(s)-2)\nprint(s[0]+n+s[-1])", "coverage": [">", ">", ">"]}, "7472": {"id": 7472, "code": "H = 20;N = 3\nlist = [4, 5, 6]\nfor i in list:\n    H=H-i\nif H<=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "5962": {"id": 5962, "code": "N = 5\nprint(max(N//2, (N+1)//2))", "coverage": [">", ">"]}, "12023": {"id": 12023, "code": "a = 11;b = 16\nc = 11;d = 17\nprint(\"0\" if a == c else \"1\")", "coverage": [">", ">", ">"]}, "9042": {"id": 9042, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\ns = list(sorted([a, b, c, d, e]))\nd_min = s[0]\nd_max = s[-1]\nif d_max - d_min > k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8706": {"id": 8706, "code": "from itertools import accumulate\nN = 4\nA1 = [0, 1, 2, 3, 4]\nA2 = [0, 1, 2, 3, 4]\nans = 0\nfor i in range(1, N + 1):\n    cur = A1[i - 1]\n    if i < N:\n        cur += A2[N] - A2[i]\n    ans = max(ans, cur + A1[i] - A1[i - 1] + A2[i] - A2[i - 1])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14466": {"id": 14466, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = A[0]\nisUp = True\nisDown = True\nans = 0\nfor a in A[1:]:\n  if prev == a:\n    pass\n  elif prev < a:\n    isDown = False\n    if not isUp:\n      isUp = True\n      isDown = True\n      ans += 1\n  elif a < prev:\n    isUp = False\n    if not isDown:\n      isUp = True\n      isDown = True\n      ans += 1\n  prev = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17421": {"id": 17421, "code": "a = \"1905\"\nb = int(a[:2])\nc = int(a[2:])\nif 0< b < 13:\n    a_month_flag = 1\n    a_year_flag = 1\nelif b == 0:\n    a_month_flag = 0\n    a_year_flag = 0\nelse:\n    a_month_flag = 0\n    a_year_flag = 1\nif 0< c < 13:\n    b_month_flag = 1\n    b_year_flag = 1\nelif c == 0:\n    b_month_flag = 0\n    b_year_flag = 0\nelse:\n    b_month_flag = 0\n    b_year_flag = 1\nif a_month_flag ==1 and b_month_flag==1:\n    print(\"AMBIGUOUS\")\nelif a_month_flag == 1 and b_month_flag == 0:\n    print(\"MMYY\")\nelif a_month_flag == 0 and b_month_flag ==1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "10321": {"id": 10321, "code": "import math\nnum1 = 1;num2 = 1;target = 1\nnumber = math.gcd(num1, num2)\ntable = []\nfor j in range(1, number+1):\n    if number % j == 0:\n        table.append(j)\nlist.sort(table, reverse=True)\nprint(table[target-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10668": {"id": 10668, "code": "import math\na = 8;b = 12;k = 2\nc=math.gcd(a,b)\nd=[i for i in range(1,c+1) if c%i==0]\nprint(d[-k])", "coverage": [">", ">", ">", ">", ">"]}, "15733": {"id": 15733, "code": "x = 64146;y = 123;z = 456\nx -= z\nprint(x // (y + z))", "coverage": [">", ">", ">"]}, "18246": {"id": 18246, "code": "a = 14\nb = 12\nc = 112\nif a<b:\n  a,b=b,a\nif c%a==0:\n  print(c//a)\nelse:\n  print(c//a+1)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "688": {"id": 688, "code": "k = 101\nx = 7\nans = 1\nif k%2 == 0 or k%5 ==0:\n  print(-1)\n  exit()\nelif 7%k == 0:\n  ans = 1\nelse:\n  for i in range (1,k):\n    x = (x*10+7)%k\n    if x%k == 0:\n      ans = i+1\n      break\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "4175": {"id": 4175, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ns = h1 * 60 + m1\ne = h2 * 60 + m2\nprint(e - k - s)", "coverage": [">", ">", ">", ">"]}, "5321": {"id": 5321, "code": "N = 2\nprint(N//2 if N%2==0 else N//2+1)", "coverage": [">", ">"]}, "11444": {"id": 11444, "code": "S = \"SAT\"\nif(S=='SUN'):\n    print(7)\nelif(S=='MON'):\n    print(6)\nelif(S=='TUE'):\n    print(5)\nelif (S=='WED'):\n    print(4)\nelif (S=='THU'):\n    print(3)\nelif (S=='FRI'):\n    print(2)\nelse:\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "9245": {"id": 9245, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = '8'\nprint(*S, sep=\"\")", "coverage": [">", ">", ">"]}, "12970": {"id": 12970, "code": "X = 5\nif X in [7,5,3]:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "68": {"id": 68, "code": "s = \"codefestival\"\nK = 100\nrlt = ''\nfor i in range(len(s)-1):\n  c = (26-ord(s[i])+ord('a'))%26\n  if K >= c:\n    rlt += 'a'\n    K -= c\n  else:\n    rlt += s[i]\nrlt += chr((K + ord(s[-1]) - ord('a'))%26 + ord('a'))\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15745": {"id": 15745, "code": "X = 12;Y = 3;Z = 1\nprint( (X-Z) // (Z+Y) )", "coverage": [">", ">"]}, "3055": {"id": 3055, "code": "import sys\nimport copy\nimport math\nimport itertools\nS = \"1234567876\"\ntmp=753\nfor i in range(len(S)):\n    if abs(int(S[i:i+3])-753)<tmp:\n        tmp=abs(int(S[i:i+3])-753)\nprint(tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5822": {"id": 5822, "code": "n = 2\nprint([n//2+1,n//2][n%2==0])", "coverage": [">", ">"]}, "8530": {"id": 8530, "code": "n = 4\nL = [[1, 1, 1, 1], [1, 1, 1, 1]]\nans = 0\nfor i in range(n):\n  cnt = 0\n  for j in range(n):\n    if j < i: \n      cnt += L[0][j]\n    elif j == i:\n      cnt += L[0][j] + L[1][j]\n    else:\n      cnt += L[1][j]\n  ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8678": {"id": 8678, "code": "n = 1\na = [2]\nb = [3]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2508": {"id": 2508, "code": "n = {'9', '2', '1'}\na = {\"1\", \"9\", \"7\", \"4\"}\nprint(\"YES\" if n == a else \"NO\")", "coverage": [">", ">", ">"]}, "5873": {"id": 5873, "code": "N = 2\ns = -( - N // 2 )\nprint(s)", "coverage": [">", ">", ">"]}, "3400": {"id": 3400, "code": "a = 12;b = 4\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", ">"]}, "12417": {"id": 12417, "code": "a = \"atcoder\"\nb = len(a)\nc = (b-1)//2\nd = (b+3)//2\nif a[:(c)] == a[(d-1):]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13959": {"id": 13959, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nsw = 0\ncount = 1\nfor i in range(n-1):\n    if sw == 1:\n        if a[i+1]<a[i]:\n            sw = 0\n            count += 1\n    elif sw == -1:\n        if a[i+1]>a[i]:\n            sw = 0\n            count += 1\n    else:\n        if a[i+1]>a[i]:\n            sw = 1\n        elif a[i]>a[i+1]:\n            sw = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6647": {"id": 6647, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    ai = bisect.bisect_left(A, b)\n    ci = bisect.bisect_right(C, b)\n    ans += ai * (N-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14484": {"id": 14484, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nstatus = 0\nans = 1\nfor i in range(1, n):\n    if status == 0:\n        if a[i-1] < a[i]:\n            status = 1\n        elif a[i-1] > a[i]:\n            status = 2\n    elif status == 1:\n        if a[i-1] > a[i]:\n            ans += 1\n            status = 0\n    elif status == 2:\n        if a[i-1] < a[i]:\n            ans += 1\n            status = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "2685": {"id": 2685, "code": "n = {1, 4, 9, 7}\nif n == set({1, 7, 9, 4}):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "11361": {"id": 11361, "code": "days = ('SUN','MON','TUE','WED','THU','FRI','SAT')\nDay_of_the_week = \"SUN\"\nfor index, day in enumerate(days):\n    if Day_of_the_week == day:\n        print(7 - index)", "coverage": [">", ">", ">", ">", ">"]}, "4234": {"id": 4234, "code": "h = [10, 0, 15, 0, 30]\nif h[1] < h[3]:\n    print((h[2]-h[0])*60+h[3]-h[1]-h[4])\nelse:\n    print((h[2]-h[0]-1)*60+60-h[1]+h[3]-h[4])", "coverage": [">", ">", "!", "!", ">"]}, "4333": {"id": 4333, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nT1=H1*60+M1\nT2=H2*60+M2\nprint(max(T2-T1-K,0))", "coverage": [">", ">", ">", ">"]}, "6264": {"id": 6264, "code": "import bisect\nfrom itertools import accumulate\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nD = [0]*(n+1)\nfor i in range(n):\n    D[i+1] = n-bisect.bisect_right(C,B[i])\nD = tuple(accumulate(D))\nans = 0\nfor i in range(n):\n    j = bisect.bisect_right(B,A[i])\n    ans += D[-1]-D[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5537": {"id": 5537, "code": "n = 2\ngou=n//2\ngou+=n%2\nprint(gou)", "coverage": [">", ">", ">", ">"]}, "18175": {"id": 18175, "code": "s = \"1700\"\ns1=int(s[:2])\ns2=int(s[2:])\nif 1<= s1 <=12 and 1<= s2 <= 12:\n    print(\"AMBIGUOUS\")\nelif 0<= s1 <=99 and 1<= s2 <= 12:\n    print(\"YYMM\")\nelif 1<= s1 <=12 and 0<= s2 <= 99:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "11036": {"id": 11036, "code": "s = \"level\"\ncount=0\nn=int(len(s))\nt1=s[:int((n-1)/2)]\nt2=s[int((n+3)/2-1):]\nresult='No'\nif s==s[::-1]:\n    if t1==t1[::-1]:\n        if t2==t2[::-1]:\n            result='Yes'\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1133": {"id": 1133, "code": "n = \"750\"\na = n[0] * 3\nb = str(int(n[0])+1) * 3\nprint(a if a >= n else b)", "coverage": [">", ">", ">", ">"]}, "436": {"id": 436, "code": "s = \"a\"\nn = 25\nl=\"\"\nfor i in range(len(s)):\n    f=(26+ord(\"a\")-ord(s[i]))%26\n    if n>=f:n-=f;l+=\"a\"\n    else:l+=s[i]\n    if n==0:print(l+s[i+1:]);exit()\nprint(l[:-1]+chr(ord(l[-1])+n%26))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "11070": {"id": 11070, "code": "s = \"akasaka\"\nn = len(s)\nl1 = int((n-1)/2)\nl2 = int((n+3)/2)\nif s == s[::-1] and s[:l1] == s[l2-1:n] :   \n    print('Yes')\nelse :\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11237": {"id": 11237, "code": "n = \"SUN\"\nlis=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nans=7\nfor i in lis:\n    if n==i:\n        print(ans)\n        break\n    ans-=1", "coverage": [">", ">", ">", ">", ">", ">", ">", "!"]}, "968": {"id": 968, "code": "n = 111\nv = [999,888,777,666,555,444,333,222,111]\nans = 0\nfor i in range(9):\n    if v[i] >= n:\n        ans = v[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18836": {"id": 18836, "code": "h = 14\nw = 12\nn = 112\nif h >= w:\n    _max = h\n    _min = w\nelse:\n    _max = w\n    _min = h\nfor i in range(1, _min+1):\n    if _max * i >= n:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "13617": {"id": 13617, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a, b, c)", "coverage": [">", ">"]}, "2952": {"id": 2952, "code": "a = \"1234567876\"\nla = len(a)\nres = 753\nfor i in range(la-2):\n    temp = a[i:i+3]\n    tempp = abs(int(temp)-753)\n    res = min(res,tempp)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3429": {"id": 3429, "code": "A = 20;B = 30\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11939": {"id": 11939, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 + 1 == m2 and d2 == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3560": {"id": 3560, "code": "a = 20;b = 15\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "14363": {"id": 14363, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < N:\n    if i == N-1:\n        ans += 1\n        break\n    if A[i] == A[i+1]:\n        i += 1\n    elif A[i] > A[i+1]:\n        while i < N-1 and A[i] >= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\n    elif A[i] < A[i+1]:\n        while i < N-1 and A[i] <= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1670": {"id": 1670, "code": "N = 10;A = 3;B = 5\nrmax = min(A, B)\nrmin = max(0, A+B-N)\nprint(rmax, rmin)", "coverage": [">", ">", ">", ">"]}, "10952": {"id": 10952, "code": "s = \"atcoder\"\nn = len(s)\nsformer = s[:int((n - 1) / 2)]\nslatter = s[int((n + 1) / 2):]\nif s == s[-1::-1] and sformer == sformer[-1::-1] and slatter == slatter[-1::-1]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12976": {"id": 12976, "code": "X = 5\nif X==7 or X==5 or X==3:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "19482": {"id": 19482, "code": "x = 10\nif x%2:\n  print(x*2)\nelse:\n  print(x)", "coverage": [">", ">", "!", "!", ">"]}, "7783": {"id": 7783, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = -(-(N-1) // (K-1))\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18277": {"id": 18277, "code": "H = 2\nW = 100\nN = 200\na = max(H, W)\nprint(N // a + min(1, N % a))", "coverage": [">", ">", ">", ">", ">"]}, "8667": {"id": 8667, "code": "n = 1\np = [2]\nq = [3]\nans = sum(p)+q[n-1]\ntmp = ans\nfor i in range(n-1):\n  tmp = tmp + q[n-i-2] - p[n-i-1]\n  ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16516": {"id": 16516, "code": "n = 2\na = [100, 0]\nmaxa = max(a)\nmini = [[] for _ in range(n)]\nfor i, v in enumerate(a):\n    r = maxa - v\n    mini[i] = [v, abs(v - r)]\nmini.sort(key=lambda x: x[1])\nif n == 2:\n    print(maxa, min(a))\nelse:\n    print(maxa, mini[0][0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11492": {"id": 11492, "code": "input_weekday = \"SAT\"\nresult = 0\nif input_weekday == 'SUN':\n    result = 7\nelif input_weekday == 'MON':\n    result = 6\nelif input_weekday == 'TUE':\n    result = 5\nelif input_weekday == 'WED':\n    result = 4\nelif input_weekday == 'THU':\n    result = 3\nelif input_weekday == 'FRI':\n    result = 2\nelif input_weekday == 'SAT':\n    result = 1\nprint(result)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "3588": {"id": 3588, "code": "n = 20;m = 15\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", ">", "!", "!"]}, "19522": {"id": 19522, "code": "i = 3\nprint(i if i%2==0 else i*2)", "coverage": [">", ">"]}, "17250": {"id": 17250, "code": "a = \"H\";b = \"H\"\nif a==b:print('H')\nelse:print('D')", "coverage": [">", ">", "!"]}, "11056": {"id": 11056, "code": "s = \"atcoder\"\nn=len(s)//2\nif s[:n]==s[n+1:]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "5131": {"id": 5131, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\ny=str(len(s)-2)\nprint(s[0]+y+s[-1])", "coverage": [">", ">", ">"]}, "12903": {"id": 12903, "code": "x = 6\nif x==7 or x==5 or x==3:\n    print(\"YES\")\nelse:print(\"NO\")", "coverage": [">", ">", "!", ">"]}, "3428": {"id": 3428, "code": "A = 20;B = 15\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18783": {"id": 18783, "code": "H = 2\nW = 100\nN = 200\nr = (N +max(H, W)-1)//max(H, W)\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "11154": {"id": 11154, "code": "s = \"level\"\nn = len(s)\nfront = (n-1) // 2\nrear = (n+2) // 2\nsf = s[:front]\nsr = s[rear:]\nsrev = s[::-1]\nsfrev = sf[::-1]\nsrrev = sr[::-1]\nif sfrev == sf and srrev == sr and srev == s:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5499": {"id": 5499, "code": "N = 100\nprint(int(N/2) if N % 2 == 0 else int((N+1)/2))", "coverage": [">", ">"]}, "8547": {"id": 8547, "code": "N = 1\np=[0]\nq=[0]\nA1 = [2]\nA2 = [3]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11844": {"id": 11844, "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nif M1 == M2 :\n    print(0)\nelse :\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "776": {"id": 776, "code": "K = 101\na = 7 % K\ncnt = 1\nwhile a:\n    a = (10*a+7) % K\n    cnt += 1\n    if K < cnt:\n        cnt = -1\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8381": {"id": 8381, "code": "n = 4\nla1 = [1, 1, 1, 1]\nla2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3117": {"id": 3117, "code": "S = \"35753\"\nn = len(S)\nres = 10 ** 6\nfor i in range(n-2):\n    s = int(S[i:i+3])\n    res = min(res, abs(s - 753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5056": {"id": 5056, "code": "s = \"internationalization\"\nt = 0\nfor i in range(1,len(s)-1):\n    t += 1\nprint(s[0] + str(t) + s[len(s)-1])", "coverage": [">", ">", ">", ">", ">"]}, "4482": {"id": 4482, "code": "voca = \"xyz\"\na = len(voca) - 2\noutput = voca[0] + str(a) + voca[-1]\nprint(output)", "coverage": [">", ">", ">", ">"]}, "8777": {"id": 8777, "code": "N = 4\nrow1 = [1, 1, 1, 1]\nrow2 = [1, 1, 1, 1]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13750": {"id": 13750, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh = h2 - h1\nm = m2 - m1\nm += 60 * h\nprint(m - k)", "coverage": [">", ">", ">", ">", ">"]}, "1588": {"id": 1588, "code": "n = 100;a = 100;b = 100\nm=0\ns=0\nif a<b:\n  m=a\nelse:\n  m=b\nif a+b>n:\n  s=a+b-n\nprint(m,s)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "16855": {"id": 16855, "code": "a = \"D\";b = \"H\"\nprint(\"H\" if a==b else \"D\")", "coverage": [">", ">"]}, "9496": {"id": 9496, "code": "S = \"2017/01/07\"\nprint(\"2018\"+S[4:])", "coverage": [">", ">"]}, "15152": {"id": 15152, "code": "x = 64145;y = 123;z = 456\ni=(x-(y+2*z))//(y+z)\nprint(i+1)", "coverage": [">", ">", ">"]}, "12659": {"id": 12659, "code": "x = \"6\"\nif x == '7' or x == '5' or x == '3':\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "2291": {"id": 2291, "code": "N = 10;A = 7;B = 5\nprint(str(min(A, B)) + \" \" + str(max(A + B - N, 0)))", "coverage": [">", ">"]}, "17685": {"id": 17685, "code": "import sys\ninput = \"<function <lambda>>\"\nS = \"1905\"\nf = int(S[:2])\ns = int(S[2:])\nif (f <= 0 and s > 12) or (f > 12 and s <= 0) or (f <= 0 and s <= 0) or (f > 12 and s > 12):\n    print(\"NA\")  \nelif (f > 12 and 0 < s <= 12) or (f <= 0 and 0 < s <= 12):\n    print(\"YYMM\")\nelif (0 < f <= 12 and s > 12) or (0 < f <= 12 and s <= 0):\n    print(\"MMYY\")\nelif 0 < f <= 12 and 0 < s <= 12:\n    print(\"AMBIGUOUS\") ", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "1798": {"id": 1798, "code": "list = [100, 100, 100]\nprint(min(list),(list[1] + list[2]) - list[0] if (list[1] + list[2]) - list[0] > 0 else 0)", "coverage": [">", ">"]}, "17221": {"id": 17221, "code": "a = \"D\";b = \"H\"\nprint(['D', 'H'][a==b])", "coverage": [">", ">"]}, "18004": {"id": 18004, "code": "s = \"0112\"\nl = list(s)\nx = int(l[0]+l[1])\ny = int(l[2]+l[3])\nif 0 < x < 13 and (y > 12 or y == 0):\n    print(\"MMYY\")\nelif (x > 12 or x == 0) and 0 < y < 13:\n    print(\"YYMM\")\nelif x > 12 or y > 12 or (x == 0 and y == 0):\n    print(\"NA\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17298": {"id": 17298, "code": "l = ['H', 'H']\nif (l[0]=='H' and l[1]=='H') or (l[0]=='D' and l[1]=='D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "18550": {"id": 18550, "code": "import math\nH = 2\nW = 100\nN = 200\nMax = max(H,W)\nprint(math.ceil(N/Max))", "coverage": [">", ">", ">", ">", ">", ">"]}, "16686": {"id": 16686, "code": "a = \"H\";b = \"H\"\nprint(\"H\" if a == b else \"D\")", "coverage": [">", ">"]}, "11568": {"id": 11568, "code": "now = \"SUN\"\nli=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i, d in enumerate(li):\n  if now == d:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "18341": {"id": 18341, "code": "H = 3\nW = 7\nN = 10\ncnt=0\nM=0\nif H>W:\n    selection=H\nelse:\n    selection=W\nwhile M<N:\n    cnt+=1\n    M+=selection\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "15500": {"id": 15500, "code": "x = 100000;y = 1;z = 1\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "9094": {"id": 9094, "code": "s = \"2017/01/07\"\nprint(s.replace('2017','2018'))", "coverage": [">", ">"]}, "11430": {"id": 11430, "code": "s = \"SAT\"\ndays = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(len(days)):\n  if days[i] == s:\n    print(7 - i)", "coverage": [">", ">", ">", ">", ">"]}, "8224": {"id": 8224, "code": "listlen = 4;rensuu = 3\nlistnum = [2, 3, 1, 4]\ncount = 0\ncount += (listlen - 1) // (rensuu - 1)\ncount += 1 if (listlen - 1) % (rensuu - 1) > 0 else 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16065": {"id": 16065, "code": "a = 20;b = 15\nc = 2*b\nif a - c <= 0:\n  print(0)\nelse:\n  print(a - c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13684": {"id": 13684, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nm1 += h1 * 60\nm2 += h2 * 60\nprint(m2 - m1 - k)", "coverage": [">", ">", ">", ">"]}, "13633": {"id": 13633, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "12750": {"id": 12750, "code": "x = \"5\"\nprint('YES' if x in '753' else 'NO')", "coverage": [">", ">"]}, "17750": {"id": 17750, "code": "S = \"1700\"\na,b=int(S[:2]),int(S[2:])\nif 0<a<13 and 0<b<13:\n    print('AMBIGUOUS')\nelif 0<a<13:\n    print('MMYY')\nelif 0<b<13:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "7517": {"id": 7517, "code": "h = 10;n = 3\na = [4, 5, 6]\nans = 'No'\ntotal = 0\nfor i in range(n):\n    total += a[i]\n    if total >= h:\n        ans = 'Yes'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9827": {"id": 9827, "code": "n = 8\nS = \"))))((((\"\nlc = 0\nrc = 0\nfor s in S:\n    if s=='(':\n        rc += 1\n    else:\n        if rc:\n            rc -= 1\n        else:\n            lc += 1\nprint('('*lc+S+')'*rc)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "8002": {"id": 8002, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nA_min = min(A)\nindex = A.index(A_min)\nans = 0\nleft = index\nright = N - 1 - index\nif left % (K - 1) != 0:\n    right -= K - 1 - left % (K - 1)\nelif right % (K - 1) != 0:\n    left -= K - 1 - right % (K - 1)\nans += math.ceil(left / (K - 1))\nans += math.ceil(right / (K - 1))   \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5006": {"id": 5006, "code": "s = \"smiles\"\nlong = len(s) - 2\nprint(s[0] + str(long) + s[len(s)-1])", "coverage": [">", ">", ">"]}, "10293": {"id": 10293, "code": "n = 6\nS = \")))())\"\nl = 0\nr = 0\nfor s in S:\n  if s == \"(\":\n    r += 1\n  else:\n    if r > 0:\n      r -= 1\n    else:\n      l += 1\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "11168": {"id": 11168, "code": "s = \"atcoder\"\nn=len(s)\nif(s==s[::-1]):\n    if((s[:(n-1)//2]==s[:(n-1)//2][::-1]) and (s[(n+4)//2-1:]==s[(n+4)//2-1:][::-1])):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "1894": {"id": 1894, "code": "n = 10;a = 3;b = 5\nif a+b-n > 0:\n  result = a +b-n\nelse:\n  result = 0\nprint(min(a,b),result)", "coverage": [">", ">", "!", "!", ">", ">"]}, "12378": {"id": 12378, "code": "import sys\nS = \"atcoder\"\nN=len(S)\nif S[:N//2]==S[N//2+1:][::-1]:\n  if N==3:\n    print(\"Yes\")\n  elif (N//2)%2==1:\n    if S[:(N//2)//2]==S[(N//2)//2+1:N//2][::-1] and S[N//2+1:-(N//2)//2]==S[-(N//2)//2+1:][::-1]:\n      print(\"Yes\")\n    else:\n      print(\"No\")\n  else:\n    if S[:(N//2)//2]==S[(N//2)//2:N//2][::-1] and S[N//2+1:-(N//2)//2]==S[-(N//2)//2:][::-1]:\n      print(\"Yes\")\n    else:\n      print(\"No\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14026": {"id": 14026, "code": "n = 6\nli = [1, 2, 3, 2, 2, 1]\nx = 0 \ni = 0 \nans = 0\nif n == 1:\n    print(1)\n    exit()\nwhile True:\n    if x == 0:\n        if li[i] < li[i+1]:\n            x = 1\n        elif li[i] > li[i+1]:\n            x = -1\n        else:\n            x = 0\n    if x == 1:\n        if li[i] > li[i+1]:\n            ans += 1\n            x = 0\n    if x == -1:\n        if li[i] < li[i+1]:\n            ans += 1\n            x = 0\n    i += 1\n    if i == n-1:\n        break\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "5073": {"id": 5073, "code": "s = \"xyz\"\na = len(s) - 2\nprint(s[0], a, s[len(s)-1], sep = \"\")", "coverage": [">", ">", ">"]}, "7469": {"id": 7469, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nA = sum(A)\nif H > A:\n    ans = \"No\"\nelse:\n    ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "1531": {"id": 1531, "code": "n = 750\nprint((n+110)//111*111)", "coverage": [">", ">"]}, "8729": {"id": 8729, "code": "n = 1\na1 = [2]\na2 = [3]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2000": {"id": 2000, "code": "n = 10;a = 3;b = 5\nma = min(a,b)\nif a+b <=n:\n  mi = 0\nelif a+b >n:\n  mi = abs(n-(a+b))\nprint(ma,mi)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16832": {"id": 16832, "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    if b == \"D\":\n        print(\"D\")\nif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    if b == \"D\":\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">"]}, "13030": {"id": 13030, "code": "line = \"5\"\nnum = [int(n) for n in line.split()][0]\npredicted_value = \"NO\"\nif num in [3, 5, 7]:\n    predicted_value = \"YES\"\nprint(predicted_value)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17670": {"id": 17670, "code": "s = 1905\na = s % 100\nb = ((s-a) / 100)\nif a <= 12 and b <= 12 and a != 0 and b != 0:\n  print(\"AMBIGUOUS\")\nelif b <= 12 and b != 0:\n  print(\"MMYY\")\nelif a <= 12 and a != 0:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "1232": {"id": 1232, "code": "n = 111\nfrom math import ceil\nprint(ceil(n/111)*111)", "coverage": [">", ">", ">"]}, "4022": {"id": 4022, "code": "a = [10, 0, 15, 0, 30]\nb = (a[2] * 60 + a[3]) - (a[0] * 60 + a[1])\nprint(b - a[4])", "coverage": [">", ">", ">"]}, "9883": {"id": 9883, "code": "N = 8\nS_ = \"))))((((\"\ns=S_\ncount = 0\nnew_left = 0\nnew_right = 0\nfor si in s:\n    if si == '(':\n        count += 1\n    else:\n        count -= 1\n        if count == -1:\n            count = 0\n            new_left += 1\nnew_right = count\nprint('(' * new_left + s + ')' * new_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "6797": {"id": 6797, "code": "H = 10;N = 3\nmy_list = [4, 5, 6]\nif H <= sum(my_list):\n    answer = 'Yes'\nelse:\n    answer = 'No'\nprint(answer)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2094": {"id": 2094, "code": "n = 100;a = 100;b = 100\nprint(*[min(a,b),max(a+b-n,0)],sep=' ')", "coverage": [">", ">"]}, "18108": {"id": 18108, "code": "s = \"0112\"\na = int(s[:2])\nb = int(s[2:])\nif 0<a<=12 and 0<b<=12:\n    print('AMBIGUOUS')\nelif a<=99 and 0<b<=12:\n    print('YYMM')\nelif 0<a<=12 and b<=99:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2187": {"id": 2187, "code": "n = 100;a = 100;b = 100\nmax_sub = min(a, b)\nmin_sub = max_sub - (n-max(a, b))\nprint(max_sub, min_sub if min_sub > 0 else 0)", "coverage": [">", ">", ">", ">"]}, "6205": {"id": 6205, "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nue = []\nfor i in range(n):\n    ue.append(bisect.bisect_left(a,b[i]))\nsita = []\nfor i in range(n):\n    sita.append(n - bisect.bisect_right(c,b[i]))\nans = 0\nfor i in range(n):\n    ans += ue[i]*sita[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19105": {"id": 19105, "code": "import sys\nN = 12\ntemp = 5\nans = 0\nif N%2:\n    print(0)\n    quit()\nelse:\n    N = N//2\n    while temp <= N:\n        ans += N//temp\n        temp *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6667": {"id": 6667, "code": "H = 10;N = 3\nA_ls = map(int, \"4 5 6\".split(' '))\nif sum(A_ls) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "14925": {"id": 14925, "code": "from math import factorial\nn = 2;p = 0\na = [1, 3]\ncnt = [0,0]\nfor i in a:\n    cnt[i%2] += 1\nans = 0\nwhile True:\n    if p > cnt[1]:\n        break\n    ans += factorial(cnt[1]) // factorial(p) // factorial(cnt[1] - p)\n    p += 2\nprint(ans * 2 ** cnt[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3782": {"id": 3782, "code": "x = 100000;y = 1;z = 1\nif x%(y+z)>=z :\n  print(x//(y+z))\nelse:\n  print(x//(y+z)-1)", "coverage": [">", ">", "!", "!", ">"]}, "12865": {"id": 12865, "code": "X = 6\nans=[3,5,7]\nif X in ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "13379": {"id": 13379, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5],s[6:13],s[14:20])", "coverage": [">", ">"]}, "1831": {"id": 1831, "code": "n = 10;a = 3;b = 5\nprint(min(a, b), max(0, (a + b) - n))", "coverage": [">", ">"]}, "3431": {"id": 3431, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 20;b = 15\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11874": {"id": 11874, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif D2 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "5126": {"id": 5126, "code": "s = \"smiles\"\nif len(s) >=3:\n    a = s[0] + str((len(s)-2)) + s[-1]\nprint(a)", "coverage": [">", ">", ">", ">"]}, "17236": {"id": 17236, "code": "say = \"DH\"\nif say=='HH' or say== 'DD':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", "!", "!", ">"]}, "15458": {"id": 15458, "code": "x = 64146;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "109": {"id": 109, "code": "import sys\ns = ['x', 'y', 'z']\nK = 4\ni = 0\nwhile i < len(s):\n    if K == 0:\n        break\n    if i == len(s) - 1:\n        n = (ord(s[i]) - ord(\"a\") + K) % 26\n        s[i] = chr(ord(\"a\") + n)\n        break\n    if s[i] == \"a\":\n        i += 1\n        continue\n    n = 26 - (ord(s[i]) - ord(\"a\"))\n    if n <= K:\n        s[i] = \"a\"\n        K -= n\n    i += 1\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "2191": {"id": 2191, "code": "n = 10;a = 3;k = 5\nif a >= k:\n\tmax = k\nelse:\n\tmax = a\nmin = a + k - n\nif min < 0:\n\tmin = 0\nprint(max, min)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "4206": {"id": 4206, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nr = (H2*60+M2)-(H1*60+M1)-K\nprint(r)", "coverage": [">", ">", ">"]}, "16824": {"id": 16824, "code": "a = \"H\";b = \"H\"\nresult = ''\nif(a == 'H' and b == 'H'):\n  result = 'H'\nelif(a == 'H' and b == 'D'):\n  result = 'D'\nelif(a == 'D' and b == 'H'):\n  result = 'D'\nelif(a == 'D' and b == 'D'):\n  result = 'H'\nprint(result)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "7458": {"id": 7458, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nattack = sum(A)\nif H <= attack:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7698": {"id": 7698, "code": "from math import ceil\nn = 3;k = 3\nA = [1, 2, 3]\nprint(ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "13843": {"id": 13843, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans=1;before=a[0];mode=0\nfor i,v in enumerate(a):\n    nmode=0\n    if before>v:\n        nmode=-1\n    elif before<v:\n        nmode=1\n    before=v\n    if mode*nmode==-1:\n        mode=0\n        ans+=1\n    elif mode==0:\n        mode=nmode\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13620": {"id": 13620, "code": "X = \"haiku\";Y = \"atcoder\";Z = \"tasks\"\nprint(X,Y,Z)", "coverage": [">", ">"]}, "5274": {"id": 5274, "code": "mylist = {'9', '2', '1'}\nif '1' in mylist and '9' in mylist and '7' in mylist and '4' in mylist:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "4810": {"id": 4810, "code": "st_list = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(st_list[0]+str(len(st_list[1:-1]))+st_list[-1]) ", "coverage": [">", ">"]}, "118": {"id": 118, "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n        if ord(\"z\")-ord(s[i])+1<=k:\n                k -= (ord(\"z\")-ord(s[i])+1)%26\n                s[i] = \"a\"\nif k: s[-1] = chr((ord(s[-1])+k-ord(\"a\"))%26+ord(\"a\"))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16138": {"id": 16138, "code": "N = 2\nl = [100, 0]\nA=max(l)\nmid=(A//2)+1 if A%2!=0 else A//2\ndis_min=float(\"Inf\")\nl.sort()\nans=1\nfor i in l:\n   if dis_min>abs(i-mid):\n      dis_min=abs(i-mid)\n      ans=i\nprint(A,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9947": {"id": 9947, "code": "N = 8\nS = \"))))((((\"\ni=0\nhidari=str()\nmigi=str()\na=0\nwhile i<N:\n  if S[i]==\")\":\n    hidari+=\"(\"\n    i+=1\n  else:\n    break\nwhile i<N:\n  if S[i]==\"(\":\n    a+=1\n  else:\n    a-=1\n  i+=1\nif a<0:\n  hidari+=abs(a)*\"(\"\nelif a>0:\n  migi+=a*\")\"\ns=hidari+S+migi\ni=0\nhidari=str()\nmigi=str()\na=0\nwhile i<N:\n  if S[i]==\")\":\n    hidari+=\"(\"\n    i+=1\n  else:\n    break\nwhile i<N:\n  if S[i]==\"(\":\n    if a<0:\n      a=0\n    a+=1\n    mina=0\n  else:\n    a-=1\n    if a<0:\n      if mina>a:\n        hidari+=\"(\"\n  i+=1\nif a>0:\n  migi+=a*\")\"\nt=hidari+S+migi\nif len(s)==len(t):\n  print(s)\nelif len(s)>len(t):\n  print(s)\nelse:\n  print(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "18107": {"id": 18107, "code": "s = \"1905\"\na = int(s[:2])\nb = int(s[2:])\nif 0<a<=12 and 0<b<=12:\n    print('AMBIGUOUS')\nelif a<=99 and 0<b<=12:\n    print('YYMM')\nelif 0<a<=12 and b<=99:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "18422": {"id": 18422, "code": "H = 3\nW = 7\nN = 10\nx = max(H,W)\nprint((N+x-1)//x)", "coverage": [">", ">", ">", ">", ">"]}, "17728": {"id": 17728, "code": "S = \"0112\"\nMM = [\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif S[:2] in MM and S[2:] in MM:\n  print(\"AMBIGUOUS\")\nelif S[:2] in MM:\n  print(\"MMYY\")\nelif S[2:] in MM:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17894": {"id": 17894, "code": "s = \"1700\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif 1 <= a <= 12 and (b == 0 or b > 12):\n    print('MMYY')\nelif 1 <= b <= 12 and (a == 0 or a > 12):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17575": {"id": 17575, "code": "S = 112\nYYMM = 0\nMMYY = 0\nif S % 100 >= 1 and S % 100 <= 12:\n    YYMM = 1\nif S // 100 >= 1 and S // 100 <= 12:\n    MMYY = 1\nif YYMM == 0 and MMYY == 0:\n    print('NA')\nelif YYMM == 0 and MMYY == 1:\n    print('MMYY')\nelif YYMM == 1 and MMYY == 0:\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "16786": {"id": 16786, "code": "lst = [1, 0]\nprint('H' if sum(lst)%2 == 0 else 'D')", "coverage": [">", ">"]}, "13554": {"id": 13554, "code": "S = \"haiku,atcoder,tasks\"\nprint(S[0:5]+' '+S[6:13]+' '+S[14:19])", "coverage": [">", ">"]}, "4703": {"id": 4703, "code": "s = \"smiles\"\ns_len =str(len(s[1:-1]))\nprint(s[0]+s_len+s[-1])", "coverage": [">", ">", ">"]}, "19461": {"id": 19461, "code": "n = 3\nprint([n,2*n][n%2==1])", "coverage": [">", ">"]}, "1723": {"id": 1723, "code": "N = 100;A = 100;B = 100\nab = [A, B]\nmax_katu = min(ab)\nif A+B >= N:\n    min_katu = A+B-N\nelse:\n    min_katu = 0\nans = [str(max_katu), str(min_katu)]\nprint(' '.join(ans))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10213": {"id": 10213, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\ncnt=0\nright=0\nleft=0\nfor i in range(len(s)):\n    if s[i] == '(':\n        cnt+=1\n    else:\n        cnt-=1\n    if cnt < 0:\n        right+=1\n        cnt=0\nif cnt>0:\n    left=cnt\nfor i in range(right):\n    s.insert(0,'(')\nfor i in range(left):\n    s.append(')')\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9056": {"id": 9056, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nf=0\nfor i in [a,b,c,d,e]:\n  for j in [a,b,c,d,e]:\n    if abs(i-j)>k:\n      f=f+1\nif f>0:\n  print(':(')\nelse:\n  print('Yay!')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "13919": {"id": 13919, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif(n<3):\n    print(1)\n    exit()\nans = 1\nstate = 0\nnow = a[0]\nfor ai in a[1:]:\n    if(state==0):\n        if(now == ai):\n            state = 0\n        elif(now > ai):\n            state = -1\n        else:\n            state = 1\n    elif(state==1):\n        if(now > ai):\n            state = 0\n            ans += 1\n    else:\n        if(now < ai):\n            state = 0\n            ans += 1\n    now = ai\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3612": {"id": 3612, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 20;B = 15\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10021": {"id": 10021, "code": "N = 8\nS = \"))))((((\"\nl, r = 0, 0\np, m = 0, 0\nfor i in range(N):\n  if S[i] == \"(\":\n    l += 1\n  else:\n    r += 1\n  if l < r:\n    p += 1\n    l += 1\nm = l - r\nfor i in range(p):\n  print(\"(\", end = \"\")\nprint(S, end =\"\")\nfor i in range(m):\n  print(\")\", end = \"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14921": {"id": 14921, "code": "n = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nlength = len(a)\neven = len([i for i in a if i % 2 == 0])\nodd = len([i for i in a if i % 2 == 1])\nif length == even and p == 1:\n    print(0)\nelif length == even:\n    print(2 ** n)\nelse:\n    print(2 ** n // 2)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "3280": {"id": 3280, "code": "a = 20;b = 15\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "9143": {"id": 9143, "code": "s = \"2017/01/31\"\nS=\"2018\"\nS+=s[4:]\nprint(S)", "coverage": [">", ">", ">", ">"]}, "17411": {"id": 17411, "code": "s = \"1700\"\nif 1<=int(s[:2])<=12 and 1<=int(s[2:4])<=12:print(\"AMBIGUOUS\")\nelif 1<=int(s[:2])<13:print(\"MMYY\")\nelif 1<=int(s[2:4])<13:print(\"YYMM\")\nelse :print(\"NA\")", "coverage": [">", ">", ">", ">", ">"]}, "15461": {"id": 15461, "code": "x = 12;y = 3;z = 1\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "16932": {"id": 16932, "code": "a = \"H\";b = \"H\"\nprint(\"H\" if a == \"H\" and b ==\"H\" or a == \"D\" and b == \"D\" else \"D\")", "coverage": [">", ">"]}, "18634": {"id": 18634, "code": "h = 2\nw = 100\nn = 200\np=max(h,w)\nprint(n//p+(n%p!=0))", "coverage": [">", ">", ">", ">", ">"]}, "4988": {"id": 4988, "code": "S = \"smiles\"\nl=str(len(S)-2)\nprint(S[0]+l+S[-1])", "coverage": [">", ">", ">"]}, "682": {"id": 682, "code": "k = 2\nx = 7%k\ncnt = 0\nif k%2 ==0:\n    print('-1')\nelse:\n    while True:\n        cnt += 1\n        if x == 0:\n            print(cnt)\n            break\n        elif cnt == k:\n            print('-1')\n            break\n        else:\n            x = (x*10+7)%k", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "9750": {"id": 9750, "code": "icase=0\nif icase==0:\n    n = 8\n    s=\"))))((((\"\nelif icase==1:\n    n=3\n    s=\"())\"\nelif icase==2:\n    n=6\n    s=\")))())\"\nelif icase==3:\n    n=8\n    s=\"))))((((\"\nl=[]\nr=[]\nsim=s[0]\nif sim==\"(\":\n    lidx=0\n    l.append(1)\n    ridx=-1\nelif sim==\")\":\n    lidx=0\n    l.append(0)\n    ridx=0\n    r.append(1)\nfor i in range(1,len(s)):\n    if s[i]==\"(\" and s[i-1]==\"(\":\n        l[lidx]+=1\n    elif s[i]==\"(\" and s[i-1]==\")\":\n        lidx+=1\n        l.append(1)\n    elif s[i]==\")\" and s[i-1]==\")\":\n        r[ridx]+=1\n    elif s[i]==\")\" and s[i-1]==\"(\":\n        ridx+=1\n        r.append(1)\nll=sum(l)\nrr=sum(r)\nds=ll-rr\nif len(l)>len(r):\n    r.append(0)\nxmin=0\nx=0\nfor i in range(len(l)):\n    x=x+l[i]-r[i]\n    xmin=min(x,xmin)\nstrs=\"(\"*(-xmin) + s + \")\"*(ds-xmin)\nprint(strs)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6039": {"id": 6039, "code": "import math\nn = 100\nprint(math.ceil(n/2))", "coverage": [">", ">", ">"]}, "6591": {"id": 6591, "code": "from bisect import bisect_right,bisect_left\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in b:ans+=bisect_left(a,i)*(n-bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19333": {"id": 19333, "code": "n = 999999999\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n + n)", "coverage": [">", ">", "!", "!", ">"]}, "6286": {"id": 6286, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor i in range(len(B)):\n    a_b = bisect.bisect_left(A,B[i])\n    c_b = bisect.bisect_right(C,B[i])\n    count += a_b * (N - c_b)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2025": {"id": 2025, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 10;a = 7;b = 5\nprint(min(a,b), max(a+b-n, 0) )", "coverage": [">", ">", ">", ">", ">"]}, "1161": {"id": 1161, "code": "n = 111\nans = 0\nif 100 <= n <= 111:\n  ans = 111\nelif 112 <= n <= 222:\n  ans = 222\nelif 223 <= n <= 333:\n  ans = 333\nelif 334 <= n <= 444:\n  ans = 444\nelif 445 <= n <= 555:\n  ans = 555\nelif 556 <= n <= 666:\n  ans = 666\nelif 667 <= n <= 777:\n  ans = 777\nelif 778 <= n <= 888:\n  ans = 888\nelif 889 <= n <= 999:\n  ans = 999\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "1730": {"id": 1730, "code": "n = 10;a = 3;b = 5\nprint('{0} {1}'.format(min(a,b), 0 if a+b<=n else a+b-n))", "coverage": [">", ">"]}, "8874": {"id": 8874, "code": "n = 4\nA1 = (1, 1, 1, 1)\nA2 = (1, 1, 1, 1)\nfrom itertools import accumulate\nA1S = [0] + list(accumulate(A1))\nA2S = [0] + list(accumulate(A2))\nma = 0\nfor i in range(1, n+1):\n    ma = max(ma, A1S[i] + A2S[-1] - A2S[i-1])\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16289": {"id": 16289, "code": "n = 2\na = [100, 0]\nmax_a = max(a)\nans = 0\nfor i in range(n):\n    if abs(ans - max_a/2) > abs(a[i] - max_a/2):\n        ans = a[i]\nprint(max_a, ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "18242": {"id": 18242, "code": "H = 3\nW = 7\nN = 10\nA = H if H > W else W\nif N%A == 0:\n    print(N//A)\nelse:\n    print(N//A+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18772": {"id": 18772, "code": "h = 3\nw = 7\nn = 10\ntotal = h*w\nkesu = max(h, w)\nif n%kesu==0:\n    print(n//kesu)\nelse:\n    print(n // kesu + 1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9898": {"id": 9898, "code": "n = 8\ns = \"))))((((\"\ncounter_l = 0\npairs = 0\ndouble_check = set()\nfor i in range(n):\n    if s[i] == \"(\":\n        counter_l += 1\n        for j in range(i + 1, n):\n            if s[j] == \")\" and j not in double_check:\n                pairs += 1\n                double_check.add(j)\n                break\ncounter_r = n - counter_l\ns = s + \")\" * (counter_l - pairs)\ns = \"(\" * (counter_r - pairs) + s\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "5075": {"id": 5075, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\ns = \"smiles\"\nn = len(s)-2\nans = s[0] + str(n) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12020": {"id": 12020, "code": "m_one = [11, 30]\nm_two = [12, 1]\nprint(1 if m_one[1] > m_two[1] else 0)", "coverage": [">", ">", ">"]}, "4169": {"id": 4169, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nx = 60*a + b\ny = 60*c + d\nif y>x:\n    print(y-x-k);\nelse:\n    print(1440+y-x-k);", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13008": {"id": 13008, "code": "N = 5\nif N == 1:\n    print(\"NO\")\nelif 105 % N == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "7849": {"id": 7849, "code": "n = 4;k = 3\nxs = [2, 3, 1, 4]\ni0 = xs.index(min(xs))\nprint(1 + min([ (i + k - 2) // (k - 1) + (n - i - 2) // (k - 1)\n  for i in range(max(i0 - k + 1, 0), min(i0, n - k) + 1) ]))", "coverage": [">", ">", ">", ">", ">"]}, "4147": {"id": 4147, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nst = h1 * 60 + m1\ned = h2 * 60 + m2\nans = ed - st - k\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "6964": {"id": 6964, "code": "hp = \"20\";N = \"3\"\na = ['4', '5', '6']\nprint(\"Yes\") if sum([int(x) for x in a]) >= int(hp) else print(\"No\")", "coverage": [">", ">", ">"]}, "5347": {"id": 5347, "code": "x = 5\nprint((x+1)//2)", "coverage": [">", ">"]}, "30": {"id": 30, "code": "s = \"codefestival\"\nl = len(s)\nn = 100\nans = [\"A\"]*l\nfor i in range(l-1):\n  if s[i]==\"a\":\n    ans[i]=\"a\"\n    continue\n  temp = ord(\"z\")-ord(s[i])+1\n  if temp <= n:\n    n-=temp\n    ans[i]=\"a\"\n  else:\n    ans[i]=s[i]\nlast = ord(s[l-1])+n\nwhile last>ord(\"z\"):\n  last-=26\nans[l-1]=chr(last)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "18571": {"id": 18571, "code": "import math\na = 2\nb = 100\nn = 200\ndum = max(a,b)\nans = n/dum\nprint(math.ceil(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15558": {"id": 15558, "code": "x = 13;y = 3;z = 1\nans = x // (y+z)\nif (x % (y+z) < z):\n    ans -= 1\nprint(max(0,ans))", "coverage": [">", ">", ">", "!", ">"]}, "1926": {"id": 1926, "code": "n = 100;x = 100;y = 100\nif x+y<=n:\n    Min=0\n    if x<=y:\n        Max=x\n    else:\n        Max=y\nelse:\n    Min=(x+y)-n\n    if x<=y:\n        Max=x\n    else:\n        Max=y\nprint(\"{} {}\".format(Max,Min))", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "16953": {"id": 16953, "code": "a = \"H\";b = \"H\"\ntable = [['H','D'],['D','H']]\nind = ['H','D']\nprint(table[ind.index(a)][ind.index(b)])", "coverage": [">", ">", ">", ">"]}, "10644": {"id": 10644, "code": "A = 1;B = 1;K = 1\nS=set()\nfor i in range(1,min(A+1,B+1)):\n    if A%i==0 and B%i==0:\n        S.add(i)\nprint(sorted(S)[::-1][K-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "9224": {"id": 9224, "code": "S = \"2017/01/07\"\nS_list = list(S)\nS_list[S.index(\"7\")] = \"8\"\na = \"\"\nfor i in S_list:\n  a += i\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14880": {"id": 14880, "code": "n = 1;p = 1\nnum = [50]\nsemua_angka_genap = True\nada_angka_ganjil = False\nfor i in num:\n  if i % 2 == 1:\n    semua_angka_genap = False\n    ada_angka_ganjil = True\nif semua_angka_genap:\n  if p == 0:\n    print(2**n)\n  else:\n    print(0)\nif ada_angka_ganjil:\n  print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!"]}, "4358": {"id": 4358, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ntime=abs(H2-H1)*60+(M2-M1)\nans=time-K\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1690": {"id": 1690, "code": "n = 100;a = 100;b = 100\nmx = min(a, b)\nmn = max(0, a + b - n)\nprint(mx, mn)", "coverage": [">", ">", ">", ">"]}, "12455": {"id": 12455, "code": "S = \"akasaka\"\ns = list(map(str, S))\nN = len(s)\nt = 0\nfor i in range(int((N-1)/2)):\n    if s[i] != s[N-i-1]:\n        t += 1\n        break\nfor i in range(int((N-1)/4)):\n    if s[i] != s[int((N-1)/2) - i - 1]:\n        t += 1\n        break\nif t == 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!"]}, "6468": {"id": 6468, "code": "import bisect\na = 2\nb = [1, 5]\nb.sort()\nc = [2, 4]\nd = [3, 6]\nd.sort()\ne = 0\nfor i in c:\n    e += bisect.bisect_left(b, i) * (a - bisect.bisect_right(d, i))\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2728": {"id": 2728, "code": "n = {1, 4, 9, 7}\nprint('YNEOS'[n!={1,9,7,4}::2])", "coverage": [">", ">"]}, "19429": {"id": 19429, "code": "n = 999999999\nprint(n if n % 2 == 0 else n + n)", "coverage": [">", ">"]}, "13474": {"id": 13474, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5],s[6:13],s[14:21])", "coverage": [">", ">"]}, "5516": {"id": 5516, "code": "N = 2\nprint(N // 2) if N % 2 == 0 else print(N // 2 + 1)", "coverage": [">", ">"]}, "10592": {"id": 10592, "code": "import math\na = 8;b = 12;k = 2\nd = math.gcd(a, b)\ne = d + 1\nl = 0\nwhile True:\n    e -= 1\n    if d % e == 0:\n        l += 1\n        if l == k:\n            break\nprint(e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6432": {"id": 6432, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nB_ans = [0]*N\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i, b in enumerate(B):\n    bi = bisect.bisect_left(A, b)\n    B_ans[i] = B_ans[i-1] + bi\nfor j, c in enumerate(C):\n    ci = bisect.bisect_left(B, c)\n    if ci == 0:\n        continue\n    ans += B_ans[ci-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "917": {"id": 917, "code": "k = 2\na=7%k\nfor i in range(k+1):\n  if a==0:\n    print(i+1)\n    break\n  a=(a*10+7)%k\nelse:\n  print(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "10179": {"id": 10179, "code": "N = 6\nS = \")))())\"\ncs=0\nmincs=1000\nenc={'(':1,')':-1}\nfor c in S:\n    cs+=enc[c]\n    mincs=min(mincs,cs)\nwhile mincs<0:\n    S='('+S\n    mincs+=1\n    cs+=1\nwhile cs>0:\n    S=S+')'\n    cs-=1\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18010": {"id": 18010, "code": "a = 1;b = 12\nx = \"MM\" if 0 < a < 13 else \"YY\"\ny = \"MM\" if 0 < b < 13 else \"YY\"\nprint(x + y if x != y else \"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">"]}, "8755": {"id": 8755, "code": "N = 1\nh = [2]\nl = [3]\nc = 0\nfor i in range(N):\n    c = max(sum(h[0:i+1])+sum(l[i:N+1]), c)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "473": {"id": 473, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\ns = ['a']\nk = 25\nfor i in range(len(s)):\n    num = (ord('z') - ord(s[i]) + 1) % 26\n    if num <= k:\n        k -= num\n        s[i] = 'a'\ns[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11299": {"id": 11299, "code": "a = \"SUN\"\nif a=='SUN':\n    print('7')\nelif a=='SAT':\n    print('1')\nelif a=='FRI':\n    print('2')\nelif a=='THU':\n    print('3')\nelif a=='WED':\n    print('4')\nelif a=='TUE':\n    print('5')\nelse:\n    print('6')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "9868": {"id": 9868, "code": "n = 8\ns = \"))))((((\"\nmn=0\nsm=0\nfor i in range(n):\n  sm+=1 if s[i]==\"(\" else -1\n  mn=min(mn,sm)\nmn*=-1\nprint(\"(\"*mn+s+\")\"*(sm+mn))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19127": {"id": 19127, "code": "n = 5\nif n%2==1:\n    print(0)\nelse:\n    ans=0\n    k=10\n    while k<=n:\n        t=n//k\n        ans+=t\n        k*=5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "19501": {"id": 19501, "code": "N = 10\nprint(N * 2) if N % 2 else print(N)", "coverage": [">", ">"]}, "18463": {"id": 18463, "code": "H = 2\nW = 100\nN = 200\nans = n = 0\nwhile n < N:\n    if H<W:\n        n += W\n        H -= 1\n    else:\n        n += H\n        W -= 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "1178": {"id": 1178, "code": "x = \"750\"\nif int(x[0])>int(x[1]):\n  print (x[0]*3)\nelif int(x[0])==int(x[1]):\n  if int(x[0])>=int(x[2]):\n    print (x[0]*3)\n  else:\n    print (str(int(x[0])+1)*3)\nelse:\n  print (str(int(x[0])+1)*3)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "19075": {"id": 19075, "code": "N = 5\nif N % 2 == 1:\n    print(0)\nelse:\n    ret = 0\n    for i in range(1, 27):\n        ret += N // (2*5**i)\n    print(ret)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "16108": {"id": 16108, "code": "a = 20;b = 15\nif a<=(b*2):\n    print(0)\nelse:\n    print(a-(b*2))", "coverage": [">", ">", ">", "!", "!"]}, "13644": {"id": 13644, "code": "A = \"haiku\";B = \"atcoder\";C = \"tasks\"\nprint(A, B, C)", "coverage": [">", ">"]}, "3987": {"id": 3987, "code": "x = 100000;y = 1;z = 1\nif x < y+z*2:\n    print(0)\nelse:\n    ans = (x-(y+z*2))//(y+z)+1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "9208": {"id": 9208, "code": "S = \"2017/01/07\"\nprint(S[:3]+\"8\"+S[4:])", "coverage": [">", ">"]}, "9117": {"id": 9117, "code": "import sys\nsys.setrecursionlimit(10**6)\ns = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[:4] = list(\"2018\")\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">"]}, "9299": {"id": 9299, "code": "s = \"2017/01/31\"\nprint(s[:3] + \"8\" + s[4:])", "coverage": [">", ">"]}, "2093": {"id": 2093, "code": "n = 10;a = 7;b = 5\nprint(*[min(a,b),max(a+b-n,0)],sep=' ')", "coverage": [">", ">"]}, "1797": {"id": 1797, "code": "list = [10, 7, 5]\nprint(min(list),(list[1] + list[2]) - list[0] if (list[1] + list[2]) - list[0] > 0 else 0)", "coverage": [">", ">"]}, "4411": {"id": 4411, "code": "s = \"internationalization\"\nprint(\"{}{}{}\".format(s[0], len(s) - 2, s[-1]))", "coverage": [">", ">"]}, "8185": {"id": 8185, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint(-((1 - N) // (K - 1)))", "coverage": [">", ">", ">"]}, "579": {"id": 579, "code": "S = ['x', 'y', 'z']\nN = len(S)\nK = 4\nfor i in range(N - 1):\n    d = (ord(\"a\") - ord(S[i])) % 26\n    if d <= K:\n        S[i] = \"a\"\n        K -= d\nS[-1] = chr((ord(S[-1]) - ord(\"a\") + K) % 26 + ord(\"a\"))\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8648": {"id": 8648, "code": "n = 1\na1 = [2]\na2 = [3]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "7246": {"id": 7246, "code": "H = 211;M = 5\nattack = [31, 41, 59, 26, 53]\nif H - sum(attack) <=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "16942": {"id": 16942, "code": "a = \"D\";b = \"H\"\nprint('HD'[a!=b])", "coverage": [">", ">"]}, "19282": {"id": 19282, "code": "import sys\nN = 12\nif N % 2 != 0:\n    print(0)\n    sys.exit()\nN //= 2\nans = 0\nwhile N != 0:\n    ans += N//5\n    N //= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "14316": {"id": 14316, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nsa = 0\nfor i in range(1, n):\n    new = a[i] - a[i-1]\n    if new * sa < 0:\n        cnt += 1\n        sa = 0\n        continue\n    if new != 0:\n        sa = new\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2186": {"id": 2186, "code": "n = 10;a = 7;b = 5\nmax_sub = min(a, b)\nmin_sub = max_sub - (n-max(a, b))\nprint(max_sub, min_sub if min_sub > 0 else 0)", "coverage": [">", ">", ">", ">"]}, "12112": {"id": 12112, "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nif m_1 < m_2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "17109": {"id": 17109, "code": "dic = {(\"H\", \"H\"): \"H\", (\"H\", \"D\"): \"D\", (\"D\", \"D\"): \"H\", (\"D\", \"H\"): \"D\"}\na = \"H\";b = \"H\"\nprint(dic[(a, b)])", "coverage": [">", ">", ">"]}, "9309": {"id": 9309, "code": "S = \"2017/01/31\"\na = S[:4]\nb = S[4:]\nif a == \"2017\":\n    a = \"2018\"\n    i = a + b\n    print(i)\nelse:\n    print(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5916": {"id": 5916, "code": "import sys\nn = 100\nif n % 2 == 0:\n    print(n // 2)\nelse:\n    print(n // 2 + 1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "1243": {"id": 1243, "code": "n = 111\nfor i in range(1,10):\n  if 100*i+10*i+i>=n:\n    print(100*i+10*i+i)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "4958": {"id": 4958, "code": "w = \"smiles\"\nl = len(w) -2\nprint(w[0] + str(l) + w[-1])", "coverage": [">", ">", ">"]}, "8977": {"id": 8977, "code": "a = 1;b = 2;c = 4;d = 8;e = 9;k = 15\nif k>=max(a,b,c,d,e)-min(a,b,c,d,e):\n  print('Yay!')\nelse:\n  print(':(')", "coverage": [">", ">", ">", "!", "!"]}, "3784": {"id": 3784, "code": "x = 64145;y = 123;z = 456\nif x%(y+z)>=z :\n  print(x//(y+z))\nelse:\n  print(x//(y+z)-1)", "coverage": [">", ">", "!", "!", ">"]}, "4101": {"id": 4101, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ntime = (h2 - h1) * 60\ntime += m2 - m1\nprint(time - k)", "coverage": [">", ">", ">", ">"]}, "11727": {"id": 11727, "code": "x = [11, 30]\nx = [12, 1]\nif x[1] == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9825": {"id": 9825, "code": "n = 3\nS = \"())\"\nlc = 0\nrc = 0\nfor s in S:\n    if s=='(':\n        rc += 1\n    else:\n        if rc:\n            rc -= 1\n        else:\n            lc += 1\nprint('('*lc+S+')'*rc)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "16845": {"id": 16845, "code": "a = \"H\";b = \"H\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "16275": {"id": 16275, "code": "import bisect\nn = 5\na = [2, 4, 6, 9, 11]\nai = a[-1]\nhalf_ai = ai // 2\ni_left = bisect.bisect_left(a, half_ai)\ni_right = bisect.bisect_right(a, half_ai)\nif (a[i_left] == half_ai):\n    print(ai, half_ai)\n    exit()\nif (i_left == i_right and i_left == 0):\n    print(ai, a[0])\n    exit()\nif (abs(half_ai - a[i_left - 1]) >=\n        abs(half_ai - a[i_right]) and i_right != len(a) - 1):\n    print(ai, a[i_right])\nelse:\n    print(ai, a[i_left - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", "!", "!"]}, "19015": {"id": 19015, "code": "n = 12\nres = 0\nif n % 2 == 0:\n  for i in range(1,30):\n    p = n // (5 ** i)\n    if p % 2 == 1:\n      res += (p-1) // 2\n    else:\n      res += p // 2\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6739": {"id": 6739, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif h <= sum(a):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "4259": {"id": 4259, "code": "h = [10, 0, 12, 0, 120]\ntmp1 = h[0] * 60 + h[1]\ntmp2 = h[2] * 60 + h[3]\nans = tmp2 - tmp1\nprint(ans - h[4])", "coverage": [">", ">", ">", ">", ">"]}, "13859": {"id": 13859, "code": "n = 7\nlis = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nflag = 0\nfor i in range(n-1):\n    if lis[i+1] - lis[i] >0:\n        if flag == 1:\n            pass\n        elif flag == -1:\n            flag = 0\n            cnt += 1\n        elif flag == 0:\n            flag = 1\n    elif lis[i+1] - lis[i] < 0:\n        if flag == 1:\n            flag = 0\n            cnt += 1\n        elif flag == -1:\n            pass\n        elif flag == 0:\n            flag = -1\n    elif lis[i+1] - lis[i] == 0:\n        pass\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "17663": {"id": 17663, "code": "s = \"1700\"\na, b = int(s[:2]), int(s[2:])\nif 0 < a < 13 and 0 < b < 13:\n    print('AMBIGUOUS')\nelif 0 < a < 13:\n    print('MMYY')\nelif 0 < b < 13:\n    print('YYMM')\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "9144": {"id": 9144, "code": "s = \"2017/01/07\"\ns = s.replace(s[3], '8', 1)\nprint(s)", "coverage": [">", ">", ">"]}, "10632": {"id": 10632, "code": "A = 100;B = 50;K = 4\nans = 0\ncurr = min(A, B)\nwhile K > 0:\n    if A % curr == 0 and B % curr == 0:\n        K -= 1\n        ans = curr\n    curr -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7896": {"id": 7896, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nif (n==k):\n    print(1)\nelse:\n    print(1+(n-k-1)//(k-1)+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1350": {"id": 1350, "code": "n = 750\na=[111,222,333,444,555,666,777,888,999]\np=0\nwhile a[p]<n:\n    p+=1\nprint(a[p])", "coverage": [">", ">", ">", ">", ">", ">"]}, "1906": {"id": 1906, "code": "n = 10;a = 3;b = 5\nif a+b <= n:\n    min_p = 0\nelse:\n    min_p = abs(n-a-b)\nmax_p = min([a,b])\nprint(max_p, min_p)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "8426": {"id": 8426, "code": "N = 1\nA = [2]\nB = [3]\nmax = -1\nfor i in range(N):\n    sum = 0\n    for k in range(i+1):\n        sum += A[k]\n    for k in range(i,N):\n        sum += B[k]\n    if sum > max:\n        max = sum\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16067": {"id": 16067, "code": "A = 12;B = 4\nif A-B*2<0:\n    print('0')\nelse:\n    print(A-B*2)", "coverage": [">", ">", "!", "!", ">"]}, "18203": {"id": 18203, "code": "from collections import defaultdict\nb = defaultdict(int)\nc = defaultdict(int)\nn = int(\"6\")\na = map(int, \"5 2 4 2 8 8\".split())\nfor idx,i in enumerate(a, start=1):\n  b[i - idx] += 1\n  c[i + idx] += 1\nans = 0\nfor k,v in b.items():\n  ans += (v * c[-1 * k])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3911": {"id": 3911, "code": "x = 12;y = 3;z = 1\nans = 2*z+y\nfor i in range(2, 1000002): \n    ans += y+z\n    if(ans >= x):\n        print(i-1 if ans > x else i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7041": {"id": 7041, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nAS = sum(A)\nif AS >= H:\n\tprint('Yes')\nelse:\n\tprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "717": {"id": 717, "code": "K = 2\nif K%2 == 0 or K%5 == 0:\n    print(-1)\nelif K%7 == 0:\n    x = -1\n    b = 9*K/7\n    c = 10%b\n    for i in range(1,K+1):\n        if c ==1:\n            x = i\n            break\n        c = (c*10)%b\n    print(x)\nelse:\n    x = -1\n    b = 9*K\n    c = 10%b\n    for i in range(1,K+1):\n        if c ==1:\n            x = i\n            break\n        c = (c*10)%b\n    print(x)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "4496": {"id": 4496, "code": "string = \"smiles\"\nstring_length = len(string)\nprint(string[0] + \"%d\" % (string_length - 2) + string[string_length - 1])", "coverage": [">", ">", ">"]}, "6176": {"id": 6176, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in b:\n    x=bisect.bisect_left(a,i)\n    y=bisect.bisect_right(c,i)\n    ans+=x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5920": {"id": 5920, "code": "N = 5\na = 0\nb = 0\nif N % 2 == 0:\n    a = N // 2\n    print(a)\nelse:\n    b = N // 2 + 1\n    print(b)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "16463": {"id": 16463, "code": "n = 2\na = [100, 0]\nbase = max(a)\ntmp = 10**9\ntmp_i = 0\nfor x in a:\n    if x == base:\n        pass\n    elif abs(base - 2*x) < tmp:\n        tmp = abs(base - 2*x)\n        tmp_i = x\nprint(base, tmp_i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6690": {"id": 6690, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= h :\n    print(\"Yes\")\nelse : print(\"No\")", "coverage": [">", ">", ">", "!", ">"]}, "5695": {"id": 5695, "code": "n = 5\nr = n // 2\na = n % 2\nprint(r + a)", "coverage": [">", ">", ">", ">"]}, "13074": {"id": 13074, "code": "X = 5\nans = 'YES' if X == 3 or X == 5 or X == 7 else 'NO'\nprint(ans)", "coverage": [">", ">", ">"]}, "11638": {"id": 11638, "code": "S = \"SAT\"\nweek = ['SAT','FRI','THU','WED','TUE','MON','SUN']\nfor i in range(7):\n  if S == week[i]:\n    print(i+1)", "coverage": [">", ">", ">", ">", ">"]}, "5828": {"id": 5828, "code": "import math\na = 2\nprint(math.ceil(a/2))", "coverage": [">", ">", ">"]}, "1193": {"id": 1193, "code": "n = 750\nif n%111==0: print(n)\nelse: print(n+111-(n%111))", "coverage": [">", ">", ">"]}, "2225": {"id": 2225, "code": "N = 10;A = 7;B = 5\nmax = min([A, B])\nnum = A + B - N\nif (num <= 0):\n    minor = 0\nelse:\n    minor = num\nprint(max, minor)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "14985": {"id": 14985, "code": "N = 3;P = 0\nA = [1, 1, 1]\nn0=0\nn1=0\nfor i in range(N):\n    if A[i]%2==0:\n        n0 += 1\nn1 = N-n0\nif P==0:\n    if n1==0:\n        print(2**n0)\n    else:\n        print(2**(n1-1)*2**n0)\nelse:\n    if n1==0:\n        print(0)\n    else:\n        print(2**(n1-1)*2**n0)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "1779": {"id": 1779, "code": "N = 10;A = 7;B = 5\nif A+B > N:\n    mi = A+B -N\nelse:\n    mi = 0\nma =min([A,B])\nprint(ma,mi)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3178": {"id": 3178, "code": "s = \"35753\"\nans = 1000000\nfor i in range(len(s)-2):\n    S = s[i]+s[i+1]+s[i+2]\n    S = int(S)\n    q = abs(753-S)\n    ans = min(ans, q)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8430": {"id": 8430, "code": "N = 1\nA = [0] * 2\nA = [[2], 0]\nA = [[2], [3]]\nans = 0\nfor i in range(N):\n    now = 0\n    for j in range(N):\n        if j < i:\n            now += A[0][j]\n        elif j > i:\n            now += A[1][j]\n        else:\n            now += A[0][j] + A[1][j]\n    ans = max(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "2074": {"id": 2074, "code": "n = 100;a = 100;b = 100\nh = min(a, b)\nc = a+b-n\nif c < 0:\n    l = 0\nelse:\n    l = c\nprint(h, l)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "4614": {"id": 4614, "code": "a = ['x', 'y', 'z']\nn = len(a)-2\nprint(a[0],n,a[-1],sep=(\"\"))", "coverage": [">", ">", ">"]}, "2650": {"id": 2650, "code": "a = \"1 2 9 1\"\nnum1 = a.count(\"1\")\nnum9 = a.count(\"9\")\nnum7 = a.count(\"7\")\nnum4 = a.count(\"4\")\nif num1 == 1 and num9 == 1 and num7 == 1 and num4 == 1:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2100": {"id": 2100, "code": "N = 100;A = 100;B = 100\nmax_=min(A,B)\nmin_=max(0,(min(A,B)-(N-max(A,B))))\nprint(max_,min_)", "coverage": [">", ">", ">", ">"]}, "8301": {"id": 8301, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nA.pop(1)\nf=len(A)//(K-1)\nif len(A)%(K-1)==0:\n    print(f)\nelse:\n    print(f+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3900": {"id": 3900, "code": "x = 64145;y = 123;z = 456\nx -= 2*z\nans = 1\nx -= y\nans += x//(y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11697": {"id": 11697, "code": "S = \"SUN\"\nD = {\"SUN\":0, \"MON\":1, \"TUE\":2, \"WED\":3, \"THU\":4, \"FRI\":5, \"SAT\":6}\nprint(7 - D[S])", "coverage": [">", ">", ">"]}, "14592": {"id": 14592, "code": "n = 3;p = 0\nA = [1, 1, 1]\nif all(a % 2 == 0 for a in A):\n    if p:\n        print(0)\n    else:\n        print(pow(2, n))\nelse:\n    print(pow(2, n-1))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "2717": {"id": 2717, "code": "k = \"1 9 7 4\"\nif (\"1\" in k) & (\"9\" in k) & (\"7\" in k) & (\"4\" in k):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "7374": {"id": 7374, "code": "total = 20;n = 3\nl1 = [4, 5, 6]\ns=sum(l1)\nif(total==s or (total-s)<=0 ):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17614": {"id": 17614, "code": "S = \"0112\"\nmm = [\"0\"+str(x) for x in range(1,10)]+[\"10\",\"11\",\"12\"]\nmmyy = (S[:2] in mm)\nyymm = (S[2:] in mm)\na = \"NA\"\nif yymm and mmyy:\n  a = \"AMBIGUOUS\"\nelif yymm:\n  a = \"YYMM\"\nelif mmyy:\n  a = \"MMYY\"\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "3085": {"id": 3085, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\ns = \"1234567876\"\nans = 1000\nfor i in range(len(s) - 2):\n    ans = min(ans, abs(753 - int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4571": {"id": 4571, "code": "s = \"smiles\"\nn=str(len(s)-2)\np=s[0]+n+s[len(s)-1]\nprint(p)", "coverage": [">", ">", ">", ">"]}, "5751": {"id": 5751, "code": "d = 100\nif d % 2 == 0:\n  print(d//2)\nelse:\n  print((d//2)+1)", "coverage": [">", ">", ">", "!", "!"]}, "13993": {"id": 13993, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nnow = a[0]\nbefore = '-'\nfor i in range(1,n):\n    if before == '-':\n        if now > a[i]:\n            before = 'D'\n        elif now< a[i]:\n            before = 'U'\n    else:\n        if before == 'U' and now > a[i]:\n            ans += 1\n            before = '-'\n        elif before == 'D' and now < a[i]:\n            ans += 1\n            before = '-'\n    now = a[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "5309": {"id": 5309, "code": "n = 2\nprint(n//2 if n%2 == 0 else n//2+1)", "coverage": [">", ">"]}, "14928": {"id": 14928, "code": "N = 2;P = 0\nA = [1, 3]\nB=[a%2 for a in A]\nif sum(B)==0:\n    print((P==0)*2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11377": {"id": 11377, "code": "s = \"SUN\"\ndays = ['SUN','MON','TUE','WED','THU','FRI','SAT' ]\nday = int(days.index(s))\nprint(7-day)", "coverage": [">", ">", ">", ">"]}, "11950": {"id": 11950, "code": "l1 = [11, 16]\nl2 = [11, 17]\nif l2[1] == 1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "18525": {"id": 18525, "code": "from math import ceil\nH = 14\nW = 12\nN = 112\nprint(ceil(N/max(H,W)))", "coverage": [">", ">", ">", ">", ">"]}, "19183": {"id": 19183, "code": "N = 12\na = 10\ncount = 0\nif N%2 == 1:\n    print(0)\n    exit()\nelse:\n    while a <= N:\n        count += N//a\n        a *= 5\nprint(count)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "8180": {"id": 8180, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nN -= K\nK -= 1\nC = math.ceil(N/K)\nprint(C+1)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2941": {"id": 2941, "code": "s = \"35753\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    if abs(753-num) < ans:\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9824": {"id": 9824, "code": "n = 8\ns = \"))))((((\"\nstack = []\ncntLeft = 0\ncntRight = 0\nfor ss in s:\n    if ss == '(':\n        stack.append('(')\n    else:\n        if len(stack) > 0:\n            stack.pop()\n        else:\n            cntLeft += 1\ncntRight = len(stack)\nans = ''\nfor i in range(cntLeft):\n    ans += '('\nans += s\nfor i in range(cntRight):\n    ans += ')'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17499": {"id": 17499, "code": "S = \"1905\"\nflagA = False\nflagB = False\nif 1 <= int(S[2:4])<= 12:\n  flagB = True\nif 1 <= int(S[0:2])<= 12:\n  flagA = True\nif flagA and flagB:\n  print(\"AMBIGUOUS\")\nelif flagA and not flagB:\n  print(\"MMYY\")\nelif flagB and not flagA:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "7909": {"id": 7909, "code": "n = 3;k = 3\nan = [1, 2, 3]\nmini = min(an)\nneed = 0\nfor a in an:\n    if a != mini:\n        need += 1\nprint(-(-need//(k-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4239": {"id": 4239, "code": "input_str = ['10', '0', '12', '0', '120']\ninput_nums=[]\nfor i in range(5):\n    input_nums.append(int(input_str[i]))\ndiff_hour = input_nums[2] - input_nums[0]\ndiff_hour_to_min = diff_hour * 60\ndiff_min = input_nums[3] - input_nums[1]\ntotal_wake_min = diff_hour_to_min + diff_min\nprint(total_wake_min - input_nums[4])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3111": {"id": 3111, "code": "s = \"1111111111\"\nd = 999\nfor i in range(len(s) - 2):\n    n = int(s[i: i + 3])\n    d = min(d, abs(n - 753))\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6304": {"id": 6304, "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor j in range(N):\n    a=bisect_left(A, B[j])\n    c=bisect_right(C, B[j])\n    ans+=a*(N-c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6849": {"id": 6849, "code": "import math\nH = 10;N = 3\nA = [4, 5, 6]\nif H <= sum(A):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "17719": {"id": 17719, "code": "s = \"0112\"\ns1 = int(s[0])*10 + int(s[1])\ns2 = int(s[2])*10 + int(s[3])\nif  (s1>12 or s1==0) and (s2>12 or s2==0):\n  print('NA')\nelif (s1>12 or s1==0) and 1<=s2<=12:\n  print('YYMM')\nelif (s2>12 or s2==0) and 1<=s1<=12:\n  print('MMYY')\nelif 1<=s1<=12 and 1<=s2<=12:\n  print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "18794": {"id": 18794, "code": "h = 14\nw = 12\nn = 112\ncnt=0\nans=0\nwhile cnt<n:\n    if h>=w:\n        cnt+=h\n    elif h<w:\n        cnt+=w\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1662": {"id": 1662, "code": "n = 10;a = 7;b = 5\nab = a+b\nc = n < ab\nr = ab - n if c else 0\nprint(' '.join([str(i) for i in [min(a,b), r]]))", "coverage": [">", ">", ">", ">", ">"]}, "16961": {"id": 16961, "code": "a = \"D\";b = \"D\"\nif a == b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "9211": {"id": 9211, "code": "s = \"2017/01/31\"\nprint(\"2018/01/\"+s[-2:])", "coverage": [">", ">"]}, "15149": {"id": 15149, "code": "n = 2;p = 0\nA = [1, 3]\no = 0\nfor a in A:\n\tif a % 2:\n\t\to += 1\ne = n - o\nif o == 0 and p == 1:\n\tprint(0)\nelse:\n\tprint(2**e * 2**max(0, o - 1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3707": {"id": 3707, "code": "A = 20;B = 30\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "5283": {"id": 5283, "code": "n = {'9', '4', '1', '7'}\nk={'1','9','7','4'}\nif n==k:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "8855": {"id": 8855, "code": "N = 1\nA1 = [2]\nA2 = [3]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18960": {"id": 18960, "code": "n = 12\nif n%2 ==1:\n    print(0)\n    exit()\ncnt = 0\ni = 1\nif n%2 == 0:\n    while n//(2*(5**i)) > 0:\n        cnt += n//(2*(5**i))\n        i +=1\nprint(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14079": {"id": 14079, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndiv_flg=False\ninc_flg=False\ndec_flg=False\nans=0\nif N==1:\n  print(1)\n  sys.exit()\nfor i in range(N):\n  if inc_flg:\n    if i==N-1:\n      break\n    if A[i]<=A[i+1]:\n      continue\n    else:\n      inc_flg=False\n      div_flg=False\n  elif dec_flg:\n    if i==N-1:\n      break\n    if A[i]>=A[i+1]:\n      continue\n    else:\n      dec_flg=False\n      div_flg=False\n  else:\n    if i==0:\n      ans+=1\n      div_flg=True\n    elif i==N-1:\n      if not div_flg:\n        ans+=1\n      break\n    if A[i]==A[i+1]:\n      if not div_flg:\n        ans+=1\n      div_flg=True\n      continue\n    elif A[i]<A[i+1]:\n      if not div_flg:\n        ans+=1\n      inc_flg=True\n      continue\n    elif A[i]>A[i+1]:\n      if not div_flg:\n        ans+=1\n      dec_flg=True\n      continue\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7417": {"id": 7417, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nrest_H = H - sum(A)\nif rest_H <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7236": {"id": 7236, "code": "h = 20;n = 3\nl = [4, 5, 6]\nprint(\"Yes\" if h <= sum(l) else \"No\")", "coverage": [">", ">", ">"]}, "10230": {"id": 10230, "code": "n = 6\ns = \")))())\"\na = \"\"\nstack = []\nfor i in range(len(s)):\n    if s[i] == \"(\":\n        stack.append(\"(\")\n        a += \"(\"\n    elif s[i] == \")\" and len(stack) == 0:\n        stack.append(\")\")\n        a += \")\"\n    elif s[i] == \")\" and stack[-1] == \")\":\n        stack.append(\")\")\n        a += \")\"\n    else:  \n        stack.pop(-1)\n        a += \")\"\nwhile len(stack) > 0:\n    if stack[len(stack) - 1] == \")\":\n        e = len(stack) - 1\n        s = e\n        while s - 1 >= 0 and stack[s - 1] == \")\":\n            s -= 1\n        a = \"(\" * (e - s + 1) + a\n        stack = stack[:s]\n    elif stack[len(stack) - 1] == \"(\":\n        e = len(stack) - 1\n        s = e\n        while s - 1 >= 0 and stack[s - 1] == \"(\":\n            s -= 1\n        a = a + \")\" * (e - s + 1)\n        stack = stack[:s]\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "18916": {"id": 18916, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit()\nans = 0\nwhile n != 0:\n    n //= 5\n    ans += n//2\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "15498": {"id": 15498, "code": "x = 13;y = 3;z = 1\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "265": {"id": 265, "code": "S = \"a\"\nK = 25\nord_a = ord('a')\nord_z = ord('z')\nk = K\nAns = list(S)\nfor i, s in enumerate(S[:-1]):\n    ord_s = ord(s)\n    dif = ord_z - ord_s + 1\n    if s == 'a':\n        Ans[i] = 'a'\n    elif dif <= k:\n        Ans[i] = 'a'\n        k -= dif\n    else:\n        pass\nAns[-1] = chr(ord_a + (ord(Ans[-1]) + k - ord_a)%26)\nprint(''.join(Ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "6705": {"id": 6705, "code": "import sys\nH = 210;N = 5\narray = [31, 41, 59, 26, 53]\nif not ( 1 <= H <= 10**9 and 1 <= N <= 10**5 ): sys.exit()\nif not ( 1 <= min(array) and max(array) <= 10**4 ): sys.exit()\nprint('Yes') if sum(array) >= H else print('No')", "coverage": [">", ">", ">", ">", ">", ">"]}, "11773": {"id": 11773, "code": "a = 11;b = 30\nb = 1;c = 12\nif a!=c:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15589": {"id": 15589, "code": "x = 64146;y = 123;z = 456\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "11805": {"id": 11805, "code": "A = ['11', '30']\nB = ['12', '1']\nif A[0] == B[0]:\n\tprint(\"0\")\nelse:\n\tprint(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "15058": {"id": 15058, "code": "N = 45;P = 1\nodd = 24\neven = N-odd\nif odd == 0:\n    if P == 0:\n        print(2**even)\n    else:  \n        print(0)\nelse:\n    print(2**even * (2**odd//2))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14075": {"id": 14075, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ndr = 0\nsav = a[0]\nfor i in range(1, n):\n    if dr == 0:\n        if sav < a[i]:\n            dr = 1\n        elif sav > a[i]:\n            dr = -1\n    elif dr == 1:\n        if sav > a[i]:\n            cnt = cnt + 1\n            dr = 0\n    elif dr == -1:\n        if sav < a[i]:\n            cnt = cnt + 1\n            dr = 0\n    sav = a[i]\nans = cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "8107": {"id": 8107, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif (N-K)%(K-1)==0:\n    ans = 1+(N-K)//(K-1)\nelse:\n    ans = 2+(N-K)//(K-1)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "19428": {"id": 19428, "code": "n = 10\nprint(n if n % 2 == 0 else n + n)", "coverage": [">", ">"]}, "19174": {"id": 19174, "code": "N = 12\nif N%2:\n    print(0)\nelse:\n    X=0\n    Y=N//5\n    while Y:\n        X+=Y//2\n        Y//=5\n    print(X)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "14172": {"id": 14172, "code": "import collections\nimport itertools as it\nimport math\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n == 1:\n    print(1)\nelse:\n    ans = 1\n    state = lambda n1, n2: 0 if n1 == n2 else (1 if n2 > n1 else -1)\n    diff = [state(a1, a2) for a1, a2 in zip(a[:-1], a[1:]) if state(a1, a2) != 0]\n    p = 1\n    while p < len(diff):\n        if abs(diff[p] - diff[p-1]) == 2:\n            ans += 1\n            p += 1\n        p += 1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4282": {"id": 4282, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif h1>h2:\n    h2+=24\np=(h2-h1)*60+(m2-m1)\nprint(p-k)", "coverage": [">", ">", "!", ">", ">"]}, "15050": {"id": 15050, "code": "N = 2;P = 0\nA = [1, 3]\nC = [0,0]\nfor i in range(N):\n    if A[i]%2==0:\n        C[0] += 1\n    else:\n        C[1] += 1\nif C[1]==0 and P==1:\n    print(0)\nelif C[1]==0 and P==0:\n    print(2**C[0])\nelse:\n    print((2**C[0])*(2**(C[1]-1)))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", "!", ">"]}, "17693": {"id": 17693, "code": "s = \"1700\"\nnum = ['01','02','03','04','05','06','07','08','09','10','11','12']\nif s[:2] in num and s[2:] in num:\n    print(\"AMBIGUOUS\")\nelif s[:2] in num:\n    print(\"MMYY\")\nelif s[2:] in num:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "414": {"id": 414, "code": "s = ['a']\nk = 25\nnum = len(s)\nfor i in range(num):\n    a = 122-ord(s[i])+1\n    if a <= k and s[i] != 'a':\n        k -= a\n        s[i] = 'a'\nif k > 0:\n    s[-1] = chr(ord(s[-1])+k%26)\nprint(*s, sep='')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "5396": {"id": 5396, "code": "n = 2\nif n % 2 != 0:\n  n = n + 1\nprint(n // 2)", "coverage": [">", ">", "!", ">"]}, "14681": {"id": 14681, "code": "N = 1;P = 1\nA = [50]\neven=0\nfor i in range(N):\n    if A[i]%2==0:\n        even+=1\nif even==N:\n    if P==0:\n        ans=2**N\n    else:\n        ans=0\nelse:\n    ans=2**(N-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "18881": {"id": 18881, "code": "n = 12\nans=0\ntmp=0\np=1\nif n%2==0:\n    k=n//2\n    while True:\n        tmp =k//pow(5,p)\n        ans+=tmp\n        p+=1\n        if tmp==0:\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13764": {"id": 13764, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nans = H2*60 + M2 - H1*60 - M1 - K\nprint(ans)", "coverage": [">", ">", ">"]}, "16166": {"id": 16166, "code": "n = 5\nal = [6, 9, 4, 2, 11]\nals =list(sorted(al))\nm = als[n-1]\nimport bisect\nx = bisect.bisect(als,m/2)\nif abs(m/2 - als[x-1]) > abs(m/2 - als[x]):\n    print(m,als[x])\nelse:\n    print(m,als[x-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3341": {"id": 3341, "code": "A = 20;B = 15\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "13509": {"id": 13509, "code": "sentence = \"haiku,atcoder,tasks\"\nprint(sentence.replace(\",\", \" \"))", "coverage": [">", ">"]}, "18478": {"id": 18478, "code": "h = 2\nw = 100\nn = 200\na = max(h,w)\nprint(-(-n//a))", "coverage": [">", ">", ">", ">", ">"]}, "2098": {"id": 2098, "code": "N = 10;A = 3;B = 5\nmax_=min(A,B)\nmin_=max(0,(min(A,B)-(N-max(A,B))))\nprint(max_,min_)", "coverage": [">", ">", ">", ">"]}, "11023": {"id": 11023, "code": "a = \"akasaka\"\nc=len(a)\nb=a[:(c-1)//2]\nd=a[(c+3)//2-1:]\nif a==a[::-1] and b==b[::-1] and d==d[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "8934": {"id": 8934, "code": "n = 4\nal = [1, 1, 1, 1]\nbl = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    tmp = sum(al[0:i+1]) + sum(bl[i:])\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2443": {"id": 2443, "code": "if __name__ == '__main__':\n    n = 0;m = 3\n    eve = (n*(n-1)) // 2\n    odd = (m*(m-1)) // 2\n    print(eve+odd)", "coverage": [">", ">", ">", ">", ">"]}, "11445": {"id": 11445, "code": "S = \"SUN\"\nif(S=='SUN'):\n    print(7)\nelif(S=='MON'):\n    print(6)\nelif(S=='TUE'):\n    print(5)\nelif (S=='WED'):\n    print(4)\nelif (S=='THU'):\n    print(3)\nelif (S=='FRI'):\n    print(2)\nelse:\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "13969": {"id": 13969, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = n\nprev = a[0]\ntrend ='N'\nfor i in range(1, n):\n    if a[i] > prev:\n        if (trend == 'U' or trend == 'N'):\n            cnt -= 1\n            trend ='U'\n        else:\n            trend = 'N'\n    if a[i] < prev:\n        if (trend == 'D' or trend == 'N'):\n            cnt -= 1\n            trend = 'D'\n        else:\n            trend = 'N'\n    if a[i] == prev:\n        cnt -= 1\n    prev = a[i]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">"]}, "2695": {"id": 2695, "code": "n = \"0489\"\nprint('YNEOS'[n != '1479'::2])", "coverage": [">", ">"]}, "13631": {"id": 13631, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "4904": {"id": 4904, "code": "voca = \"smiles\"\noutput = voca[0] + str(int(len(voca) - 2) )+ voca[-1]\nprint(output)", "coverage": [">", ">", ">"]}, "16665": {"id": 16665, "code": "a = \"H\";b = \"H\"\nprint(\"DH\"[a==b])", "coverage": [">", ">"]}, "7345": {"id": 7345, "code": "monster_hp = 10;quantity_of_skills = 3\nskills = map(int, \"4 5 6\".split())\nskills_list = list(skills)\ntotal_damages = 0\nfor i in skills_list:\n    total_damages += i\nif monster_hp <= total_damages:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10026": {"id": 10026, "code": "n = \"6\"\ncnt = 0\nS = \")))())\"\nm = 0\nfor s in S:\n    if s == \"(\":\n        cnt += 1\n    else:\n        cnt -= 1\n    m = min(m, cnt)\nleft = -min(0, m)\nright = abs(cnt - m)\nprint(\"(\" * left + S + \")\" * right)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "9845": {"id": 9845, "code": "N = 8\nS = \"))))((((\"\ntotal,min_total = 0, 1\nfor s in S:\n    total += 1 if s == '(' else -1\n    if total < min_total:\n        min_total = total    \nprint('('*-min_total+S+')'*(total-min_total) if min_total<0 else S+')'*total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4204": {"id": 4204, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\ntimeW = M1 + H1 * 60\ntimeS = M2 + H2 * 60\nprint(timeS - timeW - K)", "coverage": [">", ">", ">", ">"]}, "8742": {"id": 8742, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,sum(A[:i])+sum(B[i:])+A[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4063": {"id": 4063, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\np = a*60 + b\nq = c*60 + d\nans = q-p-k\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "6461": {"id": 6461, "code": "n = 6\ndat_a = [3, 14, 159, 2, 6, 53]\ndat_b = [58, 9, 79, 323, 84, 6]\ndat_c = [2643, 383, 2, 79, 50, 288]\ndat_a.sort()\ndat_b.sort()\ndat_c.sort()\nimport bisect\nres = 0\nfor i in range(n):\n    x = bisect.bisect_left(dat_a, dat_b[i])\n    y = bisect.bisect_right(dat_c, dat_b[i])\n    res += x * (n - y)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11760": {"id": 11760, "code": "a = [11, 16]\nb = [11, 17]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "5392": {"id": 5392, "code": "N = 5\nprint(int((N + 1) / 2))", "coverage": [">", ">"]}, "9752": {"id": 9752, "code": "N = 6\nS = \")))())\"\nb = 0\ne = 0\nfor s in S:\n    if s == ')':\n        e += 1\n    else:\n        b += 1\n    S = '(' * max(e-b, 0) + S\n    b += max(e-b, 0)\nS += ')' * max(b-e, 0)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "11645": {"id": 11645, "code": "lst = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ns = \"SUN\"\nn = lst.index(s)\nprint(7 - n)", "coverage": [">", ">", ">", ">"]}, "3438": {"id": 3438, "code": "A = 20;B = 30\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", ">"]}, "6502": {"id": 6502, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA=sorted(A)\nB=sorted(B)\nC=sorted(C)\nA2=[0]*N\ns=0\ni=0\nn=A[s]\nwhile True:\n  if B[i]>n:\n    A2[i]+=1\n    s+=1\n    if s==N:\n      break\n    n=A[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  A2[i]=A2[i-1]+A2[i]\nB2=[0]*N\ns=0\ni=0\nn=B[s]\nwhile True:\n  if C[i]>n:\n    B2[i]+=A2[s]\n    s+=1\n    if s==N:\n      break\n    n=B[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  B2[i]=B2[i-1]+B2[i]\nprint(sum(B2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">"]}, "9794": {"id": 9794, "code": "n = 6\ns = \")))())\"\nl_cnt = 0\nr_cnt = 0\nl_ans = 0\nfor i in s:\n    if i == ')':\n        if l_cnt:\n            l_cnt -= 1\n        else:\n            l_ans += 1\n    else:\n        l_cnt += 1\nprint(l_ans*'(' + s + l_cnt*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "9408": {"id": 9408, "code": "s = \"2017/01/07\"\nss = s[:3] + '8' + s[4:]\nprint(ss)", "coverage": [">", ">", ">"]}, "316": {"id": 316, "code": "s = ['a']\nk = 25\nz = ord(\"z\")\na = ord(\"a\")\nfor i in range(len(s)-1):\n    if s[i] == \"a\":\n        continue\n    if z - ord(s[i]) + 1 <= k:\n        k -= z - ord(s[i]) + 1\n        s[i] = \"a\"\nif k > 0:\n    k = k%26\n    x = z - ord(s[-1]) +1\n    if k >= x:\n        k -= z - ord(s[-1]) + 1\n        s[-1] = chr(a + k)\n    else:\n        s[-1] = chr(ord(s[-1])+k)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "3139": {"id": 3139, "code": "S = \"35753\"\nn=len(S)\nans = 1e8\nfor i in range(n-2):\n    m = int(S[i] + S[i+1] + S[i+2])\n    d = abs(m-753)\n    if d < ans:\n        ans = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16489": {"id": 16489, "code": "n = 2\na = [100, 0]\nm = max(a)\nr = -1\nfor i in a:\n  if i != m and abs(m - 2 * i) < abs(m - 2 * r):\n    r = i\nprint(m, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4664": {"id": 4664, "code": "N = ['s', 'm', 'i', 'l', 'e', 's']\nM = []\nM.append(N[0])\nM.append(str(len(N) - 2))\nM.append(N[-1])\ndate = ''.join(M)\nprint(date)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9417": {"id": 9417, "code": "year = \"2018\"\nS = \"2017/01/31\"\nans = year + S[4:]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10492": {"id": 10492, "code": "A = 8;B = 12;K = 2\nC=[]\nfor i in range(1,(min(A,B))+1):\n    if A%i==0 and B%i==0:\n        C.append(i)\nC.sort()\nprint(C[len(C)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18405": {"id": 18405, "code": "H = 14\nW = 12\nN = 112\nhi = max(H, W)\nprint((N+hi-1)//hi)", "coverage": [">", ">", ">", ">", ">"]}, "9912": {"id": 9912, "code": "N = 6\nS = \")))())\"\nans = S\ncnt = 0\nnow = \"\"\nfor s in S:\n    now = s\n    if s == \"(\":\n        cnt += 1\n    elif s == \")\":\n        cnt -= 1\n    if cnt == -1:\n        ans = \"(\" + ans\n        cnt = 0\nif cnt > 0:\n    ans = ans + \")\"*cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "9334": {"id": 9334, "code": "data = ['2017', '01', '07']\ndata[0] = \"2018\"\nprint(\"/\".join(data))", "coverage": [">", ">", ">"]}, "10527": {"id": 10527, "code": "A = 100;B = 50;K = 4\nc = 0\nfor i in range(min(A,B), 0, -1):\n  if A % i == 0 and B % i == 0:\n    c += 1\n    if c == K:\n      ans = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13202": {"id": 13202, "code": "s = \"happy,newyear,enjoy\"\nans=s.replace(\",\",\" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "12504": {"id": 12504, "code": "a = 1;b = 1;k = 1\np=[]\nfor i in range(1,a+1):\n  if a%i==0 and b%i==0:\n    p.append(i)\nn=len(p)\nprint(p[n-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3230": {"id": 3230, "code": "a = 20;b = 30\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "8241": {"id": 8241, "code": "from math import ceil\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = ceil((N-K)/(K-1)) + 1\nprint(ans) ", "coverage": [">", ">", ">", ">", ">"]}, "19527": {"id": 19527, "code": "n = 999999999\nif n%2 !=0:\n    print(2*n)\nelse:\n    print(n)", "coverage": [">", ">", ">", "!", "!"]}, "18958": {"id": 18958, "code": "N = 12\nif N % 2 == 1:\n    ans = 0\nelse:\n    div2 = N // 2\n    n = N // 2\n    k = 1\n    while n // 2**k > 0:\n        div2 += n // 2**k\n        k += 1\n    div5 = 0\n    n = N // 2\n    k = 1\n    while n // 5**k > 0:\n        div5 += n // 5**k\n        k += 1\n    ans = min(div2, div5)\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11426": {"id": 11426, "code": "S = \"SAT\"\nl = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(7):\n    if S == l[i]:\n        print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "16971": {"id": 16971, "code": "h = \"H\";d = \"H\"\nif h=='H' and d=='H':\n    print('H')\nelif h=='H' and d=='D':\n    print('D')\nelif h=='D' and d=='H':\n    print('D')\nelse:\n    print('H')           ", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "1569": {"id": 1569, "code": "N = \"111\"\nif (N[0] == N[1]) and (N[1]==N[2]) and (N[2]==N[0]):\n    print(N)\nelif int(N[0]) == int(N[1]) and int(N[1]) > int(N[2]):\n    print(N[0]*3)\nelif int(N[0]) > int(N[1]):\n    print(N[0]*3)\nelse:\n    print(str(int(N[0])+1)*3)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "514": {"id": 514, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i,j in enumerate(s):\n  if j=='a':continue\n  if ord('z')-ord(j)+1<=k:\n    s[i]='a'\n    k-=ord('z')-ord(j)+1\n  if k==0:break\nif k>0:s[-1]=chr(k%26+ord(s[-1]))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14454": {"id": 14454, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n<=2:\n  print(1)\n  exit()\ncnt=0\nif l[0]>l[1]:\n  ans=\"low\"\nelif l[0]<l[1]:\n  ans=\"high\"\nelse:\n  ans=\"even\"\nfor i in range(2,n):\n  if l[i-1]>l[i] and (ans==\"low\" or ans==\"even\"):\n    ans=\"low\"\n  elif l[i-1]<l[i] and (ans==\"high\" or ans==\"even\"):\n    ans=\"high\"\n  elif l[i-1]==l[i]:\n    continue\n  else:\n    cnt+=1\n    ans=\"even\"\nprint(cnt+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "19297": {"id": 19297, "code": "N = 12\nif N%2 or N<10:\n  print(0)\nelse:\n  cnt,n=0,1\n  while n<=N:\n    cnt+=N//(10*(n))\n    n*=5\n  print(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "161": {"id": 161, "code": "s = \"xyz\"\nK = 4\nk = K\nans = \"\"\nfor i in range(len(s)-1):\n    if(s[i] == \"a\"):\n        ans += s[i]\n        continue\n    if(ord(s[i])+k >= ord(\"z\")+1):\n        ans += \"a\"\n        k -= ord(\"z\")+1-ord(s[i])\n    else:\n        ans += s[i]\na = ord(s[-1])+k%26\nif(a > ord(\"z\")):\n    a -= 26\nans += chr(a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "7579": {"id": 7579, "code": "h = 210;n = 5\nprint('No' if sum(list(map(int, \"31 41 59 26 53\".split())))<h else 'Yes')", "coverage": [">", ">"]}, "2791": {"id": 2791, "code": "S = \"1234567876\"\nans=10**3\nfor i in range(len(S)-2):\n  x=int(S[i])*100+int(S[i+1])*10+int(S[i+2])\n  ans=min(abs(x-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8971": {"id": 8971, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nprint(\"Yay!\" if abs(a-e) <= k else \":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11030": {"id": 11030, "code": "s = \"level\"\nn = len(s)\nlist_s = list(s)\nlist_s_part1 = list_s[0:(n - 1) // 2]\nlist_s_part2 = list_s[(n + 1) // 2:n]\nlist_s_rev = list(reversed(list_s))\nlist_s_part1_rev = list(reversed(list_s_part1))\nlist_s_part2_rev = list(reversed(list_s_part2))\nif ''.join(list_s) == ''.join(list_s_rev) and    ''.join(list_s_part1) == ''.join(list_s_part1_rev) and    ''.join(list_s_part2) == ''.join(list_s_part2_rev):\n    print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "205": {"id": 205, "code": "S = \"a\"\nN = len(S)\nK = 25\nT = []\nfor i in range(N):\n    s = ord(S[i]) - 97\n    a = (26-s) % 26\n    if a <= K:\n        K -= a\n        T.append(\"a\")\n    else:\n        T.append(S[i])\nT[-1] = chr((ord(T[-1]) - 97 + K) % 26 + 97)\nprint(\"\".join(T))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14322": {"id": 14322, "code": "N = 9\nans = 1\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = A[0]\ntrend = 0\nfor a in A[1:]:\n    if (a - prev) * trend < 0:\n        ans += 1\n        trend = 0\n    elif trend == 0:\n        if a - prev > 0:\n            trend = 1\n        elif a - prev < 0:\n            trend = -1\n    prev = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1196": {"id": 1196, "code": "n = 750\na = 111\nwhile a < n:\n    a += 111\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "7659": {"id": 7659, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7434": {"id": 7434, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\nfor v in a:\n  h -= v\n  if h <= 0:\n    print('Yes')\n    break\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "11053": {"id": 11053, "code": "S = \"akasaka\"\nN=len(S)\nSS=S[0:(N-1)//2]\nSSS=S[(N+1)//2:N+1]\nfor i in range((N-1)//2):\n  if S[i]!=S[-1-i]:print('No');exit()\n  if SS[i]!=SS[-1-i]:print('No');exit()\n  if SSS[i]!=SSS[-1-i]:print('No');exit()\nprint('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7933": {"id": 7933, "code": "import math\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\npos_of_1 = A.index(1)\nif K >= pos_of_1 + 1 or N - K <= pos_of_1:\n  print(math.ceil((N - K) / (K - 1)) + 1) \nelse:\n  L = A[:pos_of_1 + 1]\n  R = A[pos_of_1:]\n  res = []\n  for i in range(1, K):\n    l = math.ceil((len(L) - i) / (K - 1)) + 1\n    r = math.ceil((len(R) - K - 1 + i) / (K - 1)) + 1\n    res.append(l + r - 1)\n  print(min(res))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "17174": {"id": 17174, "code": "a = \"D\";b = \"H\"\nif a==b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", "!", "!", ">"]}, "1340": {"id": 1340, "code": "N = 112\ncount=0\nfor i in range(1,10):\n    if (N-1)//int(str(i)*3)>=1:\n        count=i\nprint(str(count+1)*3)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7426": {"id": 7426, "code": "H = 211;N = 5\nA = map(int, \"31 41 59 26 53\".split())\nA_sum = sum(A)\nprint(\"Yes\" if H - A_sum <= 0 else \"No\")", "coverage": [">", ">", ">", ">"]}, "4922": {"id": 4922, "code": "letter = ['s', 'm', 'i', 'l', 'e', 's']\nans = letter[0] + str(len(letter)-2) + letter[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "14485": {"id": 14485, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstatus = 0\nans = 1\nfor i in range(1, n):\n    if status == 0:\n        if a[i-1] < a[i]:\n            status = 1\n        elif a[i-1] > a[i]:\n            status = 2\n    elif status == 1:\n        if a[i-1] > a[i]:\n            ans += 1\n            status = 0\n    elif status == 2:\n        if a[i-1] < a[i]:\n            ans += 1\n            status = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "4401": {"id": 4401, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nv1 = 60*H1+M1\nv2 = 60*H2+M2\nprint(v2-v1-K)", "coverage": [">", ">", ">", ">"]}, "5083": {"id": 5083, "code": "s = \"internationalization\"\nn = len(s)\nprint (s[0]+((str)(n-2))+s[n-1])", "coverage": [">", ">", ">"]}, "3613": {"id": 3613, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 20;B = 30\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17456": {"id": 17456, "code": "s = \"1700\"\na = s[0] + s[1]\nb = s[2] + s[3]\np = 0\nq = 0\nif a == \"01\" or a == \"02\" or a == \"03\" or a == \"04\" or a == \"05\" or a == \"06\" or a == \"07\" or a == \"08\" or a == \"09\" or a == \"10\" or a == \"11\" or a == \"12\":\n    p = 1\nif b == \"01\" or b == \"02\" or b == \"03\" or b == \"04\" or b == \"05\" or b == \"06\" or b == \"07\" or b == \"08\" or b == \"09\" or b == \"10\" or b == \"11\" or b == \"12\":\n    q = 1  \nif p == 1 and q == 1:\n    print(\"AMBIGUOUS\")\nelif p == 1 and q == 0:\n    print(\"MMYY\")\nelif p == 0 and q == 1:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "358": {"id": 358, "code": "S = ['x', 'y', 'z']\nk = 4\nalp = \"abcdefghijklmnopqrstuvwxyza\"\nto_a = {alp[i]: 26 - i for i in range(1, len(alp))}\nfor i, s in enumerate(S):\n    if to_a[s] > k:\n        continue\n    else:\n        S[i] = \"a\"\n        k -= to_a[s]\n    if k == 0:\n        break\nk %= 26\ni = alp.index(S[-1]) + k\nS[-1] = alp[i]\nans = \"\".join(S)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13131": {"id": 13131, "code": "x = \"6\"\nli=['3', '5', '7']\nprint('YES' if x in li else 'NO')", "coverage": [">", ">", ">"]}, "9138": {"id": 9138, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3] = \"8\"\nprint(\"\".join(s))", "coverage": [">", ">", ">"]}, "578": {"id": 578, "code": "S = \"codefestival\"\nK = 100\nAns = []\nfor s in S[:-1]:\n    if s == 'a':\n        Ans.append('a')\n        continue\n    if (123 - ord(s)) <= K:\n        Ans.append('a')\n        K -= 123 - ord(s)\n    else:\n        Ans.append(s)\nK %= 26\nif ord(S[-1]) + K >= 123:\n    Ans.append(chr(ord(S[-1]) + K - 26))\nelse:\n    Ans.append(chr(ord(S[-1]) + K))\nprint(''.join(Ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "7331": {"id": 7331, "code": "h = 210;n = 5\nal = [31, 41, 59, 26, 53]\nprint(['No','Yes'][sum(al)>=h])", "coverage": [">", ">", ">"]}, "4222": {"id": 4222, "code": "h = 10;m = 0;H = 15;M = 0;K = 30\npre=60*h+m\npost=60*H+M\nprint(post-pre-K)", "coverage": [">", ">", ">", ">"]}, "10408": {"id": 10408, "code": "a = 100;b = 50;k = 4\ni = min(a,b)\nans = 0\nwhile 1:\n  if not(a % i)  and not(b % i):\n    ans += 1\n  if ans == k:\n    break\n  i -= 1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7494": {"id": 7494, "code": "h = 20;n = 3\nxlist = [4, 5, 6]\nif sum(xlist)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "2899": {"id": 2899, "code": "s = \"1234567876\"\nmin_v = 9999\nfor i in range(len(s) - 2):\n    n = int(s[i:i + 3])\n    min_v = min(min_v, abs(753 - n))\nprint(min_v)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15926": {"id": 15926, "code": "a = 12;b = 4\nc=b*2\nif(c>a):\n    c=a\nprint(a-c)", "coverage": [">", ">", ">", "!", ">"]}, "6685": {"id": 6685, "code": "H = 210;M = 5\nA = [31, 41, 59, 26, 53]\na = (sum(A))\nif a >= H:\n    ans = \"Yes\"\nelse:\n    ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16827": {"id": 16827, "code": "arr = ['H', 'H']\narr = list(map(str,arr))\na = arr[0]\nb = arr[1]\nif a == 'H' and b == 'H':\n    print('H')\nelif a == 'D' and b == 'H':\n    print('D')\nelif a == 'D' and b == 'D':\n    print('H')\nelif a == 'H' and b == 'D':\n    print('D')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "1107": {"id": 1107, "code": "n = \"111\"\nk = int(n) % 111\nif k==0:\n    print(n)\nelse:\n    if n[0]>n[1] or (n[0]==n[1] and n[1]>n[2]):\n        print(n[0]*3)\n    else:\n        print((str(int(n[0])+1))*3)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "17506": {"id": 17506, "code": "S = \"0112\"\nans='None'\nif 1<=int(S[:2]) <=12 and 1<=int(S[2:])<=12:\n    ans='AMBIGUOUS'\nelif 1<=int(S[:2])<=12:\n    ans='MMYY'\nelif 1<=int(S[2:])<=12:\n    ans='YYMM'\nelse:\n    ans='NA'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "18532": {"id": 18532, "code": "import math\nH = 2\nW = 100\nN = 200\nlarge = max(H,W)\nprint(math.ceil(N/large))", "coverage": [">", ">", ">", ">", ">", ">"]}, "10917": {"id": 10917, "code": "S = \"akasaka\"\ns = list(S)\nf = s[:int((len(s)-1)/2)]\nl = s[int((len(s)+3)/2-1):]\nif f == l:\n    while len(f) > 1:\n        if f[0] == f[-1]:\n            f.pop(0)\n            f.pop()\n    if len(f) <= 1:\n        while len(l) > 1:\n            if l[0] == l[-1]:\n                l.pop(0)\n                l.pop()\n        if len(l) <= 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8296": {"id": 8296, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nans = k\ncount = 1\nwhile ans < n:\n    ans += k-1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6390": {"id": 6390, "code": "from bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nF = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    b = B[i]\n    indC = bisect_right(C,b)\n    if i<N-1:\n        indC1 = bisect_right(C,B[i+1])\n    else:\n        indC1 = N\n    F[i] = F[i+1]+indC1-indC\nG = [0 for _ in range(N+1)]\nfor i in range(N-1,-1,-1):\n    G[i] = G[i+1]+F[i]\ncnt = 0\nfor i in range(N):\n    a = A[i]\n    indB = bisect_right(B,a)\n    cnt += G[indB]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8072": {"id": 8072, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nA.sort()\nfor i in range(1, N):\n    if A[i] != A[0]:\n        idx = i\n        break\nif (N - idx) % (K - 1) == 0:\n    print(int((N - idx) / (K - 1)))\nelse:\n    print(int((N - idx) / (K - 1)) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11382": {"id": 11382, "code": "s = \"SAT\"\nw = {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}\nprint(w[s])", "coverage": [">", ">", ">"]}, "18140": {"id": 18140, "code": "S = \"1905\"\nans = [0,0]\nif 1<=int(S[:2]) and int(S[:2]) <= 12 :\n    ans[0] = 1\nif 1 <=int(S[2:]) and int(S[2:]) <= 12 :\n    ans[1] = 1\nif ans == [1,1] :\n    print('AMBIGUOUS')\nelif ans == [0,0] :\n    print('NA')\nelif ans == [0,1] :\n    print('YYMM')\nelif ans == [1,0] :\n    print('MMYY')", "coverage": [">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "8718": {"id": 8718, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n    t = 0\n    for j in range(0, min(N, i + 1)):\n        t += A1[j]\n    for k in range(i, N):\n        t += A2[k]\n    ans = max(t, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17465": {"id": 17465, "code": "s = ['1', '7', '0', '0']\na = int(s[0]+s[1])\nb = int(s[2]+s[3])\nif  1<=a<=12 and 1<=b<=12:\n  print('AMBIGUOUS')\nelif (a>12 or a==0) and 1<=b<=12:\n  print('YYMM')\nelif (b>12 or b==0) and 1<=a<=12:\n  print('MMYY')\nelif (a>12 or a==0) and (b>12 or b==0):\n  print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "12799": {"id": 12799, "code": "X = \"6\"\nif X in [\"3\",\"5\",\"7\"]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "8646": {"id": 8646, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "7543": {"id": 7543, "code": "H = 210;n = 5\narr = [31, 41, 59, 26, 53]\nsum = 0\nfor x in arr:\n\tsum += x\nprint(\"Yes\" if sum >= H else \"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "945": {"id": 945, "code": "k = 101\nans = -1\nx = 7%k\nfor n in range(1,k+10):\n    if x == 0:\n        ans = n\n        break\n    x = (10*x+7)%k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15653": {"id": 15653, "code": "x = 12;y = 3;z = 1\na=x//(y+z)\nprint(a-1 if a*(y+z)+z>x else a)", "coverage": [">", ">", ">"]}, "14338": {"id": 14338, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ndir = 0\nold = a[0]\nans = 1\nfor i in range(1, len(a)):\n    now = a[i]\n    if dir == 0:\n        if old < now:\n            dir = 1\n        elif old > now:\n            dir = -1\n    elif dir == 1:\n        if old > now:\n            dir = 0\n            ans += 1\n    elif dir == -1:\n        if old < now:\n            dir = 0\n            ans += 1\n    old = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13686": {"id": 13686, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nhm = ((h2-h1)*60)-(m1-m2)-k\nprint(hm)", "coverage": [">", ">", ">"]}, "12991": {"id": 12991, "code": "n = 6\nprint(\"YES\" if n in (3,5,7) else \"NO\")", "coverage": [">", ">"]}, "4304": {"id": 4304, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nstart,end = 60*H1+M1,60*H2+M2\nprint(abs(start-end) - K) if end-K>0 else print(0)", "coverage": [">", ">", ">"]}, "10278": {"id": 10278, "code": "n = 6\nN = \")))())\"\nL = 0\nR = 0\nnum = 0\nfor c in N:\n    if c == '(':\n        num += 1\n    else:\n        if num:\n            num -= 1\n        else:\n            L += 1\nR = num\nprint('('*L+N+')'*R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "12085": {"id": 12085, "code": "x1 = 11;y1 = 16\nx2 = 11;y2 = 17\nif x1 == x2:\n    print(0)\nelse:\n    print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "983": {"id": 983, "code": "import bisect\nN = 111\narr = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nans_idx = bisect.bisect_left(arr, N)\nprint(arr[ans_idx])", "coverage": [">", ">", ">", ">", ">"]}, "8160": {"id": 8160, "code": "import math\nn = 3;k = 3\naa = (1, 2, 3)\np = 0\nfor i in range(n):\n    if aa[i] == 1:\n        p = i\n        break\nn -= 1\nk -= 1\nx = math.ceil(n / k)\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5812": {"id": 5812, "code": "n = 5\nx = int(n/2)\nif n%2 == 1:\n    ans = x + 1\nelse:\n    ans = x\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9396": {"id": 9396, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3] = \"8\"\nprint(\"\".join(S))", "coverage": [">", ">", ">"]}, "783": {"id": 783, "code": "import sys\nK = 101\na = 7 % K\nfor k in range(K + 2):\n    if a == 0:\n        print(k + 1)\n        break\n    a = (a * 10 + 7) % K\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15765": {"id": 15765, "code": "x = 64145;y = 123;z = 456\nmitumori=x//(y+z)\nif x - mitumori*(y+z)>=z:print(mitumori)\nelse:print(mitumori-1)", "coverage": [">", ">", ">", ">"]}, "7360": {"id": 7360, "code": "H = 211;N = 5\nN = [31, 41, 59, 26, 53]\nprint(\"Yes\") if(sum(N) >= H) else print(\"No\")", "coverage": [">", ">", ">"]}, "7425": {"id": 7425, "code": "H = 210;N = 5\nA = map(int, \"31 41 59 26 53\".split())\nA_sum = sum(A)\nprint(\"Yes\" if H - A_sum <= 0 else \"No\")", "coverage": [">", ">", ">", ">"]}, "10334": {"id": 10334, "code": "import math\nfrom collections import deque\nfrom collections import Counter\na = 1;b = 1;k = 1\ng=math.gcd(a,b)\nd=[]\nfor i in range(1,int(pow(g,0.5))+1):\n  if g%i==0:\n    d.append(i)\n    if g//i not in d:\n      d.append(g//i)\nd.sort(reverse=True)\nprint(d[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5561": {"id": 5561, "code": "S = 2\na = (S // 2) + (S % 2)\nprint(int(a))", "coverage": [">", ">", ">"]}, "4828": {"id": 4828, "code": "s = \"internationalization\"\ncount = 0\nfor x in range(1,len(s)-1,1):\n  count +=1\nprint(s[0]+str(count)+s[count+1])", "coverage": [">", ">", ">", ">", ">"]}, "16966": {"id": 16966, "code": "icase=0\nif icase==0:\n    a = \"D\";b = \"H\"\n    if a==\"H\":\n        print(b)\n    elif a==\"D\":\n        if b==\"H\":\n            print(\"D\")\n        elif b==\"D\":\n            print(\"H\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "4324": {"id": 4324, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nA=60*a+b\nB=60*c+d\nprint(B-A-k)", "coverage": [">", ">", ">", ">"]}, "18042": {"id": 18042, "code": "date = \"1905\"\nif 1<=int(date[:2])<=12:\n    if 1 <= int(date[2:]) <= 12:\n        print(\"AMBIGUOUS\")\n        exit(0)\n    else:\n        print(\"MMYY\")\n        exit(0)\nif int(date[2:])==0 or 13 <= int(date[2:]):\n    print(\"NA\")\n    exit(0)\nprint(\"YYMM\")", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "5183": {"id": 5183, "code": "s = \"smiles\"\nS = s[0] + str(len(s) - 2) + s[-1]\nprint(S)", "coverage": [">", ">", ">"]}, "19520": {"id": 19520, "code": "n = 10\nfor i in range(1, 100000000, 1):\n    if(n*i % 2==0):\n        print(n*i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "8087": {"id": 8087, "code": "N = 4;K = 3\nL = [2, 3, 1, 4]\nres = (N-1)//(K-1)\nif (N-1) % (K-1) != 0:\n  print(res+1)\nelse:\n  print(res)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9242": {"id": 9242, "code": "s = \"2017/01/07\"\nprint(s.replace(\"2017\", \"2018\"))", "coverage": [">", ">"]}, "627": {"id": 627, "code": "s = ['a']\nk = 25\nfor i in range(len(s)):\n    if i==len(s)-1:\n        s[-1]=chr((ord(s[i])-97+k)%26+97)\n        break\n    if s[i]=='a':\n        continue\n    if 123-ord(s[i])<=k:\n        k-=123-ord(s[i])\n        s[i]='a'\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "15658": {"id": 15658, "code": "isu = 12;hito = 3;sukima = 1\nninzuu = 0\nwhile True:\n  ans = isu // ((hito + sukima) * ninzuu + sukima)\n  if ans == 0:\n    break\n  ninzuu = ninzuu + 1\nprint(ninzuu-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17551": {"id": 17551, "code": "s = \"0112\"\nif 1 <= int(s[2:4]) <= 12 and 1 <= int(s[0:2]) <= 12:\n    print('AMBIGUOUS')\nelif 1 <= int(s[2:4]) <= 12:\n    print('YYMM')\nelif 1 <= int(s[0:2]) <= 12:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8525": {"id": 8525, "code": "n = 1\ncandy_map = []\ncandy_map.append(list(map(int, \"2\".split())))\ncandy_map.append(list(map(int, \"3\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "18672": {"id": 18672, "code": "H = 14\nW = 12\nN = 112\nans = 0\nnum = 0\nbig = 0\nif H < W:\n  big = W\nelse:\n  big = H\nwhile num < N:\n  num += big\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14774": {"id": 14774, "code": "n = 2;p = 0\na = [1, 3]\nodd = 0\neven = 0\nfor ai in a:\n    if(ai%2==0):\n        even += 1\n    else:\n        odd += 1\nif(p==1)&(odd==0):\n    print(0)\nelif(p==0)&(odd==0):\n    print(2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", "!", ">"]}, "1124": {"id": 1124, "code": "N = 750\nfor i in range(111, 999+1, 111):\n    if i >= N:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "9725": {"id": 9725, "code": "n = 6\ns = \")))())\"\nss = s\nwhile ss.count('()'):\n    ss = ss.replace('()', '')\nleft, right = ss.count('('), ss.count(')')\nprint('(' * right + s + ')' * left)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14259": {"id": 14259, "code": "p = -1\nxp = -1\nans = 1\nfor i in \"1 2 3 2 1 999999999 1000000000\".split(\" \"):\n  i = \"1\"\n  if i == p: continue\n  if p != -1:\n    x = p < i\n    if xp != -1:\n      ans += x != xp\n    if xp != -1 and x != xp:\n      xp = -1\n    else:\n      xp = x\n  p = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "9159": {"id": 9159, "code": "wrong_date = \"2017/01/31\"\nexact_date = wrong_date.replace('7', '8', 1)\nprint(exact_date)", "coverage": [">", ">", ">"]}, "7665": {"id": 7665, "code": "M = 10;N = 3\nN_List = [4, 5, 6]\nif sum(N_List) < M:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "6424": {"id": 6424, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nbn = [0]*n\nj = 0\nfor i in range(n):\n  bi = b[i]\n  while(j<n):\n    if bi < c[j]:\n      bn[i] = n-j\n      break\n    j += 1\nbnt = sum(bn)\nbs = 0\nj = 0\nans = 0\nfor i in range(n):\n  ai = a[i]\n  while(j<n):\n    if ai < b[j]:\n      ans += bnt - bs\n      break\n    bs += bn[j]\n    j += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18295": {"id": 18295, "code": "H = 2\nW = 100\nN = 200\nif H<=W: big=W\nelse: big=H\nif N%big==0: ans=N//big\nelse: ans=N//big+1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">"]}, "7884": {"id": 7884, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((n-2)//(k-1)+1)", "coverage": [">", ">", ">"]}, "15020": {"id": 15020, "code": "n = 3;p = 0\na = [1, 1, 1]\nodds = sum(i%2 for i in a)\nif odds>0:\n    print(2**(n-1))\nelif p==0:\n    print(2**(n))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "10686": {"id": 10686, "code": "A = 100;B = 50;K = 4\ncount=0\ni=min(A,B)+1\nwhile count<K:\n    i-=1\n    if A%i==0 and B%i==0:\n        count+=1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3634": {"id": 3634, "code": "a = 20;b = 30\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "10984": {"id": 10984, "code": "S = \"atcoder\"\nN = len(S)\nif S==S[::-1] and S[:N//2]==S[:N//2][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "4335": {"id": 4335, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nTIME = (H2-H1)*60\nTIME = TIME+(M2-M1)\nprint(TIME-K)", "coverage": [">", ">", ">", ">"]}, "4853": {"id": 4853, "code": "a = \"smiles\"\nprint(a[0] + str(len(a) - 2) + a[-1])", "coverage": [">", ">"]}, "3057": {"id": 3057, "code": "import sys\nimport copy\nimport math\nimport itertools\nS = \"1111111111\"\ntmp=753\nfor i in range(len(S)):\n    if abs(int(S[i:i+3])-753)<tmp:\n        tmp=abs(int(S[i:i+3])-753)\nprint(tmp)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14184": {"id": 14184, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nF=0\nK=1\nb=A[0]\nfor a in A:\n    if F==0:\n        if b<a:\n            F=1\n            b=a\n        elif b>a:\n            F=-1\n            b=a\n    elif F==1 and b>a:\n        K+=1\n        F=0\n    elif F==-1 and b<a:\n        K+=1\n        F=0\n    b=a\nprint(K)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14032": {"id": 14032, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nprev = A[0]\nans = 1\nfor i in range(1, N):\n    if A[i] > prev:\n        pls = \"plus\"\n        break\n    elif A[i] < prev:\n        pls = \"minus\"\n        break\nelse:\n    print(1)\n    exit()\nfor i in range(1, N):\n    if pls == \"plus\" and prev > A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"minus\" and prev < A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"even\" and prev < A[i]:\n        pls = \"plus\"\n    elif pls == \"even\" and prev > A[i]:\n        pls = \"minus\"\n    prev = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">", ">", ">", ">"]}, "5244": {"id": 5244, "code": "Astr = \"xyz\"\nresult=Astr[0]+str(len(Astr)-2)+Astr[len(Astr)-1]\nprint(result)", "coverage": [">", ">", ">"]}, "13716": {"id": 13716, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nprint((c-a)*60+(d-b)-k)", "coverage": [">", ">"]}, "8982": {"id": 8982, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nif e - a <= k:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8539": {"id": 8539, "code": "N = 1\nA1 = [2]\nA2 = [3]\ncandies = [sum(A1[:i+1] + A2[i:]) for i in range(N)]\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">"]}, "10849": {"id": 10849, "code": "s = \"level\"\nt = s[::-1]\nn = len(s)\na = s[:(n - 1) // 2]\nb = t[:(n - 1) // 2]\nif s == t and a == a[::-1] and b == b[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19505": {"id": 19505, "code": "R = 999999999\nif R%2==0:\n    print(R)\nelse:\n    print(R*2)", "coverage": [">", ">", "!", "!", ">"]}, "19109": {"id": 19109, "code": "n = 5\nif n%2==1:\n    print(0)\nelse:\n    i=1\n    cnt=0\n    while n//(5**i*2) > 0:\n        cnt += n//((5**i)*2)\n        i += 1\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8133": {"id": 8133, "code": "from math import ceil\nN = 3;K = 3\nA = [1, 2, 3]\nA.sort()\ncnt = 1\nfor i in range(1, N):\n    if A[0] == A[i]:\n        cnt += 1\nprint(ceil((N-cnt)/(K-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11896": {"id": 11896, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(\"1\" if d1 > d2 else \"0\")", "coverage": [">", ">", ">"]}, "10485": {"id": 10485, "code": "a = \"1\";b = \"1\";c = \"1\"\na=int(a)\nb=int(b)\nc=int(c)\nd=0\nif a>=b:\n  for i in range(101):\n    if a%(b-i)==0 and b%(b-i)==0:\n      d=d+1\n      if d==c:\n        print(b-i)\n        break\nif a<b:\n  for i in range(101):\n    if a%(a-i)==0 and b%(a-i)==0:\n      d=d+1\n      if d==c:\n        print(a-i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "13029": {"id": 13029, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nN = 6\nprint('YES' if N==7 or N==5 or N==3 else 'NO')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7975": {"id": 7975, "code": "import math\nn = 8;k = 3\nAs = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "8587": {"id": 8587, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3102": {"id": 3102, "code": "s = \"1111111111\"\nans = 10**8\nfor i in range(len(s)-2):\n  ans = min(ans, abs(753-int(s[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "11733": {"id": 11733, "code": "M = 11;D = 30\nMM = 12;DD = 1\nif MM-1==M or (MM-1==0 and M==12):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9530": {"id": 9530, "code": "S = \"2017/01/07\"\nS=S[:3]+\"8\"+S[4:]\nprint(S)", "coverage": [">", ">", ">"]}, "1882": {"id": 1882, "code": "n = 10;a = 3;b = 5\nans=[0,0]\nans[0]=min(a,b)\nans[1]=max(0,a+b-n)\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "8461": {"id": 8461, "code": "N = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nMAX=0\nfor i in range(N):\n  tmp = sum(a1[:i+1])+sum(a2[i:])\n  MAX = max(MAX,tmp)\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "659": {"id": 659, "code": "K = 101\nseven_number = 0\nality = 0\nfor ans in range(1,10**7):\n        if ans > K:\n            print(\"-1\")\n            break\n        else:\n            seven_number = (seven_number*10+7) % K\n            if seven_number ==0:\n                print(ans)\n                break", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "6524": {"id": 6524, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nX = []\nj = 0\nfor i in range(n):\n    while j < n and B[i] >= C[j]:\n        j += 1\n    X.append(n-j)\nS = [0]\nfor i in range(n):\n    S.append(S[-1]+X[i])\nj = 0\nans = 0\nfor i in range(n):\n    while j < n and A[i] >= B[j]:\n        j += 1\n    ans += S[n]-S[j]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4812": {"id": 4812, "code": "st_list = ['x', 'y', 'z']\nprint(st_list[0]+str(len(st_list[1:-1]))+st_list[-1]) ", "coverage": [">", ">"]}, "9659": {"id": 9659, "code": "n = 8\ns = \"))))((((\"\nopens = 0\nl = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        opens += 1\n    else:\n        opens -= 1\n        if opens < 0:\n            l += 1\n            opens = 0\nprint(\"(\"*l + s + \")\"*opens)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "16267": {"id": 16267, "code": "n = 5\na = [6, 9, 4, 2, 11]\nn1=max(a)\nn2=-n1\nnc=n1/2\na.pop(a.index(max(a)))\nfor m in a:\n  if abs(m-nc)<abs(n2-nc):\n    n2=m\nprint (n1,n2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4939": {"id": 4939, "code": "s = \"internationalization\"\nprint(\"{0}{1}{2}\".format(s[0], len(s)-2, s[-1]))", "coverage": [">", ">"]}, "13694": {"id": 13694, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nif c*60+d-a*60-b<k:\n    print(0)\nelse:\n    print(c*60+d-a*60-b-k)", "coverage": [">", ">", "!", "!", ">"]}, "15890": {"id": 15890, "code": "a = 100000;b = 1;c = 1\nn=a//(b+c)\nm=a-n*(b+c)\nif m//c==1:\n    print(n)\nelse:\n    print(n-1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13073": {"id": 13073, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ns = 6\nif s in [3,5,7]: print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14660": {"id": 14660, "code": "import collections\nn = 3;p = 0\na = [1, 1, 1]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif p == 0:\n  if a2[1] == 0:\n    print(2 ** n)\n  else:\n    print(2 ** (n - 1))\nelse:\n  if a2[1] == 0:\n    print(0)\n  else:\n    print(2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "16677": {"id": 16677, "code": "a = \"H\";b = \"H\"\nd = {'H':'D','D':'H'}\nif a=='H':\n  print(b)\nelse:\n  print(d[b])", "coverage": [">", ">", ">", ">", "!", "!"]}, "12005": {"id": 12005, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(0 if M1 == M2 else 1)", "coverage": [">", ">", ">"]}, "15673": {"id": 15673, "code": "import math\nX = 64145;Y = 123;Z = 456\nX -= Z\nprint(math.floor(X/(Y+Z)))", "coverage": [">", ">", ">", ">"]}, "7224": {"id": 7224, "code": "hp = \"20\";sp = \"3\"\nhp = int(hp)\nsp = int(sp)\nattack = ['4', '5', '6']\ndamage = 0\nfor i, new in enumerate(attack):\n    attack[i] = int(attack[i])\nfor i in range(0,sp):\n    damage += attack[i]\nif damage >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5915": {"id": 5915, "code": "import sys\nn = 2\nif n % 2 == 0:\n    print(n // 2)\nelse:\n    print(n // 2 + 1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13103": {"id": 13103, "code": "x = \"6\"\nlist=[\"3\", \"5\", \"7\"]\nif x in list:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3862": {"id": 3862, "code": "x = 13;y = 3;z = 1\nres=x-z\nans=0\nwhile res>=y+z:\n    res-=(y+z)\n    ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18969": {"id": 18969, "code": "n = 12\nif n%2:\n    print(0)\nelse:\n    ans = 0\n    for i in range(1,100):\n        ans += (n//(5**i*2))\n        if n < 5**i:\n            break\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7552": {"id": 7552, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint(\"Yes\" if sum(a)>=h else \"No\")", "coverage": [">", ">", ">"]}, "14119": {"id": 14119, "code": "N = 9\nnow=0\nans=1\nS=0\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nfor i in range(1,N):\n   X=l[i]-l[i-1]\n   X=0 if X==0 else 1 if X>0 else -1\n   if X==0:\n      continue\n   elif S ==0:\n      S=X\n   elif S != X:\n      ans+=1\n      S=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "10102": {"id": 10102, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\na=0\nb=0\nc=0\nfor i in range(n):\n    d=s[i]\n    if d=='(':\n        a+=1\n    else:\n        b+=1\n        if b-c>a:\n            c+=1\nprint('('*c+''.join(s)+')'*(a-b+c))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "8865": {"id": 8865, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "1515": {"id": 1515, "code": "n = 112\nfor i in range(100,1000):\n    if i >= n and i%100//10 == i%10 == i//100:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "1754": {"id": 1754, "code": "N = 10;A = 3;B = 5\nif N-A-B>0:\n\tW=0\nelse:\n    W=A+B-N\nprint(min(A,B),W)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12880": {"id": 12880, "code": "x = \"5\"\nif x in '753':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "14233": {"id": 14233, "code": "n = 6\nnum_list = [1, 2, 3, 2, 2, 1]\nif len(num_list)==1:\n  print(1)\nelse:\n  res = 1\n  flag = None\n  pre = num_list[0]\n  for i in num_list[1:]:\n    if pre > i and not flag:\n      flag = 'down'\n    elif pre < i and not flag:\n      flag = 'up'\n    elif (pre > i and flag=='up') or (pre < i and flag=='down'):\n      res += 1\n      flag = None\n    pre = i\n  print(res)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "203": {"id": 203, "code": "s = \"codefestival\"\nK = 100\nfor i in range(len(s)-1):\n    z2a = (ord('z') + 1 - ord(s[i])) % 26\n    if z2a <= K:\n        s = s[:i] + 'a' + s[i+1:]\n        K -= z2a\nprint(s[:len(s)-1] + chr(((ord(s[len(s)-1]) - ord('a')) + K % 26) % 26 + ord('a')))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19514": {"id": 19514, "code": "s = 3\nstart=s*2\nif s%2==0:\n  start=int(start/2)\nprint(start)", "coverage": [">", ">", ">", "!", ">"]}, "9669": {"id": 9669, "code": "from collections import deque\nN = 3\nS = \"())\"\nans = deque([])\nemp = deque([])\nfor s in S[::-1]:\n    if s == \")\":\n        ans.append('(')\n    else:\n        if ans:\n            ans.pop()\n        else:\n            emp.append(')')\nans = list(ans)\nemp = list(emp)\nprint(\"\".join(ans)+S+\"\".join(emp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "5759": {"id": 5759, "code": "score = 2\nif score % 2 == 1:\n    print(int((score+1)/2))\nelse:\n    print(int(score/2))", "coverage": [">", ">", "!", "!", ">"]}, "6609": {"id": 6609, "code": "import sys\ninput = sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nimport bisect\na.sort()\nc.sort()\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (len(c) - bisect.bisect_right(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13357": {"id": 13357, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint('%s %s %s'%(a,b,c))", "coverage": [">", ">"]}, "14189": {"id": 14189, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(n - 1):\n    if flag == 0:\n        if a[i + 1] - a[i] > 0:\n            flag = 1\n        elif a[i + 1] - a[i] < 0:\n            flag = -1\n    elif flag == 1 and a[i + 1] - a[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a[i + 1] - a[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "1375": {"id": 1375, "code": "n = ['1', '1', '2']\nx = int(n[0]*3)\ny = int(n[0]+n[1]+n[2])\nif x >= y:\n  print(x)\nelse:\n  print(x+111)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5165": {"id": 5165, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nprint(s[0] + str(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "17796": {"id": 17796, "code": "s = \"0112\"\nn1 = int(s[:2])\nn2 = int(s[2:])\nif 1 <= n1 <= 12 and 1 <= n2 <= 12:\n  print(\"AMBIGUOUS\")\nelif (n1 > 12 or n1 == 0) and 1 <= n2 <= 12:\n  print(\"YYMM\")\nelif (n2 > 12 or n2 == 0) and 1 <= n1 <= 12:\n  print(\"MMYY\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12615": {"id": 12615, "code": "A = 1;B = 1;K = 1\np = []\ni = 0\nm = min(A,B)\nfor i in range(1,m+1):\n  if A%i == 0 and B%i == 0:\n    p.append(i)\np.sort()\nprint(p[len(p)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13254": {"id": 13254, "code": "nim = \"haiku,atcoder,tasks\"\nreplace_report = nim.replace(',', ' ')\nprint(replace_report)", "coverage": [">", ">", ">"]}, "15403": {"id": 15403, "code": "x = 13;y = 3;z = 1\nans = 0\nx -= z\nwhile x >= 0:\n    x -= y+z\n    if x >= 0: ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8118": {"id": 8118, "code": "n = 3;k = 3\na = [1, 2, 3]\ni = a.index(1)\ns = n\nfor j in range(i-k+1, i+k):\n    if j < 0:\n        continue\n    elif j >= n:\n        continue\n    else:\n        l = j\n        u = (n-1-j)\n        t = (l+k-2) // (k-1) + (u+k-2) // (k-1)\n        s = min(s, t)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "16854": {"id": 16854, "code": "a = \"H\";b = \"H\"\nprint(\"H\" if a==b else \"D\")", "coverage": [">", ">"]}, "15457": {"id": 15457, "code": "x = 100000;y = 1;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">"]}, "17732": {"id": 17732, "code": "s = \"1700\"\na= s[0:2]\nb= s[2:4]\na = int(a)\nb= int(b)\nif a == 0 or b == 0:\n  if b!= 0 and b<13:\n    print('YYMM')\n  elif a!= 0 and a<13:\n    print('MMYY')\n  else:\n    print('NA')\nelif a<13 or b<13:\n  if a>12:\n    print('YYMM')\n  elif b>12:\n    print('MMYY')\n  else:\n    print('AMBIGUOUS')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "7835": {"id": 7835, "code": "import sys\nimport math\nn = 8;k = 3\nalist = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "1115": {"id": 1115, "code": "n = 750\na = [111,222,333,444,555,666,777,888,999]\nans = 0\nfor i in a:\n  if n > i:\n    continue\n  ans = i\n  break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16327": {"id": 16327, "code": "import bisect\nN = 2\na = {0, 100}\nA = sorted(list(a))\nM = max(A)\nnum = M//2\nindex = bisect.bisect_right(A,num)\nif index > 0 and abs(num - A[index]) > abs(num - A[index-1]):\n    index = index-1\nif M != A[index]:\n    print(M,A[index])\nelse:\n    print(M,A[index-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "1290": {"id": 1290, "code": "n = 750\nfor i in range(9):\n  if n<=i*111:\n    print((i)*111)\n    break\nelse:\n  print(999)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "12945": {"id": 12945, "code": "X = \"6\"\nif X in '753':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "14272": {"id": 14272, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\na = 0\nS = 0\nnum = 1\nfor i in range(1,N):\n    if A[i] - A[i - 1] == 0:\n        a = 0\n    elif A[i] - A[i - 1] > 0:\n        a = 1\n    else:\n        a = 2\n    if S == 0:\n        S = a\n    elif (S != a) and (a != 0):\n        num += 1\n        S = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "18040": {"id": 18040, "code": "s = 112\nyy = s // 100\nmm = s % 100\nif 1 <= yy <= 12:\n    if 1 <= mm <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= mm <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "14209": {"id": 14209, "code": "if __name__ == '__main__':\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    ans = 1\n    flag = \"Init\"\n    for i in range(1, n):\n        if flag == \"Init\":\n            if a[i - 1] == a[i]:\n                pass\n            elif a[i - 1] > a[i]:\n                flag = \"-\"\n            else:\n                flag = \"+\"\n        elif flag == \"-\":\n            if a[i - 1] < a[i]:\n                ans += 1\n                flag = \"Init\"\n        else:\n            if a[i - 1] > a[i]:\n                ans += 1\n                flag = \"Init\"\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "2097": {"id": 2097, "code": "n = 100;a = 100;b = 100\nma = a if a <= b else b\nmi = 0 if n >= a + b else a + b - n\nprint(ma, mi)", "coverage": [">", ">", ">", ">"]}, "5725": {"id": 5725, "code": "N = 5\nif N%2 == 0:\n    n = N/2\nelse:\n    n = (N+1)/2\nprint(round(n))", "coverage": [">", ">", "!", "!", ">", ">"]}, "11018": {"id": 11018, "code": "s = \"level\"\nN = len(s)\ns_first = s[:(N-1)//2]\ns_second = s[(N+1)//2:]\nif(s == s[::-1] and s_first == s_first[::-1] and s_second == s_second[::-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "14487": {"id": 14487, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ntrend = 0\ncnt = 0\nfor i in range(1,n):\n    if trend == 0:\n        if a[i-1] == a[i]:\n            pass\n        elif a[i-1] < a[i]:\n            trend = 1\n        else:\n            trend = -1\n    elif trend == 1:\n        if a[i-1] > a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\n    else:\n        if a[i-1] < a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "11977": {"id": 11977, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(1 if M2 == M1 + 1 and D2 == 1 else 0)", "coverage": [">", ">", ">"]}, "16592": {"id": 16592, "code": "a = \"D\";b = \"D\"\nc = ['H','D']\nc.remove(b)\nif a =='H':\n    print(b)\nelse:\n    print(*c)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4209": {"id": 4209, "code": "H_1 = 10;M_1 = 0;H_2 = 12;M_2 = 0;K = 120\nprint((H_2-H_1)*60+(M_2-M_1)-K)", "coverage": [">", ">"]}, "5649": {"id": 5649, "code": "n = 100\ncount = n // 2\nif n % 2 == 0 :\n    print(count)\nelse :\n    count = count + 1\n    print(count)     ", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "402": {"id": 402, "code": "S = \"a\"\nK = 25\nV = []\nfor e in S:\n    V.append(ord(e)-97)\nfor i in range(len(S)):\n    if S[i] == 'a':\n        continue\n    if K < 26-V[i]:\n        pass\n    else:\n        K -= 26-V[i]\n        V[i] = 0\nV[-1] += K\nV[-1] %= 26\nV = [chr(e+97) for e in V]\nprint(\"\".join(V))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "9437": {"id": 9437, "code": "N = \"2017/01/31\"\nprint(\"2018\"+N[4:])", "coverage": [">", ">"]}, "9686": {"id": 9686, "code": "n = 3\ns = \"())\"\ncnt, L = 0, 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt < 0:\n        L = min(L, cnt)\nans = '('*abs(L) + s\nR = ans.count('(') - ans.count(')')\nans += ')'*R\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "16797": {"id": 16797, "code": "a = \"H\";b = \"H\"\nprint(\"DH\"[a == b])", "coverage": [">", ">"]}, "6314": {"id": 6314, "code": "import bisect\nimport math\nimport sys\nn = 2\nans=0\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nfor i in b:\n    aa=bisect.bisect_left(a,i)\n    cc=len(c)-bisect.bisect_right(c,i)\n    ans+=aa*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14178": {"id": 14178, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nis_up=False\nis_even=True\npre_a=a[0]\ncnt=1\nfor aa in a:\n  if is_even and pre_a != aa:\n    is_even=False\n    is_up=pre_a < aa\n  if not is_even:\n    if (is_up and pre_a > aa) or (not is_up and pre_a < aa):\n      is_even=True\n      cnt+=1\n  pre_a=aa\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11682": {"id": 11682, "code": "w = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nw.reverse()\nprint(w.index(\"SAT\")+1)", "coverage": [">", ">", ">"]}, "8151": {"id": 8151, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nans = 0\nleast_g = (N-1) / (K-1)\nif least_g.is_integer():\n    print(int(least_g))\nelse:\n    print(int(least_g)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7924": {"id": 7924, "code": "import math\nn = 3;k = 3\na = map(int, \"1 2 3\".split())\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "5264": {"id": 5264, "code": "N = {1, 4, 9, 7}\nif len(N) == 4 and set([1,9,7,4]) == N:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "2582": {"id": 2582, "code": "n = {1, 2, 9}\nprint((\"NO\",\"YES\")[len(set([1,9,7,4])-n)==0])", "coverage": [">", ">"]}, "5676": {"id": 5676, "code": "N = 100\nif N%2==0:\n    page=N/2\nelse:\n    page=N/2+1\nprint(int(page))", "coverage": [">", ">", ">", "!", "!", ">"]}, "14377": {"id": 14377, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ninc = False\ndec = False\np = A.pop(0)\nfor Ai in A:\n    if (not inc) and (not dec):\n        if Ai < p:\n            dec = True\n        elif Ai > p:\n            inc = True\n    elif inc:\n        if Ai < p:\n            cnt += 1\n            inc = False\n    elif dec:\n        if Ai > p:\n            cnt += 1\n            dec = False\n    p = Ai\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "12599": {"id": 12599, "code": "A = 100;B = 50;K = 4\nk=0\nn=min(A,B)\nwhile 1:\n  if A%n==0 and B%n==0:\n    k+=1\n  if K==k:\n    break\n  n-=1\nprint (n)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5775": {"id": 5775, "code": "n = 100\nprint((n//2)+int(n%2!=0))", "coverage": [">", ">"]}, "7958": {"id": 7958, "code": "x = 4;y = 3\nli = [2, 3, 1, 4]\nif (x-1)%(y-1) == 0:\n    print((x-1)//(y-1))\nelse:\n    print((x-1)//(y-1)+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15431": {"id": 15431, "code": "x = 13;y = 3;z = 1\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "8616": {"id": 8616, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1646": {"id": 1646, "code": "N = 10;A = 3;B = 5\nans1 = min(A,B)\nans2 = max(A + B - N, 0)\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">"]}, "10597": {"id": 10597, "code": "A = 100;B = 50;K = 4\nans_lst = []\nfor i in range(1,min(A,B)+1):\n    if A%i==0 and B%i==0:\n        ans_lst += [i]\nans_lst.reverse()\nprint(ans_lst[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16991": {"id": 16991, "code": "a = ['D', 'D']\nif (a[0] == 'H' and a[1] == 'H') or (a[0] == 'D' and a[1] == 'D'):\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "13804": {"id": 13804, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(N-1):\n  if A[i+1]-A[i] > 0:\n    if flag == 1:\n      cnt +=0\n    elif flag == -1:\n      cnt +=1\n      flag = 0\n    elif flag ==0:\n      flag = 1\n  elif A[i+1]-A[i] < 0:\n    if flag == 1:\n      cnt +=1\n      flag =0\n    elif flag ==-1:\n      cnt +=0\n    elif flag ==0:\n      flag = -1\n  elif A[i+1]-A[i] == 0:\n    flag += 0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "16213": {"id": 16213, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nk = []\nmax_a = a[-1]\nmax_half = max_a / 2\nfor i in range(n):\n    if a[i] >= max_half:\n        if i == 0:\n            k.append(a[i])\n            break\n        k.append(a[i])\n        k.append(a[i-1])\n        break\nans = 0\nif len(k) == 1:\n    ans = k[0]\nelse:\n    if abs(max_half - k[0]) < abs(max_half - k[1]):\n        ans = k[0]\n    else:\n        ans = k[1]\nprint(max_a, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "10819": {"id": 10819, "code": "s = \"atcoder\"\nsi=s[::-1]\na=s[:(len(s)-1)//2]\nb=s[(len(s)+1)//2:]\nif s == si :\n    if a == a[::-1] and b == b[::-1]:\n        print((\"Yes\"))\n        exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "6178": {"id": 6178, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in b:\n    x=bisect.bisect_left(a,i)\n    y=bisect.bisect_right(c,i)\n    ans+=x*(n-y)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "541": {"id": 541, "code": "s = \"a\"\nk = 25\nn = len(s)\nle = [\"\"]*n\nne = []\nfor i in range(n):\n    le[i] = s[i]\n    if s[i] == \"a\":\n        ne.append(0)\n    else:\n        ne.append(123-ord(s[i]))\nrem = k\nfor i in range(n):\n    if rem >= ne[i]:\n        rem -= ne[i]\n        le[i] = 'a'\nsaigo = ord(le[n-1]) - 97\nssm = (rem+saigo) % 26\nle[n-1] = chr(97+ssm)\nprint(*le,sep = \"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19148": {"id": 19148, "code": "n = 5\nif n%2==1:\n    print(0)\nelse:\n    ans=0\n    n5 = 10\n    while(n>=n5):\n        ans+=n//n5\n        n5*=5\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4930": {"id": 4930, "code": "a = \"internationalization\"\nprint(a[0:1] + str(len(a) - 2) + a[len(a) - 1:len(a)])", "coverage": [">", ">"]}, "7560": {"id": 7560, "code": "h = 211;n = 5\nli = [31, 41, 59, 26, 53]\nif sum(li) >= h:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "6991": {"id": 6991, "code": "h = 10;n = 3\na = [4, 5, 6]\nif h<=sum(a):print(\"Yes\")\nelse:print(\"No\")", "coverage": [">", ">", ">", "!"]}, "12539": {"id": 12539, "code": "A = 100;B = 50;K = 4\nprint([n for n in range(1,101) if A%n==0 and B%n==0][-K])", "coverage": [">", ">"]}, "4584": {"id": 4584, "code": "string = \"xyz\"\nprint(string[0] + str(len(string) - 2) + string[-1])", "coverage": [">", ">"]}, "13889": {"id": 13889, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzo=0 ; mi=0 ;ans=1\nfor i in range(n-1):\n    if zo==mi==0:\n        if A[i]==A[i+1]:\n            continue\n        elif A[i]>A[i+1]:\n            mi=1; continue\n        else:\n            zo=1;continue\n    if zo:\n        if A[i+1]<A[i]:\n            zo=0; ans+=1\n    if mi and A[i]<A[i+1]:\n        mi=0 ; ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">"]}, "18507": {"id": 18507, "code": "h = 14\nw = 12\nn = 112\nfor i in range(min(h,w)):\n    n = n - max(h,w)\n    if n <= 0:\n        print(i + 1)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4016": {"id": 4016, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nl=(60*c+d)-(60*a+b)\nans=l-e\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "16619": {"id": 16619, "code": "a = \"D\";b = \"D\"\ncount = 0\nif a == \"D\" and b == \"H\":\n  count += 1\nelif a == \"H\" and b == \"D\":\n  count += 1\nif count == 1:\n  print(\"D\")\nelse:\n  print(\"H\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "10577": {"id": 10577, "code": "a = 100;b = 50;k = 4\nfor i in range(max(a, b), 0, -1):\n  if a%i ==0 and b%i ==0:\n    k -= 1\n    if k==0:\n      print(i)\n      break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7211": {"id": 7211, "code": "x = 210;y = 5\nz = map(int, \"31 41 59 26 53\".split())\nif sum(z) >= x:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "2275": {"id": 2275, "code": "n = 10;a = 3;b = 5\nmaxa = min(a,b)\nmina = abs(min(0, n-(a+b)))\nprint(maxa,mina)", "coverage": [">", ">", ">", ">"]}, "1961": {"id": 1961, "code": "N = 10;A = 7;B = 5\nprint(min(A, B), max(0, A+B-N))", "coverage": [">", ">"]}, "4127": {"id": 4127, "code": "N = [10, 0, 12, 0, 120]\nres = ((N[2]-N[0])*60) + (N[3]-N[1]) - N[4]\nprint(res)", "coverage": [">", ">", ">"]}, "4767": {"id": 4767, "code": "s = \"xyz\"\ncount = 0\nfor i in s:\n    count +=1\nprint(\"{}{}{}\".format(s[0], count-2, s[-1]))", "coverage": [">", ">", ">", ">", ">"]}, "18593": {"id": 18593, "code": "h = 3\nw = 7\nn = 10\ns = max(h,w)\nprint((n+s-1)//s)", "coverage": [">", ">", ">", ">", ">"]}, "71": {"id": 71, "code": "s = \"codefestival\"\nints = [ord(i) - ord('a') for i in s]\nK = 100\nn = len(s)\ni = 0\nwhile i < n:\n    if ints[i] != 0 and 25 - ints[i] + 1 <= K:\n        K -= 25 - ints[i] + 1\n        ints[i] = 0\n    i += 1\nK %= 26\nints[-1] = (ints[-1] + K) % 26\ns_ = ''\nfor i in ints:\n    s_ += chr(i + ord('a'))\nprint(s_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1003": {"id": 1003, "code": "N = 111\nfor i in range(N,1000):\n    x = str(i)\n    if x[0]==x[1]==x[2]:\n        break\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13777": {"id": 13777, "code": "a = ['10', '0', '15', '0', '30']\nprint((int(a[2]) - int(a[0])) * 60 + (int(a[3]) - int(a[1])) - int(a[4]) )", "coverage": [">", ">"]}, "19057": {"id": 19057, "code": "n = 5\nif n&1:\n  print(0)\nelse:\n  i = 1\n  c = 0\n  n=n//2\n  while True:\n    t = n//(5**i)\n    if t==0:\n      break\n    c+=t\n    i+=1\n  print(c)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "2267": {"id": 2267, "code": "N = 10;A = 7;B = 5\nans1=min(A,B);ans2=max(0,A+B-N)\nprint(ans1,ans2)", "coverage": [">", ">", ">"]}, "15952": {"id": 15952, "code": "a = 20;b = 30\nans = a - b * 2\nif (ans >= 0):\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "899": {"id": 899, "code": "K = 101\nL = 0\nif K % 7 == 0:\n  L = 9*K//7\nelse:\n  L = 9*K\nt = 1\nans = -1\nfor i in range(1,L,1):\n  t = t*10\n  if t % L == 1:\n    ans = i\n    break\n  t = t % L\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9569": {"id": 9569, "code": "s = \"2017/01/31\"\ns = \"2018/01\" + s[7:10]\nprint(s)", "coverage": [">", ">", ">"]}, "5387": {"id": 5387, "code": "import math\nx = \"2\"\npage = (int(x)+1) // 2\nprint(page)", "coverage": [">", ">", ">", ">"]}, "18504": {"id": 18504, "code": "h = 14\nw = 12\nn = 112\nif h>w:\n    print(-(n//-h))\nelse:\n    print(-(n//-w))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7110": {"id": 7110, "code": "h = 211;n = 5\na = map(int,\"31 41 59 26 53\".split())\nif sum(a) >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "5599": {"id": 5599, "code": "x = 5\nprint(x//2+x%2)", "coverage": [">", ">"]}, "13622": {"id": 13622, "code": "first = \"happy\";middle = \"newyear\";last = \"enjoy\"\nprint(first, middle, last)", "coverage": [">", ">"]}, "815": {"id": 815, "code": "k = 101\ni = 0\ns = 0\nans = -1\nfor z in range(k):\n    i += 1\n    s = 7 + 10*s\n    if s % k != 0:\n        s = s % k\n    else:\n        ans = i\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14962": {"id": 14962, "code": "import math\nn = 1;p = 1\nc=0\nfor m in map(int,\"50\".split()):\n  if m%2==0:c+=1\nd=2**(c)\ne=0\nfor i in range(p,n-c+1,2):\n  k=math.factorial(n-c) // (math.factorial(n-c - i) * math.factorial(i))\n  k=max(k,1)\n  e+=k\nprint(d*e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "2196": {"id": 2196, "code": "n = 100;a = 100;b = 100\nM=min(a,b)\nm=a+b-n\nif(m<0):\n    m=0\nprint(M,m)", "coverage": [">", ">", ">", ">", "!", ">"]}, "15452": {"id": 15452, "code": "x = 100000;y = 1;z = 1\nrm = x % (y+z)\na = -1 if rm < z else 0\nprint(x // (y + z) + a)", "coverage": [">", ">", ">", ">"]}, "17210": {"id": 17210, "code": "atcodeer = \"D\";topcodeer = \"D\"\nif atcodeer == 'H' and topcodeer == 'H':\n    print('H')\nelif atcodeer == 'H' and topcodeer == 'D':\n    print('D')\nelif atcodeer == 'D' and topcodeer == 'H':\n    print('D')\nelif atcodeer == 'D' and topcodeer == 'D':\n    print('H')", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "1551": {"id": 1551, "code": "N = 750\nfor i in range(N,1000):\n  I = str(i)\n  if I[0] == I[1] and I[1] == I[2]:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "9190": {"id": 9190, "code": "S = \"2017/01/07\"\nprint('2018' + S[4:])", "coverage": [">", ">"]}, "516": {"id": 516, "code": "N = 26\nord_a = ord('a')\nS = [0]\nK = 25\nfor i in range(len(S)):\n    r = (N - S[i]) % N\n    if K >= r:\n        K -= r\n        S[i] = 0\nS[-1] += K % N\nS[-1] %= N\nanswer = ''.join(chr(s + ord_a) for s in S)\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3655": {"id": 3655, "code": "a = 20;b = 30\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "16345": {"id": 16345, "code": "n = 2\na = [0, 100]\nai=a[-1]\naa=ai/2\nans=float(\"inf\")\nfor i in range(n-1):\n    tmp=abs(a[i]-aa)\n    if tmp<ans:\n        ans=tmp\n        aj=a[i]\nprint(ai,aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16044": {"id": 16044, "code": "n = 20;m = 15\nif(n-m*2>=0):\n  print(n-m*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "14721": {"id": 14721, "code": "n = 1;p = 1\na = [50]\nd={0:0,1:0}\nfor i in range(n):\n  d[a[i]%2]+=1\nq=2**d[0]\nans=0\nm=d[1]\nf=[1]\nfor i in range(1,m+1):\n  f+=[f[-1]*i]\nfor i in range(m+1):\n  if i%2!=p:continue\n  ans+=q*f[m]//f[i]//f[m-i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "7444": {"id": 7444, "code": "H = 20;N = 3\nN_list = [4, 5, 6]\nfor i in range(0, N):\n    H -= N_list[i]\nif H <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "6102": {"id": 6102, "code": "N = 100\nans = -(-N // 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "16277": {"id": 16277, "code": "n = 5\nAs = [6, 9, 4, 2, 11]\na = max(As)\nb = None\ndist = float('inf')\nfor i in range(n):\n    if As[i] != a and abs(As[i] - a/2) < dist:\n        dist = abs(As[i] - a/2)\n        b = As[i]\nprint(a, b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12213": {"id": 12213, "code": "S = \"akasaka\"\narray = list(S)\nN = len(array)\na = (N-2)//2\nb = (N+2)//2\nif array[0:a+1] == array[b:N]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "274": {"id": 274, "code": "s = \"xyz\"\nk = 4\nn=len(s)\nnum=[0]*n\nfor i in range(n):\n    if s[i]!=\"a\":\n        num[i]=123-ord(s[i])\nif sum(num)>=k:\n    ans=\"\"\n    for i in range(n-1):\n        if k>=num[i]:\n            k-=num[i]\n            ans+=\"a\"\n        else:\n            ans+=s[i]\n    if k>=num[-1]:\n        ans+=\"a\"\n    else:\n        ans+=chr(97+((ord(s[-1])-97+k)%26))\nelse:\n    k-=sum(num)\n    ans=\"a\"*(n-1)\n    ans+=chr(97+(k%26))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "1245": {"id": 1245, "code": "n = 750\nfor i in range(1,10):\n  if 100*i+10*i+i>=n:\n    print(100*i+10*i+i)\n    break", "coverage": [">", ">", ">", ">", ">"]}, "17983": {"id": 17983, "code": "s = 112\na = s % 100\nb = (s-a) / 100\nif a >= 1 and a <= 12:\n    if b >= 1 and b <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('YYMM')\nelse:\n    if b >= 1 and b <= 12:\n        print('MMYY')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "7968": {"id": 7968, "code": "n = 3;k = 3\ns = \"1 2 3\"\ni = s.find(\"1\")/2\nans = 0\nwhile ans * (k-1) < i:\n    ans += 1\ni = max(i, ans * (k-1))\ntmp = 0\nwhile tmp * (k-1) + i < n-1:\n    tmp += 1\nprint(ans + tmp)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "1295": {"id": 1295, "code": "n = 112\nif n//100<(n%100)//10 or (n//100==(n%100)//10 and n//100<(n%10)):\n  print(((n//100)+1)*111)\nelse:\n  print((n//100)*111)", "coverage": [">", ">", ">", "!", "!"]}, "3654": {"id": 3654, "code": "a = 20;b = 15\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "16193": {"id": 16193, "code": "N = 2\nX = [100, 0]\nM=max(X)\nX.remove(M)\nm=min([abs(2*x-M) for x in X])\nif (M+m)//2 in X:\n    m=(M+m)//2\nelse:\n    m=(M-m)//2\nprint(M,m)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "7530": {"id": 7530, "code": "h = 20;n = 3\na = [4, 5, 6]\nif h <= sum(a): print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">"]}, "6253": {"id": 6253, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nans = 0\nj = 0\nk = 0\nfor i in range(n):\n    if j<n:\n        while a[j]<b[i]:\n            j+=1\n            if j==n:\n                break\n    if k<n:\n        while c[k]<=b[i]:\n            k+=1\n            if k==n:\n                break\n    ans += j*(n-k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "7818": {"id": 7818, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((n-1+k-2)//(k-1))", "coverage": [">", ">", ">"]}, "16388": {"id": 16388, "code": "n = 5\na = [6, 9, 4, 2, 11]\nm = max(a)\na = sorted(a)\nans = 0\nfor i in a:\n    if abs(m/2-i) < abs(m/2-ans):\n        ans = i\nprint(m, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8031": {"id": 8031, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nx = A.index(1)\ny = N - x - 1\nans = math.ceil(x / (K - 1))\nif x % (K - 1) != 0:\n    y -= K - 1 - (x % (K - 1))\nans += math.ceil(y / (K - 1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8548": {"id": 8548, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8445": {"id": 8445, "code": "N = 7\nA = [[],[]]\nA = [[3, 3, 4, 5, 4, 5, 3], []]\nA = [[3, 3, 4, 5, 4, 5, 3], [5, 3, 4, 4, 2, 3, 2]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "22": {"id": 22, "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nN = 100\ni=0\nwhile i<len(S)-1:\n    if S[i]!='a' and 123-ord(S[i])<=N:\n        N-=123-ord(S[i])\n        S[i]='a'\n    i+=1\nN=N%26\nwhile N:\n    if S[-1]=='z':\n        S[-1]='a'\n    else:\n        S[-1]=chr(ord(S[-1])+1)\n    N-=1\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "5350": {"id": 5350, "code": "N = 5\nprint(int((N+1)//2))", "coverage": [">", ">"]}, "17654": {"id": 17654, "code": "NN = \"1700\"\nAA = int(NN[0:2])\nBB = int(NN[2:])\ncount1 = 0\ncount2 = 0\nif AA > 12 or AA == 00:\n  count1 +=1\nif BB > 12 or BB == 00:\n  count2 +=1\nif count1 == 0 and count2 == 0:\n  print('AMBIGUOUS')\nelif count1 ==1 and count2 == 0:\n  print('YYMM')\nelif count1 ==0 and count2 == 1:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18564": {"id": 18564, "code": "h = 14;w = 12;n = 112\na = max(h,w)\nprint(n//a + 1 if n%a else n//a)", "coverage": [">", ">", ">"]}, "1527": {"id": 1527, "code": "n = 112\na = n // 111\nb = n % 111\nif b > 0:\n    ans = (a + 1) * 111\nelse:\n    ans = a * 111   \nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3928": {"id": 3928, "code": "arr = ['12', '3', '1']\narr = list(map(int,arr))\nx = arr[0]\ny = arr[1]\nz = arr[2]\ncount = 0\nfor i in range(1,10**10):\n    if i * y + (i+1) * z <= x:\n        count = i\n    else:\n        break\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "1904": {"id": 1904, "code": "N = 10;A = 7;B = 5\ns = min(A,B)\nt = A+B-N\nif t>=0:\n    print(s,t)\nelse:\n    print(s, 0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5744": {"id": 5744, "code": "n = 2\nif n%2==0:\n  print(str(int(n/2)))\nelse:\n  print(str(int(n/2)+1))", "coverage": [">", ">", ">", "!", "!"]}, "10295": {"id": 10295, "code": "n = 3\ns = \"())\"\nss = s\nl = 0\nfor c in ss:\n    if c == \"(\":\n        l += 1\n    else:\n        if l > 0:\n            l -= 1\n        else:\n            s = \"(\" + s\nfor i in range(l):\n    s = s + \")\"\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">"]}, "1635": {"id": 1635, "code": "n = 10;a = 7;b = 5\nmaxint = 0\nminInt = 0\nif a <= b:\n  maxInt = a\n  minInt = a - (n-b)\nelse:\n  maxInt = b\n  minInt = b - (n-a)\nif a +b < n :\n    minInt = 0\nprint(maxInt, minInt)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">"]}, "4848": {"id": 4848, "code": "N = \"xyz\"\na = len(N)\nans = N[0] +str(a-2) + N[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10619": {"id": 10619, "code": "A = 8;B = 12;K = 2\nc = []\nfor i in range(1,max(A,B)+1):\n  if A % i == 0 and B % i ==0:\n    c.append(i)\nc = c[::-1]\nprint(c[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13292": {"id": 13292, "code": "happy = \"happy\";newyear = \"newyear\";enjoy = \"enjoy\"\nprint(happy,newyear,enjoy)", "coverage": [">", ">"]}, "7168": {"id": 7168, "code": "h = 211;a = 5\nA = [31, 41, 59, 26, 53]\nsum_A=sum(A)\nif h>sum_A:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "18673": {"id": 18673, "code": "H = 2\nW = 100\nN = 200\nans = 0\nnum = 0\nbig = 0\nif H < W:\n  big = W\nelse:\n  big = H\nwhile num < N:\n  num += big\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "2218": {"id": 2218, "code": "N = 10;A = 3;B = 5\nlargest = min(A, B)\nminimum = max(0, A + B - N)\nprint(largest, minimum)", "coverage": [">", ">", ">", ">"]}, "15146": {"id": 15146, "code": "from math import factorial\nn = 2;p = 0\nnums = [1, 3]\nodd = 0\neven = 0\nfor num in nums:\n    if num % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nif p == 0:\n    e = 2 ** even\n    o = 0\n    for i in range(0, odd + 1, 2):\n        o += factorial(odd) // (factorial(odd - i) * factorial(i))\n    ans += e * o\nelif p == 1:\n    e = 2 ** even\n    o = 0\n    for i in range(1, odd + 1, 2):\n        o += factorial(odd) // (factorial(odd - i) * factorial(i))\n    ans += e * o\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "12000": {"id": 12000, "code": "a = ['11', '16']\nb = ['11', '17']\nif int(a[0])<int(b[0]):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11204": {"id": 11204, "code": "s = \"SAT\"\nans=(6-([\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\"].index(s)))\nif ans==0:\n  print(7)\nelse:\n  print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15106": {"id": 15106, "code": "n = 1;p = 1;a = [50]\ns = t = u = 0; b = [1]\nfor i in range(n):\n    if a[i]%2 == 0: s += 1\n    else: t += 1\nfor i in range(1, n+1):\n    b.append(b[-1]*i)\nif p == 0:\n    for i in range(0, t//2*2+1, 2):\n        u += b[t]//b[i]//b[t-i]\nelse:\n    for i in range(1, (t+1)//2*2, 2):\n        u += b[t]//b[i]//b[t-i]\nprint(2**s*u)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "18382": {"id": 18382, "code": "H = 2\nW = 100\nN = 200\nans = 0\nm = max([H, W])\nwhile N > 0:\n    N -= m\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1507": {"id": 1507, "code": "n = 112\nans = 111\nwhile ans < n:\n    ans += 111\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "8821": {"id": 8821, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "19496": {"id": 19496, "code": "n = 10\ncontador = 0\nres = 0\nwhile(True):\n    contador += n\n    if contador % 2 == 0 and contador % n == 0:\n        res = contador\n        break;\nprint(res,'\\n')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7285": {"id": 7285, "code": "h = 210;m = 5\na = [31, 41, 59, 26, 53]\nhissatsu_hp = 0\nfor i in range(0, m):\n    hissatsu_hp += a[i]\nresult = \"\"\nif hissatsu_hp >= h:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "618": {"id": 618, "code": "s = ['a']\nK = 25\nA=[chr(ord('a') + i) for i in range(26)]+[chr(ord('a') + i) for i in range(26)]\nfor i in range(len(s)):\n  a=A.index(s[i])\n  if i==len(s)-1:\n    K%=26\n    s[i]=A[a+K]\n    break\n  if s[i]=='a':\n    continue\n  if K>=26-a:\n    K-=(26-a)\n    s[i]='a'\n  else:\n    continue\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "4034": {"id": 4034, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nm1 = 60*H1 + M1\nm2 = 60*H2 + M2\nprint(m2-m1-K)", "coverage": [">", ">", ">", ">"]}, "10157": {"id": 10157, "code": "n = 3\ns = \"())\"\nd = [0]\ncnt = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        cnt += 1\n    else:\n        cnt -= 1\n    d.append(cnt)\nx = min(d)\nprint(\"(\"*(-x)+s+\")\"*(d[-1]-x))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14077": {"id": 14077, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\ndiv_flg=False\ninc_flg=False\ndec_flg=False\nans=0\nif N==1:\n  print(1)\n  sys.exit()\nfor i in range(N):\n  if inc_flg:\n    if i==N-1:\n      break\n    if A[i]<=A[i+1]:\n      continue\n    else:\n      inc_flg=False\n      div_flg=False\n  elif dec_flg:\n    if i==N-1:\n      break\n    if A[i]>=A[i+1]:\n      continue\n    else:\n      dec_flg=False\n      div_flg=False\n  else:\n    if i==0:\n      ans+=1\n      div_flg=True\n    elif i==N-1:\n      if not div_flg:\n        ans+=1\n      break\n    if A[i]==A[i+1]:\n      if not div_flg:\n        ans+=1\n      div_flg=True\n      continue\n    elif A[i]<A[i+1]:\n      if not div_flg:\n        ans+=1\n      inc_flg=True\n      continue\n    elif A[i]>A[i+1]:\n      if not div_flg:\n        ans+=1\n      dec_flg=True\n      continue\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13850": {"id": 13850, "code": "N = 7\nAs = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before == As[i]:\n        continue\n    elif before < As[i]:\n        if zoka == 0 or zoka == 1:\n            before = As[i]\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\n    else:\n        if zoka == 0 or zoka == 2:\n            before = As[i]\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10739": {"id": 10739, "code": "s = \"akasaka\"\nans=0\nif s==s[::-1] and s[:(len(s)-1)//2]==s[(len(s)-1)//2-1::-1] and s[(len(s)+3)//2-1:]==s[:(len(s)+3)//2-2:-1]:\n    ans+=1\nprint(\"NYoe s\"[ans::2])", "coverage": [">", ">", ">", ">", ">"]}, "12606": {"id": 12606, "code": "import math\na = 1;b = 1;k = 1\nl = []\nfor i in range(1, math.gcd(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        l.append(i)\nL = sorted(l)\nprint(L[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "658": {"id": 658, "code": "k = 2\nif k % 2 == 0 or k % 5 == 0:\n  print(-1)\nelse:\n  ans = 7\n  cnt = 1\n  while 1:\n    if ans % k == 0:\n      break\n    else:\n      cnt += 1\n      ans *= 10\n      ans += 7\n      ans %= k\n  print(cnt)      ", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "15609": {"id": 15609, "code": "X = 64146;Y = 123;Z = 456\nans = (X-Z)//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">"]}, "10914": {"id": 10914, "code": "S = \"akasaka\"\nN = len(S)\nS1 = S[0:(N-1)//2]\nS2 = S[(N+3)//2-1:]\nprint('Yes' if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1] else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "3557": {"id": 3557, "code": "A = 20;B = 15\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "5164": {"id": 5164, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(s[0] + str(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "9170": {"id": 9170, "code": "s = \"2017/01/07\"\nprint(s[:3]+'8'+s[4:])", "coverage": [">", ">"]}, "3135": {"id": 3135, "code": "s = \"1234567876\"\nans = abs(753 - int(s[0] + s[1] + s[2]))\nfor i in range(1,len(s) - 2):\n    n = s[i]+ s[i + 1] + s[i + 2]\n    ans = min(ans,abs(int(n) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8913": {"id": 8913, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6115": {"id": 6115, "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor i in range(N):\n    b = B[i]\n    a_ix = bisect_left(A, b)\n    c_ix = bisect_right(C, b)\n    ans += a_ix * (N - c_ix)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10562": {"id": 10562, "code": "import sys\nA = 100;B = 50;K = 4\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( 1 <= K ): sys.exit()\nif A < B: \n    A, B = B, A\nwhile A%B != 0:\n    A,B = B,A%B\ncount = 0\nfor I in range(B,0,-1):\n    if B % I == 0:\n        count += 1\n    if count == K:\n        print(I)\n        break", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "12698": {"id": 12698, "code": "x = \"5\"\nlst = ['7', '5', '3']\nif x in lst:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "15082": {"id": 15082, "code": "N = 1;P = 1\nA = [50]\nev = 0\nod = 0\nfor a in A:\n    if a % 2 == 0:\n        ev += 1\n    else:\n        od += 1\nif P == 0 and od == 0:\n    print(2**ev)\nelse:\n    print(2**ev * (2**od//2))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "12219": {"id": 12219, "code": "N = \"akasaka\"\nlenN = len(N)\nfN =N[0:(lenN - 1)//2]\nlN =N[(lenN + 3)//2-1:]\nprint((\"No\",\"Yes\")[(0,1)[fN == fN[-1::-1]]*(0,1)[lN == lN[-1::-1]]*(0,1)[lN == fN]])", "coverage": [">", ">", ">", ">", ">"]}, "18544": {"id": 18544, "code": "H = 2\nW = 100\nN = 200\ncnt = 0\nres = 0\nwhile True:\n    if cnt >= N:\n        break\n    cnt += max(H, W)\n    res += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18754": {"id": 18754, "code": "import math\nh = 3\nw = 7\nn = 10\nl = max(h, w)\nprint(math.ceil(n / l))", "coverage": [">", ">", ">", ">", ">", ">"]}, "1421": {"id": 1421, "code": "N = ['1', '1', '1']\nn = int(\"\".join(N))\nck = int(N[0] * 3)\nif n - ck <= 0:\n    print(int(N[0] * 3))\nelse:\n    print(int(str(int(N[0])+1)*3))\npass", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "2307": {"id": 2307, "code": "n = 100;a = 100;b = 100\nans1=min(a,b)\nif a+b>n:\n    ans2=a+b-n\nelse:\n    ans2=0\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "247": {"id": 247, "code": "s = \"xyz\"\nk = 4\nn = len(s)\nl = [0]*n\nfor i in range(n):\n    l[i] = ord('z') -ord(s[i]) + 1\n    l[i] %= 26\nans = list(s)\ni = 0\nwhile k > 0:\n    if i > n-1:\n        break\n    if l[i] <= k:\n        ans[i] = 'a'\n        k -= l[i]\n    i += 1\nk %= 26\nif k > 0:\n    ans[-1] = chr((k + ord(ans[-1])-ord('a'))%26+97)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "3984": {"id": 3984, "code": "x = 64145;y = 123;z = 456\nx -= z\nans = x // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3768": {"id": 3768, "code": "x = 13;y = 3;z = 1\nx-=z\nprint(int(x/(y+z)))", "coverage": [">", ">", ">"]}, "7862": {"id": 7862, "code": "n = 3;k = 3\na = [1, 2, 3]\nl=n-k\nr=k-1\nif l%r==0:\n  print(l//r+1)\nelse:\n  print(l//r+2)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "7260": {"id": 7260, "code": "h = 20;n = 3\na = [4, 5, 6]\nans=0\nif sum(a)>=h:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16299": {"id": 16299, "code": "n = 5\na = [2, 4, 6, 9, 11]\nm = a[-1]\nfor i in range(n - 1):\n    c = abs(a[i] - a[-1] / 2)\n    if c < m:\n        m = c\n        r = i\nprint(a[-1], a[r])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7199": {"id": 7199, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\nans = 'No'\nfor s in a:\n    h -= s\n    if h <= 0:\n        ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11915": {"id": 11915, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 == M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "8915": {"id": 8915, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16145": {"id": 16145, "code": "N = 2\nA = [0, 100]\nimport math\nn = A.pop()\nP_dif_A = sorted([(abs(a-n/2), a) for a in A])\nr = P_dif_A[0][1]\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6140": {"id": 6140, "code": "from itertools import accumulate\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nacc_a = [0]*N\nacc_c = [0]*N\ni_a = 0\ni_c = N-1\nfor i in range(N):\n    b = B[i]\n    while i_a < N and A[i_a] < b:\n        acc_a[i] += 1\n        i_a += 1\nfor i in reversed(range(N)):\n    b = B[i]\n    while i_c >= 0 and C[i_c] > b:\n        acc_c[i] += 1\n        i_c -= 1\nacc_a = list(accumulate(acc_a))\nacc_c = list(accumulate(acc_c[::-1]))\nacc_c = acc_c[::-1]\nans = 0\nfor a, c in zip(acc_a, acc_c):\n    ans += a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17890": {"id": 17890, "code": "S = \"0112\"\nn1 = int(S[:2])\nn2 = int(S[2:])\nif 1 <= n1 <= 12 and 1 <= n2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= n1 <= 12 and (not 1 <= n2 <= 12):\n    print('MMYY')\nelif (not 1 <= n1 <= 12) and 1 <= n2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "15784": {"id": 15784, "code": "x = 100000;y = 1;z = 1\ncount=1\nx -= 2*z+y\ncount += x //(y+z)\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "2095": {"id": 2095, "code": "n = 10;a = 3;b = 5\nma = a if a <= b else b\nmi = 0 if n >= a + b else a + b - n\nprint(ma, mi)", "coverage": [">", ">", ">", ">"]}, "5591": {"id": 5591, "code": "n = 2\ns=int(n/2+0.9)\nprint(s)", "coverage": [">", ">", ">"]}, "11446": {"id": 11446, "code": "days = [\"SUN\", 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ndays.reverse()\nd = \"SAT\"\nprint(days.index(d)+1)", "coverage": [">", ">", ">", ">"]}, "14854": {"id": 14854, "code": "n = 2;p = 0\na_list = [1, 3]\ndp = [[0,0] for i in range(n+1)]\ndp[0][0] = 1\ndp[0][1] = 0\nfor i in range(n):\n  if a_list[i] % 2 == 0:\n    dp[i+1][0] = dp[i][0] + dp[i][0] \n    dp[i+1][1] = dp[i][1] + dp[i][1]\n  if a_list[i] % 2 == 1:\n    dp[i+1][0] = dp[i][0] + dp[i][1] \n    dp[i+1][1] = dp[i][1] +dp[i][0] \nprint(dp[-1][p])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "5974": {"id": 5974, "code": "a = 5\nif(a%2 == 1):\n  print((a+1)//2)\nif(a%2 == 0):\n  print(a//2)", "coverage": [">", ">", ">", ">", "!"]}, "4129": {"id": 4129, "code": "list = [10, 0, 12, 0, 120]\nans = (60-list[1])+list[3]+(list[2]-list[0]-1)*60-list[4]\nprint(ans)", "coverage": [">", ">", ">"]}, "10371": {"id": 10371, "code": "a = 1;b = 1;k = 1\ncount = 0\nfor i in range(min(a,b),0,-1):\n    if (a%i == 0) and (b%i == 0):\n        count+=1\n    if count == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10609": {"id": 10609, "code": "a = 1;b = 1;k = 1\nfor i in range(100, 0, -1):\n    if a % i == b % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13548": {"id": 13548, "code": "s = \"haiku,atcoder,tasks\"\ns1 = s[:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(s1 + ' ' + s2 + ' ' + s3)", "coverage": [">", ">", ">", ">", ">"]}, "3455": {"id": 3455, "code": "a = 20;b = 15\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1832": {"id": 1832, "code": "n = 10;a = 7;b = 5\nprint(min(a, b), max(0, (a + b) - n))", "coverage": [">", ">"]}, "11690": {"id": 11690, "code": "Day = ['', 'SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nprint(Day.index(\"SAT\"))", "coverage": [">", ">"]}, "19064": {"id": 19064, "code": "N = 12\nif N % 2 != 0:\n    print(0)\n    exit()\ncnt = 0\ncurrent = 5\nwhile (N // 2 >= current):\n    cnt += (N // 2 // current)\n    current *= 5\nprint(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7166": {"id": 7166, "code": "h = 20;a = 3\nA = [4, 5, 6]\nsum_A=sum(A)\nif h>sum_A:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5196": {"id": 5196, "code": "a = \"x\";b = ['y'];c = \"z\"\nprint(a+str(len(b))+c)", "coverage": [">", ">"]}, "14489": {"id": 14489, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ntrend = 0\ncnt = 0\nfor i in range(1,n):\n    if trend == 0:\n        if a[i-1] == a[i]:\n            pass\n        elif a[i-1] < a[i]:\n            trend = 1\n        else:\n            trend = -1\n    elif trend == 1:\n        if a[i-1] > a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\n    else:\n        if a[i-1] < a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "10172": {"id": 10172, "code": "n = 3\ns = \"())\"\ncnt=0\nfor i in s:\n    if i==\"(\": cnt+=1\n    elif cnt>=1: cnt-=1\ncnt2=0\nfor i in range(n-1,-1,-1):\n    if s[i]==\")\": cnt2+=1\n    elif cnt2>=1: cnt2-=1\nprint(\"(\"*cnt2+s+\")\"*cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16568": {"id": 16568, "code": "a = \"D\";b = \"D\"\nif a==\"H\":\n    if b==\"H\": print(\"H\")\n    else: print(\"D\")\nelse:\n    if b==\"H\": print(\"D\")\n    else: print(\"H\")", "coverage": [">", ">", "!", "!", "!", ">", ">"]}, "10633": {"id": 10633, "code": "A = 1;B = 1;K = 1\nans = 0\ncurr = min(A, B)\nwhile K > 0:\n    if A % curr == 0 and B % curr == 0:\n        K -= 1\n        ans = curr\n    curr -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "661": {"id": 661, "code": "n = 101\nf=0\nfor i in range(n):\n  f=f*10+7\n  f%=n\n  if f==0:\n    print(i+1)\n    break\nelse:print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "7550": {"id": 7550, "code": "h = 20;n = 3\na = [4, 5, 6]\nprint(\"Yes\" if sum(a)>=h else \"No\")", "coverage": [">", ">", ">"]}, "6959": {"id": 6959, "code": "N = 10;M = 3\nA = [4, 5, 6]\nif N - sum(A) <= 0:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19348": {"id": 19348, "code": "n = 10\nprint([2*n, n][n%2==0])", "coverage": [">", ">"]}, "3121": {"id": 3121, "code": "s = \"35753\"\nans = 1000000\nfor i in range(len(s)-1):\n    ans = min(ans, abs(int(s[i:i+3]) - 753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13114": {"id": 13114, "code": "X = 5\nCel = [3,5,7]\nif X in Cel: print('YES')\nelse: print('NO')", "coverage": [">", ">", ">", "!"]}, "18020": {"id": 18020, "code": "s = \"1700\"\nmae = int(s[:2])\nato = int(s[2:])\nflag1 = 0\nflag2 = 0\nif 0<mae and mae<=12:\n    flag1 = 1\nif 0<ato and ato<=12:\n    flag2 = 1\nif flag1 == 1 and flag2 == 1:\n    print('AMBIGUOUS')\nelif flag1 == 1:\n    print('MMYY')\nelif flag2 == 1:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "3951": {"id": 3951, "code": "x = 12;y = 3;z = 1\nX = x -z\nans = X // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8366": {"id": 8366, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15519": {"id": 15519, "code": "x = 100000;y = 1;z = 1\nans = x // (y+z)\nif x < ans * (y+z) + z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "10573": {"id": 10573, "code": "a = 8;b = 12;k = 2\nl = []\nc = a\nif (a > b):\n  c = b\nfor i in range(1, c+1):\n  if a % i == 0 and b % i == 0:\n    l.append(i)\nl.sort()\nprint(l[-k])", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3594": {"id": 3594, "code": "a = 20;b = 15\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "2016": {"id": 2016, "code": "n = 10;a = 7;b = 5\nM=min(a,b)\nif a+b<=n:\n  m=0\nelse:\n  m=a+b-n\nprint(M,m)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "9793": {"id": 9793, "code": "n = 3\ns = \"())\"\nl_cnt = 0\nr_cnt = 0\nl_ans = 0\nfor i in s:\n    if i == ')':\n        if l_cnt:\n            l_cnt -= 1\n        else:\n            l_ans += 1\n    else:\n        l_cnt += 1\nprint(l_ans*'(' + s + l_cnt*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "18164": {"id": 18164, "code": "s = \"1905\"\ns_1 = int(s[0:2])\ns_2 = int(s[2:4])\nif (s_1>12 or s_1<1) and (s_2>12 or s_2<1):\n    print('NA')\nelif s_1<=12 and s_1>=1 and s_2<=12 and s_2>=1:\n    print('AMBIGUOUS')\nelif s_1<=12 and s_1>=1:\n    print('MMYY')\nelse:\n    print('YYMM')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "8302": {"id": 8302, "code": "n = 4;k = 3\nlist_A = [2, 3, 1, 4]\na = list_A.index(1) + 1\nans = 0\ncnt = 0\namari = 0\nif a == 1:\n    ans += 0\nelse:\n    ans += (a-1)//(k-1)\n    if (a-1)%(k-1) != 0:\n        ans += 1\n        cnt += 1\n        amari += (a-1)%(k-1)\nif a == n:\n    ans += 0\nelse:\n    ans += (n-a)//(k-1)\n    if (n-a)%(k-1) != 0:\n        ans += 1\n        cnt += 1\n        amari += (n-a)%(k-1)\nif cnt == 2 and amari <= k-1:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "937": {"id": 937, "code": "K = 101\nif K % 7 == 0:\n    K //= 7\nL = 9 * K\nans = -1\nr = 10\nfor i in range(L):\n    r %= L\n    if r == 1:\n        ans = i + 1\n        break\n    else:\n        r = 10 * r\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5578": {"id": 5578, "code": "import sys\nsys.setrecursionlimit(10**6)\nreadline = sys.stdin.readline\nn = 5\nprint(n//2+n%2)", "coverage": [">", ">", ">", ">", ">"]}, "18346": {"id": 18346, "code": "import math\nh = 2\nw = 100\nn = 200\nif h < w:\n    a = w\nelse:\n    a = h\nprint(math.ceil(n/a))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7626": {"id": 7626, "code": "h = 20;n = 3\na = [4, 5, 6]\nprint('Yes' if sum(a) >= h else 'No')", "coverage": [">", ">", ">"]}, "4654": {"id": 4654, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nans = \"{0}{1}{2}\".format(s[0],len(s)-2,s[-1])\nprint(ans)", "coverage": [">", ">", ">"]}, "6940": {"id": 6940, "code": "h = 20;n = 3\na = [4, 5, 6]\naa = sum(a)\nif aa >= h:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2280": {"id": 2280, "code": "n = 100;a = 100;b = 100\nmx = min(a,b)\nif a+b > n:\n  mi = a+b -n\nelse:\n  mi = 0\nprint(mx,mi)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17255": {"id": 17255, "code": "n = \"D\";m = \"D\"\nprint(\"DH\"[n==m])", "coverage": [">", ">"]}, "17211": {"id": 17211, "code": "a = \"H\";b = \"H\"\nhatsugen=[\"H\",\"D\"]\nidx=hatsugen.index(b)\nif a==\"H\":\n    print(hatsugen[idx])\nelse:\n    print(hatsugen[1-idx])", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15635": {"id": 15635, "code": "x = 13;y = 3;z = 1\nans = 0\nx -= 2 * z\nwhile x >= y:\n    x -= y\n    ans += 1\n    x -= z\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11402": {"id": 11402, "code": "s = \"SAT\"\nt='SUN,MON,TUE,WED,THU,FRI,SAT'\nm=t.split(\",\")\nfor i in range(len(m)):\n    if(m[i]==s):\n        print(7-i)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12003": {"id": 12003, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1==12 and M2==1 or M1+1==M2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "1761": {"id": 1761, "code": "n = 10;a = 7;b = 5\nans_min = 0 if a+b-n <0 else a+b-n\nprint(min(a, b), ans_min)", "coverage": [">", ">", ">"]}, "7433": {"id": 7433, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\nfor v in a:\n  h -= v\n  if h <= 0:\n    print('Yes')\n    break\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15611": {"id": 15611, "code": "import sys\nX = 13;Y = 3;Z = 1\nif not (1 <= X <= 10 ** 5 and 1 <= Y <= 10 ** 5 and 1 <= Z <= 10 ** 5):\n    sys.exit()\nif not (Y + 2*Z <= X):\n    sys.exit()\nmax = 0\nfor I in range(int(X/(Y+Z))+1):\n    if X - (Y * I + Z * (I + 1)) >= 0:\n        max = I\nprint(max)", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">"]}, "17284": {"id": 17284, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    elif b ==\"D\":\n        print(\"D\")\nif a == \"D\":\n    if b ==\"H\":\n        print(\"D\")\n    elif b == \"D\":\n        print(\"H\")", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "1512": {"id": 1512, "code": "N = \"112\"\nL=len(N)\nif int(N[0]*L)>=int(N):\n    print(int(N[0]*L))\nelse:\n    print(int((N[0])*L)+111)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7615": {"id": 7615, "code": "a = 210;b = 5\nl = [31, 41, 59, 26, 53]\nl[::-1]\ns=0\nf=0\nfor i in range(len(l)):\n  s+=l[i]\n  if s>=a:\n    f=1\n    break \n  else:\n    continue\nif f==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "18255": {"id": 18255, "code": "import math\nh = 14\nw = 12\nn = 112\nans = math.ceil(n/max(h,w))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8008": {"id": 8008, "code": "n = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nmin_a = A.index(min(A))\nleft = min_a\nright = n - min_a - 1\nmin_ = min(left, right)\nmax_ = max(left, right)\nt = 0\nmin_ = min_ - k\nt +=1\ntemp = 0\nif min_ > 0:\n    if min_ % (k - 1) != 0:\n        temp = min_ // (k - 1)\n    else:\n        temp = min_ // (k - 1) + 1\n    min_ -= temp * (k - 1)\nt += temp\nmax_ = max_ + min_ + 1\nif max_ % (k - 1) == 0:\n    t += max_ // (k - 1)\nelse:\n    t += max_ // (k - 1) + 1\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "14498": {"id": 14498, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nnow = 0\nm = 0\nc = 0\nfor i in l:\n    if now == 0:\n        now = i\n    else:\n        if m == 0:\n            if now < i:\n                m = 1\n            elif now > i:\n                m = -1\n        elif m == 1:\n            if now > i:\n                ans += 1\n                m = 0\n        else:\n            if now < i:\n                ans += 1\n                m = 0\n        now = i\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "1620": {"id": 1620, "code": "n = [10, 7, 5]\nprint(min(n[1], n[2]), max(0, n[1] + n[2] - n[0]))", "coverage": [">", ">"]}, "18611": {"id": 18611, "code": "H = 3\nW = 7\nN = 10\nM = max(H, W)\nprint((N+M-1)//M)", "coverage": [">", ">", ">", ">", ">"]}, "6127": {"id": 6127, "code": "from bisect import bisect_right, bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nans = 0\nfor i in B:\n    a = bisect_left(A, i)\n    b = N-bisect_right(C, i)\n    ans += (a*b)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16165": {"id": 16165, "code": "n = 2\na = [100, 0]\na.sort()\namax = a[-1]\ntmp1 = amax + 1\nfor i in a[:n-1]:\n    tmp2 = i - amax/2\n    if tmp2 > tmp1:\n        break\n    else:\n        r = i\n        tmp1 = abs(tmp2)\nprint(amax, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14315": {"id": 14315, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\nsa = 0\nfor i in range(1, n):\n    new = a[i] - a[i-1]\n    if new * sa < 0:\n        cnt += 1\n        sa = 0\n        continue\n    if new != 0:\n        sa = new\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "37": {"id": 37, "code": "S = ['x', 'y', 'z']\nL = len(S)\nK = 4\nidx = 0\nwhile K > 0:\n    if S[idx] == \"a\" and idx < L-1:\n        idx += 1\n        continue\n    k = 123 - ord(S[idx])\n    if k > K:\n        if idx < L-1:\n            idx += 1\n        else:\n            t = chr(ord(S[idx])+(K%26))\n            S[idx] = t\n            K = 0\n    else:\n        K -= k\n        S[idx] = \"a\"\n        if idx < L-1:\n            idx += 1\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "8683": {"id": 8683, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7240": {"id": 7240, "code": "H = 20;N = 3\na = [4, 5, 6]\na1=sum(a)\nif(a1>=H):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12320": {"id": 12320, "code": "s = \"akasaka\"\nn = len(s)\nc = 0\nfor i in range(int((n - 1)/2)):\n  if (s[i] != s[n - 1 - i]):\n    c = 1\nx = int((n - 1)/2)\nfor i in range(x):\n  if (s[i] != s[x - 1 - i]):\n    c = 1\nif (c == 1):\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">"]}, "8952": {"id": 8952, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16337": {"id": 16337, "code": "n = 2\na = [100, 0]\na.sort()\nm = max(a) // 2\nres = 0\nc = max(a)\nfor i in range(n-1):\n  if abs(m - a[i]) <= c:\n    res = a[i]\n    c = abs(m - a[i])\nprint(max(a),res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16477": {"id": 16477, "code": "n = 2\nA = [0, 100]\nfor i in range(n):\n    if A[i]*2>A[-1]:\n        ind = i\n        break\nind -= 1\na = A[ind]\nb = A[-1]-A[ind+1]\nif a>=b:\n    print(A[-1],a)\nelse:\n    print(A[-1],A[ind+1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9262": {"id": 9262, "code": "n = ['2017', '01', '07']\nprint('2018/' + n[1] +'/'+n[2])", "coverage": [">", ">"]}, "5276": {"id": 5276, "code": "s = {'9', '4', '1', '7'}\nans = {'1', '9', '7', '4'}\nprint('YES' if s==ans else 'NO')", "coverage": [">", ">", ">"]}, "16141": {"id": 16141, "code": "n = 2\nA = [100, 0]\nA.sort()\nm = A[-1]\nM = [abs((m / 2) - a) for a in A[: -1]]\nr = A[M.index(min(M))]\nprint(m, r)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19119": {"id": 19119, "code": "n = 5\nans=0\nif n % 2==0:\n    for i in range(1,10000):\n        waru = 2*5**i\n        if n < waru:\n            break\n        else:\n            tmp = n//waru\n            ans += tmp\nprint(str(ans))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "12554": {"id": 12554, "code": "A = 1;B = 1;K = 1\ncount = 0\nimport math\nR = []\nfor i in range(1,int(math.sqrt(A))+1+1):\n    if A%i == 0:\n        R.append(i)\n        if not i == A//i:\n            R.append(A//i)\nR.sort(reverse=True)\nfor r in R:\n    if B%r==0:\n        count+=1\n        if count == K:\n            print(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "19248": {"id": 19248, "code": "N = 12\nif N%2 == 1:\n  print(\"0\")\n  exit(0)\nN = N//2\nans = 0  \nwhile N > 1:\n  N = N//5\n  ans += N\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13314": {"id": 13314, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "7779": {"id": 7779, "code": "n = 3;k = 3\na = [1, 2, 3]\ng=1\nwhile k+(k-1)*(g-1)< n:\n  g+=1\nprint(g)", "coverage": [">", ">", ">", ">", "!", ">"]}, "16562": {"id": 16562, "code": "a = \"D\";b = \"D\"\nif a ==\"H\":\n  print(\"H\") if b ==\"H\" else print(\"D\")\nelse:\n  print(\"D\") if b ==\"H\" else print(\"H\")", "coverage": [">", ">", "!", "!", ">"]}, "5227": {"id": 5227, "code": "s = \"internationalization\"\ns_c = len(s)-2\nprint(\uff53[0] + str(s_c) +s[-1])", "coverage": [">", ">", ">"]}, "13181": {"id": 13181, "code": "A = \"happy\";B = \"newyear\";C = \"enjoy\"\nprint(A + ' ' + B + ' ' + C)", "coverage": [">", ">"]}, "7452": {"id": 7452, "code": "H = 20;N = 3\nA = [4, 5, 6]\nif sum(A) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "4951": {"id": 4951, "code": "s = \"internationalization\"\nprint(\"{}{}{}\".format(s[:1], len(s[1:-1]), s[-1:]))", "coverage": [">", ">"]}, "16681": {"id": 16681, "code": "a = \"D\";b = \"H\"\nif (a==\"H\" and b==\"H\")or(a==\"D\"and b==\"D\"):\n    print(\"H\")\nelif (a==\"H\" and b==\"D\") or (a==\"D\" and b==\"H\"):\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">"]}, "10468": {"id": 10468, "code": "a = 100;b = 50;k = 4\nn = []\nfor i in range(1, min(a, b) + 1):\n  if a % i == 0 and b % i == 0:\n    n.append(i)\nprint(n[::-1][k-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "7636": {"id": 7636, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\ns=0\nflg=True\nfor i in range(N):\n  s+=A[i]\n  if s>=H:\n    print('Yes')\n    flg=False\n    break\nif flg:\n\tprint('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "17976": {"id": 17976, "code": "S = \"1905\"\nmonths = [i for i in range(1, 13)]\nleft = int(S[:2])\nright = int(S[2:])\nif left in months and right in months:\n    print('AMBIGUOUS')\nelif left in months:\n    print('MMYY')\nelif right in months:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "16569": {"id": 16569, "code": "a = \"H\";b = \"H\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "14245": {"id": 14245, "code": "N = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nflags = [False, False]\nfor i in range(N - 1):\n    da = a[i + 1] - a[i]\n    if da > 0:\n        flags[0] = True\n    elif da < 0:\n        flags[1] = True\n    if flags[0] == True and flags[1] == True:\n        ans += 1\n        flags = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2893": {"id": 2893, "code": "S = \"1234567876\"\nans = 753\nfor i in range(len(S)-2):\n  ans = min(ans, abs(753-int(S[i:i+3])))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "19146": {"id": 19146, "code": "n = 5\nif n%2!=0:\n  print(0)\nelse:\n  ans=0\n  t=10\n  while True:\n    ans=ans+n//t\n    t=t*5\n    if n//t==0:\n      break\n  print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "16908": {"id": 16908, "code": "a = \"H\";b = \"H\"\nif a=='H':\n  print(b)\nelse:\n  print('HD'[b=='H'])", "coverage": [">", ">", ">", "!", "!"]}, "2874": {"id": 2874, "code": "s = \"1111111111\"\ns_size = len(s)\nans = float('inf')\nfor i in range(s_size-2):\n    ans = min(abs(753-int(s[i]+s[i+1]+s[i+2])), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16208": {"id": 16208, "code": "N = 5\na = [6, 9, 4, 2, 11]\nma = max(a)\na.remove(ma)\nnum = 0\nind = 0\na.sort()\nfor i in range(N-1):\n    if a[i] < ma//2:\n        ind += 1\nif ind == 0:\n    print(ma,a[0])\n    exit()\nelif ind == N-1:\n    print(ma,a[-1])\n    exit()\nif abs(ma//2 - a[ind-1]) < abs(ma//2 - a[ind]):\n    print(ma,a[ind-1])\nelse:\n    print(ma,a[ind])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">"]}, "15583": {"id": 15583, "code": "X = 100000;Y = 1;Z = 1\na=X-Z\nb=Y+Z\nprint(a//b)", "coverage": [">", ">", ">", ">"]}, "1879": {"id": 1879, "code": "n = 10;a = 3;b = 5\nc=min(a,b)\nd=max(a,b)\nif n-d<c:\n    d=c-(n-d)\nelse:\n    d=0\nprint(c,d)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "4892": {"id": 4892, "code": "S = \"smiles\"\nS = list(S)\nn = len(S)\nprint(S[0] + str(n-2) + S[n-1])", "coverage": [">", ">", ">", ">"]}, "12503": {"id": 12503, "code": "a = 8;b = 12;k = 2\np=[]\nfor i in range(1,a+1):\n  if a%i==0 and b%i==0:\n    p.append(i)\nn=len(p)\nprint(p[n-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5521": {"id": 5521, "code": "N = 5\nanswer = N / 2 if N % 2 == 0 else int(N / 2) + 1\nprint(int(answer))", "coverage": [">", ">", ">"]}, "15942": {"id": 15942, "code": "a = 20;b = 15\nc=b+b\nif(a-c!=0)and(a-c>=0):\n    print(a-c)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "2854": {"id": 2854, "code": "s = \"1234567876\"\nn = len(s)\nans = float(\"inf\")\nfor i in range(n-2):\n    ans = min(ans,abs(eval(s[i:i+3])-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4872": {"id": 4872, "code": "s = \"xyz\"\nanswer = ''\ns = list(s)\nanswer = s[0] + str(len(s)-2) + s[len(s)-1]\nprint(answer)", "coverage": [">", ">", ">", ">", ">"]}, "11774": {"id": 11774, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "16692": {"id": 16692, "code": "a = \"H\";b = \"H\"\nif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" or b == \"D\":\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "5831": {"id": 5831, "code": "i = 2\nif i%2==0: print(i//2)\nelse: print(i//2+1)", "coverage": [">", ">", "!"]}, "11700": {"id": 11700, "code": "S = \"SAT\"\ndays = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ni = 0\nfor d in reversed(days):\n    i += 1\n    if d == S:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17560": {"id": 17560, "code": "s = \"0112\"\nfirst = 0 < int(s[:2]) < 13\nsecond = 0 < int(s[2:]) < 13\nif first and second:\n    print('AMBIGUOUS')\nelif first:\n    print('MMYY')\nelif second:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17652": {"id": 17652, "code": "NN = \"1905\"\nAA = int(NN[0:2])\nBB = int(NN[2:])\ncount1 = 0\ncount2 = 0\nif AA > 12 or AA == 00:\n  count1 +=1\nif BB > 12 or BB == 00:\n  count2 +=1\nif count1 == 0 and count2 == 0:\n  print('AMBIGUOUS')\nelif count1 ==1 and count2 == 0:\n  print('YYMM')\nelif count1 ==0 and count2 == 1:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "10197": {"id": 10197, "code": "n = 6\ns = \")))())\"\nl=r=0\nfor c in s:\n  if c=='(': l+=1\n  else: r+=1\n  if r>l: s='('+s; l+=1\nprint(s+')'*(l-r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2686": {"id": 2686, "code": "n = {1, 2, 9}\nif n == set({1, 7, 9, 4}):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "7101": {"id": 7101, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif h<=sum(a):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "2538": {"id": 2538, "code": "n = map(int, \"1 7 9 4\".split())\nbeginning = set([1, 9, 7, 4])\nprint('YES' if beginning == set(n) else 'NO')", "coverage": [">", ">", ">"]}, "12798": {"id": 12798, "code": "X = \"5\"\nif X in [\"3\",\"5\",\"7\"]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "6309": {"id": 6309, "code": "import bisect\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nlenC = len(C)\nans = 0\nfor b in B:\n  idxA = bisect.bisect_left(A, b)\n  idxC = lenC - bisect.bisect_right(C, b)\n  ans += idxA * idxC\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2373": {"id": 2373, "code": "n = 0;m = 3\nans = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "5197": {"id": 5197, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nx=int(len(s))\nprint(s[0],x-2,s[x-1],sep=\"\")", "coverage": [">", ">", ">"]}, "14456": {"id": 14456, "code": "N = 9\npre = None\nis_inc = None\nans = 1\nfor num in list(map(int, \"1 2 1 2 1 2 1 2 1\".split())):\n    if pre is None:\n        pre = num\n        continue\n    if is_inc is None and num > pre:\n        is_inc = True\n    elif is_inc is None and num < pre:\n        is_inc = False\n    elif (is_inc and num < pre) or (not is_inc and num > pre):\n        ans += 1\n        is_inc = None\n    pre = num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10719": {"id": 10719, "code": "s = \"level\"\nn = len(s)\nif s != s[::-1]:\n  print(\"No\")\nelif s[0:(n-1)//2] != s[(n-1)//2-1::-1]:\n  print(\"No\")\nelif s[(n+3)//2-1:n] != s[n-1:(n+3)//2-2:-1]:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "7572": {"id": 7572, "code": "a = 211;b = 5\nlis = [31, 41, 59, 26, 53]\nc = sum(lis)\nprint(\"No\" if a > c else \"Yes\")", "coverage": [">", ">", ">", ">"]}, "14871": {"id": 14871, "code": "from math import factorial\nn = 1;p = 1\nnums = [50]\nodd = 0\neven = 0\nfor num in nums:\n    if num % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nif p == 0 and odd == 0:\n    ans += 2 ** even\nelse:\n    ans += (2 ** even) * (2 ** odd // 2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "15532": {"id": 15532, "code": "x = 13;y = 3;z = 1\nans = int(x/(y+z))\nif x%(y+z) < z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3996": {"id": 3996, "code": "x = 12;y = 3;z = 1\ni=(x-(y+2*z))//(y+z)\nprint(i+1)", "coverage": [">", ">", ">"]}, "6073": {"id": 6073, "code": "n = 5\na = n // 2 + n % 2\nprint(a)", "coverage": [">", ">", ">"]}, "3156": {"id": 3156, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    num = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n    if ans > abs(753-num):\n        ans = abs(753-num)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17393": {"id": 17393, "code": "S = 1700\na = S//100\nb = S%100\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12 and (b>12 or b==0):\n    print('MMYY')\nelif (a==0 or a>12) and 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14856": {"id": 14856, "code": "n = 3;p = 0\na_list = [1, 1, 1]\ndp = [[0,0] for i in range(n+1)]\ndp[0][0] = 1\ndp[0][1] = 0\nfor i in range(n):\n  if a_list[i] % 2 == 0:\n    dp[i+1][0] = dp[i][0] + dp[i][0] \n    dp[i+1][1] = dp[i][1] + dp[i][1]\n  if a_list[i] % 2 == 1:\n    dp[i+1][0] = dp[i][0] + dp[i][1] \n    dp[i+1][1] = dp[i][1] +dp[i][0] \nprint(dp[-1][p])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "17702": {"id": 17702, "code": "s = 1700\nl, r = s / 100, s % 100\nif 1 <= l <= 12:\n    if 1 <= r <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelif 1 <= r <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "9783": {"id": 9783, "code": "N = 8\nS = \"))))((((\"\nl = 0\ncnt = 0\nfor c in S:\n    if c == \"(\":\n        cnt += 1\n    else:\n        if cnt == 0:\n            l += 1\n        else:\n            cnt -= 1\nans = \"(\"*l + S + \")\"*cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "10608": {"id": 10608, "code": "a = 100;b = 50;k = 4\nfor i in range(100, 0, -1):\n    if a % i == b % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17727": {"id": 17727, "code": "S = \"1905\"\nMM = [\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif S[:2] in MM and S[2:] in MM:\n  print(\"AMBIGUOUS\")\nelif S[:2] in MM:\n  print(\"MMYY\")\nelif S[2:] in MM:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "7401": {"id": 7401, "code": "h = 210;n = 5\nl = [31, 41, 59, 26, 53]\na=0\nfor i in range(n):\n    a+=l[i]\nif a>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15197": {"id": 15197, "code": "import io\nn = 13;m = 3;k = 1\nprint((n-k)//(m+k))", "coverage": [">", ">", ">"]}, "3062": {"id": 3062, "code": "S = \"35753\"\nans = 10**4\nfor i in range(len(S) - 2):\n    a = abs(int(S[i: i + 3]) - 753)\n    if a < ans:\n        ans = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7859": {"id": 7859, "code": "import math\nn = 3;k = 3\na = [1, 2, 3]\nans = n - k\nc = 0\nif ans > 0:\n    c = math.ceil(ans / (k-1))\nprint(c+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "17129": {"id": 17129, "code": "input_a = \"D\";input_b = \"D\"\nreslut = \"ret\"\nif input_a == \"H\":  \n    if input_b == \"H\":\n        result = \"H\"\n    elif input_b == \"D\":\n        result = \"D\"\nelif input_a == \"D\":    \n    if input_b == \"H\":\n        result = \"D\"\n    elif input_b == \"D\":\n        result = \"H\"\nelse:\n    reslut = \"I don't Know.\"\nprint(result)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">"]}, "1151": {"id": 1151, "code": "N = 750\nS = str(N)\nif S[0] == S[1] == S[2]:\n    print(N)\nelse:\n    print(111 * (N // 111 + 1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "1720": {"id": 1720, "code": "n = 100;x = 100;y = 100\nif (x+y)>n:\n  mn=(x+y)-n\nelse:\n  mn=0\nmx=min(x,y)\nprint('{} {}'.format(mx,mn))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "16923": {"id": 16923, "code": "a = \"H\";b = \"H\"\nif (a=='H') ^ (b=='H'): print(\"D\")\nelse: print(\"H\")", "coverage": [">", ">", ">"]}, "11527": {"id": 11527, "code": "s = \"SAT\"\ndays = [\"\", \"SAT\", \"FRI\", \"THU\", \"WED\", \"TUE\", \"MON\", \"SUN\"]\nprint(days.index(s))", "coverage": [">", ">", ">"]}, "6337": {"id": 6337, "code": "N=6\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nD=[0]*N\nE=[0]*N\nA=list(sorted(A,reverse=True))\nB=list(sorted(B,reverse=True))\nC=list(sorted(C,reverse=True))\nu=N-1\nd=N-1\nc=0\nwhile(True):\n    if A[u] < B[d]:\n        c+=1\n        u-=1\n    else:\n        D[d]=c\n        d-=1\n    if(-1==u or -1==d):\n        for i in range(d,-1,-1):\n            D[i]=c\n        break\nu=0\nd=0\nc=0\nwhile(True):\n    if B[u] < C[d]:\n        c+=1\n        d+=1\n    else:\n        E[u]=c\n        u+=1\n    if(N==u or N==d):\n        for i in range(u,N):\n            E[i]=c\n        break\ns=0\nfor i in range(N):\n    s+=D[i]*E[i]\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13230": {"id": 13230, "code": "s = \"haiku,atcoder,tasks\"\nfor i in range(len(s)):\n    if s[i]==\",\":\n        s=s[:i]+\" \"+s[i+1:]\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "14867": {"id": 14867, "code": "N = 2;P = 0\nA = [1, 3]\nf=0\nfor i in range(N):\n  if A[i]%2==1:\n    f=1\nif f==0:\n  if P==0:\n    print(2**N)\n  else:\n    print(0)\nelse:\n  print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "12746": {"id": 12746, "code": "x = 5\nprint(\"YES\") if x == 7 or x == 5 or x == 3 else print(\"NO\")", "coverage": [">", ">"]}, "513": {"id": 513, "code": "s = ['a']\nk = 25\nfor i,j in enumerate(s):\n  if j=='a':continue\n  if ord('z')-ord(j)+1<=k:\n    s[i]='a'\n    k-=ord('z')-ord(j)+1\n  if k==0:break\nif k>0:s[-1]=chr(k%26+ord(s[-1]))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "6179": {"id": 6179, "code": "import bisect\nN = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\ntotal = 0\nfor i in range(N):\n  total += bisect.bisect_left(a,b[i]) * (N - bisect.bisect_right(c,b[i]))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7033": {"id": 7033, "code": "H = 210;N = 5\ni = map(int,\"31 41 59 26 53\".split())\nif sum(i) >= H :\n    print(\"Yes\")\nelse :\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "10001": {"id": 10001, "code": "N = 6\nS = [')', ')', ')', '(', ')', ')']\nL = 0\nout = []\nout2 = []\nfor i in range(N):\n    X = S[i]\n    if X==\"(\":\n        L += 1\n        out.append(\"(\")\n    elif X==\")\":\n        if L>0:\n            L += -1\n            out.append(\")\")\n        else:\n            out2.append(\"(\")\n            out.append(\")\")\nfor i in range(L):\n    out.append(\")\")\nprint(\"\".join(out2)+\"\".join(out))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "4038": {"id": 4038, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif h1 > h2:\n    h2 +=24\nh = h2 - h1\nm = m2 - m1\nif m < 0:\n    m = m + 60\n    h = h - 1\ntime = h*60 + m \nprint(time - k)", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "8588": {"id": 8588, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4954": {"id": 4954, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(\"\".join([s[0],str(len(s)-2),s[-1]]))", "coverage": [">", ">"]}, "15083": {"id": 15083, "code": "N = 3;P = 0\nA = [1, 1, 1]\nev = 0\nod = 0\nfor a in A:\n    if a % 2 == 0:\n        ev += 1\n    else:\n        od += 1\nif P == 0 and od == 0:\n    print(2**ev)\nelse:\n    print(2**ev * (2**od//2))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "892": {"id": 892, "code": "K = 2\nif K % 2 == 0:\n    print(-1)\nelse:\n    seen = set()\n    ans = 1\n    num = 7\n    while ans <= K:\n        mod = num % K\n        if mod in seen:\n            ans = -1\n            break\n        else:\n            seen.add(mod)\n        if mod == 0:\n            break\n        else:\n            num = mod * 10 + 7\n            ans += 1\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18096": {"id": 18096, "code": "s = 112\na, b = s // 100, s % 100\nx = \"YY\" if a == 0 or a > 12 else \"MM\"\ny = \"YY\" if b == 0 or b > 12 else \"MM\"\nprint(x + y if x != y else \"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">"]}, "3012": {"id": 3012, "code": "s = \"1234567876\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n  c = int(s[i])*100+int(s[i+1])*10+int(s[i+2])\n  ans = min(ans,abs(753-c))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5970": {"id": 5970, "code": "import math\nN = 100\nans = math.ceil(N / 2.0)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "2623": {"id": 2623, "code": "N = \"4 9 0 8\"\nif \"1\" in N and \"9\" in N and \"7\" in N and \"4\" in N:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "18563": {"id": 18563, "code": "h = 3;w = 7;n = 10\na = max(h,w)\nprint(n//a + 1 if n%a else n//a)", "coverage": [">", ">", ">"]}, "7159": {"id": 7159, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nc = 0\nfor i in range(n):\n  c = c + a[i]\nif (c >= h):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2345": {"id": 2345, "code": "N = 4;M = 3\nres = 0\nif N >= 2:\n  res += N * (N - 1) / 2\nif M >= 2:\n  res += M * (M - 1) / 2\nprint(int(res))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18643": {"id": 18643, "code": "h = 2\nw = 100\nn = 200\nprint(min((n+h-1)//h,(n+w-1)//w))", "coverage": [">", ">", ">", ">"]}, "9885": {"id": 9885, "code": "n = 6\ns = \")))())\"\ndist = 0\nmlow = 0\nfor i in s:\n    if i == \")\":\n        dist -= 1\n        if dist < mlow:\n            mlow = dist\n    else:\n        dist += 1\nleft = \"(\"*(-mlow)\nright = \")\"*(dist-mlow)\nprint(left+s+right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13858": {"id": 13858, "code": "n = 9\nlis = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nflag = 0\nfor i in range(n-1):\n    if lis[i+1] - lis[i] >0:\n        if flag == 1:\n            pass\n        elif flag == -1:\n            flag = 0\n            cnt += 1\n        elif flag == 0:\n            flag = 1\n    elif lis[i+1] - lis[i] < 0:\n        if flag == 1:\n            flag = 0\n            cnt += 1\n        elif flag == -1:\n            pass\n        elif flag == 0:\n            flag = -1\n    elif lis[i+1] - lis[i] == 0:\n        pass\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "17073": {"id": 17073, "code": "AB = \"H H\"\nres = {\"H H\":\"H\",\"H D\":\"D\",\"D H\":\"D\",\"D D\":\"H\"}\nprint(res[AB])", "coverage": [">", ">", ">"]}, "13803": {"id": 13803, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup, down = 0, 0\nans = 0\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        up += 1\n    if a[i-1] > a[i]:\n        down += 1\n    if up * down > 0:\n        ans += 1\n        up = 0\n        down = 0\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2891": {"id": 2891, "code": "s = \"35753\"\nans = 1000\nfor i in range(len(s)-2):\n    u = abs(eval(s[i]+s[i+1]+s[i+2])-753)\n    if u < ans:\n        ans = u\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6294": {"id": 6294, "code": "import bisect\nfrom collections import deque\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nd = deque([])\nfor i in range(N):\n  n = bisect.bisect_right(C, B[N-1-i])\n  if len(d) == 0:\n    d.appendleft(N-n)\n  else:\n    d.appendleft(N-n+d[0])\nans = 0\nfor i in range(N):\n  m = bisect.bisect_right(B, A[i])\n  if m < N:\n    ans += d[m]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "6130": {"id": 6130, "code": "N = 2\nla = [[1, 0], [5, 0]]\nlb = [[2, 1], [4, 1]]\nlc = [[3, 2], [6, 2]]\nl=la+lb+lc\nl.sort(key=lambda x:(x[0],-x[1]))\nna=0\nsumb=0\nans=0\nfor i in range(3*N):\n    if l[i][1]==0:\n        na+=1\n    elif l[i][1]==1:\n        sumb+=na\n    else:\n        ans+=sumb\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5255": {"id": 5255, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nanswer_list=[s[0]]+[str(len(s)-2)]+[s[-1]]\nprint(\"\".join(answer_list))", "coverage": [">", ">", ">"]}, "15351": {"id": 15351, "code": "X = 12;Y = 3;Z = 1\nprint((X-Z)//(Z+Y))", "coverage": [">", ">"]}, "5322": {"id": 5322, "code": "N = 100\nprint(N//2 if N%2==0 else N//2+1)", "coverage": [">", ">"]}, "16636": {"id": 16636, "code": "a = \"D\";b = \"H\"\nif a==\"H\":\n    if b==\"H\":\n        ans=\"H\"\n    elif b==\"D\":\n        ans=\"D\"\nelif a==\"D\":\n    if b==\"H\":\n        ans=\"D\"\n    elif b==\"D\":\n        ans=\"H\"\nprint(ans)", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "16018": {"id": 16018, "code": "A = 20;B = 30\nif(A<=B*2):\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "6794": {"id": 6794, "code": "h = 20;n = 3\na = [4, 5, 6]\nsum=0\nfor i in a:\n    sum += i\nif sum<h:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4138": {"id": 4138, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nT1, T2 = (H1 * 60 + M1), (H2 * 60 + M2)\nprint(\"{}\".format((T2 - K) - T1))", "coverage": [">", ">", ">"]}, "17523": {"id": 17523, "code": "s = \"1905\"\nx = int(s) // 100\ny = int(s) % 100\nif 1 <= x <= 12:\n  if 1 <= y <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= y <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "1917": {"id": 1917, "code": "n = 100;a = 100;b = 100\nans1 = min([a, b])\nans2 = max([0, a+b-n])\nprint('{} {}'.format(ans1, ans2))", "coverage": [">", ">", ">", ">"]}, "19215": {"id": 19215, "code": "N = 12\nif N % 2 == 1:\n    print(0)\n    exit()\ntmp = 2\nans = 0\nwhile tmp < N:\n    tmp *= 5\n    ans += N // tmp\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10981": {"id": 10981, "code": "import sys\ninput = sys.stdin.readline\ns = \"atcode\";n = 6\nprint('Yes' if s == s[::-1] and s[:(n-1)//2] == s[:(n-1)//2][::-1] and s[(n+1)//2:] == s[(n+1)//2:][::-1] else 'No')", "coverage": [">", ">", ">", ">"]}, "4798": {"id": 4798, "code": "s = \"internationalization\"\nnum = len(s)\nnumS = str(num - 2)\nprint(s[0] + numS + s[-1])", "coverage": [">", ">", ">", ">"]}, "39": {"id": 39, "code": "s = ['x', 'y', 'z']\nk = 4\nn=len(s)\nfor i in range(n-1):\n    t=s[i]\n    order=ord(t)-97\n    if order==0:\n        continue\n    elif k>=26-order:\n        s[i]='a'\n        k-=26-order\n    else:\n        continue\ns[n-1]=chr(97+(ord(s[n-1])-97+k)%26)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "13415": {"id": 13415, "code": "S = \"happy,newyear,enjoy\"\nprint(S[:5]+' '+S[6:13]+' '+S[14:])", "coverage": [">", ">"]}, "1149": {"id": 1149, "code": "N = 111\nS = str(N)\nif S[0] == S[1] == S[2]:\n    print(N)\nelse:\n    print(111 * (N // 111 + 1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "1097": {"id": 1097, "code": "import sys\nN = 111\nnum =[111,222,333,444,555,666,777,888,999]\nfor i in range(8):\n    if N <= num[0]:\n        ans =111\n        break\n    elif  num[i] < N <= num[i+1]:\n        ans =num[i+1] \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19085": {"id": 19085, "code": "n = 12;ans = 0\nif not n%2:\n    for i in range(1,30):\n        ans+=n//(5**i*2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18580": {"id": 18580, "code": "h = 2\nw = 100\nn = 200\nm = max(h, w)\nprint(n // m + 1) if n % m else print(n // m)", "coverage": [">", ">", ">", ">", ">"]}, "13189": {"id": 13189, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a + \" \" + b + \" \" + c)", "coverage": [">", ">"]}, "12329": {"id": 12329, "code": "S = \"akasaka\"\nN=len(S)\ns=''.join(list(reversed(S)))\nT=S[0:int((N-1)/2)]\nNT=len(T)\nt=''.join(list(reversed(T)))\nU=S[int((N+1)/2):N]\nNU=len(U)\nu=''.join(list(reversed(U)))\nif S[0:int((N-1)/2)] == s[0:int((N-1)/2)] and T == t and U == u:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10898": {"id": 10898, "code": "s = \"akasaka\"\nn=len(s)\ns2=s[:(n-1)//2]\ns3=s[(n+3)//2-1:]\ncount=0\nfor i in range(n//2):\n    if s[i]==s[-(i+1)]:\n        count+=1\nfor i in range((n-1)//2):\n    if s2[i]==s2[-(i+1)]:\n        count+=1\nfor i in range(n-(n+3)//2+1):\n    if s3[i]==s3[-(i+1)]:\n        count+=1\nif count==n//2+(n-1)//2+n-(n+3)//2+1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5059": {"id": 5059, "code": "s = \"internationalization\"\nsize = len(s[1:-1])\nprint(s[0] + str(size) + s[-1])", "coverage": [">", ">", ">"]}, "11972": {"id": 11972, "code": "m1 = \"11\"\nm2 = \"11\"\nprint(int(m1 != m2))", "coverage": [">", ">", ">"]}, "2232": {"id": 2232, "code": "n = 100;a = 100;b = 100\nM = min(a, b)\nm = max(0, a+b-n)\nprint(M, m)", "coverage": [">", ">", ">", ">"]}, "8684": {"id": 8684, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10647": {"id": 10647, "code": "A = 8;B = 12;K = 2\na = []\nb = []\nfor x in range(1, A + 1):\n    if A % x == 0:\n        a.append(x)\nfor y in range(1, B + 1):\n    if B % y == 0 and y in a:\n        b.append(y)\nb = sorted(b,reverse = True)\nprint(b[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18028": {"id": 18028, "code": "s = \"0112\"\nfor c in s:\n    if not '0'<=c<='9':\n        print('NA')\n        exit(0)\na = int(s[:2])\nb = int(s[2:])\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12:\n    print('MMYY')\nelif 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "11678": {"id": 11678, "code": "w = [\"SAT\", \"FRI\", \"THU\", \"WED\", \"TUE\", \"MON\", \"SUN\"]\ns = \"SAT\"\nprint((w.index(s)+1)%8)", "coverage": [">", ">", ">"]}, "12821": {"id": 12821, "code": "X = 6\nprint(\"YES\" if 105%X == 0 and X != 1 else \"NO\")", "coverage": [">", ">"]}, "14443": {"id": 14443, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nincrease = False\ndecrease = False\nfor i in range(1,N):\n    if A[i-1] == A[i]:\n        continue\n    elif increase and A[i-1] < A[i]:\n        continue\n    elif decrease and A[i-1] > A[i]:\n        continue\n    elif not increase and not decrease and A[i-1] < A[i]:\n        increase = True\n    elif not increase and not decrease and A[i-1] > A[i]:\n        decrease = True\n    else:\n        count += 1\n        increase = False\n        decrease = False\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "16774": {"id": 16774, "code": "a = \"D\";t = \"H\"\nprint('H' if a==t else 'D')", "coverage": [">", ">"]}, "11927": {"id": 11927, "code": "m = \"11\";d = \"30\"\nM = \"12\";D = \"1\"\nif D == '1':\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "8400": {"id": 8400, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "974": {"id": 974, "code": "n = \"111\"\nif int(n) <= int(n[0]*3):\n    print(int(n[0]*3))\nelse:\n    print(int(str(int(n[0])+1)*3))", "coverage": [">", ">", ">", "!", "!"]}, "15718": {"id": 15718, "code": "x = 13;y = 3;z = 1\nx -= z\ncnt = 0\nwhile x >= y + z:\n    x = x - y - z\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2783": {"id": 2783, "code": "s = \"35753\"\nans=753\nfor i in range(0,len(s)-3+1):\n    ans=min(abs(int(s[i:i+3])-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2010": {"id": 2010, "code": "n = 10;a = 7;b = 5\nif a+b<n:\n    Max=min(a,b)\n    Min=0\nelse:\n    Max=min(a,b)\n    Min=max(a,b)-(n-min(a,b))\nprint(\"{0} {1}\".format(Max,Min))", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "17149": {"id": 17149, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    print(b)\nelse:\n    if b == 'H': print('D')\n    else: print('H')", "coverage": [">", ">", ">", "!", "!", "!"]}, "9516": {"id": 9516, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3] = '8'\nprint(*s,sep='')", "coverage": [">", ">", ">"]}, "9717": {"id": 9717, "code": "from itertools import accumulate\nN = 6\nS = \")))())\"\nm = -min(min(accumulate(1 if c == '(' else -1 for c in S)),0)\ns = sum(1 if c == '(' else -1 for c in S)\nprint('('*m+S+')'*(s+m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "18452": {"id": 18452, "code": "h = 3\nw = 7\nn = 10\nm = max(h, w)\nans = n // m\nif n % m != 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8850": {"id": 8850, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3038": {"id": 3038, "code": "s = \"1111111111\"\nans = abs(753 - int(s[0: 3]))\nfor i in range(1, len(s) - 2):\n    num = int(s[i: i + 3])\n    ans = min(ans, abs(753 - num))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8288": {"id": 8288, "code": "import math\nn = 3;k = 3\na = [1, 2, 3]\nx=a.index(1)\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">"]}, "18547": {"id": 18547, "code": "h = 2\nw = 100\nn = 200\ni=1\nwhile n > max(h,w)*i:\n    i += 1\nelse: print(i)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9673": {"id": 9673, "code": "N = 6\nS = \")))())\"\ncnt1, cnt2 = 0, 0\nfor s in S:\n    if s == \"(\":\n        cnt1 += 1\n    if s == \")\" and cnt1 >= 1:\n        cnt1 -= 1\nfor s in reversed(S):\n    if s == \")\":\n        cnt2 += 1\n    if s == \"(\" and cnt2 >= 1:\n        cnt2 -= 1\nprint(\"(\"*cnt2 + S + \")\"*cnt1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14224": {"id": 14224, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nstate = -1\nfor i in range(1, N):\n    if state == -1:\n        if A[i] < A[i-1]:\n            state = 0\n        elif A[i] > A[i-1]:\n            state = 1\n    elif (state == 0 and A[i] > A[i-1]) or (state == 1 and A[i] < A[i-1]):\n        ans += 1\n        state = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15910": {"id": 15910, "code": "a = 20;b = 30\nc = a - 2*b\nif c>0:\n    print(c)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "18674": {"id": 18674, "code": "h = 3\nw = 7\nn = 10\na = max(h, w)\nif n%a == 0:\n    print(n//a)\nelse:\n    print(n//a + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15518": {"id": 15518, "code": "x = 12;y = 3;z = 1\nans = x // (y+z)\nif x < ans * (y+z) + z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3797": {"id": 3797, "code": "import sys\nsys.setrecursionlimit(10**6)\nx = 13;y = 3;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "11804": {"id": 11804, "code": "A = ['11', '16']\nB = ['11', '17']\nif A[0] == B[0]:\n\tprint(\"0\")\nelse:\n\tprint(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "1822": {"id": 1822, "code": "n = 100;a = 100;b = 100\nx = min(a, b)\ny = - ( n - a - b )\ny = 0 if y < 0 else y\nprint(x,y)", "coverage": [">", ">", ">", ">", ">"]}, "3373": {"id": 3373, "code": "a = 12;b = 4\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", "!", "!", ">"]}, "17316": {"id": 17316, "code": "N = ['H', 'H']\nif(N[0] == 'H'):\n  if(N[1] == 'H'):\n    print('H')\n  else:\n    print('D')\nelse:\n  if(N[1] == 'H'):\n    print('D')\n  else:\n    print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "8": {"id": 8, "code": "s = \"xyz\"\nx = 4\ntank = []\nfor c in list(s):\n    if c=='a':\n        tank.append(0)\n    else:\n        tank.append(ord('z') + 1 - ord(c))\nres = ''\nfor i in range(len(tank)):\n    if tank[i] == 0:\n        res += s[i]\n    elif tank[i] <= x:\n        x -= tank[i]\n        tank[i] = 0\n        res += 'a'\n    else:\n        res += s[i]\nc = res[-1]\nx %= 26\nif ord(c)+x <= ord('z'):\n    res = res[:-1] + chr(ord(c)+x)\nelse:\n    res = res[:-1] + chr(ord(c)+x-ord('z')+ord('a')-1)\nprint(res)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11234": {"id": 11234, "code": "S = \"SAT\"\nweek = {\n  \"MON\": 1,\n  \"TUE\": 2,\n  \"WED\": 3,\n  \"THU\": 4,\n  \"FRI\": 5,\n  \"SAT\": 6\n}\nif S == \"SUN\":\n  print(7)\nelse:\n  print(7 - week[S])", "coverage": [">", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "17056": {"id": 17056, "code": "a = \"D\";b = \"H\"\nif a==\"H\" and b==\"H\":\n    print(\"H\")\nelif a==\"H\" and b==\"D\":\n    print(\"D\")\nelif a==\"D\" and b==\"H\":\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "8992": {"id": 8992, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif e - a <= k:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "1289": {"id": 1289, "code": "n = 112\nfor i in range(9):\n  if n<=i*111:\n    print((i)*111)\n    break\nelse:\n  print(999)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4786": {"id": 4786, "code": "s = \"internationalization\"\ns1 = s[0]\ns2 = s[-1]\nans = s1 + str(len(s)-2) + s2\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17912": {"id": 17912, "code": "s = \"1700\"\nn1 = s[0:2]\nn2 = s[2:4]\nif int(n1) > 12 and int(n2) > 12:\n    out_print = 'NA'\nelif int(n1) <= 12 and int(n2) <= 12:\n    out_print = 'AMBIGUOUS'\n    if int(n1) == 0 and int(n2)!=0:\n        out_print = 'YYMM'\n    elif int(n1) != 0 and int(n2) == 0:\n        out_print = 'MMYY'\n    elif int(n1)==0 and int(n2)==0:\n        out_print = 'NA'\nelif int(n1) <= 12 and int(n2) >12:\n    out_print = 'MMYY'\n    if int(n1) == 0:\n        out_print = 'NA'\nelif int(n1) > 12 and int(n2) <= 12:\n    out_print = 'YYMM'\n    if int(n2) == 0:\n        out_print = 'NA'\nprint(out_print)", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "19301": {"id": 19301, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    quit()\nd = 10\nans = 0\nwhile n >= d:\n    ans += n // d\n    d *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7379": {"id": 7379, "code": "n = 210;k = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\ns=0\nfor i in range(k):\n  s+=a[i]\nprint('Yes' if s >= n else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8264": {"id": 8264, "code": "n = 3;k = 3\na = [1, 2, 3]\nans = 1\nn -= k\nk -= 1\nif n % k == 0:\n    ans += n // k\nelse:\n    ans += n // k + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1678": {"id": 1678, "code": "n = 100;a = 100;b = 100\nif n>=(a+b):\n    MAX = min(a,b)\n    MIN = 0\nelse:\n    MAX = min(a,b)\n    MIN = a+b-n\nprint(str(MAX)+' '+str(MIN))", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "5443": {"id": 5443, "code": "n = 5\nif n%2 == 0:\n    print(n//2)\nif n%2 != 0:\n    print(n//2+1)", "coverage": [">", ">", "!", ">", ">"]}, "11829": {"id": 11829, "code": "x = 11;y = 30\nx = 12;y = 1\nif y==1:\n\tprint(1)\nelse:\n\tprint(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "8097": {"id": 8097, "code": "N = 3;K = 3\nA = [1, 2, 3]\nif (A.index(1)+1)>=K and (N-A.index(1))>=K:\n  ans=-(-A.index(1))//(K-1)-(-N+A.index(1)+1)//(K-1)\nelse:\n  ans=1-(-N+K)//(K+1)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "6490": {"id": 6490, "code": "import sys\nimport bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    mid = B[i]\n    top = bisect.bisect_left(A, mid)\n    down = bisect.bisect_right(C, mid)\n    ans += top * (N - down)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4296": {"id": 4296, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\na1 = h1*60+m1\na2 = h2*60+m2\nprint(a2-a1-k)", "coverage": [">", ">", ">", ">"]}, "16090": {"id": 16090, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nA = 20;B = 15\nprint(max(A-2*B, 0))", "coverage": [">", ">", ">", ">", ">"]}, "17979": {"id": 17979, "code": "s = \"1905\"\ns1 = int(s[0:2])\ns2 = int(s[2:])\nif s1 > 0 and s1 < 13:\n    if s2 > 0 and s2 < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if s2 > 0 and s2 < 13:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "16191": {"id": 16191, "code": "n = 2\na = [100, 0]\na.sort()\nN = a[-1]\nans = float('inf')\nr = a[0]\nfor i in range(len(a)-1):\n    if ans > abs(a[i]-N/2):\n        ans = abs(a[i]-N/2)\n        r = a[i]\nprint(str(N) +' '+ str(r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "821": {"id": 821, "code": "K = 2\nt = 7\nfor i in range(K):\n    if t % K == 0:\n        print(i + 1)\n        break\n    t = (t * 10 + 7) % K\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "184": {"id": 184, "code": "S = ['x', 'y', 'z']\nK = 4\nfor i in range(len(S)):\n  n = ord(S[i])\n  if S[i] == 'a':\n    continue\n  if ord('z') - n + 1 <= K:\n    K -= ord('z') - n + 1\n    S[i] = 'a'\nassert K >= 0\nif K != 0:\n  n = ord(S[-1])\n  n -= ord('a')\n  n += K\n  n %= 26\n  n += ord('a')\n  S[-1] = chr(n)\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "15691": {"id": 15691, "code": "import math\nx = 100000;y = 1;z = 1\nif x%(y+z)>=z:\n  print(math.floor(x/(y+z)))\nelse:\n  print(math.floor(x/(y+z)-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "1920": {"id": 1920, "code": "n = 100;a = 100;b = 100\nif n < a+b:\n\tmi=a+b-n\nelse:\n\tmi=0\nprint(min(a,b),mi)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3653": {"id": 3653, "code": "a = 12;b = 4\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", "!", "!", ">"]}, "17427": {"id": 17427, "code": "s = \"1905\"\ns_a = int(s[:2])\ns_b = int(s[2:])\nif 1 <= s_a <=12 and 1 <= s_b <=12:\n  ans = \"AMBIGUOUS\"\nelif not(1 <= s_a <=12) and 1 <= s_b <=12:\n  ans = \"YYMM\"\nelif 1 <= s_a <=12 and not(1 <= s_b <=12):\n  ans = \"MMYY\"\nelse:\n  ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "2599": {"id": 2599, "code": "N1 = 4;N2 = 9;N3 = 0;N4 = 8\nN1, N2, N3, N4 = sorted([N1, N2, N3, N4])\nif [N1, N2, N3, N4] == [1, 4, 7, 9]:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "9066": {"id": 9066, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nimport itertools\ncannot=False\nfor x,y in itertools.combinations([a,b,c,d,e],2):\n    if y-x>k:\n        cannot=True\nif cannot:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "1803": {"id": 1803, "code": "N = 10;A = 7;B = 5\nprint(min(A,B),max(0,min(A,B)-(N-max(A,B))))", "coverage": [">", ">"]}, "10409": {"id": 10409, "code": "a = 1;b = 1;k = 1\ni = min(a,b)\nans = 0\nwhile 1:\n  if not(a % i)  and not(b % i):\n    ans += 1\n  if ans == k:\n    break\n  i -= 1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "9983": {"id": 9983, "code": "n = 3\ns = ['(', ')', ')']\nd = [0]\nx = 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        x += 1\n    else:\n        x -= 1\n    d.append(x)\nans = []\nx = min(d)\nfor i in range(max(0,(-1*x))):\n    ans.append('(')\nfor i in s:\n    ans.append(i)\nfor i in range(max(d[len(d)-1]-x,0)):\n    ans.append(')')\na = ''.join(ans)\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "3434": {"id": 3434, "code": "x = 20;y = 15\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11265": {"id": 11265, "code": "s = \"SUN\"\nif \"M\" in s:\n    print(\"6\")\nelif \"D\" in s:\n    print(\"4\")\nelif \"E\" in s:\n    print(\"5\")\nelif \"H\" in s:\n    print(\"3\")\nelif \"F\" in s:\n    print(\"2\")\nelif \"A\" in s:\n    print(\"1\")\nelse:\n    print(\"7\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5958": {"id": 5958, "code": "N = 100\nans = (N-1)//2 + 1\nprint(int(ans))", "coverage": [">", ">", ">"]}, "6953": {"id": 6953, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nprint(\"Yes\" if H<=sum(A) else \"No\")", "coverage": [">", ">", ">"]}, "18350": {"id": 18350, "code": "H = 3\nW = 7\nN = 10\ncnt=wcnt=hcnt=0\nwhile N>0:\n    a = max(H-hcnt, W-wcnt)\n    N -= a\n    cnt+=1\n    if a==W:\n        H-=1\n        hcnt+=1\n    elif a==H:\n        W-=1\n        wcnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "11762": {"id": 11762, "code": "a = 11;b = 16\nc = 11;d = 17\nif (a != c):\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7688": {"id": 7688, "code": "H = 211;N = 5\nList = [31, 41, 59, 26, 53]\nList.sort(reverse=True)\nk = 0\nres = \"No\"\nfor i in range(N):\n  k += List[i]\n  if k >= H:\n    res = \"Yes\"\n    break\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1535": {"id": 1535, "code": "n = \"111\"\nif n.count(n[0]) == 3:\n    print(n)\nelse:\n    num = int(str(n[0])+str(n[0])+str(n[0]))\n    if int(n) > num:\n        a = min(int(n[0])+1, 9)\n        print(\"%d%d%d\" % (a, a, a))\n    else:\n        print(num)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "978": {"id": 978, "code": "import sys\ninput = sys.stdin.readline\nN = 112\nprint(((N-1)//111 +1) * 111)", "coverage": [">", ">", ">", ">"]}, "4302": {"id": 4302, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif h1 > h2:\n    h1 += 24\nact_time = (h2 * 60 + m2) - (h1 * 60 + m1)\nans = act_time - k\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">"]}, "15728": {"id": 15728, "code": "X = 64146;Y = 123;Z = 456\nnum = (X - Z) // ( Y + Z)\nprint(num)", "coverage": [">", ">", ">"]}, "9124": {"id": 9124, "code": "a = \"2017/01/07\"\nprint(a[:3]+\"8\"+a[4:])", "coverage": [">", ">"]}, "9233": {"id": 9233, "code": "s = ['2017', '01', '31']\ns[0] = '2018'\nprint('/'.join(s))", "coverage": [">", ">", ">"]}, "7881": {"id": 7881, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nb=min(A)\np=0\nfor i in range(N):\n  if A[i]!=b:\n    p+=1\nif p%(K-1)==0:\n  print(p//(K-1))\nelse:\n  print(p//(K-1)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16472": {"id": 16472, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\ndif = 1000000000\nbest = a[0] // 2\nans = 0\nfor i in range(1, n):\n    new_dif = abs(best - a[i])\n    if dif <= new_dif:\n        ans = a[i - 1]\n        break\n    dif = new_dif\nelse:\n    print(a[0], a[1])\n    exit()\nprint(a[0], ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "11597": {"id": 11597, "code": "S = \"SUN\"\nif S == 'SUN': print(7)\nelif S == 'MON': print(6)\nelif S == 'TUE': print(5)\nelif S == 'WED': print(4)\nelif S == 'THU': print(3)\nelif S == 'FRI': print(2)\nelse: print(1) ", "coverage": [">", ">", "!", "!", "!", "!", "!", "!"]}, "4580": {"id": 4580, "code": "s = \"smiles\"\ns_len = len(s)\nprint(s[0]+str(s_len-2)+s[s_len-1])", "coverage": [">", ">", ">"]}, "10607": {"id": 10607, "code": "a = 8;b = 12;k = 2\nfor i in range(100, 0, -1):\n    if a % i == b % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18584": {"id": 18584, "code": "H = 3\nW = 7\nN = 10\ncnt=0\nblack=0\nif H>=W:\n  for i in range(W):\n    black+=H\n    cnt+=1\n    if black>=N:\n      break\nelif H<W:\n  for i in range(H):\n    black+=W\n    cnt+=1\n    if black>=N:\n      break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8673": {"id": 8673, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nres = 0\ntmp1 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    tmp2 = 0\n    for j in range(i, n):\n        tmp2 += a2[j]\n    res = max(res, tmp1+tmp2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3807": {"id": 3807, "code": "X = 13;Y = 3;Z = 1\nW = X - Z*2\nif W < Y:\n    print(0)\nelse:\n    W -= Y\n    ans = 1\n    ans += W // (Y+Z)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "92": {"id": 92, "code": "s = \"a\"\nK = 25\nans = []\nfor i in s:\n    if i == \"a\":\n        ans.append(\"a\")\n        continue\n    if ord(i) + K >= ord(\"z\") + 1:\n        ans.append(\"a\")\n        K -= ord(\"z\") + 1 - ord(i)\n    else:\n        ans.append(i)\nlast = (K + ord(ans[-1]) - ord('a')) % 26\nans[-1] = chr(ord(\"a\") + last)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "10159": {"id": 10159, "code": "n = 8\ns = \"))))((((\"\nd = [0]\ncnt = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        cnt += 1\n    else:\n        cnt -= 1\n    d.append(cnt)\nx = min(d)\nprint(\"(\"*(-x)+s+\")\"*(d[-1]-x))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4640": {"id": 4640, "code": "s = \"smiles\"\nle = len (s)-2\nle = str (le)\nprint (s[0]+le+s[-1])", "coverage": [">", ">", ">", ">"]}, "15545": {"id": 15545, "code": "x = 100000;y = 1;z = 1\nx -= 2 * z\nprint(x // (y + z) + x % (y + z) // y)", "coverage": [">", ">", ">"]}, "4858": {"id": 4858, "code": "a = \"internationalization\"\nprint(f\"{a[0]}{len(a[1:-1])}{a[-1]}\")", "coverage": [">", ">"]}, "6760": {"id": 6760, "code": "HP = 211;N = 5\nATK = [31, 41, 59, 26, 53]\nprint('Yes' if sum(ATK) >= HP else 'No')", "coverage": [">", ">", ">"]}, "11409": {"id": 11409, "code": "lis = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nS = \"SUN\"\nx = lis.index(S)\nprint(7-x)", "coverage": [">", ">", ">", ">"]}, "8924": {"id": 8924, "code": "n = 1\nau = [2]\nad = [3]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5868": {"id": 5868, "code": "N = 100\nresult=N/2\nif N%2 != 0:\n    result+=0.5\nprint(int(result))", "coverage": [">", ">", ">", "!", ">"]}, "4792": {"id": 4792, "code": "s = \"internationalization\"\nans = []\nans.append(s[0])\nans.append(len(s)-2)\nans.append(s[-1])\nprint(''.join(map(str,ans)))", "coverage": [">", ">", ">", ">", ">", ">"]}, "17812": {"id": 17812, "code": "S = 112\nif 0 < S//100 < 13:\n    if 0 < S%100 < 13:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 0 < S%100 < 13:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2265": {"id": 2265, "code": "n = 100;a = 100;b = 100\nif a+b < n:\n    max = min(a, b)\n    min = 0\nelse:\n    max = min(a, b)\n    min = (a+b)-n\nprint(max, min)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "13997": {"id": 13997, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nstate = 0\nfor i in range(N-1):\n    if A[i+1]-A[i]>0:\n        if state==2:\n            ans += 1\n            state = 0\n        elif state==0:\n            state = 1\n    elif A[i+1]-A[i]<0:\n        if state==1:\n            ans += 1\n            state = 0\n        else:\n            state = 2\nans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "3903": {"id": 3903, "code": "x = 100000;y = 1;z = 1\nb = x-z\nc = y+z\nprint(b//c)", "coverage": [">", ">", ">", ">"]}, "7480": {"id": 7480, "code": "H = 20;N = 3\nA = [4, 5, 6]\ntotal = 0\nfor i in range(N):\n  total += A[i]\nif total >= H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8189": {"id": 8189, "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint((N+K-3)//(K-1))", "coverage": [">", ">", ">"]}, "9637": {"id": 9637, "code": "n = 6\ns = \")))())\"\na=0\nx=\"\"\ny=\"\"\nfor i in range(n):\n    if s[i]==\"(\":\n        a+=1\n    else:\n        a-=1\nif a>0:\n    s=s+\")\"*a\nelif a<0:\n    s=\"(\"*abs(a)+s\nt=0\nwhile t==0:\n    b=0\n    for i in range(len(s)):\n        if s[i]==\"(\":\n            b+=1\n        else:\n            b-=1\n        if b<0:\n            s=\"(\"+s+\")\"\n            break\n    if b==0:\n        break\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "16423": {"id": 16423, "code": "n = 5\nl = [6, 9, 4, 2, 11]\nl.sort()\nans1 = l[-1]\nans2 = -1\ndiff = 1000000000\nfor i in range(n-1):\n    if diff >= abs(l[i] - ans1//2):\n        ans2 = l[i]\n        diff = abs(l[i] - ans1//2)\nprint(ans1, ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3821": {"id": 3821, "code": "import math\nx = 100000;y = 1;z = 1\nans = math.floor((x - z) / (y + z))\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4778": {"id": 4778, "code": "S = \"smiles\"\nI = S[0]\nB = S[len(S)-1]\nfigure = str(len(S)-2)\nprint(I + figure + B)", "coverage": [">", ">", ">", ">", ">"]}, "18173": {"id": 18173, "code": "s = \"1905\"\ns1=int(s[:2])\ns2=int(s[2:])\nif 1<= s1 <=12 and 1<= s2 <= 12:\n    print(\"AMBIGUOUS\")\nelif 0<= s1 <=99 and 1<= s2 <= 12:\n    print(\"YYMM\")\nelif 1<= s1 <=12 and 0<= s2 <= 99:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "17431": {"id": 17431, "code": "S = \"0112\"\nY=int(S[:2])\nM=int(S[2:])\nif Y==0 or Y>12:\n    if M==0 or M>12:\n        print(\"NA\")\n    else:\n        print(\"YYMM\")\nelse:\n    if M==0 or M>12:\n        print(\"MMYY\")\n    else:\n        print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "13155": {"id": 13155, "code": "S = {7,5,3}\nif int(\"5\") in S:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "1511": {"id": 1511, "code": "N = \"111\"\nL=len(N)\nif int(N[0]*L)>=int(N):\n    print(int(N[0]*L))\nelse:\n    print(int((N[0])*L)+111)", "coverage": [">", ">", ">", ">", "!", "!"]}, "14205": {"id": 14205, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc=1\nd=0\nfor i in range(n-1):\n  e=d+A[i+1]-A[i]\n  if (d<e and d<0) or (d>e and d>0):\n    c+=1\n    e=0\n  d=e\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11718": {"id": 11718, "code": "n = \"SAT\"\ndaylist = {'SUN':7,'MON':6,'TUE':5,'WED':4,'THU':3,'FRI':2,'SAT':1}\nprint(daylist[n])", "coverage": [">", ">", ">"]}, "1028": {"id": 1028, "code": "n = 111\ndiv_n = -(-n // 111)\nprint(111 * div_n)", "coverage": [">", ">", ">"]}, "6673": {"id": 6673, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if h-sum(a) <= 0 else 'No')", "coverage": [">", ">", ">"]}, "16330": {"id": 16330, "code": "N = 5\nA = [2, 4, 6, 9, 11]\nB = A[-1]\nprint(B,min(A,key=lambda x: abs(B-2*x)))", "coverage": [">", ">", ">", ">"]}, "8918": {"id": 8918, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nresult = -1\nfor i in range(n):\n  a_sum = sum(a[0:i+1])\n  result = max(result, a_sum + sum(b[i:]))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13125": {"id": 13125, "code": "x = 6\nif x in [7,5,3]:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "140": {"id": 140, "code": "s = \"a\"\nK = 25\nN = len(s)\nS = [0 for _ in range(N)]\nfor i in range(N):\n    S[i] = ord(s[i])-97\ntmp = K\nans = ''\nfor i in range(N):\n    if S[i]==0:\n        ans += 'a'\n    elif 26-S[i] <= tmp:\n        ans += 'a'\n        tmp -= 26-S[i]\n    else:\n        ans += s[i]\nif tmp:\n    ans = ans[:-1]+chr((ord(ans[-1])-97+tmp)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "14457": {"id": 14457, "code": "N = 7\npre = None\nis_inc = None\nans = 1\nfor num in list(map(int, \"1 2 3 2 1 999999999 1000000000\".split())):\n    if pre is None:\n        pre = num\n        continue\n    if is_inc is None and num > pre:\n        is_inc = True\n    elif is_inc is None and num < pre:\n        is_inc = False\n    elif (is_inc and num < pre) or (not is_inc and num > pre):\n        ans += 1\n        is_inc = None\n    pre = num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8923": {"id": 8923, "code": "n = 7\nau = [3, 3, 4, 5, 4, 5, 3]\nad = [5, 3, 4, 4, 2, 3, 2]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "164": {"id": 164, "code": "s = \"xyz\"\nk = 4\nn=len(s)\ns=[s[i] for i in range(n)]\nl={\"a\":26,\"b\":25,\"c\":24,\"d\":23,\"e\":22,\"f\":21,\"g\":20,\"h\":19,\"i\":18,\"j\":17,\"k\":16,\"l\":15,\"m\":14,\"n\":13,\"o\":12,\"p\":11,\"q\":10,\"r\":9,\"s\":8,\"t\":7,\"u\":6,\"v\":5,\"w\":4,\"x\":3,\"y\":2,\"z\":1}\nfor i in range(n):\n    c=s[i]\n    if c==\"a\":\n        continue\n    if l[c]>k:\n        continue\n    k-=l[c]\n    s[i]=\"a\"\nif k>0:\n    k=k%26\n    c=s[-1]\n    for i in l:\n        if l[i]==l[c]-k:\n            s[-1]=i\ns=''.join(s)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "5914": {"id": 5914, "code": "import sys\nn = 5\nif n % 2 == 0:\n    print(n // 2)\nelse:\n    print(n // 2 + 1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "343": {"id": 343, "code": "makeA = lambda c: (ord('z')-ord(c)+1) % 26\ns = [3, 2, 1]\nK = 4\nlen_s = len(s)\nfor i in range(len_s-1):\n    if s[i] <= K:\n        K -= s[i]\n        s[i] = 0\nif K > 0:\n    s[-1] = (s[-1] + 26 - (K % 26)) % 26\nmakeS = lambda n: chr((26-n)%26+ord('a'))\nprint(''.join(list(map(makeS,s))))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12388": {"id": 12388, "code": "S = \"akasaka\"\nN = len(S)\nS1 = S[:(N-1)//2]\nS2 = S[(N+1)//2:]\nif S==S[::-1] and S1==S1[::-1] and S2==S2[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3752": {"id": 3752, "code": "x = 64146;y = 123;z = 456\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "10065": {"id": 10065, "code": "n = 3\ns = \"())\"\nl=0\nr=0\nfor i in s:\n    if i ==')' and l==0:\n        r+=1\n    elif i==')':\n        l-=1\n    elif i=='(':\n        l+=1\ns1 = '('*r\ns2 = ')'*l\ns=s1+s+s2\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2957": {"id": 2957, "code": "s = \"1111111111\"\nm=float('inf')\nfor i in range(len(s)-2):\n    v=int(s[i:i+3])\n    m=min(m,abs(753-v))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18670": {"id": 18670, "code": "H = 2\nW = 100\nN = 200\nprint(min(-(-N//H), -(-N//W)))", "coverage": [">", ">", ">", ">"]}, "19142": {"id": 19142, "code": "n = 5\nif n % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    for i in range(0,25):\n        ans += n//(10*5**i)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "16662": {"id": 16662, "code": "deck = [\"H\",\"D\"]\na = \"H\";b = \"H\"\nif deck.index(a) == 0:\n  print(b)\nelif deck.index(b) == 0:\n  print(deck[1])\nelse:\n  print(deck[0])", "coverage": [">", ">", ">", ">", "!", "!", "!", "!"]}, "4808": {"id": 4808, "code": "s = \"smiles\"\nmojisuu=len(s)\ntyuukanmojisuu=len(s)-2\ns_list=list(s)\nprint(\"{}{}{}\".format(s_list[0],tyuukanmojisuu,s_list[mojisuu-1]))", "coverage": [">", ">", ">", ">", ">"]}, "9546": {"id": 9546, "code": "S = \"2017/01/07\"\ns=\"\"\nfor i in range(10):\n    if i==3:\n        s+=\"8\"\n    else:\n        s+=S[i]\nprint(s)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "2413": {"id": 2413, "code": "n = 0;m = 3\nimport math \nif n>=2 and m>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2) + math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif n<2 and m>=2 :\n  ans =  math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif m<2 and n>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2)\nelse:\n  ans = 0\nprint(int(ans))", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "10122": {"id": 10122, "code": "n = 6\ns = \")))())\"\nresult=\"\"\ncnt=0\nfor ss in s:\n    if ss ==\")\":\n        if cnt>0:\n            result+=ss\n            cnt-=1\n        else:\n            result=\"(\"+result+ss\n    else:\n        result+=ss\n        cnt+=1\nL=result.count(\"(\")\nR=result.count(\")\")\nresult+=\")\"*(L-R)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "12083": {"id": 12083, "code": "m0 = 11;d0 = 16\nm1 = 11;d1 = 17\nprint('0') if m0 == m1 else print('1')", "coverage": [">", ">", ">"]}, "418": {"id": 418, "code": "s = \"codefestival\"\nk = 100\na = ord(\"a\") + 26\nmod = 26\nans = \"\"\nfor i in s[:-1]:\n  tmp = (a - ord(i)) % mod\n  if tmp <= k:\n    k -= tmp\n    ans += \"a\"\n  else:\n    ans += i\nans += chr(ord(\"a\") + (ord(s[-1]) - a + k) % mod)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14811": {"id": 14811, "code": "from math import factorial\nn = 2;p = 0\na = [1, 3]\neven=[]\nodd=[]\nfor i in a:\n    if i%2==0:\n        even.append(i)\n    else:\n        odd.append(i)\nev=len(even)\nod=len(odd)\nodd_sum=0\nfor i in range(od+1):\n    if i%2==p and i<=od:\n        odd_sum+=(factorial(od)//(factorial(od-i)*factorial(i)))\nprint(odd_sum*(2**ev))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8058": {"id": 8058, "code": "n,k = map(int,\"3 3\".split())\nprint(-((1-n)//(k-1)))", "coverage": [">", ">"]}, "18283": {"id": 18283, "code": "h = 2\nw = 100\nn = 200\nprint((n+max(w,h) - 1) // max(w,h))", "coverage": [">", ">", ">", ">"]}, "5048": {"id": 5048, "code": "s = \"smiles\"\nprint(s[:1]+str(len(s)-2)+s[len(s)-1])", "coverage": [">", ">"]}, "17186": {"id": 17186, "code": "print({\n 'H H': 'H',\n   'H D': 'D',\n   'D H': 'D',\n   'D D': 'H',\n}[\"D H\"])", "coverage": [">", ">", ">", ">", ">", ">"]}, "6931": {"id": 6931, "code": "import math\na = 10;b = 3\nA = [4, 5, 6]\nif a<=sum(A):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4613": {"id": 4613, "code": "a = ['s', 'm', 'i', 'l', 'e', 's']\nn = len(a)-2\nprint(a[0],n,a[-1],sep=(\"\"))", "coverage": [">", ">", ">"]}, "3228": {"id": 3228, "code": "a = 12;b = 4\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3764": {"id": 3764, "code": "X = 64146;Y = 123;Z = 456\nN=(X-Z)//(Y+Z)\nprint(N)", "coverage": [">", ">", ">"]}, "2119": {"id": 2119, "code": "n = 10;a = 3;b = 5\nma = min(a,b)\nmi = max(ma - (n - max(a,b)), 0)\nprint(ma,mi)", "coverage": [">", ">", ">", ">"]}, "16137": {"id": 16137, "code": "N = 5\nl = [6, 9, 4, 2, 11]\nA=max(l)\nmid=(A//2)+1 if A%2!=0 else A//2\ndis_min=float(\"Inf\")\nl.sort()\nans=1\nfor i in l:\n   if dis_min>abs(i-mid):\n      dis_min=abs(i-mid)\n      ans=i\nprint(A,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3393": {"id": 3393, "code": "A = 20;B = 30\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "12961": {"id": 12961, "code": "n = 6\nif n==7 or n==5 or n==3:\n  print('YES')\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "4050": {"id": 4050, "code": "import math\nS = [10, 0, 15, 0, 30]\na = (S[2]-S[0])*60+(S[3]-S[1])\nb = a - S[4]\nif(b>0):\n  print(b)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "4886": {"id": 4886, "code": "s = \"smiles\"\nres = s[0] + str(len(s) - 2) + s[-1]\nprint(res)", "coverage": [">", ">", ">"]}, "13288": {"id": 13288, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "14732": {"id": 14732, "code": "N = 3;P = 0\nA = [1, 1, 1]\ndic = {\"even\":0, \"odd\":0}\nfor i in range(N):\n    if A[i] % 2 == 0:\n        dic[\"even\"] += 1\n    else:\n        dic[\"odd\"]  += 1\nif dic[\"odd\"] == 0:\n    if P == 1:\n        print(0)\n    else:\n        print(2 ** dic[\"even\"])\nelse:\n    print(2 ** (N-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">"]}, "7772": {"id": 7772, "code": "k = 4;n = 3\na = \"2 3 1 4\"\ni=0\nwhile True:\n    if k<=n+(n-1)*i:print(i+1);break\n    i+=1", "coverage": [">", ">", ">", ">", ">", ">"]}, "9202": {"id": 9202, "code": "s = \"2017/01/07\"\nx = \"2018\" + s[4:]\nprint(x)", "coverage": [">", ">", ">"]}, "248": {"id": 248, "code": "s = \"a\"\nk = 25\nn = len(s)\nl = [0]*n\nfor i in range(n):\n    l[i] = ord('z') -ord(s[i]) + 1\n    l[i] %= 26\nans = list(s)\ni = 0\nwhile k > 0:\n    if i > n-1:\n        break\n    if l[i] <= k:\n        ans[i] = 'a'\n        k -= l[i]\n    i += 1\nk %= 26\nif k > 0:\n    ans[-1] = chr((k + ord(ans[-1])-ord('a'))%26+97)\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2980": {"id": 2980, "code": "S = \"35753\"\nprint(min(abs(int(S[i:i+3])-753) for i in range(len(S)-2)))", "coverage": [">", ">"]}, "15652": {"id": 15652, "code": "x = 13;y = 3;z = 1\na=x//(y+z)\nprint(a-1 if a*(y+z)+z>x else a)", "coverage": [">", ">", ">"]}, "17949": {"id": 17949, "code": "S = \"1905\"\nhead = S[:2]\ntail = S[2:]\nMMYY = False\nYYMM = False\nif 1 <= int(head) <= 12:\n    MMYY = True\nif 1 <= int(tail) <= 12:\n    YYMM = True\nif MMYY and YYMM:\n    print(\"AMBIGUOUS\")\nelif MMYY:\n    print(\"MMYY\")\nelif YYMM:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "3489": {"id": 3489, "code": "a = 20;b = 30\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "9791": {"id": 9791, "code": "from collections import deque\nn = 6\ns = \")))())\"\nA = deque([])\nl = 0\nr = 0\nfor i in range(n):\n  if s[i]=='(':\n    A.append(s[i])\n    l += 1\n  else:\n    if l!=0:\n      A.append(s[i])\n      l -=1\n    else:\n      A.appendleft(\"(\")\n      A.append(s[i])\nfor j in range(l):\n  A.append(\")\")\nprint(\"\".join(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "7956": {"id": 7956, "code": "n = 3;k = 3\na = [1, 2, 3]\nn-=k\nk-=1\ncount=1\nif n<=0:\n  pass\nelse:\n  while n>0:\n    n-=k\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "3248": {"id": 3248, "code": "a = 20;b = 30\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "17695": {"id": 17695, "code": "s = \"0112\"\ns1=s[0]+s[1]\ns2=s[2]+s[3]\nn1=int(s1)\nn2=int(s2)\nif 1<=n1<=12:\n    if 1<=n2<=12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1<=n2<=12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "7497": {"id": 7497, "code": "H = 10;N = 3\nA_list = []\nfor i in range(1, N+1):\n    A_list.append(\"A_\" + str(i))\nA_list = map(int, \"4 5 6\".split())\nA_total = sum(A_list)\nif A_total >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5547": {"id": 5547, "code": "n = 100\nprint(n-n//2)", "coverage": [">", ">"]}, "1826": {"id": 1826, "code": "n = 10;a = 3;b = 5\ntotal=a+b\nif n==a==b:\n    print(n,n)\n    exit()\nif n<total:\n    print(min(a,b),total-n)\nelse:\n    print(min(a,b),0)", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "1181": {"id": 1181, "code": "N = 750\na = N//100\nif N >(a*111):\n    b = a+1\n    print(b*111)\nelse:\n    print(a*111)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "11790": {"id": 11790, "code": "d1 = \"11\"\nd2 = \"11\"\nif d1 != d2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "10084": {"id": 10084, "code": "N = 8\nS = \"))))((((\"\nT = list(1 if c == \"(\" else -1 for c in S)\nl, l_min = 0, 0\nr, r_min = 0, 0\nfor i in range(N):\n    l += T[i]\n    l_min = min(l_min, l)\n    r -= T[N - i - 1]\n    r_min = min(r_min, r)\nprint(\"\".join([\"(\" * -l_min, S, \")\" * -r_min]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10088": {"id": 10088, "code": "import sys\nreadline = sys.stdin.readline\nN = 3\nS = \"())\"\nopen = 0\na = 0\nfor i in range(len(S)):\n  if S[i] == \"(\":\n    open += 1\n  else:\n    if open == 0:\n      a += 1\n    else:\n      open -= 1\nprint(a * \"(\" + S + \")\" * open)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "18348": {"id": 18348, "code": "H = 14\nW = 12\nN = 112\nN += max(H-1,W-1)\nans = N//max(H,W)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17868": {"id": 17868, "code": "a = \"1905\"\nif int(a[:2]) < 13 and int(a[:2]) > 0:\n    if int(a[2:4]) < 13 and int(a[2:4]) > 0: print('AMBIGUOUS')\n    else: print('MMYY')\nelif int(a[2:]) < 13 and int(a[2:]) > 0: print('YYMM')\nelse: print('NA')", "coverage": [">", ">", "!", "!", ">", "!"]}, "11441": {"id": 11441, "code": "S = \"SUN\"\nif 'SUN'in S:\n    print(7)\nelif 'MON' in S:\n    print(6)\nelif 'TUE' in S:\n    print(5)\nelif 'WED' in S:\n    print(4)\nelif 'THU' in S:\n    print(3)\nelif 'FRI' in S:\n    print(2)\nelif 'SAT' in S:\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5699": {"id": 5699, "code": "import math\nx = 2\nprint(math.ceil(x/2))", "coverage": [">", ">", ">"]}, "14568": {"id": 14568, "code": "N = 2;P = 0\nA = [1, 3]\nresZero = resOne = 0\nfor a in A:\n    if a % 2 == 0:\n        resZero += 1\n    else:\n        resOne += 1\nif resOne == 0:\n    if P == 1:\n        print(0)\n    else:\n        print(2 ** N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">"]}, "13265": {"id": 13265, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(\",\",\" \"))", "coverage": [">", ">"]}, "10752": {"id": 10752, "code": "S = \"level\"\nS1 = S[0:((len(S) - 1) // 2)]\nS2 = S[((len(S) + 3) // 2 - 1):]\nif S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1]:\n\tprint('Yes')\nelse:\n\tprint('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9907": {"id": 9907, "code": "N = 8\nX=0\nS = \"))))((((\"\nT,U='',''\nfor i in range(N):\n  if S[i]=='(':\n    X+=1\n  else:\n    if X==0:\n      T+='('\n    else:\n      X-=1\nU=')'*X\nprint(T+S+U)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "16521": {"id": 16521, "code": "import math \nn = 5\na = [6, 9, 4, 2, 11]\nm = max(a)\nk = 0\nfor x in a:\n    if abs((k * 2 - m)) > abs((x * 2 - m)):\n        k = x\nprint(m, k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3741": {"id": 3741, "code": "x = 13;y = 3;z = 1\nresult = 0\nwhile y*result + z*(result+1) <= x:\n  result += 1\nprint(result-1)", "coverage": [">", ">", ">", ">", ">"]}, "11435": {"id": 11435, "code": "S = \"SUN\"\nif S == \"SUN\":\n    print(7)\nelif S == \"MON\":\n    print(6)\nelif S == \"TUE\":\n    print(5)\nelif S == \"WED\":\n    print(4)\nelif S == \"THU\":\n    print(3)\nelif S == \"FRI\":\n    print(2)\nelif S == \"SAT\":\n    print(1)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "10249": {"id": 10249, "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nans = ''\ncnt = 0\nfor c in s:\n    ans += c\n    if c == ')':\n        cnt -= 1\n    else:\n        cnt += 1\n    if cnt < 0:\n        ans = '(' + ans\n        cnt = 0\ncnt = 0\nfor c in s[::-1]:\n    if c == ')':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt < 0:\n        ans += ')'\n        cnt = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6297": {"id": 6297, "code": "from bisect import *\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\ncount = 0\nfor i in range(N):\n  a = bisect_left(A, B[i])\n  c = bisect(C, B[i])\n  c = N - c\n  count += (a*c)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4083": {"id": 4083, "code": "H = 10;M = 0;h = 12;m = 0;k = 120\nprint(60*(h-H) + (m-M) - k)", "coverage": [">", ">"]}, "11593": {"id": 11593, "code": "s = \"SUN\"\nif s=='SUN':\n    print('7')\nelif s=='MON':\n    print('6')\nelif s=='TUE':\n    print('5')\nelif s=='WED':\n    print('4')\nelif s=='THU':\n    print('3')\nelif s=='FRI':\n    print('2')\nelse:\n    print('1')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8926": {"id": 8926, "code": "N = 4\nA=[0,0]\nA = [[1, 1, 1, 1], 0]\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13555": {"id": 13555, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S[0:5]+' '+S[6:13]+' '+S[14:19])", "coverage": [">", ">"]}, "19126": {"id": 19126, "code": "n = 12\nif n%2==1:\n    print(0)\nelse:\n    ans=0\n    k=10\n    while k<=n:\n        t=n//k\n        ans+=t\n        k*=5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "1331": {"id": 1331, "code": "n = 112\na = n // 100\nb = a * 100 + a * 10 + a\nif(n > b):\n  ans = (a + 1) * 100 + (a + 1) * 10 + (a + 1)\nelse:\n  ans = a * 100 + a * 10 + a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15421": {"id": 15421, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nX = 100000;Y = 1;Z = 1\nprint((X-Z) // (Y + Z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "754": {"id": 754, "code": "k = 2\nt = 7\nt %= k\nfor i in range(k+1):\n    if t == 0:\n        print(i+1)\n        break\n    t = (t*10 + 7)%k\nelse:print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11963": {"id": 11963, "code": "M_1 = 11;D_1 = 30\nM_2 = 12;D_2 = 1\nif (M_1 != M_2):\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "7885": {"id": 7885, "code": "from math import ceil\nN = 4;K = 3\nA = [2, 3, 1, 4]\nif N == K:\n    print(1)\n    exit()\nprint(ceil((N - K) / (K - 1)) + 1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4241": {"id": 4241, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nA = (H1 * 60) + M1\nB = (H2 * 60) + M2\nC = B - A\nprint(C-K)", "coverage": [">", ">", ">", ">", ">"]}, "18508": {"id": 18508, "code": "h = 2\nw = 100\nn = 200\nfor i in range(min(h,w)):\n    n = n - max(h,w)\n    if n <= 0:\n        print(i + 1)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4674": {"id": 4674, "code": "N = ['x', 'y', 'z']\nprint(N[0] + str(len(N)-2) + N[-1])", "coverage": [">", ">"]}, "4442": {"id": 4442, "code": "a = \"smiles\"\nprint(a[0]+str(int(len(a)-2))+a[-1])", "coverage": [">", ">"]}, "4601": {"id": 4601, "code": "s = \"smiles\"\nx = len(s) - 2\nword = s[0] + str(x) + s[-1]\nprint(word)", "coverage": [">", ">", ">", ">"]}, "6327": {"id": 6327, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nb = []\nfor i in range(N):\n    b.append(N - bisect.bisect_left(C,B[i]+1))\nb.append(0)\nfor i in range(N-1,-1,-1):\n    b[i] += b[i+1]\nans = 0\nfor i in range(N):\n    ans += b[bisect.bisect_left(B, A[i]+1)]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1423": {"id": 1423, "code": "N = ['7', '5', '0']\nn = int(\"\".join(N))\nck = int(N[0] * 3)\nif n - ck <= 0:\n    print(int(N[0] * 3))\nelse:\n    print(int(str(int(N[0])+1)*3))\npass", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "17328": {"id": 17328, "code": "a = \"H\";b = \"H\"\nprint('DH'[a==b])", "coverage": [">", ">"]}, "9041": {"id": 9041, "code": "a = 15;b = 18;c = 26;d = 35;e = 36;k = 18\nif e-a<=k:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", "!", "!", ">"]}, "15439": {"id": 15439, "code": "x = 64146;y = 123;z = 456\nprint (-(-((x-z)//(y+z))))", "coverage": [">", ">"]}, "6362": {"id": 6362, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ns = 0\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nia = -1\nic = -1\nfor b in B:\n  while True:\n    if ia == N-1 or A[ia+1]>=b: \n      break\n    ia += 1\n  while True:\n    if ic == N-1 or C[ic+1]>b:\n      break\n    ic += 1\n  s += (ia+1)*(N-ic-1)\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2525": {"id": 2525, "code": "s = {0, 9, 4, 8}\nprint(\"YES\" if s=={1,7,9,4} else \"NO\")", "coverage": [">", ">"]}, "16229": {"id": 16229, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nif N == 2:\n  print(*(max(A),min(A)))\n  exit()\nm = max(A)/2\nnearest=-1\nfor i in range(N):\n  if abs(A[i]-m)<abs(nearest-m):\n    nearest = A[i]\nprint(*(max(A),nearest))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10830": {"id": 10830, "code": "s = \"akasaka\"\nif s==s[::-1]:\n  if s[:(len(s)-1)//2] == s[:(len(s)-1)//2:-1]:\n    ss=s[(len(s)+3)//2-1:len(s)]\n    if ss ==  ss[::-1]:\n      print('Yes')\n    else:\n      print('No')\n  else:\n    print('No')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "15714": {"id": 15714, "code": "a = 12;b = 3;c = 1\nprint((a-b-2*c)//(b+c)+1)", "coverage": [">", ">"]}, "740": {"id": 740, "code": "K = 101\nif K%2==0 or K%5==0:\n    print(-1)\nelse:\n    ans = 1\n    rest = 7%K\n    while rest != 0:\n        rest *= 10\n        rest += 7\n        rest %= K\n        ans += 1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14785": {"id": 14785, "code": "n = 3;p = 0\na = [1, 1, 1]\no = 0\nfor i in a:\n    if  i % 2:\n        o += 1 \ne = n-o\nif o != 0:\n    print((2**e)*int(2**(o-1)))\nelse:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "12720": {"id": 12720, "code": "X = \"5\"\nif X in \"357\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "6995": {"id": 6995, "code": "H = 10;N = 3\nl = [4, 5, 6]\ntotal=0\nfor k in range(N):\n  total+=l[k]\nif total>=H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15255": {"id": 15255, "code": "X = 12;Y = 3;Z = 1\nL=X-Z\nans=0\nfor i in range(1000000):\n    if L >= (Z+Y)*i:\n        ans=i\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13891": {"id": 13891, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nbol = 0\ncnt = 1\nfor i in range(N-1):\n    if bol == 0:\n        if A[i] > A[i+1]:\n            bol = -1\n        elif A[i] < A[i+1]:\n            bol = 1\n    elif bol == 1:\n        if A[i] > A[i+1]:\n            cnt += 1\n            bol = 0\n    else:\n        if A[i] < A[i+1]:\n            cnt += 1\n            bol = 0\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "16354": {"id": 16354, "code": "from bisect import bisect_right\nn = 5\na = [2, 4, 6, 9, 11]\nx=a[-1]\nc=bisect_right(a,x//2)\nif x%2==0:\n    if x//2 in a:\n        print(\"{} {}\".format(x,x//2))\n    else:\n        if a[c]-x//2>=x//2-a[c-1]:\n            print(\"{} {}\".format(x,a[c-1]))\n        else:\n            print(\"{} {}\".format(x,a[c]))\nelse:\n    if x//2 in a :\n        print(\"{} {}\".format(x,x//2))\n    elif x//2+1 in a:\n        print(\"{} {}\".format(x,x//2+1))\n    else:\n        if a[c]-(x//2+1)>=x//2-a[c-1]:\n            print(\"{} {}\".format(x,a[c-1]))\n        else:\n            print(\"{} {}\".format(x,a[c]))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!"]}, "2011": {"id": 2011, "code": "n = 100;a = 100;b = 100\nif a+b<n:\n    Max=min(a,b)\n    Min=0\nelse:\n    Max=min(a,b)\n    Min=max(a,b)-(n-min(a,b))\nprint(\"{0} {1}\".format(Max,Min))", "coverage": [">", ">", "!", "!", "!", ">", ">", ">"]}, "4507": {"id": 4507, "code": "S = \"internationalization\"\nn = str(len(S)-2)\nprint(S[0] + n + S[-1])", "coverage": [">", ">", ">"]}, "7318": {"id": 7318, "code": "hp = 20;count_skills = 3\na = map(int, \"4 5 6\".split())\nskills_list = list(a)\nfor skill in skills_list:\n    hp -= skill\n    if hp <= 0:\n        print('Yes')\n        break\nif hp >= 1:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15535": {"id": 15535, "code": "x = 64146;y = 123;z = 456\nans = int(x/(y+z))\nif x%(y+z) < z:\n    ans -= 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "2": {"id": 2, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nfor i in range(len(s)):\n    if s[i] == \"a\":\n        continue\n    d = ord(\"z\")-ord(s[i]) + 1\n    if d <= K:\n        s[i] = \"a\"\n        K -= d\nx = (ord(s[-1])-ord(\"a\")+K)%26\ns[-1] = chr(ord(\"a\")+x)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15409": {"id": 15409, "code": "a = \"64145\";b = \"123\";c = \"456\"\na=int(a)\nb=int(b)\nc=int(c)\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">"]}, "11868": {"id": 11868, "code": "a = \"11\";b = \"16\"\nc = \"11\";d = \"17\"\nprint(1 if a != c else 0)", "coverage": [">", ">", ">"]}, "8760": {"id": 8760, "code": "from itertools import accumulate\nN = 5\nA = [3, 5, 7, 11, 12]\nB = [8, 7, 5, 3, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4163": {"id": 4163, "code": "from datetime import datetime\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt1 = datetime(2000, 1, 1, h1, m1, 0)\nt2 = datetime(2000, 1, 1, h2, m2, 0)\nt = (t2 - t1).seconds // 60\nans = t - k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12121": {"id": 12121, "code": "md1 = \"11 16\"\nmd2 = \"11 17\"\nm1st,d1st=md1.split()\nm2st,d2st=md2.split()\nm1=int(m1st)\nd1=int(d1st)\nm2=int(m2st)\nd2=int(d2st)\nif d2==1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18922": {"id": 18922, "code": "n = 5\nif n % 2 == 1:\n  print(0)\nelse:\n  a = 0\n  m = n // 2\n  while True:\n    m = m // 5\n    a += m\n    if m == 0:\n      break\n  print(a)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "12499": {"id": 12499, "code": "A = 100;B = 50;K = 4\nprint([i for i in range(1, 101) if A % i + B % i < 1][-K])", "coverage": [">", ">"]}, "15936": {"id": 15936, "code": "a = 20;b = 15\nc=a-2*b\nif c<0:\n    c=0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "8545": {"id": 8545, "code": "N = 4\np=[0]\nq=[0]\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10507": {"id": 10507, "code": "import sys\nA = 8;B = 12;K = 2\ncnt = 0\nls = []\nfor k in range(1, max(A, B) + 1):\n    if (A % k == 0) & (B % k == 0):\n        cnt += 1\n        ls.append(k)\nprint(ls[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2326": {"id": 2326, "code": "n = 10;a = 3;b = 5\nmax_read=min(a,b)\nif(a+b-n>0):\n\tmin_read=a+b-n\nelse:\n    min_read=0\nprint(str(max_read)+\" \"+str(min_read))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "2318": {"id": 2318, "code": "N = 10;A = 7;B = 5\nmaxA = min(A, B)\nminA = 0\nif N - max(A, B) < maxA:\n    minA = maxA - (N- max(A, B))\nprint(maxA, minA)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18941": {"id": 18941, "code": "import math\nn = 12\ncnt = 0\nmod = 10\nif n%2 == 1:\n    print(0)\n    exit()\nwhile mod<=n:\n    cnt += n//mod\n    mod*=5\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15546": {"id": 15546, "code": "x = 64146;y = 123;z = 456\nx -= 2 * z\nprint(x // (y + z) + x % (y + z) // y)", "coverage": [">", ">", ">"]}, "11767": {"id": 11767, "code": "m1 = 11\nm2 = 12\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12405": {"id": 12405, "code": "S = \"atcoder\"\nS2=S[:(len(S)-1)//2]\nS3=S[(len(S)+3)//2-1:]\nif S==S[::-1] and S2==S2[::-1] and S3==S3[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4938": {"id": 4938, "code": "s = \"xyz\"\nans = s[0] + str(len(s[1:-1])) + s[-1]\nprint(ans)", "coverage": [">", ">", ">"]}, "7195": {"id": 7195, "code": "v = 210;n = 5\narr = [26, 31, 41, 53, 59]\nprint(\"Yes\") if sum(arr[-n:]) >= v else print(\"No\")", "coverage": [">", ">", ">"]}, "6946": {"id": 6946, "code": "hp = 211;n = 5\ndamage_list = [31, 41, 59, 26, 53]\ndamage_sum = sum(damage_list)\nif damage_sum >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12704": {"id": 12704, "code": "import math\nl = [3, 5, 7]\nx = 5\nif x in l:\n    print(\"YES\", sep=\"\")\nelse:\n    print(\"NO\", sep=\"\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "5769": {"id": 5769, "code": "n = 100\nif n % 2 != 0:\n    print(int(n/2) + 1)\nelif n % 2 == 0:\n    print(int(n/2))", "coverage": [">", ">", "!", ">", ">"]}, "3834": {"id": 3834, "code": "x = 12;y = 3;z = 1\ni = 0\nwhile y*i + z*(i+1) <= x:\n    i += 1\ni -= 1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18609": {"id": 18609, "code": "hei = 14\nwei = 12\nn = 112\nkuro =0\ncount = 0\nif hei > wei:\n  data = hei\nelse:\n  data = wei \nwhile kuro<n:\n  kuro +=data \n  count +=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14724": {"id": 14724, "code": "N = 1;P = 1\nA = [50]\nin_odd = False\nfor i in range(N):\n    if A[i]%2:\n        in_odd = True\n        break\nif not in_odd:\n    if P:\n        print(0)\n    else:\n        print(2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!"]}, "7856": {"id": 7856, "code": "n = 3;k = 3\na = [1, 2, 3]\nans=(n-1)//(k-1)\nif (n-1)%(k-1)!=0:\n  ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "15365": {"id": 15365, "code": "import math\nx = 12;y = 3;z = 1\nprint(int(math.floor((x - z) / (y + z))))", "coverage": [">", ">", ">"]}, "16674": {"id": 16674, "code": "a = \"H\";b = \"H\"\nprint('H' if a == 'H' and b == 'H' or a == 'D' and b == 'D' else 'D')", "coverage": [">", ">"]}, "4467": {"id": 4467, "code": "s = \"xyz\"\nL=len(s)\nL_a=L-2\nprint(s[0]+str(L_a)+s[-1])", "coverage": [">", ">", ">", ">"]}, "8038": {"id": 8038, "code": "n = 3;k = 3\naaa = [1, 2, 3]\ncnt = 1\nb = n - k\nwhile b > 0:\n    b -= k - 1\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16729": {"id": 16729, "code": "a = \"D\";b = \"H\"\nprint(\"H\" if (a == \"D\") ^ (b == \"H\") else \"D\")", "coverage": [">", ">"]}, "6741": {"id": 6741, "code": "a = 10;b = 3\nx = [4, 5, 6]\nprint('Yes') if a <= sum(x) else print('No')", "coverage": [">", ">", ">"]}, "18299": {"id": 18299, "code": "h = 3\nw = 7\nN = 10\ncnt, loop = 0, 0\nwhile cnt < N:\n  cnt += max(w, h)\n  loop += 1\nprint(loop)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3981": {"id": 3981, "code": "x = 12;y = 3;z = 1\nx -= z\nans = x // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4210": {"id": 4210, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh = 0\nm = m2 - m1\nif m < 0:\n    m += 60\n    h -= 1\nh = h2 - h1 + h\nprint((h * 60) + m - k)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "1493": {"id": 1493, "code": "n = \"112\"\na = int(n[0]*3)\nif int(n) <= a:\n    print(a)\nelse:\n    print(str(int(n[0])+1)*3)", "coverage": [">", ">", ">", "!", "!", ">"]}, "9755": {"id": 9755, "code": "N = 6\nS = \")))())\"\nx=0\ny=0\nfor i in S:\n    if i==\"(\":\n        x+=1\n    else:\n        if x<=0:\n            y+=1\n        else:\n            x-=1\nprint(\"(\"*y+S+\")\"*x)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "9521": {"id": 9521, "code": "S = \"2017/01/31\"\nprint(\"2018/01/\" + S[8:10])", "coverage": [">", ">"]}, "9019": {"id": 9019, "code": "antennas = [\n    int(\"15\"),\n    int(\"18\"),\n    int(\"26\"),\n    int(\"35\"),\n    int(\"36\")\n]\nk = 18\nmessage = 'Yay!'\nfor i in range(0, 5 - 1):\n    if message == ':(':\n        break\n    for j in range(i + 1, 5):\n        if (antennas[j] - antennas[i]) > k:\n            message = ':('\n            break\nprint(message)", "coverage": ["!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14586": {"id": 14586, "code": "n = 2;p = 0\na = [1, 3]\nif all(i%2==0 for i in a):\n    print(0 if p==1 else 2**n)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "6500": {"id": 6500, "code": "n = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left\nfrom bisect import bisect_right\ncount = 0\nfor bi in range(n):\n  c_right = bisect_right(c, b[bi])\n  a_left = bisect_left(a, b[bi])\n  count += (n-c_right) * a_left\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12765": {"id": 12765, "code": "import sys\nX = 6\nif not ( 1 <= X <= 9 ): sys.exit()\nprint('YES') if X == 3 or X == 5 or X == 7 else print('NO')", "coverage": [">", ">", ">", ">"]}, "7986": {"id": 7986, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\ncount=1\nn=n-k\nwhile(n>0):\n    n=n-(k-1)\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4956": {"id": 4956, "code": "s = ['x', 'y', 'z']\nprint(\"\".join([s[0],str(len(s)-2),s[-1]]))", "coverage": [">", ">"]}, "15663": {"id": 15663, "code": "x = 64145;y = 123;z = 456\nnum = x//(y+z)\nmod = x%(y+z)\nif 0<=mod<z:num-=1\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "2230": {"id": 2230, "code": "n = 10;a = 3;b = 5\nM = min(a, b)\nm = max(0, a+b-n)\nprint(M, m)", "coverage": [">", ">", ">", ">"]}, "3578": {"id": 3578, "code": "a = 20;b = 15\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "16699": {"id": 16699, "code": "a = \"D\";b = \"H\"\nif a == \"H\" and b == \"D\":\n    print(\"D\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"H\" and b == \"D\":\n    print(\"D\")\nelif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "4154": {"id": 4154, "code": "from datetime import datetime\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nt1=datetime(2020,5,30,H1,M1,0)\nt2=datetime(2020,5,30,H2,M2,0)\nd=t2-t1\nprint(d.seconds//60-K)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16100": {"id": 16100, "code": "a = ['20', '30']\nif int(a[0]) <= int(a[1]) * 2:\n  print(\"0\")\nelse:\n  print(int(int(a[0]) - int(a[1]) * 2))", "coverage": [">", ">", ">", "!", "!"]}, "2884": {"id": 2884, "code": "S = \"1234567876\"\nN =700\nfor i in range (len(S)-2):\n  n = abs (int(S[i:i+3])-753)\n  if n < N:\n    N = n\nprint (N)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15499": {"id": 15499, "code": "x = 12;y = 3;z = 1\nx-=z\nprint(x//(y+z))", "coverage": [">", ">", ">"]}, "11218": {"id": 11218, "code": "s = \"SAT\"\nif s == \"SUN\":\n    print(7)\nif s == \"MON\":\n    print(6)\nif s == \"TUE\":\n    print(5)\nif s == \"WED\":\n    print(4)\nif s == \"THU\":\n    print(3)\nif s == \"FRI\":\n    print(2)\nif s == \"SAT\":\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "1617": {"id": 1617, "code": "N = 10;A = 7;B = 5\nMax=min(A,B)\nmin=0\nif (A+B)>=N:\n    min=A+B-N\nelse:\n    min=0\nprint(Max,min)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "8775": {"id": 8775, "code": "N = 1\narray1 = [2]\narray2 = [3]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4577": {"id": 4577, "code": "arg = \"smiles\"\nprint(arg[0]+str(len(arg)-2)+arg[-1])", "coverage": [">", ">"]}, "18136": {"id": 18136, "code": "s = \"1700\"\nhead = s[:2]\ntail = s[2:]\nresult = ['MMYY', 'YYMM', 'AMBIGUOUS', 'NA']\njudge = [0, 0]\nmonths = [f'{m:02}' for m in range(1, 13)]\nif head in months:\n    judge[0] += 1\nif tail in months:\n    judge[1] += 1\nif sum(judge) == 2:\n    print(result[2])\nelif sum(judge) == 0:\n    print(result[3])\nelse:\n    print(result[judge.index(1)])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "19334": {"id": 19334, "code": "N = 3\nprint(N+N%2*N)", "coverage": [">", ">"]}, "5866": {"id": 5866, "code": "N = 5\nresult=N/2\nif N%2 != 0:\n    result+=0.5\nprint(int(result))", "coverage": [">", ">", ">", ">", ">"]}, "13665": {"id": 13665, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;k = 30\nh = ((H2-1)-H1)*60\nm = (M2+60)-M1\nprint((h+m)-k)", "coverage": [">", ">", ">", ">"]}, "7782": {"id": 7782, "code": "N = 3;K = 3\nA = [1, 2, 3]\nans = -(-(N-1) // (K-1))\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "18026": {"id": 18026, "code": "s = \"1700\"\na=int(s[0:2])\nb=int(s[2:4])\nif 0<a<=12 and 0<b<=12:\n    print('AMBIGUOUS')\nelif 0<b<=12:\n    print('YYMM')\nelif 0<a<=12 :\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6105": {"id": 6105, "code": "import math\nN = 100\nO = N // 2 + N % 2\nprint(O)", "coverage": [">", ">", ">", ">"]}, "8084": {"id": 8084, "code": "n = 4;k = 3\nA = [2, 3, 1, 4]\nAmin = A.index(1)\nleft = len(A[:Amin])\nright = len(A[Amin:])\nans = 0\nif left <= right:\n    ans += left // (k-1)\n    right += left % (k-1)\n    ans += ((right-1) + (k-2)) // (k-1)\nelse:\n    ans += (right-1) // (k-1)\n    left += right % (k-1)\n    ans += (left + (k-2)) // (k-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "9881": {"id": 9881, "code": "N = 3\nS_ = \"())\"\ns=S_\ncount = 0\nnew_left = 0\nnew_right = 0\nfor si in s:\n    if si == '(':\n        count += 1\n    else:\n        count -= 1\n        if count == -1:\n            count = 0\n            new_left += 1\nnew_right = count\nprint('(' * new_left + s + ')' * new_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "17167": {"id": 17167, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    print(b)\nelif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "8112": {"id": 8112, "code": "n = 3;k = 3\na = [1, 2, 3]\ni = 1\nwhile  n > k + (k-1)*(i-1):\n    i += 1\nprint(i)", "coverage": [">", ">", ">", ">", "!", ">"]}, "16851": {"id": 16851, "code": "a = \"H\";b = \"H\"\nprint('H' if a == b else 'D')", "coverage": [">", ">"]}, "1745": {"id": 1745, "code": "N = 10;A = 3;B = 5\nif N>=A+B:\n\tprint(str(min(A, B)) + ' 0')\nelse:\n\tprint(str(min(A, B)) + ' ' + str(A+B-N))", "coverage": [">", ">", ">", "!", "!"]}, "8122": {"id": 8122, "code": "a = 8;b = 3\nc = \"7 3 1 8 4 6 2 5\"\nprint((a+b-3)//(b-1))", "coverage": [">", ">", ">"]}, "13169": {"id": 13169, "code": "s = \"happy,newyear,enjoy\"\ns = s[:5] + \" \" + s[6:13] + \" \" + s[14:]\nprint(s)", "coverage": [">", ">", ">"]}, "18829": {"id": 18829, "code": "h = 3\nw = 7\nn = 10\nr = max(h,w)\ncount = 0\nx = 0\nwhile x < n:\n    count += 1\n    x += r\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12363": {"id": 12363, "code": "import sys\ns = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nr=list(reversed(s))\nn=len(s)\nfor i in range(n):\n    if s[i]!=r[i]:\n        print('No')\n        sys.exit()\ns1=s[:]\ndel s1[(n-1)//2:]\nr1=list(reversed(s1))\nfor i in range(len(s1)):\n    if s1[i]!=r1[i]:\n        print('No')\n        sys.exit()\ns2=s[:]\ndel s2[:(n+3)//2-1]\nr2=list(reversed(s2))\nfor i in range(len(s2)):\n    if s2[i]!=r2[i]:\n        print('No')\n        sys.exit()\nprint('Yes')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10553": {"id": 10553, "code": "A = 8;B = 12;K = 2\nA,B = min(A,B),max(A,B)\ncount = 0\nfor i in range(A,0,-1):\n  if A%i==0 and B%i==0:\n    count += 1\n  if count == K:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6963": {"id": 6963, "code": "hp = \"10\";N = \"3\"\na = ['4', '5', '6']\nprint(\"Yes\") if sum([int(x) for x in a]) >= int(hp) else print(\"No\")", "coverage": [">", ">", ">"]}, "11268": {"id": 11268, "code": "ls = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7 - ls.index(str(\"SAT\")))", "coverage": [">", ">"]}, "13867": {"id": 13867, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncur = 0\ncnt = 0\nwhile cur<N:\n    cnt += 1\n    c = 0\n    cur1 = cur+1\n    for i in range(cur+1,N):\n        if A[i]>=A[i-1]:\n            cur1 = i+1\n        else:\n            cur1 = i\n            break\n    cur2 = cur+1\n    for i in range(cur+1,N):\n        if A[i]<=A[i-1]:\n            cur2 = i+1\n        else:\n            cur2 = i\n            break\n    cur = max(cur1,cur2)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3757": {"id": 3757, "code": "x = 64146;y = 123;z = 456\nc = (x - z)//(y+z)\nprint(c)", "coverage": [">", ">", ">"]}, "14194": {"id": 14194, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\n    exit()\ni = 0\nB = []\nb = [A[0]]\nzouka = 0\nf = True\nwhile i < N-1:\n    if A[i] == A[i+1]:\n        b.append(A[i])\n        i += 1\n        continue\n    if zouka == 0:\n        if A[i] < A[i+1]:\n            zouka = 1\n        else:\n            zouka = -1\n    if A[i] < A[i+1]: \n        if zouka == 1:\n            b.append(A[i+1])\n        else:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n    else: \n        if zouka == 1:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n        else:\n            b.append(A[i+1])\n    i += 1\nB.append(b)\nprint(len(B))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15950": {"id": 15950, "code": "a = 12;b = 4\nans = a - b * 2\nif (ans >= 0):\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15425": {"id": 15425, "code": "x = 12;y = 3;z = 1\nseated = z\ncnt = 0\nwhile True:\n    seated += (y + z)\n    if(seated > x):\n        break\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8656": {"id": 8656, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9577": {"id": 9577, "code": "S = \"2017/01/31\"\nprint('2018' + S[4:])", "coverage": [">", ">"]}, "13647": {"id": 13647, "code": "text = \"haiku,atcoder,tasks\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "9230": {"id": 9230, "code": "s = \"2017/01/07\"\nr = s[:3]+'8'+s[4:]\nprint(r)", "coverage": [">", ">", ">"]}, "278": {"id": 278, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nn = len(s)\nk = 100\nfor i in range(n):\n    x = ord(s[i]) - ord('a')\n    if x == 0 or 26 -x > k: continue\n    k -= 26 - x\n    s[i] = 'a'\nif k:\n    s[-1] = chr((ord(s[-1]) - ord('a') + k) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5625": {"id": 5625, "code": "a = 100\nprint(sum(divmod(a,2)))", "coverage": [">", ">"]}, "3773": {"id": 3773, "code": "x = 13;y = 3;z = 1\none_length = y + z\nprint(int((x-z) / one_length))", "coverage": [">", ">", ">"]}, "11261": {"id": 11261, "code": "a = \"SUN\"\nday = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nvalues = [7,6,5,4,3,2,1]\nd = dict(zip(day,values))\nprint(d[a])", "coverage": [">", ">", ">", ">", ">"]}, "14971": {"id": 14971, "code": "N = 2;P = 0\nA = [1, 3]\ndp=[0]*(N+2)\ndp[0]=(P+1)%2\nfor i in range(1,N+1):\n    if A[i-1]%2==0:\n        dp[i]=2*dp[i-1]\n    else:\n        dp[i]=(2**(i-1)-dp[i-1])+dp[i-1]\nprint(dp[N])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12607": {"id": 12607, "code": "a = 8;b = 12;k = 2\nx=min(a,b)\nl=[]\nfor i in range(1,x+1):\n    if a%i==0 and b%i==0:\n        l.append(i)\ny=len(l)\nprint(l[y-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16537": {"id": 16537, "code": "a = \"D\";b = \"H\"\nprint(\"H\" if a==b==\"H\" or a==b==\"D\" else\"D\")", "coverage": [">", ">"]}, "12206": {"id": 12206, "code": "x = \"11 30\"\ny = \"12 1\"\nl = x.split()\nl2 = y.split()\nif l[0] != l2[0]:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18174": {"id": 18174, "code": "s = \"0112\"\ns1=int(s[:2])\ns2=int(s[2:])\nif 1<= s1 <=12 and 1<= s2 <= 12:\n    print(\"AMBIGUOUS\")\nelif 0<= s1 <=99 and 1<= s2 <= 12:\n    print(\"YYMM\")\nelif 1<= s1 <=12 and 0<= s2 <= 99:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "12283": {"id": 12283, "code": "import sys\nS = \"akasaka\"\nif not S.islower():sys.exit()\nif not ( 3 <= len(S) <= 99 and len(S) % 2 == 1 ): sys.exit()\nfirst = int((len(S)-1)/2)\nF = S[0:first]\nlast = int((len(S)+3)/2)\nL = S[last-1:]\ncondition = 0\nif S == S[::-1]:\n    condition += 1\nif F == F[::-1]:\n    condition += 1\nif L == L[::-1]:\n    condition += 1\nprint('Yes') if condition == 3 else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "626": {"id": 626, "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n    if i==len(s)-1:\n        s[-1]=chr((ord(s[i])-97+k)%26+97)\n        break\n    if s[i]=='a':\n        continue\n    if 123-ord(s[i])<=k:\n        k-=123-ord(s[i])\n        s[i]='a'\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "5800": {"id": 5800, "code": "N = 5\nprint(N//2 + N % 2)", "coverage": [">", ">"]}, "8043": {"id": 8043, "code": "n = 4;k = 3\nA = [2, 3, 1, 4]\nprint(-((1-n)//(k-1)))", "coverage": [">", ">", ">"]}, "14197": {"id": 14197, "code": "from collections import deque\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)>=2:\n    if not (v >= tmp[-1] >= tmp[0] or v <= tmp[-1] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nprint(cnt+1 if tmp else cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8719": {"id": 8719, "code": "from itertools import accumulate\nn = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nSA = list(accumulate(A))\nSB = list(accumulate(B))\nans = 0\nfor i in range(n):\n    if i >= 1:\n        ans = max(SA[i] + SB[n - 1] - SB[i - 1], ans)\n    else:\n        ans = max(SA[i] + SB[n - 1], ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "17583": {"id": 17583, "code": "s = \"1905\"\nbef = s[:2]\naft = s[2:]\nif 1 <= int(bef) <= 12:\n    if 1 <= int(aft) <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= int(aft) <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "5825": {"id": 5825, "code": "n = 2\na = n//2 if n%2==0 else (n//2)+1\nprint(a)", "coverage": [">", ">", ">"]}, "12105": {"id": 12105, "code": "a = ['11', '16']\nb = ['11', '17']\nif a[0] != b[0]:\n\tprint(\"1\")\nelse:\n\tprint(\"0\") ", "coverage": [">", ">", ">", "!", "!", ">"]}, "12930": {"id": 12930, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nx = 5\nprint('YES' if x in [3, 5, 7] else 'NO')", "coverage": [">", ">", ">", ">", ">", ">"]}, "3793": {"id": 3793, "code": "X = 12;Y = 3;Z = 1\nX -= Z\nprint(X//(Y+Z))", "coverage": [">", ">", ">"]}, "15065": {"id": 15065, "code": "import itertools\nn = 45;p = 1\na = [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0]\ncnt0 = a.count(0)\ncnt1 = n - cnt0\nif p==0 and cnt0==n:\n    print(2**n)\nelif p==1 and cnt0==n:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "12835": {"id": 12835, "code": "y = \"6\"\nprint(\"YES\" if y in \"753\" else \"NO\")", "coverage": [">", ">"]}, "13990": {"id": 13990, "code": "num = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nvar = var2 = 0\nc = l[0]\nfor i in l[1:]:\n    if c < i:\n        var = 1\n    elif c > i:\n        var2 = 1\n    if var == 1 and var2 == 1:\n        count += 1\n        var = var2 = 0\n    c = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2300": {"id": 2300, "code": "n = 10;a = 7;b = 5\nma = min(a, b)\nif a + b - n < 0:\n    mi = 0\nelse:\n    mi = a + b - n\nprint(ma, mi)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5099": {"id": 5099, "code": "s = \"smiles\"\nlength = len(s)-2\nprint(s[0]+str(length)+s[-1])", "coverage": [">", ">", ">"]}, "6965": {"id": 6965, "code": "hp = \"210\";N = \"5\"\na = ['31', '41', '59', '26', '53']\nprint(\"Yes\") if sum([int(x) for x in a]) >= int(hp) else print(\"No\")", "coverage": [">", ">", ">"]}, "3371": {"id": 3371, "code": "A = 20;B = 15\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "19385": {"id": 19385, "code": "N = 10\nif N == 1 or N == 2:\n    print(2)\nelse:\n    if N % 2 == 0:\n        i = N\n    else:\n        i = N*2\n    while i % N != 0:\n        i += 2\n    print(i)", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", "!", ">"]}, "8567": {"id": 8567, "code": "N = 5\nL1 = [3, 2, 2, 4, 1]\nL2 = [1, 2, 2, 2, 1]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10198": {"id": 10198, "code": "n = 8\ns = \"))))((((\"\nl=r=0\nfor c in s:\n  if c=='(': l+=1\n  else: r+=1\n  if r>l: s='('+s; l+=1\nprint(s+')'*(l-r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5062": {"id": 5062, "code": "s = \"internationalization\"\nfirst = s[0]\nend = s[len(s)-1]\nprint(first+str(len(s)-2)+end)", "coverage": [">", ">", ">", ">"]}, "19186": {"id": 19186, "code": "n = 12\nif n%2 == 0:\n    i = 1\n    ans = 0\n    while 2*pow(5,i) <= n:\n        ans += n//(2*pow(5,i))\n        i += 1\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "2117": {"id": 2117, "code": "N = 10;A = 7;B = 5\nif A > B:\n  max = B\nelse:\n  max = A\nif A + B > N:\n  min = A + B - N\nelse:\n  min = 0\nprint(max, min)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "10707": {"id": 10707, "code": "S = \"level\"\nn=len(S)\nSrev=''.join(list(reversed(S)))\nS1=S[0:(n-1)//2]\nS2=S[((n+1)//2):n]\nS1rev=''.join(list(reversed(S1)))\nS2rev=''.join(list(reversed(S2)))\nif S==Srev and S1==S1rev and S2==S2rev:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5742": {"id": 5742, "code": "n = 100\nif n % 2 == 0:\n    b = n // 2\nelse:\n    b = n // 2 + 1\nprint(b)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15581": {"id": 15581, "code": "X = 13;Y = 3;Z = 1\na=X-Z\nb=Y+Z\nprint(a//b)", "coverage": [">", ">", ">", ">"]}, "11987": {"id": 11987, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint('0' if M1 == M2 else '1')", "coverage": [">", ">", ">"]}, "5285": {"id": 5285, "code": "n = {'9', '4', '0', '8'}\nk={'1','9','7','4'}\nif n==k:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "7241": {"id": 7241, "code": "H = 210;N = 5\na = [31, 41, 59, 26, 53]\na1=sum(a)\nif(a1>=H):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "6535": {"id": 6535, "code": "import bisect\nn = 6\na_list = [3, 14, 159, 2, 6, 53]\nb_list = [58, 9, 79, 323, 84, 6]\nc_list = [2643, 383, 2, 79, 50, 288]\na_list = sorted(a_list)\nb_list = sorted(b_list)\nc_list = sorted(c_list)\nans = 0\nfor b_i in b_list:\n    a_count_i = bisect.bisect_left(a_list,b_i)\n    c_count_i = len(c_list) - bisect.bisect_right(c_list,b_i)\n    ans += a_count_i * c_count_i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8803": {"id": 8803, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = []\nfor n in range(N):\n  ame = 0\n  for i in range(n+1):\n    ame += A1[i]\n  for j in range(n, N):\n    ame += A2[j]\n  ans.append(ame)\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15582": {"id": 15582, "code": "X = 12;Y = 3;Z = 1\na=X-Z\nb=Y+Z\nprint(a//b)", "coverage": [">", ">", ">", ">"]}, "6973": {"id": 6973, "code": "import sys\ninput = sys.stdin.readline\nH = 210;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if sum(A)>=H else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "1087": {"id": 1087, "code": "a = 750\nn=[i*111 for i in range(1,10)]\nif a in n:\n    print(a)\n    exit()\nn.append(a)\nn=sorted(n)\nprint(n[n.index(a)+1])", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3299": {"id": 3299, "code": "a = 20;b = 15\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "18435": {"id": 18435, "code": "H = 14\nW = 12\nN = 112\nprint(-(-N//max(H,W)))", "coverage": [">", ">", ">", ">"]}, "8692": {"id": 8692, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5121": {"id": 5121, "code": "import sys\ns = \"xyz\"\nprint(s[0]+str(len(s[1:-1]))+s[-1])", "coverage": [">", ">", ">"]}, "17232": {"id": 17232, "code": "a = \"H\";b = \"H\"\nif(a==\"H\"):\n    if(b==\"H\"):\n        print(\"H\")\n    elif(b==\"D\"):\n        print(\"D\")\nelif(a==\"D\"):\n    if(b==\"H\"):\n        print(\"D\")\n    elif(b==\"D\"):\n        print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "13983": {"id": 13983, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nc = 1; w = 0\nfor i in range(N-1):\n    if w == 0:\n        if A[i] < A[i+1]:\n            w = 1\n        elif A[i] > A[i+1]:\n            w = -1\n    elif (w > 0 and A[i] > A[i+1]) or (w < 0 and A[i] < A[i+1]):\n         w = 0\n         c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7545": {"id": 7545, "code": "H = 10;N = 3\nA = map(int, \"4 5 6\".split())\nprint(\"Yes\" if H <= sum(A) else \"No\")", "coverage": [">", ">", ">"]}, "18177": {"id": 18177, "code": "s = \"0112\"\na, b = s[:2], s[2:]\nif '01' <= a <= '12':\n    if '01' <= b <= '12':\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if '01' <= b <= '12':\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4269": {"id": 4269, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;K = 30\ndiff = (h2-h1) * 60 + m2-m1\nprint(diff - K)", "coverage": [">", ">", ">"]}, "12338": {"id": 12338, "code": "S = \"akasaka\"\nN = len(S)\nif S == S[::-1]:\n  if S[:(N-1)//2] == S [(N+1)//2:]:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "3563": {"id": 3563, "code": "house_len = 20;curtain_len = 15\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "8396": {"id": 8396, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nres = 0\nfor i in range(n):\n  c = 0\n  for j in range(n):\n    if j < i:\n      c += a[j]\n    elif j == i:\n      c += a[j]\n      c += b[j]\n    else:\n      c += b[j]\n  res = max(res,c)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13987": {"id": 13987, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nprev = A[0]\nup = False\ndown = False\nfor a in A[1:]:\n    if prev < a:\n        if up:\n            count += 1\n            up = False\n        elif down:\n            pass\n        else: \n            down = True\n    elif prev > a:\n        if up:\n           pass\n        elif down:\n            count += 1\n            down = False\n        else: \n            up = True\n    else:\n        pass\n    prev = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "6216": {"id": 6216, "code": "import bisect\nn = 6\nAs = [3, 14, 159, 2, 6, 53]\nBs = [6, 9, 58, 79, 84, 323]\nCs = [2, 50, 79, 288, 383, 2643]\ncnt = [0]*(n+1)\nv = 0\nfor idx, b in enumerate(Bs[::-1]):\n    v += len(Cs) - bisect.bisect_right(Cs, b)\n    cnt[n-1-idx] = v\nprint(sum([cnt[bisect.bisect_right(Bs, a)] for a in As]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3075": {"id": 3075, "code": "s = \"1111111111\"\nx = 10000\nfor i in range(len(s) - 3 + 1):\n    x = min(x, abs(753 - int(s[i:i+3])))\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "15872": {"id": 15872, "code": "x = 64146;y = 123;z = 456\ntmp=x//(y+z)\nif tmp*(y+z)+z>x:\n    tmp-=1\nprint(tmp)", "coverage": [">", ">", ">", "!", ">"]}, "9324": {"id": 9324, "code": "date = \"2017/01/07\"\ndate_list = list(date)\ndate_list[3] = '8'\noutput = ''.join(date_list)\nprint(output)", "coverage": [">", ">", ">", ">", ">"]}, "7300": {"id": 7300, "code": "h = 20\na = [4, 5, 6]\nprint([\"Yes\", \"No\"][sum(a) < h])", "coverage": [">", ">", ">"]}, "15627": {"id": 15627, "code": "x = 100000;y = 1;z = 1\ncount = 0\nx -= z\nprint(x//(y+z))", "coverage": [">", ">", ">", ">"]}, "703": {"id": 703, "code": "k = 2\nflag = 0\ntemp = 7\nfor i in range(k):\n    if(temp % k == 0):\n        flag = 1\n        break\n    else:\n        temp = temp % k\n        temp = temp * 10 % k\n        temp = temp + 7\nif (flag == 0):\n    print(\"-1\")\nelse:\n    print(i+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "13545": {"id": 13545, "code": "s = \"haiku,atcoder,tasks\"\nprint(\" \".join(s.split(',')))", "coverage": [">", ">"]}, "9525": {"id": 9525, "code": "s = \"2017/01/31\"\nprint(s.replace(\"2017\",\"2018\"))", "coverage": [">", ">"]}, "10970": {"id": 10970, "code": "s = \"akasaka\"\nn = len(s)\nentire = s == s[::-1]\nleft = s[:int((n-1)/2)] == s[:int((n-1)/2)][::-1]\nright = s[int((n+3)/2-1):] == s[int((n+3)/2-1):][::-1]\nif entire and left and right:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "10764": {"id": 10764, "code": "if __name__ == '__main__':\n    s = \"atcoder\"\n    cnt = 0\n    r = s[::-1]\n    if s == r:\n        cnt += 1\n    n = len(s)\n    n2 = (n-1)//2\n    ss = s[:n2]\n    rr = ss[::-1]\n    if ss == rr:\n        cnt += 1\n    n3 = (n+3) //2\n    sss = s[n3-1:]\n    rrr = sss[::-1]\n    if sss == rrr:\n        cnt += 1\n    if cnt==3 :\n        print(\"Yes\")\n    else:\n        print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "10708": {"id": 10708, "code": "S = \"atcoder\"\nn=len(S)\nSrev=''.join(list(reversed(S)))\nS1=S[0:(n-1)//2]\nS2=S[((n+1)//2):n]\nS1rev=''.join(list(reversed(S1)))\nS2rev=''.join(list(reversed(S2)))\nif S==Srev and S1==S1rev and S2==S2rev:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12004": {"id": 12004, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(0 if M1 == M2 else 1)", "coverage": [">", ">", ">"]}, "10103": {"id": 10103, "code": "n = 3\na = \"())\"\ncr = 0\ncl = 0\nans = a\nfor i in range(n):\n  if a[i] == \"(\":\n    cl += 1\n  elif a[i] == \")\":\n    cr += 1\n  if cl == 0 and cr != 0:\n    ans = \"(\" + ans\n    cr -= 1\n  if cl != 0 and cr != 0:\n    if cr >= cl:\n      cl, cr = 0,cr-cl\n    else:\n      cl, cr = cl-cr,0\nif cl != 0:\n  for i in range(cl):\n    ans = ans+\")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "243": {"id": 243, "code": "s = \"a\"\nK = 25\nans = ''\nfor i, c in enumerate(s):\n    dif = ord('z') - ord(c) + 1\n    dif %= 26\n    if i == len(s) - 1:\n        K %= 26\n        if ord(c) + K > ord('z'):\n            K -= 26\n        ans += chr(ord(c) + K)\n    elif dif <= K:\n        ans += 'a'\n        K -= dif\n    else:\n        ans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">"]}, "13303": {"id": 13303, "code": "text = \"abcde,fghihgf,edcba\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "18429": {"id": 18429, "code": "from math import ceil\nh = 14\nw = 12\nn = 112\nprint(ceil(n/max(h,w)))", "coverage": [">", ">", ">", ">", ">"]}, "6254": {"id": 6254, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nans = 0\nj = 0\nk = 0\nfor i in range(n):\n    if j<n:\n        while a[j]<b[i]:\n            j+=1\n            if j==n:\n                break\n    if k<n:\n        while c[k]<=b[i]:\n            k+=1\n            if k==n:\n                break\n    ans += j*(n-k)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "9550": {"id": 9550, "code": "s = \"2017/01/07\"\ns = s.split('/')\ns[0] = '2018'\nprint('/'.join(s))", "coverage": [">", ">", ">", ">"]}, "8838": {"id": 8838, "code": "n = 7\nlist_1 = [3, 3, 4, 5, 4, 5, 3]\nlist_2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19303": {"id": 19303, "code": "n = 3\nprint(n*2 if n&1 else n)", "coverage": [">", ">"]}, "7843": {"id": 7843, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nn-=1\nk-=1\nif n%k==0: print(n//k)\nelse: print(n//k+1)", "coverage": [">", ">", ">", ">", ">", ">"]}, "14083": {"id": 14083, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nstate = \"\"\nfor i in range(N-1):\n    if A[i] > A[i+1] and state == \"\":\n        state = \"minus\"\n    elif A[i] > A[i+1] and state == \"plus\":\n        state = \"\"\n        count += 1\n    elif A[i] > A[i+1] and state == \"minus\":\n        continue\n    elif A[i] < A[i+1] and state == \"\":\n        state = \"plus\"\n    elif A[i] < A[i+1] and state == \"minus\":\n        state = \"\"\n        count += 1\n    elif A[i] < A[i+1] and state == \"plus\":\n        continue\n    else:\n        continue\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "2279": {"id": 2279, "code": "n = 10;a = 7;b = 5\nmx = min(a,b)\nif a+b > n:\n  mi = a+b -n\nelse:\n  mi = 0\nprint(mx,mi)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5130": {"id": 5130, "code": "s = \"xyz\"\nprint(s[0] +str(len(s[1:-1]))+ s[-1])", "coverage": [">", ">"]}, "15312": {"id": 15312, "code": "X = 64145;Y = 123;Z = 456\nX -= Y + 2 * Z\nans = X // (Y + Z) + 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8387": {"id": 8387, "code": "N = 1\nA1 = [2]\nA2 = [3]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "8974": {"id": 8974, "code": "a = int(\"1\")\ne = int(\"9\")\nk = int(\"15\")\nif e - a > k:\n    print(':(')\nelse:\n    print('Yay!')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "268": {"id": 268, "code": "s = \"a\"\nk = 25\nns = []\nfor c in s[:-1]:\n    if c == 'a':\n        ns.append(c)\n        continue\n    ofstoa = ord('z')+1-ord(c)\n    if k >= ofstoa:\n        ns.append(chr(ord(c) + ofstoa - 26))\n        k -= ofstoa\n    else:\n        ns.append(c)\nlast = ord(s[-1])\nk = k%26\nif last + k > ord('z'):\n    ns.append(chr(last + k - 26))\nelse:\n    ns.append(chr(last + k))\nprint(''.join(ns))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "5607": {"id": 5607, "code": "n = 100\nans = n // 2\nans += 1 if n % 2 != 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4396": {"id": 4396, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nd1 = h1 * 60 + m1\nd2 = h2 * 60 + m2\nprint(d2 - d1 - k)", "coverage": [">", ">", ">", ">"]}, "14308": {"id": 14308, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnb = 0\nda = 0\nfor i in range(len(A)-1):\n    if A[i] > A[i+1] and da > 0:\n        nb += 1\n        da = 0\n    elif A[i] < A[i+1] and da < 0:\n        nb += 1\n        da = 0\n    else:\n        if A[i+1] - A[i] != 0:\n            da = A[i+1] - A[i]\nprint(nb + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "1732": {"id": 1732, "code": "n = 100;a = 100;b = 100\nprint('{0} {1}'.format(min(a,b), 0 if a+b<=n else a+b-n))", "coverage": [">", ">"]}, "12680": {"id": 12680, "code": "X = 5\nres = [3, 5, 7]\nprint('YES' if X in res else 'NO')", "coverage": [">", ">", ">"]}, "15695": {"id": 15695, "code": "x = 12;y = 3;z = 1\nxx=x-z\nyy=y+z\nprint(int(xx/yy))", "coverage": [">", ">", ">", ">"]}, "11872": {"id": 11872, "code": "a = 11;b = 16\nA = 11;B = 17\nprint(\"1\" if A != a else \"0\")", "coverage": [">", ">", ">"]}, "6188": {"id": 6188, "code": "from bisect import bisect_right as br\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nBc=[]\nfor i in range(N):\n    Bc.append(N-br(C,B[i]))\nS=[sum(Bc)]\nfor j in range(N):\n    S.append(S[j]-Bc[j])\nfor a in A:\n    b=br(B,a)\n    ans+=S[b]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19412": {"id": 19412, "code": "n = 10\nans=n if n%2==0 else 2*n\nprint(ans)", "coverage": [">", ">", ">"]}, "2374": {"id": 2374, "code": "n = 2;m = 1\nod_od = n*(n-1)/2\nev_ev = m*(m-1)/2\nprint(int(od_od+ev_ev))", "coverage": [">", ">", ">", ">"]}, "1633": {"id": 1633, "code": "N = 100;A = 100;B = 100\nprint(min(A,B))\nif A+B <= N:\n    print(0)\nelse:\n    print(A+B-N)", "coverage": [">", ">", ">", "!", "!", ">"]}, "9121": {"id": 9121, "code": "s = \"2017/01/31\"\nprint('2018/{}'.format(s[5:]))", "coverage": [">", ">"]}, "19368": {"id": 19368, "code": "import math\nN = 10\nif N%2 != 0 :\n  N *= 2\nprint (N)", "coverage": [">", ">", ">", "!", ">"]}, "11145": {"id": 11145, "code": "import sys\nS = \"akasaka\"\nif S == 'level':\n    print('No')\n    sys.exit()\nfor i in range((len(S)//2)-1):\n    if S[i] != S[len(S)-1-i]:\n        print('No')\n        sys.exit()\nfor j in range((len(S)//4)-1):\n    if S[j] != S[(len(S)//2)-j-1]:\n        print('No')\n        sys.exit()\nfor k in range((len(S)//4)-1):\n    if S[(len(S)//2)+1+k] != S[len(S)-k-1]:\n        print('No')\n        sys.exit()\nprint('Yes')", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!", "!", ">", "!", "!", "!", ">"]}, "9891": {"id": 9891, "code": "N = 6\nS = \")))())\"\nsl = 0\nsr = 0\nslmax = 0\nsrmax = 0\nfor i in range(N):\n  if(S[i] == '('):\n    sl -= 1\n  else:\n    sl += 1\n  slmax = max(slmax, sl)\nfor i in range(N):\n  if(S[N-i-1] == '('):\n    sr += 1\n  else:\n    sr -= 1\n  srmax = max(srmax, sr)\nfor i in range(slmax):\n  S = '(' + S\nfor i in range(srmax):\n  S = S + ')'\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "17265": {"id": 17265, "code": "x = ['H', 'H']\na = (x[0])\nb = (x[1])\nif((a == \"H\") & (b == \"H\")):\n    print(\"H\")\nelif ((a == \"D\") & (b == \"D\")):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "11754": {"id": 11754, "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(int(m1!=m2))", "coverage": [">", ">", ">"]}, "18361": {"id": 18361, "code": "h = 2\nw = 100\nn = 200\nans = n // max(h, w)\nif n % max(h, w) > 0:\n    ans = ans + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3830": {"id": 3830, "code": "x = 12;y = 3;z = 1\nx -= z\nans = 0\nwhile x > 0:\n    ans += 1\n    x -= y\n    x -= z\n    if x < 0:\n        ans -= 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7310": {"id": 7310, "code": "H = 20;N = 3\nA = [4, 5, 6]\na = sum(A)\nif H > a:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16169": {"id": 16169, "code": "from bisect import bisect_left, bisect_right\nn = 2\na = [100, 0]\na.sort()\nn = a[-1]\nmid = a[-1] // 2\ni = bisect_left(a[:-1], mid)\nif i >= len(a) - 1:\n    r = a[i - 1]\nelif i == 0 or a[i] == mid:\n    r = a[i]\nelif a[i] - mid <= mid - a[i - 1]:\n    r = a[i]\nelse:\n    r = a[i - 1]\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "3880": {"id": 3880, "code": "X = 12;Y = 3;Z = 1\nc = 0\nl = Z\nwhile l < X:\n    if l + Y + Z <= X:\n        l += Y + Z\n        c += 1\n    else:\n        break\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12142": {"id": 12142, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif (M1==M2-1 or M1-M2==11) and D2==1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "10244": {"id": 10244, "code": "n = 3\ns = \"())\"\nnow =0\nright = 0\nfor i in range(n):\n    if(s[n-1-i]=='('):\n        now+=1\n    else:\n        now-=1\n    if(right<now):\n        right=now\nleft=0\nnow=0\nfor i in range(n):\n    if(s[i]=='('):\n        now-=1\n    else:\n        now+=1\n    if(left<now):\n        left=now\nprint('('*left +s+ ')'*right)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4532": {"id": 4532, "code": "l = \"smiles\"\nprint(l[0]+str(len(l)-2)+l[-1])", "coverage": [">", ">"]}, "18214": {"id": 18214, "code": "h = 14\nw = 12\nn = 112\nans = 0\nif h >= w :\n  if n%h != 0:\n    ans = (n//h) +1\n  else:\n    ans = n//h\nelif  w > h:\n  if n%w != 0:\n    ans  = (n//w) +1\n  else:\n    ans = n//w\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">"]}, "17669": {"id": 17669, "code": "S = \"1700\"\nx=int(S[:2])\ny=int(S[2:])\nif x==0:\n    if 0<y<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif 0<x<=12:\n    if 0<y<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelif x>=13:\n    if 0<y<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "6893": {"id": 6893, "code": "H = 210;N = 5\nA = [59, 53, 41, 31, 26]\nprint(\"Yes\") if H - sum(A) <= 0 else print(\"No\")", "coverage": [">", ">", ">"]}, "12414": {"id": 12414, "code": "S = \"atcoder\"\nT=S[:(len(S)-1)//2]\nU=S[(len(S)+3)//2-1:]\nif S==S[::-1]:\n    if T==T[::-1]:\n        if U==U[::-1]:\n            print('Yes')\n        else:print('No')\n    else:print('No')\nelse:print('No')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "2003": {"id": 2003, "code": "N = 10;A = 3;B = 5\nX = A if A < B else B\nY = 0 if N > A+B else A+B-N\nprint(\"{0} {1}\".format(X, Y))", "coverage": [">", ">", ">", ">"]}, "9532": {"id": 9532, "code": "date_str = \"2017/01/07\"\nnew_data = date_str.replace('2017', '2018')\nprint(new_data)", "coverage": [">", ">", ">"]}, "6446": {"id": 6446, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nA.sort()\nB = [2, 2, 2]\nB.sort()\nC = [-3, -3, -3]\nC.sort()\nans=0\nfor b in B:\n    a=bisect.bisect_left(A,b)\n    c=bisect.bisect_left(C,-b)\n    ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "124": {"id": 124, "code": "alphabet = list(\"abcdefghijklmnopqrstuvwxyz\")\ns = ['x', 'y', 'z']\nS = [alphabet.index(x) for x in s]\nK = 4\ntmp = K\ni = 0\nwhile i < len(S) and tmp > 0:\n  if S[i] != 0 and 26-S[i] <= tmp:\n    tmp -= 26-S[i]\n    S[i] = 0\n  i += 1\nif tmp > 0:\n  S[-1] = (S[-1]+tmp)%26\nprint(\"\".join([alphabet[x] for x in S]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "18320": {"id": 18320, "code": "H = 3\nW = 7\nN = 10\nK=max(H,W)\nprint(-(-N//K))", "coverage": [">", ">", ">", ">", ">"]}, "10865": {"id": 10865, "code": "S = \"akasaka\"\ns1 = S[0:int((len(S)-1)/2)]\ns2 = S[int((len(S)/2))+1:len(S)+1]\nif S == S[::-1] and s1 == s1[::-1] and s2 == s2[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "15943": {"id": 15943, "code": "a = 20;b = 30\nc=b+b\nif(a-c!=0)and(a-c>=0):\n    print(a-c)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4520": {"id": 4520, "code": "import sys\ns = \"smiles\"\nif len(s) < 3 or len(s) > 100:\n    sys.exit()\nprint(s[0:1]+str((len(s)-2))+s[-1])", "coverage": [">", ">", ">", "!", ">"]}, "11845": {"id": 11845, "code": "M1 = \"11\";D1 = \"30\"\nM2 = \"12\";D2 = \"1\"\nif M1 == M2 :\n    print(0)\nelse :\n    print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "8784": {"id": 8784, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10231": {"id": 10231, "code": "n = 8\ns = \"))))((((\"\na = \"\"\nstack = []\nfor i in range(len(s)):\n    if s[i] == \"(\":\n        stack.append(\"(\")\n        a += \"(\"\n    elif s[i] == \")\" and len(stack) == 0:\n        stack.append(\")\")\n        a += \")\"\n    elif s[i] == \")\" and stack[-1] == \")\":\n        stack.append(\")\")\n        a += \")\"\n    else:  \n        stack.pop(-1)\n        a += \")\"\nwhile len(stack) > 0:\n    if stack[len(stack) - 1] == \")\":\n        e = len(stack) - 1\n        s = e\n        while s - 1 >= 0 and stack[s - 1] == \")\":\n            s -= 1\n        a = \"(\" * (e - s + 1) + a\n        stack = stack[:s]\n    elif stack[len(stack) - 1] == \"(\":\n        e = len(stack) - 1\n        s = e\n        while s - 1 >= 0 and stack[s - 1] == \"(\":\n            s -= 1\n        a = a + \")\" * (e - s + 1)\n        stack = stack[:s]\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17402": {"id": 17402, "code": "s = \"1700\"\nfir = int(s[:2])\nsec = int(s[2:])\nif fir > 0 or sec > 0:\n    if 1 <= fir <= 12 and 1 <= sec <= 12 :\n        print(\"AMBIGUOUS\")\n    elif 1 <= fir <= 12: \n        print(\"MMYY\")\n    elif 1 <= sec <= 12:\n        print(\"YYMM\") \n    else:\n        print(\"NA\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", "!", "!"]}, "6221": {"id": 6221, "code": "from bisect import *\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nc.sort()\nres = 0\nfor i in range(n):\n    temp = b[i]\n    res += bisect_left(a, temp) * (n - bisect_right(c, temp))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8793": {"id": 8793, "code": "N = 1\na1 = [2]\na2 = [3]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18134": {"id": 18134, "code": "s = \"1905\"\nhead = s[:2]\ntail = s[2:]\nresult = ['MMYY', 'YYMM', 'AMBIGUOUS', 'NA']\njudge = [0, 0]\nmonths = [f'{m:02}' for m in range(1, 13)]\nif head in months:\n    judge[0] += 1\nif tail in months:\n    judge[1] += 1\nif sum(judge) == 2:\n    print(result[2])\nelif sum(judge) == 0:\n    print(result[3])\nelse:\n    print(result[judge.index(1)])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">"]}, "13460": {"id": 13460, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "1804": {"id": 1804, "code": "N = 100;A = 100;B = 100\nprint(min(A,B),max(0,min(A,B)-(N-max(A,B))))", "coverage": [">", ">"]}, "4573": {"id": 4573, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(s[0], len(s)-2, s[len(s)-1], sep='')", "coverage": [">", ">"]}, "12586": {"id": 12586, "code": "A = 8;B = 12;K = 2\nans=0\nres=0\nfor i in range(min(A, B), 0, -1):\n    if A%i==0 and B%i==0:\n        res+=1\n        if res==K:\n            ans=i\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5137": {"id": 5137, "code": "S = \"internationalization\"\nprint(S[:1]+str(len(S)-2)+S[-1:])", "coverage": [">", ">"]}, "4146": {"id": 4146, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nst = h1 * 60 + m1\ned = h2 * 60 + m2\nans = ed - st - k\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "19275": {"id": 19275, "code": "n = 5\nif n%2==1:\n  ans=0\nelse:\n  m=n//10\n  ans=m\n  for i in range(1,30):\n    ans += m//(5**i)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "1622": {"id": 1622, "code": "x = 10;a = 3;b = 5\nma  = min(a,b)\nmi = max(0,a+b-x)\nprint(ma,mi)", "coverage": [">", ">", ">", ">"]}, "12458": {"id": 12458, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn=len(s)\nif list(s[::-1])==list(s[:]) and list(s[(n-1)//2-1::-1])==list(s[:(n-1)//2]) and list(s[:(n+3)//2-2:-1])==list(s[(n+3)//2-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3814": {"id": 3814, "code": "x = 13;y = 3;z = 1\nx -= z * 2\nc = x // (y + z)\nif x - (y + z) * c >= y:\n    c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16948": {"id": 16948, "code": "a = \"D\";b = \"H\"\nhd = \"HD\"\nif a == \"H\":\n    print(b)\nelse:\n    print(hd[hd.index(b) - 1])", "coverage": [">", ">", ">", "!", "!", ">"]}, "7796": {"id": 7796, "code": "n = 4;k = 3\na_ls = [2, 3, 1, 4]\nstroke = k - 1\nif k < n:\n    rest = n - k\n    ans = 1 + -(-rest // stroke)\nelse:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5845": {"id": 5845, "code": "n = 5\na,b = divmod(n,2)\nprint(a+b)", "coverage": [">", ">", ">"]}, "13962": {"id": 13962, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N <= 2:\n    print(1)\n    exit()\nd = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n        d.append(1)\n    elif A[i+1] - A[i] < 0:\n        d.append(-1)\nflag = [True]*len(d)\nans = 1\nfor i in range(len(d)-1):\n    if flag[i]:\n        if d[i] == -d[i+1]:\n            ans += 1\n            flag[i+1] = False\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14078": {"id": 14078, "code": "import sys\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndiv_flg=False\ninc_flg=False\ndec_flg=False\nans=0\nif N==1:\n  print(1)\n  sys.exit()\nfor i in range(N):\n  if inc_flg:\n    if i==N-1:\n      break\n    if A[i]<=A[i+1]:\n      continue\n    else:\n      inc_flg=False\n      div_flg=False\n  elif dec_flg:\n    if i==N-1:\n      break\n    if A[i]>=A[i+1]:\n      continue\n    else:\n      dec_flg=False\n      div_flg=False\n  else:\n    if i==0:\n      ans+=1\n      div_flg=True\n    elif i==N-1:\n      if not div_flg:\n        ans+=1\n      break\n    if A[i]==A[i+1]:\n      if not div_flg:\n        ans+=1\n      div_flg=True\n      continue\n    elif A[i]<A[i+1]:\n      if not div_flg:\n        ans+=1\n      inc_flg=True\n      continue\n    elif A[i]>A[i+1]:\n      if not div_flg:\n        ans+=1\n      dec_flg=True\n      continue\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "8970": {"id": 8970, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nprint(\"Yay!\" if abs(a-e) <= k else \":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "95": {"id": 95, "code": "s = ['a']\nk = 25\nn = len(s)\nfor i in range(n):\n    if s[i]=='a':continue\n    d = ord('z')-ord(s[i])+1\n    if d<=k:\n        s[i] = 'a'\n        k -= d\nx = (ord(s[-1])-ord('a')+k)%26\ns[-1] = chr(ord('a')+x)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "12894": {"id": 12894, "code": "x = 5\nY = set([7,5,3])\nif x in Y:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "1079": {"id": 1079, "code": "n = ['7', '5', '0']\nif int(n[0])>int(n[1]):\n    ans = [n[0]]*3\nelif int(n[0])==int(n[1]) and int(n[1])>=int(n[2]):\n    ans = [n[0]]*3\nelse:\n    ans = [int(n[0])+1]*3\nprint(*ans,sep=\"\")", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "2122": {"id": 2122, "code": "if __name__==\"__main__\":\n    n = \"10\";A = \"3\";B = \"5\"\n    n = int(n)\n    A = int(A)\n    B = int(B)\n    print(min(A, B),  max(B - (n - A), 0))", "coverage": [">", ">", ">", ">", ">", ">"]}, "17673": {"id": 17673, "code": "s = \"1905\"\na, b = int(s[:2]), int(s[2:])\nif 1<=a<=12 and 1<=b<=12:\n  print('AMBIGUOUS')\nelif 1<=b<=12:\n  print('YYMM')\nelif 1<=a<=12:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "10398": {"id": 10398, "code": "A = \"8\";B = \"12\";K = \"2\"\nA = int(A)\nB = int(B)\nK = int(K)\nmin = A if A <= B else B\nlist = []\nfor i in range(1, min+1):\n    if A % i == 0 and B % i == 0:\n        list.append(i)\nprint(list[len(list)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5378": {"id": 5378, "code": "N = 2\nans = N // 2\nans += 1 if N % 2 != 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "15491": {"id": 15491, "code": "x = 64146;y = 123;z = 456\nans = (x - z) // (y + z)\nprint(ans)", "coverage": [">", ">", ">"]}, "14305": {"id": 14305, "code": "N = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nb= [a[0]]\nif N > 1:\n    for i in range(1,N):\n        if a[i] != a[i-1]:\n            b.append(a[i])\n    if b[0] < b[1]:\n        up_down = 1\n    else:\n        up_down = -1\ni = 1\nwhile i < len(b):\n    if up_down*(b[i] - b[i-1]) < 0:\n        ans += 1\n        if b[i] < b[min(len(b)-1,i+1)]:\n            up_down = 1\n        else:\n            up_down = -1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "9347": {"id": 9347, "code": "s = \"2017/01/31\"\nres = \"2018\"+s[4:len(s)]\nprint(res)", "coverage": [">", ">", ">"]}, "14976": {"id": 14976, "code": "n = 3;p = 0\na = [1, 1, 1]\nmod = {0:0, 1:0}\nfor i in a:\n    mod[i % 2] += 1\nans = 0\nfor i in range(p, mod[1] + 1, 2):\n    temp = 1\n    for j in range(i):\n        temp *= mod[1] - j\n        temp //= j + 1\n    ans += temp\nfor i in range(mod[0]):\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "2012": {"id": 2012, "code": "n = 10;a = 3;b = 5\nif n >= a+b:\n    print(min(a, b), 0)\nelse:\n    print(min(a, b), min(a, b)-(n-max(a, b)))", "coverage": [">", ">", ">", "!", "!"]}, "18519": {"id": 18519, "code": "h = 14\nw = 12\nn = 112\nif h<w:\n\tw,h=h,w\nfrom math import ceil\nprint(ceil(n/h))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "17672": {"id": 17672, "code": "s = 1700\na = s % 100\nb = ((s-a) / 100)\nif a <= 12 and b <= 12 and a != 0 and b != 0:\n  print(\"AMBIGUOUS\")\nelif b <= 12 and b != 0:\n  print(\"MMYY\")\nelif a <= 12 and a != 0:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "11860": {"id": 11860, "code": "m = 11;d = 16\nn = 11;e = 17\nprint(int(e == 1))", "coverage": [">", ">", ">"]}, "15664": {"id": 15664, "code": "X = 13;Y = 3;Z = 1\na = Y+Z\nX=X-Z\nres = X//a\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "12052": {"id": 12052, "code": "import datetime\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif (m2 - m1 == 1):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "2409": {"id": 2409, "code": "n = 2;m = 1\nimport math \nif n>=2 and m>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2) + math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif n<2 and m>=2 :\n  ans =  math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif m<2 and n>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2)\nelse:\n  ans = 0\nprint(int(ans))", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "8911": {"id": 8911, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5139": {"id": 5139, "code": "S = \"xyz\"\nprint(S[:1]+str(len(S)-2)+S[-1:])", "coverage": [">", ">"]}, "5912": {"id": 5912, "code": "N = 2\nprint((N//2)+(N%2))", "coverage": [">", ">"]}, "12386": {"id": 12386, "code": "s = \"level\"\nn = len(s)\nflag = 0\nif s == s[::-1]:\n    flag += 1\nss = s[:int((n-1)/2)]\nif ss == ss[::-1]:\n    flag += 1\nsss = s[int((n+3)/2)-1:]\nif sss == sss[::-1]:\n    flag += 1\nif flag == 3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">"]}, "15999": {"id": 15999, "code": "a = 20;b = 15\nans = 0\nif a - (2 * b) > 0:\n    ans = a - (2 * b)\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "8798": {"id": 8798, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13085": {"id": 13085, "code": "a = 6\nprint('YES' if a==7 or a==5 or a==3 else 'NO')", "coverage": [">", ">"]}, "13761": {"id": 13761, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nWake  = 60*H1+M1\nSleep = 60*H2+M2\nActivate = Sleep - Wake\nCanStudy = Activate - K\nprint(int(CanStudy))", "coverage": [">", ">", ">", ">", ">", ">"]}, "17999": {"id": 17999, "code": "s = ['1', '7', '0', '0']\na = 10*int(s[0])+int(s[1])\nb = 10*int(s[2])+int(s[3])\nif 0<a<13 and 0<b<13:\n    print(\"AMBIGUOUS\")\nelif 0<a<13:\n    print(\"MMYY\")\nelif 0<b<13:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4619": {"id": 4619, "code": "s = \"smiles\"\nprint('{}{}{}'.format(s[0],len(s[1:-1]),s[-1]))", "coverage": [">", ">"]}, "1747": {"id": 1747, "code": "N = 100;A = 100;B = 100\nif N>=A+B:\n\tprint(str(min(A, B)) + ' 0')\nelse:\n\tprint(str(min(A, B)) + ' ' + str(A+B-N))", "coverage": [">", ">", "!", "!", ">"]}, "6960": {"id": 6960, "code": "N = 20;M = 3\nA = [4, 5, 6]\nif N - sum(A) <= 0:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1172": {"id": 1172, "code": "n = 750\nmul = lambda x: x * 100 + x * 10 + x\nif mul(n//100)>=n:ans = mul(n//100)\nelse :ans = mul(n//100+1)\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3001": {"id": 3001, "code": "S = \"35753\"\nN = len(S)\na = int(S[:2])\nans = 753\nfor i in range(2, N):\n  a = 10 * a + int(S[i])\n  a %= 1000\n  ans = min( ans, abs(753-a) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4355": {"id": 4355, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\ntime = (c * 60 + d) - (a * 60 + b)\ntime = time + 24 * 60 if time < 0 else time\nprint((60 * c + d) - (60 * a + b) - e)", "coverage": [">", ">", ">", ">"]}, "3562": {"id": 3562, "code": "house_len = 12;curtain_len = 4\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "1717": {"id": 1717, "code": "n = 100;a = 100;b = 100\nv_max = min(n,a,b)\nv_min = max(a+b-n, 0)\nprint(v_max, v_min)", "coverage": [">", ">", ">", ">"]}, "12941": {"id": 12941, "code": "if int(\"6\")in[7,5,3]:print('YES')\nelse:print('NO')", "coverage": [">", ">"]}, "1610": {"id": 1610, "code": "n = 10;a = 3;b = 5\nli = [a,b]\nmaxi = min (li)\nm = 0\nif a + b <= n:\n    m = 0\nif a + b > n:\n    m = a + b - n\nprint(maxi,m)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "18708": {"id": 18708, "code": "H = 2\nW = 100\nN = 200\na = max(H, W)\nprint((N+a-1)//a)", "coverage": [">", ">", ">", ">", ">"]}, "244": {"id": 244, "code": "s = \"codefestival\"\nK = 100\nans = ''\nfor i, c in enumerate(s):\n    dif = ord('z') - ord(c) + 1\n    dif %= 26\n    if i == len(s) - 1:\n        K %= 26\n        if ord(c) + K > ord('z'):\n            K -= 26\n        ans += chr(ord(c) + K)\n    elif dif <= K:\n        ans += 'a'\n        K -= dif\n    else:\n        ans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "15490": {"id": 15490, "code": "x = 100000;y = 1;z = 1\nans = (x - z) // (y + z)\nprint(ans)", "coverage": [">", ">", ">"]}, "12877": {"id": 12877, "code": "n = \"6\"\nif n in \"357\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "9520": {"id": 9520, "code": "S = \"2017/01/07\"\nprint(\"2018/01/\" + S[8:10])", "coverage": [">", ">"]}, "7624": {"id": 7624, "code": "H = 211;N = 5\nA=map(int,\"31 41 59 26 53\".split())\nif H<=sum(A):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "144": {"id": 144, "code": "s = ['x', 'y', 'z']\nk = 4\ndiff = [(ord(\"a\") + 26 - ord(x)) % 26 for x in s]\nfor i in range(len(s) - 1):\n    if diff[i] <= k:\n        s[i] = \"a\"\n        k -= diff[i]\n    else:\n        continue\ntmp = ord(s[-1]) + k % 26\nif tmp > 122:\n    tmp -= 26\ns[-1] = chr(tmp)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "12268": {"id": 12268, "code": "s = \"akasaka\"\nsf = s[:int((len(s)-1)/2)]\nsl = s[int((len(s)+3)/2)-1:]\nif s == s[::-1] and sf == sf[::-1] and sl == sl[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11549": {"id": 11549, "code": "S = \"SAT\"\nList = {'SUN':'7', 'MON':'6', 'TUE':'5', 'WED':'4', 'THU':'3', 'FRI':'2', 'SAT':'1'}\nprint(List[S])", "coverage": [">", ">", ">"]}, "9733": {"id": 9733, "code": "N = 3\nS = \"())\"\nflg_l = False\ncnt_r = 0\ncnt_l = 0\nfor i in range(N):\n    if(S[i] == \"(\"):\n        cnt_r += 1\n        flg_l = True            \n    else:\n        if(flg_l):\n            if(cnt_r > 0):\n                cnt_r -= 1\n            else:\n                cnt_l += 1\n                flg_l = False\n        else:\n            cnt_l += 1\nans = \"\"\nans += (\"(\"*cnt_l)+S+(\")\"*cnt_r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "4342": {"id": 4342, "code": "a = [10, 0, 12, 0, 120]\nh=a[2]-a[0]\nm=a[3]-a[1]\nmt=h*60+m\nprint(mt-a[4])", "coverage": [">", ">", ">", ">", ">"]}, "7831": {"id": 7831, "code": "n = 3;k = 3\na = [1, 2, 3]\nnum=min(a)\nif a[0]==num:\n    n-=1\nif a[-1]==num:\n    n-=1\nn-=1\nk-=1\nprint(-1*(n//-k))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "9058": {"id": 9058, "code": "A = 1\nB = 2\nC = 4\nD = 8\nE = 9\nK = 15\na=(E-A)\nif K>=a:\n    print('Yay!')\nelse:\n    print(':(')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16956": {"id": 16956, "code": "a = \"H\";b = \"H\"\nif a == 'H' and b == 'H': print('H')\nelif a == 'H': print('D')\nelif b == 'H': print('D')\nelse: print('H')", "coverage": [">", ">", "!", "!", "!"]}, "6648": {"id": 6648, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in B:\n    ai = bisect.bisect_left(A, b)\n    ci = bisect.bisect_right(C, b)\n    ans += ai * (N-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "828": {"id": 828, "code": "n = 2\ns=0\nfor i in range(n+1):\n    s=(10*s+7)%n\n    if(s==0):\n        print(i+1)\n        exit()\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18771": {"id": 18771, "code": "h = 2\nw = 100\nn = 200\nprint(int((n-1)/max(h, w))+1)", "coverage": [">", ">", ">", ">"]}, "11015": {"id": 11015, "code": "s1 = \"level\"\ns1r = s1[::-1]\nn1 = len(s1)\ns2 = s1[:(n1-1)//2]\ns2r = s2[::-1]\ns3 = s1[-(n1-1)//2:]\ns3r = s3[::-1]\nif s1 == s1r and s2 == s2r and s3 == s3r:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13225": {"id": 13225, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5] + \" \" + s[6:13] + \" \" + s[14:])", "coverage": [">", ">"]}, "7873": {"id": 7873, "code": "n = 4;k = 3\nAs = [2, 3, 1, 4]\na=n-1\nb=k-1\nif a % b == 0:\n  print(a//b)\nelse:\n  print((a//b) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13369": {"id": 13369, "code": "a = \"abcde,fghihgf,edcba\"\nprint(a.replace(\",\", \" \"))", "coverage": [">", ">"]}, "18224": {"id": 18224, "code": "import math\nH = 2\nW = 100\nN = 200\nfor i in range(1, max(H, W)+1):\n    if(max(H, W)*i >= N):\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "179": {"id": 179, "code": "s = \"a\"\nk = 25\nans = []\nfor i in range(len(s)):\n    if 123 - ord(s[i]) <= k:\n        if s[i] == \"a\":\n            ans.append(\"a\")\n            continue\n        ans.append(\"a\")\n        k -= 123 - ord(s[i])\n    else:\n        ans.append(s[i])\nlast = chr((ord(ans[-1])-97+k)%26 + 97)\nans[-1] = last\nprint(*ans, sep = \"\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "16972": {"id": 16972, "code": "h = \"D\";d = \"H\"\nif h=='H' and d=='H':\n    print('H')\nelif h=='H' and d=='D':\n    print('D')\nelif h=='D' and d=='H':\n    print('D')\nelse:\n    print('H')           ", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "1851": {"id": 1851, "code": "N = 100;X = 100;Y = 100\nans =  X+Y-N\nif ans < 0:\n    ans = 0\nprint(min(X,Y), ans)", "coverage": [">", ">", ">", "!", ">"]}, "15296": {"id": 15296, "code": "X = 13;Y = 3;Z = 1\nanswer=0\nwidth=Y+2*Z\nwhile(width<=X):\n  answer+=1\n  width+=Y+Z\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11336": {"id": 11336, "code": "import sys\nS = \"SAT\"\nif S == 'SUN':\n    print(7)\nif S == 'MON':\n    print(6)\nif S == 'TUE':\n    print(5)\nif S == 'WED':\n    print(4)\nif S == 'THU':\n    print(3)\nif S == 'FRI':\n    print(2)\nif S == 'SAT':\n    print(1)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "1544": {"id": 1544, "code": "n = 111\nwhile True:\n    if str(n)[0]==str(n)[1]==str(n)[2]:\n        print(n)\n        break\n    n+=1", "coverage": [">", ">", ">", ">", ">", "!"]}, "9922": {"id": 9922, "code": "n = 6\ns = \")))())\"\nc = 0\nd = 0\nfor i in range(n):\n    if s[i] == '(':\n        c += 1\n    else:\n        d += 1\nused_c = [True]*n\nused_d = [True]*n\nfor i in range(n):\n    if s[i] == '(':\n        for j in range(i+1, n):\n            if s[j] == ')' and used_c[j]:\n                c -= 1\n                used_c[j] = False\n                break\n    else:\n        for j in range(i):\n            if s[j] == '(' and used_d[j]:\n                d -= 1\n                used_d[j] = False\n                break\nprint('('*d+s+')'*c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "3678": {"id": 3678, "code": "a = 12;b = 4\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "3389": {"id": 3389, "code": "a = 20;b = 15\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "1918": {"id": 1918, "code": "n = 10;a = 3;b = 5\nif n < a+b:\n\tmi=a+b-n\nelse:\n\tmi=0\nprint(min(a,b),mi)", "coverage": [">", ">", "!", "!", ">", ">"]}, "18434": {"id": 18434, "code": "H = 3\nW = 7\nN = 10\nprint(-(-N//max(H,W)))", "coverage": [">", ">", ">", ">"]}, "5895": {"id": 5895, "code": "n = 100\npages = 0\nif n%2 == 1:\n    pages += 1\npages += n//2\nprint(pages)", "coverage": [">", ">", ">", "!", ">", ">"]}, "18610": {"id": 18610, "code": "hei = 2\nwei = 100\nn = 200\nkuro =0\ncount = 0\nif hei > wei:\n  data = hei\nelse:\n  data = wei \nwhile kuro<n:\n  kuro +=data \n  count +=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "4337": {"id": 4337, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt=(h2-h1)*60+m2-m1-k\nprint(t if t>=0 else 0)", "coverage": [">", ">", ">"]}, "17108": {"id": 17108, "code": "a = \"D\";b = \"D\"\nd={\"D\":False,\"H\":True}\nprint(\"D\" if d[a] ^ d[b] else \"H\")", "coverage": [">", ">", ">"]}, "4981": {"id": 4981, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nnum = len(s)\noutput = s[0] + str(num-2) + s[num-1]\nprint(output)", "coverage": [">", ">", ">", ">"]}, "12262": {"id": 12262, "code": "s = \"akasaka\"\ns1 = s[:len(s) // 2]\ns2 = s[:len(s) // 2:-1]\ns3 = s[len(s) // 2 + 1:]\nif s1 == s2 == s3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "5988": {"id": 5988, "code": "N = \"100\"\nN=int(N)\nif N%2==1:\n    N=int(((N-1)/2)+1)\n    print(N)\nelse:\n    N=int(N/2)\n    print(N)", "coverage": [">", ">", ">", "!", "!", "!", ">", ">"]}, "8827": {"id": 8827, "code": "import sys\ninput = sys.stdin.readline\nN = 1\nA = [2]\nB = [3]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11184": {"id": 11184, "code": "S = \"akasaka\"\nn = len(S)\nif not S == S[::-1]:\n    print('No')\n    exit()\nend = (n-1)//2\nSS = S[:end]\nif not SS == SS[::-1]:\n    print('No')\n    exit()\nstart = (n+3)//2 - 1\nSSS = S[start:n]\nif not SSS == SSS[::-1]:\n    print('No')\n    exit()\nprint('Yes')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "3153": {"id": 3153, "code": "s = \"1234567876\"\nd=1000\nfor i in range(len(s)-1):\n  if abs(int(s[i:i+3])-753)<d:\n    d=abs(int(s[i:i+3])-753)\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5987": {"id": 5987, "code": "N = \"2\"\nN=int(N)\nif N%2==1:\n    N=int(((N-1)/2)+1)\n    print(N)\nelse:\n    N=int(N/2)\n    print(N)", "coverage": [">", ">", ">", "!", "!", "!", ">", ">"]}, "12166": {"id": 12166, "code": "M = 11;D = 30\nm = 12;d = 1\nif m-M == 1 or m-M == -11:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "17123": {"id": 17123, "code": "S = \"D D\"\nS = S.replace('D','1')\nS_list = list(map(int,S.split()))\nif  S_list[0] ^ S_list[1] == 0 :\n    result = \"H\"\nelse:\n    result = \"D\"\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15603": {"id": 15603, "code": "X = 100000;Y = 1;Z = 1\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "6771": {"id": 6771, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nsum_a = sum(a)\nif sum_a < h:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18987": {"id": 18987, "code": "N = 5\nif N%2 == 1:\n    Answer = 0\nelse:\n    Answer = 0\n    for i in range(1,100):\n        Answer += N//(2*5**i)\nprint(Answer)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "10370": {"id": 10370, "code": "a = 100;b = 50;k = 4\ncount = 0\nfor i in range(min(a,b),0,-1):\n    if (a%i == 0) and (b%i == 0):\n        count+=1\n    if count == k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7040": {"id": 7040, "code": "H = 20;N = 3\nA = [4, 5, 6]\nAS = sum(A)\nif AS >= H:\n\tprint('Yes')\nelse:\n\tprint('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2047": {"id": 2047, "code": "N = 100;A = 100;B = 100\nX = 0\nif N<A+B:\n  X = A+B-N\nelse:\n  X = 0\nprint(min(A,B),X)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18219": {"id": 18219, "code": "H = 3\nW = 7\nN = 10\nm = max(H, W)\nprint((N + m - 1) // m)", "coverage": [">", ">", ">", ">", ">"]}, "6899": {"id": 6899, "code": "H = 10;N = 3\nA = [4, 5, 6]\nA.sort()\nA = A[:N]\ns = sum(A)\nans = 'No'\nif s >= H:\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3971": {"id": 3971, "code": "X = 100000;Y = 1;Z = 1\ntemp = X-Z\nans = temp//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "5526": {"id": 5526, "code": "n = 100\nnum = int(n / 2)\nif n % 2 == 1:\n  num += 1\nprint(num)", "coverage": [">", ">", ">", "!", ">"]}, "15326": {"id": 15326, "code": "x = 12;y = 3;z = 1\nprint(int((x - z) / (y + z)))", "coverage": [">", ">"]}, "16266": {"id": 16266, "code": "import bisect\nn = 2\naas = [100, 0]\naas.sort()\nl = aas[-1]\na = l // 2\nb = l // 2 + 1\nidx_a = bisect.bisect_left(aas,a)\nidx_b = bisect.bisect_left(aas,a)\nres = []\nif aas[idx_a] != l:\n    res.append(idx_a)\nif aas[idx_b] != l:\n    res.append(idx_b)\nif idx_a > 0:\n    if aas[idx_a-1] != l:\n        res.append(idx_a-1)\nif idx_b > 0:\n    if aas[idx_b-1] != l:\n        res.append(idx_b-1)\nif idx_a < n - 1:\n    if aas[idx_a+1] != l:\n        res.append(idx_a+1)\nif idx_b < n - 1:\n    if aas[idx_b+1] != l:\n        res.append(idx_b+1)\nbest = l // 2\nres_f = n - 1\nfor i in set(res):\n    if abs(best-aas[i]) <= abs(best-aas[res_f]):\n        res_f = i\n    if l%2 != 0:\n        if abs(best+1 - aas[i]) <= abs(best+1 - aas[res_f]):\n            res_f = i\nprint(str(l)+\" \"+str(aas[res_f]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18868": {"id": 18868, "code": "n = 5\nk = 10\nans = 0\nwhile k <= n:\n    ans += n // k\n    k = k * 5\nprint(ans if n % 2 == 0 else 0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8533": {"id": 8533, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nprint(max(sum(A[:n+1]+B[n:]) for n in range(N)))", "coverage": [">", ">", ">", ">"]}, "2653": {"id": 2653, "code": "a = {1, 4, 9, 7}\nif a=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "10428": {"id": 10428, "code": "a = 100;b = 50;k = 4\nlist_ComDiv = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        list_ComDiv.append(i)\nlist_ans = sorted(list_ComDiv, reverse=True)\nprint(list_ans[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18890": {"id": 18890, "code": "n = 5\nfives = [0]\nif n % 2 == 1:\n    print(0)\nelse:\n    i = 0\n    while 1:\n        temp5 = (n // (5** (i +1))) //2\n        if temp5 != 0:\n            fives.append(temp5)\n            i += 1\n        else:\n            break\n    print(sum(fives))    ", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "3392": {"id": 3392, "code": "A = 20;B = 15\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "16698": {"id": 16698, "code": "a = \"H\";b = \"H\"\nif a == \"H\" and b == \"D\":\n    print(\"D\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"H\" and b == \"D\":\n    print(\"D\")\nelif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"D\" and b == \"H\":\n    print(\"D\")", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "8200": {"id": 8200, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nans=0\nwhile 1:\n  if N>K:\n    N -= (K-1)\n    ans+=1\n  else:\n    ans+=1\n    break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "2575": {"id": 2575, "code": "print('YES' if set(list(map(int,\n                            \"4 9 0 8\".split()))) == set([1, 9, 7, 4]) else 'NO')", "coverage": [">", ">"]}, "11486": {"id": 11486, "code": "D = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7-D.index(\"SAT\"))", "coverage": [">", ">"]}, "16096": {"id": 16096, "code": "A = 20;B = 15\nif A-(B*2) > 0:\n    print(A-(B*2))\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "13541": {"id": 13541, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "7957": {"id": 7957, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nn-=k\nk-=1\ncount=1\nif n<=0:\n  pass\nelse:\n  while n>0:\n    n-=k\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15236": {"id": 15236, "code": "a = 64145;s = 123;d = 456\nprint((a-d)//(s+d))", "coverage": [">", ">"]}, "3583": {"id": 3583, "code": "A = 12;B = 4\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "70": {"id": 70, "code": "s = \"a\"\nints = [ord(i) - ord('a') for i in s]\nK = 25\nn = len(s)\ni = 0\nwhile i < n:\n    if ints[i] != 0 and 25 - ints[i] + 1 <= K:\n        K -= 25 - ints[i] + 1\n        ints[i] = 0\n    i += 1\nK %= 26\nints[-1] = (ints[-1] + K) % 26\ns_ = ''\nfor i in ints:\n    s_ += chr(i + ord('a'))\nprint(s_)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17283": {"id": 17283, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    elif b ==\"D\":\n        print(\"D\")\nif a == \"D\":\n    if b ==\"H\":\n        print(\"D\")\n    elif b == \"D\":\n        print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!"]}, "8523": {"id": 8523, "code": "n = 4\ncandy_map = []\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7738": {"id": 7738, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((len(A)-1)//(K-1) + int(bool((len(A)-1)%(K-1))))", "coverage": [">", ">", ">"]}, "9091": {"id": 9091, "code": "s = \"2017/01/31\"\nprint(\"2018/01/{}{}\".format(s[-2],s[-1]))", "coverage": [">", ">"]}, "10971": {"id": 10971, "code": "s = \"level\"\nn = len(s)\nentire = s == s[::-1]\nleft = s[:int((n-1)/2)] == s[:int((n-1)/2)][::-1]\nright = s[int((n+3)/2-1):] == s[int((n+3)/2-1):][::-1]\nif entire and left and right:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15730": {"id": 15730, "code": "x = 13;y = 3;z = 1\nx -= z\nprint(x // (y + z))", "coverage": [">", ">", ">"]}, "17858": {"id": 17858, "code": "s = \"1700\"\na=\"Y\"\nb=\"Y\"\nif 0<int(s[0:2])<13:\n    a=\"MY\"\nif 0<int(s[2:5])<13:\n    b=\"MY\"\nif a==b==\"Y\":\n    ans=\"NA\"\nelif a==\"Y\" and b==\"MY\":\n    ans=\"YYMM\"\nelif a==\"MY\" and b==\"Y\":\n    ans=\"MMYY\"\nelse:\n    ans=\"AMBIGUOUS\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "11046": {"id": 11046, "code": "S = \"atcoder\"\nl = len(S) // 2\nll = l // 2\nformer = S[:l]\nlatter = S[l+1:]\nfor i in range(l):\n  if S[i] != S[-i-1]:\n    print(\"No\")\n    break\nelse:\n  for i in range(ll):\n    if former[i] != former[-i-1] or latter[i] != latter[-i-1]:\n      print(\"No\")\n      break\n  else:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2826": {"id": 2826, "code": "S = \"1111111111\"\nl = len(S) - 2\nmin_diff = float(\"inf\")\nfor i in range(0, l):\n    num = int(S[i:i+3])\n    diff = abs(753 - num)\n    if min_diff > diff:\n        min_diff = diff\nprint(min_diff)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "871": {"id": 871, "code": "k = 2\nn = 7 % k\nans = -1\ncnt = 1\nchecked = {n}\nwhile n > 0:\n    n = (n * 10 + 7) % k\n    cnt += 1\n    if n in checked:\n        break\n    checked.add(n)\nif n == 0:\n    print(cnt)\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "17599": {"id": 17599, "code": "s = \"0112\"\ns1 = s[:2]\ns2 = s[2:4]\nr = int(s2)\nl = int(s1)\nif(1<=r<=12 and 1<=l<=12):\n    print(\"AMBIGUOUS\")\nelif((r > 12 or r == 0) and 1 <= l <= 12):\n    print(\"MMYY\")\nelif((l >= 12 or l == 0) and 1 <= r <= 12):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2733": {"id": 2733, "code": "n = 1;a = 9;b = 7;c = 4\nans='NO'\nif n==1 or a==1 or b==1 or c==1:\n    if n==9 or a==9 or b==9 or c==9:\n        if n==7 or a==7 or b==7 or c==7:\n            if n==4 or a==4 or b==4 or c==4:\n                ans='YES'\nprint(ans)                ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8544": {"id": 8544, "code": "N = 5\np=[0]\nq=[0]\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14455": {"id": 14455, "code": "N = 6\npre = None\nis_inc = None\nans = 1\nfor num in list(map(int, \"1 2 3 2 2 1\".split())):\n    if pre is None:\n        pre = num\n        continue\n    if is_inc is None and num > pre:\n        is_inc = True\n    elif is_inc is None and num < pre:\n        is_inc = False\n    elif (is_inc and num < pre) or (not is_inc and num > pre):\n        ans += 1\n        is_inc = None\n    pre = num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2089": {"id": 2089, "code": "from sys import stdin\nN = 10;A = 3;B = 5\nMAX = min(A,B)\nMIN = max(A+B-N,0)\nprint(MAX,MIN)", "coverage": [">", ">", ">", ">", ">"]}, "19419": {"id": 19419, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nn = 3\nprint(2*n if n % 2 else n)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16986": {"id": 16986, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    print(b)\nelif a == 'D':\n    print('HD'[int(not 'HD'.index(b))])", "coverage": [">", ">", ">", "!", "!"]}, "9645": {"id": 9645, "code": "N = 6\nS = [')', ')', ')', '(', ')', ')']\nd = []\nfor i in range(N+1):\n    partial = S[:i]\n    d.append(partial.count('(') - partial.count(')'))\na = -min(d)\nb = d[-1]\nprint('(' * a + \"\".join(S) + ')' * (b + a))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14488": {"id": 14488, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ntrend = 0\ncnt = 0\nfor i in range(1,n):\n    if trend == 0:\n        if a[i-1] == a[i]:\n            pass\n        elif a[i-1] < a[i]:\n            trend = 1\n        else:\n            trend = -1\n    elif trend == 1:\n        if a[i-1] > a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\n    else:\n        if a[i-1] < a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "5746": {"id": 5746, "code": "n = 5\nprint(n//2+1 if n%2!=0 else n//2)", "coverage": [">", ">"]}, "10394": {"id": 10394, "code": "A = 1;B = 1;K = 1\nX = []\nfor i in range(1, min(A, B) + 1):\n  if A % i == 0 and B % i == 0:\n    X.append(i)\nprint(X[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "9412": {"id": 9412, "code": "S = \"2017/01/07\"\nprint(S.replace('2017', \"2018\"))", "coverage": [">", ">"]}, "15422": {"id": 15422, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nX = 64146;Y = 123;Z = 456\nprint((X-Z) // (Y + Z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8316": {"id": 8316, "code": "n, k = map(int, \"8 3\".split())\nprint((n-2)//(k-1) + 1)", "coverage": [">", ">"]}, "3263": {"id": 3263, "code": "a = 20;b = 30\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "18959": {"id": 18959, "code": "N = 5\nif N % 2 == 1:\n    ans = 0\nelse:\n    div2 = N // 2\n    n = N // 2\n    k = 1\n    while n // 2**k > 0:\n        div2 += n // 2**k\n        k += 1\n    div5 = 0\n    n = N // 2\n    k = 1\n    while n // 5**k > 0:\n        div5 += n // 5**k\n        k += 1\n    ans = min(div2, div5)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "12324": {"id": 12324, "code": "s = \"level\"\nn=len(s)\ns1=s[0:n//2]\ns2=s[n//2+1:n]\nif s==s[::-1]and s1==s1[::-1] and s2==s2[::-1]: print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "1417": {"id": 1417, "code": "n = 750\nN = list(str(n))\nans = str()\nres = N[0]\nmn = True\nbl = True\nfor x in N:\n    if int(res) < int(x):\n        mn = False\n    if x != res:\n        bl = False\nif bl:\n    print(n)\nelse:\n    if not mn:\n        for i in range(len(N)):\n            ans += str(int(res) + 1)\n        print(ans)\n    else:\n        for i in range(len(N)):\n            ans += str(res)\n        print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">"]}, "18061": {"id": 18061, "code": "S = \"1905\"\nformer = int(S[:2])\nlatter = int(S[2:])\nif((former >= 13 or former == 0) and 1 <= latter <= 12):\n    print(\"YYMM\")\nif((latter >= 13 or latter == 0) and 1 <= former <= 12):\n    print(\"MMYY\")\nif(1 <= former <= 12 and 1 <= latter <= 12):\n    print(\"AMBIGUOUS\")\nif((former >= 13 or former == 0) and (latter >= 13 or latter == 0)):\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!"]}, "17805": {"id": 17805, "code": "S = 112\na = int(S/100 - (S%100)/100)\nb = int(S%100)\nif( 0<a<13 and 0<b<13 ):\n  print(\"AMBIGUOUS\")\nif( (0<a<13 and 12<b<100) or (0<a<13 and b==0) ):\n  print(\"MMYY\")\nif( (12<a<100 and 0<b<13) or (a==0 and 0<b<13) ):\n  print(\"YYMM\")\nif( 12<a<100 and 12<b<100 ):\n  print(\"NA\")\nif( a==0 and 12<b<100 ):\n  print(\"NA\")\nif( 12<a<100 and b==0 ):\n  print(\"NA\")\nif( a==0 and b==0 ):\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!"]}, "10515": {"id": 10515, "code": "a = 8;b = 12;k = 2\nc=min(a,b)\nd=max(a,b)\nans=[]\nfor i in range(c):\n    if c%(i+1)==0 and d%(i+1)==0:\n        ans.append(i+1)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5036": {"id": 5036, "code": "s = \"smiles\"\nh = s[0]\nt = s[len(s) - 1]\nl = str(len(s[1:-1]))\nprint(h+l+t)", "coverage": [">", ">", ">", ">", ">"]}, "3199": {"id": 3199, "code": "S = \"35753\"\nmini=1000\nfor i in range(0,len(S)-2):\n  i1=int(S[i])\n  i2=int(S[i+1])\n  i3=int(S[i+2])\n  x=i1*100+i2*10+i3\n  if abs(x-753)<mini:\n    mini=abs(x-753)\nprint(mini)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2860": {"id": 2860, "code": "s = \"1234567876\"\nans = 999\nfor i,j,k in zip(s, s[1:], s[2:]):\n    diff = abs(753 - int(i+j+k))\n    ans = min(ans, diff)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7129": {"id": 7129, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if h<=sum(a) else 'No')", "coverage": [">", ">", ">"]}, "18400": {"id": 18400, "code": "h = 2\nw = 100\nn = 200\nans = 0\nwhile True:\n    if h >= w:\n        n = n - h\n    else:\n        n = n - w\n    ans = ans + 1\n    if n <= 0:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "2442": {"id": 2442, "code": "if __name__ == '__main__':\n    n = 13;m = 3\n    eve = (n*(n-1)) // 2\n    odd = (m*(m-1)) // 2\n    print(eve+odd)", "coverage": [">", ">", ">", ">", ">"]}, "6889": {"id": 6889, "code": "h = 210;n = 5\naa = [31, 41, 59, 26, 53]\nall = sum(aa)\nif h <= all :\n  print(\"Yes\")\nelse :\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "18138": {"id": 18138, "code": "S = \"0112\"\nmmyy=1<=int(S[:2])<=12\nyymm=1<=int(S[2:])<=12\nl=[['AMBIGUOUS','MMYY'],['YYMM','NA']]\nprint(l[not mmyy][not yymm])", "coverage": [">", ">", ">", ">", ">"]}, "3255": {"id": 3255, "code": "a = 12;b = 4\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1371": {"id": 1371, "code": "n = 111\nwhile True:\n    s = str(n)\n    if s[0] == s[1] and s[0] == s[2]:\n        print(n)\n        break\n    n += 1", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "18126": {"id": 18126, "code": "s = \"0112\"\na = int(s[0]) * 10 + int(s[1])\nb = int(s[2]) * 10 + int(s[3])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif 1 <= a <= 12:\n    print('MMYY')\nelif 1 <= b <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "2990": {"id": 2990, "code": "s = \"1111111111\"\nm=1000\nfor i in range(len(s)-2):\n  x=int(s[i]+s[i+1]+s[i+2])\n  m=min(m,abs(x-753))\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2129": {"id": 2129, "code": "n = 10;a = 7;b = 5\nmax_ = min(a, b)\nmin_ = max(a + b - n, 0)\nprint(max_, min_)", "coverage": [">", ">", ">", ">"]}, "1143": {"id": 1143, "code": "n = 111\ntmp=(n+110)//111\nprint(111*tmp)", "coverage": [">", ">", ">"]}, "11365": {"id": 11365, "code": "S = \"SUN\"\nls = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ncnt = 0\ndict = {}\nfor item in ls:\n    dict[item] = cnt\n    cnt += 1\nprint(7 - dict[S])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3867": {"id": 3867, "code": "A = 64146;B = 123;C = 456\nprint((A-C)//(B+C))", "coverage": [">", ">"]}, "19049": {"id": 19049, "code": "N = 12\nif N % 2 == 1:\n  print(0)\nelse:\n  i = 1\n  ans = 0\n  while 2*(5**i) <= N:\n    div = 2 * (5 ** i)\n    ans += int(N//div)\n    i += 1\n  print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "2670": {"id": 2670, "code": "n = {1, 2, 9}\nif {1, 9, 7, 4} == n:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "3246": {"id": 3246, "code": "a = 12;b = 4\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", "!", "!", ">"]}, "4691": {"id": 4691, "code": "s = \"smiles\"\nprint(s[0] + str(len(s)-2) + s[-1])", "coverage": [">", ">"]}, "12239": {"id": 12239, "code": "w = \"atcoder\"\nl = len(w)\nflag = True\nfor i in range((l - 1)//2):\n  if w[i] != w[l - i - 1]:\n    flag = False\n    break\nmid = (l - 1) // 2\nmid_mid = mid // 2\nfor i in range(mid_mid + 1):\n  if w[i] != w[mid - i - 1] or not flag:\n    flag = False\n    break\n  if w[i + mid + 1] != w[l - i - 1]:\n    flag = False\n    break\nif flag:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "8098": {"id": 8098, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif (A.index(1)+1)>=K and (N-A.index(1))>=K:\n  ans=-(-A.index(1))//(K-1)-(-N+A.index(1)+1)//(K-1)\nelse:\n  ans=1-(-N+K)//(K+1)\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13267": {"id": 13267, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(\",\",\" \"))", "coverage": [">", ">"]}, "4426": {"id": 4426, "code": "a = \"i\";l = ['n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o'];b = \"n\"\nprint(a+str(len(l))+b)", "coverage": [">", ">"]}, "6199": {"id": 6199, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\nBB = [0] * N\ncidx = 0\nfor i in range(N):\n    while cidx < N and C[cidx] <= B[i]:\n        cidx += 1\n    BB[i] = N - cidx\nBBB = [0] * N\nfor i in range(N - 1, -1, -1):\n    if (i == N - 1):\n        BBB[i] = BB[i]\n    else:\n        BBB[i] = BB[i] + BBB[i+1]\nsum = 0\nbidx = 0\nfor i in range(N):\n    while bidx < N and B[bidx] <= A[i]:\n        bidx += 1\n    if bidx != N:\n        sum += BBB[bidx]\nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3107": {"id": 3107, "code": "S = \"35753\"\ndiff_min = 1000\nfor i in range(len(S)-2):\n    if diff_min > abs(753 - int(S[i:i+3])):\n        diff_min = abs(753 - int(S[i:i+3]))\nprint(diff_min)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18183": {"id": 18183, "code": "S = 112\nL = S // 100 \nR = S % 100 \nif 1 <= L <= 12:\n  if 1 <= R <= 12: print('AMBIGUOUS')\n  else: print('MMYY')\nelse:\n  if 1 <= R <= 12: print('YYMM')\n  else: print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "10294": {"id": 10294, "code": "n = 8\nS = \"))))((((\"\nl = 0\nr = 0\nfor s in S:\n  if s == \"(\":\n    r += 1\n  else:\n    if r > 0:\n      r -= 1\n    else:\n      l += 1\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "7271": {"id": 7271, "code": "h = 10;n = 3\na = [4, 5, 6]\nif h<=sum(a):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "15289": {"id": 15289, "code": "x = 13;y = 3;z = 1\nx-=(y+2*z)\nc=1\nc+=x//(y+z)\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "18585": {"id": 18585, "code": "H = 14\nW = 12\nN = 112\ncnt=0\nblack=0\nif H>=W:\n  for i in range(W):\n    black+=H\n    cnt+=1\n    if black>=N:\n      break\nelif H<W:\n  for i in range(H):\n    black+=W\n    cnt+=1\n    if black>=N:\n      break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "9510": {"id": 9510, "code": "N = \"2017/01/07\"\nN = N.replace(\"2017\",\"2018\")\nprint(N)", "coverage": [">", ">", ">"]}, "17323": {"id": 17323, "code": "s = \"D H\"\nif s == 'H H' or s == 'D D':\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", "!", "!", ">"]}, "2849": {"id": 2849, "code": "S = \"35753\"\nS += '0'\nnum_len = 999\nfor i in range(len(S)-3):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14421": {"id": 14421, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nstatus = 0 \ncnt = 1\nfor i in range(1,N):\n    if A[i-1] < A[i]: \n        if status == 0 or status == 1:\n            status = 1\n        else:\n            status = 0\n            cnt += 1\n    elif A[i-1] > A[i]:\n        if status == 0 or status == 2:\n            status = 2\n        else:\n            status = 0\n            cnt += 1\n    else:\n        continue\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "11314": {"id": 11314, "code": "s = \"SAT\"\nif s == \"SUN\":print(7)\nelif s == \"MON\":print(6)\nelif s == \"TUE\":print(5)\nelif s == \"WED\":print(4)\nelif s == \"THU\":print(3)\nelif s == \"FRI\":print(2)\nelse:print(1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18269": {"id": 18269, "code": "h = 3\nw = 7\nn = 10\nans=min((n+h-1)//h,(n+w-1)//w)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18864": {"id": 18864, "code": "from itertools import accumulate\nN = 2\nA = (10, 0)\nx = A[-1]\ny = A[0]\nans = abs(x - y - y)\nfor a in A[:-1]:\n    ans = min(ans, abs(x - a - a))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "142": {"id": 142, "code": "s = \"a\"\nK = 25\nalp = 'abcdefghijklmnopqrstuvwxyz'\nans = ''\nfor i,w in enumerate(s):\n    if i != len(s)-1 and (26-(ord(w)-ord('a')))%26 <= K:\n        ans += 'a'\n        K -= (26-(ord(w)-ord('a')))%26\n    elif i != len(s)-1:\n        ans += w\n    if i == len(s)-1:\n        lastlidx = (ord(w)-ord('a') + K%26)%26\n        ans += alp[lastlidx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">"]}, "10935": {"id": 10935, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nb = 0\nif len(s)%2==1:\n    for a in range(int((len(s)-1)/2)):\n        if s[a]!=s[len(s)-a-1] and b==0:\n            b = 1\nelse:\n    b = 1\nif b == 0:\n    for c in range(int((len(s)-1)/4+1)):\n        if s[c]==s[int((len(s)-1)/2-c-1)]==s[int((len(s)+1)/2+c)]==s[len(s)-c-1] and b==0:\n            b = 0\n        else:\n            b = 1\nif b == 0:\n    print(\"Yes\")\nelif b == 1:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "16190": {"id": 16190, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nN = a[-1]\nans = float('inf')\nr = a[0]\nfor i in range(len(a)-1):\n    if ans > abs(a[i]-N/2):\n        ans = abs(a[i]-N/2)\n        r = a[i]\nprint(str(N) +' '+ str(r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16314": {"id": 16314, "code": "n = 2\na = [100, 0]\nai = max(a)\na.remove(ai)\naj = a[0]\nfor i in a:\n    if abs(ai/2-i) < abs(ai/2-aj):\n        aj = i\nprint(ai,aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13642": {"id": 13642, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "8005": {"id": 8005, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nm = n-k\nif m>0:\n  if m%(k-1)==0:\n    print(m//(k-1) + 1)\n  else:\n    print(m//(k-1) + 2)\nelse:\n  print(m//(k-1) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "13337": {"id": 13337, "code": "s = \"happy,newyear,enjoy\"\ns1 = s[0:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(\"{} {} {}\".format(s1,s2,s3))", "coverage": [">", ">", ">", ">", ">"]}, "4791": {"id": 4791, "code": "import sys\ninput = sys.stdin.readline\nS = ['x', 'y']\nprint(S[0] + str(len(S) - 2) + S[-1])", "coverage": [">", ">", ">", ">"]}, "5878": {"id": 5878, "code": "N = 5\nprint(-(-N // 2))", "coverage": [">", ">"]}, "7128": {"id": 7128, "code": "h = 20;n = 3\na = [4, 5, 6]\nprint('Yes' if h<=sum(a) else 'No')", "coverage": [">", ">", ">"]}, "4926": {"id": 4926, "code": "s = \"xyz\"\ns1, s2, s3 = s[0], s[1:-1], s[-1]\nans = s1 + str(len(s2)) + s3\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "6117": {"id": 6117, "code": "from bisect import bisect_left, bisect_right\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(N):\n    b = B[i]\n    a_ix = bisect_left(A, b)\n    c_ix = bisect_right(C, b)\n    ans += a_ix * (N - c_ix)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6970": {"id": 6970, "code": "H = 211\nA = [31, 41, 59, 26, 53]\nif sum(A) < H:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "15901": {"id": 15901, "code": "A = 20;B = 30\nprint(0 if A-(B*2)<1 else A-(B*2))", "coverage": [">", ">"]}, "11039": {"id": 11039, "code": "S = \"level\"\nnew_S1=list(reversed(S))\nnew_S2=''.join(new_S1)\nif S==new_S2:\n    A=S[0:len(S)//2]\n    new_A1 = list(reversed(A))\n    new_A2 = ''.join(new_A1)\n    B=S[len(S)//2+1:len(S)]\n    new_B1 = list(reversed(B))\n    new_B2 = ''.join(new_B1)\n    if A==new_A2 and B==new_B2:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "12476": {"id": 12476, "code": "s1 = \"level\"\nn1 = len(s1)\ns2 = s1[:(n1-1)//2]\nn2 = len(s2)\ns3 = s1[-(n1-1)//2:]\nn3 = len(s3)\nf1, f2, f3 = True, True, True\nfor i in range((n1-1)//2):\n    if s1[i] != s1[-i-1]:\n        f1 = False\n        break\nfor i in range(n2//2):\n    if s2[i] != s2[-i-1]:\n        f2 = False\n        break\nfor i in range(n3//2):\n    if s3[i] != s3[-i-1]:\n        f3 = False\n        break\nif f1 and f2 and f3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17636": {"id": 17636, "code": "S = \"1700\"\nl,r = int(S[:2]),int(S[2:])\nif 1 <= l <= 12 and 1 <= r <= 12:\n\tprint(\"AMBIGUOUS\")\nelif 1<=r<=12:\n\tprint(\"YYMM\")\nelif 1<=l<=12:\n\tprint(\"MMYY\")\nelse:\n\tprint(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "8473": {"id": 8473, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandy = []\nfor n in range(N):\n    candy.append(sum(A1[:n+1]) + sum(A2[n:]))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19299": {"id": 19299, "code": "n = 12\nans=0\nif n%2==1:\n    ans=0\nelse:\n    tmp=10\n    while tmp<=n:\n        ans+=n//tmp\n        tmp*=5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "6642": {"id": 6642, "code": "from bisect import bisect_left,bisect_right\nn = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [58, 9, 79, 323, 84, 6]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor b in B:\n    index_a=bisect_left(A,b)\n    index_c=bisect_right(C,b)\n    ans +=index_a*(n-index_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19003": {"id": 19003, "code": "n = 5\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    n //= 2\n    while n:\n        ans += n//5\n        n //= 5\n    print(int(ans))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2254": {"id": 2254, "code": "n = 10;a = 3;b = 5\nmn = None\nmx = None\nmx = min(a, b)\nif n >= a+b:\n    mn = 0\nelse:\n    mn = a+b-n\nprint(mx, mn)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14404": {"id": 14404, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nlist = []\nsim=0\nfor i in range(N-1):\n  if A[i]<A[i+1]:\n    list.append(1)\n  if A[i]>A[i+1]:\n    list.append(0)\n  if A[i]==A[i+1]:\n    sim+=1\ni = 0\ncount = 0\nwhile i<N-2-sim:\n  if list[i] != list[i+1]:\n    count += 1\n    i+=1\n  i+=1\nprint(count + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18767": {"id": 18767, "code": "H = 14\nW = 12\nN = 112\nimport math\nm = max(H,W)\nprint(math.ceil(N/m))", "coverage": [">", ">", ">", ">", ">", ">"]}, "7703": {"id": 7703, "code": "import sys\nimport math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nprint(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">", ">"]}, "2771": {"id": 2771, "code": "s = \"35753\"\nnum = 10**9\nfor i in range(len(s)-2):\n    t = abs(int(s[i:i+3])-753)\n    if t < num:\n        num = t\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18232": {"id": 18232, "code": "h = 14\nw = 12\nn = 112\nq,r = divmod(n, max(h,w))\nprint(q + int(bool(r)))", "coverage": [">", ">", ">", ">", ">"]}, "15202": {"id": 15202, "code": "X = 13;Y = 3;Z = 1\nans=X//(Y+Z)\nif X<ans*(Y+Z)+Z:\n  print(ans-1)\nelse:  \n  print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14519": {"id": 14519, "code": "n = 3;p = 0\na = [1, 1, 1]\nflg_lst = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        flg_lst.append(True)\n    else:\n        flg_lst.append(False)\nif False in flg_lst:\n    print(2 ** (n - 1))\nelse:\n    if p == 0:\n        print(2 ** n)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!"]}, "4320": {"id": 4320, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\na1 = 60*h1 + m1\na2 = 60*h2 + m2\nduration = abs(a2-a1)\nans = duration-k\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3955": {"id": 3955, "code": "X = 13;Y = 3;Z = 1\nif (X-2*Z)%(Y+Z) >= Y:\n    print((X-2*Z)//(Y+Z)+1)\nelse:\n    print((X-2*Z)//(Y+Z))", "coverage": [">", ">", ">", "!", "!"]}, "17721": {"id": 17721, "code": "s = ['1', '9', '0', '5']\ns1=\"\".join(s[:2])\ns2=\"\".join(s[2:])\nif 0<int(s1)<=12 and 0<int(s2)<=12:\n    print(\"AMBIGUOUS\")\nelif 0<int(s1)<=12 and (int(s2)>12 or int(s2)==0):\n    print(\"MMYY\")\nelif 0<int(s2)<=12 and (int(s1)>12 or int(s1)==0):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "3478": {"id": 3478, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 12;b = 4\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19178": {"id": 19178, "code": "N = 5\nif N%2==1:\n    print(0)\nelse:\n    counter = 0\n    tmp = 1\n    while True:\n        tmp *= 5\n        if tmp>N:\n            print(counter)\n            break\n        counter += N//(tmp*2)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "10056": {"id": 10056, "code": "N = 8\nS = \"))))((((\"\nT = S\nfor n in range(N):\n  T = T.replace(\"()\",\"\")\nL = T.count(\"(\")\nR = T.count(\")\")\nS = R*\"(\"+S+L*\")\"\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14659": {"id": 14659, "code": "import collections\nn = 1;p = 1\na = [50]\na2 = [ai%2 for ai in a]\na2 = collections.Counter(a2)\nif p == 0:\n  if a2[1] == 0:\n    print(2 ** n)\n  else:\n    print(2 ** (n - 1))\nelse:\n  if a2[1] == 0:\n    print(0)\n  else:\n    print(2 ** (n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "8942": {"id": 8942, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nif N==1: print(A[0] + B[0]);exit()\nAS = [0]\nBS = [0]\nfor i in range(N):\n    AS.append(AS[-1]+A[i])\n    BS.append(BS[-1]+B[i])\nans = 0\nfor i in range(N):\n    val = AS[i+1]\n    val += BS[-1]-BS[i]\n    ans =max(ans,val)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7441": {"id": 7441, "code": "H = 210;N = 5\nAs = [31, 41, 59, 26, 53]\nsumA = sum(As)\nif sumA >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "4831": {"id": 4831, "code": "line = \"internationalization\"\nnum = len(line)\na = line[0]\nb = line[num - 1]\nprint(a + str(num - 2) + b)", "coverage": [">", ">", ">", ">", ">"]}, "9811": {"id": 9811, "code": "N = 6\nS = [')', ')', ')', '(', ')', ')']\na = 0 \nb = 0 \nfor i in range(N):\n  if S[i] == '(':\n    a += 1\n  else:\n    if a > 0:\n      a -= 1\n    else:\n      b += 1\nans = \"\".join(S)\nif b > 0:\n  ans = \"(\"*b + ans\nif a > 0:\n  ans = ans + \")\"*a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "1553": {"id": 1553, "code": "n = 112\nfor i in range(1,10):\n    if int(str(i)*3) >= n:\n        print(str(i)*3)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "17538": {"id": 17538, "code": "s = \"1905\"\naa = int(s[0])*10 + int(s[1])\nbb = int(s[2])*10 + int(s[3])\nif 1 <= aa <= 12 and 1 <= bb <= 12 :\n    print(\"AMBIGUOUS\")\nelif 1 <= aa <= 12 and bb == 0 :\n    print(\"MMYY\")\nelif 1 <= aa <= 12 and 13 <= bb :\n    print(\"MMYY\")\nelif aa == 0 and 1<= bb <= 12 :\n    print(\"YYMM\")\nelif 13<=aa and 1<=bb<=12 :\n    print(\"YYMM\")\nelse :\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!"]}, "10701": {"id": 10701, "code": "s = \"level\"\nn=len(s)\nx=s[0:(n-1)//2]\ny=s[(n+3)//2-1:n]\nif x==x[::-1] and y==y[::-1] and s==s[::-1]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12156": {"id": 12156, "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nif d_2 == 1:\n  ans = '1'\nelse:\n  ans = '0'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13793": {"id": 13793, "code": "n = 9\nL = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nstate = None\ni = 1\nwhile i < n:\n    if state is None:\n        if L[i] > L[i - 1]:\n            state = 'up'\n        elif L[i] < L[i - 1]:\n            state = 'down'\n        i += 1\n    else:\n        if state == 'up':\n            while L[i] >= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\n        else:\n            while L[i] <= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "19199": {"id": 19199, "code": "import sys\nN = 12\nif N % 2 == 1:\n    print(0)\n    sys.exit()\nans = 0\nmul = 1\nfor i in range(1, 27):\n    mul *= 5\n    add = N // (2 * mul)\n    if add == 0: break\n    ans += add\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5238": {"id": 5238, "code": "s = ['x', 'y', 'z']\nL=[s[0]]\nL.append(str(len(s)-2))\nL.append(s[-1])\nprint(''.join(L))", "coverage": [">", ">", ">", ">", ">"]}, "13137": {"id": 13137, "code": "X = 6\nif (X==3) or (X==5) or (X==7):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "9177": {"id": 9177, "code": "if __name__ == \"__main__\":\n    s = \"2017/01/31\"\n    print('2018'+s[4:])", "coverage": [">", ">", ">"]}, "4595": {"id": 4595, "code": "s = \"smiles\"\nfirst_s = s[0]\nlast_s = s[-1]\nmiddle_s = str(len(s) - 2)\nans = first_s + middle_s + last_s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8908": {"id": 8908, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nif N == 1:\n    print(A1[0] + A2[0])\n    exit()\ncum_A1 = [A1[0]] * N\nfor i in range(1, N):\n    cum_A1[i] = cum_A1[i - 1] + A1[i]\ncum_A2 = [A2[0]] * N\nfor i in range(1, N):\n    cum_A2[i] = cum_A2[i - 1] + A2[i]\nbest_total = 0\nfor down in range(N):\n    total = cum_A1[down]\n    total += cum_A2[-1]\n    if down >= 1:\n        total -= cum_A2[down - 1]\n    best_total = max(total, best_total)\nprint(best_total)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4960": {"id": 4960, "code": "s = \"internationalization\"\nm=len(s[1:-1])\nprint('{}{}{}'.format(s[0],m,s[-1]))", "coverage": [">", ">", ">"]}, "6033": {"id": 6033, "code": "N = 100\ndiv,mod=divmod(N,2)\nprint(div+mod)", "coverage": [">", ">", ">"]}, "8034": {"id": 8034, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nb = a.index(1) \nans = 0\nb -= (k-1)\nif b < 0:\n    b = a.index(1) + abs(b)\nif b > n-1 -(k-1):\n    b -= b- (k-1)\nc,d = divmod(b,k-1)\nans += c\nif d != 0:\n    ans +=1\ne,f = divmod(n-1 - b,k-1)\nans += e\nif f != 0:\n    ans +=1\nif d != 0 and f != 0 and d + f <= k-1:\n    ans -=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "10319": {"id": 10319, "code": "import math\nnum1 = 8;num2 = 12;target = 2\nnumber = math.gcd(num1, num2)\ntable = []\nfor j in range(1, number+1):\n    if number % j == 0:\n        table.append(j)\nlist.sort(table, reverse=True)\nprint(table[target-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11956": {"id": 11956, "code": "m = 11;d = 16\nm2 = 11;d2 = 17\nprint(1 if m != m2 else 0)", "coverage": [">", ">", ">"]}, "3961": {"id": 3961, "code": "x = 12;y = 3;z = 1\ns = z\ncnt = 0\nwhile True:\n    s += y + z\n    if s > x:\n        break\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9865": {"id": 9865, "code": "N = 8\nS = \"))))((((\";T = \"))))((((\"\nwhile \"()\" in S:\n  S = S.replace(\"()\",\"\")\nprint(\"(\"*S.count(\")\")+T+S.count(\"(\")*\")\")", "coverage": [">", ">", ">", "!", ">"]}, "14939": {"id": 14939, "code": "n = 1;p = 1\na = [50]\nfrom math import factorial\no=0;e=0\nfor i in a:\n    if i%2==0:e+=1\n    else:o+=1\nif p==0:\n    odds=0\n    for i in range(0,o+1,2):\n        odds+=factorial(o)//factorial(i)//factorial(o-i)\nelse:\n    odds=0\n    for i in range(1,o+1,2):\n        odds+=factorial(o)//factorial(i)//factorial(o-i)\nprint(odds*2**e)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", ">", ">", "!", ">"]}, "11275": {"id": 11275, "code": "S = \"SUN\"\nA ={ \"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\nprint(A[S])", "coverage": [">", ">", ">"]}, "2331": {"id": 2331, "code": "N = 1;M = 1\na = N*(N-1) // 2\nb = M*(M-1) // 2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "6031": {"id": 6031, "code": "N = 5\ndiv,mod=divmod(N,2)\nprint(div+mod)", "coverage": [">", ">", ">"]}, "10255": {"id": 10255, "code": "N = 8\nS = \"))))((((\"\nleft = ''\nright = ''\nskip_idx = []\nfor idx, s in enumerate(S):\n    if idx in skip_idx:\n        continue\n    if s == ')':\n        left += '('\n    else:\n        skip_flag = 0\n        for n in range(idx+1, N):\n            if n in skip_idx:\n                continue\n            if S[n] == ')':\n                skip_idx.append(n)\n                skip_flag = 1\n                break\n        if not skip_flag:\n            right += ')'\nprint(left+S+right)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">"]}, "18069": {"id": 18069, "code": "s = \"1700\"\nx = int(s[:2])\ny = int(s[2:])\nif 1 <= x <= 12 and 1 <= y <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= x <= 12:\n    print(\"MMYY\")\nelif 1 <= y <= 12:\n    print(\"YYMM\")\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "3401": {"id": 3401, "code": "a = 20;b = 15\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", "!"]}, "18587": {"id": 18587, "code": "h = 3\nw = 7\nn = 10\ncount1 = 0\ncount2 = 0\nif h > w:\n  while w > 0:\n    count1 += h\n    if count1 >= n:\n      count2 += 1\n      break\n    else:\n      count2 += 1\n      w -= 1\nelse:\n  while h > 0:\n    count1 += w\n    if count1 >= n:\n      count2 += 1\n      break\n    else:\n      count2 += 1\n      h -= 1\nprint(count2)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "19356": {"id": 19356, "code": "u = 10\nif u % 2 == 1:\n  print (u*2)\nelse:\n  print (u)", "coverage": [">", ">", "!", "!", ">"]}, "15434": {"id": 15434, "code": "x = 64146;y = 123;z = 456\nprint((x - z) // (y + z))", "coverage": [">", ">"]}, "13523": {"id": 13523, "code": "d = \"happy,newyear,enjoy\"\nprint( d[:5] + \" \" + d[6:13] + \" \" +d[14:] )", "coverage": [">", ">"]}, "6762": {"id": 6762, "code": "H = 20;N = 3\nA = \"4 5 6\"\nlist_A=A.split()\nwaza=0\nfor i in range(0,N):\n    waza=waza+int(list_A[i])\nif waza>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9272": {"id": 9272, "code": "S = \"2017/01/07\"\nans = S[:3] + '8' + S[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "8251": {"id": 8251, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\neq = 1\ncnt = int()\nwhile eq<N:\n    eq += (K-1)\n    cnt +=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1599": {"id": 1599, "code": "n = 10;a = 7;b = 5\nprint(\"{0} {1}\".format(min(a,b),max(a + b - n,0)))", "coverage": [">", ">"]}, "7664": {"id": 7664, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nsum = 0\nfor i in range(n):\n    sum += a[i]\nif sum >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12699": {"id": 12699, "code": "x = \"6\"\nlst = ['7', '5', '3']\nif x in lst:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "2436": {"id": 2436, "code": "N = 1;M = 1\na = N*(N-1)\nb = M*(M-1)\nprint(int((a+b)/2))", "coverage": [">", ">", ">", ">"]}, "18657": {"id": 18657, "code": "h = 14\nw = 12\nn = 112\nprint(-(-n//max(h,w)))", "coverage": [">", ">", ">", ">"]}, "4852": {"id": 4852, "code": "a = \"internationalization\"\nprint(a[0] + str(len(a) - 2) + a[-1])", "coverage": [">", ">"]}, "12404": {"id": 12404, "code": "S = \"level\"\nS2=S[:(len(S)-1)//2]\nS3=S[(len(S)+3)//2-1:]\nif S==S[::-1] and S2==S2[::-1] and S3==S3[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17781": {"id": 17781, "code": "s = \"0112\"\nf,b = int(s[:2]),int(s[2:])\nif 1 <= f <= 12:\n  if 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= b <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "7116": {"id": 7116, "code": "h = 20;n = 3\na = [4, 5, 6]\nhitpoint=h\natack = a[:]\nfor e in atack:\n    hitpoint -= e\n    if hitpoint <= 0:\n        break\nif hitpoint <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "5486": {"id": 5486, "code": "n = 2\nif n%2==0:\n    x=int(n/2)\nelse:\n    x=int(n/2)+1\nprint(x)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4033": {"id": 4033, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nM1 += H1*60\nM2 += H2*60\nprint(M2-M1-K)", "coverage": [">", ">", ">", ">"]}, "15008": {"id": 15008, "code": "n = 2;p = 0\na = [1, 3]\nb = [0]*n\nfor i in range(n):\n    b[i]=a[i]%2\nans=2**(n-1)\nif p==1 and sum(b)==0:\n    ans = 0\nif p==0 and sum(b)==0:\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "18936": {"id": 18936, "code": "import math\nn = 12\nans = 0\nif n== 0:\n  print(0)\n  exit()\nm = math.floor(math.log(n,5))\nif n%2 == 1:\n  print(0)\nelse:\n  for j in range(1,m+1):\n    ans += n//((5**j)*2)\n  print(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "1015": {"id": 1015, "code": "s = \"112\"\nif int(s[0])<int(s[1]):\n    print(111*(int(s[0])+1))\nelif int(s[0])==int(s[1])<int(s[2]):\n    print(111*(int(s[0])+1))\nelse:\n    print(111*int(s[0]))", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "4743": {"id": 4743, "code": "s = \"xyz\"\ns1 = s[0]\ns2 = s[-1]\nprint(s1+str(len(s[1:-1]))+s2)", "coverage": [">", ">", ">", ">"]}, "3635": {"id": 3635, "code": "A = 12;B = 4\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "15601": {"id": 15601, "code": "X = 13;Y = 3;Z = 1\nprint((X-Z)//(Y+Z))", "coverage": [">", ">"]}, "12654": {"id": 12654, "code": "X = 5\nprint('YES') if X==3 or X==5 or X==7 else print('NO') ", "coverage": [">", ">"]}, "18742": {"id": 18742, "code": "H = 3\nW = 7\nN = 10\nprint(N//max(H,W) if N%max(H,W) == 0 else N//max(H,W)+1)", "coverage": [">", ">", ">", ">"]}, "1392": {"id": 1392, "code": "n = 111\nl =[111,222,333,444,555,666,777,888,999]\nwhile n not in l:\n    n += 1\nprint(n)", "coverage": [">", ">", ">", "!", ">"]}, "5399": {"id": 5399, "code": "S = 2\nq , mod = divmod(S , 2)\nprint(q+mod)", "coverage": [">", ">", ">"]}, "4382": {"id": 4382, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nst = h1*60 + m1\nend = h2*60 + m2\nprint(end-st-k)", "coverage": [">", ">", ">", ">"]}, "13815": {"id": 13815, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nup = None\nprev = None\nfor v in a:\n    if prev == v:\n        continue\n    if prev is not None:\n        if up is None:\n            up = (prev <= v)\n        else:\n            if (prev <= v) != up:\n                ans += 1\n                up = None\n    prev = v\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "12291": {"id": 12291, "code": "s = \"atcoder\"\ns1 = s[:len(s)//2]\ns2 = s[len(s)//2+1:]\nprint(\"Yes\" if s==s[::-1] and s1==s1[::-1] and s2==s2[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "9997": {"id": 9997, "code": "n = 3\ns = \"())\"\nnopen = 0\nsl = ''\nsr = ''\nfor c in s:\n    if c == '(':\n        nopen += 1\n    else:\n        if nopen == 0:\n            sl += '('\n        else:\n            nopen -= 1\nnopen = sum([1 if c == '(' else -1 for c in sl + s])\nsr = ')' * nopen\nprint(sl + s + sr)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "11337": {"id": 11337, "code": "import sys\nS = \"SUN\"\nif S == 'SUN':\n    print(7)\nif S == 'MON':\n    print(6)\nif S == 'TUE':\n    print(5)\nif S == 'WED':\n    print(4)\nif S == 'THU':\n    print(3)\nif S == 'FRI':\n    print(2)\nif S == 'SAT':\n    print(1)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!"]}, "2426": {"id": 2426, "code": "import math\nn = 1;m = 1\nnC2 = math.factorial(n) // (math.factorial(2) * math.factorial(n - 2)) if n >= 2 else 0\nmC2 = math.factorial(m) // (math.factorial(2) * math.factorial(m - 2)) if m >= 2 else 0\nprint(nC2 + mC2)", "coverage": [">", ">", ">", ">", ">"]}, "1399": {"id": 1399, "code": "n = 750\nif int(str(n)[0]*3) >= n:\n    print(str(n)[0]*3)\nelse:\n    print((int(str(n)[0]) + 1)*111)", "coverage": [">", ">", ">", "!", "!"]}, "10456": {"id": 10456, "code": "import math\nA = 8;B = 12;K = 2\nanslist=[]\nfor i in range(1,max(A,B)+1):\n    if (A%i==0)&(B%i==0):\n        anslist.append(i)\nprint(anslist[0-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8709": {"id": 8709, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3078": {"id": 3078, "code": "s = \"1111111111\"\nl = len(s)\nd = 1000\nfor i in range(l):\n    tmp = abs(int(s[i:i+3]) - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12088": {"id": 12088, "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nif m1 != m2:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "2788": {"id": 2788, "code": "s = \"1234567876\"\nminDiff = abs(int(s[:3]) - 753)\nfor i in range(1, len(s) - 2):\n    minDiff = min(minDiff, abs(int(s[i:i+3]) - 753))\nprint(minDiff)", "coverage": [">", ">", ">", ">", ">"]}, "17429": {"id": 17429, "code": "s = \"1700\"\ns_a = int(s[:2])\ns_b = int(s[2:])\nif 1 <= s_a <=12 and 1 <= s_b <=12:\n  ans = \"AMBIGUOUS\"\nelif not(1 <= s_a <=12) and 1 <= s_b <=12:\n  ans = \"YYMM\"\nelif 1 <= s_a <=12 and not(1 <= s_b <=12):\n  ans = \"MMYY\"\nelse:\n  ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "4972": {"id": 4972, "code": "import sys\ns = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\ni = s.pop(0)\nf = s.pop(-1)\nprint(i+str(len(s))+f)", "coverage": [">", ">", ">", ">", ">"]}, "9073": {"id": 9073, "code": "import sys\na = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nL=[a,b,c,d,e]\nfor i in range(4):\n  for j in range(i+1,5):\n    if abs(L[i]-L[j])>k:\n      print(\":(\")\n      sys.exit()\nprint(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4155": {"id": 4155, "code": "from datetime import datetime\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nt1=datetime(2020,5,30,H1,M1,0)\nt2=datetime(2020,5,30,H2,M2,0)\nd=t2-t1\nprint(d.seconds//60-K)", "coverage": [">", ">", ">", ">", ">", ">"]}, "7476": {"id": 7476, "code": "H = 20;N = 3\nprint('No' if sum(list(map(int,\"4 5 6\".split()))) < H else 'Yes')", "coverage": [">", ">"]}, "16474": {"id": 16474, "code": "import sys\nreadline = sys.stdin.readline\nn = 2\nA = [100, 0]\nA.sort(reverse=True)\nN = A[0]\nR = 0\ntmpR = 0\nfor i in range(1, n):\n    tmp = min(A[i], N-A[i])\n    if tmpR < tmp:\n        tmpR = tmp\n        R = A[i]       \nprint(N, R)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12652": {"id": 12652, "code": "x = 5;y = [3, 5, 7]\nif x in y:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "14060": {"id": 14060, "code": "N = 9\na_list = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nup_flag = None\nprev_a = a_list[0]\nfor a in a_list[1:]:\n  if up_flag is None:\n    if prev_a == a:\n      continue\n    up_flag = a > prev_a\n  if up_flag and a >= prev_a:\n    prev_a = a\n    continue\n  elif not up_flag and a <= prev_a:\n    prev_a = a\n    continue\n  else:\n    up_flag = None\n    count += 1\n    prev_a = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "8569": {"id": 8569, "code": "N = 7\nL1 = [3, 3, 4, 5, 4, 5, 3]\nL2 = [5, 3, 4, 4, 2, 3, 2]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1108": {"id": 1108, "code": "n = \"112\"\nk = int(n) % 111\nif k==0:\n    print(n)\nelse:\n    if n[0]>n[1] or (n[0]==n[1] and n[1]>n[2]):\n        print(n[0]*3)\n    else:\n        print((str(int(n[0])+1))*3)", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "2866": {"id": 2866, "code": "s = \"1234567876\"\nans = 999\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11607": {"id": 11607, "code": "S = \"SUN\"\nM = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nt = M.index(S)\nprint(7 - t)", "coverage": [">", ">", ">", ">"]}, "17810": {"id": 17810, "code": "x = 1700\nf=x//100\nd=x%100\nff=bool(1)\ndd=bool(1)\nif f==0 or f>12:\n  ff=0\nif d==0 or d>12:\n  dd=0\nif ff==1 and dd==1:\n  print(\"AMBIGUOUS\")\nelif ff==0 and dd==0:\n  print(\"NA\")\nelse:\n  if ff==1 and dd==0:\n    print(\"MMYY\")\n  else:\n    print(\"YYMM\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!"]}, "19383": {"id": 19383, "code": "import math\na = 999999999\nprint(a*2//math.gcd(a, 2))", "coverage": [">", ">", ">"]}, "12852": {"id": 12852, "code": "X = \"5\"\nyes = X==\"7\" or X==\"5\" or X==\"3\"\nprint('YES' if yes else 'NO')", "coverage": [">", ">", ">"]}, "9354": {"id": 9354, "code": "char = \"2017/01/07\"\nindex = 3\nprint(char[:index] + '8' + char[index + 1:])", "coverage": [">", ">", ">"]}, "15768": {"id": 15768, "code": "X = 100000;Y = 1;Z = 1\na=(X-Z)//(Y+Z)\nprint(a)", "coverage": [">", ">", ">"]}, "5770": {"id": 5770, "code": "n = \"5\"\na=(int(n)+1)//2\nprint(a)", "coverage": [">", ">", ">"]}, "8308": {"id": 8308, "code": "import math\nn = 4;k = 3\ns = [2, 3, 1, 4]\ns.sort()\ns.remove(s[0])\nans = math.ceil(len(s)/(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1361": {"id": 1361, "code": "n = 112\nfor i in range(1, 10):\n    ans = i * 111\n    if ans >= n:\n        print(ans)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "13733": {"id": 13733, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nstart_mins = h1 * 60 + m1\nend_min = h2 * 60 + m2\nis_up = end_min - start_mins\ncan_start = is_up - k\nprint(can_start)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19390": {"id": 19390, "code": "n = 999999999\nprint(n+n%2*n)", "coverage": [">", ">"]}, "8052": {"id": 8052, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nfor i in range(n):\n    if a[i] == 1:\n        m = i\n        break\nl = [m - k + 1, m]\nans = 114514\nfor i in range(k):\n    x = l[0] + i\n    y = l[1] + i\n    if not x < 0 and not y >= n:\n        c = 1\n        while True:\n            if x <= 0:\n                break\n            x -= k - 1\n            c += 1\n        while True:\n            if y >= n - 1:\n                break\n            y += k - 1\n            c += 1\n        if c < ans:\n            ans = c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10140": {"id": 10140, "code": "n = 6\ns = \")))())\"\nr = 0\nl = 0\nfor i in s:\n    if i == \"(\":\n        r += 1\n    else:\n        if r == 0:\n            l += 1\n        else:\n            r -= 1\nelse:\n    print(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", ">"]}, "7039": {"id": 7039, "code": "H = 10;N = 3\nA = [4, 5, 6]\nAS = sum(A)\nif AS >= H:\n\tprint('Yes')\nelse:\n\tprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13144": {"id": 13144, "code": "if int(\"5\") in [7, 5, 3]: print(\"YES\")\nelse: print(\"NO\")", "coverage": [">", "!"]}, "1654": {"id": 1654, "code": "N = 100;A = 100;B = 100\nM = min(A,B)\nm = max(0,A+B-N)\nprint(M,m)", "coverage": [">", ">", ">", ">"]}, "17809": {"id": 17809, "code": "x = 112\nf=x//100\nd=x%100\nff=bool(1)\ndd=bool(1)\nif f==0 or f>12:\n  ff=0\nif d==0 or d>12:\n  dd=0\nif ff==1 and dd==1:\n  print(\"AMBIGUOUS\")\nelif ff==0 and dd==0:\n  print(\"NA\")\nelse:\n  if ff==1 and dd==0:\n    print(\"MMYY\")\n  else:\n    print(\"YYMM\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3956": {"id": 3956, "code": "X = 12;Y = 3;Z = 1\nif (X-2*Z)%(Y+Z) >= Y:\n    print((X-2*Z)//(Y+Z)+1)\nelse:\n    print((X-2*Z)//(Y+Z))", "coverage": [">", ">", "!", "!", ">"]}, "7520": {"id": 7520, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nans = 'No'\ntotal = 0\nfor i in range(n):\n    total += a[i]\n    if total >= h:\n        ans = 'Yes'\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1454": {"id": 1454, "code": "import math\nN = 112\nprint(111*math.ceil(N/111))", "coverage": [">", ">", ">"]}, "9368": {"id": 9368, "code": "s = \"2017/01/07\"\nt = s.replace('7', '8', 1)\nprint(t)", "coverage": [">", ">", ">"]}, "16517": {"id": 16517, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nncand = A[-1]\nccand = A[0]\nnhalf = ncand // 2\ndiff = abs(nhalf - ccand)\nfor i in range(1, N-1):\n    d = abs(nhalf - A[i])\n    if diff >= d:\n        ccand = A[i]\n        diff = d\nprint(ncand, ccand)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13233": {"id": 13233, "code": "import sys\ninput = sys.stdin.readline\nS = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">", ">", ">"]}, "11654": {"id": 11654, "code": "S = \"SAT\"\nlis = ['SUN',\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint(7-lis.index(S))", "coverage": [">", ">", ">"]}, "2017": {"id": 2017, "code": "n = 100;a = 100;b = 100\nM=min(a,b)\nif a+b<=n:\n  m=0\nelse:\n  m=a+b-n\nprint(M,m)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "6676": {"id": 6676, "code": "h = 20;n = 3\nA = [4, 5, 6]\nif h-sum(A)>0 :\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "18129": {"id": 18129, "code": "S = 112\nL = S // 100 \nR = S % 100 \nif L > 12 or L == 0:\n  if R > 12 or R == 0: print('NA')\n  else: print('YYMM')\nelse:\n  if R > 12 or R == 0: print('MMYY')\n  else: print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "17460": {"id": 17460, "code": "s = \"1905\"\nans=[0]*2\na=int(s[:2])\nb=int(s[2:])\nif 1<=a<=12:\n    ans[0]=1\nif 1<=b<=12:\n    ans[1]=1\nif ans[0]==ans[1]==1:\n    print('AMBIGUOUS')\nelif ans[0]==ans[1]==0:\n    print('NA')\nelif ans[0]==1 and ans[1]==0:\n    print('MMYY')\nelse:\n    print('YYMM')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "11060": {"id": 11060, "code": "s = \"akasaka\"\nn = len(s)\nz = 'Yes'\nfor i in range(n//2):\n    if s[i] != s[-1-i]:\n        z = 'No'\nif z == 'Yes':\n    for h in range(len(s[:(n-1)//2])):\n        if s[:(n-1)//2][h] != s[:(n-1)//2][-1-h]:\n            z = 'No'\n            break\nif z == 'Yes':\n    for j in range(len(s[((n+3)//2)-1:])):\n        if s[((n+3)//2)-1:][j] != s[((n+3)//2)-1:][-1-j]:\n            z = 'No'\n            break\nprint(z)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "6495": {"id": 6495, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans=0\nfor i in range(N):\n    b=B[i]\n    ab=bisect.bisect_left(A,b)\n    bc=N-bisect.bisect_right(C,b)\n    ans+=ab*bc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11920": {"id": 11920, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(1 if M1 != M2 else 0)", "coverage": [">", ">", ">"]}, "16359": {"id": 16359, "code": "from bisect import bisect_right\nn = 2\na = [0, 100]\npos = bisect_right(a, a[-1]/2)\nif pos == 0 or abs(a[-1]/2 - a[pos-1]) > abs(a[-1]/2 - a[pos]):\n    print(a[-1], a[pos])\nelse:\n    print(a[-1], a[pos-1])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15339": {"id": 15339, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nx = 64145;y = 123;z = 456\nq = x // (y + z)\nr = x % (y + z)\nans = q if z <= r else q - 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9173": {"id": 9173, "code": "S = \"2017/01/31\"\nS = S.replace(\"2017\",\"2018\")\nprint(S)", "coverage": [">", ">", ">"]}, "17913": {"id": 17913, "code": "S = \"1905\"\nif 0 < int(S[:2]) < 13 and 0 < int(S[2:]) < 13:\n    print('AMBIGUOUS')\nelif 0 < int(S[:2]) < 13:\n    print('MMYY')\nelif 0 < int(S[2:]) < 13:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "10893": {"id": 10893, "code": "s = \"level\"\nfor i in [s, s[:len(s)//2], s[len(s)//2+1:]]:\n  if i != i[::-1]:\n    print(\"No\")\n    break\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11840": {"id": 11840, "code": "m_1 = 11;d_1 = 16\nm_2 = 11;d_2 = 17\nif d_2!=d_1+1:\n\tprint(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "4880": {"id": 4880, "code": "s = \"smiles\"\nprint(s[0],len(s[1:-1]),s[-1],sep=\"\")", "coverage": [">", ">"]}, "2350": {"id": 2350, "code": "N = 4;W = 3\ntotal1 = 0\ntotal2 = 0\nif N>1:\n  total1 = N*(N-1)//2\nelse:\n  total1 = 0\nif W>=2:\n  total2 = W*(W-1)//2\nelse:\n  total2 = 0\nprint(total1+total2)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "19017": {"id": 19017, "code": "import sys\nN = 12\nif N % 2 == 1:\n    print(0)\n    sys.exit()\ntot = 0\ni = 10\nwhile(N >= i):\n    tot += N // i\n    i *= 5\nprint(tot)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "19430": {"id": 19430, "code": "N = 3\n[print(N) if N%2 == 0 else print(N*2)]  ", "coverage": [">", ">"]}, "10194": {"id": 10194, "code": "n = 6\nS = \")))())\"\nT = S.replace('()', '')\nfor _ in range(50):\n  T = T.replace('()', '')\nprint('(' * T.count(')') + S + ')' * T.count('('))", "coverage": [">", ">", ">", ">", ">", ">"]}, "7407": {"id": 7407, "code": "h = 10;a = 3\nm = [4, 5, 6]\nans='No'\nif h<=sum(m): ans='Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2752": {"id": 2752, "code": "a = \"1479\"\nif(a=='1479'):\n\tprint('YES')\nelse:\n\tprint('NO')", "coverage": [">", ">", ">", "!", "!"]}, "6201": {"id": 6201, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\nfor i in range(n):\n  d=bisect.bisect_left(a,b[i])\n  e=bisect.bisect_right(c,b[i])\n  ans+=d*(n-e)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14278": {"id": 14278, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncheck = 0\nbefore = a[0]\nfor i in a[1:]:\n    if i == before:\n        continue\n    if before > i:\n        if check == 0:\n            check = 1\n        elif check == -1:\n            ans += 1\n            check = 0\n    else:\n        if check == 0:\n            check = -1\n        elif check == 1:\n            ans += 1\n            check = 0\n    before = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">"]}, "17485": {"id": 17485, "code": "S = \"0112\"\na = S[0:2]\nb = S[2:4]\nA = int(a)\nB = int(b)\nif A>=1 and A <=12:\n  if B>= 1 and B <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if B>= 1 and B<= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "19337": {"id": 19337, "code": "num = 3\nif num % 2 == 0:\n    print(num)\nelse:\n    print(num * 2)", "coverage": [">", ">", "!", "!", ">"]}, "6158": {"id": 6158, "code": "import bisect\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in range(len(b)):\n    la=bisect.bisect_left(a, b[i])\n    ra=bisect.bisect_right(c, b[i])\n    ans+=la*(len(c)-ra)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7347": {"id": 7347, "code": "monster_hp = 210;quantity_of_skills = 5\nskills = map(int, \"31 41 59 26 53\".split())\nskills_list = list(skills)\ntotal_damages = 0\nfor i in skills_list:\n    total_damages += i\nif monster_hp <= total_damages:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11059": {"id": 11059, "code": "s = \"atcoder\"\nn = len(s)\nt = s[:(n-1)//2]\nu = s[(n+3)//2-1:]\nif (s == s[::-1]\n    and t == t[::-1]\n    and u == u[::-1]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "18339": {"id": 18339, "code": "h = 14\nw = 12\nn = 112\ncnt = 0\nblk = 0\nif h > w:\n  for i in range(w):\n    blk += h\n    cnt += 1\n    if blk >= n:\n      break\nelse:\n  for j in range(h):\n    blk += w\n    cnt += 1\n    if blk >= n:\n      break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "11642": {"id": 11642, "code": "s = \"SAT\"\nl = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(l.index(s) + 1)", "coverage": [">", ">", ">"]}, "2886": {"id": 2886, "code": "S = \"1111111111\"\nN =700\nfor i in range (len(S)-2):\n  n = abs (int(S[i:i+3])-753)\n  if n < N:\n    N = n\nprint (N)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14655": {"id": 14655, "code": "N = 2;P = 0\nA = [1, 3]\nsu = 2 ** N\nguusu = True\nfor a in A:\n    if a % 2 == 1:\n        guusu = False\n        break\nif P == 0:\n    print(su if guusu else su//2)\nelse:\n    print(0 if guusu else su//2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3350": {"id": 3350, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 15\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "3524": {"id": 3524, "code": "a = 20;b = 15\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "14731": {"id": 14731, "code": "N = 1;P = 1\nA = [50]\ndic = {\"even\":0, \"odd\":0}\nfor i in range(N):\n    if A[i] % 2 == 0:\n        dic[\"even\"] += 1\n    else:\n        dic[\"odd\"]  += 1\nif dic[\"odd\"] == 0:\n    if P == 1:\n        print(0)\n    else:\n        print(2 ** dic[\"even\"])\nelse:\n    print(2 ** (N-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!"]}, "178": {"id": 178, "code": "s = \"xyz\"\nk = 4\nans = []\nfor i in range(len(s)):\n    if 123 - ord(s[i]) <= k:\n        if s[i] == \"a\":\n            ans.append(\"a\")\n            continue\n        ans.append(\"a\")\n        k -= 123 - ord(s[i])\n    else:\n        ans.append(s[i])\nlast = chr((ord(ans[-1])-97+k)%26 + 97)\nans[-1] = last\nprint(*ans, sep = \"\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "1986": {"id": 1986, "code": "n = 10;a = 7;b = 5\nprint(str(min(a,b)) + \" \" + str(max(0,a + b - n)))", "coverage": [">", ">"]}, "16859": {"id": 16859, "code": "s = \"D D\"\nprint(\"H\" if s==\"H H\" or s==\"D D\" else \"D\")", "coverage": [">", ">"]}, "16077": {"id": 16077, "code": "A = 20;B = 15\nif A - 2*B > 0 :\n    print(A-2*B)\nelse :\n    print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "9828": {"id": 9828, "code": "N = 3\nS = \"())\"\ndic = {'(':1, ')':-1}\nrlt = ''\ncnt = 0\nfor s in S:\n  cnt += dic[s]\n  rlt += s\n  if cnt < 0:\n    rlt = '(' + rlt\n    cnt = 0\nif cnt > 0:\n  rlt += ')'*cnt\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13968": {"id": 13968, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = n\nprev = a[0]\ntrend ='N'\nfor i in range(1, n):\n    if a[i] > prev:\n        if (trend == 'U' or trend == 'N'):\n            cnt -= 1\n            trend ='U'\n        else:\n            trend = 'N'\n    if a[i] < prev:\n        if (trend == 'D' or trend == 'N'):\n            cnt -= 1\n            trend = 'D'\n        else:\n            trend = 'N'\n    if a[i] == prev:\n        cnt -= 1\n    prev = a[i]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "12920": {"id": 12920, "code": "X = 5\nif X % 2 == 1 and 3 <= X <= 7:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "10435": {"id": 10435, "code": "A = 1;B = 1;K = 1\nM = min(A, B)\ncnt = 0\nfor i in range(M):\n    if A%(M-i) == 0 and B%(M-i) == 0:\n        cnt += 1\n        if cnt == K:\n            print(M-i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8644": {"id": 8644, "code": "n = 1\nal = [2]\nbl = [3]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17866": {"id": 17866, "code": "S = \"0112\"\nif 1 <= int(S[:2]) <= 12 and not (1 <= int(S[2:]) <= 12):\n    print('MMYY')\nelif not (1 <= int(S[:2]) <= 12) and 1 <= int(S[2:]) <= 12:\n    print('YYMM')\nelif 1 <= int(S[:2]) <= 12 and 1 <= int(S[2:]) <= 12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "1835": {"id": 1835, "code": "N = 10;A = 7;B = 5\nans1 = B if A>B else A\nans2 = A+B-N if A+B-N >= 0 else 0\nprint(\"{} {}\".format(ans1, ans2))", "coverage": [">", ">", ">", ">"]}, "9098": {"id": 9098, "code": "date = \"2017/01/07\"\nprint(date.replace(\"2017\",\"2018\",1))", "coverage": [">", ">"]}, "5896": {"id": 5896, "code": "n = 5\nprint(-1*(n//(-2)))", "coverage": [">", ">"]}, "9967": {"id": 9967, "code": "s = \"))))((((\";t = \"))))((((\";l = \"(\";r = \")\";p = \"()\"\nexec(\"t=t.replace('()','');\"*50)\nc=t.count;print(l*c(r)+s+r*c(l))", "coverage": [">", ">", ">"]}, "4270": {"id": 4270, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;K = 120\ndiff = (h2-h1) * 60 + m2-m1\nprint(diff - K)", "coverage": [">", ">", ">"]}, "10372": {"id": 10372, "code": "a = 8;b = 12;k = 2\nans = []\nif a > b:\n    n = a\nelif a < b:\n    n = b\nelse:\n    n = a\nfor x in range(1,n+1):\n    if b % x == 0:\n        if a % x == 0:\n            ans.append(x)\nprint(ans[-k])", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "8914": {"id": 8914, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4666": {"id": 4666, "code": "inpuStr = \"internationalization\"\nprint(f'{inpuStr[0]}{len(inpuStr[0:-2])}{inpuStr[-1]}')", "coverage": [">", ">"]}, "5041": {"id": 5041, "code": "s = \"internationalization\"\napple = []\nfor i in s:\n    apple.append(i)\na = apple.pop(0)\nb = apple.pop(-1)\nc = str(len(apple))\nd = a + c + b\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15917": {"id": 15917, "code": "import sys\ninput = sys.stdin.readline\na = 12;b = 4\nif 2*b >= a:\n    print(0)\nelse:\n    print(a - 2*b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19026": {"id": 19026, "code": "n = 12\nif n % 2 == 1:\n    print(0)\n    exit(0)\ncnt = 0\nfive = 2 * 5\nwhile n // five > 0:\n    cnt += n // five\n    five *= 5\nprint(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "1091": {"id": 1091, "code": "S = \"111\"\nif int(S[0]) >= int(S[1]) and int(S[0]) >= int(S[2]):\n    print(S[0]*3)\nelse:\n    print(str(int(S[0])+1)*3)", "coverage": [">", ">", ">", "!", "!"]}, "11871": {"id": 11871, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1<M2:print(1)\nelse:print(0)", "coverage": [">", ">", ">", "!"]}, "13825": {"id": 13825, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 6\na = [1, 2, 3, 2, 2, 1]\nans=0\nup = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        if up == -1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=1\n    elif a[i] > a[i+1]:\n        if up == 1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=-1\nans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "368": {"id": 368, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n  if s[i] != 'a' and 123 - ord(s[i]) <= k:\n    k -= (123 - ord(s[i]))\n    s[i] = \"a\"\nk %= 26\nif ord(s[-1]) + k > 122:\n  s[-1] = chr(ord(s[-1]) + k - 26)\nelse:\n  s[-1] = chr(ord(s[-1]) + k)\nans = \"\"\nfor i in s:\n  ans += i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "8999": {"id": 8999, "code": "import itertools\nif __name__ == \"__main__\":\n    a = 15\n    b = 18\n    c = 26\n    d = 35\n    e = 36\n    k = 18\n    l_an = [a, b, c, d, e]\n    ret = \"Yay!\"\n    for i in list(itertools.combinations(l_an, 2)):\n        if i[1] - i[0] > k:\n            ret = \":(\"\n            break\n    print(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7485": {"id": 7485, "code": "H = 210;N = 5\ndata = [31, 41, 59, 26, 53]\nif H - sum(data) > 0:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", "!", "!", ">"]}, "7049": {"id": 7049, "code": "str = \"210 5\"\nstr2 = \"31 41 59 26 53\"\nnums  = str.split()\nnums2  = str2.split()\nif len(nums2) != int(nums[1]):\n    print(\"error\")\nelse:\n   totalDamege = 0\n   for num in nums2:\n       totalDamege += int(num)\n   if int(nums[0]) <= totalDamege:\n       print(\"Yes\")\n   else:\n       print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "15494": {"id": 15494, "code": "x = 12;y = 3;z = 1\nans = x // (y + z)\nif x - ans*(y + z) < z:\n    ans = max(0, ans-1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "8164": {"id": 8164, "code": "N = 8;K = 3\nalist = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 1\nN -= K\nwhile N > 0:\n    N -= K-1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4128": {"id": 4128, "code": "list = [10, 0, 15, 0, 30]\nans = (60-list[1])+list[3]+(list[2]-list[0]-1)*60-list[4]\nprint(ans)", "coverage": [">", ">", ">"]}, "14212": {"id": 14212, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nstatus = 0\nprev = a[0]\nfor i in a:\n    diff = i - prev\n    if diff == 0:\n        pass\n    elif diff > 0:\n        if status >= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    else:\n        if status <= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "5829": {"id": 5829, "code": "import math\na = 100\nprint(math.ceil(a/2))", "coverage": [">", ">", ">"]}, "6833": {"id": 6833, "code": "H = 10;N = 3\na = [4, 5, 6]\nif sum(a) >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "17846": {"id": 17846, "code": "S = \"1700\"\nA = int(S[0] + S[1])\nB = int(S[2] + S[3])\nif 1 <= A <= 12 and 1 <= B <= 12:\n    print('AMBIGUOUS')\nelif (A > 12 or A <= 0) and 1 <= B <= 12:\n    print('YYMM')\nelif 1 <= A <= 12 and (B > 12 or B <= 0):\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "8311": {"id": 8311, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nLeft  = A.index(1)\nRight = (N-1)-Left\nCount = (Right%(K-1)!=0)+Right//(K-1)\nLeft -= ((K-1)-Right%(K-1))%(K-1)\nCount += (Left%(K-1)!=0)+Left//(K-1)\nprint(Count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16257": {"id": 16257, "code": "n = 5\na = [6, 9, 4, 2, 11]\na = sorted(a)\nx = a[-1]/2\nans = 0\ndis = float(\"Inf\")\nfor i in range(n-1):\n    if dis > abs(x-a[i]):\n        ans = a[i]\n        dis = abs(x-a[i])\nprint(a[-1],ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8029": {"id": 8029, "code": "import bisect\nN = 4;K = 3\nA = [2, 3, 1, 4]\nif N==K: print(1);exit()\nN-=K\nans = 1\nwhile N>0:\n    N -=K-1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7435": {"id": 7435, "code": "H = 10;N = 3\nspecial_move = [4, 5, 6]\nif H <= sum(special_move):\n    result = 'Yes'\nelse:\n    result = 'No'\nprint(result)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15166": {"id": 15166, "code": "x = 12;y = 3;z = 1\nx-=z\nans=x//(y+z)\nrem=x%(y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "14167": {"id": 14167, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nflag=0\nanswer=1\nif N==1:\n    print(1)\nelse:\n    if A[0] < A[1]:\n        flag = 1\n    elif A[0]>A[1]:\n        flag = -1\n    for n in range(N - 1):\n        if flag == 1:\n            if A[n] <= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        elif flag == -1:\n            if A[n] >= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        else:\n            if A[n] == A[n + 1]:\n                pass\n            elif A[n] < A[n + 1]:\n                flag = 1\n            else:\n                flag = -1\n    print(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "2139": {"id": 2139, "code": "N = 100;A = 100;B = 100\nma = min(A,B)\nmi = A+B-N\nif mi<=0:\n    mi = 0\nprint(ma,mi)", "coverage": [">", ">", ">", ">", "!", ">"]}, "17416": {"id": 17416, "code": "s = \"0112\"\nyymm = 1 <= int(s[2:]) <= 12\nmmyy = 1 <= int(s[:2]) <= 12\nif yymm and mmyy:\n    print('AMBIGUOUS')\nelif yymm:\n    print('YYMM')\nelif mmyy:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10976": {"id": 10976, "code": "s = \"akasaka\"\nn = len(s)\nsl = s[:n//2]\nsr = s[n//2+1:]\nif sl == sr and sr ==  sr[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18740": {"id": 18740, "code": "H = 14\nW = 12\nN = 112\nc=0\nans=0\nif H>=W:\n    while c>=0:\n        c+=H\n        ans+=1\n        if c>=N:\n            break\nelse:\n    while c>=0:\n        c+=W\n        ans+=1\n        if c>=N:\n            break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "17963": {"id": 17963, "code": "S = \"1700\"\na = int(S[0:2])\nb = int(S[2:])\nif 1 <= a <= 12 and a <= b <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n  print(\"MMYY\")\nelif 1 <= b <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "13934": {"id": 13934, "code": "import sys\nN = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnum, cut = 0, 0\nif N == 1:\n    print(1)\n    sys.exit()\nfor i in range(N-1):\n    if a[i] == a[i+1]:\n        continue\n    if a[i] < a[i+1] and num == 0:\n        num  = 1\n        cut += 1\n    elif a[i] > a[i+1] and num == 0:\n        num = -1\n        cut += 1\n    elif num == 1 and a[i] > a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\n    elif num == -1 and a[i] < a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "9489": {"id": 9489, "code": "s = \"2017/01/31\"\nans = '2018' + s[4:]\nprint(ans)", "coverage": [">", ">", ">"]}, "3407": {"id": 3407, "code": "A = 20;B = 15\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17025": {"id": 17025, "code": "N = ['H', 'H']\nprint('H' if (N[0]=='H' and N[1] == 'H') or (N[0]=='D' and N[1] == 'D') else 'D')", "coverage": [">", ">"]}, "13042": {"id": 13042, "code": "x = 5\nif x==3 or x==5 or x==7:print('YES')\nelse:print('NO')", "coverage": [">", ">", "!"]}, "1574": {"id": 1574, "code": "n = 750\nprint(((n+110)//111)*111)", "coverage": [">", ">"]}, "12939": {"id": 12939, "code": "x = \"6\"\nif x in '357':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "553": {"id": 553, "code": "s = \"codefestival\"\nk = 100\nans = \"\"\nfor i in range(len(s)-1):\n    cost = ord(\"z\")+1-ord(s[i])\n    if s[i] == \"a\" or k < cost:\n        ans += s[i]\n    else:\n        ans += \"a\"\n        k -= cost\nc = s[-1]\nk %= 26\nfor _ in range(k):\n    if c == \"z\": c = \"a\"\n    else: c = chr(ord(c)+1)\nans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18313": {"id": 18313, "code": "h = 2\nw = 100\nn = 200\nif h>w:\n  if n%h==0:\n    ct=n//h\n  else:\n    ct=n//h+1\nelse:\n  if n%w==0:\n    ct=n//w\n  else:\n    ct=n//w+1\nprint(ct)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "11287": {"id": 11287, "code": "s = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nss = \"SUN\"\nprint(7-s.index(ss))", "coverage": [">", ">", ">"]}, "12184": {"id": 12184, "code": "M_1 = 11;D_1 = 30\nM_2 = 12;D_2 = 1\nif M_1 != M_2:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6164": {"id": 6164, "code": "from bisect import bisect_left, bisect\nn = 6\nla = [2, 3, 6, 14, 53, 159]\nlb = [58, 9, 79, 323, 84, 6]\nlc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in lb:\n    ans+=bisect_left(la,i)*(len(lc)-bisect(lc,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3033": {"id": 3033, "code": "s = \"1234567876\"\nans = 753\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    gap = abs(753-num)\n    if gap < ans:\n        ans = gap\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12950": {"id": 12950, "code": "d = 5\nprint(\"YES\" if d==3 or d==5 or d==7 else \"NO\")", "coverage": [">", ">"]}, "18316": {"id": 18316, "code": "h = 2\nw = 100\nprint((int(\"200\")-1)//max(h,w)+1)", "coverage": [">", ">", ">"]}, "13128": {"id": 13128, "code": "x = \"5\"\nif x in \"753\":\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "10946": {"id": 10946, "code": "s = \"atcoder\"\nn = len(s)\na, b = s[:(n - 1) // 2], s[(n + 1) // 2:]\nprint(\"Yes\" if s == s[::-1] and a == a[::-1] and b == b[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "2141": {"id": 2141, "code": "n = 10;a = 7;b = 5\nans_max=min(a,b)\nans_min=max(a+b-n,0)\nprint(ans_max,ans_min)", "coverage": [">", ">", ">", ">"]}, "11590": {"id": 11590, "code": "x = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI',  'SAT', 'SUN']\ny = 6\nif (y == 0):\n      print(7)\nelse:\n      print(7-y)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1697": {"id": 1697, "code": "n = 10;a = 3;b = 5\nif n-(a+b)>0:\n    print(min(a,b), 0)\nelse:\n    print(min(a,b), abs(n-(a+b)))", "coverage": [">", ">", ">", "!", "!"]}, "10777": {"id": 10777, "code": "s = \"atcoder\"\ns1 = list(s[:((len(s)) - 1) // 2])\ns2 = list(s[(len(s) + 2) // 2:])\nif s1 == s2:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "1125": {"id": 1125, "code": "n = ['1', '1', '1']\nN = [int(n[i]) for i in range(len(n))]\nif N[0] == max(N):\n  print(max(N) * 100 + max(N)*10 + max(N))\nelse:\n  m = N[0]+1\n  print(m * 100 + m * 10 + m)", "coverage": [">", ">", ">", ">", "!", "!", "!"]}, "8626": {"id": 8626, "code": "n = 5\nx = [3, 2, 2, 4, 1]\ny = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    ans=max(ans,sum(x[:i+1])+sum(y[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7141": {"id": 7141, "code": "H = 10;N = 3\nA = [4, 5, 6]\nfor i in range(N) :\n    H = H - A[i]\nif H > 0 :\n    print(\"No\")\nelse :\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "9949": {"id": 9949, "code": "N = 6\nS = \")))())\"\nl, r = 0, 0\nfor s in S:\n    if s == \"(\":\n        l += 1\n    else:\n        r += 1\n        if l > 0:\n            l -= 1\n            r -= 1\nprint(\"(\"*r+S+\")\"*l)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3723": {"id": 3723, "code": "N = 12;M = 4\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "8643": {"id": 8643, "code": "n = 7\nal = [3, 3, 4, 5, 4, 5, 3]\nbl = [5, 3, 4, 4, 2, 3, 2]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14767": {"id": 14767, "code": "N = 3;P = 0\nA = [1, 1, 1]\nx,y=1,0\nfor a in A:\n    if a%2:\n        x,y=x+y,x+y\n    else:\n        x,y=x*2,y*2\nprint(y if P else x)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12618": {"id": 12618, "code": "import sys\nA = 1;B = 1;K = 1\nmini = min(A, B)\ndivisors = []\nfor i in range(1, mini + 1):\n    if A % i == 0 and B % i == 0:\n        divisors.append(i)\ndivisors = divisors[::-1]\nprint(divisors[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8962": {"id": 8962, "code": "n = 1\nl1 = [2]\nl2 = [3]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "7357": {"id": 7357, "code": "H = 10;N = 3\nN = [4, 5, 6]\nprint(\"Yes\") if(sum(N) >= H) else print(\"No\")", "coverage": [">", ">", ">"]}, "15992": {"id": 15992, "code": "a1 = \"12 4\"\na2=[i for i in a1.split()]\na3,a4=[a2[i] for i in (0,1)]\nA,B=int(a3),int(a4)\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">", ">"]}, "8376": {"id": 8376, "code": "n = 5\nx = [3, 2, 2, 4, 1]\ny = [1, 2, 2, 2, 1]\nmx=0\nfor i in range(n):\n  ans=sum(x[:i+1])+sum(y[i:])\n  if ans>mx:\n    mx=ans\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11561": {"id": 11561, "code": "S = \"SAT\"\nDAYS_TO_NUM = {'SUN':0, 'MON': 1, 'TUE': 2, 'WED': 3, 'THU': 4, 'FRI': 5, 'SAT': 6}\nprint(7 - DAYS_TO_NUM[S])", "coverage": [">", ">", ">"]}, "14269": {"id": 14269, "code": "num = 6\nseq = [1, 2, 3, 2, 2, 1]\nprev = None\nincrease = None\ncount = 0\nprev = seq[0]\nfor x in seq[1:]:\n    if increase is True:\n        if x >= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == prev:\n            pass\n        elif x > prev:\n            increase = True\n        else:\n            increase = False\n    prev = x\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13345": {"id": 13345, "code": "s = \"abcde,fghihgf,edcba\"\nprint(' '.join(s.split(',')))", "coverage": [">", ">"]}, "8230": {"id": 8230, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nans = 1 if n//k > 0 else 0 \nmod = (n-k)//(k-1) + min((n-k)%(k-1), 1)\nprint(ans + mod)", "coverage": [">", ">", ">", ">", ">"]}, "2974": {"id": 2974, "code": "import sys\ninput = sys.stdin.readline\nS = \"35753\"\nans = 999\nfor i in range(len(S) - 3):\n    ans = min(abs(int(S[i:i+3])-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12518": {"id": 12518, "code": "A = 8;B = 12;K = 2\ncount = 0\nfor i in range(1, 100):\n    if A % i == 0:\n        sho = A / i\n        if B % sho == 0:\n            count += 1\n    if count == K:\n        print(int(sho))\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17151": {"id": 17151, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    print(b)\nelse:\n    if b == 'H': print('D')\n    else: print('H')", "coverage": [">", ">", "!", "!", ">", ">"]}, "15179": {"id": 15179, "code": "x = 64145;y = 123;z = 456\nx-=z\nprint((x-x%(y+z))//(y+z))", "coverage": [">", ">", ">"]}, "5836": {"id": 5836, "code": "N = 5\nans = N//2 + N%2\nprint(ans)", "coverage": [">", ">", ">"]}, "2311": {"id": 2311, "code": "N = 10;A = 3;B = 5\nResMax = min(A, B)\nResMin = max(0, A+B-N)\nprint(ResMax, ResMin)", "coverage": [">", ">", ">", ">"]}, "8462": {"id": 8462, "code": "N = 1\na1 = [2]\na2 = [3]\nMAX=0\nfor i in range(N):\n  tmp = sum(a1[:i+1])+sum(a2[i:])\n  MAX = max(MAX,tmp)\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9831": {"id": 9831, "code": "t=s=\"())\"\nt = \"())\";s = \"())\"\nprint(\"(\"*s.count(\")\")+t+\")\"*s.count(\"(\"))", "coverage": [">", ">", ">"]}, "5021": {"id": 5021, "code": "s = \"smiles\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(''.join(ans))", "coverage": [">", ">", ">"]}, "12177": {"id": 12177, "code": "_ =  \"11 16\"\nd2 = 17\nif d2 == 1:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7408": {"id": 7408, "code": "h = 20;a = 3\nm = [4, 5, 6]\nans='No'\nif h<=sum(m): ans='Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "4029": {"id": 4029, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif m2 >= m1:\n    time = (h2 - h1)*60 + m2 - m1\nelif m2 < m1:\n    time = (h2 - h1 - 1) * 60 + m2 + 60 - m1\nprint(time-k)", "coverage": [">", ">", ">", "!", "!", ">"]}, "7468": {"id": 7468, "code": "H = 20;N = 3\nA = [4, 5, 6]\nA = sum(A)\nif H > A:\n    ans = \"No\"\nelse:\n    ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4914": {"id": 4914, "code": "s = \"xyz\"\nfir=s[0]\nlas=s[-1]\ns=s[1:]\ns=s[:-1]\nprint(fir+str(len(s))+las)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18918": {"id": 18918, "code": "N = 5\nif N%2:\n    ans = 0\nelse:\n    ans = 0\n    d = 10\n    while d <= N:\n        ans += N//d\n        d *= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "11670": {"id": 11670, "code": "W = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nS = \"SAT\"\nfor i, num in enumerate(W):\n  if S == num:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "14437": {"id": 14437, "code": "n = 7\nls = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ni = 0\nflag = 10\nwhile i < n-1:\n    if ls[i] < ls[i+1] and flag == 10:\n        flag = True\n    elif ls[i] > ls[i+1] and flag == 10:\n        flag = False\n    if flag == True:\n        if ls[i] > ls[i+1]:\n            cnt += 1\n            flag = 10\n    elif flag == False:\n        if ls[i] < ls[i+1]:\n            cnt += 1\n            flag = 10\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10009": {"id": 10009, "code": "N = 3\nS = \"())\"\nneed_left = 0\npointer = 0\nfor i in range(len(S)):\n    if S[i] == '(':\n        pointer += 1\n    else:\n        if pointer == 0:\n            need_left += 1\n        else:\n            pointer -= 1\nneed_right = pointer\nres = \"(\" * need_left + S + \")\" * need_right\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "3688": {"id": 3688, "code": "a = 20;b = 15\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "9698": {"id": 9698, "code": "from collections import deque\nn = 3\ns = \"())\"\nl, que = 0, deque([])\nfor i in s:\n    que.append(i)\n    if i == '(':\n        l += 1\n    elif i == ')':\n        if l == 0:\n            que.appendleft('(')\n            l += 1\n        l -= 1\nprint(*que, ')' * l, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7766": {"id": 7766, "code": "a = 4;b = 3\nc = [2, 3, 1, 4]\nans = -(-(a - b) // (b - 1)) + 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "14289": {"id": 14289, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nx=[]\nans=1\nfor i in range(n-1):\n  if a[i+1]==a[i]:\n    continue\n  x.append(a[i+1]-a[i])\nflag=True\nfor i in range(len(x)-1):\n  if flag==False:\n    flag=True\n    continue\n  if x[i]<0 and x[i+1]>0 or x[i]>0 and x[i+1]<0:\n    ans+=1\n    flag=False\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4964": {"id": 4964, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\na = ''\nb = s.pop(0)\nc = s.pop()\na += b\na += str(len(s))\na += c\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11720": {"id": 11720, "code": "S = \"SAT\"\nL=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n    if L[i]==S:\n        ans=7-i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18397": {"id": 18397, "code": "h = 2\nw = 100\nn = 200\nif h >= w and n%h != 0:\n    print(n//h+1)\nelif h >= w and n%h == 0:\n    print(n//h)\nelif w >= h and n%w != 0:\n    print(n//w+1)\nelse:\n    print(n//w)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "16242": {"id": 16242, "code": "import bisect\nimport math\nN = 5\na = [6, 9, 4, 2, 11]\na.sort()\nn = a[-1]\nharf = n/2\nri = bisect.bisect_left(a, harf)\nr = a[ri]\nif ri > 0 and abs(harf-r) >= abs(harf-a[ri-1]):\n  r = a[ri-1]\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17569": {"id": 17569, "code": "S = 112\na = S // 100\nb = S % 100\nif 0 < a < 13 :\n  if 0 < b < 13:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 0 < b < 13:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2490": {"id": 2490, "code": "N = map(int, \"1 7 9 4\".split())\ndic = {1: False, 9: False, 7: False, 4: False}\nfor n in N:\n  dic[n] = True\nif all(dic.values()):\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "10662": {"id": 10662, "code": "A = 1;B = 1;K = 1\nm = min(A, B)\nans = []\nfor i in range(1, m+1):\n    if A%i==0 and B%i==0:\n        ans.append(i)\nprint(sorted(ans, reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3170": {"id": 3170, "code": "s = \"1111111111\"\nans=1000\nfor i in range(1,len(s)-1):\n    x=int(s[i-1]+s[i]+s[i+1])\n    if abs(x-753)<ans:\n        ans=abs(x-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6613": {"id": 6613, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\ns = 0\nfor b_ in b:\n    t = bisect.bisect_right(a, b_-1)\n    tt = len(c) - bisect.bisect_right(c, b_)\n    d = tt * t\n    s += d\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5172": {"id": 5172, "code": "s = \"xyz\"\nprint(s[0] + str(len(s[0:-2])) + s[-1])", "coverage": [">", ">"]}, "18511": {"id": 18511, "code": "a = 2\nb = 100\nc=max(a,b)\nn = 200\nif n%c==0:\n  print(n//c)\nelse:\n  print(n//c +1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "18855": {"id": 18855, "code": "N = 5;x = 9\nvalues = map(int, \"3 1 4 1 5\".split())\ncount = 0\nv1 = next(values)\nfor v2 in values:\n    surplus = max(v1 + v2 - x, 0)\n    count += surplus\n    v1 = max(0, v2 - surplus)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2892": {"id": 2892, "code": "s = \"1111111111\"\nans = 1000\nfor i in range(len(s)-2):\n    u = abs(eval(s[i]+s[i+1]+s[i+2])-753)\n    if u < ans:\n        ans = u\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3706": {"id": 3706, "code": "A = 20;B = 15\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "13613": {"id": 13613, "code": "a = \"happy,newyear,enjoy\"\nA = a.replace(\",\",\" \")\nprint(A)", "coverage": [">", ">", ">"]}, "5055": {"id": 5055, "code": "s = \"xyz\"\nprint(s[0] + str(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "5428": {"id": 5428, "code": "N = 5\nif N % 2 == 1:\n    N += 1\nprint(N//2)", "coverage": [">", ">", ">", ">"]}, "7032": {"id": 7032, "code": "H = 20;N = 3\ni = map(int,\"4 5 6\".split())\nif sum(i) >= H :\n    print(\"Yes\")\nelse :\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "7721": {"id": 7721, "code": "import math\nn = 4;k = 3\na = [2, 3, 1, 4]\nprint(int(math.ceil((len(a)-1) / ( k -1))))", "coverage": [">", ">", ">", ">"]}, "7079": {"id": 7079, "code": "H = 10;N = 3\na = [4, 5, 6]\nif H > sum(a):\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "17116": {"id": 17116, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n\tprint(b)\nelse:\n\tprint(\"H\" if b == 'D' else \"D\")", "coverage": [">", ">", "!", "!", ">"]}, "2961": {"id": 2961, "code": "S = \"1234567876\"\nm = 0\nfor i in range(len(S)):\n    if i == 0:\n        m = abs(int(S[i: i + 3]) - 753)\n    elif i == len(S) - 2:\n        break\n    else:\n        m = min(m, abs(int(S[i: i + 3]) - 753))\nprint(m)    ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "16445": {"id": 16445, "code": "n = 5\na = [6, 9, 4, 2, 11]\nm = max(a)\nres = 1e10\nans = 0\nfor i in a:\n    if i != m:\n        if abs(m//2-i) < res:\n            res = abs(m//2-i)\n            ans = i\nprint(m,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7350": {"id": 7350, "code": "H = 20\nA = [4, 5, 6]\nif H <= sum(A):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "11493": {"id": 11493, "code": "input_weekday = \"SUN\"\nresult = 0\nif input_weekday == 'SUN':\n    result = 7\nelif input_weekday == 'MON':\n    result = 6\nelif input_weekday == 'TUE':\n    result = 5\nelif input_weekday == 'WED':\n    result = 4\nelif input_weekday == 'THU':\n    result = 3\nelif input_weekday == 'FRI':\n    result = 2\nelif input_weekday == 'SAT':\n    result = 1\nprint(result)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16194": {"id": 16194, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nM = a[-1]\nm = a[0]\nC = -1\nfor i in range(n):\n  c = a[i]*(M-a[i])\n  if C < c:\n    C = c\n    m = a[i]\n  else:\n    break\nprint(M, m, sep=' ')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "18259": {"id": 18259, "code": "H = 2\nW = 100\nN = 200\nA_div, A_mod = divmod(N, H)\nif A_mod != 0:\n    A_div += 1\nB_div, B_mod = divmod(N, W)\nif B_mod != 0:\n    B_div += 1\nprint(min(A_div, B_div))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "5518": {"id": 5518, "code": "page = 5\nprint(-(-page // 2))", "coverage": [">", ">"]}, "16464": {"id": 16464, "code": "_ = int(\"5\")\na = [2, 4, 6, 9, 11]\nnum0, num1, val = a[-1], 0, float('inf')\nfor i in a[:-1]:\n    val0 = abs(i-num0/2)\n    if val0 < val:\n        num1 = i\n        val = val0\nprint(num0, num1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6817": {"id": 6817, "code": "H = 10;N = 3\nA = [4, 5, 6]\nfor i in range(N):\n  H -= A[i]\nif H > 0:\n  print('No')\nelse:\n  print('Yes')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16149": {"id": 16149, "code": "n = 2\na = [100, 0]\na.sort(reverse=True)\nideal = a[0]//2\ndif_mn = 10**9\nfor i in range(1,n):\n    tmp = a[0]-a[i] if a[i] > ideal else a[i]\n    dif = ideal-tmp\n    if dif < dif_mn:\n        r = a[i]\n        dif_mn = dif\nprint(a[0], r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8099": {"id": 8099, "code": "import math\ntotal = 0\nN = 4;M = 3\nM = M-1\nn_l = \"2314\"\nA = n_l.find(\"1\")\nbefore = A\nafter = N-A-1\nwhile before > 0:\n    before-=M\n    total +=1\nif before < 0:\n    before = abs(before)\n    after -= before\nwhile after > 0:\n    after-=M\n    total +=1\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "7977": {"id": 7977, "code": "n = 8;k = 3\nal = [7, 3, 1, 8, 4, 6, 2, 5]\nif n==k:\n    print(1)\n    exit()\nx = 1+(n-k)//(k-1)\ny = (n-k)%(k-1)\nif y >0:\n    print(x+1)\nelse:\n    print(x)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "7204": {"id": 7204, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if sum(A) >= H else 'No')", "coverage": [">", ">", ">"]}, "9358": {"id": 9358, "code": "S = \"2017/01/07\"\ns=list(S)\ns[3]='8'\na=''.join(s)\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "7826": {"id": 7826, "code": "n = 8;k = 3\nl = [7, 3, 1, 8, 4, 6, 2, 5]\nif n<=k:\n    print(1)\n    exit()\nc=1\nwhile 1:\n    if n<=k:\n        break\n    n-=(k-1)\n    c+=1\nprint(c)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "15092": {"id": 15092, "code": "N = 3;P = 0\nA = [1, 1, 1]\ng=k=0\nfor i in A:\n    if i%2:\n        k+=1\n    else:\n        g+=1\na=0\nfrom math import factorial\nif P:\n    for i in range(1,k+1,2):\n        a+=factorial(k)//factorial(i)//factorial(k-i)\nelse:\n    for i in range(0,k+1,2):\n        a+=factorial(k)//factorial(i)//factorial(k-i)\nprint(a*pow(2,g))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "13700": {"id": 13700, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndeltaH = h2 - h1\ndeltaM = m2 - m1\ndelta = deltaH * 60 + deltaM - k\nprint(delta)", "coverage": [">", ">", ">", ">", ">"]}, "7389": {"id": 7389, "code": "a = 210;b = 5\nl = [31, 41, 59, 26, 53]\nfor i in range(b):\n  a-=l[i]\nprint(\"Yes\" if a<=0 else\"No\")", "coverage": [">", ">", ">", ">", ">"]}, "1408": {"id": 1408, "code": "n = 750\nprint(((n-1)//111+1)*111)", "coverage": [">", ">"]}, "17419": {"id": 17419, "code": "s = \"0112\"\na = int(s[:2])\nb = int(s[2:])\nif 0 < a < 13:\n    if 0 < b < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 0 < b < 13:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "6608": {"id": 6608, "code": "import sys\ninput = sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\na.sort()\nc.sort()\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (len(c) - bisect.bisect_right(c, i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18825": {"id": 18825, "code": "h = 2\nw = 100\nn = 200\nif w > h:\n    h, w = w, h\nprint((n+h-1)//h)", "coverage": [">", ">", ">", ">", ">", ">"]}, "773": {"id": 773, "code": "K = 2\nnum = 0\nfor i in range(0,K+1):\n    num = (num*10+7)%K\n    if num==0:\n        print(i+1,'\\n')\n        break\nif num:\n    print(\"-1\\n\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10069": {"id": 10069, "code": "s = \")))())\";t = \")))())\"\nwhile'()'in t:t=t.replace('()','')\nc=t.count;print('('*c(')')+s+')'*c('('))", "coverage": [">", ">", ">"]}, "4987": {"id": 4987, "code": "S = \"internationalization\"\nl=str(len(S)-2)\nprint(S[0]+l+S[-1])", "coverage": [">", ">", ">"]}, "15105": {"id": 15105, "code": "n = 2;p = 0;a = [1, 3]\ns = t = u = 0; b = [1]\nfor i in range(n):\n    if a[i]%2 == 0: s += 1\n    else: t += 1\nfor i in range(1, n+1):\n    b.append(b[-1]*i)\nif p == 0:\n    for i in range(0, t//2*2+1, 2):\n        u += b[t]//b[i]//b[t-i]\nelse:\n    for i in range(1, (t+1)//2*2, 2):\n        u += b[t]//b[i]//b[t-i]\nprint(2**s*u)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14117": {"id": 14117, "code": "inc = False\ndec = False\nval = 0\nans = 1\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nfor i in range(1, n):\n    if inc:\n        if a[i-1] > a[i]:\n            ans += 1\n            inc = False\n    elif dec:\n        if a[i-1] < a[i]:\n            ans+=1\n            dec =False\n    else:\n        if a[i-1] < a[i]:\n            inc = True\n        elif a[i-1] > a[i]:\n            dec = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "18948": {"id": 18948, "code": "N = 5\nif N%2 != 0:\n  print(0)\nelse:\n  answer = 0\n  m = 10\n  while m <= N:\n    answer += N//m\n    m *= 5\n  print(answer)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "1943": {"id": 1943, "code": "N = 10;A = 7;B = 5\nprint(min(A, B), (A + B - N if A + B > N else 0))", "coverage": [">", ">"]}, "14652": {"id": 14652, "code": "n = 2;p = 0\nx = 1\ny = 0\na = [1, 3]\nfor ai in a:\n  if ai%2 == 0:\n    x += x\n    y += y\n  else:\n    t = x\n    x += y\n    y += t\nif p == 0:\n  print(x)\nelse:\n  print(y)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "9506": {"id": 9506, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport collections\ns = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nif s[3] == \"7\":\n    s[3] = \"8\"\nans = \"\"\nfor i in range(len(s)):\n    ans += s[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14038": {"id": 14038, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nflg = 0\nrev = 0 \nfor c,n in zip(A, A[1:]):\n    if not flg:\n        if c < n:\n            flg = 1\n        elif c > n:\n            flg = 1\n            rev = 1\n    else:\n        if rev:\n            c = -c\n            n = -n\n        if c > n:\n            ans += 1\n            flg = 0\n            rev = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "746": {"id": 746, "code": "k = 2\nx = 7 % k\ni = 1\nset = set()\nis_there = False\nwhile not is_there:\n    set.add(x)\n    if x == 0:\n        print(i)\n        break\n    x = (x*10+7) % k\n    if x in set:\n        is_there = True\n    set.add(x)\n    i += 1\n    if x == 0:\n        print(i)\n        break\nelse:\n    print('-1')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10500": {"id": 10500, "code": "A = 1;B = 1;K = 1\ncount = []\nfor i in range(1, min(A, B) + 1, 1):\n  if (A % i == 0) and (B % i == 0):\n    count.append(i)\ncount.sort(reverse = True)\nprint(count[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6711": {"id": 6711, "code": "H = 10;N = 3\nA = [4, 5, 6]\nans = \"No\"\nsum_ = sum(A)\nif H <= sum_:\n  ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11671": {"id": 11671, "code": "W = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nS = \"SUN\"\nfor i, num in enumerate(W):\n  if S == num:\n    print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "6107": {"id": 6107, "code": "num = 2\nif num % 2 == 0: \n    print(int(num/2))\nelse:\n    print(int(num/2+1))", "coverage": [">", ">", ">", "!", "!"]}, "1570": {"id": 1570, "code": "N = \"112\"\nif (N[0] == N[1]) and (N[1]==N[2]) and (N[2]==N[0]):\n    print(N)\nelif int(N[0]) == int(N[1]) and int(N[1]) > int(N[2]):\n    print(N[0]*3)\nelif int(N[0]) > int(N[1]):\n    print(N[0]*3)\nelse:\n    print(str(int(N[0])+1)*3)", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "2917": {"id": 2917, "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n  s = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n  ans = min(max(753-s, s-753), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8419": {"id": 8419, "code": "n = 7\na_1 = [3, 3, 4, 5, 4, 5, 3]\na_2 = [5, 3, 4, 4, 2, 3, 2]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18127": {"id": 18127, "code": "s = \"1700\"\na = int(s[0]) * 10 + int(s[1])\nb = int(s[2]) * 10 + int(s[3])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif 1 <= a <= 12:\n    print('MMYY')\nelif 1 <= b <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "11649": {"id": 11649, "code": "S = \"SUN\"\nif S == 'SUN':\n    print('7')\nelif S == 'MON':\n    print('6')\nelif S == 'TUE':\n    print('5')\nelif S == 'WED':\n    print('4')\nelif S == 'THU':\n    print('3')\nelif S == 'FRI':\n    print('2')\nelif S == 'SAT':\n    print('1')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "4366": {"id": 4366, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh3=h1*60\nh4=h2*60\na=m1+h3\nb=m2+h4\nc=b-a\nif k>c:\n  print(0)\nelse:\n  print(c-k)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6284": {"id": 6284, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\ncount = 0\nfor i in range(len(B)):\n    a_b = bisect.bisect_left(A,B[i])\n    c_b = bisect.bisect_right(C,B[i])\n    count += a_b * (N - c_b)\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3316": {"id": 3316, "code": "a = 12;b = 4\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "11134": {"id": 11134, "code": "s = \"level\"\ntarget = s[:(len(s)-1)//2]\ntarget2 = s[(len(s)+3)//2-1:]\nif target == target2:\n    l, r = 0, len(s)-1\n    flag = True\n    while l <= r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            print('No')\n            exit(0)\n    print(\"Yes\")\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "12347": {"id": 12347, "code": "s = \"atcoder\"\nk = int((len(s) -1)/2) \nl = int((len(s) + 3)/2) - 1\nn = list(s)\nif n[0:k] == n[l:]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7418": {"id": 7418, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nrest_H = H - sum(A)\nif rest_H <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4116": {"id": 4116, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;K = 30\nprint(((abs(h1-h2)*60)-(m1-m2)) - K)", "coverage": [">", ">"]}, "5596": {"id": 5596, "code": "N = 5\nA=N//2+N%2\nprint(A)", "coverage": [">", ">", ">"]}, "9290": {"id": 9290, "code": "s = \"2017/01/07\"\ns = list(s)\ns[3] = '8'\nprint(*s, sep=\"\")", "coverage": [">", ">", ">", ">"]}, "2226": {"id": 2226, "code": "N = 100;A = 100;B = 100\nmax = min([A, B])\nnum = A + B - N\nif (num <= 0):\n    minor = 0\nelse:\n    minor = num\nprint(max, minor)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "18290": {"id": 18290, "code": "H = 3\nW = 7\nN = 10\npainted = 0\ncnt = 0\nfor _ in range(min(H, W)):\n    painted += max(H, W)\n    cnt += 1\n    if painted >= N:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18517": {"id": 18517, "code": "h = 2\nw = 100\nn = 200\na=max(w,h)\nans=n//a+(n%a>0)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8283": {"id": 8283, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ndivide_number = K - 1\nother_number = N - 1\nanswer = 0\nanswer = other_number // divide_number\nif other_number % divide_number != 0:\n    answer += 1\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8623": {"id": 8623, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor x in range(N):\n    C = A[0:x+1] + B[x:N]\n    n = sum(C)\n    ans = max(ans, n)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15861": {"id": 15861, "code": "x = 12;y = 3;z = 1\nans = 0\nnow = z\nwhile True:\n    now += y + z\n    ans += 1\n    if now + y + z > x:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6777": {"id": 6777, "code": "h = 10;n = 3\na = [4, 5, 6]\nprint('Yes') if sum(a)>=h else print('No')", "coverage": [">", ">", ">"]}, "6315": {"id": 6315, "code": "import bisect\nimport math\nimport sys\nn = 3\nans=0\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nfor i in b:\n    aa=bisect.bisect_left(a,i)\n    cc=len(c)-bisect.bisect_right(c,i)\n    ans+=aa*cc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9713": {"id": 9713, "code": "n = 3\ns = ['(', ')', ')']\nc0 = 0\nc1 = 0\nz0 = 0\nz1 = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nans = [\"(\"]*c1 + s + [\")\"]*c0\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "18520": {"id": 18520, "code": "h = 2\nw = 100\nn = 200\nif h<w:\n\tw,h=h,w\nfrom math import ceil\nprint(ceil(n/h))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10393": {"id": 10393, "code": "A = 100;B = 50;K = 4\nX = []\nfor i in range(1, min(A, B) + 1):\n  if A % i == 0 and B % i == 0:\n    X.append(i)\nprint(X[-K])", "coverage": [">", ">", ">", ">", ">", ">"]}, "13719": {"id": 13719, "code": "import sys\nreadline = sys.stdin.readline\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(max(0,(H2 * 60 + M2) - (H1 * 60 + M1 + K)))", "coverage": [">", ">", ">", ">"]}, "1618": {"id": 1618, "code": "N = 100;A = 100;B = 100\nMax=min(A,B)\nmin=0\nif (A+B)>=N:\n    min=A+B-N\nelse:\n    min=0\nprint(Max,min)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4248": {"id": 4248, "code": "wake_h = 10;wake_m = 0;sleep_h = 15;sleep_m = 0;k = 30\nwake_m_all = wake_h * 60 + wake_m\nsleep_m_all = sleep_h * 60 + sleep_m\nsleep_m_all -= k\nprint(sleep_m_all - wake_m_all)", "coverage": [">", ">", ">", ">", ">"]}, "4739": {"id": 4739, "code": "s = \"smiles\"\nk=len(s)-2\nprint(\"{0}{1}{2}\".format(s[0],str(k),s[-1]))", "coverage": [">", ">", ">"]}, "10184": {"id": 10184, "code": "n = 3\ns = \"())\"\nminv = 0\nscore = 0\nfor i in range(n):\n    if s[i] == '(':\n        score += 1\n    else:\n        score -= 1\n    minv = min(minv, score)\nans = \"\"\nfor i in range(0, -minv):\n    ans += \"(\"\nans += s\nfor i in range(0, score-minv):\n    ans += \")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "5980": {"id": 5980, "code": "import math\nS = 5\nif S%2==0:\n    print(int(S/2))\nelse:\n    print(int(S//2)+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12301": {"id": 12301, "code": "s = \"akasaka\"\np =\"Yes\"\nfor i in range(len(s)//2):\n  if s[i] != s[len(s) -1 -i]:\n    p = \"No\"\nfor i in range(len(s)//2):\n  if s[i] != s[len(s)//2 -1 -i]:\n    p = \"No\"\nprint(p)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "5233": {"id": 5233, "code": "S = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint(S[0]+str(len(S)-2)+S[-1])", "coverage": [">", ">"]}, "2648": {"id": 2648, "code": "a = \"1 7 9 4\"\nnum1 = a.count(\"1\")\nnum9 = a.count(\"9\")\nnum7 = a.count(\"7\")\nnum4 = a.count(\"4\")\nif num1 == 1 and num9 == 1 and num7 == 1 and num4 == 1:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4450": {"id": 4450, "code": "n = \"internationalization\"\nm = len(n)\nprint('{}{}{}'.format(n[0],m-2,n[-1]))", "coverage": [">", ">", ">"]}, "12174": {"id": 12174, "code": "from sys import stdin\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16362": {"id": 16362, "code": "N = 5\na = [6, 9, 4, 2, 11]\na_max = max(a)\nhalf_a = a_max//2\ncomb = 1000000000\nfor i in range(N):\n    if a[i]==a_max:\n        continue\n    if comb>abs(half_a-a[i]):\n        idx =i\n        comb = abs(half_a-a[i])\nprint(str(a_max) + ' ' + str(a[idx]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7651": {"id": 7651, "code": "H = 210;N = 5\ndamege = map(int, \"31 41 59 26 53\".split())\ntotal_damege = sum(damege)\nif H - total_damege <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "423": {"id": 423, "code": "s = ['x', 'y', 'z']\nK = 4\nn = len(s)\nfor i in range(n-1):\n    m = ord('z') - ord(s[i]) + 1\n    if not s[i] == 'a' and m <= K:\n        s[i] = 'a'\n        K -= m\ns[n-1] = chr((ord(s[n-1])+K%26-97)%26+97)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2486": {"id": 2486, "code": "n1 = {1, 4, 9, 7}\nn2 = set((1,7,9,4))\nans='YES' if n1==n2 else 'NO'\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4780": {"id": 4780, "code": "s = \"internationalization\"\nl = len(s)\nprint(f'{s[0]}{l-2}{s[l-1]}')", "coverage": [">", ">", ">"]}, "18689": {"id": 18689, "code": "h = 3\nw = 7\nn = 10\nx=n//h\nif n%h!=0:\n    x+=1\ny=n//w\nif n%w!=0:\n    y+=1\nprint(min(x,y))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14714": {"id": 14714, "code": "N = 1;P = 1\nAlist = [50]\nguuki = [A%2 for A in Alist]\nodd = guuki.count(1)\neven = guuki.count(0)\nif odd == 0:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "15725": {"id": 15725, "code": "X = 13;Y = 3;Z = 1\nnum = (X - Z) // ( Y + Z)\nprint(num)", "coverage": [">", ">", ">"]}, "6922": {"id": 6922, "code": "import math\nH = 211;N = 5\nprint(\"Yes\" if sum(list(map(int,\"31 41 59 26 53\".split())))>=H else \"No\")", "coverage": [">", ">", ">"]}, "4985": {"id": 4985, "code": "s = \"smiles\"\nprint(s[0], len(s) - 2, s[-1], sep='')", "coverage": [">", ">"]}, "9900": {"id": 9900, "code": "n = 6\ns = \")))())\"\nl=[]\nfor i in s:\n  if i==')':\n    if len(l)>0:\n      if l[-1]=='(':\n        l.pop()\n      else:\n        l.append(i)\n    else:\n      l.append(i)\n  else:\n    l.append(i)\nprint(l.count(')')*'(' + s +l.count('(')*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "10290": {"id": 10290, "code": "N = 6\nS = \")))())\"\nS1 = S\ncur = 0\nfor i in range(len(S)):\n    if S[i]==\"(\":\n        cur += 1\n    else:\n        cur -= 1\n    if cur<0:\n        S1 = \"(\"+S1\n        cur += 1\nS1 = S1+\")\"*cur\nprint(S1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "4899": {"id": 4899, "code": "word = \"xyz\"\nlength=len(word[1:-1])\nans=word[0]+str(length)+word[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "14330": {"id": 14330, "code": "n = 6\naa = [1, 2, 3, 2, 2, 1]\nlist1 =[0] * n\ncnt = 1  \nfor i in range(n-1):\n  if aa[i+1] > aa[i]:\n    list1[i+1] = 1\n  elif aa[i+1] < aa[i]:\n    list1[i+1] = -1\n  elif aa[i+1] == aa[i]:    \n    list1[i+1] = 0\nwhile 1 in list1 and -1 in list1:\n  del list1[:max(list1.index(1), list1.index(-1))]\n  list1[0] = 0\n  cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14573": {"id": 14573, "code": "n = 2;p = 0\nlis = [1, 3]\nodd = [i for i in lis if i % 2==1]\neven = [i for i in lis if i % 2 == 0]\nif len(odd) == 0:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    odd_m = len(odd)\n    even_m = len(even)\n    t1 = 2**even_m\n    t2 = 2**(odd_m-1)\n    print(t1*t2)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "4500": {"id": 4500, "code": "s = \"xyz\"\nprint(s[0], len(s) - 2, s[-1], sep=\"\")", "coverage": [">", ">"]}, "8948": {"id": 8948, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7716": {"id": 7716, "code": "N = 3;K = 3\nAlist = [1, 2, 3]\nprint(-(-(N-1)//(K-1)))", "coverage": [">", ">", ">"]}, "5863": {"id": 5863, "code": "import math\nn = 5\nans = math.ceil(n/2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3997": {"id": 3997, "code": "x = 100000;y = 1;z = 1\ni=(x-(y+2*z))//(y+z)\nprint(i+1)", "coverage": [">", ">", ">"]}, "17961": {"id": 17961, "code": "S = \"1905\"\na = int(S[0:2])\nb = int(S[2:])\nif 1 <= a <= 12 and a <= b <= 12:\n  print(\"AMBIGUOUS\")\nelif 1 <= a <= 12:\n  print(\"MMYY\")\nelif 1 <= b <= 12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4371": {"id": 4371, "code": "input = [10, 0, 15, 0, 30]\nh1 = input[0]\nm1 = input[1]\nh2 = input[2]\nm2 = input[3]\nk = input[4]\nprint(h2*60+m2-h1*60-m1-k)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9640": {"id": 9640, "code": "N = 8\nS = \"))))((((\"\nL = S.count('(')\nR = S.count(')')\nif L > R:\n    S = S + (')' * (L - R))\nif R > L:\n    S = ('(' * (R - L)) + S\nd = 0\nmx = 0\nfor s in S:\n    if s == ')':\n        d += 1\n    else:\n        d -= 1\n    mx = max(mx, d)\nS = '(' * mx + S + ')' * mx\nprint(S)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6064": {"id": 6064, "code": "n = 5\ns=n//2\na=n%2\nif a==1:\n  print(s+1)\nelse:\n  print(s)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16864": {"id": 16864, "code": "x = \"D\";y = \"H\"\nif x == 'H':\n    print(y)\nelif x == 'D':\n    print('H' if y=='D' else 'D')", "coverage": [">", ">", "!", ">", ">"]}, "19317": {"id": 19317, "code": "n = 999999999\nprint(n) if n%2 ==0 else print(n*2)", "coverage": [">", ">"]}, "19078": {"id": 19078, "code": "import sys\nimport math\nN = 12\nif N == 0:\n    print(0)\n    sys.exit(0)\nif N % 2 == 1:\n    print(0)\n    sys.exit(0)\ncount = 0\ndigit = math.ceil(math.log(N, 5))\nfor i in range(1, digit+1):\n    x = 5 ** i\n    count += (N // (x * 2))\nprint(count)", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16810": {"id": 16810, "code": "a = \"D\";b = \"H\"\nif a == 'D':\n  b = 'D' if b == 'H' else 'H'\nprint(b)", "coverage": [">", ">", ">", ">"]}, "2346": {"id": 2346, "code": "N = 1;M = 1\nres = 0\nif N >= 2:\n  res += N * (N - 1) / 2\nif M >= 2:\n  res += M * (M - 1) / 2\nprint(int(res))", "coverage": [">", ">", ">", "!", ">", "!", ">"]}, "17228": {"id": 17228, "code": "a = \"D\";b = \"D\"\nif a == \"H\": print(b)\nelse: print(\"H\" if b == \"D\" else \"D\")", "coverage": [">", ">", ">"]}, "15440": {"id": 15440, "code": "x = 64145;y = 123;z = 456\nprint (-(-((x-z)//(y+z))))", "coverage": [">", ">"]}, "12538": {"id": 12538, "code": "A = 8;B = 12;K = 2\nprint([n for n in range(1,101) if A%n==0 and B%n==0][-K])", "coverage": [">", ">"]}, "4409": {"id": 4409, "code": "import datetime\nh = 10;m = 0;eh = 15;em = 0;k = 30\nstart = h*60 + m\nend = eh*60 + em\nif end - start > k:\n    print(end - k - start)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "17235": {"id": 17235, "code": "say = \"HH\"\nif say=='HH' or say== 'DD':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "3952": {"id": 3952, "code": "x = 100000;y = 1;z = 1\nX = x -z\nans = X // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1007": {"id": 1007, "code": "n = 750\nfor i in range(n,1111):\n    i = str(i)\n    if len(set(i))==1:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "2403": {"id": 2403, "code": "N = 0;M = 3\nans = (N * (N-1)) // 2 + (M * (M-1)) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "10262": {"id": 10262, "code": "N = 3\nS = \"())\"\nleft = 0\nfor i in range(N - 1, -1, -1):\n    if S[i] == \")\":\n        left += 1\n    else:\n        left = max(0, left - 1)\nright = 0\nfor i in range(N):\n    if S[i] == \"(\":\n        right += 1\n    else:\n        right = max(0, right - 1)\nprint(\"(\" * left + S + \")\" * right)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "17650": {"id": 17650, "code": "s = \"0112\"\nt,u=0<int(s[:2])<13,0<int(s[2:])<13\nprint('AMBIGUOUS' if t and u else 'MMYY' if t else 'YYMM' if u else 'NA')", "coverage": [">", ">", ">"]}, "4575": {"id": 4575, "code": "s = ['x', 'y', 'z']\nprint(s[0], len(s)-2, s[len(s)-1], sep='')", "coverage": [">", ">"]}, "4114": {"id": 4114, "code": "import math\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt1 = h1 * 60 + m1\nt2 = h2 * 60 + m2\nprint(t2 - t1 - k)", "coverage": [">", ">", ">", ">", ">"]}, "8486": {"id": 8486, "code": "N = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nA=[]\nB=[]\nsuma=0\nsumb=0\nfor n in range(N):\n    suma+=a[n]\n    A.append(suma)\nfor n in reversed(range(N)):\n    sumb+=b[n]\n    B.append(sumb)\nMAX=0\nfor n in range(N):\n    MAX=max(MAX,A[n]+B[N-n-1])\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13009": {"id": 13009, "code": "N = 6\nif N == 1:\n    print(\"NO\")\nelif 105 % N == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "18383": {"id": 18383, "code": "H = 3\nW = 7\nN = 10\nlonger = H\nif longer < W:\n    longer = W\nprint(((N-1)//longer)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6653": {"id": 6653, "code": "import bisect\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n    ans += (bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b)))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3450": {"id": 3450, "code": "a = 20;b = 30\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", "!", "!", ">", ">"]}, "867": {"id": 867, "code": "k = 101\nif k%2==0 or k%5==0:\n  print(-1)\n  exit()\nans=1\nnum=7\nwhile num%k!=0:\n  num=10*num+7\n  num%=k\n  ans+=1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14402": {"id": 14402, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflg = 0\nans=1\nfor i in range(1,n):\n  tmp = a[i-1]\n  if a[i] == tmp:\n    pass\n  elif a[i] > tmp:\n    if flg == 1:\n      pass\n    elif flg == -1:\n      ans += 1\n      flg = 0\n    else:\n      flg = 1\n  else:\n    if flg == -1:\n      pass\n    elif flg == 1:\n      ans += 1\n      flg = 0\n    else:\n      flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "16296": {"id": 16296, "code": "n = 2\nA = map(int, \"100 0\".split())\nA = sorted(A)\nmaxa = max(A)\nfrom bisect import bisect_left\nm = (maxa+1)//2\nl2 = bisect_left(A, m)\nif abs(A[l2] - m) >= abs(A[l2-1] - m):\n    print(maxa, A[l2-1])\nelse:\n    print(maxa, A[l2])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15690": {"id": 15690, "code": "import math\nx = 12;y = 3;z = 1\nif x%(y+z)>=z:\n  print(math.floor(x/(y+z)))\nelse:\n  print(math.floor(x/(y+z)-1))", "coverage": [">", ">", ">", "!", "!", ">"]}, "1873": {"id": 1873, "code": "Sample = 10;NumOfPaperA = 3;NumOfPaperB = 5\nMaximumNumberOfBothReader = min(NumOfPaperA, NumOfPaperB)\nMinimumNumberOfBothReader = max(NumOfPaperA + NumOfPaperB - Sample, 0)\nprint(str(MaximumNumberOfBothReader) + ' ' + str(MinimumNumberOfBothReader))", "coverage": [">", ">", ">", ">"]}, "8293": {"id": 8293, "code": "n = 4;k = 3\nnum_list = [2, 3, 1, 4]\nif (n-k) % (k-1) == 0:\n    print((n-k)//(k-1)+1)\nelse:\n    print((n-k)//(k-1) + 2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1344": {"id": 1344, "code": "n = 750\nif n%111==0:\n  print(n)\nelse:\n  print(111*((n+110)//111))", "coverage": [">", ">", "!", "!", ">"]}, "1726": {"id": 1726, "code": "n = 100;a = 100;b = 100\nprint(*[min(a,b), max((a+b)-n, 0)])", "coverage": [">", ">"]}, "2338": {"id": 2338, "code": "N = 0;M = 3\nprint(int(N*max(N-1, 0)/2) + int(M*max(M-1, 0)/2))", "coverage": [">", ">"]}, "17598": {"id": 17598, "code": "s = \"1905\"\ns1 = s[:2]\ns2 = s[2:4]\nr = int(s2)\nl = int(s1)\nif(1<=r<=12 and 1<=l<=12):\n    print(\"AMBIGUOUS\")\nelif((r > 12 or r == 0) and 1 <= l <= 12):\n    print(\"MMYY\")\nelif((l >= 12 or l == 0) and 1 <= r <= 12):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9320": {"id": 9320, "code": "S = \"2017/01/07\"\nS=S.replace(\"7\",\"8\",1)\nprint(S)", "coverage": [">", ">", ">"]}, "8843": {"id": 8843, "code": "n = 1\nup = [2]\ndw = [3]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "209": {"id": 209, "code": "li_s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nz = ord('z')\nans = ''\nfor i in range(len(li_s)):\n    if i < len(li_s) - 1 and li_s[i] == 'a':\n        ans += 'a'\n    elif i < len(li_s)-1 and k-(z-ord(li_s[i])+1) >= 0:\n        k -= z-ord(li_s[i])+1\n        ans = ans + 'a'\n    elif i < len(li_s)-1:\n        ans = ans + li_s[i]\n    elif i == len(li_s) - 1:\n        p = ord(li_s[i])  + k\n        p %= 26\n        p += 78\n        if 97 <= p:\n            ans = ans + chr(p)\n        else:\n            ans = ans + chr(p+26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17336": {"id": 17336, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    if b == 'H':\n        ans = 'H'\n    else:\n        ans = 'D'\nelse:\n    if b == 'H':\n        ans = 'D'\n    else:\n        ans = 'H'\nprint(ans)", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "486": {"id": 486, "code": "s = ['x', 'y', 'z']\nK = 4\na = ord('z') + 1\nfor i in range(len(s)-1):\n    if s[i] == 'a':\n        continue\n    if K >= (a - ord(s[i])):\n        K -= a - ord(s[i])\n        s[i] = 'a'\ni = len(s)-1\ns[len(s)-1] = chr((ord(s[i])-ord('a') + K) % 26 + ord('a'))\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "1457": {"id": 1457, "code": "N = 112\na = 0\nfor i in range(N,1000):\n  if i == 111 or i == 222 or i == 333 or i ==444 or i ==555 or i == 666 or i ==777 or i ==888 or i == 999:\n    a = i\n    break\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17420": {"id": 17420, "code": "s = \"1700\"\na = int(s[:2])\nb = int(s[2:])\nif 0 < a < 13:\n    if 0 < b < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 0 < b < 13:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "5871": {"id": 5871, "code": "from sys import stdin\nN = \"100\"\nN = int(N)\nprint(N//2 + N%2)", "coverage": [">", ">", ">", ">"]}, "9216": {"id": 9216, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3]=str(8)\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "2223": {"id": 2223, "code": "N = 100;A = 100;B = 100\nprint(\"{0} {1}\".format(min(A, B), max(A + B - N, 0)))", "coverage": [">", ">"]}, "12110": {"id": 12110, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(int(a!=c))", "coverage": [">", ">", ">"]}, "7801": {"id": 7801, "code": "n = 8;k = 3\nk-=1\na = [7, 3, 1, 8, 4, 6, 2, 5]\nfor i in range(n):\n    if a[i]==1:\n        index=i\nprint(-(-i//k)-(-(n-i-1)//k))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1898": {"id": 1898, "code": "n = 10;a = 7;b = 5\nsaidai = min(a,b)\nsaisyo = max(0,a+b-n)\nprint(saidai,saisyo)", "coverage": [">", ">", ">", ">"]}, "711": {"id": 711, "code": "Kin = 101\ni = 0\nnow = 0\nif (0 == (Kin % 2)) or (0 == (Kin % 5)):\n    print(-1)\nelse:\n    while 1:\n        now = (now * 10 + 7) % Kin\n        i+=1\n        if now == 0:\n            break\n    print(i)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "6602": {"id": 6602, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nresult = 0\nfor b in B:\n    result += bisect.bisect_right(A, b - 1) * (N-bisect.bisect_left(C, b + 1))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7131": {"id": 7131, "code": "H = 10;N = 3\na = [4, 5, 6]\nsum = 0\nfor i in range(N):\n    sum += a[i]\nif sum >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15554": {"id": 15554, "code": "x = 12;y = 3;z = 1\nx -= z\ny += z\nprint(x // y)", "coverage": [">", ">", ">", ">"]}, "4989": {"id": 4989, "code": "S = \"xyz\"\nl=str(len(S)-2)\nprint(S[0]+l+S[-1])", "coverage": [">", ">", ">"]}, "6009": {"id": 6009, "code": "n = 100\nans = n//2\nif n%2 == 1:\n  ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "15798": {"id": 15798, "code": "X = 13;Y = 3;Z = 1\nans = 0\nfor i in range(1, X // Y + 1):\n    if X - Y * i - (i + 1) * Z >= 0:\n        ans = i\n    else:\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "13079": {"id": 13079, "code": "x = \"6\"\nif x in \"753\":\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "11107": {"id": 11107, "code": "s = \"atcoder\"\ns_len = int((len(s) - 1) / 2)\ns_1 = s[:s_len]\ns_1_len = int((len(s_1) - 1) / 2)\ns_2 = s[s_len+1:]\ns_2_len = int((len(s_2) - 1) / 2)\nans = 'Yes'\nfor i in range(s_len+1):\n  if s[i] != s[-i-1]:\n    ans = 'No'\n    break\nfor i in range(s_1_len+1):\n  if s_1[i] != s_1[-i-1]:\n    ans = 'No'\n    break\nfor i in range(s_2_len+1):\n  if s_2[i] != s_2[-i-1]:\n    ans = 'No'\n    break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6567": {"id": 6567, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\na = sorted(a)\nb = [58, 9, 79, 323, 84, 6]\nb = sorted(b)\nc = [2643, 383, 2, 79, 50, 288]\nc = sorted(c)\nans = 0\nfor i in range(n):\n    B = b[i]\n    a_nums = bisect.bisect_left(a,B)\n    c_nums = n - bisect.bisect_right(c,B)\n    ans += a_nums * c_nums\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7299": {"id": 7299, "code": "h = 10\na = [4, 5, 6]\nprint([\"Yes\", \"No\"][sum(a) < h])", "coverage": [">", ">", ">"]}, "13898": {"id": 13898, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\ntemp=0\nfor i in range(1,n):\n  if a[i-1]<a[i] and temp==0:\n    temp=1\n  elif a[i-1]>a[i] and temp==0:\n    temp=2\n  elif a[i-1]>a[i] and temp==1:\n    temp=0\n    ans=ans+1\n  elif a[i-1]<a[i] and temp==2:\n    temp=0\n    ans=ans+1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "11152": {"id": 11152, "code": "S = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nk = (len(S) -1) // 2 \nT = S[0:k]\nprint(\"Yes\" if S == S[::-1] and T == T[::-1] else \"No\")", "coverage": [">", ">", ">", ">"]}, "289": {"id": 289, "code": "s = ['a']\nK = 25\nfor i in range(len(s)):\n    if i==len(s)-1:\n        K=K%26\n        x=ord(s[i])\n        for j in range(K):\n            x+=1\n            if x==123:\n                x=97\n        s[i]=chr(x)\n    else:\n        if K<=0 or s[i]=='a':\n            continue\n        dif=123-ord(s[i])\n        if dif<=K:\n            s[i]='a'\n            K-=dif\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "5976": {"id": 5976, "code": "a = 100\nif(a%2 == 1):\n  print((a+1)//2)\nif(a%2 == 0):\n  print(a//2)", "coverage": [">", ">", "!", ">", ">"]}, "6576": {"id": 6576, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nx=[1 for _ in range(N)]\nans=0\nfor i in range(N):\n        a=bisect.bisect_left(A,B[i]) \n        c=N-bisect.bisect_right(C,B[i])\n        ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2130": {"id": 2130, "code": "n = 100;a = 100;b = 100\nmax_ = min(a, b)\nmin_ = max(a + b - n, 0)\nprint(max_, min_)", "coverage": [">", ">", ">", ">"]}, "3998": {"id": 3998, "code": "x = 64146;y = 123;z = 456\ni=(x-(y+2*z))//(y+z)\nprint(i+1)", "coverage": [">", ">", ">"]}, "16095": {"id": 16095, "code": "A = 12;B = 4\nif A-(B*2) > 0:\n    print(A-(B*2))\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "8422": {"id": 8422, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6249": {"id": 6249, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nali = [0] * (N+1)\nbli = [N - bisect.bisect_left(C,B[i]+1) for i in range(N)]\nfor i in range(N):\n    ali[i+1] = ali[i] + bli[i]\nprint(sum([ali[N]-ali[bisect.bisect_left(B,A[i]+1)] for i in range(N)]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15346": {"id": 15346, "code": "import sys\ninput = sys.stdin.readline\nx = 12;y = 3;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "8457": {"id": 8457, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7332": {"id": 7332, "code": "h = 211;n = 5\nal = [31, 41, 59, 26, 53]\nprint(['No','Yes'][sum(al)>=h])", "coverage": [">", ">", ">"]}, "15249": {"id": 15249, "code": "x = 13;y = 3;z = 1\nc = x // (y + z)\nd = x % (y + z)\nif d >= z:\n    print(c)\nelse:\n    print(c - 1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "11644": {"id": 11644, "code": "lst = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ns = \"SAT\"\nn = lst.index(s)\nprint(7 - n)", "coverage": [">", ">", ">", ">"]}, "9323": {"id": 9323, "code": "x = \"2017/01/31\"\nprint(\"2018\" + x[4:])", "coverage": [">", ">"]}, "4535": {"id": 4535, "code": "s = \"smiles\"\nsl = len(s)\nprint(s[0]+str(sl-2)+s[sl-1])", "coverage": [">", ">", ">"]}, "16200": {"id": 16200, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nai=a[-1]\naj=a[0]\nfor j in range(1,n-1):\n    if abs(ai/2-a[j]) < abs(ai/2-aj):\n        aj=a[j]\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3483": {"id": 3483, "code": "a = 20;b = 30\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", "!", ">", ">"]}, "7700": {"id": 7700, "code": "from math import ceil\nN = 4;K = 3\nll = [2, 3, 1, 4]\nprint(ceil((N-1) / (K-1)))", "coverage": [">", ">", ">", ">"]}, "18312": {"id": 18312, "code": "h = 14\nw = 12\nn = 112\nif h>w:\n  if n%h==0:\n    ct=n//h\n  else:\n    ct=n//h+1\nelse:\n  if n%w==0:\n    ct=n//w\n  else:\n    ct=n//w+1\nprint(ct)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14372": {"id": 14372, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nm = 0\nfor i in range(1, n):\n    if (a[i] - a[i - 1]) * m < 0:\n        ans += 1\n        m = 0\n    elif a[i] - a[i - 1] != 0:\n        m = a[i] - a[i - 1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7247": {"id": 7247, "code": "H = 10;N = 3\nA = [4, 5, 6]\nattack = sum(A)\nif attack >= H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "19521": {"id": 19521, "code": "n = 999999999\nfor i in range(1, 100000000, 1):\n    if(n*i % 2==0):\n        print(n*i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "5714": {"id": 5714, "code": "N = 2\nres = int(N / 2)\nif N % 2 != 0:\n  res += 1\nprint(res)", "coverage": [">", ">", ">", "!", ">"]}, "7523": {"id": 7523, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nh = 210;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a)>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "18118": {"id": 18118, "code": "n = \"1700\"\nans = 0\nif 1 <= int(n[0:2]) <= 12 and 0 <= int(n[2:4]) <= 99:\n  ans += 1\nif 0 <= int(n[0:2]) <= 99 and 1 <= int(n[2:4]) <= 12:\n  ans += 3\nif ans == 1:\n  print('MMYY')\nelif ans == 3:\n  print('YYMM')\nelif ans == 4:\n  print('AMBIGUOUS')\nelse:\n  print('NA')", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "15233": {"id": 15233, "code": "a = 12;s = 3;d = 1\nprint((a-d)//(s+d))", "coverage": [">", ">"]}, "10744": {"id": 10744, "code": "S = \"atcoder\"\nt=len(S)\nprint(\"YNeos\"[sum(1for i in range(t) if S[i]!=S[~i] )!=0 or S[(t+2)//2:]!=S[:(t-1)//2]::2])", "coverage": [">", ">", ">"]}, "3379": {"id": 3379, "code": "a = 12;b = 4\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "11153": {"id": 11153, "code": "s = \"akasaka\"\nn = len(s)\nfront = (n-1) // 2\nrear = (n+2) // 2\nsf = s[:front]\nsr = s[rear:]\nsrev = s[::-1]\nsfrev = sf[::-1]\nsrrev = sr[::-1]\nif sfrev == sf and srrev == sr and srev == s:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7280": {"id": 7280, "code": "h = 20;n = 3\na = [4, 5, 6]\nif sum(a) >= h: print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">"]}, "14098": {"id": 14098, "code": "n = 9\nL = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nud = 0\nch = 1\nfor i in range(n-1):\n    if L[i] < L[i+1] and ud == -1 and ch == 0:\n        ch = 1\n        ud = 1\n        cnt +=1\n    elif L[i] < L[i+1] and ch ==1:\n        ch = 0\n        ud = 1\n    elif L[i] > L[i+1] and ud == 1 and ch == 0:\n        ch = 1\n        ud= -1\n        cnt +=1\n    elif L[i] > L[i+1] and ch == 1:\n        ch = 0\n        ud = -1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "4166": {"id": 4166, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint((H2-H1)*60+(M2-M1)-K if (M2-M1) >= 0 else (H2-H1)*60+(M2-M1)-K)", "coverage": [">", ">"]}, "11996": {"id": 11996, "code": "a = 11;b = 16\nc = 11;d = 17\nif a == c:\n  print('0')\nelse:\n  print('1')", "coverage": [">", ">", ">", ">", "!", "!"]}, "12300": {"id": 12300, "code": "s = \"atcoder\"\nflag = 1\nl = len(s)\nfor i in range((l-1)//2):\n    if s[i] == s[(l-1)//2 - 1-i]:\n        continue\n    else:\n        flag = 0\n        break\nif s[:(l-1)//2] != s[(l+3)//2-1:]:\n    flag = 0\nprint(\"Yes\" if flag == 1 else \"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "11232": {"id": 11232, "code": "s = \"SAT\"\na = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nprint(7 - a.index(s))", "coverage": [">", ">", ">"]}, "19425": {"id": 19425, "code": "n = 3\nans = n\nif n%2:\n    ans *= 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "4011": {"id": 4011, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nall=0\nif m2>=m1:\n    all += (h2-h1)*60 + (m2-m1)\n    all -= k\nelse:\n    all += (h2-1-h1)*60 + (m2+60-m1)\n    all -= k\nprint(all)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "15584": {"id": 15584, "code": "X = 64146;Y = 123;Z = 456\na=X-Z\nb=Y+Z\nprint(a//b)", "coverage": [">", ">", ">", ">"]}, "19204": {"id": 19204, "code": "import sys \nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN = 12\nif N % 2 == 1:\n    print(0)\n    sys.exit()\nans = 0\ni = 1\nwhile True:\n    div = 5 ** i\n    cnt = N // div\n    cnt //= 2\n    if cnt == 0:\n        break\n    ans += cnt\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11496": {"id": 11496, "code": "S = \"SAT\"\ndays = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ni = days.index(S)\nprint (7-i)", "coverage": [">", ">", ">", ">"]}, "2863": {"id": 2863, "code": "N = \"1234567876\"\nSta = 753\nAns = 1000\nfor i in range(len(N)-2):\n    C_Ans = abs(Sta-int(\"\".join(N[i:i+3])))\n    if C_Ans < Ans:\n        Ans = C_Ans\nprint(Ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16486": {"id": 16486, "code": "n = 5\na = [6, 9, 4, 2, 11]\nx = max(a)\nm = x/2\na.remove(x)\na.sort()\nans = x\nfor i in a:\n    y = abs(i - m)\n    if ans >= y:\n        ans = y\n    else:\n        break    \n    z = i\nprint(x, z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "3540": {"id": 3540, "code": "a = 20;b = 30\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "11366": {"id": 11366, "code": "s = \"SAT\"\nday = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nnum = [7, 6, 5, 4, 3, 2, 1]\ndic = dict(zip(day, num))\nprint(dic[s])", "coverage": [">", ">", ">", ">", ">"]}, "1206": {"id": 1206, "code": "n = 112;i = 1\nwhile n>111*i:\n    i+=1\nprint(111*i)", "coverage": [">", ">", ">", ">"]}, "17430": {"id": 17430, "code": "S = \"1905\"\nY=int(S[:2])\nM=int(S[2:])\nif Y==0 or Y>12:\n    if M==0 or M>12:\n        print(\"NA\")\n    else:\n        print(\"YYMM\")\nelse:\n    if M==0 or M>12:\n        print(\"MMYY\")\n    else:\n        print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "10741": {"id": 10741, "code": "s = \"atcoder\"\nans=0\nif s==s[::-1] and s[:(len(s)-1)//2]==s[(len(s)-1)//2-1::-1] and s[(len(s)+3)//2-1:]==s[:(len(s)+3)//2-2:-1]:\n    ans+=1\nprint(\"NYoe s\"[ans::2])", "coverage": [">", ">", ">", "!", ">"]}, "12170": {"id": 12170, "code": "a = [11, 30]\nb = [12, 1]\nou=b[0]-a[0]\nif ou == 1:\n  print(1)\nelif ou==0:\n  print(0)\nelif ou==1-12:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "17968": {"id": 17968, "code": "s = \"0112\"\na = int(s[0:2])\nb = int(s[2:])\nif 13 <= a or a == 0:\n    if 1 <= b and b <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nelse:\n    if 1<= b  and b<= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "7139": {"id": 7139, "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\nattack=0\nfor i in range(n):\n    attack+=A[i]\nif attack>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16453": {"id": 16453, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nmax_el = A[-1]\nmedian = max_el//2\nimport bisect\nmedian_ind = bisect.bisect_left(A,median)\nif median_ind == 0:\n    print(A[-1],A[0])\n    exit()\nif median_ind == N-1:\n    print(A[-1],A[-2])\n    exit()\nabs_right = abs(A[median_ind]-median)\nabs_left = abs(A[median_ind-1]-median)\nif abs_right>abs_left:\n    print(A[-1],A[median_ind-1])\n    exit()\nprint(A[-1], A[median_ind])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "10684": {"id": 10684, "code": "a = 1;b = 1;k = 1\ndivisors = []\nfor x in range(1, max(a, b)+1):\n  if a % x == 0 and b % x == 0:\n    divisors.append(x)\ndivisors.reverse()\nprint(divisors[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4397": {"id": 4397, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nx = H1*60+M1\ny = H2*60+M2\nprint(y-x-K)", "coverage": [">", ">", ">", ">"]}, "13937": {"id": 13937, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nup = dn = False\npre = A[0]\nfor a in A[1:]:\n    if pre < a:\n        up = True\n    elif pre > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3887": {"id": 3887, "code": "X = 12;Y = 3;Z = 1\nprint(1+(X-Y-2*Z)//(Y+Z))", "coverage": [">", ">"]}, "7395": {"id": 7395, "code": "a = 10;b = 3\nc = [4, 5, 6]\nif(sum(c)>=a):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "4476": {"id": 4476, "code": "s = \"xyz\"\nfirst = s[0]\nend = s[-1]\nstrCount = len(s)-2\nprint('{}{}{}'.format(first, strCount, end))", "coverage": [">", ">", ">", ">", ">"]}, "2965": {"id": 2965, "code": "S = \"35753\"\nans=754\nfor i in range(len(S)-2):\n  n=abs(753-int(''.join(list(S[i:i+3]))))\n  ans=min(ans,n)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2778": {"id": 2778, "code": "s = \"1111111111\"\nm = 1000\nfor i in range(len(s)):\n    x = int(s[i:i+3])\n    if m > abs(753-x):\n        m = abs(753-x)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1148": {"id": 1148, "code": "n = \"750\"\nif int(n) <= int(n[0]) * 111:\n    print(int(n[0]) * 111)\nelse:\n    print((int(n[0]) + 1) * 111)", "coverage": [">", ">", ">", "!", "!"]}, "3041": {"id": 3041, "code": "s=\"1111111111\";m=float('inf')\nfor i in range(len(s)-2): m=min(m,abs(int(s[i:i+3])-753))\nprint(m)", "coverage": [">", ">", ">"]}, "11634": {"id": 11634, "code": "S = \"SAT\"\nday = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(day.index(S) + 1)", "coverage": [">", ">", ">"]}, "7140": {"id": 7140, "code": "h = 211;n = 5\nA = [31, 41, 59, 26, 53]\nattack=0\nfor i in range(n):\n    attack+=A[i]\nif attack>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6138": {"id": 6138, "code": "import sys\nreadline = sys.stdin.readline\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nimport bisect\nfor i in range(len(B)):\n  ind_a = bisect.bisect_left(A, B[i])\n  ind_c = bisect.bisect_right(C, B[i])\n  ans += ind_a * (len(C) - ind_c)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8485": {"id": 8485, "code": "N = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nA=[]\nB=[]\nsuma=0\nsumb=0\nfor n in range(N):\n    suma+=a[n]\n    A.append(suma)\nfor n in reversed(range(N)):\n    sumb+=b[n]\n    B.append(sumb)\nMAX=0\nfor n in range(N):\n    MAX=max(MAX,A[n]+B[N-n-1])\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17825": {"id": 17825, "code": "S = \"1700\"\ns1=S[0:2]\ns2=S[2:4]\nli=[\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif s1 not in li:\n    a=False\nelse:\n    a=True\nif s2 not in li:\n    b=False\nelse:\n    b=True\nif a==b==True:\n    print(\"AMBIGUOUS\")\nelif a==b==False:\n    print(\"NA\")\nelif a==True:\n    print(\"MMYY\")\nelse:\n    print(\"YYMM\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", ">", ">", "!", "!", "!", "!"]}, "16838": {"id": 16838, "code": "A = \"D\";B = \"D\"\nif A==\"H\":\n   print(B)\nelse:\n   if B == \"H\":\n      print(\"D\")\n   else:\n      print(\"H\")", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "14034": {"id": 14034, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = A[0]\nans = 1\nfor i in range(1, N):\n    if A[i] > prev:\n        pls = \"plus\"\n        break\n    elif A[i] < prev:\n        pls = \"minus\"\n        break\nelse:\n    print(1)\n    exit()\nfor i in range(1, N):\n    if pls == \"plus\" and prev > A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"minus\" and prev < A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"even\" and prev < A[i]:\n        pls = \"plus\"\n    elif pls == \"even\" and prev > A[i]:\n        pls = \"minus\"\n    prev = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3759": {"id": 3759, "code": "X = 13;Y = 3;Z = 1\nb = Y + 2 * Z\nans = 1\nwhile True:\n  b += Y + Z\n  if b > X:\n    break\n  else:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "225": {"id": 225, "code": "s = ['a']\nk = 25\nnow = 0\nwhile k>0 and now<len(s):\n    if s[now]=='a':\n        now+=1\n        continue\n    tmp = ord('z')-ord(s[now])+1\n    if tmp<=k:\n        s[now] = 'a'\n        k -= tmp\n        now+=1\n    else:\n        now+=1\nif k>0:\n    s[-1] = chr(ord(s[-1])+k%26 )\nprint(*s,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "6675": {"id": 6675, "code": "h = 10;n = 3\nA = [4, 5, 6]\nif h-sum(A)>0 :\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "13773": {"id": 13773, "code": "import datetime\nlst = ['10', '0', '15', '0', '30']\nh1 = int(lst[0])\nm1 = int(lst[1])\nh2 = int(lst[2])\nm2 = int(lst[3])\nk = int(lst[4])\nd = (60 * h2 + m2) - (60 * h1 + m1)\nprint(int(d - k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7276": {"id": 7276, "code": "H = 20;N = 3\nf = [4, 5, 6]\nif sum(f)>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "13561": {"id": 13561, "code": "s1 = \"abcde\";s2 = \"fghihgf\";s3 = \"edcba\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "5532": {"id": 5532, "code": "n = 100\nprint(n//2+n%2)", "coverage": [">", ">"]}, "14219": {"id": 14219, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzougen = 2\nans = 0\nfor i in range(1,n):\n    if i == n-1:\n        if zougen == 2:\n            ans += 1\n        elif zougen == 0:\n            if a[i]-a[i-1]<0:\n                ans += 2\n            else:\n                ans += 1\n        else:\n            if a[i]-a[i-1] > 0:\n                ans += 2\n            else:\n                ans += 1\n    elif zougen == 2:\n        if a[i]-a[i-1]>0:\n            zougen = 0\n        elif a[i]-a[i-1]<0:\n            zougen = 1\n        else:\n            zougen = 2\n    elif zougen == 0:\n        if a[i]-a[i-1]<0:\n            zougen = 2\n            ans += 1\n    elif zougen == 1:\n        if a[i]-a[i-1]>0:\n            zougen = 2\n            ans += 1\nif n == 1:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">"]}, "9829": {"id": 9829, "code": "N = 6\nS = \")))())\"\ndic = {'(':1, ')':-1}\nrlt = ''\ncnt = 0\nfor s in S:\n  cnt += dic[s]\n  rlt += s\n  if cnt < 0:\n    rlt = '(' + rlt\n    cnt = 0\nif cnt > 0:\n  rlt += ')'*cnt\nprint(rlt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8731": {"id": 8731, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nA2.reverse()\nfor i in range(1, N):\n    A1[i] += A1[i - 1]\n    A2[i] += A2[i - 1]\nA2.reverse()\nans = 0\nfor i in range(N):\n    ans = max(ans, A1[i] + A2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2939": {"id": 2939, "code": "s = \"1111111111\"\nans=1000\nfor i in range(len(s)-2):\n    n=''\n    n+=s[i]\n    n+=s[i+1]\n    n+=s[i+2]\n    n=int(n)\n    ans=min(abs(n-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1391": {"id": 1391, "code": "n = 750\nfor i in [str(i)*3 for i in range(10)]:\n    if int(i) >= n:\n        print(int(i))\n        break", "coverage": [">", ">", ">", ">", ">"]}, "12051": {"id": 12051, "code": "import datetime\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif (m2 - m1 == 1):\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17024": {"id": 17024, "code": "list = ['D', 'D']\nif list[0] == list[1]:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "85": {"id": 85, "code": "s = \"xyz\"\nk = 4\nlen_s = len(s)\nmoji = [0]*(len_s)\nfor i in range(len_s):\n    num = 26-(ord(s[i])-ord('a'))\n    if num <= k and num != 26:\n        moji[i] = 'a'\n        k -= num\n    else:\n        moji[i] = s[i]\nif k != 0:\n    moji[len_s-1] = chr(ord(moji[len_s-1])+k%26)\nprint(*moji,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "13038": {"id": 13038, "code": "if int(\"5\") in {3,5,7}:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!"]}, "18781": {"id": 18781, "code": "H = 3\nW = 7\nN = 10\nr = (N +max(H, W)-1)//max(H, W)\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "9168": {"id": 9168, "code": "S = \"2017/01/07\"\nprint(S[:3]+\"8\"+S[4:])", "coverage": [">", ">"]}, "14972": {"id": 14972, "code": "N = 1;P = 1\nA = [50]\ndp=[0]*(N+2)\ndp[0]=(P+1)%2\nfor i in range(1,N+1):\n    if A[i-1]%2==0:\n        dp[i]=2*dp[i-1]\n    else:\n        dp[i]=(2**(i-1)-dp[i-1])+dp[i-1]\nprint(dp[N])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11791": {"id": 11791, "code": "d1 = \"11\"\nd2 = \"12\"\nif d1 != d2:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "14122": {"id": 14122, "code": "from collections import deque\nN = 9\nA_deque = deque(int(e) for e in \"1 2 1 2 1 2 1 2 1\".split())\nsection = list()\nsection.append(A_deque.popleft())\nans = 1\nmode = 0\nwhile 1:\n    if len(A_deque) == 0:\n        break\n    elif mode == 0:\n        next = A_deque.popleft()\n        if section[-1] == next:\n            section.append(next)\n        elif section[-1] > next:\n            section.append(next)\n            mode = -1\n        elif section[-1] < next:\n            section.append(next)\n            mode = 1\n    elif mode == 1:\n        next = A_deque.popleft()\n        if section[-1] > next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\n    elif mode == -1:\n        next = A_deque.popleft()\n        if section[-1] < next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "12811": {"id": 12811, "code": "x = 6\nif x != 7 and x != 5 and x != 3:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "coverage": [">", ">", ">", "!", "!"]}, "16368": {"id": 16368, "code": "from bisect import bisect_left,bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nai=max(a)\nai2=ai/2\njj=bisect(a,ai2)\nif jj+1<n:\n    if abs(a[jj]-ai2)>abs(a[jj+1]-ai2):\n        jj=jj+1\nif jj-1>=0:\n    if abs(a[jj]-ai2)>abs(a[jj-1]-ai2):\n        jj=jj-1\nif jj==n-1:\n    jj=jj-1\naj=a[jj]\nprint(ai,aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", ">", ">"]}, "16779": {"id": 16779, "code": "a = \"H\";b = \"H\"\nif a == b:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "547": {"id": 547, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nabc = \"abcdefghijklmnopqrstuvwxyz\"\nc = 0\nfor e,i in enumerate(s):\n    if k-26+abc.index(i)>=0 and i!='a':\n        s[e] = 'a'\n        k-=26-abc.index(i)\nk+=abc.index(s[-1])\nk%=26\ns[-1] = abc[k]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9776": {"id": 9776, "code": "n = 6\ns = \")))())\"\nR, L = 0, 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        R += 1\n    else:\n        if R:\n            R -= 1\n        else:\n            L += 1\nprint('('*L + s + ')'*R)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "625": {"id": 625, "code": "s = ['a']\nk = 25\nn = len(s)\nmap = {(chr(ord(\"a\") + i)): (26-i)%26 for i in range(26)}\nfor i in range(n):\n    if k >= map[s[i]]:\n        k -= map[s[i]]\n        s[i] = \"a\"\nif k > 0:\n    s[n-1] = chr((ord(s[n-1])+k%26)%123)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17006": {"id": 17006, "code": "n = ['D', 'D']\na = n[0]\nb = n[1]\nif a == 'H':\n  if b == 'H':\n    print('H')\n  else:\n   print('D') \nelse:\n  if b == 'H':\n    print('D')\n  else:\n    print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "1144": {"id": 1144, "code": "n = 112\ntmp=(n+110)//111\nprint(111*tmp)", "coverage": [">", ">", ">"]}, "18008": {"id": 18008, "code": "S = \"1700\"\nfront = int(S[:2])\nback = int(S[2:])\nif front > 12 or front == 0:\n    if 0 < back <= 12 :\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif front <= 12 or front == 0:\n    if 0 < back <= 12: \n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "17017": {"id": 17017, "code": "i = ['D', 'H']\na = i[0]\nb = i[1]\nif a == b:\n    if a == \"H\":\n        print(\"H\")\n    else:\n        print(\"H\")\nelif a == \"D\":\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!"]}, "6056": {"id": 6056, "code": "N = \"2\"\nn=int(N)\na=int(n//2)\nb=int(n%2)\nprint(a+b)", "coverage": [">", ">", ">", ">", ">"]}, "9564": {"id": 9564, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nS = ['2', '0', '1', '7', '/', '0', '1', '/', '0']\nS[3] = '8'\nprint(''.join(S))", "coverage": [">", ">", ">", ">", ">", ">"]}, "4181": {"id": 4181, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nd = (h2 - h1) * 60 + (m2 - m1)\nprint(max(d - k, 0))", "coverage": [">", ">", ">"]}, "1863": {"id": 1863, "code": "import sys\ninput = sys.stdin.readline\nN = 100;A = 100;B = 100\nM = min(A, B)\nm = 0\nif A+B > N:\n    m = A+B-N\nelse:\n    m = 0\nprint(M, m, sep = \" \")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18469": {"id": 18469, "code": "h = 2\nw = 100\nN = 200\nm = max(h,w)\nd = N//m\nif N%m == 0:\n  print(d)\nelse:\n  print(d+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11897": {"id": 11897, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(\"1\" if d1 > d2 else \"0\")", "coverage": [">", ">", ">"]}, "6708": {"id": 6708, "code": "H = 20;N = 3\nA = [4, 5, 6]\nprint(\"Yes\") if H <= sum(A) else print(\"No\")", "coverage": [">", ">", ">"]}, "1473": {"id": 1473, "code": "from math import ceil\nn = 750\nif n%111 == 0:\n    print(n)\nelse:\n    print(111*ceil(n/111))", "coverage": [">", ">", ">", "!", "!", ">"]}, "967": {"id": 967, "code": "N = \"750\"\nprint(str(int(N[0]) + 1) * 3 if int(N[0] * 3) < int(N) else N[0] * 3)", "coverage": [">", ">"]}, "9591": {"id": 9591, "code": "S = \"2017/01/31\"\nprint(S.replace('2017/01/', '2018/01/'))", "coverage": [">", ">"]}, "3039": {"id": 3039, "code": "s=\"1234567876\";m=float('inf')\nfor i in range(len(s)-2): m=min(m,abs(int(s[i:i+3])-753))\nprint(m)", "coverage": [">", ">", ">"]}, "17004": {"id": 17004, "code": "n = ['H', 'H']\na = n[0]\nb = n[1]\nif a == 'H':\n  if b == 'H':\n    print('H')\n  else:\n   print('D') \nelse:\n  if b == 'H':\n    print('D')\n  else:\n    print('H')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3385": {"id": 3385, "code": "a = 12;b = 4\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", "!", "!", ">"]}, "9902": {"id": 9902, "code": "n = 3\ns = \"())\"\nans=[]\nminscore=0\nscore=0\nfor i in range(n):\n  if s[i]=='(':\n    score+=1\n  else:\n    score-=1\n  minscore=min(minscore,score)\nfinalscore=score\nfor i in range(-minscore):\n  ans.append('(')\nfor i in range(n):\n  ans.append(s[i])\nfor i in range(-minscore+finalscore):\n  ans.append(')')\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "15332": {"id": 15332, "code": "from sys import stdin\nimport math\nx = 100000;y = 1;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "13736": {"id": 13736, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ngetUpTime = H1 * 60 + M1\ngoToBed = H2 * 60 + M2\nDisposableTime = goToBed - getUpTime\nif K > DisposableTime:\n    print(0)\nelse:\n    print(DisposableTime - K)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18750": {"id": 18750, "code": "h = 2\nw = 100\nn = 200\nm=max(h,w)\nif n%m==0:\n  print(int(n/m))\nelse:\n  print(int(n/m+1))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "7616": {"id": 7616, "code": "a = 211;b = 5\nl = [31, 41, 59, 26, 53]\nl[::-1]\ns=0\nf=0\nfor i in range(len(l)):\n  s+=l[i]\n  if s>=a:\n    f=1\n    break \n  else:\n    continue\nif f==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "18291": {"id": 18291, "code": "H = 14\nW = 12\nN = 112\npainted = 0\ncnt = 0\nfor _ in range(min(H, W)):\n    painted += max(H, W)\n    cnt += 1\n    if painted >= N:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5735": {"id": 5735, "code": "N = 2\nprint(N // 2 + 1 if N % 2 else N // 2)", "coverage": [">", ">"]}, "9832": {"id": 9832, "code": "t=s=\")))())\"\nt = \")))())\";s = \")))())\"\nprint(\"(\"*s.count(\")\")+t+\")\"*s.count(\"(\"))", "coverage": [">", ">", ">"]}, "5823": {"id": 5823, "code": "n = 100\nprint([n//2+1,n//2][n%2==0])", "coverage": [">", ">"]}, "6274": {"id": 6274, "code": "import bisect\nimport sys\ninput = sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt = 0\na.sort()\nc.sort()\nfor i in range(n):\n    cnt += (bisect.bisect_left(a, b[i])) * (n-bisect.bisect_right(c, b[i]))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18732": {"id": 18732, "code": "import math\nh = 2\nw = 100\nn = 200\nt = max(h,w)\nprint(math.ceil(n/t))", "coverage": [">", ">", ">", ">", ">", ">"]}, "5429": {"id": 5429, "code": "N = 2\nif N % 2 == 1:\n    N += 1\nprint(N//2)", "coverage": [">", ">", "!", ">"]}, "19274": {"id": 19274, "code": "n = 12\nif n%2==1:\n  ans=0\nelse:\n  m=n//10\n  ans=m\n  for i in range(1,30):\n    ans += m//(5**i)\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "1520": {"id": 1520, "code": "n = \"112\"\nif int(n[0]*len(n)) >= int(n):\n    print(n[0]*len(n))\nelse:\n    print(str(int(n[0])+1)*len(n))", "coverage": [">", ">", "!", "!", ">"]}, "520": {"id": 520, "code": "s = \"codefestival\"\nk = 100\nans=''\nfor c in s:\n    t=ord('z')-ord(c)+1\n    if t<26 and t<=k:\n        k-=t\n        ans+='a'\n    else:\n        ans+=c\nif k>0:\n    ans=ans[:-1]+chr(ord('a')+(ord(ans[-1])-ord('a')+k)%26)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3740": {"id": 3740, "code": "X = 64145;Y = 123;Z = 456\nprint((X-(Y+2*Z)) // (Y+Z) + 1)", "coverage": [">", ">"]}, "11450": {"id": 11450, "code": "day = ['','SAT','FRI','THU','WED','TUE','MON','SUN']\ns = \"SAT\"\nfor i in range(8):\n    if s==day[i]:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">"]}, "15184": {"id": 15184, "code": "a = 64145;b = 123;c = 456\na-=c\nb+=c\nprint(a//b)", "coverage": [">", ">", ">", ">"]}, "13592": {"id": 13592, "code": "x = \"happy\";y = \"newyear\";z = \"enjoy\"\nprint(x + ' ' + y + ' ' + z)", "coverage": [">", ">"]}, "11216": {"id": 11216, "code": "wee=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint((7-wee.index(\"SAT\")))", "coverage": [">", ">"]}, "12998": {"id": 12998, "code": "X = 5\nif X in [3,5,7]:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "14927": {"id": 14927, "code": "from math import factorial\nn = 3;p = 0\na = [1, 1, 1]\ncnt = [0,0]\nfor i in a:\n    cnt[i%2] += 1\nans = 0\nwhile True:\n    if p > cnt[1]:\n        break\n    ans += factorial(cnt[1]) // factorial(p) // factorial(cnt[1] - p)\n    p += 2\nprint(ans * 2 ** cnt[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4111": {"id": 4111, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nm1 += h1 * 60\nm2 += h2 * 60\nm = 0\nif m1 == m2:\n  m = 24 * 60\nelif m1 < m2:\n  m = m2 - m1\nelse:\n  m = 24 * 60 - (m1 - m2)\nprint(m - k)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "5184": {"id": 5184, "code": "s = \"xyz\"\nS = s[0] + str(len(s) - 2) + s[-1]\nprint(S)", "coverage": [">", ">", ">"]}, "2994": {"id": 2994, "code": "S = \"1234567876\"\nm = float(\"inf\")\nfor i in range(len(S)-2):\n    m = min(m, abs(753 - int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">", ">", ">"]}, "14052": {"id": 14052, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nindex = 1\nans = 0\nwhile index < n:\n    ans += 1\n    if a[index-1] < a[index]:\n        flag = True\n    elif a[index-1] > a[index]:\n        flag = False\n    else:\n        flag3 = True\n        for i in range(index,n):\n            if a[index] != a[i]:\n                flag3 = False\n                if a[index] < a[i]:\n                    flag = True\n                    break\n                else:\n                    flag = False\n                    break\n        if flag3:\n            break\n    flag2 = True\n    for i in range(index,n):\n        if flag and a[i] < a[i-1]:\n            index = i+1\n            flag2 = False\n            break\n        elif a[i] > a[i-1] and flag == False:\n            index = i+1\n            flag2 = False\n            break\n    if flag2:\n        break\nif index == n:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">"]}, "14046": {"id": 14046, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nfirst = True\nup = False\ndown = False\nfor i in range(n):\n    if first:\n        cnt += 1\n        now = a[i]\n        if i < n-1:\n            if a[i+1] > now:\n                up = True\n                down = False\n                first = False\n            elif a[i+1] < now:\n                down = True\n                up = False\n                first = False\n            else:\n                up = False\n                down = False\n                first = True\n                cnt -= 1\n    else:\n        now = a[i]\n        if i < n-1:\n            if up:\n                if now > a[i+1]:\n                    first = True\n            elif down:\n                if now < a[i+1]:\n                    first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "11464": {"id": 11464, "code": "week = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ns = \"SAT\"\ni = 1\nwhile s != week[-i]:\n    i = i + 1\nprint(int(i))", "coverage": [">", ">", ">", ">", "!", ">"]}, "3321": {"id": 3321, "code": "import sys\na = 20;b = 30\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "5339": {"id": 5339, "code": "import math\nprint((int)(math.ceil((int)(\"2\")/2)))", "coverage": [">", ">"]}, "13738": {"id": 13738, "code": "import datetime\nfrom sys import stdin\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nd1 = datetime.datetime(year=2018, month=1, day=7, hour=h1, minute=m1, second=0, microsecond=0)\nd2 = datetime.datetime(year=2018, month=1, day=7, hour=h2, minute=m2, second=0, microsecond=0)\ndelta = d2 - d1\ndt2 = delta.seconds / 60\ndt2 -= k\nif dt2 < 0 :\n\tdt2 = 0\nprint(int(dt2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13928": {"id": 13928, "code": "n = 7\nans = 1\na, b = False, False\nx = [1, 2, 3, 2, 1, 999999999, 1000000000]\nfor i in range(1, n):\n    if x[i] > x[i - 1]:\n        a = True\n    if x[i] < x[i - 1]:\n        b = True\n    if a and b:\n        a, b = False, False\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13845": {"id": 13845, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\nfirst = True\nincreasing = True\nfor i in range(1, n):\n    if (first):\n        if (a[i] > a[i-1]):\n            first = False\n            increasing = True\n        elif (a[i] < a[i-1]):\n            first = False\n            increasing = False\n    else:\n        if (a[i] > a[i-1]) and (increasing == False):\n            cnt += 1\n            first = True\n        elif (a[i] < a[i-1]) and (increasing == True):\n            cnt += 1\n            first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "6282": {"id": 6282, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncount = 0\nfor j in range(N):\n    c = N-bisect.bisect_right(C,B[j])\n    b = bisect.bisect_right(A,B[j]-1)\n    count += b*c\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7723": {"id": 7723, "code": "import math\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(int(math.ceil((len(a)-1) / ( k -1))))", "coverage": [">", ">", ">", ">"]}, "18076": {"id": 18076, "code": "S = 1905\nA = S//100\nB = S%100\nif 0 < A <= 12 and 0 < B <= 12:\n    print(\"AMBIGUOUS\")\nelif 0 < A <= 12:\n    print(\"MMYY\")\nelif 0 < B <= 12:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "11497": {"id": 11497, "code": "S = \"SUN\"\ndays = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ni = days.index(S)\nprint (7-i)", "coverage": [">", ">", ">", ">"]}, "1200": {"id": 1200, "code": "N = 112\na = int(str(N)[0] * 3)\nif N == a:\n    print(N)\nelif N < a:\n    print(a)\nelse:\n    print(a + 111)", "coverage": [">", ">", ">", "!", ">", "!", "!", ">"]}, "16949": {"id": 16949, "code": "a = \"D\";b = \"D\"\nhd = \"HD\"\nif a == \"H\":\n    print(b)\nelse:\n    print(hd[hd.index(b) - 1])", "coverage": [">", ">", ">", "!", "!", ">"]}, "600": {"id": 600, "code": "S = \"xyz\"\nK = 4\nans = \"\"\nfor i, s in enumerate(S):\n    if i == len(S) - 1:\n        if ord(s) + K <= ord(\"z\"):\n            ans += chr(ord(s) + K)\n        else:\n            ans += chr(ord(\"a\") + (ord(s) + K - ord(\"z\") - 1) % 26)\n    elif s == \"a\":\n        ans += \"a\"\n        continue\n    elif ord(\"z\") + 1 - ord(s) <= K:\n        ans += \"a\"\n        K -= (ord(\"z\") + 1 - ord(s))\n    else:\n        ans += s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">"]}, "5282": {"id": 5282, "code": "n = {'9', '4', '1', '7'}\nk={'1','9','7','4'}\nif n==k:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", "!"]}, "9050": {"id": 9050, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif e-a<=k:print(\"Yay!\")\nelse:print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!"]}, "146": {"id": 146, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\ndiff = [(ord(\"a\") + 26 - ord(x)) % 26 for x in s]\nfor i in range(len(s) - 1):\n    if diff[i] <= k:\n        s[i] = \"a\"\n        k -= diff[i]\n    else:\n        continue\ntmp = ord(s[-1]) + k % 26\nif tmp > 122:\n    tmp -= 26\ns[-1] = chr(tmp)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">"]}, "19278": {"id": 19278, "code": "N = 12\nif N % 2 == 1:\n    print(0)\n    exit(0)\nn = 10\nans = 0\nwhile True:\n    if n > N:\n        break\n    ans += N//n\n    n *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13611": {"id": 13611, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(',',' '))", "coverage": [">", ">"]}, "832": {"id": 832, "code": "x = 2\ncnt = 1\nmod = 7\nfor i in range(x):\n    if mod % x == 0:\n        print(cnt)\n        exit()\n    mod = (10 * mod + 7) % x\n    cnt += 1\nprint(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "942": {"id": 942, "code": "K = 101\nx=7%K\ni=1\nflag=0\nfor j in range(K+1):\n  if x==0:\n    print(i)\n    flag=1\n    break\n  x=(10*x+7)%K\n  i+=1\nif flag==0:\n  print(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "8764": {"id": 8764, "code": "N = 5\nA_1 = [3, 2, 2, 4, 1]\nA_2 = [1, 2, 2, 2, 1]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3561": {"id": 3561, "code": "a = 20;b = 30\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "4172": {"id": 4172, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ns = -60*h1-m1+60*h2+m2\nprint(s-k)", "coverage": [">", ">", ">"]}, "14781": {"id": 14781, "code": "N = 1;P = 1\nA = [50]\nC = {0:0,1:0}\nfor i in range(N):\n    if A[i]%2==0:\n        C[0] += 1\n    else:\n        C[1] += 1\nif P==0:\n    if C[1]==0:\n        n = 2**C[0]\n    else:\n        n = 2**C[0]*2**(C[1]-1)\nelse:\n    if C[1]==0:\n        n = 0\n    else:\n        n = 2**C[0]*2**(C[1]-1)\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "12657": {"id": 12657, "code": "a = 6\nprint(['NO','YES'][a == 7 or a==5 or a==3])", "coverage": [">", ">"]}, "16427": {"id": 16427, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nP=max(A)\nI=A.index(P)\ndel A[I]\nQ=min(A,key=lambda x:abs(2*x-P))\nprint(P,Q)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16195": {"id": 16195, "code": "n = 2\na = [100, 0]\na.sort()\nM = a[-1]\nm = a[0]\nC = -1\nfor i in range(n):\n  c = a[i]*(M-a[i])\n  if C < c:\n    C = c\n    m = a[i]\n  else:\n    break\nprint(M, m, sep=' ')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "17165": {"id": 17165, "code": "a = \"D\";b = \"H\"\nprint(\"H\" if a==b or a==b else \"D\")", "coverage": [">", ">"]}, "13610": {"id": 13610, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(',',' '))", "coverage": [">", ">"]}, "5299": {"id": 5299, "code": "n = 5\nmin = 0\nif n%2 == 0:\n  min = n/2\nelse:\n  min = n//2 + 1\nprint(int(min))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "13193": {"id": 13193, "code": "S = \"happy,newyear,enjoy\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "15552": {"id": 15552, "code": "x = 64145;y = 123;z = 456\nyz = y + z\nx -= z\nprint(x // yz)", "coverage": [">", ">", ">", ">"]}, "2410": {"id": 2410, "code": "n = 4;m = 3\nimport math \nif n>=2 and m>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2) + math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif n<2 and m>=2 :\n  ans =  math.factorial(m)/math.factorial(m-2)/math.factorial(2)\nelif m<2 and n>=2:\n  ans = math.factorial(n)/math.factorial(n-2)/math.factorial(2)\nelse:\n  ans = 0\nprint(int(ans))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "17877": {"id": 17877, "code": "s = \"1905\"\ns1=int(s[0]+s[1])\ns2=int(s[2]+s[3])\nif (0<s1<13)and(0<s2<13):\n    print(\"AMBIGUOUS\")\nelif (0<s1<13):\n    print(\"MMYY\")\nelif (0<s2<13):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "7123": {"id": 7123, "code": "import math\nh = 10;n = 3\nsum = 0\nli = [4, 5, 6]\nfor val in li:\n    sum += val\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "14190": {"id": 14190, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nflag = 0\nfor i in range(n - 1):\n    if flag == 0:\n        if a[i + 1] - a[i] > 0:\n            flag = 1\n        elif a[i + 1] - a[i] < 0:\n            flag = -1\n    elif flag == 1 and a[i + 1] - a[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a[i + 1] - a[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "716": {"id": 716, "code": "K = 101\nif K%2 == 0 or K%5 == 0:\n    print(-1)\nelif K%7 == 0:\n    x = -1\n    b = 9*K/7\n    c = 10%b\n    for i in range(1,K+1):\n        if c ==1:\n            x = i\n            break\n        c = (c*10)%b\n    print(x)\nelse:\n    x = -1\n    b = 9*K\n    c = 10%b\n    for i in range(1,K+1):\n        if c ==1:\n            x = i\n            break\n        c = (c*10)%b\n    print(x)", "coverage": [">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9353": {"id": 9353, "code": "s = ['2017', '01', '31']\ns[0]=\"2018\"\nprint(\"/\".join(s))", "coverage": [">", ">", ">"]}, "6726": {"id": 6726, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nsuma = sum(a)\nprint('Yes' if h - suma <= 0 else 'No')", "coverage": [">", ">", ">", ">"]}, "11260": {"id": 11260, "code": "a = \"SAT\"\nday = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nvalues = [7,6,5,4,3,2,1]\nd = dict(zip(day,values))\nprint(d[a])", "coverage": [">", ">", ">", ">", ">"]}, "3704": {"id": 3704, "code": "A = 20;B = 30\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "8047": {"id": 8047, "code": "n = 3;k = 3\nA = [1, 2, 3]\nn -= k\nk -= 1\nans = 1\nans += (n+k-1)//k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7301": {"id": 7301, "code": "h = 210\na = [31, 41, 59, 26, 53]\nprint([\"Yes\", \"No\"][sum(a) < h])", "coverage": [">", ">", ">"]}, "16693": {"id": 16693, "code": "a = \"D\";b = \"H\"\nif a == \"D\" and b == \"D\":\n    print(\"H\")\nelif a == \"H\" and b == \"H\":\n    print(\"H\")\nelif a == \"D\" or b == \"D\":\n    print(\"D\")", "coverage": [">", ">", "!", ">", "!", ">", ">"]}, "18342": {"id": 18342, "code": "H = 14\nW = 12\nN = 112\ncnt=0\nM=0\nif H>W:\n    selection=H\nelse:\n    selection=W\nwhile M<N:\n    cnt+=1\n    M+=selection\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "5082": {"id": 5082, "code": "S = ['x', 'y', 'z']\nprint(S[0]+str(len(S)-2)+S[len(S)-1])", "coverage": [">", ">"]}, "13075": {"id": 13075, "code": "X = 6\nans = 'YES' if X == 3 or X == 5 or X == 7 else 'NO'\nprint(ans)", "coverage": [">", ">", ">"]}, "13735": {"id": 13735, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\ngetUpTime = H1 * 60 + M1\ngoToBed = H2 * 60 + M2\nDisposableTime = goToBed - getUpTime\nif K > DisposableTime:\n    print(0)\nelse:\n    print(DisposableTime - K)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7533": {"id": 7533, "code": "H = 10;N = 3\nA = [4, 5, 6]\nA.sort(reverse=True)\nS = sum(A[:N])\nif S >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9198": {"id": 9198, "code": "S = \"2017/01/07\"\nprint(\"2018\"+S[4:])", "coverage": [">", ">"]}, "17071": {"id": 17071, "code": "a = \"D\";b = \"H\"\nif a == \"H\":\n    print(b)\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")", "coverage": [">", ">", "!", "!", ">", ">", "!", "!"]}, "18202": {"id": 18202, "code": "from collections import defaultdict\nb = defaultdict(int)\nc = defaultdict(int)\nn = int(\"6\")\na = map(int, \"2 3 3 1 3 1\".split())\nfor idx,i in enumerate(a, start=1):\n  b[i - idx] += 1\n  c[i + idx] += 1\nans = 0\nfor k,v in b.items():\n  ans += (v * c[-1 * k])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14872": {"id": 14872, "code": "from math import factorial\nn = 3;p = 0\nnums = [1, 1, 1]\nodd = 0\neven = 0\nfor num in nums:\n    if num % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nif p == 0 and odd == 0:\n    ans += 2 ** even\nelse:\n    ans += (2 ** even) * (2 ** odd // 2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "1905": {"id": 1905, "code": "N = 100;A = 100;B = 100\ns = min(A,B)\nt = A+B-N\nif t>=0:\n    print(s,t)\nelse:\n    print(s, 0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "200": {"id": 200, "code": "s = ['a']\nK = 25\nans = []\nfor c in s:\n    cnt = ord('z') - ord(c) + 1\n    if c == 'a':\n        ans.append('a')\n    elif K >= cnt:\n        K -= cnt\n        ans.append('a')\n    else:\n        ans.append(c)\nK %= 26\nif 122 < ord(ans[-1]) + K:\n    ans[-1] = chr(ord(ans[-1]) + K - 26)\nelse:\n    ans[-1] = chr(ord(ans[-1]) + K)\nprint(*ans,sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "18514": {"id": 18514, "code": "h = 2\nw = 100\nn = 200\nprint(n // max(h,w)  + (1 if n%max(h,w) != 0 else 0))", "coverage": [">", ">", ">", ">"]}, "15489": {"id": 15489, "code": "x = 12;y = 3;z = 1\nans = (x - z) // (y + z)\nprint(ans)", "coverage": [">", ">", ">"]}, "10166": {"id": 10166, "code": "n = 3\ns = \"())\"\nm = 0\nnow = 0\nfor i in s:\n    if i == ')':\n        now += 1\n        if m < now:\n            m = now\n    else:\n        now -= 1\nprint('('*m + s + ')'*(m + 2*s.count('(') - len(s)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "11198": {"id": 11198, "code": "a=['MON','TUE','WED','THU','FRI','SAT','SUN']\nb = \"SAT\"\nprint(6-a.index(b) if b!='SUN' else '7')", "coverage": [">", ">", ">"]}, "1999": {"id": 1999, "code": "i = [100, 100, 100]\nprint(min(i[1], i[2]), max(i[1] + i[2] - i[0], 0))", "coverage": [">", ">"]}, "1612": {"id": 1612, "code": "n = 100;a = 100;b = 100\nli = [a,b]\nmaxi = min (li)\nm = 0\nif a + b <= n:\n    m = 0\nif a + b > n:\n    m = a + b - n\nprint(maxi,m)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "10718": {"id": 10718, "code": "s = \"akasaka\"\nn = len(s)\nif s != s[::-1]:\n  print(\"No\")\nelif s[0:(n-1)//2] != s[(n-1)//2-1::-1]:\n  print(\"No\")\nelif s[(n+3)//2-1:n] != s[n-1:(n+3)//2-2:-1]:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "2451": {"id": 2451, "code": "x = 2;y = 1\na=x*(x-1)//2\nb=y*(y-1)//2\nprint(a+b)", "coverage": [">", ">", ">", ">"]}, "15279": {"id": 15279, "code": "X = 100000;Y = 1;Z = 1\nprint((X-Z) // (Y + Z))", "coverage": [">", ">"]}, "7932": {"id": 7932, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\npos_of_1 = A.index(1)\nif K >= pos_of_1 + 1 or N - K <= pos_of_1:\n  print(math.ceil((N - K) / (K - 1)) + 1) \nelse:\n  L = A[:pos_of_1 + 1]\n  R = A[pos_of_1:]\n  res = []\n  for i in range(1, K):\n    l = math.ceil((len(L) - i) / (K - 1)) + 1\n    r = math.ceil((len(R) - K - 1 + i) / (K - 1)) + 1\n    res.append(l + r - 1)\n  print(min(res))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18935": {"id": 18935, "code": "import sys\nn = 12\nif n%2 == 1:\n    print(0)\n    sys.exit()\nelse:\n    cur_two, cur_ten = 2, 10\n    num_two, num_ten = 0, 0\n    while cur_two <= n:\n        num_two += n//cur_two\n        cur_two *= 2\n    while cur_ten <= n:\n        num_ten += n//cur_ten\n        cur_ten *= 5\n    print(min(num_two, num_ten))", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13621": {"id": 13621, "code": "X = \"abcde\";Y = \"fghihgf\";Z = \"edcba\"\nprint(X,Y,Z)", "coverage": [">", ">"]}, "12973": {"id": 12973, "code": "x = 6\nif x%2 == 0 or x == 9 or x ==1:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "coverage": [">", ">", ">", "!", "!"]}, "18884": {"id": 18884, "code": "n = 5\nans, tmp = 0, 5\nif n % 2 == 0:\n    n //= 2\n    while tmp <= n:\n        ans += n // tmp\n        tmp *= 5\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]}, "5464": {"id": 5464, "code": "n = 5\nif(n//2==n/2):\n    m=n//2\nelse:\n    m=n//2+1\nprint(m)", "coverage": [">", ">", "!", "!", ">", ">"]}, "6002": {"id": 6002, "code": "N = 2\nans = N//2 + (1 if N % 2 == 1 else 0)\nprint(ans)", "coverage": [">", ">", ">"]}, "5501": {"id": 5501, "code": "n = 2\nx, y = divmod(n, 2)\nprint(x + y)", "coverage": [">", ">", ">"]}, "9199": {"id": 9199, "code": "S = \"2017/01/31\"\nprint(\"2018\"+S[4:])", "coverage": [">", ">"]}, "3847": {"id": 3847, "code": "X = 100000;Y = 1;Z = 1\nX = X - Z\nY = Y + Z\nprint(X//Y)", "coverage": [">", ">", ">", ">"]}, "3922": {"id": 3922, "code": "X = 13;Y = 3;Z = 1\nprint(int((X-Z)/(Z+Y)))", "coverage": [">", ">"]}, "16047": {"id": 16047, "code": "a = \"20\";b = \"15\"\na = int(a)\nb = int(b)\nif a <= b:\n    print(\"0\")\nelif a <= b*2:\n    print(\"0\")\nelse:\n    print(a-b*2)", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "2400": {"id": 2400, "code": "N = 4;M = 3\nans = (N * (N-1)) // 2 + (M * (M-1)) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "6578": {"id": 6578, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nx=[1 for _ in range(N)]\nans=0\nfor i in range(N):\n        a=bisect.bisect_left(A,B[i]) \n        c=N-bisect.bisect_right(C,B[i])\n        ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17248": {"id": 17248, "code": "a = \"D\";b = \"H\"\nif b == 'H':\n    if a == 'H':\n        print('H')\n    else:\n        print('D')\nelif b == 'D':\n    if a == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!"]}, "16435": {"id": 16435, "code": "n = 5\na = [6, 9, 4, 2, 11]\na=sorted(a)\nx=a[n-1]/2\nans=a[0]\nfor i in range(1,n-1):\n    if abs(ans-x)>abs(a[i]-x):\n        ans=a[i]\nprint(\"{} {}\".format(a[n-1],ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17911": {"id": 17911, "code": "s = \"0112\"\nn1 = s[0:2]\nn2 = s[2:4]\nif int(n1) > 12 and int(n2) > 12:\n    out_print = 'NA'\nelif int(n1) <= 12 and int(n2) <= 12:\n    out_print = 'AMBIGUOUS'\n    if int(n1) == 0 and int(n2)!=0:\n        out_print = 'YYMM'\n    elif int(n1) != 0 and int(n2) == 0:\n        out_print = 'MMYY'\n    elif int(n1)==0 and int(n2)==0:\n        out_print = 'NA'\nelif int(n1) <= 12 and int(n2) >12:\n    out_print = 'MMYY'\n    if int(n1) == 0:\n        out_print = 'NA'\nelif int(n1) > 12 and int(n2) <= 12:\n    out_print = 'YYMM'\n    if int(n2) == 0:\n        out_print = 'NA'\nprint(out_print)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11193": {"id": 11193, "code": "s = \"level\"\nn = len(s)\ns2 = s[:(n-1)//2]\ns3 = s[((n+3)//2)-1:]\nif (s == s[::-1]) & (s2 == s2[::-1]) & (s3 == s3[::-1]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "16174": {"id": 16174, "code": "import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nif n == 2:\n    print(a[1], a[0])\n    exit()\nx = a[-1]\nindex = bisect.bisect_left(a[:n-1], x/2)\nans = []\nans.append([abs(x/2-a[index-1]), a[index-1]])\nans.append([abs(x/2-a[index]), a[index]])\nans.sort()\nprint(x, ans[0][1])", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "210": {"id": 210, "code": "alpha=[chr(ord('a') + i) for i in range(26)]\na = ['x', 'y', 'z']\nN = 4\nfor i in range(len(a)):\n   s=26-alpha.index(a[i])\n   if s<=N and s!=26:\n      a[i]=\"a\"\n      N-=s\ns=alpha.index(a[-1])\ns=(s+N)%26\na[-1]=alpha[s]\nprint(*a,sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11373": {"id": 11373, "code": "s = \"SUN\"\nd = ['SUN','MON','TUE','WED','THU','FRI','SAT','a']  \nd.reverse()\nprint(d.index(s))", "coverage": [">", ">", ">", ">"]}, "15935": {"id": 15935, "code": "a = 12;b = 4\nc=a-2*b\nif c<0:\n    c=0\nprint(c)", "coverage": [">", ">", ">", "!", ">"]}, "17895": {"id": 17895, "code": "s = \"1905\"\ns1, s2 = s[:2],s[2:]\nif s1>'12' and s2>'12':\n    print('NA')\nelif s1<='12' and s2<='12':\n    if s1 == '00' and s2!='00':\n        print('YYMM')\n    elif s2 == '00' and s1!='00':\n        print('MMYY')\n    elif s1 =='00' and s2 =='00':\n        print('NA')\n    else :\n        print('AMBIGUOUS')\nelif s1<='12' and s2>'12':\n    print('NA' if s1 == '00' else 'MMYY')   \nelif s2<='12' and s1>'12':\n    print('NA' if s2 == '00' else 'YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!"]}, "18648": {"id": 18648, "code": "import math\nH = 14\nW = 12\nN = 112\nans = max([H,W])\nfa = N/ans\nprint(math.ceil(fa))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18807": {"id": 18807, "code": "import math\nh = 2\nw = 100\nn = 200\nif h > w:\n    print(math.ceil(n / h))\nelse:\n    print(math.ceil(n / w))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "1089": {"id": 1089, "code": "n = 112\nif n<=111:\n    print(111)\nfor i in range(1,10):\n    if 111*i<n<=111*(i+1):\n        print(111*(i+1))", "coverage": [">", ">", "!", ">", ">", ">"]}, "10905": {"id": 10905, "code": "s = \"level\"\nn = len(s)\ns1 = s[0:(n-1)//2]\ns2 = s[(n+3)//2-1:n+1]\nif s == s[::-1]:\n    if s1 == s1[::-1]:\n        if s2 == s2[::-1]:\n            print(\"Yes\")\n            exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10938": {"id": 10938, "code": "s = \"akasaka\"\nn = len(s)\nsd = s[::-1]\na = s[:int((n-1)/2)]\nad = a[::-1]\nb = s[int((n+3)/2-1):]\nbd = b[::-1]\nif s == sd and a == ad and b == bd:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8568": {"id": 8568, "code": "N = 4\nL1 = [1, 1, 1, 1]\nL2 = [1, 1, 1, 1]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14028": {"id": 14028, "code": "n = 7\nli = [1, 2, 3, 2, 1, 999999999, 1000000000]\nx = 0 \ni = 0 \nans = 0\nif n == 1:\n    print(1)\n    exit()\nwhile True:\n    if x == 0:\n        if li[i] < li[i+1]:\n            x = 1\n        elif li[i] > li[i+1]:\n            x = -1\n        else:\n            x = 0\n    if x == 1:\n        if li[i] > li[i+1]:\n            ans += 1\n            x = 0\n    if x == -1:\n        if li[i] < li[i+1]:\n            ans += 1\n            x = 0\n    i += 1\n    if i == n-1:\n        break\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5391": {"id": 5391, "code": "n = 50.01\nprint(int(round(n)))", "coverage": [">", ">"]}, "16680": {"id": 16680, "code": "a = \"H\";b = \"H\"\nif (a==\"H\" and b==\"H\")or(a==\"D\"and b==\"D\"):\n    print(\"H\")\nelif (a==\"H\" and b==\"D\") or (a==\"D\" and b==\"H\"):\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!"]}, "2707": {"id": 2707, "code": "if sorted(list(map(int, \"4 9 0 8\".split()))) == [1, 4, 7, 9]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", "!", "!", ">"]}, "6170": {"id": 6170, "code": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nfrom bisect import bisect_left, bisect_right\nans = 0\nfor bi in b:\n    ans += bisect_left(a,bi) * (n-bisect_right(c,bi))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1785": {"id": 1785, "code": "n = 10;a = 7;b = 5\nmax_r = min([a,b])\nmin_r = max([0, (a+b)-n])\nprint(\"{} {}\".format(max_r, min_r))", "coverage": [">", ">", ">", ">"]}, "7874": {"id": 7874, "code": "n = 3;k = 3\nAs = [1, 2, 3]\na=n-1\nb=k-1\nif a % b == 0:\n  print(a//b)\nelse:\n  print((a//b) + 1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12706": {"id": 12706, "code": "x = \"5\"\nprint(\"YES\" if x in \"753\" else \"NO\")", "coverage": [">", ">"]}, "4233": {"id": 4233, "code": "h = [10, 0, 12, 0, 120]\nm = 0\nm += 60 - h[1]\nif m != 0: h[0] += 1\nm += h[3] + (h[2]-h[0]) * 60\nprint(m-h[-1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "7743": {"id": 7743, "code": "N = 3;K = 3\nAN = [1, 2, 3]\nAN.sort()\nN = N - AN.count(AN[0])\nprint( -(-N//(K-1)) )", "coverage": [">", ">", ">", ">", ">"]}, "5406": {"id": 5406, "code": "N = 100\nN += 1\nprint(N // 2)", "coverage": [">", ">", ">"]}, "4572": {"id": 4572, "code": "s = \"xyz\"\nn=str(len(s)-2)\np=s[0]+n+s[len(s)-1]\nprint(p)", "coverage": [">", ">", ">", ">"]}, "170": {"id": 170, "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n    a = 26-(ord(s[i])-97)\n    if k >= a and a != 26:\n        k -= a\n        s[i] = \"a\"\ns[-1] = chr(ord(s[-1]) + k % 26)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "693": {"id": 693, "code": "K = 2\ni = 1\nif K % 5 == 0 or K % 2 == 0:\n    i = -1\nN = 0\nwhile True:\n    if i == -1:\n        break\n    N = (N * 10 + 7)  %K \n    if N % K != 0:\n        i += 1\n    else:\n        break\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "11865": {"id": 11865, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1!=M2:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "15736": {"id": 15736, "code": "x = \"12\";y = \"3\";z = \"1\"\nx = int(x)\ny = int(y)\nz = int(z)\ncnt = 0\nrest = x\nwhile(True):\n    if(rest - (y + z) >= z):\n        x -= y + z\n        cnt += 1\n        rest -= (y + z)\n    else:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8468": {"id": 8468, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6680": {"id": 6680, "code": "h = 20;n = 3\na = [4, 5, 6]\na_sum = sum(a)\nif h <= a_sum:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6091": {"id": 6091, "code": "N = 5\nif N % 2 == 0:\n  print(N//2)\nelse:\n  print(N//2 + 1)", "coverage": [">", ">", "!", "!", ">"]}, "6336": {"id": 6336, "code": "from bisect import bisect_right, bisect_left\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nlc = len(C)\nans = 0\nfor b in B:\n    a = bisect_left(A, b)\n    c = len(C) - bisect_right(C, b)\n    ans += a * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11213": {"id": 11213, "code": "S = \"SUN\"\nif S == 'SUN':\n    answer = (7)\nelif S == 'MON':\n    answer = (6)\nelif S == 'TUE':\n    answer = (5)\nelif S == 'WED':\n    answer = (4)\nelif S == 'THU':\n    answer = (3)\nelif S == 'FRI':\n    answer = (2)\nelif S == 'SAT':\n    answer = (1)\nprint(answer)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "5852": {"id": 5852, "code": "import math\nn = 2\nx = n / 2\ny = n % 2\nif y == 0:\n  print(math.floor(x))\nelse:\n  print(math.ceil(x))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "12240": {"id": 12240, "code": "a = \"akasaka\"\nb=len(a)\nc=(b-1)/2\nd=(b+1)/2\nif a[:int(c)]==a[int(d):]:\n\tprint(\"Yes\")\nelse:\n  \tprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "5887": {"id": 5887, "code": "a = 5\nif a/2==int(a/2):\n    print(int(a/2))\nelse:\n    print(int(a/2)+1)", "coverage": [">", ">", "!", "!", ">"]}, "257": {"id": 257, "code": "s = ['x', 'y', 'z']\nk = 4\nA = 'abcdefghijklmnopqrstuvwxyz'\nDa = {a:i for i,a in enumerate(A)}\nc = 0\nfor i in range(len(s)):\n    if s[i]!='a' and 26-Da[s[i]]<=k:\n        k -= 26-Da[s[i]]\n        s[i] = 'a'\nif k:\n    s[i] = A[Da[s[i]]+k%26]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "15780": {"id": 15780, "code": "x = 64146;y = 123;z = 456\ncnt=0\nif x>=y+2*z:\n  cnt+=1\n  x -= (y+2*z)\ncnt += (x//(y+z))\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15450": {"id": 15450, "code": "x = 13;y = 3;z = 1\nrm = x % (y+z)\na = -1 if rm < z else 0\nprint(x // (y + z) + a)", "coverage": [">", ">", ">", ">"]}, "17338": {"id": 17338, "code": "import sys\na = \"D\";b = \"H\"\nif not a in (\"H\",\"D\"):\n    sys.exit()\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", ">", "!", "!", ">"]}, "1022": {"id": 1022, "code": "n = 111\nfor i in range(1, 10):\n    l = [i, i, i]\n    num = int(''.join(map(str, l)))\n    if n <= num:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11852": {"id": 11852, "code": "M1 = 11\nM2 = 11\nans = 1 if M1 != M2 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "4461": {"id": 4461, "code": "s = \"xyz\"\nN = s[-1]\nH = s[0]\nK = str(len(s) - 2)\nprint(H+K+N)", "coverage": [">", ">", ">", ">", ">"]}, "14812": {"id": 14812, "code": "from math import factorial\nn = 1;p = 1\na = [50]\neven=[]\nodd=[]\nfor i in a:\n    if i%2==0:\n        even.append(i)\n    else:\n        odd.append(i)\nev=len(even)\nod=len(odd)\nodd_sum=0\nfor i in range(od+1):\n    if i%2==p and i<=od:\n        odd_sum+=(factorial(od)//(factorial(od-i)*factorial(i)))\nprint(odd_sum*(2**ev))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">"]}, "7505": {"id": 7505, "code": "H = 10;N = 3\nA = [4, 5, 6]\nif H - sum(A) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "8857": {"id": 8857, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7667": {"id": 7667, "code": "M = 210;N = 5\nN_List = [31, 41, 59, 26, 53]\nif sum(N_List) < M:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "9953": {"id": 9953, "code": "n = 8\nS = \"))))((((\"\nl = 0\nr = 0\nprev = \")\"\nfor s in S:\n    if prev == \")\" and s == \")\":\n        if r > 0:\n            r -= 1\n        else:\n            l += 1\n    elif prev == \")\" and s == \"(\":\n        r += 1\n    elif prev == \"(\" and s == \")\":\n        r -= 1\n    elif prev == \"(\" and s == \"(\":\n        r += 1\n    prev = s\nans = \"(\"*l + S + \")\"*r\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13726": {"id": 13726, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nt1=60*H1 + M1\nt2=60*H2 + M2\nt=t2 - K\nans=t-t1\nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">", ">"]}, "7582": {"id": 7582, "code": "h = 20;n = 3\na = [4, 5, 6]\nprint(\"No\" if sum(a)<h else \"Yes\")", "coverage": [">", ">", ">"]}, "148": {"id": 148, "code": "s = \"a\"\nl=len(s)\nk = 25\nz=''\nfor i in range(l):\n  t=123-ord(s[i])\n  if s[i]=='a':\n    z+='a'\n  elif t<=k:\n    z+='a'\n    k-=t\n  else:\n    z+=s[i]\nv=ord(z[l-1])-97+k\nz=z[:l-1]+chr(v%26+97)\nprint(z)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "4437": {"id": 4437, "code": "s = \"xyz\"\ncount=0\nfor i in range(len(s)):\n    if i == 0 or i == len(s)-1:\n        continue\n    else:  \n        count=count+1\nr=s[0] + \"\" + str(count) + \"\" + s[len(s)-1]\nprint(r)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6812": {"id": 6812, "code": "z = [211, 5]\nx = [31, 41, 59, 26, 53]\nd={}\nc=0\nfor i in x:\n       if d.get(i,0)==0:\n              c+=i\nif c>=z[0]:\n       print(\"Yes\")\nelse:\n       print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2340": {"id": 2340, "code": "from math import factorial\nN = 4;M = 3\nif N <= 1:\n    combN = 0\nelse:\n    combN = factorial(N) // (factorial(N - 2) * factorial(2))\nif M <= 1:\n    combM = 0\nelse:\n    combM = factorial(M) // (factorial(M - 2) * factorial(2))\nprint(combN + combM)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "7152": {"id": 7152, "code": "a = 211;b = 5\nc = [31, 41, 59, 26, 53]\nif sum(c) >= a:\n    print('Yes')\nif sum(c) < a:\n    print('No')", "coverage": [">", ">", ">", "!", ">", ">"]}, "8928": {"id": 8928, "code": "N = 1\nA=[0,0]\nA = [[2], 0]\nA = [[2], [3]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6784": {"id": 6784, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nTotal_attack = sum(A)\nif H - Total_attack <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12390": {"id": 12390, "code": "S = \"atcoder\"\nN = len(S)\nS1 = S[:(N-1)//2]\nS2 = S[(N+1)//2:]\nif S==S[::-1] and S1==S1[::-1] and S2==S2[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "10692": {"id": 10692, "code": "S = \"level\"\nN = len(S)\nreverse = S[::-1]\nfirst = S[:(N - 1) // 2]\nsecond = S[(N + 1) // 2:]\nif S == reverse and first == second:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3079": {"id": 3079, "code": "s = \"1234567876\"\nn=len(s)\nans=753\nfor i in range(n-2):\n  t=int(s[i]+s[i+1]+s[i+2])\n  ans=min(ans, abs(753-t))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15205": {"id": 15205, "code": "X = 64146;Y = 123;Z = 456\nans=X//(Y+Z)\nif X<ans*(Y+Z)+Z:\n  print(ans-1)\nelse:  \n  print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "6341": {"id": 6341, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na = sorted(a)\nfor i in range(n):\n    b[i] = (b[i], bisect.bisect_right(a, b[i]-1))\nb = sorted(b)\nbsum = [b[0][1]]\nb[0] = b[0][0]\nfor i in range(1, n):\n    bsum.append(bsum[i-1] + b[i][1])\n    b[i] = b[i][0]\ncnt = 0\nfor i in range(n):\n    ind = bisect.bisect_right(b, c[i]-1)\n    if ind > 0:\n        cnt += bsum[ind-1]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3375": {"id": 3375, "code": "a = 20;b = 30\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "4065": {"id": 4065, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ns = h1*60+m1\nt = h2*60+m2\nans = t-s-k\nprint (max(ans,0))", "coverage": [">", ">", ">", ">", ">"]}, "17152": {"id": 17152, "code": "a = \"H\";b = \"H\"\nprint(\"H\") if a==b else print(\"D\")", "coverage": [">", ">"]}, "7106": {"id": 7106, "code": "n = 211;d = 5\ns = [31, 41, 59, 26, 53]\nv=0\nfor i in s:\n    v+=int(i)\nif v>=n:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13266": {"id": 13266, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(\",\",\" \"))", "coverage": [">", ">"]}, "8799": {"id": 8799, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9282": {"id": 9282, "code": "x = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nx[3] = \"8\"\nprint(\"\".join(x))", "coverage": [">", ">", ">"]}, "9540": {"id": 9540, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3]='8'\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "6276": {"id": 6276, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nma=0\ncntb=[0]*n\nfor i in range(n):\n    if i>0:\n        cntb[i]=cntb[i-1]\n    while ma<n:\n        if a[ma]<b[i]:\n            cntb[i]+=1\n            ma+=1\n        else:\n            break\nmb=0\ncntc=[0]*n\nfor i in range(n):\n    if i>0:\n        cntc[i]=cntc[i-1]\n    while mb<n:\n        if b[mb]<c[i]:\n            cntc[i]+=cntb[mb]\n            mb+=1\n        else:\n            break\nprint(sum(cntc))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "3591": {"id": 3591, "code": "a = 20;b = 15\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "17373": {"id": 17373, "code": "s = 1905\na, b = s // 100, s % 100\nx = \"YY\" if a == 0 or a > 12 else \"MM\"\ny = \"YY\" if b == 0 or b > 12 else \"MM\"\nif x != y:\n    print(x + y)\nelse:\n    print(\"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "4787": {"id": 4787, "code": "s = \"smiles\"\ns1 = s[0]\ns2 = s[-1]\nans = s1 + str(len(s)-2) + s2\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "14608": {"id": 14608, "code": "N = 1;P = 1\nA = [50]\nif all(a%2==0 for a in A):\n    print(0 if P else 2**N)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", "!", "!"]}, "17686": {"id": 17686, "code": "import sys\ninput = \"<function <lambda>>\"\nS = \"0112\"\nf = int(S[:2])\ns = int(S[2:])\nif (f <= 0 and s > 12) or (f > 12 and s <= 0) or (f <= 0 and s <= 0) or (f > 12 and s > 12):\n    print(\"NA\")  \nelif (f > 12 and 0 < s <= 12) or (f <= 0 and 0 < s <= 12):\n    print(\"YYMM\")\nelif (0 < f <= 12 and s > 12) or (0 < f <= 12 and s <= 0):\n    print(\"MMYY\")\nelif 0 < f <= 12 and 0 < s <= 12:\n    print(\"AMBIGUOUS\") ", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">"]}, "10682": {"id": 10682, "code": "a = 1;b = 1;k = 1\nans = [1]\nn = min(a, b)\nfor i in range(2, n+1):\n    if a%i == 0 and b%i == 0:\n        ans += [i]\nprint(ans[-k])", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "31": {"id": 31, "code": "s = \"xyz\"\nk = 4\nl=list(s)\nfor i in range(len(s)):\n  f=(-ord(s[i])+ord(\"z\")+1)%26\n  if f<=k:\n    l[i]=\"a\"\n    k-=f\nk=k%26\na=ord(l[-1])+k \nif a> ord(\"z\"):a-=26\nl[-1]=chr(a)\nprint(\"\".join(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7717": {"id": 7717, "code": "N = 8;K = 3\nAlist = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(-(-(N-1)//(K-1)))", "coverage": [">", ">", ">"]}, "1756": {"id": 1756, "code": "N = 100;A = 100;B = 100\nif N-A-B>0:\n\tW=0\nelse:\n    W=A+B-N\nprint(min(A,B),W)", "coverage": [">", ">", "!", "!", ">", ">"]}, "17611": {"id": 17611, "code": "S = \"0112\"\nfront = int(S[:2])\nback = int(S[2:])\nS_list = list(S)\nif front > 12 or front == 0:\n    if 0 < back <= 12 :\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nelif front <= 12 or front == 0:\n    if 0 < back <= 12: \n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "15278": {"id": 15278, "code": "X = 12;Y = 3;Z = 1\nprint((X-Z) // (Y + Z))", "coverage": [">", ">"]}, "7985": {"id": 7985, "code": "from math import ceil\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = ceil((N-1)/(K-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17243": {"id": 17243, "code": "a = \"D\";b = \"D\"\nif a == \"D\":\n    if b ==\"H\":\n        b =\"D\"\n    else:\n        b =\"H\"\nprint(b)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "13478": {"id": 13478, "code": "s = \"happy,newyear,enjoy\"\nprint( s.replace(\",\", \" \") )", "coverage": [">", ">"]}, "8831": {"id": 8831, "code": "NN = 1\nAA1 = [2]\nAA2 = [3]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8042": {"id": 8042, "code": "n = 8;k = 3\nlst = [7, 3, 1, 8, 4, 6, 2, 5]\nn -= 1\nk -= 1\nprint(-(-n // k))", "coverage": [">", ">", ">", ">", ">"]}, "9514": {"id": 9514, "code": "s = \"2017/01/07\"\ns = list(s)\ns[3] = '8'\ns = \"\".join(s)\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "18839": {"id": 18839, "code": "H = 14\nW = 12\nN = 112\np = -1\nif H > W:\n    p = H\nelse:\n    p = W\ncount = 1\nresult = 1\nwhile True:\n    result = count * p\n    if result >= N:\n        print(count)\n        break\n    else:\n        count += 1", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "5571": {"id": 5571, "code": "n = 100\nprint((n+1)//2)", "coverage": [">", ">"]}, "5229": {"id": 5229, "code": "s = \"xyz\"\ns_c = len(s)-2\nprint(\uff53[0] + str(s_c) +s[-1])", "coverage": [">", ">", ">"]}, "15231": {"id": 15231, "code": "X = 64145;Y = 123;Z = 456\np = X - Z\na = Z+Y\nans = p//a\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "7448": {"id": 7448, "code": "a = \"20\";b = \"3\"\na=int(a)\nb=int(b)\nc = [4, 5, 6]\nif sum(c)>=a:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13877": {"id": 13877, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nb = []\nflg = 'hi'\nfor i in range(n-1):\n    if a[i] > a[i+1]:\n        if flg != 'pl':\n            flg = 'mi'\n        else:\n            b.append(i)\n            flg = 'hi'\n    elif a[i] < a[i+1]:\n        if flg != 'mi':\n            flg = 'pl'\n        else:\n            b.append(i)\n            flg = 'hi'\nprint(len(b)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10511": {"id": 10511, "code": "import sys\na = 1;b = 1;k = 1\ntmp=[]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        tmp.append(i)\nprint(tmp[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13847": {"id": 13847, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nfirst = True\nincreasing = True\nfor i in range(1, n):\n    if (first):\n        if (a[i] > a[i-1]):\n            first = False\n            increasing = True\n        elif (a[i] < a[i-1]):\n            first = False\n            increasing = False\n    else:\n        if (a[i] > a[i-1]) and (increasing == False):\n            cnt += 1\n            first = True\n        elif (a[i] < a[i-1]) and (increasing == True):\n            cnt += 1\n            first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13386": {"id": 13386, "code": "s = \"haiku,atcoder,tasks\"\nS = \"\"\nfor i in range(len(s)):\n    if s[i] == ',':\n        S += \" \"\n    else:\n        S += s[i]\nprint(S)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "15192": {"id": 15192, "code": "X = 13;Y = 3;Z = 1\nresult = X // (Y + Z) - 1\nwhile X >= (result + 1) * Y + (result + 2) * Z:\n    result += 1\nprint(result)", "coverage": [">", ">", ">", ">", ">"]}, "17368": {"id": 17368, "code": "s = ['0', '1', '1', '2']\ns1 = int(\"\".join(s[:2]))\ns2 = int(\"\".join(s[2:]))\nif 1 <= s1 <= 12 and 1 <= s2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= s1 <= 12:\n    print('MMYY')\nelif 1 <= s2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10950": {"id": 10950, "code": "s = \"akasaka\"\nn = len(s)\nsformer = s[:int((n - 1) / 2)]\nslatter = s[int((n + 1) / 2):]\nif s == s[-1::-1] and sformer == sformer[-1::-1] and slatter == slatter[-1::-1]:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "13235": {"id": 13235, "code": "s = \"happy,newyear,enjoy\"\nnew_s = s.replace(',',' ')\nprint(new_s)", "coverage": [">", ">", ">"]}, "16350": {"id": 16350, "code": "n = 5\na = [6, 9, 4, 2, 11]\nma = max(a)\ncnt = 10**9\nmid = ma/2\nfor i in range(n):\n    if abs(cnt - mid) >= abs(mid - a[i]):\n        cnt = a[i]\nprint(max(ma,cnt),min(ma,cnt))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7077": {"id": 7077, "code": "MM = ['210', '5']\nH = int(MM[0])\nN = int(MM[1])\nAA = ['31', '41', '59', '26', '53']\ntotal = 0\nfor i in AA:\n  total += int(i)\nif total >= H:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "4843": {"id": 4843, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nans = s[0] + str(len(s) - 2) + s[len(s) - 1]\nprint(ans)", "coverage": [">", ">", ">"]}, "19438": {"id": 19438, "code": "n = 999999999\nif n%2:print(2*n)\nelse:print(n)", "coverage": [">", ">", "!"]}, "17425": {"id": 17425, "code": "s = 112\na = s // 100\nb = s % 100\nif 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= b <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "16295": {"id": 16295, "code": "n = 5\nA = map(int, \"6 9 4 2 11\".split())\nA = sorted(A)\nmaxa = max(A)\nfrom bisect import bisect_left\nm = (maxa+1)//2\nl2 = bisect_left(A, m)\nif abs(A[l2] - m) >= abs(A[l2-1] - m):\n    print(maxa, A[l2-1])\nelse:\n    print(maxa, A[l2])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9798": {"id": 9798, "code": "N = 8\nS = \"))))((((\"\nstock = 0\nL_cnt = 0\nfor s in S:\n    if s == \"(\":\n        stock += 1\n    if s == \")\":\n        if stock == 0:\n            L_cnt += 1\n        else:\n            stock -= 1\nprint(\"(\" * L_cnt + S + \")\" * stock)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9139": {"id": 9139, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3] = \"8\"\nprint(\"\".join(s))", "coverage": [">", ">", ">"]}, "3071": {"id": 3071, "code": "s = \"35753\"\nans = 642\nfor i in range(len(s)-2):\n  if ans > abs(int(s[i:i+3])-753):\n    ans = abs(int(s[i:i+3])-753)\n  else:\n    ans = ans\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "4242": {"id": 4242, "code": "import math\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nstart=60*h1+m1\nend=60*h2+m2\nprint(end-start-k)", "coverage": [">", ">", ">", ">", ">"]}, "4636": {"id": 4636, "code": "S = \"internationalization\"\nprint(*[S[0],len(S)-2,S[-1]],sep='')", "coverage": [">", ">"]}, "19110": {"id": 19110, "code": "n = 12\nif n % 2 != 0:\n    print(0)\n    exit()\nm = 10\na = []\nb = []\nwhile m <= n:\n    a.append(n // m)\n    m *= 5\n    if len(a) > 1:\n      b.append(a[-2] - a[-1])\nif a:\n    b.append(a[-1])\nans = 0\nfor i in range(len(b)):\n    ans += (i+1)*b[i]\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "17893": {"id": 17893, "code": "s = \"0112\"\na = int(s[:2])\nb = int(s[2:])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif 1 <= a <= 12 and (b == 0 or b > 12):\n    print('MMYY')\nelif 1 <= b <= 12 and (a == 0 or a > 12):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7806": {"id": 7806, "code": "N = 3;K = 3\nA = [1, 2, 3]\ncount =0\nfirst = True\nwhile N >=K:\n    if  first ==True:\n        count +=1\n        N-=K\n        first =False\n    else:\n        count+=1\n        N-=(K-1)\nif N!=0:\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "5771": {"id": 5771, "code": "n = \"2\"\na=(int(n)+1)//2\nprint(a)", "coverage": [">", ">", ">"]}, "18387": {"id": 18387, "code": "H = 14\nW = 12\nN = 112\ntmp1 = min(H, W)\ntmp2 = max(H, W)\nfor i in range(tmp1):\n  N = N - tmp2\n  if N <= 0:\n    print(i + 1)\n    break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8142": {"id": 8142, "code": "N = 3;K = 3\nA = [1, 2, 3]\ni=A.index(1)+1\nif i<=K or i>=N-K:\n    ans=(N-K)//(K-1)+1 if (N-K)%(K-1)==0 else (N-K)//(K-1)+2\nelse:\n    for a in range(K):\n        b=0 if (i-a)%(K-1)==0 and (N-(i+(K-a)))%(K-1)==0 else 1\n    front=i//(K-1)\n    back=(N-(i+K))//(K-1)\n    ans=front+back+1+b\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "12887": {"id": 12887, "code": "a = 6\nlist753 = [3,5,7]\nif a in list753:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "12581": {"id": 12581, "code": "A = 100;B = 50;K = 4\nn = min(A, B)\nwhile K:\n  if A % n == 0 and B % n == 0:\n    K -= 1\n  if K == 0:\n    print(n)\n  n -= 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1198": {"id": 1198, "code": "N = 750\nfor i in range(N,1000,1):\n    n = list(str(i))\n    if n[0]==n[1] and n[1]==n[2]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">"]}, "11106": {"id": 11106, "code": "s = \"level\"\ns_len = int((len(s) - 1) / 2)\ns_1 = s[:s_len]\ns_1_len = int((len(s_1) - 1) / 2)\ns_2 = s[s_len+1:]\ns_2_len = int((len(s_2) - 1) / 2)\nans = 'Yes'\nfor i in range(s_len+1):\n  if s[i] != s[-i-1]:\n    ans = 'No'\n    break\nfor i in range(s_1_len+1):\n  if s_1[i] != s_1[-i-1]:\n    ans = 'No'\n    break\nfor i in range(s_2_len+1):\n  if s_2[i] != s_2[-i-1]:\n    ans = 'No'\n    break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1078": {"id": 1078, "code": "n = ['1', '1', '2']\nif int(n[0])>int(n[1]):\n    ans = [n[0]]*3\nelif int(n[0])==int(n[1]) and int(n[1])>=int(n[2]):\n    ans = [n[0]]*3\nelse:\n    ans = [int(n[0])+1]*3\nprint(*ans,sep=\"\")", "coverage": [">", ">", "!", ">", "!", "!", ">", ">"]}, "8637": {"id": 8637, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nmax=0\nfor i in range(n):\n  tmp=sum(a[:i+1])\n  tmp+=sum(b[i:])\n  if max<tmp:\n    max=tmp\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17815": {"id": 17815, "code": "S = \"0112\"\nAS = S[:2]\nBS = S[2:]\nif 1<=int(AS)<=12 and 1<=int(BS)<=12:\n    print('AMBIGUOUS')\nelif 1<=int(AS)<=12:\n    print('MMYY')\nelif 1<=int(BS)<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7913": {"id": 7913, "code": "from math import ceil\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nif N == K:\n    print(1)\nelif (N-1)%(K-1) == 0:\n    print((N-1)//(K-1))\nelif K == 2:\n    print(N-1)\nelse:\n    ans = ceil(N/(K-1))\n    print(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "4784": {"id": 4784, "code": "moji = \"smiles\"\nprint(moji[0] + str(len(moji)-2) + moji[-1]) ", "coverage": [">", ">"]}, "4216": {"id": 4216, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\ns = H1*60 + M1\ne = H2*60 + M2\nprint(e - K - s)", "coverage": [">", ">", ">", ">"]}, "19018": {"id": 19018, "code": "N = 12\nif(N%2 != 0):\n    print(0)\nelse:\n    cnt = 0\n    n = 1\n    while n <= N:\n        n *= 5\n        if(n > N):\n            break\n        num = n*2\n        cnt += N//num\n    print(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5054": {"id": 5054, "code": "s = \"smiles\"\nprint(s[0] + str(len(s) - 2) + s[-1])", "coverage": [">", ">"]}, "18170": {"id": 18170, "code": "s = \"1905\"\nfirst_two=int(''.join(s[:2]))\nlast_two=int(''.join(s[2:]))\nif 1<=first_two<=12 and 1<=last_two<=12:\n  print('AMBIGUOUS')\nelif 1<=last_two<=12:\n  print('YYMM')\nelif 1<=first_two<=12:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "14547": {"id": 14547, "code": "N = 1;P = 1\nA = [50]\nif all(a % 2 == 0 for a in A):\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\nelse:\n    print(2**(N-1))", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "4082": {"id": 4082, "code": "H = 10;M = 0;h = 15;m = 0;k = 30\nprint(60*(h-H) + (m-M) - k)", "coverage": [">", ">"]}, "12193": {"id": 12193, "code": "m = 11;d = 16\nmm = 11;dd = 17\nif m!=mm:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17649": {"id": 17649, "code": "s = \"1905\"\nt,u=0<int(s[:2])<13,0<int(s[2:])<13\nprint('AMBIGUOUS' if t and u else 'MMYY' if t else 'YYMM' if u else 'NA')", "coverage": [">", ">", ">"]}, "3192": {"id": 3192, "code": "s = \"1234567876\"\nd = 1001001\nfor i in range(len(s) - 1):\n    x = int(s[i : i + 3])\n    tmp = abs(x - 753)\n    if tmp < d:\n        d = tmp\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12763": {"id": 12763, "code": "n = 6\nprint([\"NO\",\"YES\"][n==7 or n==5 or n==3])", "coverage": [">", ">"]}, "4627": {"id": 4627, "code": "s = \"internationalization\"\nz=str(len(s)-2)\nprint(str(s[0])+z+str(s[-1]))", "coverage": [">", ">", ">"]}, "18017": {"id": 18017, "code": "S = \"1700\"\nF = int(S[:2])\nB = int(S[2:])\nif F == 0 and B == 0:\n    print('NA')\nelif (F == 0 and B > 12) or (B == 0 and F > 12):\n    print('NA')\nelif F == 0:\n    print('YYMM')\nelif B == 0:\n    print('MMYY')\nelif (F <= 12 and B <= 12):\n    print('AMBIGUOUS')\nelif F > 12 and B <= 12:\n    print('YYMM')\nelif F <= 12 and B > 12:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18806": {"id": 18806, "code": "import math\nh = 14\nw = 12\nn = 112\nif h > w:\n    print(math.ceil(n / h))\nelse:\n    print(math.ceil(n / w))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3879": {"id": 3879, "code": "X = 13;Y = 3;Z = 1\nc = 0\nl = Z\nwhile l < X:\n    if l + Y + Z <= X:\n        l += Y + Z\n        c += 1\n    else:\n        break\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3160": {"id": 3160, "code": "S = \"35753\"\nans = abs(753 - int(S[:3]))\nfor i in range(1, len(S)-1):\n    tmp = int(S[i:i+3])\n    ans = min(abs(753-tmp), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13528": {"id": 13528, "code": "A = \"abcde\";B = \"fghihgf\";C = \"edcba\"\nprint(A, B, C)", "coverage": [">", ">"]}, "15954": {"id": 15954, "code": "A = 20;B = 15\nsukima =A-B*2\nif 0 < sukima:\n    print(sukima)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "1131": {"id": 1131, "code": "n = \"111\"\na = n[0] * 3\nb = str(int(n[0])+1) * 3\nprint(a if a >= n else b)", "coverage": [">", ">", ">", ">"]}, "11351": {"id": 11351, "code": "dow = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\" ]\ndow = dow[::-1]\nprint(dow.index(\"SUN\")+1)", "coverage": [">", ">", ">"]}, "571": {"id": 571, "code": "S = \"a\"\nK = 25\ni=0\nl=''\nwhile i<len(S)-1:\n    if S[i]=='a':\n        l+='a'\n    elif 123-ord(S[i])<=K:\n        l+='a'\n        K-=123-ord(S[i])\n    else:\n        l+=S[i]\n    i+=1\nif K>0:\n    K%=26\n    n=ord(S[-1])+K\n    if n>122:\n        n-=26\n    l+=chr(n)\nelse:\n    l+=S[-1]\nprint(l)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "3098": {"id": 3098, "code": "a = \"35753\"\nb=753\nfor i in range(len(a)-2):\n  if abs(int(a[i]+a[i+1]+a[i+2])-753)<b:\n    b=abs(int(a[i]+a[i+1]+a[i+2])-753)\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5748": {"id": 5748, "code": "n = 100\nprint(n//2+1 if n%2!=0 else n//2)", "coverage": [">", ">"]}, "2302": {"id": 2302, "code": "n = 10;a = 3;b = 5\nprint(min(a,b),(0 if n>=a+b else (a+b)-n))", "coverage": [">", ">"]}, "8001": {"id": 8001, "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nA_min = min(A)\nindex = A.index(A_min)\nans = 0\nleft = index\nright = N - 1 - index\nif left % (K - 1) != 0:\n    right -= K - 1 - left % (K - 1)\nelif right % (K - 1) != 0:\n    left -= K - 1 - right % (K - 1)\nans += math.ceil(left / (K - 1))\nans += math.ceil(right / (K - 1))   \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "13544": {"id": 13544, "code": "s = \"happy,newyear,enjoy\"\nprint(\" \".join(s.split(',')))", "coverage": [">", ">"]}, "12145": {"id": 12145, "code": "m1 = \"11\";d1 = \"16\"\nm2 = \"11\";d2 = \"17\"\nif m1==m2:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "1014": {"id": 1014, "code": "s = \"111\"\nif int(s[0])<int(s[1]):\n    print(111*(int(s[0])+1))\nelif int(s[0])==int(s[1])<int(s[2]):\n    print(111*(int(s[0])+1))\nelse:\n    print(111*int(s[0]))", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "1931": {"id": 1931, "code": "N = 10;A = 7;B = 5\nif(A<B):\n    max = A\nelse:\n    max = B\nmin = A+B\nif(min>N):\n    min = min - N\nelse:\n    min = 0\nprint(max,min)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "5225": {"id": 5225, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nt = len(s)-2\nu = s[0]+str(t)+s[-1]\nprint(u)", "coverage": [">", ">", ">", ">"]}, "4982": {"id": 4982, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nnum = len(s)\noutput = s[0] + str(num-2) + s[num-1]\nprint(output)", "coverage": [">", ">", ">", ">"]}, "15957": {"id": 15957, "code": "a = 20;b = 15\nans = a - b * 2\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "15572": {"id": 15572, "code": "x = 13;y = 3;z = 1\ntemp=z\nresult=0\nwhile temp<=x-y-z:\n  temp=temp+y+z\n  result=result+1\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1772": {"id": 1772, "code": "n = 10;a = 3;b = 5\nif a == 0 or b == 0:\n    print(0, 0)\nelif n > a+b:\n    max_ab = min(a, b)\n    print(max_ab, 0)\nelse:\n    max_ab = min(a, b)\n    print(max_ab, a+b-n)", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", "!"]}, "1788": {"id": 1788, "code": "N = 10;A = 7;B = 5\nmaximum = min([A, B])\nif A+B >= N:\n    minimum = (A+B) - N\nelse:\n    minimum = 0\nprint(maximum, minimum)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2072": {"id": 2072, "code": "n = 10;a = 3;b = 5\nh = min(a, b)\nc = a+b-n\nif c < 0:\n    l = 0\nelse:\n    l = c\nprint(h, l)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "12311": {"id": 12311, "code": "s = \"akasaka\"\nn = len(s)\ns_re =s[::-1]\ns_first = s[:(n-1)//2]\ns_first_re = s_first[::-1]\ns_second = s[(n+3)//2-1:]\ns_second_re = s_second[::-1]\nprint(['No','Yes'][s == s_re and s_first==s_first_re and s_second == s_second_re])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4768": {"id": 4768, "code": "s = \"internationalization\"\nss = s[0] + str(len(s)-2) + s[len(s)-1]\nprint(ss)", "coverage": [">", ">", ">"]}, "6236": {"id": 6236, "code": "import bisect\nn = 2\nas_ = [1, 5]\nbs_ = [2, 4]\ncs_ = [3, 6]\nas_.sort()\nbs_.sort()\ncs_.sort()\nans = 0\nfor b in bs_:\n  ans += bisect.bisect_left(as_, b) * (n-bisect.bisect_right(cs_, b))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9512": {"id": 9512, "code": "s = \"2017/01/07\"\nprint(\"2018/01\" + s[-3:])", "coverage": [">", ">"]}, "2748": {"id": 2748, "code": "if sorted(map(int, \"1 7 9 4\".split())) == [1, 4, 7, 9]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!"]}, "2116": {"id": 2116, "code": "N = 10;A = 3;B = 5\nif A > B:\n  max = B\nelse:\n  max = A\nif A + B > N:\n  min = A + B - N\nelse:\n  min = 0\nprint(max, min)", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "11825": {"id": 11825, "code": "a = 11;b = 30\nc = 12;d = 1\nif a + 1 == c:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "11958": {"id": 11958, "code": "a = ['11', '16']\nb = ['11', '17']\nprint(int(b[1]==\"1\"))", "coverage": [">", ">", ">"]}, "18831": {"id": 18831, "code": "h = 2\nw = 100\nn = 200\nr = max(h,w)\ncount = 0\nx = 0\nwhile x < n:\n    count += 1\n    x += r\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "953": {"id": 953, "code": "n = \"112\"\nr = int(n[0]*3)\nif r < int(n):\n  print(str(int(n[0])+1)*3)\nelse:\n  print(r)", "coverage": [">", ">", ">", ">", "!", "!"]}, "10796": {"id": 10796, "code": "S = \"akasaka\"\ncount = 0\nN = len(S)\na = int((N-1)/2 )\nb = int((N +3)/2)\nif S[:a] ==S[b-1:]:\n  pass\nelse:\n  count +=1\nSS = S[b-1:]\nSSS =list(SS)\nfor i in range(len(SSS)):\n  if SSS[i] != SSS[-i-1]:\n    count +=1\nif count==0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "16270": {"id": 16270, "code": "n = 2\na = [100, 0]\nai = max(a)\naj = min(a)\nfor i in a:\n    if min(aj, ai -aj) < min(i, ai - i):\n        aj = i\nprint(ai, aj)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "564": {"id": 564, "code": "alphabet = 'abcdefghijklmnopqrstuvwxyz'\ns = \"codefestival\"\nK = 100\nans = ''\nfor i in range(len(s) - 1):\n    s_i = alphabet.index(s[i])\n    if s[i] == 'a':\n        ans += 'a'\n        continue\n    if (26 - s_i <= K):\n        K -= 26 - s_i\n        ans += 'a'\n    else:\n        ans += s[i]\nans += alphabet[(K + alphabet.index(s[-1])) % 26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "1817": {"id": 1817, "code": "n = 10;a = 3;b = 5\nans1 = min(a, b)\nif a + b < n:\n  ans2 = 0\nelse:\n  ans2 = abs(n - a - b)\nprint(ans1, ans2)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "18993": {"id": 18993, "code": "n = 12\nif n%2==1:\n    print(0)\nelse:\n    m=n//2\n    ans=0\n    while m>0:\n        ans+=m//5\n        m=m//5\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "17473": {"id": 17473, "code": "S = \"0112\"\nA = int(S[:2])\nB = int(S[2:])\nif  1 <= A and A <= 12:\n    if  1 <= B and B <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if  1 <= B and B <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17138": {"id": 17138, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    print('H' if b == 'H' else 'D')\nelse:\n    print('D' if b == 'H' else 'H')", "coverage": [">", ">", "!", "!", ">"]}, "7746": {"id": 7746, "code": "n = 3;k = 3\nl = [1, 2, 3]\nprint(-(-(n-1)//(k-1)))", "coverage": [">", ">", ">"]}, "15735": {"id": 15735, "code": "x = \"13\";y = \"3\";z = \"1\"\nx = int(x)\ny = int(y)\nz = int(z)\ncnt = 0\nrest = x\nwhile(True):\n    if(rest - (y + z) >= z):\n        x -= y + z\n        cnt += 1\n        rest -= (y + z)\n    else:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "11088": {"id": 11088, "code": "word = \"atcoder\"\nn = len(word)\nhanbun = int((n-1)/2)\nnotk = 0\nfor i in range(hanbun):\n    if word[i] != word[n-i-1]:\n        notk = 1\n        break\nif hanbun % 2 == 0:\n    hanbun2 = int(hanbun/2)\nelse:\n    hanbun2 = int((hanbun-1)/2)\nfor j in range(hanbun2):\n    if word[j] != word[hanbun-j-1]:\n        notk = 1\n        break\nif notk == 1:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "1192": {"id": 1192, "code": "n = 112\nif n%111==0: print(n)\nelse: print(n+111-(n%111))", "coverage": [">", ">", ">"]}, "16499": {"id": 16499, "code": "import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nk=bisect.bisect_left(a,a[-1]/2)\nif k==n-1:\n    print(a[-1],a[-2])\nelif k==0:\n    print(a[-1],a[0])\nelse:\n    if a[-1]/2-a[k-1]<a[k]-a[-1]/2:\n        k-=1\n    print(a[-1],a[k])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", "!", ">"]}, "17940": {"id": 17940, "code": "s = \"1905\"\nmae=int(s[:2])\nushiro=int(s[2:])\nif 1<=mae<=12:\n    if 1<=ushiro<=12:\n        ans=\"AMBIGUOUS\"\n    else:\n        ans=\"MMYY\"\nelif 1<=ushiro<=12:\n    ans=\"YYMM\"\nelse:\n    ans=\"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "18359": {"id": 18359, "code": "h = 3\nw = 7\nn = 10\nans = n // max(h, w)\nif n % max(h, w) > 0:\n    ans = ans + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16279": {"id": 16279, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nai = max(a)\ndiff = ai\nold = diff\nfor x in a[:-1]:\n    tmp = abs(x-ai/2)\n    if tmp <= diff:\n        aj = x\n        diff = tmp\n    if diff == old:\n        break\n    else:\n        old = diff\nprint(ai,aj)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13807": {"id": 13807, "code": "from collections import deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)<=1:\n    pass\n  else:\n    if not (v >= tmp[-1] >= tmp[-2] >= tmp[0] or v <= tmp[-1] <= tmp[-2] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nif tmp:\n  cnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13203": {"id": 13203, "code": "s = \"haiku,atcoder,tasks\"\nans=s.replace(\",\",\" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "8150": {"id": 8150, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nans = 0\nleast_g = (N-1) / (K-1)\nif least_g.is_integer():\n    print(int(least_g))\nelse:\n    print(int(least_g)+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9404": {"id": 9404, "code": "S = \"2017/01/07\"\nprint(S.replace('2017/', '2018/'))", "coverage": [">", ">"]}, "10502": {"id": 10502, "code": "a = 100;b = 50;K = 4\nans=[]\nfor i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n        ans.append(i)\nans=ans[::-1]\nprint(ans[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2231": {"id": 2231, "code": "n = 10;a = 7;b = 5\nM = min(a, b)\nm = max(0, a+b-n)\nprint(M, m)", "coverage": [">", ">", ">", ">"]}, "5874": {"id": 5874, "code": "N = 100\ns = -( - N // 2 )\nprint(s)", "coverage": [">", ">", ">"]}, "18804": {"id": 18804, "code": "h = 2\nw = 100\nn = 200\nif w>=h:\n    re=int(n/w)\n    if n%w>0:\n        re+=1\nelse:\n    re=int(n/h)\n    if n%h>0:\n        re+=1\nprint(re)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "6871": {"id": 6871, "code": "h = \"210\";n = \"5\"\na = ['31', '41', '59', '26', '53']\nattack = 0\nfor i in range(int(n)):\n    attack += int(a[i])\nif int(h) - attack <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5777": {"id": 5777, "code": "N = \"2\"\nN = int(N)\nans = (N+1) // 2\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "8770": {"id": 8770, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4052": {"id": 4052, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ns = h1*60+m1\nt = h2*60+m2\nans = t-s-k\nprint (ans)", "coverage": [">", ">", ">", ">", ">"]}, "12780": {"id": 12780, "code": "X = \"5\"\nprint(\"YES\" if X in \"753\" else \"NO\")", "coverage": [">", ">"]}, "9840": {"id": 9840, "code": "n = 3\ns = ['(', ')', ')']\nins=0\napp=0\nfor i in range(n):\n    if s[i]=='(':\n        app += 1\n    else:\n        if app>0:\n            app -= 1\n        else:\n            ins += 1\ninL=['(']*ins\napp=[')']*app\nans=inL+s+app\nprint(''.join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "18978": {"id": 18978, "code": "n = 5\nif n%2==1:print(0)\nelse:\n  n//=2\n  i=5\n  s=0\n  while i<=n:\n    s+=n//i\n    i*=5\n  print(s)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8474": {"id": 8474, "code": "N = 1\nA1 = [2]\nA2 = [3]\ncandy = []\nfor n in range(N):\n    candy.append(sum(A1[:n+1]) + sum(A2[n:]))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6134": {"id": 6134, "code": "from bisect import bisect_left,bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    i = bisect_left(A,b)\n    j = bisect(C,b)\n    ans += i*(N-j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19265": {"id": 19265, "code": "n = 5\ncnt = 0\nx = len(str(n))\nif n % 2 == 1:\n  print(0)\nelse:\n  for i in range(1,26):\n    cnt += n//((5**i)* 2)\n  print(cnt)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "19052": {"id": 19052, "code": "N = 5\nans=0\nif ~N%2:\n    for i in range(1,30):\n        ans+=N//(10*5**i)\n    ans+=N//10\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "6234": {"id": 6234, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor b in B: \n    s = bisect.bisect_left(A,b) \n    t = bisect.bisect_right(C,b) \n    ans += s*(N-t)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5168": {"id": 5168, "code": "l = \"smiles\"\nprint(l[0]+str(len(l)-2)+l[-1])", "coverage": [">", ">"]}, "827": {"id": 827, "code": "k = 2\ncount=1\nnum=7\nfor _ in range(k):\n    if num%k == 0:\n        print(count)\n        break\n    else:\n        count += 1\n        num = (num % k)*10 + 7\nelse:\n    print(-1)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">"]}, "1741": {"id": 1741, "code": "n = 100;a = 100;b = 100\nprint(min(a,b))\nif a+b <= n:\n    print('0')\nelse:\n    print((a+b)-n)", "coverage": [">", ">", ">", "!", "!", ">"]}, "12524": {"id": 12524, "code": "A = 8;B = 12;K = 2\nc = 0\nif A < B:\n  R = A\nelse:\n  R = B\nfor i in range (R):\n  I = R-i\n  if A%I==0 and B%I==0:\n    c += 1\n    if c == K:\n      print (I)\n      break", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "5040": {"id": 5040, "code": "s = \"xyz\"\nN=len(s)-2\nprint(s[0]+str(N)+s[-1])", "coverage": [">", ">", ">"]}, "441": {"id": 441, "code": "s = ['x', 'y', 'z']\nN=len(s)\nK = 4\nnum=123\nfor i in range(N):\n    diff=(num-ord(s[i]))%26\n    if K==0:\n        break\n    if diff<=K:\n        s[i]=\"a\"\n        K=K-diff\nif K>0:\n    K=K%26\n    s[N-1]=chr(ord(s[N-1])+K)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "3973": {"id": 3973, "code": "X = 64145;Y = 123;Z = 456\ntemp = X-Z\nans = temp//(Y+Z)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "14631": {"id": 14631, "code": "from collections import Counter\nN = 1;P = 1\nA = [50]\nn0 = 0\nn1 = 0\nfor i, a in enumerate(A):\n    b = a % 2\n    A[i] = b\n    if b == 0:\n        n0 += 1\n    else:\n        n1 += 1\nC1 = [1]\nfor i in range(n1):\n    C1.append(C1[-1] * (n1-i)//(i+1))\nans = 0\nfor i in range(0, 51, 2):\n    if i + P > n1:\n        break\n    ans += C1[i+P] * (2**(n0))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">"]}, "8179": {"id": 8179, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nN -= K\nK -= 1\nC = math.ceil(N/K)\nprint(C+1)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14662": {"id": 14662, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nN = 2;P = 0\nA = [1, 3]\ndp = [[0]*2 for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(N):\n    if A[i]%2==0:\n        dp[i+1][0] = 2*dp[i][0]\n        dp[i+1][1] = 2*dp[i][1]\n    else:\n        dp[i+1][0] = dp[i][0]+dp[i][1]\n        dp[i+1][1] = dp[i][0]+dp[i][1]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "6549": {"id": 6549, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nfrom bisect import bisect_left\nfrom itertools import accumulate\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncheck = [0] * n\nans = 0\nfor i in range(n):\n    index = bisect_left(c, b[i])\n    if index != n:\n        if c[index] == b[i]:\n            index = bisect_left(c, b[i] + 1)\n    check[i] = n - index\ncumsum = [0] + list(accumulate(check[::-1]))\nfor aa in a:\n    index = bisect_left(b, aa)\n    if index != n:\n        if b[index] == aa:\n            index = bisect_left(b, aa + 1)\n    ans += cumsum[n - index]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "16442": {"id": 16442, "code": "import bisect\nn = 2\nA = [0, 100]\nma = A[-1]\nhalf = ma / 2\nindex = bisect.bisect_left(A,half)\nif index != 0:\n    ans = A[index-1] if half - A[index-1] <= A[index] - half else A[index]\nelse:\n    ans = A[0]\nprint(ma,ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10873": {"id": 10873, "code": "S = \"atcoder\"\nflag = 0\nfor i in range(0,len(S)//2):\n    if S[i] == S[-1-i]:\n        continue\n    else:\n        flag = 1\n        print(\"No\")\n        break\nif flag == 0:\n    S = S[:((len(S)-1)//2)]\n    for i in range(0,len(S)//2):\n        if S[i] == S[-1-i]:\n            continue\n        else:\n            flag = 1\n            print(\"No\")\n            break\nif flag == 0:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!"]}, "14816": {"id": 14816, "code": "n = 3;p = 0\nl = [1, 1, 1]\nl1 = []\nfor i in l:\n  if i%2==0:\n    l1.append(0)\n  else:\n    l1.append(1)\na = l1.count(1)\nb = l1.count(0)\nif a!=0:\n  cou = (2**(b))*(2**(a-1))\n  print(cou)\nelse:\n  if p%2==0:\n    print(2**b)\n  else:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "16746": {"id": 16746, "code": "i_list = ['H', 'H']\na = i_list[0]\nb = i_list[1]\nr = ''\nif a == 'H':\n\tr = b\nelse:\n\tr = 'H' if b == 'D' else 'D'\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16973": {"id": 16973, "code": "h = \"D\";d = \"D\"\nif h=='H' and d=='H':\n    print('H')\nelif h=='H' and d=='D':\n    print('D')\nelif h=='D' and d=='H':\n    print('D')\nelse:\n    print('H')           ", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "10748": {"id": 10748, "code": "s = \"akasaka\"\na = s[::-1]\nn = len(s)\nans = \"Yes\"\nif s != a: ans = \"No\"\nelif s[:(n-1)//2] != s[(n+3)//2-1:]: ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16763": {"id": 16763, "code": "import sys\ninput = sys.stdin.readline\nA = \"D\";B = \"D\"\nd = {\"H\":0, \"D\":1}\nAns = [\"H\", \"D\"]\nprint(Ans[d[A]^d[B]])", "coverage": [">", ">", ">", ">", ">", ">"]}, "5147": {"id": 5147, "code": "s = \"smiles\"\na = len(s)\nb = len(s)-2\nx = s[0] + str(b) + s[len(s)-1]\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "4126": {"id": 4126, "code": "N = [10, 0, 15, 0, 30]\nres = ((N[2]-N[0])*60) + (N[3]-N[1]) - N[4]\nprint(res)", "coverage": [">", ">", ">"]}, "108": {"id": 108, "code": "import string\ns = ['a']\nk = 25\nstr=string.ascii_lowercase\nabc=str+str\ns_len=len(s)\nfor i in range(s_len):\n  si_inx=abc.index(s[i])\n  if i==s_len-1:\n    k%=26\n    s[i]=abc[si_inx+k]\n    break\n  if s[i]=='a':\n    continue\n  if k>=26-si_inx:\n    k-=26-si_inx\n    s[i]='a'\n  else:\n    continue\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13567": {"id": 13567, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5] + \" \" + s[6:13] + \" \" + s[14:19])", "coverage": [">", ">"]}, "7893": {"id": 7893, "code": "from math import ceil\nn = 4;k = 3\na = [2, 3, 1, 4]\nn-=1\nk-=1\nprint(ceil(n/k))", "coverage": [">", ">", ">", ">", ">", ">"]}, "14866": {"id": 14866, "code": "N = 3;P = 0\nA = [1, 1, 1]\nodd = 0\nfor v in A:\n    if  v % 2:\n        odd += 1 \neven = N-odd\nif odd != 0:\n    print((2**even)*int(2**(odd-1)))\nelse:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "16218": {"id": 16218, "code": "n = 2\na = [0, 100]\np = a[-1]\nc = 0\nfor i in range(n-1):\n  if abs(a[i+1]-p/2) < abs(a[i]-p/2):\n    c = a[i+1]\n  else:\n    break\nprint(p,c)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13255": {"id": 13255, "code": "nim = \"abcde,fghihgf,edcba\"\nreplace_report = nim.replace(',', ' ')\nprint(replace_report)", "coverage": [">", ">", ">"]}, "1653": {"id": 1653, "code": "N = 10;A = 7;B = 5\nM = min(A,B)\nm = max(0,A+B-N)\nprint(M,m)", "coverage": [">", ">", ">", ">"]}, "490": {"id": 490, "code": "s = ['a']\nK = 25\nN = len(s)\nalp = [chr(i) for i in range(97, 97+26)]\nfor i in range(N):\n    idx = alp.index(s[i])\n    if K + idx >= 26 and idx != 0:\n        K = K - ( 26 - idx )\n        s[i] = 'a'\n    if K == 0:\n        break\nif K > 0:\n    id = alp.index(s[N-1])\n    id_ = ( id + K ) % 26\n    s[N-1] = alp[id_]\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">"]}, "1247": {"id": 1247, "code": "n = 112\na = 0\nfor i in range(1, 10):\n    ans = [str(i)]*3\n    ans_ = \"\".join(ans)\n    if int(ans_) >= n:\n        a = ans_\n        if a != 0:\n            break\nprint(int(a))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5955": {"id": 5955, "code": "N = 100\nif N % 2 == 0:\n    ans = N // 2\nelse:\n    ans = N // 2 + 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "18818": {"id": 18818, "code": "H = 14\nW = 12\nN = 112\nprint((N+max(H, W) - 1)//max(H, W))", "coverage": [">", ">", ">", ">"]}, "18658": {"id": 18658, "code": "h = 2\nw = 100\nn = 200\nprint(-(-n//max(h,w)))", "coverage": [">", ">", ">", ">"]}, "18194": {"id": 18194, "code": "from collections import defaultdict\nn = 6\nL_dict, R_dict = defaultdict(int), defaultdict(int)\ni = 0\nfor ipt in \"2 3 3 1 3 1\".split():\n    L_dict[i + int(ipt)] += 1\n    R_dict[i - int(ipt)] += 1\n    i += 1\ncnt = 0\nfor Lk, Lv in L_dict.items():\n    try:\n        cnt += R_dict[Lk] * Lv\n    except KeyError:\n        pass\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18512": {"id": 18512, "code": "h = 3\nw = 7\nn = 10\nprint(n // max(h,w)  + (1 if n%max(h,w) != 0 else 0))", "coverage": [">", ">", ">", ">"]}, "7261": {"id": 7261, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nans=0\nif sum(a)>=h:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "546": {"id": 546, "code": "s = ['a']\nk = 25\nabc = \"abcdefghijklmnopqrstuvwxyz\"\nc = 0\nfor e,i in enumerate(s):\n    if k-26+abc.index(i)>=0 and i!='a':\n        s[e] = 'a'\n        k-=26-abc.index(i)\nk+=abc.index(s[-1])\nk%=26\ns[-1] = abc[k]\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "814": {"id": 814, "code": "k = 2\nif k % 2 == 0:\n    print(-1)\nelse:\n    mod = 7 % k\n    counter = 1\n    memo = 1\n    mod_map = set()\n    mod_map.add(mod)\n    while mod != 0:\n        memo = ((memo % k) * (10 % k)) % k\n        mod = (mod + 7 * memo) % k\n        if mod not in mod_map:\n            mod_map.add(mod)\n        else:\n            counter = -1\n            break\n        counter += 1\n        if mod == 0:\n            break\n    print(counter)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5134": {"id": 5134, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nc = int(len(s)) - 2\nprint(s[0] + str(c) + s[-1])", "coverage": [">", ">", ">"]}, "4375": {"id": 4375, "code": "a = [10, 0, 15, 0, 30]\nkishou = a[0] * 60 + a[1]\nshuusin = a[2] * 60 + a[3]\nprint(shuusin - kishou - a[4])", "coverage": [">", ">", ">", ">"]}, "6909": {"id": 6909, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nresult = sum(a)\nif h - result <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "2248": {"id": 2248, "code": "N = 10;A = 3;B = 5\nprint(\"%d %d\" % (min(A, B), max((A+B)-N, 0)))", "coverage": [">", ">"]}, "1758": {"id": 1758, "code": "n = 10;x = 7;y = 5\nmax = min(x,y)\nif n-(x+y) < 0:\n    min = abs(n-x-y)\nelse:\n    min = 0\nprint(max,min)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "6082": {"id": 6082, "code": "import math\na = 5\nprint(math.floor((a + 1) / 2))", "coverage": [">", ">", ">"]}, "9021": {"id": 9021, "code": "a = 15;b = 18;c = 26;d = 35;e = 36;k = 18\nif e-a<=k:print(\"Yay!\")\nelse:print(\":(\")", "coverage": [">", ">", ">"]}, "5512": {"id": 5512, "code": "N = 5\ng = N // 2\nk = ( N + 1 ) // 2\nif N % 2 == 0:\n    print(g)\nelse:\n    print(k)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19038": {"id": 19038, "code": "n = 5\nif n%2:\n    print(0)\nelse:\n    ans = (n//5)//2\n    tmp = 5\n    while True:\n        tmp *= 5\n        if tmp > n:\n            break\n        ans += (n//tmp)//2\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "2354": {"id": 2354, "code": "import sys\nimport math\nN = 2;M = 1\nif not ( 0 <= N <= 100 and 0 <= M <= 100 ): sys.exit()\nif not ( 2 <= N+M ): sys.exit()\nif not ( isinstance(N,int) and isinstance(M,int) ): sys.exit()\nans = 0\nif N >= 2:\n    ans += math.factorial(N) // (math.factorial(N - 2) * math.factorial(2))\nif M >= 2:\n    ans += math.factorial(M) // (math.factorial(M - 2) * math.factorial(2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "18362": {"id": 18362, "code": "h = 3\nw = 7\nn = 10\ncount = 0\nif h < w:\n  a = w\n  b = h\nelse:\n  a = h\n  b = w\nx = int(n/a)\nif n%a != 0:\n  x += 1\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "11822": {"id": 11822, "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nif(M1 != M2):print(1)\nelse: print(0)", "coverage": [">", ">", ">", ">"]}, "12925": {"id": 12925, "code": "X = 6\np=[3,5,7]\nif X in p:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", ">", "!", "!", ">"]}, "1011": {"id": 1011, "code": "n = 111\nlis = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nif n <= lis[0]:\n    print(lis[0])\nelif n <= lis[1]:\n    print(lis[1])\nelif n <= lis[2]:\n    print(lis[2])\nelif n <= lis[3]:\n    print(lis[3])\nelif n <= lis[4]:\n    print(lis[4])\nelif n <= lis[5]:\n    print(lis[5])\nelif n <= lis[6]:\n    print(lis[6])\nelif n <= lis[7]:\n    print(lis[7])\nelif n <= lis[8]:\n    print(lis[8])", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "4518": {"id": 4518, "code": "s = ['x', 'y', 'z']\ntop=s[0]\ntail=s[-1]\nnum=str(len(s)-2)\nprint(top+num+tail)", "coverage": [">", ">", ">", ">", ">"]}, "8094": {"id": 8094, "code": "import math\nN = 3;K = 3\nlist_ai = map(int,\"1 2 3\".split())\nprint(math.ceil(1+(N-K)/(K-1)))", "coverage": [">", ">", ">", ">"]}, "2082": {"id": 2082, "code": "n = 100;a = 100;b = 100\nand_=min(a,b)\nor_=max(0, a+b-n)\nprint(and_, or_)", "coverage": [">", ">", ">", ">"]}, "3812": {"id": 3812, "code": "x = 13;y = 3;z = 1\nl = y + 2*z\nans = 0\nwhile l <= x:\n    l += y + z\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18297": {"id": 18297, "code": "h = 14\nw = 12\nn = 112\nall_cell = 0\ncount = 0\nwhile all_cell < n:\n    if h > w:\n        all_cell += h\n        w -= 1\n    else:\n        all_cell += w\n        h -= 1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "5127": {"id": 5127, "code": "s = \"xyz\"\nif len(s) >=3:\n    a = s[0] + str((len(s)-2)) + s[-1]\nprint(a)", "coverage": [">", ">", ">", ">"]}, "10062": {"id": 10062, "code": "n = 3\ns = \"())\"\na=0\nb=0\nfor i in range(n):\n    if s[i]=='(':\n        a+=1\n    else:\n        if a==0:\n            b+=1\n        else:\n            a-=1\nprint('('*b+s+')'*a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "17839": {"id": 17839, "code": "S = \"0112\"\nif 1 <= int(S[0:2]) <= 12:\n  if 1 <= int(S[2:4]) <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= int(S[2:4]) <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "9257": {"id": 9257, "code": "s = \"2017/01/31\"\nprint(s.replace(\"7\",\"8\",1))", "coverage": [">", ">"]}, "18275": {"id": 18275, "code": "H = 3\nW = 7\nN = 10\na = max(H, W)\nprint(N // a + min(1, N % a))", "coverage": [">", ">", ">", ">", ">"]}, "8652": {"id": 8652, "code": "N = 4\nA_1 = [1, 1, 1, 1]\nA_2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "737": {"id": 737, "code": "K = 101\nx=7\nc=1\nvisited={7}\nwhile x%K:\n    x*=10\n    x+=7\n    x%=K\n    c+=1\n    z=x%K\n    if z in visited:\n        print(-1)\n        exit()\n    visited.add(x%K)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12079": {"id": 12079, "code": "M = 11;D = 16\nm = 11;d = 17\nif M != m:\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14020": {"id": 14020, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\nsw='n'\nans=0\nfor i in range(1,n):\n    if sw=='u':\n        if l[i-1]-l[i]<=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    elif sw=='d':\n        if l[i-1]-l[i]>=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    else:\n        if l[i-1]-l[i]<0:\n            sw='u'\n        elif l[i-1]-l[i]>0:\n            sw='d'\n        else:\n            continue\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "3042": {"id": 3042, "code": "n = \"35753\"\nl = len(n)\nn = int(n)\nres = 1000\nfor i in range(l-2):\n  c = n // (10 ** i)\n  c %= 1000\n  res = min(res,abs(c-753))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17493": {"id": 17493, "code": "s = \"1905\"\nf=int(s[:2])\nb=int(s[2:])\nif 0<f<13 and 0<b<13:\n    print('AMBIGUOUS')\nelif 0<b<13:\n    print('YYMM')\nelif 0<f<13:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "1657": {"id": 1657, "code": "n = 100;a = 100;b = 100\nif a < b:\n  max = a\nelse:\n  max = b\nmin = (a + b) - n\nif min < 0:\n  min = 0\nprint(max, min)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", ">"]}, "10442": {"id": 10442, "code": "a = 100;b = 50;k = 4\nn = []\nfor x in range(1, min(a, b) + 1):\n    if a % x == 0 and b % x == 0:\n        n.append(x)\nprint(tuple(reversed(n))[k - 1])", "coverage": [">", ">", ">", ">", ">", ">"]}, "11635": {"id": 11635, "code": "S = \"SUN\"\nday = [\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nprint(day.index(S) + 1)", "coverage": [">", ">", ">"]}, "5772": {"id": 5772, "code": "n = \"100\"\na=(int(n)+1)//2\nprint(a)", "coverage": [">", ">", ">"]}, "9581": {"id": 9581, "code": "s = \"2017/01/31\"\nprint('2018'+s[4:10])", "coverage": [">", ">"]}, "18411": {"id": 18411, "code": "H = 14\nW = 12\nN = 112\nm = max(H,W)\nif N%m != 0:\n  ans = N/m +1\nelse:\n  ans = N/m\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12102": {"id": 12102, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1!=m2 and d2==1:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "6967": {"id": 6967, "code": "H = 10\nA = [4, 5, 6]\nif sum(A) < H:\n  print(\"No\")\nelse:\n  print(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "15375": {"id": 15375, "code": "x = 12;y = 3;z = 1\nans, mod = divmod(x, y+z)\nif mod >= z:\n    print(ans)\nelse:\n    print(ans-1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "11273": {"id": 11273, "code": "S = \"SUN\"\nDate = [\"SUN\", 'MON', \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"][::-1]\nprint(Date.index(S)+1)", "coverage": [">", ">", ">"]}, "9332": {"id": 9332, "code": "s = \"2017/01/07\"\nprint(s.replace('2017', '2018'))", "coverage": [">", ">"]}, "15193": {"id": 15193, "code": "X = 12;Y = 3;Z = 1\nresult = X // (Y + Z) - 1\nwhile X >= (result + 1) * Y + (result + 2) * Z:\n    result += 1\nprint(result)", "coverage": [">", ">", ">", "!", ">"]}, "4653": {"id": 4653, "code": "s = \"xyz\"\na = len(s) -2\nm = list(s)\nprint(str(m[0]) + str(a) + str(m[-1]))", "coverage": [">", ">", ">", ">"]}, "12676": {"id": 12676, "code": "if \"5\" in ['7', '5', '3']:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!"]}, "1611": {"id": 1611, "code": "n = 10;a = 7;b = 5\nli = [a,b]\nmaxi = min (li)\nm = 0\nif a + b <= n:\n    m = 0\nif a + b > n:\n    m = a + b - n\nprint(maxi,m)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18731": {"id": 18731, "code": "import math\nh = 14\nw = 12\nn = 112\nt = max(h,w)\nprint(math.ceil(n/t))", "coverage": [">", ">", ">", ">", ">", ">"]}, "4624": {"id": 4624, "code": "head = \"i\";body = ['n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o'];tail = \"n\"\nprint(''.join(map(str, (head, len(body), tail))))", "coverage": [">", ">"]}, "19315": {"id": 19315, "code": "n = 3\nprint(n) if n%2 ==0 else print(n*2)", "coverage": [">", ">"]}, "12168": {"id": 12168, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nprint(0 if D1 + 1 == D2 else 1)", "coverage": [">", ">", ">"]}, "11997": {"id": 11997, "code": "a = 11;b = 30\nc = 12;d = 1\nif a == c:\n  print('0')\nelse:\n  print('1')", "coverage": [">", ">", ">", "!", "!", ">"]}, "13758": {"id": 13758, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nlength=(H2*60+M2)-(H1*60+M1)\nans=length-K\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "15955": {"id": 15955, "code": "A = 20;B = 30\nsukima =A-B*2\nif 0 < sukima:\n    print(sukima)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "15842": {"id": 15842, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nX = 64146;Y = 123;Z = 456\nprint((X - Z) // (Z + Y))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16187": {"id": 16187, "code": "from bisect import bisect_left\nN = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nif N == 2:\n    print(A[1], A[0])\n    exit()\na = A[-1]\nk = bisect_left(A, a/2)\nx = a/2-A[k-1]\ny = A[k]-a/2\nif x <= y:\n    b = A[k-1]\nelse:\n    b = A[k]\nprint(a, b)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10814": {"id": 10814, "code": "s = \"atcoder\"\nflag = 0\nsr = s[-1::-1]\nif sr == s:\n    flag+=1\ns1 = s[:(len(s)-1)//2]\ns1r = s1[-1::-1]\nif s1 == s1r:\n    flag += 1\ns2 = s[(len(s)+3)//2-1:]\ns2r = s2[-1::-1]\nif s2 == s2r:\n    flag+=1\nprint('Yes' if flag == 3 else 'No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "19465": {"id": 19465, "code": "s = 10\nif s % 2 == 0:\n    print(int(s))\nelse:\n    print(int(s*2))", "coverage": [">", ">", ">", "!", "!"]}, "18917": {"id": 18917, "code": "N = 12\nif N%2:\n    ans = 0\nelse:\n    ans = 0\n    d = 10\n    while d <= N:\n        ans += N//d\n        d *= 5\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16495": {"id": 16495, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nmaxa=max(a)\nans=0\nch=0\nfor i in range(n-1):\n  b=maxa-a[i]\n  c=min(b,a[i])\n  if c>=ch:\n    ans=a[i]\n    ch=c\nprint(str(maxa)+' '+str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6180": {"id": 6180, "code": "import bisect\nN = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ntotal = 0\nfor i in range(N):\n  total += bisect.bisect_left(a,b[i]) * (N - bisect.bisect_right(c,b[i]))\nprint(total)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1080": {"id": 1080, "code": "x = 111\nfor i in range(x, 1000):\n  if i // 100 == i % 10 and i // 100 == (i // 10) % 10:\n    break\nprint(i)", "coverage": [">", ">", ">", ">", ">"]}, "4504": {"id": 4504, "code": "strings = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nstr_len = len(strings)\nprint(strings[0] + str(str_len - 2) + strings[str_len - 1])", "coverage": [">", ">", ">"]}, "7226": {"id": 7226, "code": "hp = \"211\";sp = \"5\"\nhp = int(hp)\nsp = int(sp)\nattack = ['31', '41', '59', '26', '53']\ndamage = 0\nfor i, new in enumerate(attack):\n    attack[i] = int(attack[i])\nfor i in range(0,sp):\n    damage += attack[i]\nif damage >= hp:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8217": {"id": 8217, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nN -= K\nK -= 1\nans = 1\nans += (N-1)//K + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1714": {"id": 1714, "code": "N = 100;A = 100;B = 100\nmx = min(A,B)\nmn = max(A+B-N,0)\nprint(mx,mn)", "coverage": [">", ">", ">", ">"]}, "15404": {"id": 15404, "code": "x = 12;y = 3;z = 1\nans = 0\nx -= z\nwhile x >= 0:\n    x -= y+z\n    if x >= 0: ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8340": {"id": 8340, "code": "n = 5\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(A[0][:i + 1]) + sum(A[1][i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4751": {"id": 4751, "code": "inputstr = \"smiles\"\nlength = len(inputstr) - 2\nprint('{}{}{}'.format(inputstr[0],length,inputstr[-1]))", "coverage": [">", ">", ">"]}, "11612": {"id": 11612, "code": "s = \"SAT\"\nweek = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = week.index(s)\ns = -s \nprint(s + 7)", "coverage": [">", ">", ">", ">", ">"]}, "17472": {"id": 17472, "code": "S = \"1905\"\nA = int(S[:2])\nB = int(S[2:])\nif  1 <= A and A <= 12:\n    if  1 <= B and B <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if  1 <= B and B <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "2784": {"id": 2784, "code": "s = \"1111111111\"\nans=753\nfor i in range(0,len(s)-3+1):\n    ans=min(abs(int(s[i:i+3])-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17794": {"id": 17794, "code": "s = \"1700\"\na = s[:2]\nb = s[2:]\nb1 = 0\na1 = 0\nif b[0] == '0': b1 = int(b[1])\nelse: b1 = int(b)\nif a[0] == '0': a1 = int(a[1])\nelse: a1 = int(a)\nif (b1>=1 and b1<=12) and (a1>=1 and a1<=12): print(\"AMBIGUOUS\")\nelif b1>=1 and b1<=12: print(\"YYMM\")\nelif a1>=1 and a1<=12: print(\"MMYY\")\nelse: print(\"NA\") ", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "13712": {"id": 13712, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nokiteru = h2 * 60 + m2 - (h1 * 60 + m1)\nprint(okiteru - k)", "coverage": [">", ">", ">"]}, "14064": {"id": 14064, "code": "from collections import  deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt=0\njudge=[]\nfor i in range(n-1):\n    if a[i]<a[i+1]:\n        flag=0\n    elif a[i]>a[i+1]:\n        flag=1\n    elif a[i]==a[i+1]:\n        continue\n    if judge==[]:\n        judge.append(flag)\n    else:\n        ff=judge.pop()\n        if flag==ff:\n            judge.append(flag)\n        else:\n            cnt+=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "7516": {"id": 7516, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nanswer = sum(A)\nif answer >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "5752": {"id": 5752, "code": "n = 5\nprint(int(n/2+0.9))", "coverage": [">", ">"]}, "15525": {"id": 15525, "code": "x = 64146;y = 123;z = 456\nprint(x//(y+z) if x%(y+z)>=z else x//(y+z)-1)", "coverage": [">", ">"]}, "17729": {"id": 17729, "code": "S = \"1700\"\nMM = [\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif S[:2] in MM and S[2:] in MM:\n  print(\"AMBIGUOUS\")\nelif S[:2] in MM:\n  print(\"MMYY\")\nelif S[2:] in MM:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "4045": {"id": 4045, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nHM1=H1*60+M1\nHM2=H2*60+M2\nprint(max(HM2-HM1-K,0))", "coverage": [">", ">", ">", ">"]}, "8134": {"id": 8134, "code": "from math import ceil\nN = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nA.sort()\ncnt = 1\nfor i in range(1, N):\n    if A[0] == A[i]:\n        cnt += 1\nprint(ceil((N-cnt)/(K-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "3257": {"id": 3257, "code": "a = 20;b = 30\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "2979": {"id": 2979, "code": "S = \"1234567876\"\nprint(min(abs(int(S[i:i+3])-753) for i in range(len(S)-2)))", "coverage": [">", ">"]}, "15632": {"id": 15632, "code": "x = 100000;y = 1;z = 1\nnum = x-z\nans = 0\nans += num // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "9734": {"id": 9734, "code": "N = 6\nS = \")))())\"\nflg_l = False\ncnt_r = 0\ncnt_l = 0\nfor i in range(N):\n    if(S[i] == \"(\"):\n        cnt_r += 1\n        flg_l = True            \n    else:\n        if(flg_l):\n            if(cnt_r > 0):\n                cnt_r -= 1\n            else:\n                cnt_l += 1\n                flg_l = False\n        else:\n            cnt_l += 1\nans = \"\"\nans += (\"(\"*cnt_l)+S+(\")\"*cnt_r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "13553": {"id": 13553, "code": "S = \"happy,newyear,enjoy\"\nprint(S[0:5]+' '+S[6:13]+' '+S[14:19])", "coverage": [">", ">"]}, "13582": {"id": 13582, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\",\" \"))", "coverage": [">", ">"]}, "3947": {"id": 3947, "code": "x = 100000;y = 1;z = 1\nx -= z\nr = x // (y + z)\nprint(r)", "coverage": [">", ">", ">", ">"]}, "4438": {"id": 4438, "code": "S = \"internationalization\"\nc=len(S)\nprint(S[0]+str(c-2)+S[-1])", "coverage": [">", ">", ">"]}, "2308": {"id": 2308, "code": "N = 10;A = 3;B = 5\n_max = min(A,B)\n_min = min(A,B) - (N - max(A,B))\nif _min < 0:\n    _min = 0\nprint(_max,_min)", "coverage": [">", ">", ">", ">", ">", ">"]}, "19422": {"id": 19422, "code": "N = 3\nprint(N*(N%2+1))", "coverage": [">", ">"]}, "17102": {"id": 17102, "code": "hd = ['D', 'D']\na, b = hd[0], hd[1]\nif a == b:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", ">", "!", "!"]}, "9859": {"id": 9859, "code": "N = 6\nS = \")))())\"\nleft = 0\nright = 0\nleft_ans = 0\nright_ans = 0\nfor i in range(N):\n    now = S[i]\n    if now == \"(\":\n        left += 1\n    else:\n        right += 1\n        if left == 0:\n            left_ans += 1\n        else:\n            left -= 1\n            left = max(0, left)\nS_mirror = \"\"\nfor i in range(N-1, -1, -1):\n    if S[i] == \"(\":\n        S_mirror += \")\"\n    else:\n        S_mirror += \"(\"\nleft = 0\nright = 0\nright_ans = 0\nfor i in range(N):\n    now = S_mirror[i]\n    if now == \"(\":\n        left += 1\n    else:\n        right += 1\n        if left == 0:\n            right_ans += 1\n        else:\n            left -= 1\n            left = max(0, left)        \nans = \"(\"*left_ans + S + \")\"*right_ans\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "180": {"id": 180, "code": "s = \"codefestival\"\nk = 100\nans = []\nfor i in range(len(s)):\n    if 123 - ord(s[i]) <= k:\n        if s[i] == \"a\":\n            ans.append(\"a\")\n            continue\n        ans.append(\"a\")\n        k -= 123 - ord(s[i])\n    else:\n        ans.append(s[i])\nlast = chr((ord(ans[-1])-97+k)%26 + 97)\nans[-1] = last\nprint(*ans, sep = \"\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "8136": {"id": 8136, "code": "n = 3;k = 3\n_ = \"1 2 3\"\nprint(1 + -(-(n-k)//(k-1)))", "coverage": [">", ">", ">"]}, "8126": {"id": 8126, "code": "import math\nN = 4;K = 3\nA = [2, 3, 1, 4]\nif N == K:\n    print('1')\nelse:\n    print(math.ceil((N-1)/(K-1)))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "2845": {"id": 2845, "code": "S = \"1234567876\"\nans = 1000\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3])-753) < ans:\n        ans = abs(int(S[i:i+3])-753)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3397": {"id": 3397, "code": "line = \"12 4\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "5440": {"id": 5440, "code": "n = 5\nprint(n//2 + (n % 2)*1)", "coverage": [">", ">"]}, "1306": {"id": 1306, "code": "N = 112\nX=set(str(N))\nY=len(X)\nif Y==1:\n  print(N)\nif Y!=1:\n  Z=0\n  for i in range(111,1000,111):\n    if N-i<0:\n      Z+=i\n      break\n  print(Z)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11281": {"id": 11281, "code": "days = 'SUN, MON, TUE, WED, THU, FRI, SAT'.split(', ')\nS = \"SUN\"\nans = (7 - days.index(S))\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "1141": {"id": 1141, "code": "n = ['1', '1', '2']\ni = n[0]\nj = n[1]\nk = n[2]\nif int(j + k) <= int(i+i):\n    print(i*3)\nelse:\n    print(str(int(i)+1)*3)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13105": {"id": 13105, "code": "X = 6\nprint('YES' if X == 3 or X == 5 or X == 7 else 'NO')", "coverage": [">", ">"]}, "3795": {"id": 3795, "code": "X = 64146;Y = 123;Z = 456\nX -= Z\nprint(X//(Y+Z))", "coverage": [">", ">", ">"]}, "7993": {"id": 7993, "code": "import math\nn, k = map(int,\"3 3\".split())\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">"]}, "12058": {"id": 12058, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(0 if a == c else 1)", "coverage": [">", ">", ">"]}, "18497": {"id": 18497, "code": "h = 3\nw = 7\nn = 10\nx = max(h, w)\nans = (n + x - 1) // x\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "16730": {"id": 16730, "code": "a = \"D\";b = \"D\"\nprint(\"H\" if (a == \"D\") ^ (b == \"H\") else \"D\")", "coverage": [">", ">"]}, "2386": {"id": 2386, "code": "n = 1;m = 1\ntot = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(tot)", "coverage": [">", ">", ">"]}, "7637": {"id": 7637, "code": "H = 10;N = 3\nA = [4, 5, 6]\nsum =0\nfor i in range(len(A)):\n\tsum = sum + A[i]\nif sum >= H:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16113": {"id": 16113, "code": "A = ['12', '4']\nB = int(A[0]) - 2 * int(A[1])\nprint(0 if B < 0 else B)", "coverage": [">", ">", ">"]}, "17891": {"id": 17891, "code": "S = \"1700\"\nn1 = int(S[:2])\nn2 = int(S[2:])\nif 1 <= n1 <= 12 and 1 <= n2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= n1 <= 12 and (not 1 <= n2 <= 12):\n    print('MMYY')\nelif (not 1 <= n1 <= 12) and 1 <= n2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14031": {"id": 14031, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nbefore = A[0]\nis_ascending = None\nans = 0\nfor a in A:\n    d = a - before\n    if d == 0:\n        pass\n    else:\n        if is_ascending == None:\n            is_ascending = d > 0\n        elif (is_ascending and d < 0) or (not is_ascending and d > 0):\n            ans += 1\n            is_ascending = None\n    before = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "4502": {"id": 4502, "code": "s = \"smiles\"\nss=len(s[1:len(s)-1])\nsss=str(ss)\nprint(s[0]+sss+s[-1])", "coverage": [">", ">", ">", ">"]}, "428": {"id": 428, "code": "sl = ['x', 'y', 'z']\nk = 4\nfor i in range(len(sl)):\n    ord_s = ord(sl[i])\n    use = 123 - ord_s\n    if k - use >= 0 and sl[i] != \"a\":\n        sl[i] = \"a\"\n        k -= use\nif k > 0:\n    sl[-1] = chr((ord(sl[-1]) + k - 97) % 26 + 97)\nprint(\"\".join(sl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "3809": {"id": 3809, "code": "X = 100000;Y = 1;Z = 1\nW = X - Z*2\nif W < Y:\n    print(0)\nelse:\n    W -= Y\n    ans = 1\n    ans += W // (Y+Z)\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "7600": {"id": 7600, "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint(\"Yes\" if sum(a) >= h else \"No\")", "coverage": [">", ">", ">"]}, "5817": {"id": 5817, "code": "n = 100\nif n % 2 == 0:\n  print(int(n//2))\nelse:\n  print(int(n//2+1))", "coverage": [">", ">", ">", "!", "!"]}, "15634": {"id": 15634, "code": "x = 64145;y = 123;z = 456\nnum = x-z\nans = 0\nans += num // (y+z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "15096": {"id": 15096, "code": "n = 2;p = 0\nnum = [1, 3]\nsemua_angka_genap = True\nfor i in num:\n  if i % 2 == 1:\n    semua_angka_genap = False\nif semua_angka_genap:\n  if p == 0:\n    print(2**n)\n  else:\n    print(0)\nelse:\n  print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "16748": {"id": 16748, "code": "i_list = ['D', 'D']\na = i_list[0]\nb = i_list[1]\nr = ''\nif a == 'H':\n\tr = b\nelse:\n\tr = 'H' if b == 'D' else 'D'\nprint(r)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15783": {"id": 15783, "code": "x = 12;y = 3;z = 1\ncount=1\nx -= 2*z+y\ncount += x //(y+z)\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "5320": {"id": 5320, "code": "N = 5\nprint(N//2 if N%2==0 else N//2+1)", "coverage": [">", ">"]}, "1189": {"id": 1189, "code": "n = 112\nprint(n) if n%111==0 else print((n//111+1)*111)", "coverage": [">", ">"]}, "2144": {"id": 2144, "code": "n = 10;a = 7;b = 5\nmaxab = min(a, b)\nminab = (a+b)-n\nif minab < 0:\n  minab = 0\nprint(maxab, minab)", "coverage": [">", ">", ">", ">", "!", ">"]}, "3725": {"id": 3725, "code": "N = 20;M = 30\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "14040": {"id": 14040, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nflg = 0\nrev = 0 \nfor c,n in zip(A, A[1:]):\n    if not flg:\n        if c < n:\n            flg = 1\n        elif c > n:\n            flg = 1\n            rev = 1\n    else:\n        if rev:\n            c = -c\n            n = -n\n        if c > n:\n            ans += 1\n            flg = 0\n            rev = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14486": {"id": 14486, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstatus = 0\nans = 1\nfor i in range(1, n):\n    if status == 0:\n        if a[i-1] < a[i]:\n            status = 1\n        elif a[i-1] > a[i]:\n            status = 2\n    elif status == 1:\n        if a[i-1] > a[i]:\n            ans += 1\n            status = 0\n    elif status == 2:\n        if a[i-1] < a[i]:\n            ans += 1\n            status = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11598": {"id": 11598, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nS = \"SA\"\nif S=='SUN':\n    print(7)\nelif S=='MON':\n    print(6)\nelif S=='TUE':\n    print(5)\nelif S=='WED':\n    print(4)\nelif S=='THU':\n    print(3)\nelif S=='FRI':\n    print(2)\nelif S=='SAT':\n    print(1)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!"]}, "1935": {"id": 1935, "code": "N = 100;A = 100;B = 100\nboth = min(A, B)\nnone = 0 if A+B-N<0 else A+B-N\nprint(both, none)", "coverage": [">", ">", ">", ">"]}, "12299": {"id": 12299, "code": "s = \"level\"\nflag = 1\nl = len(s)\nfor i in range((l-1)//2):\n    if s[i] == s[(l-1)//2 - 1-i]:\n        continue\n    else:\n        flag = 0\n        break\nif s[:(l-1)//2] != s[(l+3)//2-1:]:\n    flag = 0\nprint(\"Yes\" if flag == 1 else \"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "9493": {"id": 9493, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3]='8'\nprint(\"\".join(s))", "coverage": [">", ">", ">"]}, "9328": {"id": 9328, "code": "N = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nN[3] = '8'\nN = \"\".join(N)\nprint(N)", "coverage": [">", ">", ">", ">"]}, "9966": {"id": 9966, "code": "s = \")))())\";t = \")))())\";l = \"(\";r = \")\";p = \"()\"\nexec(\"t=t.replace('()','');\"*50)\nc=t.count;print(l*c(r)+s+r*c(l))", "coverage": [">", ">", ">"]}, "8983": {"id": 8983, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif b-a > k or c-a > k or d-a > k or e-a > k or c-b > k or d-b > k or e-b > k or d-c > k or e-c > k or e-d > k:\n  print(\":(\")\nelse:\n  print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16628": {"id": 16628, "code": "A1 = \"D\";A2 = \"D\"\nif A1 == \"H\":\n  print(A2)\nelse:\n  if A2 == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", "!", "!", ">", "!", "!", ">"]}, "15879": {"id": 15879, "code": "x = 13;y = 3;z = 1\nx = x-z\nc = y+z\nn = 0\nwhile 0 < x:\n  if c <= x:\n    n = n+1\n    x = x-c\n  else:\n    break\nprint(n)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9611": {"id": 9611, "code": "S = \"2017/01/31\"\nprint(S.replace(\"7\",\"8\",1))", "coverage": [">", ">"]}, "7813": {"id": 7813, "code": "n = 4;k = 3\nAs = [2, 3, 1, 4]\nidx = As.index(min(As))\nleft = idx\nn_l = (left + k - 2) // (k - 1)\nright = n - ((n_l) * (k-1)) - 1\nn_r = (right + k - 2) // (k - 1)\nprint(n_l + n_r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14907": {"id": 14907, "code": "n = 1;p = 1\na = [50]\ncnt = 0\nfor num in a:\n    if num % 2 == 1:\n        cnt += 1\nans = 0\nif cnt == 0:\n    if p % 2 == 0:\n        ans = 2**n\nelse:\n    ans = 2**(n - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "17837": {"id": 17837, "code": "S = \"1700\"\nx=int(S[:2])\ny=int(S[2:4])\nif 1<=x<=12:\n    if 1<=y<=12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1<=y<=12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "18996": {"id": 18996, "code": "N = 5\nif (N%2 == 1):\n    print(0)\nelif N == 0:\n    print(0)\nelse:\n    N //= 2\n    res = 0\n    div_coef = 1\n    while True:\n        tmp_add = N // (5 ** div_coef)\n        res += int(tmp_add)\n        div_coef += 1\n        if tmp_add < 1:\n            break\n    print(int(res))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "9345": {"id": 9345, "code": "S = \"2017/01/31\"\nday=S[-6:]\nprint(\"2018\"+day)", "coverage": [">", ">", ">"]}, "15048": {"id": 15048, "code": "N = 1;P = 1\na_li = [50]\nans = 0\no = 0\nfor a in a_li:\n    if a % 2 != 0:\n        o += 1\nif o == 0:\n    if P == 1:\n        ans = 0\n    else:\n        ans = 2 ** N\nelse:\n    ans = 2 ** (N - 1)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "15059": {"id": 15059, "code": "n = 2;p = 0\na = [1, 3]\na_new=[]\nfor i in range(n):\n    a_new.append(a[i]%2)\neven=a_new.count(0)\nodd=a_new.count(1)\nif odd==0 and p==0:\n    print(2**n)\nelif odd==0 and p==1:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "14644": {"id": 14644, "code": "N = 3;P = 0\nA = (1, 1, 1)\ndp = [[0, 0] for _ in range(N + 1)]\ndp[0][0] = 1\nfor index, a in enumerate(A, start=1):\n    if a % 2 == 0:\n        dp[index][0] = dp[index - 1][0] * 2\n        dp[index][1] = dp[index - 1][1] * 2\n    else:\n        dp[index][0] = dp[index - 1][1] + dp[index - 1][0]\n        dp[index][1] = dp[index - 1][0] + dp[index - 1][1]\nprint(dp[N][P])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "17076": {"id": 17076, "code": "a = \"H\";b = \"H\"\nif a == 'H':\n    if b == 'H':\n        print('H')\n    else:\n        print('D')\nelse:\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "4635": {"id": 4635, "code": "s = \"xyz\"\ns1 = s[0]\ns2 = s[-1]\nl = len(s[1:-1])\nprint(s1+str(l)+s2)", "coverage": [">", ">", ">", ">", ">"]}, "18861": {"id": 18861, "code": "from collections import deque\nn = 6\na = deque(list(map(int, \"1 2 3 4 5 6\".split())))\nans = float('inf')\ntotal = sum(a)\nsm = 0\nwhile len(a)>1:\n    sm += a.pop()\n    ans = min(abs(2*sm-total), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8526": {"id": 8526, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16898": {"id": 16898, "code": "a = \"D\";b = \"D\"\nx= a==\"H\"\ny= b==\"H\"\nif x^y:\n    print(\"D\")\nelse:\n    print(\"H\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "1380": {"id": 1380, "code": "n = 750\nfor i in range(9):\n    if n > 111*i and n <= 111*(i+1):\n        ans = 111*(i+1)\n        break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3208": {"id": 3208, "code": "a = \"35753\"\nb = abs(753 - int(a[:3]))\nfor i in range(1, len(a)-2):\n  c = abs(753 - int(a[i:i+3]))\n  if b >= c :\n    b = c\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8856": {"id": 8856, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8173": {"id": 8173, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 4;K = 3\nA = 4\nprint((N - 2) // (K - 1) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5015": {"id": 5015, "code": "n = \"smiles\"\nn = list(n)\na = n.pop(0)\nb = n.pop()\nc = len(n)\nprint(a+str(c)+b)", "coverage": [">", ">", ">", ">", ">", ">"]}, "17544": {"id": 17544, "code": "S = [1, 9, 0, 5]\nif 1 <= S[0]*10 + S[1] <= 12 and 1 <= S[2]*10 + S[3] <= 12:\n    print(\"AMBIGUOUS\")\nelif 1 <= S[0]*10 + S[1] <= 12 and (S[2]*10 + S[3] > 12 or S[2]*10 + S[3] == 0):\n    print(\"MMYY\")\nelif (S[0]*10 + S[1] > 12 or S[0]*10 + S[1] == 0)  and  1 <= S[2]*10 + S[3] <= 12:\n    print(\"YYMM\")\nelif (S[0]*10 + S[1] > 12 or S[0]*10 + S[1] == 0) and (S[2]*10 + S[3] > 12 or S[2]*10 + S[3] == 0):\n    print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "13367": {"id": 13367, "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(\",\", \" \"))", "coverage": [">", ">"]}, "1773": {"id": 1773, "code": "n = 10;a = 7;b = 5\nif a == 0 or b == 0:\n    print(0, 0)\nelif n > a+b:\n    max_ab = min(a, b)\n    print(max_ab, 0)\nelse:\n    max_ab = min(a, b)\n    print(max_ab, a+b-n)", "coverage": [">", ">", "!", ">", "!", "!", "!", ">", ">"]}, "8903": {"id": 8903, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14257": {"id": 14257, "code": "p = -1\nxp = -1\nans = 1\nfor i in \"1 2 3 2 2 1\".split(\" \"):\n  i = \"1\"\n  if i == p: continue\n  if p != -1:\n    x = p < i\n    if xp != -1:\n      ans += x != xp\n    if xp != -1 and x != xp:\n      xp = -1\n    else:\n      xp = x\n  p = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "6692": {"id": 6692, "code": "a = 20;b = 3\nn = [4, 5, 6]\nif sum(n) >= a:\n  print('Yes')\nelse:print('No')", "coverage": [">", ">", ">", "!", ">"]}, "1095": {"id": 1095, "code": "n = 112\nif n <= 111:\n    print(111)\nelif n <= 222:\n    print(222)\nelif n <= 333:\n    print(333)\nelif n <= 444:\n    print(444)\nelif n <= 555:\n    print(555)\nelif n <= 666:\n    print(666)\nelif n <= 777:\n    print(777)\nelif n <= 888:\n    print(888)\nelif n <= 999:\n    print(999)", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "581": {"id": 581, "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nN = len(S)\nK = 100\nfor i in range(N - 1):\n    d = (ord(\"a\") - ord(S[i])) % 26\n    if d <= K:\n        S[i] = \"a\"\n        K -= d\nS[-1] = chr((ord(S[-1]) - ord(\"a\") + K) % 26 + ord(\"a\"))\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17240": {"id": 17240, "code": "a = \"D\";b = \"D\"\nchar_honest = \"H\"\nchar_dishonest = \"D\"\nif a == char_honest:\n    if b == char_honest:\n        print(char_honest)\n    else:\n        print(char_dishonest)\nelse:\n    if b == char_honest:\n        print(char_dishonest)\n    else:\n        print(char_honest)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "7180": {"id": 7180, "code": "H = 211;N = 5\nprint('Yes' if H <= sum(map(int,\"31 41 59 26 53\".split())) else 'No')", "coverage": [">", ">"]}, "11502": {"id": 11502, "code": "Ds = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nSs = \"SAT\"\nans = 7 - Ds.index(Ss)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11729": {"id": 11729, "code": "x = 11\ny = 12\nprint(1) if (x != y) else print(0)", "coverage": [">", ">", ">"]}, "8792": {"id": 8792, "code": "N = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15921": {"id": 15921, "code": "A = 20;B = 15\nif A <= B*2:\n    print(0)\nelif A > B*2:\n    print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "585": {"id": 585, "code": "S = \"xyz\"\nK = 4\nc2i=lambda c: ord(c)-ord(\"a\")\ni2c=lambda i: chr(i+ord(\"a\"))\nA=list(map(c2i, S))\nfor i in range(len(A)):\n    if A[i] and 26-A[i]<=K:\n        K-=26-A[i]\n        A[i]=0\nA[-1]+=K\nA[-1]%=26\nprint(\"\".join(map(i2c,A)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8327": {"id": 8327, "code": "N = 1\nA = [2]\nB = [3]\nC = [0] * N \nC[0] = A[0] + sum(B)\nfor i in range(1,N):\n    C[i] = C[i-1]+A[i]-B[i-1]\nprint(max(C))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "17552": {"id": 17552, "code": "s = \"1700\"\nif 1 <= int(s[2:4]) <= 12 and 1 <= int(s[0:2]) <= 12:\n    print('AMBIGUOUS')\nelif 1 <= int(s[2:4]) <= 12:\n    print('YYMM')\nelif 1 <= int(s[0:2]) <= 12:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "16981": {"id": 16981, "code": "a = \"D\";b = \"H\"\nif a == 'H':\n    print('H') if b == 'H' else print('D')\nelse:\n    print('H') if b == 'D' else print('D')", "coverage": [">", ">", "!", "!", ">"]}, "7923": {"id": 7923, "code": "import math\nn = 4;k = 3\na = map(int, \"2 3 1 4\".split())\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">"]}, "12687": {"id": 12687, "code": "n = \"6\"\nprint(\"YES\" if n == \"3\" or n == \"5\" or n == \"7\" else \"NO\")", "coverage": [">", ">"]}, "1303": {"id": 1303, "code": "val = [111*i for i in range(1, 10)]\nN = 111\nwhile not N in val:\n  N += 1\nprint(N)", "coverage": [">", ">", ">", "!", ">"]}, "3596": {"id": 3596, "code": "A = 12;B = 4\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "12354": {"id": 12354, "code": "S = \"akasaka\"\nN = len(S)\ns = S[:(N-1)//2]\nt = S[(N+3)//2-1:]\nif s == t[::-1] and s == s[::-1] and t == t[::-1]:\n  ans = \"Yes\"\nelse:\n  ans = \"No\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "74": {"id": 74, "code": "s = \"codefestival\"\nK = 100\nans = []\nfor ch in s:\n    v = ord(\"a\") + 26 - ord(ch)\n    if ch != \"a\" and v <= K:\n        K -= v\n        ans.append(\"a\")\n    else:\n        ans.append(ch)\nif K > 0:\n    ans[-1] = chr(ord(ans[-1]) + K % 26)\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10595": {"id": 10595, "code": "a = 1;b = 1;k = 1\nans = []\nfor i in range(1, a*b + 1):\n    if a%i == 0 and b%i == 0:\n        ans.append(i)\nprint(ans[-1*k])", "coverage": [">", ">", ">", ">", ">", ">"]}, "16670": {"id": 16670, "code": "a = \"D\";b = \"D\"\nif a==\"H\":\n  print(b)\nelse:\n  print([\"H\",\"D\"][b==\"H\"])", "coverage": [">", ">", "!", "!", ">"]}, "13117": {"id": 13117, "code": "x = \"6\"\nprint('YES' if x in '753' else 'NO')", "coverage": [">", ">"]}, "13933": {"id": 13933, "code": "import sys\nN = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnum, cut = 0, 0\nif N == 1:\n    print(1)\n    sys.exit()\nfor i in range(N-1):\n    if a[i] == a[i+1]:\n        continue\n    if a[i] < a[i+1] and num == 0:\n        num  = 1\n        cut += 1\n    elif a[i] > a[i+1] and num == 0:\n        num = -1\n        cut += 1\n    elif num == 1 and a[i] > a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\n    elif num == -1 and a[i] < a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "1770": {"id": 1770, "code": "N = 10;A = 7;B = 5\nM = None\nm = None\nif A + B <= N:\n    M = min(A, B)\n    m = 0\nelse:\n    M = min(A, B)\n    m = A + B - N\nprint(M, m)", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "954": {"id": 954, "code": "n = \"750\"\nr = int(n[0]*3)\nif r < int(n):\n  print(str(int(n[0])+1)*3)\nelse:\n  print(r)", "coverage": [">", ">", ">", "!", "!", ">"]}, "17802": {"id": 17802, "code": "N = 112\na = N // 100\nb = N % 100\nif 1 <= a <= 12:\n  if 1 <= b <= 12:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 1 <= b <= 12:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2148": {"id": 2148, "code": "N = 100;A = 100;B = 100\na = min(A,B)\nb = max(0,A+B-N)\nprint(a,b)", "coverage": [">", ">", ">", ">"]}, "2370": {"id": 2370, "code": "n = 4;m = 3\nans = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(ans)", "coverage": [">", ">", ">"]}, "16476": {"id": 16476, "code": "n = 5\nA = [2, 4, 6, 9, 11]\nfor i in range(n):\n    if A[i]*2>A[-1]:\n        ind = i\n        break\nind -= 1\na = A[ind]\nb = A[-1]-A[ind+1]\nif a>=b:\n    print(A[-1],a)\nelse:\n    print(A[-1],A[ind+1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8064": {"id": 8064, "code": "n = 3;k = 3\na = [1, 2, 3]\nnow=0\nans=0\nif n==k:\n  print(1)\nelse:\n  while(True):\n    n-=k\n    ans+=1\n    if n<=0:\n      break\n    else:\n      n+=1\n  print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "19300": {"id": 19300, "code": "n = 5\nans=0\nif n%2==1:\n    ans=0\nelse:\n    tmp=10\n    while tmp<=n:\n        ans+=n//tmp\n        tmp*=5\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "16798": {"id": 16798, "code": "a = \"D\";b = \"H\"\nprint(\"DH\"[a == b])", "coverage": [">", ">"]}, "2035": {"id": 2035, "code": "n = 100;a = 100;b = 100\nif a+b > n: x = (a+b)-n\nelse: x = 0\nprint(min(a,b), x)", "coverage": [">", ">", "!", ">"]}, "16156": {"id": 16156, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nimport bisect\nbl = bisect.bisect_left(a, a[-1]//2)\nif abs(a[-1]/2 - a[bl]) < abs(a[-1]/2 - a[bl-1]):\n    print(a[-1] , a[bl])\nelse:\n    print(a[-1] , a[bl-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12628": {"id": 12628, "code": "X = 5\nif (X == 3 or X == 5 or X == 7):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "18253": {"id": 18253, "code": "H = 2\nW = 100\nN = 200\nX = max(H, W)\nprint((N + X - 1) // X)", "coverage": [">", ">", ">", ">", ">"]}, "4877": {"id": 4877, "code": "a = ['s', 'm', 'i', 'l', 'e', 's']\nprint(a[0]+str(len(a)-2)+a[-1])", "coverage": [">", ">"]}, "3625": {"id": 3625, "code": "a = 20;b = 30\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "11217": {"id": 11217, "code": "wee=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nprint((7-wee.index(\"SUN\")))", "coverage": [">", ">"]}, "18378": {"id": 18378, "code": "import math\nif __name__=='__main__':\n   H = 14\n   W = 12\n   N = 112\n   t = math.ceil(N/(H if H>W else W))\n   print (t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16999": {"id": 16999, "code": "a = \"D\";b = \"H\"\nprint(\"H\" if a == b else 'D')", "coverage": [">", ">"]}, "8455": {"id": 8455, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17271": {"id": 17271, "code": "a = \"H\";b = \"H\"\nif a == 'H' and  b == 'H':\n    print('H')\nelif a == 'D' and b == 'D':\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "18696": {"id": 18696, "code": "h = 2\nw = 100\nn = 200\nans = 0\ni = 0\nm = max(h,w)\nwhile True:\n    ans +=1\n    i += m\n    if i >= n:\n        print(ans)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "726": {"id": 726, "code": "K = 101\nif K%2==0:\n    print(-1)\nelif K==1:\n    print(1)\nelif K==7:\n    print(1)\nelse:\n    if K%7==0:\n        K = K//7\n    a = 1\n    cnt = 1\n    ind = -1\n    for i in range(K):\n        a = (a*10)%K\n        cnt += a\n        if cnt%K==0:\n            ind = i\n            break\n    if ind<0:\n        print(-1)\n    else:\n        print(ind+2)", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19253": {"id": 19253, "code": "N = 12\nif N % 2 != 0:\n    print('0')\nelse:\n    count = 0\n    i = 1\n    while True:\n        dif = (N // 2) // (5 ** i)\n        count += dif\n        if dif == 0:\n            break\n        i += 1\n    print(count)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2993": {"id": 2993, "code": "s = \"1111111111\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n  t = abs(753 - int(s[i:i+3]))\n  if t < ans: ans = t\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "14006": {"id": 14006, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\np = m = 0\nc = A[0]\nfor i in A[1:]:\n    if i > c:\n        p = 1\n    elif i < c:\n        m = 1\n    if p == 1 and m == 1:\n        p = m = 0\n        ans += 1\n    c = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11031": {"id": 11031, "code": "s = \"atcoder\"\nn = len(s)\nlist_s = list(s)\nlist_s_part1 = list_s[0:(n - 1) // 2]\nlist_s_part2 = list_s[(n + 1) // 2:n]\nlist_s_rev = list(reversed(list_s))\nlist_s_part1_rev = list(reversed(list_s_part1))\nlist_s_part2_rev = list(reversed(list_s_part2))\nif ''.join(list_s) == ''.join(list_s_rev) and    ''.join(list_s_part1) == ''.join(list_s_part1_rev) and    ''.join(list_s_part2) == ''.join(list_s_part2_rev):\n    print('Yes')\nelse: print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "19534": {"id": 19534, "code": "n = 3\nprint(n if n%2==0 and n%n==0 else n*2)", "coverage": [">", ">"]}, "6921": {"id": 6921, "code": "import math\nH = 210;N = 5\nprint(\"Yes\" if sum(list(map(int,\"31 41 59 26 53\".split())))>=H else \"No\")", "coverage": [">", ">", ">"]}, "15362": {"id": 15362, "code": "X = 13;Y = 3;Z = 1\nfor i in range(100000):\n    if X / (i* Y + (i + 1) * Z) >= 1:\n        pass\n    else:\n        print(i - 1)\n        break", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "8386": {"id": 8386, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15562": {"id": 15562, "code": "x = 64145;y = 123;z = 456\nans = x // (y+z)\nif (x % (y+z) < z):\n    ans -= 1\nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">"]}, "3395": {"id": 3395, "code": "A = 20;B = 15\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "1744": {"id": 1744, "code": "N = 100;A = 100;B = 100\nM = min(A, B)\nif A + B <= N:\n  m = 0\nelse:\n  m = A + B - N\nprint(M, m)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5218": {"id": 5218, "code": "s = \"internationalization\"\nprint(s[0]+str(len(s)-2)+s[len(s)-1])", "coverage": [">", ">"]}, "14551": {"id": 14551, "code": "N = 1;P = 1\nA = [50]\neven = 0\nodd = 0\nfor i in range(N):\n    if A[i]%2==0:\n        even += 1\n    else:\n        odd += 1\nif odd>=1:\n    ans = pow(2,even+odd-1)\nelif P==0:\n    ans = pow(2,even)\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", "!", "!", ">", ">"]}, "14815": {"id": 14815, "code": "n = 1;p = 1\nl = [50]\nl1 = []\nfor i in l:\n  if i%2==0:\n    l1.append(0)\n  else:\n    l1.append(1)\na = l1.count(1)\nb = l1.count(0)\nif a!=0:\n  cou = (2**(b))*(2**(a-1))\n  print(cou)\nelse:\n  if p%2==0:\n    print(2**b)\n  else:\n    print(0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "8222": {"id": 8222, "code": "n = 3;k = 3\na = [1, 2, 3]\nans = 0 - -(n - 1)//(k - 1)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "10821": {"id": 10821, "code": "S = \"level\"\nl = len(S)\nT = ''.join(list(reversed(S)))\na = S[:(l-1)//2]\na1 = ''.join(list(reversed(a)))\nb = S[(l+3)//2-1:l]\nb1 = ''.join(list(reversed(b)))\nif S == T:\n    if a == a1 and b == b1:\n        print('Yes')\n    if a != a1 or b != b1:\n        print('No')\nif S != T:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!"]}, "13805": {"id": 13805, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(N-1):\n  if A[i+1]-A[i] > 0:\n    if flag == 1:\n      cnt +=0\n    elif flag == -1:\n      cnt +=1\n      flag = 0\n    elif flag ==0:\n      flag = 1\n  elif A[i+1]-A[i] < 0:\n    if flag == 1:\n      cnt +=1\n      flag =0\n    elif flag ==-1:\n      cnt +=0\n    elif flag ==0:\n      flag = -1\n  elif A[i+1]-A[i] == 0:\n    flag += 0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "14024": {"id": 14024, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 1\nans = 1\nflg = 0\nfor i, j in zip(A[:-1],A[1:]):\n    if i < j:\n        if flg == 0:\n            flg = 1\n        elif flg == 2:\n            ans += 1\n            flg = 0\n    if i > j:\n        if flg == 0:\n            flg = 2\n        elif flg == 1:\n            ans += 1\n            flg = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "12477": {"id": 12477, "code": "s1 = \"atcoder\"\nn1 = len(s1)\ns2 = s1[:(n1-1)//2]\nn2 = len(s2)\ns3 = s1[-(n1-1)//2:]\nn3 = len(s3)\nf1, f2, f3 = True, True, True\nfor i in range((n1-1)//2):\n    if s1[i] != s1[-i-1]:\n        f1 = False\n        break\nfor i in range(n2//2):\n    if s2[i] != s2[-i-1]:\n        f2 = False\n        break\nfor i in range(n3//2):\n    if s3[i] != s3[-i-1]:\n        f3 = False\n        break\nif f1 and f2 and f3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18192": {"id": 18192, "code": "yymm = \"0112\"\nif (1 <= int(yymm[0:2]) and int(yymm[0:2]) <= 12) and (1 <= int(yymm[2:4]) and int(yymm[2:4]) <= 12):\n    print('AMBIGUOUS')\nelif (1 <= int(yymm[0:2]) and int(yymm[0:2]) <= 12) and int(yymm[2:4]) <= 99:\n    print('MMYY')\nelif int(yymm[0:2]) <= 99 and (1 <= int(yymm[2:4]) and int(yymm[2:4]) <= 12):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "19191": {"id": 19191, "code": "n = 12\nif n%2==1:\n    print(0)\n    exit()\ncnt=0\nn//=2\nfact=1\nwhile n>=5**fact:\n    cnt+=n//(5**fact)\n    fact+=1\nprint(cnt)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14298": {"id": 14298, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nup,down = 1,1\nfor i in range(1,N):\n  if A[i-1] > A[i]:\n    up = 0\n    if down == 0:\n      count += 1\n      up,down = 1,1\n  elif A[i-1] < A[i]:\n    down = 0\n    if up == 0:\n      count += 1\n      up,down = 1,1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10089": {"id": 10089, "code": "import sys\nreadline = sys.stdin.readline\nN = 6\nS = \")))())\"\nopen = 0\na = 0\nfor i in range(len(S)):\n  if S[i] == \"(\":\n    open += 1\n  else:\n    if open == 0:\n      a += 1\n    else:\n      open -= 1\nprint(a * \"(\" + S + \")\" * open)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "10794": {"id": 10794, "code": "s = ['l', 'e', 'v', 'e', 'l']\nn = len(s)\nm = n//2\ns_f = []\ns_l = []\nfor i in range(m):\n    s_f.append(s[i])\nfor i in range(1,m + 1):\n    s_l.append(s[-i])\ns_r = list(reversed(s))\ns_f_r = list(reversed(s_f))\ns_l_r = list(reversed(s_l))\nif s_r == s:\n    if s_f_r == s_f and s_l_r == s_l:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "4329": {"id": 4329, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nx = 60*a + b\ny = 60*c + d\nprint(y-x-k);", "coverage": [">", ">", ">", ">"]}, "14143": {"id": 14143, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstate = -1\nres = 1\nfor i in range(1, n):\n    if state == -1:\n        if a[i] < a[i-1]:\n            state = 0\n        elif a[i] > a[i-1]:\n            state = 1\n    elif (state == 0 and a[i] > a[i-1]) or (state == 1 and a[i] < a[i-1]):\n        res += 1\n        state = -1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "3147": {"id": 3147, "code": "S = \"1234567876\";m = 10000\nfor i in range(len(S)-2):m=min(m,abs(753-int(S[i:i+3])))\nprint(m)", "coverage": [">", ">", ">"]}, "4363": {"id": 4363, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nawake = 60*h2+m2 - (60*h1+m1) - k\nprint(awake)", "coverage": [">", ">", ">"]}, "5252": {"id": 5252, "code": "s = \"smiles\"\nprint(f\"{s[0]}{len(s)-2}{s[-1]}\")", "coverage": [">", ">"]}, "6326": {"id": 6326, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nb = []\nfor i in range(N):\n    b.append(N - bisect.bisect_left(C,B[i]+1))\nb.append(0)\nfor i in range(N-1,-1,-1):\n    b[i] += b[i+1]\nans = 0\nfor i in range(N):\n    ans += b[bisect.bisect_left(B, A[i]+1)]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9993": {"id": 9993, "code": "N = \"8\"\nS = \"))))((((\"\ns = S\nfor i in range(50):\n  S = S.replace('()','')\nl = S.count(')')\nr = S.count('(')\nprint('('*l+s+')'*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4499": {"id": 4499, "code": "s = \"smiles\"\nprint(s[0], len(s) - 2, s[-1], sep=\"\")", "coverage": [">", ">"]}, "15870": {"id": 15870, "code": "x = 12;y = 3;z = 1\ntmp=x//(y+z)\nif tmp*(y+z)+z>x:\n    tmp-=1\nprint(tmp)", "coverage": [">", ">", ">", ">", ">"]}, "15963": {"id": 15963, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 15\nprint(A - B * 2) if A > B * 2 else print(0)", "coverage": [">", ">", ">", ">"]}, "5528": {"id": 5528, "code": "x = 2\nprint(int(x/2)+ 1 if x % 2 != 0 else int(x/2))", "coverage": [">", ">"]}, "17952": {"id": 17952, "code": "S = \"1905\"\npre = int(S[:2])\nsur = int(S[2:])\nif pre <= 12 and pre > 0 and sur <= 12 and sur > 0:\n    print('AMBIGUOUS')\nelif pre <= 12 and pre > 0:\n    print('MMYY')\nelif sur <= 12 and sur > 0:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9151": {"id": 9151, "code": "S = \"2017/01/31\"\nS = '2018/01/'+ S[8:10]\nprint(S)", "coverage": [">", ">", ">"]}, "5376": {"id": 5376, "code": "from math import ceil\nprint(ceil(int(\"100\") / 2))", "coverage": [">", ">"]}, "4763": {"id": 4763, "code": "s = \"smiles\"\nl = len(s) - 2\nprint(s[0], l, s[l + 1], sep = \"\")", "coverage": [">", ">", ">"]}, "2514": {"id": 2514, "code": "n = \"1 7 9 4\"\nif '1' in n and '9' in n and '7' in n and '4' in n:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "3070": {"id": 3070, "code": "s = \"1234567876\"\nans = 642\nfor i in range(len(s)-2):\n  if ans > abs(int(s[i:i+3])-753):\n    ans = abs(int(s[i:i+3])-753)\n  else:\n    ans = ans\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "3600": {"id": 3600, "code": "A = 20;B = 15\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "891": {"id": 891, "code": "K = 101\nif K % 2 == 0:\n    print(-1)\nelse:\n    seen = set()\n    ans = 1\n    num = 7\n    while ans <= K:\n        mod = num % K\n        if mod in seen:\n            ans = -1\n            break\n        else:\n            seen.add(mod)\n        if mod == 0:\n            break\n        else:\n            num = mod * 10 + 7\n            ans += 1\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "10335": {"id": 10335, "code": "from math import gcd\na = 8;b = 12;k = 2\ng = gcd(a, b)\nfor i in range(g, 0, -1):\n    if g % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11229": {"id": 11229, "code": "sl = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = \"SUN\"\nr = 7 - sl.index(s)\nprint(r)", "coverage": [">", ">", ">", ">"]}, "13986": {"id": 13986, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nprev = A[0]\nup = False\ndown = False\nfor a in A[1:]:\n    if prev < a:\n        if up:\n            count += 1\n            up = False\n        elif down:\n            pass\n        else: \n            down = True\n    elif prev > a:\n        if up:\n           pass\n        elif down:\n            count += 1\n            down = False\n        else: \n            up = True\n    else:\n        pass\n    prev = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "1998": {"id": 1998, "code": "i = [10, 7, 5]\nprint(min(i[1], i[2]), max(i[1] + i[2] - i[0], 0))", "coverage": [">", ">"]}, "5357": {"id": 5357, "code": "N = 2\nprint(N//2+(N%2!=0))", "coverage": [">", ">"]}, "712": {"id": 712, "code": "Kin = 2\ni = 0\nnow = 0\nif (0 == (Kin % 2)) or (0 == (Kin % 5)):\n    print(-1)\nelse:\n    while 1:\n        now = (now * 10 + 7) % Kin\n        i+=1\n        if now == 0:\n            break\n    print(i)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "3813": {"id": 3813, "code": "x = 12;y = 3;z = 1\nl = y + 2*z\nans = 0\nwhile l <= x:\n    l += y + z\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7897": {"id": 7897, "code": "n = 3;k = 3\na = [1, 2, 3]\nif (n==k):\n    print(1)\nelse:\n    print(1+(n-k-1)//(k-1)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "8243": {"id": 8243, "code": "n = 3;k = 3\na = [1, 2, 3]\nimport math\nprint( math.ceil( (n-1)/(k-1) ) )", "coverage": [">", ">", ">", ">"]}, "2063": {"id": 2063, "code": "a = 10;b = 3;c = 5\nt = min(b, c)\nif b+c < a:\n    s = 0\nelse:\n    s = b + c - a\nprint(t, s)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16705": {"id": 16705, "code": "a = \"D\";b = \"H\"\nd={'H':0, 'D':1}\nprint(['H','D'][d[a]^d[b]])", "coverage": [">", ">", ">"]}, "2050": {"id": 2050, "code": "n = 100;a = 100;b = 100\nans_max = min(a, b)\nans_min = max(0, a + b - n)\nprint(\"{} {}\".format(ans_max, ans_min))", "coverage": [">", ">", ">", ">"]}, "9100": {"id": 9100, "code": "s = ['2017', '01', '07']\ns[0] = '2018'\nprint(s[0]+'/'+s[1]+'/'+s[2])", "coverage": [">", ">", ">"]}, "9265": {"id": 9265, "code": "s = \"2017/01/31\"\nprint(s.replace('2017', '2018'))", "coverage": [">", ">"]}, "18503": {"id": 18503, "code": "h = 3\nw = 7\nn = 10\nif h>w:\n    print(-(n//-h))\nelse:\n    print(-(n//-w))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11214": {"id": 11214, "code": "S = \"SAT\"\nif S == 'SUN':\n    a = 0\nelif S == 'MON':\n    a = 1\nelif S == 'TUE':\n    a = 2\nelif S == 'WED':\n    a = 3\nelif S == 'THU':\n    a = 4\nelif S == 'FRI':\n    a = 5\nelif S == 'SAT':\n    a = 6\nanswer = 7 - a\nprint(answer)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">", ">"]}, "15899": {"id": 15899, "code": "A = 12;B = 4\nprint(0 if A-(B*2)<1 else A-(B*2))", "coverage": [">", ">"]}, "4685": {"id": 4685, "code": "s = \"smiles\"\nprint(f'{s[0]}{len(s) - 2}{s[-1]}')", "coverage": [">", ">"]}, "16843": {"id": 16843, "code": "a = ['D', 'H']\nif a[0]==a[1]:\n    print(\"H\")\nelse :\n    print(\"D\")", "coverage": [">", ">", "!", "!", ">"]}, "12500": {"id": 12500, "code": "A = 1;B = 1;K = 1\nprint([i for i in range(1, 101) if A % i + B % i < 1][-K])", "coverage": [">", ">"]}, "10264": {"id": 10264, "code": "N = 8\nS = \"))))((((\"\nleft = 0\nfor i in range(N - 1, -1, -1):\n    if S[i] == \")\":\n        left += 1\n    else:\n        left = max(0, left - 1)\nright = 0\nfor i in range(N):\n    if S[i] == \"(\":\n        right += 1\n    else:\n        right = max(0, right - 1)\nprint(\"(\" * left + S + \")\" * right)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "9984": {"id": 9984, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nd = [0]\nx = 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        x += 1\n    else:\n        x -= 1\n    d.append(x)\nans = []\nx = min(d)\nfor i in range(max(0,(-1*x))):\n    ans.append('(')\nfor i in s:\n    ans.append(i)\nfor i in range(max(d[len(d)-1]-x,0)):\n    ans.append(')')\na = ''.join(ans)\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "15064": {"id": 15064, "code": "import itertools\nn = 3;p = 0\na = [1, 1, 1]\ncnt0 = a.count(0)\ncnt1 = n - cnt0\nif p==0 and cnt0==n:\n    print(2**n)\nelif p==1 and cnt0==n:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "19367": {"id": 19367, "code": "import math\nN = 3\nif N%2 != 0 :\n  N *= 2\nprint (N)", "coverage": [">", ">", ">", ">", ">"]}, "5659": {"id": 5659, "code": "N = 5\nif N%2 == 0:\n    print(N//2)\nelif N%2 != 0:\n    print(N//2+1)", "coverage": [">", ">", "!", ">", ">"]}, "1480": {"id": 1480, "code": "n = 111\nwhile True:\n    n_s = str(n)\n    if n_s[0] == n_s[1] == n_s[2]:\n        break\n    n += 1\nprint(n)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "14218": {"id": 14218, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nzougen = 2\nans = 0\nfor i in range(1,n):\n    if i == n-1:\n        if zougen == 2:\n            ans += 1\n        elif zougen == 0:\n            if a[i]-a[i-1]<0:\n                ans += 2\n            else:\n                ans += 1\n        else:\n            if a[i]-a[i-1] > 0:\n                ans += 2\n            else:\n                ans += 1\n    elif zougen == 2:\n        if a[i]-a[i-1]>0:\n            zougen = 0\n        elif a[i]-a[i-1]<0:\n            zougen = 1\n        else:\n            zougen = 2\n    elif zougen == 0:\n        if a[i]-a[i-1]<0:\n            zougen = 2\n            ans += 1\n    elif zougen == 1:\n        if a[i]-a[i-1]>0:\n            zougen = 2\n            ans += 1\nif n == 1:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">"]}, "10374": {"id": 10374, "code": "a = 8;b = 12;k = 2\ni = 1\nl = []\nwhile i <= min(a,b):\n  if a%i == 0 and b%i == 0:\n    l.append(i)\n  i += 1\nprint(l[len(l)-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14144": {"id": 14144, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstate = -1\nres = 1\nfor i in range(1, n):\n    if state == -1:\n        if a[i] < a[i-1]:\n            state = 0\n        elif a[i] > a[i-1]:\n            state = 1\n    elif (state == 0 and a[i] > a[i-1]) or (state == 1 and a[i] < a[i-1]):\n        res += 1\n        state = -1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1724": {"id": 1724, "code": "n = 10;a = 3;b = 5\nprint(*[min(a,b), max((a+b)-n, 0)])", "coverage": [">", ">"]}, "11547": {"id": 11547, "code": "y = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SAT\"\nfor i, j in enumerate(y):\n    if s == j:\n        print(7-i)", "coverage": [">", ">", ">", ">", ">"]}, "12098": {"id": 12098, "code": "a = [11, 30]\nb = [12, 1]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "14415": {"id": 14415, "code": "N = 6\nAs = [1, 2, 3, 2, 2, 1]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before < As[i]:\n        if zoka == 0 or zoka == 1:\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\n    elif before > As[i]:\n        if zoka == 0 or zoka == 2:\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4171": {"id": 4171, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nprint(c * 60 + d - a * 60 - b - e)", "coverage": [">", ">"]}, "1536": {"id": 1536, "code": "n = \"112\"\nif n.count(n[0]) == 3:\n    print(n)\nelse:\n    num = int(str(n[0])+str(n[0])+str(n[0]))\n    if int(n) > num:\n        a = min(int(n[0])+1, 9)\n        print(\"%d%d%d\" % (a, a, a))\n    else:\n        print(num)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "3195": {"id": 3195, "code": "S = \"1234567876\"\nMIN = 1000\nfor T in range(0,len(S)-2):\n    X = int(S[T:T+3])\n    Num = abs(X-753)\n    if Num<MIN:\n        MIN = Num\nprint(MIN)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17519": {"id": 17519, "code": "s = 1700\nf = s/100\nl = s%100\nif 1 <= f and f <= 12:\n    if 1 <= l and l <= 12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 1 <= l and l <= 12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "16102": {"id": 16102, "code": "n = ['20', '15']\na=int(n[0])\nb=int(n[1])\nif a>=2*b:\n     print(a-2*b)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "19331": {"id": 19331, "code": "n = 3\nif n % 2 == 0:\n  print(n)\nelse:\n  print(n + n)", "coverage": [">", ">", "!", "!", ">"]}, "127": {"id": 127, "code": "s = [97]\nK = 25\nret = []\nfor c in s[:-1] :\n    if c == 97 :\n        ret.append('a')\n        continue\n    if c + K > 122 :\n        ret.append('a')\n        K -= 123 - c\n    else :\n        ret.append(chr(c))\nK %= 26\nret.append(chr((s[-1] + K - 97) % 26 + 97))\nprint(''.join(ret))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "2853": {"id": 2853, "code": "import sys\nS = \"1111111111\"\nt=1000\nfor x in range(len(S)-2):\n  if t>abs(753-int(S[x]+S[x+1]+S[x+2])):\n    t=abs(753-int(S[x]+S[x+1]+S[x+2]))\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6906": {"id": 6906, "code": "h = 211;n = 5\nAi = [31, 41, 59, 26, 53]\nprint('Yes' if h <= sum(Ai) else 'No')", "coverage": [">", ">", ">"]}, "6016": {"id": 6016, "code": "div = 2;rem = 1\nprint(div + bool(rem))", "coverage": [">", ">"]}, "5090": {"id": 5090, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nk=len(s)-2\nprint(s[0]+str(k)+s[-1])", "coverage": [">", ">", ">"]}, "17179": {"id": 17179, "code": "A = \"H\";B = \"H\"\nprint('H') if (A == 'D' and B == 'D') or (A == 'H' and B == 'H') else print('D')", "coverage": [">", ">"]}, "14475": {"id": 14475, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nif n == 1:\n  print (1)\n  exit()\nc = 0\nfor i in range(n-1):\n  if c == 2 and a[i+1] < a[i]:\n    cnt += 1\n    c = -1\n  elif c == 1 and a[i+1] > a[i]:\n    cnt += 1\n    c = -1\n  else:\n    if c < 1:\n      if a[i+1] > a[i]:\n        c = 2\n      elif a[i+1] == a[i]:\n        c = 0\n      else:\n        c = 1\nprint (cnt+1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14133": {"id": 14133, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N<=2:\n    print(1)\n    exit()\nnow=0\nans=1\nfor i in range(1,N):\n    if i==1:\n        if A[i]-A[i-1]==0:\n            now=0\n        else:\n            now=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if now>=1:\n            plus=True\n        elif now==0:\n            plus=-1\n        else:\n            plus=False\n    else:\n        if A[i]-A[i-1]==0:\n            nex=0\n        else:\n            nex=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if plus==-1:\n            if nex>=1:\n                plus=True\n            elif nex<0:\n                plus=False\n        elif plus:\n            if nex<0:\n                plus=-1\n                ans+=1\n        else:\n            if nex>0:\n                plus=-1\n                ans+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "7607": {"id": 7607, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nSUM = 0\nfor i in range(len(A)):\n    SUM = SUM + A[i]\nif SUM >= H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5749": {"id": 5749, "code": "d = 5\nif d % 2 == 0:\n  print(d//2)\nelse:\n  print((d//2)+1)", "coverage": [">", ">", "!", "!", ">"]}, "9948": {"id": 9948, "code": "N = 3\nS = \"())\"\nl, r = 0, 0\nfor s in S:\n    if s == \"(\":\n        l += 1\n    else:\n        r += 1\n        if l > 0:\n            l -= 1\n            r -= 1\nprint(\"(\"*r+S+\")\"*l)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15948": {"id": 15948, "code": "n = [20, 15]\nprint(max(n[0] - 2*n[1], 0))", "coverage": [">", ">"]}, "7157": {"id": 7157, "code": "h = 10;n = 3\na = [4, 5, 6]\nc = 0\nfor i in range(n):\n  c = c + a[i]\nif (c >= h):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9556": {"id": 9556, "code": "S = \"2017/01/07\"\nprint(S[:3] + '8' + S[-6:])", "coverage": [">", ">"]}, "69": {"id": 69, "code": "s = \"xyz\"\nints = [ord(i) - ord('a') for i in s]\nK = 4\nn = len(s)\ni = 0\nwhile i < n:\n    if ints[i] != 0 and 25 - ints[i] + 1 <= K:\n        K -= 25 - ints[i] + 1\n        ints[i] = 0\n    i += 1\nK %= 26\nints[-1] = (ints[-1] + K) % 26\ns_ = ''\nfor i in ints:\n    s_ += chr(i + ord('a'))\nprint(s_)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11080": {"id": 11080, "code": "S = \"akasaka\"\nans = 'Yes'\nfor i in range(len(S)//2):\n  if S[i] != S[len(S)-1-i]:\n    ans = 'No'\nfront = S[0:(len(S)-1)//2]\nfor i in range(len(front)//2):\n  if front[i] != front[len(front)-1-i]:\n    ans = 'No'\nend = S[(len(S)+1)//2:]\nfor i in range(len(end)//2):\n  if end[i] != front[len(end)-1-i]:\n    ans = 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "16076": {"id": 16076, "code": "A = 12;B = 4\nif A - 2*B > 0 :\n    print(A-2*B)\nelse :\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!"]}, "6012": {"id": 6012, "code": "import math\nimport sys\ns = 100\nprint(math.ceil(s / 2))", "coverage": [">", ">", ">", ">"]}, "14590": {"id": 14590, "code": "n = 2;p = 0\nA = [1, 3]\nif all(a % 2 == 0 for a in A):\n    if p:\n        print(0)\n    else:\n        print(pow(2, n))\nelse:\n    print(pow(2, n-1))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "19506": {"id": 19506, "code": "n = 3\nif n % 2 == 0: print(n)\nelse: print(2*n)", "coverage": [">", ">", ">"]}, "5617": {"id": 5617, "code": "N = 5\nimport math\nans = math.ceil(N / 2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11530": {"id": 11530, "code": "s = \"SUN\"\nday = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\na = day.index(s)\nans = 7 - a\nif ans == 0:\n    print(7)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "1687": {"id": 1687, "code": "N = 100;A = 100;B = 100\nmini = A + B - N\nif mini < 0:\n    mini = 0\nmaxi = min(A,B)\nprint(maxi,mini)", "coverage": [">", ">", ">", "!", ">", ">"]}, "1282": {"id": 1282, "code": "a = 111\na+=110\na//=111\na*=111\nprint(a)", "coverage": [">", ">", ">", ">", ">"]}, "251": {"id": 251, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n    if s[i] != \"a\":\n        num = 26-(ord(s[i])-ord(\"a\"))\n        if k >= num:\n            k -= num\n            s[i] = \"a\"\ns[-1] = chr(ord(\"a\")+((ord(s[i])-ord(\"a\")+k)%26))\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19118": {"id": 19118, "code": "n = 12\nans=0\nif n % 2==0:\n    for i in range(1,10000):\n        waru = 2*5**i\n        if n < waru:\n            break\n        else:\n            tmp = n//waru\n            ans += tmp\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "11003": {"id": 11003, "code": "s = \"akasaka\"\nl = len(s)\nokey = 1\nll = l//2\nfor i in range(0,l//2):\n    if s[i] != s[l-i-1]:\n        okey = 0\n        break\nif okey == 1: \n    for i in range(0,ll//2):\n        if s[i] != s[ll-i-1]:\n            okey = 0\n            break\nif okey == 1:\n    for i in range(ll+1, ll+ll//2):\n        if s[i] != s[l-i-1]:\n            okey = 0\n            break\nif okey == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">", "!", "!"]}, "7531": {"id": 7531, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nif h <= sum(a): print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", "!"]}, "7258": {"id": 7258, "code": "h = 211;n = 5\nA = [31, 41, 59, 26, 53]\nattack = sum(A)\nif h > attack:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "9187": {"id": 9187, "code": "S = \"2017/01/31\"\nanswer = S.replace(\"2017\", \"2018\")\nprint(answer)", "coverage": [">", ">", ">"]}, "3746": {"id": 3746, "code": "x = 12;y = 3;z = 1\nfor i in range(100000):\n    if (i+1)*z + i*y > x:\n        print(i-1)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "7419": {"id": 7419, "code": "h = 10;n = 3\na = [4, 5, 6]\natack = sum(a)\ncan = h <= atack\nprint(\"Yes\" if can else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "10846": {"id": 10846, "code": "S = \"level\"\nN = len(S)\nflag = 0\nif S==S[::-1]:\n    x = S[:N//2]\n    if x==x[::-1]:\n        flag = 1\nif flag==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "8745": {"id": 8745, "code": "n = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nsum_a = 0\nfor i in range(n):\n    sum_a += A[i]\n    temp = sum_a\n    for j in range(i,n):\n        temp += B[j]\n    ans = max(ans,temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14168": {"id": 14168, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=0\nanswer=1\nif N==1:\n    print(1)\nelse:\n    if A[0] < A[1]:\n        flag = 1\n    elif A[0]>A[1]:\n        flag = -1\n    for n in range(N - 1):\n        if flag == 1:\n            if A[n] <= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        elif flag == -1:\n            if A[n] >= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        else:\n            if A[n] == A[n + 1]:\n                pass\n            elif A[n] < A[n + 1]:\n                flag = 1\n            else:\n                flag = -1\n    print(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", ">"]}, "4719": {"id": 4719, "code": "txt = \"xyz\"\nn=len(txt)-2\nprint(txt[0]+str(n)+txt[-1])", "coverage": [">", ">", ">"]}, "11941": {"id": 11941, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint('1' if m1 != m2 else '0')", "coverage": [">", ">", ">"]}, "12803": {"id": 12803, "code": "N = 6\nprint(\"YES\" if N==3 or N==5 or N==7 else \"NO\")", "coverage": [">", ">"]}, "6120": {"id": 6120, "code": "N = 2\nL = []\nL.extend(((int(x), 3)  for x in \"1 5\".split()))\nL.extend(((int(x), 2)  for x in \"2 4\".split()))\nL.extend(((int(x), 1)  for x in \"3 6\".split()))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12119": {"id": 12119, "code": "in1 = ['11', '16']\nin2 = ['11', '17']\nif int(in1[0])==int(in2[0]):\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6187": {"id": 6187, "code": "from bisect import bisect_right as br\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nBc=[]\nfor i in range(N):\n    Bc.append(N-br(C,B[i]))\nS=[sum(Bc)]\nfor j in range(N):\n    S.append(S[j]-Bc[j])\nfor a in A:\n    b=br(B,a)\n    ans+=S[b]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17639": {"id": 17639, "code": "s = \"1700\"\na = (1 <= int(s[:2]) <= 12)\nb = (1 <= int(s[2:]) <= 12)\nif a and b:\n    print(\"AMBIGUOUS\")\nelif a:\n    print(\"MMYY\")\nelif b:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "7036": {"id": 7036, "code": "H = 20;N = 3\nA = 15\nif H<=A:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "11814": {"id": 11814, "code": "md1 = [11, 16]\nmd2 = [11, 17]\nif md1[0]==md2[0]:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "9074": {"id": 9074, "code": "import sys\na = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif e - a > k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17628": {"id": 17628, "code": "s = ['1', '9', '0', '5']\na = int(\"\".join(s[:2]))\nb = int(\"\".join(s[2:]))\nc = 0\nd = 0\nif a and a <= 12:\n    c = 1\nif b and b <= 12:\n    d = 1\nif c and d:\n    print(\"AMBIGUOUS\")\nelif c:\n    print(\"MMYY\")\nelif d:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9836": {"id": 9836, "code": "_ = \"8\"\nS = \"))))((((\"\nneeds_right = 0\nneeds_left = 0\nfor c in S:\n    if c == '(':\n        needs_right += 1\n    else:\n        if needs_right == 0:\n            needs_left += 1\n        else:\n            needs_right -= 1\nprint('(' * needs_left + S + ')' * needs_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "1463": {"id": 1463, "code": "N = 112\nif N%111==0:\n    print(N)\nelse:   \n    A=(N//111+1)*111\n    print(A)", "coverage": [">", ">", "!", "!", ">", ">"]}, "7471": {"id": 7471, "code": "H = 10;N = 3\nlist = [4, 5, 6]\nfor i in list:\n    H=H-i\nif H<=0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "11611": {"id": 11611, "code": "S = \"SUN\"\ndays = {'SUN': 0, 'MON': 1, 'TUE': 2, 'WED': 3, 'THU': 4, 'FRI': 5, 'SAT': 6}\nif S == 'SUN':\n    print(7)\nelse:\n    print((7 - days[S]) % 7)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3414": {"id": 3414, "code": "A = 20;B = 30\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", ">", "!", ">"]}, "9443": {"id": 9443, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3] = \"8\"\nprint(\"\".join(s))", "coverage": [">", ">", ">"]}, "2861": {"id": 2861, "code": "s = \"35753\"\nans = 999\nfor i,j,k in zip(s, s[1:], s[2:]):\n    diff = abs(753 - int(i+j+k))\n    ans = min(ans, diff)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4201": {"id": 4201, "code": "a = [10, 0, 12, 0, 120]\nprint((a[2]*60+a[3])-(a[0]*60+a[1])-a[4])", "coverage": [">", ">"]}, "10918": {"id": 10918, "code": "S = \"level\"\ns = list(S)\nf = s[:int((len(s)-1)/2)]\nl = s[int((len(s)+3)/2-1):]\nif f == l:\n    while len(f) > 1:\n        if f[0] == f[-1]:\n            f.pop(0)\n            f.pop()\n    if len(f) <= 1:\n        while len(l) > 1:\n            if l[0] == l[-1]:\n                l.pop(0)\n                l.pop()\n        if len(l) <= 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "7946": {"id": 7946, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nif n == k:\n    cnt = 1\nelse:\n    cnt = (n - 2) // (k-1) + 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5652": {"id": 5652, "code": "N = 100\nif N%2==1:\n  print(int((N-1)/2+1))\nelse:\n  print(int(N/2))", "coverage": [">", ">", "!", "!", ">"]}, "4590": {"id": 4590, "code": "s = \"xyz\"\nprint(s[0], str(len(s) - 2), s[-1], sep='')", "coverage": [">", ">"]}, "7324": {"id": 7324, "code": "H = 211;N = 5\na_nums = [31, 41, 59, 26, 53]\na_sum = sum(a_nums)\nif a_sum>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "10245": {"id": 10245, "code": "n = 6\ns = \")))())\"\nnow =0\nright = 0\nfor i in range(n):\n    if(s[n-1-i]=='('):\n        now+=1\n    else:\n        now-=1\n    if(right<now):\n        right=now\nleft=0\nnow=0\nfor i in range(n):\n    if(s[i]=='('):\n        now-=1\n    else:\n        now+=1\n    if(left<now):\n        left=now\nprint('('*left +s+ ')'*right)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "6210": {"id": 6210, "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nba=0\nbc=N\nans=0\nfor i in range(N):\n    b=B[i]\n    if ba!=N:\n        while A[ba]<b:\n            ba+=1\n            if ba==N:\n                break\n    if bc!=0:\n        while C[N-bc]<=b:\n            bc-=1\n            if bc==0:\n                break\n    ans+=ba*(bc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "1627": {"id": 1627, "code": "n = 100;a = 100;b = 100\nboth = min(a,b)\nany = max(0, (a+b) - n)\nprint(both, any)", "coverage": [">", ">", ">", ">"]}, "8220": {"id": 8220, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(((N-1)+(K-2))//(K-1))", "coverage": [">", ">", ">"]}, "14419": {"id": 14419, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = False\ndown = False\nans = 1\nfor i in range(1, n):\n    if up:\n        if a[i] < a[i-1]:\n            ans += 1\n            up = False\n    elif down:\n        if a[i] > a[i-1]:\n            ans += 1\n            down = False\n    else:\n        if a[i] > a[i-1]:\n            up = True\n        elif a[i] < a[i-1]:\n            down = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "17340": {"id": 17340, "code": "a = \"H\";b = \"H\"\nif a==b:\n  print('H')\nelse:\n  print('D')", "coverage": [">", ">", ">", "!", "!"]}, "11951": {"id": 11951, "code": "l1 = [11, 30]\nl2 = [12, 1]\nif l2[1] == 1:\n  print('1')\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "2472": {"id": 2472, "code": "n1 = 1;n2 = 2;n3 = 9;n4 = 1\ns=set()\ns.add(n1)\ns.add(n2)\ns.add(n3)\ns.add(n4)\nif s=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7250": {"id": 7250, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nattack = sum(A)\nif attack >= H:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "1023": {"id": 1023, "code": "n = 112\nfor i in range(1, 10):\n    l = [i, i, i]\n    num = int(''.join(map(str, l)))\n    if n <= num:\n        print(num)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19312": {"id": 19312, "code": "N = 3\nprint(N * 2 if N % 2 == 1 else N)", "coverage": [">", ">"]}, "2652": {"id": 2652, "code": "a = {1, 4, 9, 7}\nif a=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "15240": {"id": 15240, "code": "X = 64146;Y = 123;Z = 456\nX = X-Z\nA = (X/(Y+Z))//1\nprint (round (A))", "coverage": [">", ">", ">", ">"]}, "18838": {"id": 18838, "code": "H = 3\nW = 7\nN = 10\np = -1\nif H > W:\n    p = H\nelse:\n    p = W\ncount = 1\nresult = 1\nwhile True:\n    result = count * p\n    if result >= N:\n        print(count)\n        break\n    else:\n        count += 1", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12413": {"id": 12413, "code": "S = \"level\"\nT=S[:(len(S)-1)//2]\nU=S[(len(S)+3)//2-1:]\nif S==S[::-1]:\n    if T==T[::-1]:\n        if U==U[::-1]:\n            print('Yes')\n        else:print('No')\n    else:print('No')\nelse:print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", ">", "!"]}, "956": {"id": 956, "code": "n = 112\na = n//100\nb = 100*a+10*a+a\nif b >= n:\n    print(b)\nelse:\n    print(b+111)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "7506": {"id": 7506, "code": "H = 20;N = 3\nA = [4, 5, 6]\nif H - sum(A) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "8551": {"id": 8551, "code": "n = 1\na = [2]\nb = [3]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13130": {"id": 13130, "code": "x = \"5\"\nli=['3', '5', '7']\nprint('YES' if x in li else 'NO')", "coverage": [">", ">", ">"]}, "18029": {"id": 18029, "code": "s = \"1700\"\nfor c in s:\n    if not '0'<=c<='9':\n        print('NA')\n        exit(0)\na = int(s[:2])\nb = int(s[2:])\nif 1<=a<=12 and 1<=b<=12:\n    print('AMBIGUOUS')\nelif 1<=a<=12:\n    print('MMYY')\nelif 1<=b<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14223": {"id": 14223, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = None\nup = False\ndown = False\nans = 1\nbase = A[0]\nfor i in range(1, n):\n    if base < A[i]:\n        up = True\n        base = A[i]\n    elif base > A[i]:\n        down = True\n    if (up == True) and (down == True):\n        up = False\n        down = False\n        ans += 1\n    base = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14410": {"id": 14410, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n<=2:\n    print(1)\nelse:\n    status=\"U\"\n    for i in range(n):\n        if a[i+1]-a[i]<0:\n            status=\"D\"\n            break\n        elif a[i+1]-a[i]>0:\n            status=\"U\"\n            break\n    cnt=1\n    reset_flag=False\n    for i in range(n-1):\n        if reset_flag:\n            if a[i+1]-a[i]>0:\n                status=\"U\"\n                reset_flag=False\n            elif a[i+1]-a[i]<0:\n                status=\"D\"\n                reset_flag=False\n            else:\n                continue\n        elif status==\"D\" and a[i+1]-a[i]>0:\n            cnt+=1\n            reset_flag=True\n        elif status==\"U\" and a[i+1]-a[i]<0:\n            cnt+=1\n            reset_flag=True\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "3425": {"id": 3425, "code": "a = 20;b = 15\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "1731": {"id": 1731, "code": "n = 10;a = 7;b = 5\nprint('{0} {1}'.format(min(a,b), 0 if a+b<=n else a+b-n))", "coverage": [">", ">"]}, "13637": {"id": 13637, "code": "s = \"happy\";t = \"newyear\";u = \"enjoy\"\nprint(\"{} {} {}\".format(s,t,u))", "coverage": [">", ">"]}, "5346": {"id": 5346, "code": "n = 100\nprint((n//2)+(n%2))", "coverage": [">", ">"]}, "18311": {"id": 18311, "code": "h = 3\nw = 7\nn = 10\nif h>w:\n  if n%h==0:\n    ct=n//h\n  else:\n    ct=n//h+1\nelse:\n  if n%w==0:\n    ct=n//w\n  else:\n    ct=n//w+1\nprint(ct)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "755": {"id": 755, "code": "mod = 101\na = {}\nb = int(0)\nflag = int(0)\nans = int(0)\nfor i in range(mod):\n  b = b * 10 + 7\n  b = b % mod\n  if b == 0:\n    flag = 1\n    ans = int(i) + 1\n    break\n  else:\n    pass\nif flag == 1:\n  print(ans)\nelse:\n  print(\"-1\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "18296": {"id": 18296, "code": "h = 3\nw = 7\nn = 10\nall_cell = 0\ncount = 0\nwhile all_cell < n:\n    if h > w:\n        all_cell += h\n        w -= 1\n    else:\n        all_cell += w\n        h -= 1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "19192": {"id": 19192, "code": "N = 12\nif N%2 == 1:\n    print(0)\nelse:\n    ans = 0\n    sum = 0\n    for i in range(26,0,-1):\n        num = N//((5**i)*2)\n        ans += i*(num-sum)\n        sum = num\n    print(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "6438": {"id": 6438, "code": "from bisect import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nbb = [n-bisect(c, b[i])  for i in range(n)]\nbbb = []\ntmp = 0\nfor i in range(n)[::-1]:\n    tmp += bb[i]\n    bbb.append(tmp)\nbbb = bbb[::-1]\nj = 0\nwhile i < n:\n    j = bisect(b, a[i], j,n-1)\n    if b[j] <= a[i]:\n        break\n    ans += bbb[j]\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8800": {"id": 8800, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13187": {"id": 13187, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a + \" \" + b + \" \" + c)", "coverage": [">", ">"]}, "13384": {"id": 13384, "code": "s = \"abcde,fghihgf,edcba\"\nresult=''\nfor i in s:\n    if i==',':\n        result+=' '\n    else:\n        result+=i\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "17749": {"id": 17749, "code": "S = \"0112\"\na,b=int(S[:2]),int(S[2:])\nif 0<a<13 and 0<b<13:\n    print('AMBIGUOUS')\nelif 0<a<13:\n    print('MMYY')\nelif 0<b<13:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "9962": {"id": 9962, "code": "n = 3\ns = \"())\"\nnow=0\nsen=0\nfor i in range(n):\n    if s[i]==\"(\":\n        now+=1\n    else:\n        now-=1\n    if now==-1:\n        sen+=1\n        now=0\nprint(\"(\"*sen + s + \")\"*now)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13296": {"id": 13296, "code": "string = \"haiku,atcoder,tasks\"\nans = string.replace(',', ' ')\nprint(ans)", "coverage": [">", ">", ">"]}, "13179": {"id": 13179, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a, b, c)", "coverage": [">", ">"]}, "11478": {"id": 11478, "code": "S = \"SAT\"\ndays = 'SUN,MON,TUE,WED,THU,FRI,SAT'.split(',')\nindex = days.index(S)\nprint(7-index)", "coverage": [">", ">", ">", ">"]}, "5718": {"id": 5718, "code": "n = 100\na = n / 2\nif n % 2 == 0:\n    print(int(a))\nelse:\n    print(int(a)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "16542": {"id": 16542, "code": "v = ['H', 'H']\nif v[0]==v[1]:\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", "!", "!"]}, "3745": {"id": 3745, "code": "x = 13;y = 3;z = 1\nfor i in range(100000):\n    if (i+1)*z + i*y > x:\n        print(i-1)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "3059": {"id": 3059, "code": "S = \"35753\"\nN = len(S)\nans = 1000\nfor i in range(N - 2):\n    s = int(S[i:i + 3])\n    ans = min(ans, abs(753 - s))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13981": {"id": 13981, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nA = A\nf = 0\nans = 1\nfor k in range(N-1):\n    if f == 0:\n        if A[k] > A[k+1]:\n            f = -1\n        elif A[k] < A[k+1]:\n            f = 1\n    elif f == 1:\n        if A[k] > A[k+1]:\n            ans += 1\n            f = 0\n    else:\n        if A[k] < A[k+1]:\n            ans += 1\n            f = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13127": {"id": 13127, "code": "check = [7,5,3]\nx = 6\nprint(\"YES\" if x in check else \"NO\")", "coverage": [">", ">", ">"]}, "115": {"id": 115, "code": "import sys\nreadline = sys.stdin.readline\nS = ['x', 'y', 'z']\nK = 4\nz = ord(\"z\")\nfor i in range(len(S) - 1):\n  if S[i] == \"a\":\n    continue\n  cost = z + 1 - ord(S[i])\n  if cost <= K:\n    S[i] = \"a\"\n    K -= cost\nK %= 26\nnex = ord(S[-1]) + K\nif nex > ord(\"z\"):\n  nex -= 26\nS[-1] = chr(nex)\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10259": {"id": 10259, "code": "n = 3\ns = ['(', ')', ')']\nc0 = 0\nc1 = 0\nz0 = 0\nz1 = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nz0 = c1\ns = s[::-1]\nc0 = 0\nc1 = 0\nfor i in range(n):\n    if s[i] == \")\":\n        c0 += 1\n    else:\n        if c0 > 0:\n            c0 -= 1\n        else:\n            c1 += 1\nz1 = c1\ns = s[::-1]\nans = [\"(\"]*z0 + s + [\")\"]*z1\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8617": {"id": 8617, "code": "N = 1\nA = [2]\nB = [3]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3247": {"id": 3247, "code": "a = 20;b = 15\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "18986": {"id": 18986, "code": "N = 12\nif N%2 == 1:\n    Answer = 0\nelse:\n    Answer = 0\n    for i in range(1,100):\n        Answer += N//(2*5**i)\nprint(Answer)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "2470": {"id": 2470, "code": "n1 = 1;n2 = 7;n3 = 9;n4 = 4\ns=set()\ns.add(n1)\ns.add(n2)\ns.add(n3)\ns.add(n4)\nif s=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "14881": {"id": 14881, "code": "n = 3;p = 0\nnum = [1, 1, 1]\nsemua_angka_genap = True\nada_angka_ganjil = False\nfor i in num:\n  if i % 2 == 1:\n    semua_angka_genap = False\n    ada_angka_ganjil = True\nif semua_angka_genap:\n  if p == 0:\n    print(2**n)\n  else:\n    print(0)\nif ada_angka_ganjil:\n  print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "15473": {"id": 15473, "code": "x = 13;y = 3;z = 1\ntmp = (x-z)//(y+z)\namari = (x-z)%(y+z)\nprint(tmp)", "coverage": [">", ">", ">", ">"]}, "12452": {"id": 12452, "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn = len(s)\nl = s[: (n - 1) // 2]\nr = s[(n + 1) // 2 :]\nif l == l[::-1] and r == r[::-1] and s == s[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "5700": {"id": 5700, "code": "import math\nx = 100\nprint(math.ceil(x/2))", "coverage": [">", ">", ">"]}, "4813": {"id": 4813, "code": "n = \"internationalization\"\nprint(n[0] + str((len(n)- 2)) + n[-1])", "coverage": [">", ">"]}, "14282": {"id": 14282, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\np = 0\nm = 0\npre = A[0]\nfor a in A[1:]:\n    if a > pre:\n        p = 1\n    elif a < pre:\n        m = 1\n    if p == 1 and m == 1:\n        ans += 1\n        p = 0\n        m = 0\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6067": {"id": 6067, "code": "n = 5\nans = -(-n//2)\nprint(ans)", "coverage": [">", ">", ">"]}, "1173": {"id": 1173, "code": "a = 111\nwhile len(set(str(a)))!=1:\n  a+=1\nprint(a)", "coverage": [">", ">", "!", ">"]}, "8003": {"id": 8003, "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nm = n-k\nif m>0:\n  if m%(k-1)==0:\n    print(m//(k-1) + 1)\n  else:\n    print(m//(k-1) + 2)\nelse:\n  print(m//(k-1) + 1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "17717": {"id": 17717, "code": "n = 1700\nr = n // 100\nl = n % 100\nif r <= 12 and 1 <= r:\n  if l <= 12 and 1 <= l:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if l <= 12 and 1 <= l:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "12797": {"id": 12797, "code": "X = 6\nprint( \"YES\" if X%2 == 1 and X != 1 and X != 9 else \"NO\")", "coverage": [">", ">"]}, "11108": {"id": 11108, "code": "S = \"akasaka\"\nL = len(S)\nfor i in range((L-1)//2):\n    if S[i] != S[L-1-i]:\n        print(\"No\")\n        exit()\nfor i in range((L-1)//4):\n    if S[i] != S[(L-1)//2-1-i]:\n        print(\"No\")\n        exit()\nfor i in range(L-1, L - (L-1)//4, -1):\n    if S[i] != S[i - (L-1)//2-1]:\n        print(\"No\")\n        exit()\nprint(\"Yes\")", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!", "!", ">"]}, "9795": {"id": 9795, "code": "n = 8\ns = \"))))((((\"\nl_cnt = 0\nr_cnt = 0\nl_ans = 0\nfor i in s:\n    if i == ')':\n        if l_cnt:\n            l_cnt -= 1\n        else:\n            l_ans += 1\n    else:\n        l_cnt += 1\nprint(l_ans*'(' + s + l_cnt*')')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">"]}, "1503": {"id": 1503, "code": "N = 111\nL = [111*i for i in range(1,10)]\nans = 0\nfor l in L:\n    if N <= l:\n        ans = l\n        break\nprint(l)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16732": {"id": 16732, "code": "a = \"D\";b = \"H\"\nif a == \"H\":print(b)\nelif b == \"H\":print(\"D\")\nelse : print(\"H\")", "coverage": [">", ">", ">", "!"]}, "17646": {"id": 17646, "code": "S = ['1', '9', '0', '5']\nS1 = S[0] + S[1]\nS2 = S[2] + S[3]\nS1 = int(S1)\nS2 = int(S2)\nif 1 <= S1 <= 12 and 1 <= S2 <= 12:\n  print('AMBIGUOUS')\nelif (1 > S1 or S1 > 12) and 1 <= S2 <= 12:\n  print('YYMM')\nelif (1 > S2 or S2 > 12) and 1 <= S1 <= 12:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "12653": {"id": 12653, "code": "x = 6;y = [3, 5, 7]\nif x in y:\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", "!", "!", ">"]}, "18394": {"id": 18394, "code": "div = 0\nmod = 0\nh = 2\nw = 100\nn = 200\nif h > w:\n  div = n // h\n  mod = n % h\nelse:\n  div = n // w\n  mod = n % w\nif mod > 0:\n  print(div+1)\nelse:\n  print(div)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "14509": {"id": 14509, "code": "from math import factorial\nN = 1;P = 1\nA = [50]\nnum_k=0\nnum_g=0\nfor i in range(N):\n    if A[i]%2==0:\n        num_g+=1\n    else:\n        num_k+=1\nn=num_k//2\nans_k=0\nfor i in range(0,n*2+1,2):\n    ans_k+=factorial(num_k)/factorial(i)/factorial(num_k-i)\nans_g=2**(num_g)\nans=int(ans_k*ans_g)\nif P==0:\n    print(ans)\nelse:\n    ans=2**N-ans\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "6920": {"id": 6920, "code": "import math\nH = 20;N = 3\nprint(\"Yes\" if sum(list(map(int,\"4 5 6\".split())))>=H else \"No\")", "coverage": [">", ">", ">"]}, "7821": {"id": 7821, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\ncount = 1\nn = n-k\nwhile n > 0:\n    n -= k-1\n    count += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13412": {"id": 13412, "code": "data = \"happy,newyear,enjoy\"\nx = data.replace(\",\",\" \")\nprint(x)", "coverage": [">", ">", ">"]}, "17666": {"id": 17666, "code": "s = \"1700\"\nx = int(s[:2])\ny = int(s[2:])\nif 1 <= x <= 12 and 1 <= y <= 12:\n    a = \"AMBIGUOUS\"\nelif 1 <= x <= 12:\n    a = \"MMYY\"\nelif 1 <= y <= 12:\n    a = \"YYMM\"\nelse:\n    a = \"NA\"\nprint(a)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "14007": {"id": 14007, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\np = m = 0\nc = A[0]\nfor i in A[1:]:\n    if i > c:\n        p = 1\n    elif i < c:\n        m = 1\n    if p == 1 and m == 1:\n        p = m = 0\n        ans += 1\n    c = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1701": {"id": 1701, "code": "n = 10.0;a = 7.0;b = 5.0\nprint(int(min(a,b)), int(max(a+b-n, 0)))", "coverage": [">", ">"]}, "332": {"id": 332, "code": "s = \"xyz\"\nk = 4\na2n = lambda c: ord(c) - ord('a') + 1\nn2a = lambda c: chr(c+64).lower()\nls=list(s)\ni=0\nwhile k>0 and i<len(ls):\n  a=(1-a2n(ls[i]))%26\n  if k>=a:\n    ls[i]='a'\n    k-=a\n  i+=1\nif k>0:\n  ls[-1]=n2a(a2n(ls[-1])+k%26)\nprint(''.join(ls))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13942": {"id": 13942, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ntrend = '-'\npre = a[0]\nfor now in a:\n    if (trend=='<' and pre>now) or (trend=='>' and pre<now):\n        ans += 1\n        trend = '-'\n    else:\n        if pre<now:\n            trend = '<'\n        elif pre>now:\n            trend = '>'\n    pre = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "10791": {"id": 10791, "code": "s = \"level\"\nn = len(s)\ni = int((n-1)/2)\nt = s[:i]\nii = int((n+3)/2-1)\nu = s[ii:]\nif s == s[::-1] and t == t[::-1] and u == u[::-1]:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6585": {"id": 6585, "code": "from bisect import bisect_left, bisect_right\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor i in range(n):\n    x = b[i]\n    l = bisect_left(a, x)\n    r = bisect_right(c, x)\n    ans += l * (n - r)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5587": {"id": 5587, "code": "n = 5\np = n % 2 + n // 2\nprint(p)", "coverage": [">", ">", ">"]}, "14017": {"id": 14017, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nd = 0\nfor i in range(1,n):\n    diff = A[i] - A[i-1]\n    if not d:\n        d = diff\n    elif d*diff < 0:\n        d = 0\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11723": {"id": 11723, "code": "ans = \"SUN\"\nif ans == \"SUN\": print(7)\nif ans == \"MON\": print(6)\nif ans == \"TUE\": print(5)\nif ans == \"WED\": print(4)\nif ans == \"THU\": print(3)\nif ans == \"FRI\": print(2)\nif ans == \"SAT\": print(1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2224": {"id": 2224, "code": "N = 10;A = 3;B = 5\nmax = min([A, B])\nnum = A + B - N\nif (num <= 0):\n    minor = 0\nelse:\n    minor = num\nprint(max, minor)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15330": {"id": 15330, "code": "from sys import stdin\nimport math\nx = 13;y = 3;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "1496": {"id": 1496, "code": "N = 750\ni=0\nwhile True:\n    listN = list(str(N))\n    if listN[0]==listN[1] and listN[1]==listN[2]:\n        print(N)\n        break\n    N+=1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6877": {"id": 6877, "code": "H = 210;N = 5\nlist=[]\nfor i in map(int,\"31 41 59 26 53\".split()):\n    list.append(i)\nif H - sum(list) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "9453": {"id": 9453, "code": "s = \"2017/01/31\"\nprint(s[:3]+str(8)+s[4:])", "coverage": [">", ">"]}, "13569": {"id": 13569, "code": "S = \"haiku,atcoder,tasks\"\nS=S.replace(',',' ')\nprint(S)", "coverage": [">", ">", ">"]}, "12957": {"id": 12957, "code": "X = 6\nprint('YES' if (X in [7,5,3]) else 'NO')", "coverage": [">", ">"]}, "4592": {"id": 4592, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nfirst = s.pop(0)\nlast = s.pop(-1)\nprint(str(first)+str(len(s))+str(last))", "coverage": [">", ">", ">", ">"]}, "8226": {"id": 8226, "code": "listlen = 8;rensuu = 3\nlistnum = [7, 3, 1, 8, 4, 6, 2, 5]\ncount = 0\ncount += (listlen - 1) // (rensuu - 1)\ncount += 1 if (listlen - 1) % (rensuu - 1) > 0 else 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6030": {"id": 6030, "code": "n = 100\ndiv = -(-n // 2)\nprint(div)", "coverage": [">", ">", ">"]}, "19326": {"id": 19326, "code": "N = 3\nprint(N) if N % 2 == 0 else print(2*N)", "coverage": [">", ">"]}, "14309": {"id": 14309, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnb = 0\nda = 0\nfor i in range(len(A)-1):\n    if A[i] > A[i+1] and da > 0:\n        nb += 1\n        da = 0\n    elif A[i] < A[i+1] and da < 0:\n        nb += 1\n        da = 0\n    else:\n        if A[i+1] - A[i] != 0:\n            da = A[i+1] - A[i]\nprint(nb + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "19524": {"id": 19524, "code": "i = 999999999\nprint(i if i%2==0 else i*2)", "coverage": [">", ">"]}, "12547": {"id": 12547, "code": "a = 8;b = 12;k = 2\nl=[]\nfor i in range(1,max(a,b)+1):\n    if a%i==0 and b%i==0:\n        l.append(i)\nl.sort()\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11660": {"id": 11660, "code": "li = [\"SUN\", \"MON\", \"TUE\", 'WED', \"THU\", \"FRI\", \"SAT\"]\ns = \"SAT\"\nprint(7-li.index(s))", "coverage": [">", ">", ">"]}, "13483": {"id": 13483, "code": "t1 = \"abcde\";t2 = \"fghihgf\";t3 = \"edcba\"\nprint(t1,t2,t3)", "coverage": [">", ">"]}, "10314": {"id": 10314, "code": "a = 8;b = 12;k = 2\nii=1\nans=[]\nwhile max(a,b)>=ii:\n    if a%ii==0 and b%ii==0:\n        ans.append(ii)\n    ii+=1\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4343": {"id": 4343, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(60*H2+M2-(60*H1+M1)-K)", "coverage": [">", ">", ">", ">", ">"]}, "6744": {"id": 6744, "code": "a = 211;b = 5\nx = [31, 41, 59, 26, 53]\nprint('Yes') if a <= sum(x) else print('No')", "coverage": [">", ">", ">"]}, "9484": {"id": 9484, "code": "S = \"2017/01/07\"\nprint('2018/01/'+S[-2:])", "coverage": [">", ">"]}, "19384": {"id": 19384, "code": "N = 3\nif N == 1 or N == 2:\n    print(2)\nelse:\n    if N % 2 == 0:\n        i = N\n    else:\n        i = N*2\n    while i % N != 0:\n        i += 2\n    print(i)", "coverage": [">", ">", "!", "!", ">", "!", "!", ">", ">", "!", ">"]}, "17301": {"id": 17301, "code": "a = \"H\";b = \"H\"\nif (a == 'H' or a == 'D') and (b == 'H' or b == 'D'):\n    if a == 'H':\n        if b=='H':\n            print('H')\n        else:\n            print('D')\n    if a == 'D':\n        if b=='H':\n            print('D')\n        else:\n            print('H')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!"]}, "5579": {"id": 5579, "code": "import sys\nsys.setrecursionlimit(10**6)\nreadline = sys.stdin.readline\nn = 2\nprint(n//2+n%2)", "coverage": [">", ">", ">", ">", ">"]}, "6650": {"id": 6650, "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nimport bisect\nans=0\nfor i in range(n):\n    inda=bisect.bisect_left(a,b[i])\n    indc=bisect.bisect_right(c,b[i])\n    ans += inda*(n-indc)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5148": {"id": 5148, "code": "s = \"xyz\"\na = len(s)\nb = len(s)-2\nx = s[0] + str(b) + s[len(s)-1]\nprint(x)", "coverage": [">", ">", ">", ">", ">"]}, "12519": {"id": 12519, "code": "A = 100;B = 50;K = 4\ncount = 0\nfor i in range(1, 100):\n    if A % i == 0:\n        sho = A / i\n        if B % sho == 0:\n            count += 1\n    if count == K:\n        print(int(sho))\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9000": {"id": 9000, "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nList=[a,b,c,d,e]\nfor i in range(len(List)):\n    for j in range(i+1,len(List)):\n        if List[j]-List[i]>k:\n            print(\":(\")\n            exit()\nprint(\"Yay!\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15389": {"id": 15389, "code": "X = 64146;Y = 123;Z = 456\nX_new = X-Z\nprint(int(X_new /(Z+Y)))", "coverage": [">", ">", ">"]}, "14393": {"id": 14393, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nc = 0\nwhile i < n:\n    if i == n - 1:\n        c += 1\n        break\n    if a[i] == a[i+1]:\n        i += 1\n    elif a[i] < a[i+1]:\n        while i < n - 1 and a[i] <= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\n    elif a[i] > a[i+1]:\n        while i < n - 1 and a[i] >= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19040": {"id": 19040, "code": "N = 5\nif N%2==1:\n  print(0)\nelse:\n  ans = 0\n  judge = 10\n  while True:\n    if judge > N:\n      break\n    else:\n      ans += N//judge\n      judge *= 5\n  print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "10322": {"id": 10322, "code": "a = 8;b = 12;k = 2\nm = min(a,b)\nl = set()\nfor i in range(1,m+1):\n  if a%i == 0 and b%i == 0:\n    l.add(i)\nprint(sorted(list(l))[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5602": {"id": 5602, "code": "import math\nn = 5\nif n % 2 == 0:\n    print(int(n / 2))\nelif n % 2 == 1:\n    print(math.ceil(n / 2))", "coverage": [">", ">", ">", "!", ">", ">"]}, "13268": {"id": 13268, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13992": {"id": 13992, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nnow = a[0]\nbefore = '-'\nfor i in range(1,n):\n    if before == '-':\n        if now > a[i]:\n            before = 'D'\n        elif now< a[i]:\n            before = 'U'\n    else:\n        if before == 'U' and now > a[i]:\n            ans += 1\n            before = '-'\n        elif before == 'D' and now < a[i]:\n            ans += 1\n            before = '-'\n    now = a[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "4777": {"id": 4777, "code": "S = \"internationalization\"\nI = S[0]\nB = S[len(S)-1]\nfigure = str(len(S)-2)\nprint(I + figure + B)", "coverage": [">", ">", ">", ">", ">"]}, "5334": {"id": 5334, "code": "n = 100\nans = n // 2\nif n % 2 != 0: ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "6460": {"id": 6460, "code": "n = 3\ndat_a = [1, 1, 1]\ndat_b = [2, 2, 2]\ndat_c = [3, 3, 3]\ndat_a.sort()\ndat_b.sort()\ndat_c.sort()\nimport bisect\nres = 0\nfor i in range(n):\n    x = bisect.bisect_left(dat_a, dat_b[i])\n    y = bisect.bisect_right(dat_c, dat_b[i])\n    res += x * (n - y)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "338": {"id": 338, "code": "s = \"xyz\"\nk = 4\nn = len(s)\na = []\nfor i in range(n):\n    a.append(ord(s[i])-ord('a'))\nfor i in range(n):\n    need = (26 - a[i])%26\n    if(k>=need):\n        a[i]=0\n        k-=need\nk %= 26\nfor ii in range(n):\n    i = n-1-ii\n    rem = 25 - a[i]\n    if(rem<=k):\n        a[i]+=rem\n        k-=rem\n    else:\n        a[i]+=k\n        k=0\n        break\nans = [' ' for i in range(n)]\nfor i in range(n):        \n    ans[i] = chr(a[i]+ord('a'))\nprint(''.join(map(str,ans)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14339": {"id": 14339, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndir = 0\nold = a[0]\nans = 1\nfor i in range(1, len(a)):\n    now = a[i]\n    if dir == 0:\n        if old < now:\n            dir = 1\n        elif old > now:\n            dir = -1\n    elif dir == 1:\n        if old > now:\n            dir = 0\n            ans += 1\n    elif dir == -1:\n        if old < now:\n            dir = 0\n            ans += 1\n    old = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "17966": {"id": 17966, "code": "S = \"1700\"\nf = int(S[:2])\nl = int(S[2:])\nif f==0 or f>12:\n  if l==0 or l>12:\n    print(\"NA\")\n  else:\n    print(\"YYMM\")\nelse:\n  if l==0 or l>12:\n    print(\"MMYY\")\n  else:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "5018": {"id": 5018, "code": "import io\nimport math\nsam = \"smiles\"\nprint(sam[0]+str(len(sam)-2)+sam[-1])", "coverage": [">", ">", ">", ">"]}, "6319": {"id": 6319, "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nanswer=0\nA.sort()\nB.sort()\nC.sort()\nAcount=[]\nBcount=[]\nBsum=[]\ncount=0\nfor i in range(N):\n  while(count!=N and A[i]>=B[count]): \n    count+=1\n  Acount.append(N-count)\ncount=0\nfor i in range(N):\n  while(count!=N and B[i]>=C[count]):\n    count+=1\n  Bcount.append(N-count) \nBsum.append(Bcount[N-1])\nfor i in range(1,N):\n  Bsum.append(Bcount[N-i-1]+Bsum[i-1])\nfor i in range(N):\n  if Acount[i]==0:\n    print(answer)\n    exit()\n  answer+=Bsum[Acount[i]-1]\nprint(answer)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14195": {"id": 14195, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\n    exit()\ni = 0\nB = []\nb = [A[0]]\nzouka = 0\nf = True\nwhile i < N-1:\n    if A[i] == A[i+1]:\n        b.append(A[i])\n        i += 1\n        continue\n    if zouka == 0:\n        if A[i] < A[i+1]:\n            zouka = 1\n        else:\n            zouka = -1\n    if A[i] < A[i+1]: \n        if zouka == 1:\n            b.append(A[i+1])\n        else:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n    else: \n        if zouka == 1:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n        else:\n            b.append(A[i+1])\n    i += 1\nB.append(b)\nprint(len(B))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15504": {"id": 15504, "code": "X = 12;Y = 3;Z = 1\ncount=0\nwhile(X>=Y+2*Z):\n  count+=1\n  X-=Y+Z\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2998": {"id": 2998, "code": "s = \"35753\"\nans = 753\nfor i in range(len(s)-2):\n  x = abs(753 - int(s[i:i+3]))\n  ans = min(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12661": {"id": 12661, "code": "x = 6\nprint('YES' if x in (3,5,7) else 'NO')", "coverage": [">", ">"]}, "12697": {"id": 12697, "code": "c=[3,5,7]\nX = 6\nprint(\"YES\") if X in c else print(\"NO\")", "coverage": [">", ">", ">"]}, "7321": {"id": 7321, "code": "H = 10;N = 3\na_nums = [4, 5, 6]\na_sum = sum(a_nums)\nif a_sum>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16955": {"id": 16955, "code": "a = \"D\";b = \"D\"\ntable = [['H','D'],['D','H']]\nind = ['H','D']\nprint(table[ind.index(a)][ind.index(b)])", "coverage": [">", ">", ">", ">"]}, "17495": {"id": 17495, "code": "s = \"1700\"\nf=int(s[:2])\nb=int(s[2:])\nif 0<f<13 and 0<b<13:\n    print('AMBIGUOUS')\nelif 0<b<13:\n    print('YYMM')\nelif 0<f<13:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "198": {"id": 198, "code": "import sys\ninput = sys.stdin.readline\nS = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a']\nK = 100\na = ord(\"a\")\nN = len(S)\nfor i in range(N):\n  x = ord(S[i])\n  if K >= (a - x) % 26:\n    K -= (a - x) % 26\n    S[i] = \"a\"\nS[-1] = chr((ord(S[i]) - a + K % 26) % 26 + a)\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4289": {"id": 4289, "code": "h1 = \"10\";m1 = \"0\";h2 = \"15\";m2 = \"0\";k = \"30\"\nh1 = int(h1)\nm1 = int(m1)\nh2 = int(h2)\nm2 = int(m2)\nk = int(k)\nif h1 > h2:\n  h2 += 24\nh = h2 - h1\nhm = h * 60\nprint(hm - m1 + m2 - k)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "5226": {"id": 5226, "code": "s = ['x', 'y', 'z']\nt = len(s)-2\nu = s[0]+str(t)+s[-1]\nprint(u)", "coverage": [">", ">", ">", ">"]}, "5713": {"id": 5713, "code": "N = 5\nres = int(N / 2)\nif N % 2 != 0:\n  res += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "8103": {"id": 8103, "code": "n = 3;k = 3\na = [1, 2, 3]\naa=min(a)\nn-=k\nimport math\nq=0\nif n%(k-1)==0:\n    q+=n//(k-1)\nelse:\n    q+=n//(k-1)+1\nprint(q+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3289": {"id": 3289, "code": "a = 20;b = 15\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "10137": {"id": 10137, "code": "n = 6\ns = \")))())\"\nleft=0\nleft_cnt=0\nfor i in s:\n    if i==\"(\":\n        left+=1\n    else:\n        if left>=1:\n            left-=1\n        else:\n            left_cnt+=1\nright=0\nright_cnt=0\nfor i in s[::-1]:\n    if i==\")\":\n        right+=1\n    else:\n        if right>=1:\n            right-=1\n        else:\n            right_cnt+=1\nprint(\"(\"*left_cnt+s+\")\"*right_cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "15419": {"id": 15419, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nX = 13;Y = 3;Z = 1\nprint((X-Z) // (Y + Z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "996": {"id": 996, "code": "n = 112\nif n % 100 <= n // 100 * 11:\n  print(n // 100 * 111)\nelse:\n  print((n // 100 + 1) * 111)", "coverage": [">", ">", "!", "!", ">"]}, "16258": {"id": 16258, "code": "n = 2\na = [100, 0]\na = sorted(a)\nx = a[-1]/2\nans = 0\ndis = float(\"Inf\")\nfor i in range(n-1):\n    if dis > abs(x-a[i]):\n        ans = a[i]\n        dis = abs(x-a[i])\nprint(a[-1],ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9472": {"id": 9472, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3] = '8'\nprint(''.join(s))", "coverage": [">", ">", ">"]}, "7996": {"id": 7996, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nN=N-1\nK=K-1\nif N==K:\n    print(1)\n    exit()\nif N%K==0:\n    print(N//K)\nelse:\n    print(N//K+1)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "5658": {"id": 5658, "code": "n = 100\nans = 0\nif n%2 == 0:\n    ans = n//2\n    print(ans)\nelse:\n    ans = n//2 +1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!"]}, "18843": {"id": 18843, "code": "import math\nH = 2\nW = 100\nN = 200\nif H < W:\n    H = W\nprint(math.ceil(N/H))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2192": {"id": 2192, "code": "n = 10;a = 7;k = 5\nif a >= k:\n\tmax = k\nelse:\n\tmax = a\nmin = a + k - n\nif min < 0:\n\tmin = 0\nprint(max, min)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "1152": {"id": 1152, "code": "N = 111\nprint(111*(0--N//111))", "coverage": [">", ">"]}, "12317": {"id": 12317, "code": "S = \"akasaka\"\nN = len(S)\nS_list=[]\nfor i in S:\n    S_list.append(i)   \nrS_list = list(reversed(S_list))\nsecond_list = S_list[:(int((N-1)/2))]\nrsecond_list = list(reversed(second_list))\nthird_list = S_list[(int(((N+3)-1)/2)):N]\nrthird_list = list(reversed(third_list))\nif S_list == rS_list:\n    if second_list == rsecond_list:\n        if third_list == rthird_list:\n            print('Yes')       \n    else:\n            print('No')   \nelse:\n            print('No')    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "3754": {"id": 3754, "code": "x = 13;y = 3;z = 1\nc = (x - z)//(y+z)\nprint(c)", "coverage": [">", ">", ">"]}, "14241": {"id": 14241, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nf = 0\nfor i in range(1, n):\n    if a[i-1] < a[i]:\n        ff = 1\n    elif a[i-1] > a[i]:\n        ff = -1\n    else:\n        ff = 0\n    if f and ff and f != ff:\n        cnt += 1\n        f = 0\n    elif not f:\n        f = ff\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18811": {"id": 18811, "code": "H = 3\nW = 7\nN = 10\nm = max(H, W)\nans = int((N - 1) / m) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "5237": {"id": 5237, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nL=[s[0]]\nL.append(str(len(s)-2))\nL.append(s[-1])\nprint(''.join(L))", "coverage": [">", ">", ">", ">", ">"]}, "11976": {"id": 11976, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nprint(1 if M2 == M1 + 1 and D2 == 1 else 0)", "coverage": [">", ">", ">"]}, "2574": {"id": 2574, "code": "print('YES' if set(list(map(int,\n                            \"1 2 9 1\".split()))) == set([1, 9, 7, 4]) else 'NO')", "coverage": [">", ">"]}, "4947": {"id": 4947, "code": "s = \"xyz\"\nn = len(s) - 2\nans = s[0] + str(n) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "529": {"id": 529, "code": "S = \"codefestival\"\nK = 100\nans = \"\"\nfor s in S:\n    if s == \"a\":\n        ans += s\n    elif 123-ord(s) <= K:\n        ans += \"a\"\n        K -= 123-ord(s)\n    else:\n        ans += s\nif K > 0:\n    ans = ans[:-1] + chr((ord(ans[-1])-97+K)%26+97)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15171": {"id": 15171, "code": "X = 12;Y = 3;Z = 1\nX -= 2*Z\nans = X // (Y+Z)\nX %= (Y+Z)\nif X >= Y:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "1975": {"id": 1975, "code": "N = 100;A = 100;B = 100\nmax_ans = min(A,B)\nif N-A-B>0:\n    min_ans = 0\nelse:\n    min_ans = abs(N-A-B)\nprint(max_ans, min_ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "15021": {"id": 15021, "code": "n = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nodds = sum(i%2 for i in a)\nif odds>0:\n    print(2**(n-1))\nelif p==0:\n    print(2**(n))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "6396": {"id": 6396, "code": "import bisect\nn = 6\nalist = [2, 3, 6, 14, 53, 159]\nblist = [58, 9, 79, 323, 84, 6]\nclist = [2, 50, 79, 288, 383, 2643]\nans = 0\nfor b in blist:\n  ai = bisect.bisect_left(alist, b)\n  ci = bisect.bisect_right(clist, b)\n  if ai == 0 or ci == len(clist):\n    continue\n  else:\n    ans += ai * (len(clist) - ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5305": {"id": 5305, "code": "n = 5\nans=(n+1)//2\nprint(ans)", "coverage": [">", ">", ">"]}, "15988": {"id": 15988, "code": "N = 20;M = 30\nprint(max(N - (M*2),0))", "coverage": [">", ">"]}, "17083": {"id": 17083, "code": "a = \"D\";b = \"H\"\nif a==\"H\":print(b)\nelif b==\"D\":print(\"H\")\nelse: print(\"D\")", "coverage": [">", ">", ">", ">"]}, "15668": {"id": 15668, "code": "X = 64145;Y = 123;Z = 456\na = Y+Z\nX=X-Z\nres = X//a\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "12856": {"id": 12856, "code": "X = \"5\"\nprint('YES' if X in '357' else 'NO')", "coverage": [">", ">"]}, "16300": {"id": 16300, "code": "n = 2\na = [0, 100]\nm = a[-1]\nfor i in range(n - 1):\n    c = abs(a[i] - a[-1] / 2)\n    if c < m:\n        m = c\n        r = i\nprint(a[-1], a[r])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7734": {"id": 7734, "code": "N = 3;K = 3\nList = [1, 2, 3]\nk=K-1\nn = (N-1)/k\nnn = int(n)\nif n-nn > 0:\n  nn = nn+1\nprint(nn)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "6577": {"id": 6577, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nx=[1 for _ in range(N)]\nans=0\nfor i in range(N):\n        a=bisect.bisect_left(A,B[i]) \n        c=N-bisect.bisect_right(C,B[i])\n        ans+=a*c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2213": {"id": 2213, "code": "n = 10;a = 7;b = 5\nmax1 = min(a,b)\nif a+b <= n:\n  min1 =0\nelif a+b >n:\n  min1 = a+b-n\nprint(max1,min1)", "coverage": [">", ">", ">", "!", ">", ">", ">"]}, "7227": {"id": 7227, "code": "H = 10;N = 3\nA = [4, 5, 6]\nans = ['No', 'Yes'][sum(A) >= H]\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13383": {"id": 13383, "code": "s = \"haiku,atcoder,tasks\"\nresult=''\nfor i in s:\n    if i==',':\n        result+=' '\n    else:\n        result+=i\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "9157": {"id": 9157, "code": "S = \"2017/01/31\"\nprint(\"2018\"+S[4:])", "coverage": [">", ">"]}, "13543": {"id": 13543, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "6661": {"id": 6661, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nif sum(A)>=H:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!"]}, "11307": {"id": 11307, "code": "ary = [\"aaa\", \"SAT\", \"FRI\", \"THU\", \"WED\", \"TUE\", \"MON\", \"SUN\"]\nday = \"SUN\"\nprint(ary.index(day))", "coverage": [">", ">", ">"]}, "6252": {"id": 6252, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in b:\n    ai=bisect.bisect_left(a,i)\n    ci=bisect.bisect_right(c,i)\n    ans+=ai*(n-ci)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17041": {"id": 17041, "code": "a = \"D\";b = \"H\"\nstrings=\"H\",\"D\"\nif a==b:\n    print(\"H\")\nelse:\n    print(\"D\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "18239": {"id": 18239, "code": "H = 2\nW = 100\nN = 200\nX = 0\nif H <= W:\n  X = N // W\n  if N % W != 0:\n    X = X + 1\nelse :\n  X = N // H\n  if N % H != 0:\n    X = X + 1\nprint(X)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "15900": {"id": 15900, "code": "A = 20;B = 15\nprint(0 if A-(B*2)<1 else A-(B*2))", "coverage": [">", ">"]}, "7390": {"id": 7390, "code": "a = 211;b = 5\nl = [31, 41, 59, 26, 53]\nfor i in range(b):\n  a-=l[i]\nprint(\"Yes\" if a<=0 else\"No\")", "coverage": [">", ">", ">", ">", ">"]}, "17415": {"id": 17415, "code": "s = \"1905\"\nyymm = 1 <= int(s[2:]) <= 12\nmmyy = 1 <= int(s[:2]) <= 12\nif yymm and mmyy:\n    print('AMBIGUOUS')\nelif yymm:\n    print('YYMM')\nelif mmyy:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "349": {"id": 349, "code": "s = \"xyz\"\nk = 4\nlens=len(s)\nalp=\"azyxwvutsrqponmlkjihgfedcb\"\nans=[]\nfor i in range(lens):\n    d=alp.index(s[i])\n    if k>=d:\n        k-=d\n        ans.append(\"a\")\n    else:\n        ans.append(s[i])\nlas=ans.pop()\nalp=\"abcdefghijklmnopqrstuvwxyz\"\nans.append(alp[(alp.index(las)+k)%26])\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13780": {"id": 13780, "code": "L = [10, 0, 12, 0, 120]\nA=60*L[0]+L[1]\nB=60*L[2]+L[3]\nif B-A <= L[4]:\n\tprint(\"0\")\nelse:\n\tprint(str(B-A-L[4]))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "8011": {"id": 8011, "code": "import math\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 0\nans = math.ceil((n-1)/(k-1))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13330": {"id": 13330, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nprint(\"abcde,fghihgf,edcba\".replace(\",\", \" \"))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17034": {"id": 17034, "code": "a = \"H\";b = \"H\"\nif a == 'D':\n  b = 'D' if b == 'H' else 'H'\nprint(b)", "coverage": [">", ">", "!", ">"]}, "17031": {"id": 17031, "code": "a = \"H\";b = \"H\"\nif a == \"H\":\n    if b == \"D\":\n        ans = \"D\"\n    else:\n        ans = \"H\"\nelse:\n    if b == \"D\":\n        ans = \"H\"\n    else:\n        ans = \"D\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">"]}, "297": {"id": 297, "code": "s = \"a\"\nk = 25\nresult = \"\"\ni = 0\nwhile i < len(s)-1:\n    s_i = ord(s[i])\n    if s[i]==\"a\":\n        result = result+\"a\"\n    elif 123-s_i <= k:\n        result = result+\"a\"\n        k -= 123-s_i\n    else:\n        result = result+s[i]\n    i += 1\nif k>0:\n    result = result + chr((ord(s[i])-97+k)%26+97)\nelse:\n    result = result + s[i]\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "18734": {"id": 18734, "code": "h = 14\nw = 12\nn = 112\nm = max(w,h)\nif n > n //m * m:\n    ans = n // m + 1\nelse:\n    ans = n // m\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15234": {"id": 15234, "code": "a = 100000;s = 1;d = 1\nprint((a-d)//(s+d))", "coverage": [">", ">"]}, "11929": {"id": 11929, "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nif a==c:\n  print(\"0\")\nelse:\n  print(\"1\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "4927": {"id": 4927, "code": "S = \"internationalization\"\nprint(S[0] + str(S.__len__()-2) + S[-1])", "coverage": [">", ">"]}, "3215": {"id": 3215, "code": "s = \"1111111111\"\nn = len(s)\nret = 753\nfor i in range(n-2):\n    x = abs(753-int(s[i:i+3]))\n    ret = min(x, ret)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12192": {"id": 12192, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif m1!=m2:\n    print('1')\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "1884": {"id": 1884, "code": "n = 100;a = 100;b = 100\nans=[0,0]\nans[0]=min(a,b)\nans[1]=max(0,a+b-n)\nprint(*ans)", "coverage": [">", ">", ">", ">", ">"]}, "8409": {"id": 8409, "code": "import itertools\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncsA1 = list(itertools.accumulate(A1))\ncsA2 = list(itertools.accumulate(A2))\nans = A1[0] + csA2[-1]\nfor i in range(N-1):\n    tmp = csA1[i] + (csA2[-1] - csA2[i]) + A2[i]\n    ans = max(ans,tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5934": {"id": 5934, "code": "N = 100\nans = 0\nans = -(-N//2)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "7695": {"id": 7695, "code": "import math\nh = 210;n = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= h:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "6751": {"id": 6751, "code": "attack = []\nh = 210;n = 5\na = ['31', '41', '59', '26', '53']\nfor move in a:\n    move = int(move)\n    attack.append(move)\nresult = h - sum(attack)\nif result <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8997": {"id": 8997, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nl = []\nl.append(b-a)\nl.append(c-a)\nl.append(d-a)\nl.append(e-a)\nl.append(c-b)\nl.append(d-b)\nl.append(e-b)\nl.append(d-c)\nl.append(e-c)\nl.append(e-d)\nif max(l) <= k:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1218": {"id": 1218, "code": "n = 112\ndiv, mod = divmod(n, 111)\nans = div * 111 if mod == 0 else (div + 1) * 111\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13468": {"id": 13468, "code": "S = \"abcde,fghihgf,edcba\"\nx = S[:5]+\" \"+S[6:13]+\" \"+S[14:]\nprint(x)", "coverage": [">", ">", ">"]}, "8670": {"id": 8670, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2570": {"id": 2570, "code": "n = map(int, \"1 2 9 1\".split())\nif [1, 4, 7, 9] == sorted(n):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", "!", "!", ">"]}, "2257": {"id": 2257, "code": "a = 10;b = 3;c = 5\nprint(min(b,c),b+c-a if b + c >= a else 0)", "coverage": [">", ">"]}, "10158": {"id": 10158, "code": "n = 6\ns = \")))())\"\nd = [0]\ncnt = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        cnt += 1\n    else:\n        cnt -= 1\n    d.append(cnt)\nx = min(d)\nprint(\"(\"*(-x)+s+\")\"*(d[-1]-x))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "673": {"id": 673, "code": "k = 101\nsevens = 7 % k\nif k % 2 ==0:\n    print(-1)\nelse:\n    for i in range(k):\n        if sevens % k ==0:\n            print(i+1)\n            break\n        else:\n            sevens = (sevens*10 + 7) % k\n    else:\n        print(-1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", "!", "!"]}, "17735": {"id": 17735, "code": "s = \"1700\"\na1 = int(s[:2])\na2 = int(s[2:])\nif a1 in range(1, 13):\n  if a2 in range(1, 13): print(\"AMBIGUOUS\")\n  else: print(\"MMYY\")\nelse:\n  if a2 in range(1, 13): print(\"YYMM\")\n  else: print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "2793": {"id": 2793, "code": "S = \"1111111111\"\nans=10**3\nfor i in range(len(S)-2):\n  x=int(S[i])*100+int(S[i+1])*10+int(S[i+2])\n  ans=min(abs(x-753),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11085": {"id": 11085, "code": "S = \"atcoder\"\nN = len(S)\nr_S = S[::-1]\nhead_S = S[0: int((N - 1) / 2)]\nr_head_S = head_S[::-1]\nend_S = S[int((N+3)/2 - 1) : N+1]\nr_end_S = end_S[::-1]\nif S == r_S and head_S == r_head_S and end_S == r_end_S:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13464": {"id": 13464, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c)", "coverage": [">", ">"]}, "5910": {"id": 5910, "code": "n = 100\ndiv, mod = divmod(n, 2)\nprint(div+mod)", "coverage": [">", ">", ">"]}, "13121": {"id": 13121, "code": "n = \"6\"\nprint(\"YES\" if n in \"753\" else \"NO\")", "coverage": [">", ">"]}, "9699": {"id": 9699, "code": "from collections import deque\nn = 6\ns = \")))())\"\nl, que = 0, deque([])\nfor i in s:\n    que.append(i)\n    if i == '(':\n        l += 1\n    elif i == ')':\n        if l == 0:\n            que.appendleft('(')\n            l += 1\n        l -= 1\nprint(*que, ')' * l, sep='')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1530": {"id": 1530, "code": "n = 112\nprint((n+110)//111*111)", "coverage": [">", ">"]}, "13938": {"id": 13938, "code": "import sys\ninput = sys.stdin.readline\nimport copy\nN = 6\nA = [1, 2, 3, 2, 2, 1]\narr = []\nans = []\nstatus = 0\nfor i in range(N):\n  if status == 0:\n    if len(arr) > 0:\n      if A[i] > arr[-1]:\n        status = 1\n      elif A[i] < arr[-1]:\n        status = 2\n    arr.append(A[i])\n  elif status == 1 and A[i] >= arr[-1]:\n    arr.append(A[i])\n  elif status == 2 and A[i] <= arr[-1]:\n    arr.append(A[i])\n  else:\n    ans.append(copy.copy(arr))\n    arr = [A[i]]\n    status = 0\nif len(arr) > 0:\n  ans.append(arr)\nprint(len(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9103": {"id": 9103, "code": "S = ['2017', '01', '31']\nprint(\"2018/\"+S[1]+\"/\"+S[2])", "coverage": [">", ">"]}, "17503": {"id": 17503, "code": "s = 112\na = s//100\nb = s%100\nif 0 < b and b < 13 and 0 < a and a < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < b and b < 13:\n    print(\"YYMM\")\nelif 0 < a and a < 13:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "741": {"id": 741, "code": "K = 2\nif K%2==0 or K%5==0:\n    print(-1)\nelse:\n    ans = 1\n    rest = 7%K\n    while rest != 0:\n        rest *= 10\n        rest += 7\n        rest %= K\n        ans += 1\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "3482": {"id": 3482, "code": "a = 20;b = 15\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", "!", ">", ">"]}, "6132": {"id": 6132, "code": "from bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nBcnt = [0]*(N+1)\nidx = N\nfor i in range(N-1,-1,-1):\n    idx = bisect_right(C,B[i],hi=idx)\n    Bcnt[i] = N-idx+Bcnt[i+1]\nans = 0\nidx = 0\nfor i in range(N):\n    idx = bisect_right(B,A[i],lo=idx)\n    ans += Bcnt[idx]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17651": {"id": 17651, "code": "s = \"1700\"\nt,u=0<int(s[:2])<13,0<int(s[2:])<13\nprint('AMBIGUOUS' if t and u else 'MMYY' if t else 'YYMM' if u else 'NA')", "coverage": [">", ">", ">"]}, "888": {"id": 888, "code": "k = 101\nif k%2==0 or k%5==0:\n    print(-1)\nelse:\n    i=1\n    t=7\n    while t%k!=0:\n        i+=1\n        t=(t*10+7)%k\n    print(i)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10429": {"id": 10429, "code": "a = 1;b = 1;k = 1\nlist_ComDiv = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        list_ComDiv.append(i)\nlist_ans = sorted(list_ComDiv, reverse=True)\nprint(list_ans[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4849": {"id": 4849, "code": "s = \"internationalization\"\nx = len(s) - 2\nprint(s[0] + str(x) + s[-1])", "coverage": [">", ">", ">"]}, "3003": {"id": 3003, "code": "s = \"1234567876\"\nmin_abs = 1000\nfor i in range(len(s) - 2):\n    if abs(753 - int(s[i: i + 3])) < min_abs:\n        min_abs = abs(753 - int(s[i: i + 3]))\nprint(min_abs)", "coverage": [">", ">", ">", ">", ">", ">"]}, "424": {"id": 424, "code": "s = ['a']\nK = 25\nn = len(s)\nfor i in range(n-1):\n    m = ord('z') - ord(s[i]) + 1\n    if not s[i] == 'a' and m <= K:\n        s[i] = 'a'\n        K -= m\ns[n-1] = chr((ord(s[n-1])+K%26-97)%26+97)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "8377": {"id": 8377, "code": "n = 4\nx = [1, 1, 1, 1]\ny = [1, 1, 1, 1]\nmx=0\nfor i in range(n):\n  ans=sum(x[:i+1])+sum(y[i:])\n  if ans>mx:\n    mx=ans\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4598": {"id": 4598, "code": "s = \"smiles\"\nm = str(len(s) -2)\nprint(s[0] + m + s[-1])", "coverage": [">", ">", ">"]}, "19500": {"id": 19500, "code": "N = 3\nprint(N * 2) if N % 2 else print(N)", "coverage": [">", ">"]}, "12944": {"id": 12944, "code": "X = \"5\"\nif X in '753':\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", "!"]}, "2611": {"id": 2611, "code": "if set(list(map(int, \"4 9 0 8\".split()))) == {1, 4, 7, 9}:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "coverage": [">", "!", "!", ">"]}, "11589": {"id": 11589, "code": "S = \"SUN\"\nweek = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\na = week.index(S)\nprint(7-a)", "coverage": [">", ">", ">", ">"]}, "19436": {"id": 19436, "code": "n = 3\nif n%2:print(2*n)\nelse:print(n)", "coverage": [">", ">", "!"]}, "3599": {"id": 3599, "code": "A = 12;B = 4\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "15805": {"id": 15805, "code": "import math\nimport itertools\nimport sys\nimport copy\nX = 13;Y = 3;Z = 1\nX = X - (Z*2)\ncnt = 0\nwhile (X >= Y) :\n  X -= Y\n  cnt += 1\n  X -= Z\nprint (cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18301": {"id": 18301, "code": "h = 2\nw = 100\nN = 200\ncnt, loop = 0, 0\nwhile cnt < N:\n  cnt += max(w, h)\n  loop += 1\nprint(loop)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8685": {"id": 8685, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14964": {"id": 14964, "code": "import math\nn = 45;p = 1\nc=0\nfor m in map(int,\"17 55 85 55 74 20 90 67 40 70 39 89 91 50 16 24 14 43 24 66 25 9 89 71 41 16 53 13 61 15 85 72 62 67 42 26 36 66 4 87 59 91 4 25 26\".split()):\n  if m%2==0:c+=1\nd=2**(c)\ne=0\nfor i in range(p,n-c+1,2):\n  k=math.factorial(n-c) // (math.factorial(n-c - i) * math.factorial(i))\n  k=max(k,1)\n  e+=k\nprint(d*e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10519": {"id": 10519, "code": "a = 1;b = 1;k = 1\nmin_ = min(a,b)\ndivisors = []\nfor i in range(1,min_+1,1):\n    if(a%i == 0 and b%i == 0 ):\n        divisors.append(i)\nprint(sorted(divisors,reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6697": {"id": 6697, "code": "h = 210;a = 5\narr = [31, 41, 59, 26, 53]\nfor i in arr:\n    h-=i\nprint(\"Yes\" if h<=0 else \"No\")", "coverage": [">", ">", ">", ">", ">"]}, "6859": {"id": 6859, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nx = sum(a)\nif (h - x) <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "17405": {"id": 17405, "code": "s = \"1700\"\nsb = s[:2]\nsa = s[2:]\nif 1<=int(sb)<=12 and (13 <= int(sa) or int(sa)==0):\n    print('MMYY')\nelif 1<=int(sa)<=12 and (13 <= int(sb) or int(sb)==0):\n    print('YYMM')\nelif 1<=int(sb)<=12 and 1<=int(sb)<=12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "3403": {"id": 3403, "code": "A = 12;B = 4\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "1563": {"id": 1563, "code": "N = 750\nfor i in range(10):\n    if int(str(i)*3) < N <= int(str(i+1)*3):\n        break\nprint(str(i+1)*3)", "coverage": [">", ">", ">", ">", ">"]}, "6761": {"id": 6761, "code": "H = 10;N = 3\nA = \"4 5 6\"\nlist_A=A.split()\nwaza=0\nfor i in range(0,N):\n    waza=waza+int(list_A[i])\nif waza>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5802": {"id": 5802, "code": "N = 100\nprint(N//2 + N % 2)", "coverage": [">", ">"]}, "8260": {"id": 8260, "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nimport bisect\nn = 4;k = 3\na = [2, 3, 1, 4]\nix=a.index(1)\ni=math.ceil((n-k)/(k-1))+1\nprint(i)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "294": {"id": 294, "code": "s = \"a\"\nK = 25\nafter = []\nrem = K\nfor i in range(len(s)-1):\n    if s[i] == 'a':\n        after.append('a')\n        continue\n    c = ord('z') - ord(s[i]) + 1\n    if c <= rem:\n        rem -= c\n        after.append('a')\n    else:\n        after.append(s[i])\nlast = ord(s[-1])\nif rem > 0:\n    last += rem%26\n    if last > ord('z'):\n        last -= 26\nafter.append(chr(last))\nprint(''.join(after))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "17824": {"id": 17824, "code": "S = \"0112\"\ns1=S[0:2]\ns2=S[2:4]\nli=[\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif s1 not in li:\n    a=False\nelse:\n    a=True\nif s2 not in li:\n    b=False\nelse:\n    b=True\nif a==b==True:\n    print(\"AMBIGUOUS\")\nelif a==b==False:\n    print(\"NA\")\nelif a==True:\n    print(\"MMYY\")\nelse:\n    print(\"YYMM\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4953": {"id": 4953, "code": "s = \"xyz\"\nprint(\"{}{}{}\".format(s[:1], len(s[1:-1]), s[-1:]))", "coverage": [">", ">"]}, "2580": {"id": 2580, "code": "n = {1, 4, 9, 7}\nprint((\"NO\",\"YES\")[len(set([1,9,7,4])-n)==0])", "coverage": [">", ">"]}, "13670": {"id": 13670, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nt = c*60+d - (a*60+b)\nprint(max(0,t-k))", "coverage": [">", ">", ">"]}, "1668": {"id": 1668, "code": "n = 10;a = 7;b = 5\np = min(a,b)\nq = max(a+b-n,0)\nprint(str(p) + \" \" + str(q))", "coverage": [">", ">", ">", ">"]}, "9445": {"id": 9445, "code": "a = \"2017/01/31\"\nb=\"2018\"+a[4:]\nprint(b)", "coverage": [">", ">", ">"]}, "19311": {"id": 19311, "code": "N = 999999999\nprint(2 * N if (N % 2 != 0) else N)", "coverage": [">", ">"]}, "7854": {"id": 7854, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nif n == k:\n    print(1)\nelif k == 2:\n    print(n-1)\nelse:\n    rem = n % (k-1)\n    m = (n - rem) / (k-1)\n    if rem <= 1:\n        print(int(m))\n    else:\n        print(int(m+1))", "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "14839": {"id": 14839, "code": "N = 1;P = 1\nA = [50]\ndp0 = 1\ndp1 = 0\nfor a in A:\n    if a & 1:\n        new0 = dp0 + dp1\n        new1 = new0\n    else:\n        new0 = dp0 * 2\n        new1 = dp1 * 2\n    dp0 = new0\n    dp1 = new1\nprint(dp1 if P & 1 else dp0)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "19451": {"id": 19451, "code": "n = 999999999\nprint(2*n if n%2 else n)", "coverage": [">", ">"]}, "16640": {"id": 16640, "code": "s={'H':0,'D':1}\nt=0\na = ['D', 'D']\nfor i in range(2):\n  t+=s[a[i]]\nif t%2!=0:\n  print('D')\nelse:\n  print('H')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1850": {"id": 1850, "code": "N = 10;X = 7;Y = 5\nans =  X+Y-N\nif ans < 0:\n    ans = 0\nprint(min(X,Y), ans)", "coverage": [">", ">", ">", "!", ">"]}, "15727": {"id": 15727, "code": "X = 100000;Y = 1;Z = 1\nnum = (X - Z) // ( Y + Z)\nprint(num)", "coverage": [">", ">", ">"]}, "16144": {"id": 16144, "code": "N = 5\nA = [2, 4, 6, 9, 11]\nimport math\nn = A.pop()\nP_dif_A = sorted([(abs(a-n/2), a) for a in A])\nr = P_dif_A[0][1]\nprint(n, r)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11468": {"id": 11468, "code": "S = \"SAT\"\nD = [\"\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\nfor i in range(1,8):\n  if S == D[i]:\n    print(i)", "coverage": [">", ">", ">", ">", ">"]}, "4648": {"id": 4648, "code": "l = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nprint('{}{}{}'.format(l[0],len(l)-2,l[-1]))", "coverage": [">", ">"]}, "12231": {"id": 12231, "code": "S = \"akasaka\"\nS_list = list(S)\nN = len(S_list)\nno_flag = 0\nfor i in range(N//2):\n    if S_list[i] != S_list[N-i-1]:\n        no_flag = 1\nfor i in range(int((N-1)/2)//2):\n    if S_list[i] != S_list[(N-1)//2-i-1]:\n        no_flag = 1\nfor i in range((N-3)//2):\n    if S_list[(N+3)//2+i-1] != S_list[N-1-i]:\n        no_flag = 1\nif no_flag == 1:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">"]}, "7068": {"id": 7068, "code": "H = 20;N = 3\ndata = [4, 5, 6]\nS = 0\nfor i in range(0,len(data)):\n    S += data[i]\nif H > S:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7633": {"id": 7633, "code": "H = 10;N = 3\nA = [4, 5, 6]\ns=0\nflg=True\nfor i in range(N):\n  s+=A[i]\n  if s>=H:\n    print('Yes')\n    flg=False\n    break\nif flg:\n\tprint('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "13714": {"id": 13714, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh_diff = 60*(h2 - h1)\nm_diff = m2 - m1\nprint(h_diff + m_diff - k)", "coverage": [">", ">", ">", ">"]}, "9065": {"id": 9065, "code": "A = 15\nB = 18\nC = 26\nD = 35\nE = 36\nQ = 18\nF=A-B\nG=A-C\nH=A-D\nI=A-E\nJ=B-C\nK=B-D\nL=B-E\nM=C-D\nN=C-E\nO=D-E\nP=max(abs(F),abs(G),abs(H),abs(I),abs(J),abs(K),abs(L),abs(M),abs(N),abs(O))\nif P<=Q:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9764": {"id": 9764, "code": "N = 6\nT = \")))())\"\nS = list(T)\nG = True\nwhile G:\n    G = False\n    for i in range(1, len(S)):\n        if S[i - 1] == '(' and S[i] == ')':\n            S.pop(i)\n            S.pop(i - 1)\n            G = True\n            break\nfor s in S:\n    if s == '(':\n        T = T + ')'\n    else:\n        T = '(' + T\nprint(T)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3519": {"id": 3519, "code": "A = 20;B = 30\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "2165": {"id": 2165, "code": "N = 10;A = 7;B = 5\nup = min(A,B)\nif A+B >= N:\n  down = A+B-N\nelse:\n  down = 0\nprint(up,down)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "8353": {"id": 8353, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7234": {"id": 7234, "code": "h = 211;n = 5\nl = [31, 41, 59, 26, 53]\nans=0\ncount=0\nfor i in range(0,n):\n    ans+=l[i]\n    if(ans==h or ans>h):\n        count+=1\n    else:\n        count+=0\nif(count>0):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "5768": {"id": 5768, "code": "n = 2\nif n % 2 != 0:\n    print(int(n/2) + 1)\nelif n % 2 == 0:\n    print(int(n/2))", "coverage": [">", ">", "!", ">", ">"]}, "11461": {"id": 11461, "code": "store = {\"SUN\":7,\"MON\":6,\"TUE\":5,\"WED\":4,\"THU\":3,\"FRI\":2,\"SAT\":1}\ns = \"SUN\"\nprint(store[s])", "coverage": [">", ">", ">"]}, "3408": {"id": 3408, "code": "A = 20;B = 30\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "5606": {"id": 5606, "code": "n = 2\nans = n // 2\nans += 1 if n % 2 != 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3990": {"id": 3990, "code": "a = 13;b = 3;c = 1\na -= c\nprint(a//(b+c))", "coverage": [">", ">", ">"]}, "18984": {"id": 18984, "code": "n = 12\ntwoes = [0]\nfives = [0]\nif n % 2 == 1:\n    print(0)\nelse:\n    i = 0\n    while 1:\n        if n // (2 ** (i +1)) != 0:\n            twoes.append(n // (2 ** (i + 1)))\n            i += 1\n        else:\n            break\n    i = 0\n    while 1:\n        temp5 = (n // (5** (i +1))) //2\n        if temp5 != 0:\n            fives.append(temp5)\n            i += 1\n        else:\n            break\n    print(min(sum(twoes), sum(fives)))    ", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "4376": {"id": 4376, "code": "a = [10, 0, 12, 0, 120]\nkishou = a[0] * 60 + a[1]\nshuusin = a[2] * 60 + a[3]\nprint(shuusin - kishou - a[4])", "coverage": [">", ">", ">", ">"]}, "9924": {"id": 9924, "code": "N = 3\nS = \"())\"\nd = [0] * (N + 1)\nfor i in range(N):\n    d[i + 1] = d[i] + int(S[i] == \"(\") - int(S[i] == \")\")\na = d[-1]\nb = min(d)\nprint(\"(\" * -b + S + \")\" * (a - b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7034": {"id": 7034, "code": "H = 211;N = 5\ni = map(int,\"31 41 59 26 53\".split())\nif sum(i) >= H :\n    print(\"Yes\")\nelse :\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "5293": {"id": 5293, "code": "N = 5\nq, mod = divmod(N, 2)\nif mod == 0:\n    print(q)\nelse:\n    print(q+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "9278": {"id": 9278, "code": "A = \"2017/01/07\"\nA = A.replace('2017', '2018') \nprint(A)", "coverage": [">", ">", ">"]}, "96": {"id": 96, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nn = len(s)\nfor i in range(n):\n    if s[i]=='a':continue\n    d = ord('z')-ord(s[i])+1\n    if d<=k:\n        s[i] = 'a'\n        k -= d\nx = (ord(s[-1])-ord('a')+k)%26\ns[-1] = chr(ord('a')+x)\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4141": {"id": 4141, "code": "h = 10;m = 0;hh = 12;mm = 0;k = 120\nbi = h*60 + m\nen = hh*60 +mm\nprint(max(en - bi - k,0))", "coverage": [">", ">", ">", ">"]}, "770": {"id": 770, "code": "K = 101\nans = -1\nkeep = 0\ncheck = 7\nfor i in range(K):\n    keep = (keep + check) % K\n    if keep == 0:\n        ans = i + 1\n        break\n    check = (check * 10) % K\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3362": {"id": 3362, "code": "A = 20;B = 15\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "10263": {"id": 10263, "code": "N = 6\nS = \")))())\"\nleft = 0\nfor i in range(N - 1, -1, -1):\n    if S[i] == \")\":\n        left += 1\n    else:\n        left = max(0, left - 1)\nright = 0\nfor i in range(N):\n    if S[i] == \"(\":\n        right += 1\n    else:\n        right = max(0, right - 1)\nprint(\"(\" * left + S + \")\" * right)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2197": {"id": 2197, "code": "rec = ['10', '3', '5']\nn, a, b = map(int, rec)\nnin = [a, b]\nnmax = min(nin)\nnmin = n - min(n, (n - nin[0]) + (n - nin[1]))\nprint(str(nmax) + \" \" + str(nmin))", "coverage": [">", ">", ">", ">", ">", ">"]}, "18784": {"id": 18784, "code": "H = 3\nW = 7\nN = 10\nif N%max(H,W)==0:\n  print(N//max(H,W))\nelse:\n  print(N//max(H,W)+1)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11125": {"id": 11125, "code": "S = \"level\"\nN = len(S)\nS_1 = S[0:int((N-1)/2)]\nS_2 = S[int((N+3)/2-1):N+1]\nprint('Yes' if S[::-1] == S and S_1[::-1] == S_1 and S_2[::-1] == S_2 else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "9515": {"id": 9515, "code": "s = \"2017/01/31\"\ns = list(s)\ns[3] = '8'\ns = \"\".join(s)\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "1590": {"id": 1590, "code": "n = 10;a = 7;b = 5\nprint(f'{min(a,b)} {max(0,a+b-n)}')", "coverage": [">", ">"]}, "8704": {"id": 8704, "code": "n = 1\na1 = [2]\na2 = [3]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14591": {"id": 14591, "code": "n = 1;p = 1\nA = [50]\nif all(a % 2 == 0 for a in A):\n    if p:\n        print(0)\n    else:\n        print(pow(2, n))\nelse:\n    print(pow(2, n-1))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "6034": {"id": 6034, "code": "import sys\nimport math\ninput = sys.stdin.readline\nn = 5\nprint(math.ceil(n/2))", "coverage": [">", ">", ">", ">", ">"]}, "11400": {"id": 11400, "code": "weeks = (\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\")\ns = \"SAT\"\nprint(7 - weeks.index(s))", "coverage": [">", ">", ">"]}, "5234": {"id": 5234, "code": "S = ['s', 'm', 'i', 'l', 'e', 's']\nprint(S[0]+str(len(S)-2)+S[-1])", "coverage": [">", ">"]}, "12130": {"id": 12130, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(1 if m1!=m2 else 0)", "coverage": [">", ">", ">"]}, "3775": {"id": 3775, "code": "x = 100000;y = 1;z = 1\none_length = y + z\nprint(int((x-z) / one_length))", "coverage": [">", ">", ">"]}, "6636": {"id": 6636, "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nres = 0\nfor i in range(n):\n    index1 = bisect.bisect_left(a, b[i])\n    index2 = bisect.bisect_right(c, b[i])\n    res += index1 * (n - index2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17318": {"id": 17318, "code": "N = ['D', 'D']\nif(N[0] == 'H'):\n  if(N[1] == 'H'):\n    print('H')\n  else:\n    print('D')\nelse:\n  if(N[1] == 'H'):\n    print('D')\n  else:\n    print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "17823": {"id": 17823, "code": "S = \"1905\"\ns1=S[0:2]\ns2=S[2:4]\nli=[\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"]\nif s1 not in li:\n    a=False\nelse:\n    a=True\nif s2 not in li:\n    b=False\nelse:\n    b=True\nif a==b==True:\n    print(\"AMBIGUOUS\")\nelif a==b==False:\n    print(\"NA\")\nelif a==True:\n    print(\"MMYY\")\nelse:\n    print(\"YYMM\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "14332": {"id": 14332, "code": "n = 7\naa = [1, 2, 3, 2, 1, 999999999, 1000000000]\nlist1 =[0] * n\ncnt = 1  \nfor i in range(n-1):\n  if aa[i+1] > aa[i]:\n    list1[i+1] = 1\n  elif aa[i+1] < aa[i]:\n    list1[i+1] = -1\n  elif aa[i+1] == aa[i]:    \n    list1[i+1] = 0\nwhile 1 in list1 and -1 in list1:\n  del list1[:max(list1.index(1), list1.index(-1))]\n  list1[0] = 0\n  cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "17653": {"id": 17653, "code": "NN = \"0112\"\nAA = int(NN[0:2])\nBB = int(NN[2:])\ncount1 = 0\ncount2 = 0\nif AA > 12 or AA == 00:\n  count1 +=1\nif BB > 12 or BB == 00:\n  count2 +=1\nif count1 == 0 and count2 == 0:\n  print('AMBIGUOUS')\nelif count1 ==1 and count2 == 0:\n  print('YYMM')\nelif count1 ==0 and count2 == 1:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "7500": {"id": 7500, "code": "H = 211;N = 5\nA_list = []\nfor i in range(1, N+1):\n    A_list.append(\"A_\" + str(i))\nA_list = map(int, \"31 41 59 26 53\".split())\nA_total = sum(A_list)\nif A_total >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\") ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8175": {"id": 8175, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 8;K = 3\nA = 8\nprint((N - 2) // (K - 1) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12157": {"id": 12157, "code": "prev = \"11\"\nnext = \"11\"\nif prev != next:\n    print(\"1\")\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "12964": {"id": 12964, "code": "X = 5\nif X==7 or X==5 or X==3:print('YES')\nelse:print('NO')", "coverage": [">", ">", "!"]}, "8991": {"id": 8991, "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nS=a,b,c,d,e\nif (max(S)-min(S))<=k:\n\tprint(\"Yay!\")\nelse:\n\tprint(\":(\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2946": {"id": 2946, "code": "S = \"1234567876\"\nans = 100000\ni = 0\nwhile i < len(S) - 2:\n    x = int(str(S[i]) + str(S[i + 1]) + str(S[i + 2]))\n    ans = min(ans, abs(753 - x))\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17741": {"id": 17741, "code": "s = \"1700\"\nif 0<int(s[:2])<=12:\n    if 0<int(s[2:])<=12:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelse:\n    if 0<int(s[2:])<=12:\n        print('YYMM')\n    else:\n        print('NA')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "11946": {"id": 11946, "code": "M1 = 11;D1 = 16\nM2 = 11;D2 = 17\nif M1==M2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "6868": {"id": 6868, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\ntotal = sum(A)\nr = 'Yes' if H <= total else 'No'\nprint(r)", "coverage": [">", ">", ">", ">", ">"]}, "13836": {"id": 13836, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nAd = [A[i] - A[i+1] for i in range(N-1)]\nans = 1\np = 0\nfor d in Ad:\n    if d * p < 0:\n        ans += 1\n        p = 0\n    elif d != 0:\n        p = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17878": {"id": 17878, "code": "s = \"0112\"\ns1=int(s[0]+s[1])\ns2=int(s[2]+s[3])\nif (0<s1<13)and(0<s2<13):\n    print(\"AMBIGUOUS\")\nelif (0<s1<13):\n    print(\"MMYY\")\nelif (0<s2<13):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "5104": {"id": 5104, "code": "s = \"internationalization\"\nfirst_letter = s[0]\nlast_letter = s[-1]\nnumber = str(len(s) - 2)\nprint(first_letter + number + last_letter)", "coverage": [">", ">", ">", ">", ">"]}, "19212": {"id": 19212, "code": "n = 5\nans = 0\nif n % 2 == 0:\n    for i in range(1, 36):\n        k = 5**i*2\n        ans += n//k\n    print(ans)\nelse:\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "15347": {"id": 15347, "code": "import sys\ninput = sys.stdin.readline\nx = 100000;y = 1;z = 1\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "16626": {"id": 16626, "code": "A1 = \"H\";A2 = \"H\"\nif A1 == \"H\":\n  print(A2)\nelse:\n  if A2 == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")", "coverage": [">", ">", ">", "!", "!", "!", "!", "!"]}, "6122": {"id": 6122, "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nad=sorted(a)\nbd=sorted(b)\ncd=sorted(c)\ncount=0\nfor i in range(n):\n  al=bisect.bisect_left(ad,bd[i])\n  cl=bisect.bisect_right(cd,bd[i])\n  sum=al * ( n - cl )\n  count=count+( al * ( n - cl ) )\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14291": {"id": 14291, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nx=[]\nans=1\nfor i in range(n-1):\n  if a[i+1]==a[i]:\n    continue\n  x.append(a[i+1]-a[i])\nflag=True\nfor i in range(len(x)-1):\n  if flag==False:\n    flag=True\n    continue\n  if x[i]<0 and x[i+1]>0 or x[i]>0 and x[i+1]<0:\n    ans+=1\n    flag=False\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3610": {"id": 3610, "code": "a = 20;b = 30\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", "!"]}, "7809": {"id": 7809, "code": "n = 3;k = 3\na = [1, 2, 3]\nans=1\nn-=k\nk-=1\nans+=(n+k-1)//k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8202": {"id": 8202, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans=0\nwhile 1:\n  if N>K:\n    N -= (K-1)\n    ans+=1\n  else:\n    ans+=1\n    break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "948": {"id": 948, "code": "N = 111\nans_list = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nfor i  in ans_list:\n  if i >= N:\n    print(i)\n    break", "coverage": [">", ">", ">", ">", ">", ">"]}, "16050": {"id": 16050, "code": "X = 20;Y = 15\nif X>=2*Y:\n    print(X-2*Y)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "4023": {"id": 4023, "code": "a = [10, 0, 12, 0, 120]\nb = (a[2] * 60 + a[3]) - (a[0] * 60 + a[1])\nprint(b - a[4])", "coverage": [">", ">", ">"]}, "6603": {"id": 6603, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nresult = 0\nfor b in B:\n    result += bisect.bisect_right(A, b - 1) * (N-bisect.bisect_left(C, b + 1))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18540": {"id": 18540, "code": "h = 14\nw = 12\nn = 112\nx = max(h, w)\nprint((n + x - 1) // x)", "coverage": [">", ">", ">", ">", ">"]}, "4864": {"id": 4864, "code": "s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\nans = []\nans.append(s[0])\nans.append(str((len(s)-2)))\nans.append(s[-1])\nprint(\"\".join(ans))", "coverage": [">", ">", ">", ">", ">", ">"]}, "18051": {"id": 18051, "code": "S = \"1700\"\nyear = int(S[0] + S[1])\nmonth = int(S[2] + S[3])\nif year <= 12 and year >= 1 and month >= 1 and month <= 12:\n    print('AMBIGUOUS')\nelif year >= 0 and year <= 99 and month >= 1 and month <= 12:\n    print('YYMM')\nelif year >= 1 and year <= 12 and month >= 0 and month <= 99:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6825": {"id": 6825, "code": "H = 10;N = 3\nA = map(int, \"4 5 6\".split())\na_sum = sum(A)\nif H - a_sum <= 0:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "7384": {"id": 7384, "code": "h = 211;n = 5\ndamage = [31, 41, 59, 26, 53]\nif h - sum(damage) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "1002": {"id": 1002, "code": "N = 750\nif N <= 111:\n    print(111)\nelif N <= 222:\n    print(222)\nelif N <= 333:\n    print(333)\nelif N <= 444:\n    print(444)\nelif N <= 555:\n    print(555)\nelif N <= 666:\n    print(666)\nelif N <= 777:\n    print(777)\nelif N <= 888:\n    print(888)\nelif N <= 999:\n    print(999)\nelse:\n    print(1111)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!"]}, "4094": {"id": 4094, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif m2 >= m1:\n    print((h2 - h1) * 60 + (m2 - m1) - k)\nelse:\n    print((h2-1 - h1) * 60 + (m2 + 60 - m1) - k)", "coverage": [">", ">", ">", "!", "!"]}, "8440": {"id": 8440, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncount =[0]*N\nif N ==1:\n    count[0] =A1[0] +A2[0]\nelse:\n    for i in range(N-1):\n        count[i] =sum(A1[:i+1]) +sum(A2[i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17226": {"id": 17226, "code": "a = \"H\";b = \"H\"\nif a == \"H\": print(b)\nelse: print(\"H\" if b == \"D\" else \"D\")", "coverage": [">", ">", "!"]}, "1589": {"id": 1589, "code": "n = 10;a = 3;b = 5\nprint(f'{min(a,b)} {max(0,a+b-n)}')", "coverage": [">", ">"]}, "11390": {"id": 11390, "code": "S = \"SAT\"\nwait_day = 0\nif S == \"SUN\":\n  wait_day = 7\nelif S == \"MON\":\n  wait_day = 6\nelif S == \"TUE\":\n  wait_day = 5\nelif S == \"WED\":\n  wait_day = 4\nelif S == \"THU\":\n  wait_day = 3\nelif S == \"FRI\":\n  wait_day = 2\nelif S == \"SAT\":\n  wait_day = 1\nprint(wait_day)", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "2322": {"id": 2322, "code": "N = 100;A = 100;B = 100\nif N-A-B >= 0:\n    print(min(A,B),0)\nelse:\n    print(min(A,B),abs(N-A-B))", "coverage": [">", ">", "!", "!", ">"]}, "1759": {"id": 1759, "code": "n = 100;x = 100;y = 100\nmax = min(x,y)\nif n-(x+y) < 0:\n    min = abs(n-x-y)\nelse:\n    min = 0\nprint(max,min)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "1984": {"id": 1984, "code": "n = 100;a = 100;b = 100\nn = int(n)\na = int(a)\nb = int(b)\nif (a > b ) :\n\tmx_x = b\nelse:\n\tmx_x = a\nif ((a+b - n)<0):\n\tmx_y = 0\nelse:\n\tmx_y = a+b-n\nprint(str(mx_x) + ' ' + str(mx_y))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "14576": {"id": 14576, "code": "n = 45;p = 1\nlis = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nodd = [i for i in lis if i % 2==1]\neven = [i for i in lis if i % 2 == 0]\nif len(odd) == 0:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    odd_m = len(odd)\n    even_m = len(even)\n    t1 = 2**even_m\n    t2 = 2**(odd_m-1)\n    print(t1*t2)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6497": {"id": 6497, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(N):\n    b=B[i]\n    ab=bisect.bisect_left(A,b)\n    bc=N-bisect.bisect_right(C,b)\n    ans+=ab*bc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10105": {"id": 10105, "code": "n = 8\na = \"))))((((\"\ncr = 0\ncl = 0\nans = a\nfor i in range(n):\n  if a[i] == \"(\":\n    cl += 1\n  elif a[i] == \")\":\n    cr += 1\n  if cl == 0 and cr != 0:\n    ans = \"(\" + ans\n    cr -= 1\n  if cl != 0 and cr != 0:\n    if cr >= cl:\n      cl, cr = 0,cr-cl\n    else:\n      cl, cr = cl-cr,0\nif cl != 0:\n  for i in range(cl):\n    ans = ans+\")\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "13045": {"id": 13045, "code": "n = 6\nshichigosan={3,5,7}\nif n in shichigosan:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "2260": {"id": 2260, "code": "n = 10;a = 3;b = 5\nprint(min(a,b), a+b-n if a+b-n > 0 else 0)", "coverage": [">", ">"]}, "10983": {"id": 10983, "code": "S = \"level\"\nN = len(S)\nif S==S[::-1] and S[:N//2]==S[:N//2][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "5002": {"id": 5002, "code": "S = \"internationalization\"\ns_num=len(S)-2\nprint(S[0]+str(s_num)+S[-1])", "coverage": [">", ">", ">"]}, "18862": {"id": 18862, "code": "from collections import deque\nn = 2\na = deque(list(map(int, \"10 -10\".split())))\nans = float('inf')\ntotal = sum(a)\nsm = 0\nwhile len(a)>1:\n    sm += a.pop()\n    ans = min(abs(2*sm-total), ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10596": {"id": 10596, "code": "A = 8;B = 12;K = 2\nans_lst = []\nfor i in range(1,min(A,B)+1):\n    if A%i==0 and B%i==0:\n        ans_lst += [i]\nans_lst.reverse()\nprint(ans_lst[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8723": {"id": 8723, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nsumA = [0]*(N+1)\nsumB = [0]*(N+1)\nfor i in range(N):\n    sumA[i+1] = A[i] + sumA[i]\n    sumB[i+1] = B[i] + sumB[i]\nncandy = 0\nfor i in range(1, N+1):\n    nsum = sumA[i] + (sumB[N] - sumB[i-1])\n    if ncandy < nsum:\n        ncandy = nsum\nprint(ncandy)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18845": {"id": 18845, "code": "h = 14\nw = 12\nn = 112\nr = max(h,w)\nif n%r != 0:\n    print(n//r + 1)\nelse:\n    print(int(n/r))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "218": {"id": 218, "code": "S = [3, 2, 1]\nK = 4\nfor i in range(len(S)):\n  if S[i] > K: continue\n  K -= S[i]\n  S[i] = 0\nS[-1] = (S[-1] - K) % 26\nprint(*[chr(ord(\"z\") - (s-1) % 26) for s in S], sep=\"\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15793": {"id": 15793, "code": "X = 12;Y = 3;Z = 1\ncnt = 0\nwhile (X-Z) >= (Z+Y):\n    X -= (Z+Y)\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12150": {"id": 12150, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif (m2 - m1) % 12 == 1:\n    print(1)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "1903": {"id": 1903, "code": "N = 10;A = 3;B = 5\ns = min(A,B)\nt = A+B-N\nif t>=0:\n    print(s,t)\nelse:\n    print(s, 0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3207": {"id": 3207, "code": "a = \"1234567876\"\nb = abs(753 - int(a[:3]))\nfor i in range(1, len(a)-2):\n  c = abs(753 - int(a[i:i+3]))\n  if b >= c :\n    b = c\nprint(b)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "660": {"id": 660, "code": "K = 2\nseven_number = 0\nality = 0\nfor ans in range(1,10**7):\n        if ans > K:\n            print(\"-1\")\n            break\n        else:\n            seven_number = (seven_number*10+7) % K\n            if seven_number ==0:\n                print(ans)\n                break", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "8046": {"id": 8046, "code": "n = 4;k = 3\nA = [2, 3, 1, 4]\nn -= k\nk -= 1\nans = 1\nans += (n+k-1)//k\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6630": {"id": 6630, "code": "import bisect\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nc.sort()\nans=0\nfor i in b:ans+=bisect.bisect_left(a,i)*(n-bisect.bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8861": {"id": 8861, "code": "N = 4\nU = [1, 1, 1, 1]\nD = [1, 1, 1, 1]\nU = U[::-1]\nD = D[::-1]\nup = 0\ndown = 0\nupper = [0]\ndowner = []\nfor i in range(N):\n    up += U[i]\n    down += D[i]\n    upper.append(up)\n    downer.append(down)\nupper = upper[::-1]\ndowner = downer[::-1]\nans = 0\nfor i in range(N):\n    ret = upper[0] - upper[i+1] + downer[i]\n    ans = max(ans, ret)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5076": {"id": 5076, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\ns = \"xyz\"\nn = len(s)-2\nans = s[0] + str(n) + s[-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8790": {"id": 8790, "code": "N = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6721": {"id": 6721, "code": "h = 210;n = 5\nlist_a = [31, 41, 59, 26, 53]\nif h <= sum(list_a): print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", "!"]}, "11449": {"id": 11449, "code": "x = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ny = \"SUN\"\nprint(7-x.index(y))", "coverage": [">", ">", ">"]}, "3386": {"id": 3386, "code": "a = 20;b = 15\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", ">", "!", "!"]}, "6892": {"id": 6892, "code": "H = 20;N = 3\nA = [6, 5, 4]\nprint(\"Yes\") if H - sum(A) <= 0 else print(\"No\")", "coverage": [">", ">", ">"]}, "14084": {"id": 14084, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nstate = \"\"\nfor i in range(N-1):\n    if A[i] > A[i+1] and state == \"\":\n        state = \"minus\"\n    elif A[i] > A[i+1] and state == \"plus\":\n        state = \"\"\n        count += 1\n    elif A[i] > A[i+1] and state == \"minus\":\n        continue\n    elif A[i] < A[i+1] and state == \"\":\n        state = \"plus\"\n    elif A[i] < A[i+1] and state == \"minus\":\n        state = \"\"\n        count += 1\n    elif A[i] < A[i+1] and state == \"plus\":\n        continue\n    else:\n        continue\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1982": {"id": 1982, "code": "n = 10;a = 3;b = 5\nn = int(n)\na = int(a)\nb = int(b)\nif (a > b ) :\n\tmx_x = b\nelse:\n\tmx_x = a\nif ((a+b - n)<0):\n\tmx_y = 0\nelse:\n\tmx_y = a+b-n\nprint(str(mx_x) + ' ' + str(mx_y))", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "7381": {"id": 7381, "code": "h = 10;n = 3\ndamage = [4, 5, 6]\nif h - sum(damage) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "18193": {"id": 18193, "code": "yymm = \"1700\"\nif (1 <= int(yymm[0:2]) and int(yymm[0:2]) <= 12) and (1 <= int(yymm[2:4]) and int(yymm[2:4]) <= 12):\n    print('AMBIGUOUS')\nelif (1 <= int(yymm[0:2]) and int(yymm[0:2]) <= 12) and int(yymm[2:4]) <= 99:\n    print('MMYY')\nelif int(yymm[0:2]) <= 99 and (1 <= int(yymm[2:4]) and int(yymm[2:4]) <= 12):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12248": {"id": 12248, "code": "s = \"atcoder\"\nn = len(s)\nif s != s[::-1]:\n    print('No')\nelif s[:(n-1)//2] != s[:(n-1)//2][::-1]:\n    print('No')\nelif s[(n+3)//2-1:] != s[(n+3)//2-1:][::-1]:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "6496": {"id": 6496, "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans=0\nfor i in range(N):\n    b=B[i]\n    ab=bisect.bisect_left(A,b)\n    bc=N-bisect.bisect_right(C,b)\n    ans+=ab*bc\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13281": {"id": 13281, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "11669": {"id": 11669, "code": "s = \"SUN\"\nans = 0\nif s == 'SUN':\n    ans = 7\nelif s == 'MON':\n    ans = 6\nelif s == 'TUE':\n    ans = 5\nelif s == 'WED':\n    ans = 4\nelif s == 'THU':\n    ans = 3\nelif s == 'FRI':\n    ans = 2\nelif s == 'SAT':\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16524": {"id": 16524, "code": "n = 2\na = [0, 100]\nan = a[-1]\na = a[:n - 1]\nres = 10 ** 9\nans = 0\nif an % 2 == 0:\n    mid_l = an // 2\n    mid_r = an // 2\nelse:\n    mid_l = an // 2\n    mid_r = (an + 1) // 2\nfor i in range(n - 1):\n    if a[i] <= mid_l:\n        if mid_l - a[i] < res:\n            ans = a[i]\n            res = mid_l - a[i]\n    elif mid_r <= a[i]:\n        if a[i] - mid_r < res:\n            ans = a[i]\n            res = mid_r - a[i]\nprint(an, ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14497": {"id": 14497, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nnow = 0\nm = 0\nc = 0\nfor i in l:\n    if now == 0:\n        now = i\n    else:\n        if m == 0:\n            if now < i:\n                m = 1\n            elif now > i:\n                m = -1\n        elif m == 1:\n            if now > i:\n                ans += 1\n                m = 0\n        else:\n            if now < i:\n                ans += 1\n                m = 0\n        now = i\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "2164": {"id": 2164, "code": "N = 10;A = 3;B = 5\nup = min(A,B)\nif A+B >= N:\n  down = A+B-N\nelse:\n  down = 0\nprint(up,down)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "4369": {"id": 4369, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;t = 30\ns1 = h1 * 60 + m1\ns2 = h2 * 60 + m2\nans = s2 - s1 - t\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "17317": {"id": 17317, "code": "N = ['D', 'H']\nif(N[0] == 'H'):\n  if(N[1] == 'H'):\n    print('H')\n  else:\n    print('D')\nelse:\n  if(N[1] == 'H'):\n    print('D')\n  else:\n    print('H')", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "742": {"id": 742, "code": "K = 2\nn = 7\nc = 0\nwhile c <= K:\n  n %= K\n  c += 1\n  if n == 0:\n    print(c)\n    exit()\n  n = n * 10 + 7\nprint(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "4569": {"id": 4569, "code": "S = \"xyz\"\nnumber = len(S)-2\nprint(''.join([S[0],str(number),S[-1]]))", "coverage": [">", ">", ">"]}, "14845": {"id": 14845, "code": "N = 1;P = 1\nl = [50]\nl=[i%2 for i in l]\nif sum(l) == 0:\n   print((P==0)*2**N)\nelse:\n   print(2**(N-1))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "1041": {"id": 1041, "code": "n = 112\nfor i in range(110):\n    if n % 111 == 0:\n        break\n    else:\n        n += 1\nprint(n)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "18009": {"id": 18009, "code": "a = 19;b = 5\nx = \"MM\" if 0 < a < 13 else \"YY\"\ny = \"MM\" if 0 < b < 13 else \"YY\"\nprint(x + y if x != y else \"NA\" if x == \"YY\" else \"AMBIGUOUS\")", "coverage": [">", ">", ">", ">"]}, "17769": {"id": 17769, "code": "s = \"0112\"\na, b = int(s[:2]), int(s[2:])\nr = [\"AMBIGUOUS\", \"YYMM\", \"MMYY\", \"NA\"]\nprint(r[(0 if (0 < b < 13) else 2) + (0 if (0 < a < 13) else 1)])", "coverage": [">", ">", ">", ">"]}, "13180": {"id": 13180, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a, b, c)", "coverage": [">", ">"]}, "0": {"id": 0, "code": "s = ['x', 'y', 'z']\nK = 4\nfor i in range(len(s)):\n    if s[i] == \"a\":\n        continue\n    d = ord(\"z\")-ord(s[i]) + 1\n    if d <= K:\n        s[i] = \"a\"\n        K -= d\nx = (ord(s[-1])-ord(\"a\")+K)%26\ns[-1] = chr(ord(\"a\")+x)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3760": {"id": 3760, "code": "X = 12;Y = 3;Z = 1\nb = Y + 2 * Z\nans = 1\nwhile True:\n  b += Y + Z\n  if b > X:\n    break\n  else:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "886": {"id": 886, "code": "k = 101\nif k%2==0 or k%5==0:\n    print(-1)\nelse:\n    ans = 1\n    res = 7\n    while True:\n        if res%k == 0:\n            print(ans)\n            break\n        res = res*10+7\n        res %= k\n        ans += 1", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17816": {"id": 17816, "code": "S = \"1700\"\nAS = S[:2]\nBS = S[2:]\nif 1<=int(AS)<=12 and 1<=int(BS)<=12:\n    print('AMBIGUOUS')\nelif 1<=int(AS)<=12:\n    print('MMYY')\nelif 1<=int(BS)<=12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "1534": {"id": 1534, "code": "N = 750\nfor i in range(N,1000):\n    if i in [111,222,333,444,555,666,777,888,999]:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">"]}, "17626": {"id": 17626, "code": "z = \"0112\"\nx = int(z[:2])\ny = int(z[2:])\nif (0<x <= 12):\n      if (0<y<= 12):\n            print(\"AMBIGUOUS\")\n      else:\n            print(\"MMYY\")\nelif (0<y <= 12):\n      if (0<x<= 12):\n            print(\"AMBIGUOUS\")\n      else:\n            print(\"YYMM\")\nelse:\n      print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "17172": {"id": 17172, "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    print(b)\nelif a == 'D':\n    if b == 'H':\n        print('D')\n    else:\n        print('H')", "coverage": [">", ">", "!", ">", ">", "!", "!", ">"]}, "9724": {"id": 9724, "code": "n = 3\ns = \"())\"\nss = s\nwhile ss.count('()'):\n    ss = ss.replace('()', '')\nleft, right = ss.count('('), ss.count(')')\nprint('(' * right + s + ')' * left)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16679": {"id": 16679, "code": "a = \"D\";b = \"D\"\nd = {'H':'D','D':'H'}\nif a=='H':\n  print(b)\nelse:\n  print(d[b])", "coverage": [">", ">", ">", "!", "!", ">"]}, "9743": {"id": 9743, "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nnestlv = 0\nnestmax = 0\nnestmin = 0\nlcnt = 0\nrcnt = 0\nfor i in range(n):\n    if s[i] == '(':\n        nestlv = nestlv + 1\n        nestmax = max(nestmax, nestlv)\n    elif s[i] == ')':\n        nestlv = nestlv - 1\n        nestmin = min(nestmin, nestlv)\nans = ''.join(s)\nfor i in range(nestmin*(-1)):\n    ans = '(' + ans\nnestlv = nestlv - nestmin\nif nestlv > 0:\n    for i in range(nestlv):\n        ans = ans + ')'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12067": {"id": 12067, "code": "M_1 = 11;D_1 = 16\nM_2 = 11;D_2 = 17\nprint(0 if M_1 == M_2 else 1)", "coverage": [">", ">", ">"]}, "17254": {"id": 17254, "code": "n = \"D\";m = \"H\"\nprint(\"DH\"[n==m])", "coverage": [">", ">"]}, "3435": {"id": 3435, "code": "x = 20;y = 30\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3864": {"id": 3864, "code": "A = 13;B = 3;C = 1\nprint((A-C)//(B+C))", "coverage": [">", ">"]}, "5456": {"id": 5456, "code": "N = 2\nif N/2 == N//2:\n    print(N//2)\nelse:\n    print(N//2+1)", "coverage": [">", ">", ">", "!", "!"]}, "12540": {"id": 12540, "code": "A = 1;B = 1;K = 1\nprint([n for n in range(1,101) if A%n==0 and B%n==0][-K])", "coverage": [">", ">"]}, "14062": {"id": 14062, "code": "from collections import  deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\ncnt=0\njudge=[]\nfor i in range(n-1):\n    if a[i]<a[i+1]:\n        flag=0\n    elif a[i]>a[i+1]:\n        flag=1\n    elif a[i]==a[i+1]:\n        continue\n    if judge==[]:\n        judge.append(flag)\n    else:\n        ff=judge.pop()\n        if flag==ff:\n            judge.append(flag)\n        else:\n            cnt+=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "11342": {"id": 11342, "code": "s = \"SAT\"\nif s=='SUN':\n    print(7)\nif s=='MON':\n    print(6)\nif s=='TUE':\n    print(5)\nif s=='WED':\n    print(4)\nif s=='THU':\n    print(3)\nif s=='FRI':\n    print(2)\nif s=='SAT':\n    print(1)", "coverage": [">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">"]}, "12694": {"id": 12694, "code": "x = 5\nprint('YES') if x == 3 or x == 5 or x == 7 else print('NO')", "coverage": [">", ">"]}, "7966": {"id": 7966, "code": "import math\nn = 8;k = 3;a = [7, 3, 1, 8, 4, 6, 2, 5]\nprint([math.ceil((n-k)/(k-1))+1,1][n==k])", "coverage": [">", ">", ">"]}, "5968": {"id": 5968, "code": "import math\nN = 5\nans = math.ceil(N / 2.0)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "17900": {"id": 17900, "code": "s = \"1700\"\ntemp1 = int(s[0:2])\ntemp2 = int(s[2:4])\nif temp1 >= 1 and temp1 <= 12:\n    if (temp2 < 1 or temp2 > 12):\n        print(\"MMYY\")\n    else:\n        print(\"AMBIGUOUS\")\nelse:\n    if (temp2 >= 1 and temp2 <= 12):\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "4608": {"id": 4608, "code": "s = \"xyz\"\nprint(f\"{s[0]}{len(s[1:-1])}{s[-1]}\")", "coverage": [">", ">"]}, "4308": {"id": 4308, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nA1 = H1*60+M1\nA2 = H2*60+M2\nprint(max(0,A2-A1-K))", "coverage": [">", ">", ">", ">"]}, "1447": {"id": 1447, "code": "n = 111\ncount = 0\nwhile n > count:\n  count = count + 111\nprint(count)", "coverage": [">", ">", ">", ">", ">"]}, "4433": {"id": 4433, "code": "a = ['s', 'm', 'i', 'l', 'e', 's']\nprint(a[0] + str(len(a) - 2) + a[len(a) - 1])", "coverage": [">", ">"]}, "13936": {"id": 13936, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nup = dn = False\npre = A[0]\nfor a in A[1:]:\n    if pre < a:\n        up = True\n    elif pre > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5669": {"id": 5669, "code": "n = 2\nif n%2!=0:\n  print(n//2+1)\nelse:\n  print(n//2)", "coverage": [">", ">", "!", "!", ">"]}, "5353": {"id": 5353, "code": "import math\nN = 5\nresult=math.ceil(N/2)\nprint(result)", "coverage": [">", ">", ">", ">"]}, "8702": {"id": 8702, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1113": {"id": 1113, "code": "n = 111\na = [111,222,333,444,555,666,777,888,999]\nans = 0\nfor i in a:\n  if n > i:\n    continue\n  ans = i\n  break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18402": {"id": 18402, "code": "h = 14\nw = 12\nn = 112\nans=(n+max(h,w)-1)//max(h,w)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "2085": {"id": 2085, "code": "n = 100;a = 100;b = 100\nhigh=min(a,b)\nlow=max(0,a+b-n)\nprint(high,low)", "coverage": [">", ">", ">", ">"]}, "8395": {"id": 8395, "code": "n = 1\na1 = [2]\na2 = [3]\nini = a1[0]+sum(a2)\nans = ini\nfor i in range(1, n):\n    s = ini - a2[i-1] + a1[i]\n    if s >= ans:\n        ans = s\n    ini = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "16807": {"id": 16807, "code": "a = \"D\";b = \"H\"\nif(a==\"H\" and b==\"D\"):\n\tprint(\"D\")\nelif(a==\"D\" and b==\"H\"):\n\tprint(\"D\")\nelif(a==\"H\" and b==\"H\"):\n\tprint(\"H\")\nelif(a==\"D\" and b==\"D\"):\n\tprint(\"H\")", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "1735": {"id": 1735, "code": "import sys\ninput = sys.stdin.readline\nN = 100;A = 100;B = 100\nif A + B <= N:\n\tprint(min(A, B), 0)\nelse:\n\tprint(min(A, B), (A+B)-N)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3927": {"id": 3927, "code": "arr = ['13', '3', '1']\narr = list(map(int,arr))\nx = arr[0]\ny = arr[1]\nz = arr[2]\ncount = 0\nfor i in range(1,10**10):\n    if i * y + (i+1) * z <= x:\n        count = i\n    else:\n        break\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "1669": {"id": 1669, "code": "n = 100;a = 100;b = 100\np = min(a,b)\nq = max(a+b-n,0)\nprint(str(p) + \" \" + str(q))", "coverage": [">", ">", ">", ">"]}, "17633": {"id": 17633, "code": "s = \"1700\"\nif 0 < int(s[:2]) <13 and 0< int(s[2:]) < 13:\n    print(\"AMBIGUOUS\")\nelif 0 < int(s[:2]) < 13:\n    print(\"MMYY\")\nelif 0 < int(s[2:]) < 13:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "2749": {"id": 2749, "code": "if sorted(map(int, \"1 9 7 4\".split())) == [1, 4, 7, 9]:\n  print('YES')\nelse:\n  print('NO')", "coverage": [">", ">", "!", "!"]}, "2038": {"id": 2038, "code": "a = 100;b = 100;c = 100\nans_a = min(b,c)\nif b+c > a:\n    ans_b = b+c-a\nelse:\n    ans_b = 0\nprint(ans_a,ans_b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9533": {"id": 9533, "code": "date_str = \"2017/01/31\"\nnew_data = date_str.replace('2017', '2018')\nprint(new_data)", "coverage": [">", ">", ">"]}, "8583": {"id": 8583, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12173": {"id": 12173, "code": "from sys import stdin\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 == m2:\n  print(0)\nelse:\n  print(1)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "10040": {"id": 10040, "code": "N = 3\nS = \"())\"\nR=[0 for i in range(N)]\nL=[0 for i in range(N)]\nLL=0\nRR=0\nfor i in range(N):\n  if S[i]=='(':\n    LL+=1\n  else:\n    RR+=1\n  L[i]=LL\n  R[i]=RR\ns=0\nfor i in range(N):\n  s=max(s,R[i]-L[i])\nt=s+L[N-1]-R[N-1]\nprint('('*s+S+')'*t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2559": {"id": 2559, "code": "a = 1;b = 9;c = 7;d = 4\nprint(\"YES\" if {1,9,7,4} == set([a,b,c,d])else \"NO\")", "coverage": [">", ">"]}, "2221": {"id": 2221, "code": "N = 10;A = 3;B = 5\nprint(\"{0} {1}\".format(min(A, B), max(A + B - N, 0)))", "coverage": [">", ">"]}, "13639": {"id": 13639, "code": "s = \"abcde\";t = \"fghihgf\";u = \"edcba\"\nprint(\"{} {} {}\".format(s,t,u))", "coverage": [">", ">"]}, "8169": {"id": 8169, "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nfor i_1 in range(n):\n    if a[i_1]==1:\n        break\nif len(a[:i_1])==0:\n    ans = len(a[i_1+1:])//(k-1)\n    if len(a[i_1+1:])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)\nelif len(a[i_1+1:])==0:\n    ans = len(a[:i_1])//(k-1)\n    if len(a[:i_1])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)\nelse:\n    ans = len(a[:i_1])//(k-1) + 1\n    tmp = ans * (k-1)\n    ans += len(a[tmp+1:])//(k-1)\n    if len(a[tmp+1:])%(k-1)==0:\n        print(ans)\n    else:\n        print(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "4055": {"id": 4055, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\na = m2 - m1\nif a < 0:\n    mm = (h2 - h1 - 1) * 60 + (60 + a)\nelse:\n    mm = (h2 - h1) * 60 + a\nprint(0 if mm - k <= 0 else mm - k)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "13580": {"id": 13580, "code": "S = \"happy,newyear,enjoy\"\nprint(S.replace(\",\",\" \"))", "coverage": [">", ">"]}, "9283": {"id": 9283, "code": "x = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nx[3] = \"8\"\nprint(\"\".join(x))", "coverage": [">", ">", ">"]}, "2324": {"id": 2324, "code": "n = 10;a = 7;b = 5\nprint(\"{} {}\".format((min(a,b)),(max(0,(a+b)-n))))", "coverage": [">", ">"]}, "4979": {"id": 4979, "code": "S = \"smiles\"\nnum = len(S) - 2\nnew = (S[0] + str(num) + S[len(S)-1])\nprint(new)", "coverage": [">", ">", ">", ">"]}, "5716": {"id": 5716, "code": "n = 5\na = n / 2\nif n % 2 == 0:\n    print(int(a))\nelse:\n    print(int(a)+1)", "coverage": [">", ">", ">", "!", "!", ">"]}, "13873": {"id": 13873, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nsq = 0\na = A[0]\nfor i in range(1,n):\n    if sq == 0 and A[i] < a:\n        sq = -1\n    elif sq == 0 and A[i] > a:\n        sq = 1\n    elif (sq == 1 and A[i] < a) or (sq == -1 and A[i] > a):\n        ans += 1\n        sq = 0\n    a = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "489": {"id": 489, "code": "s = ['x', 'y', 'z']\nK = 4\nN = len(s)\nalp = [chr(i) for i in range(97, 97+26)]\nfor i in range(N):\n    idx = alp.index(s[i])\n    if K + idx >= 26 and idx != 0:\n        K = K - ( 26 - idx )\n        s[i] = 'a'\n    if K == 0:\n        break\nif K > 0:\n    id = alp.index(s[N-1])\n    id_ = ( id + K ) % 26\n    s[N-1] = alp[id_]\nprint(''.join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "2561": {"id": 2561, "code": "a = 4;b = 9;c = 0;d = 8\nprint(\"YES\" if {1,9,7,4} == set([a,b,c,d])else \"NO\")", "coverage": [">", ">"]}, "5538": {"id": 5538, "code": "n = 100\ngou=n//2\ngou+=n%2\nprint(gou)", "coverage": [">", ">", ">", ">"]}, "212": {"id": 212, "code": "s = \"xyz\"\nk = 4\nslen = len(s)\nnew_s = \"\"\nfor i in range(slen):\n  val = (ord(\"z\") + 1 - ord(s[i])) % 26\n  if k >= val:\n    k -= val\n    new_s += \"a\"\n  else:\n    new_s += s[i]\nif k > 0:\n  tmp_val = ord(new_s[slen-1]) + k % 26\n  if tmp_val > ord(\"z\"):\n    tmp_val -= 26\n  new_s = new_s[:-1] + chr(tmp_val)\nprint(new_s)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "7503": {"id": 7503, "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nres = \"No\"\nfor i in range(n):\n  h -= a[i]\n  if h <= 0:\n    res = \"Yes\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6716": {"id": 6716, "code": "h = 20;n = 3\na = [4, 5, 6]\nif h <= sum(a):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", "!", "!", ">"]}, "5070": {"id": 5070, "code": "s = \"xyz\"\ns_len = len(s)\nhead, tail = s[0], s[s_len - 1]\nprint(head + str(s_len - 2) + tail)", "coverage": [">", ">", ">", ">"]}, "5108": {"id": 5108, "code": "S = \"smiles\"\na=S[0]\nb=S[-1]\nc=len(S)-2\nt=a+'%s' %c +b\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3063": {"id": 3063, "code": "S = \"1111111111\"\nans = 10**4\nfor i in range(len(S) - 2):\n    a = abs(int(S[i: i + 3]) - 753)\n    if a < ans:\n        ans = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9603": {"id": 9603, "code": "s = \"2017/01/31\"\nprint(\"2018/01/\" + s[-2] + s[-1])", "coverage": [">", ">"]}, "12188": {"id": 12188, "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 in [1, 3, 5, 7, 8, 10, 12]:\n    if D1 == 31:\n        print(1)\n    else:\n        print(0)\nelif M1 in [4, 6, 9, 11]:\n    if D1 == 30:\n        print(1)\n    else:\n        print(0)\nelif M1 == 2:\n    if D1 == 28:\n        print(1)\n    else:\n        print(0)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "2143": {"id": 2143, "code": "n = 10;a = 3;b = 5\nmaxab = min(a, b)\nminab = (a+b)-n\nif minab < 0:\n  minab = 0\nprint(maxab, minab)", "coverage": [">", ">", ">", ">", ">", ">"]}, "6486": {"id": 6486, "code": "from bisect import bisect_left,bisect_right\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [58, 9, 79, 323, 84, 6]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(n):\n    bc=n-bisect_right(c,b[i])\n    ba=bisect_left(a,b[i])\n    ans+=bc*ba    \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2306": {"id": 2306, "code": "n = 10;a = 7;b = 5\nans1=min(a,b)\nif a+b>n:\n    ans2=a+b-n\nelse:\n    ans2=0\nprint(ans1,ans2)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "16268": {"id": 16268, "code": "n = 2\na = [100, 0]\nn1=max(a)\nn2=-n1\nnc=n1/2\na.pop(a.index(max(a)))\nfor m in a:\n  if abs(m-nc)<abs(n2-nc):\n    n2=m\nprint (n1,n2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5081": {"id": 5081, "code": "S = ['s', 'm', 'i', 'l', 'e', 's']\nprint(S[0]+str(len(S)-2)+S[len(S)-1])", "coverage": [">", ">"]}, "18535": {"id": 18535, "code": "import math\nh = 2\nw = 100\nn = 200\nprint(min(math.ceil(n / w), math.ceil(n / h)))", "coverage": [">", ">", ">", ">", ">"]}, "14623": {"id": 14623, "code": "n = 2;p = 0\na = [1, 1]\ncnt0 = a.count(0)\ncnt1 = n-cnt0\nif cnt0==n and p==0:\n    print(2**n)\nelif cnt0==n and p==1:\n    print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "32": {"id": 32, "code": "s = \"a\"\nk = 25\nl=list(s)\nfor i in range(len(s)):\n  f=(-ord(s[i])+ord(\"z\")+1)%26\n  if f<=k:\n    l[i]=\"a\"\n    k-=f\nk=k%26\na=ord(l[-1])+k \nif a> ord(\"z\"):a-=26\nl[-1]=chr(a)\nprint(\"\".join(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15654": {"id": 15654, "code": "x = 100000;y = 1;z = 1\na=x//(y+z)\nprint(a-1 if a*(y+z)+z>x else a)", "coverage": [">", ">", ">"]}, "15324": {"id": 15324, "code": "x = 12;y = 3;z = 1\np = 1\nfor i in range(x//y):\n    if x-(p+2)*z-p*y<y:\n        break\n    else:\n        p+=1\nprint(p)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "12050": {"id": 12050, "code": "a = 11;b = 30\nc = 12;d = 1\nprint(1 if c != a else 0)", "coverage": [">", ">", ">"]}, "15055": {"id": 15055, "code": "N = 2;P = 0\nodd = 2\neven = N-odd\nif odd == 0:\n    if P == 0:\n        print(2**even)\n    else:  \n        print(0)\nelse:\n    print(2**even * (2**odd//2))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "9235": {"id": 9235, "code": "import sys\nS = \"2017/01/31\"\nif len(S) != 10:\n    sys.exit()\nif S[0:8] != '2017/01/':\n    sys.exit()\nif not (1 <= int(S[-2:]) <= 31):\n    sys.exit()\nprint(S.replace('2017','2018'))", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "2053": {"id": 2053, "code": "N = 100;A = 100;B = 100\nif N > A+B:\n  mini = 0\nelse:\n  mini = A+B-N\nprint(str(min(A, B)) + \" \" + str(mini))", "coverage": [">", ">", "!", "!", ">", ">"]}, "3582": {"id": 3582, "code": "a = 20;b = 30\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "7099": {"id": 7099, "code": "h = 10;n = 3\na = [4, 5, 6]\nif h<=sum(a):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "13711": {"id": 13711, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nokiteru = h2 * 60 + m2 - (h1 * 60 + m1)\nprint(okiteru - k)", "coverage": [">", ">", ">"]}, "2121": {"id": 2121, "code": "n = 100;a = 100;b = 100\nma = min(a,b)\nmi = max(ma - (n - max(a,b)), 0)\nprint(ma,mi)", "coverage": [">", ">", ">", ">"]}, "18128": {"id": 18128, "code": "S = 1905\nL = S // 100 \nR = S % 100 \nif L > 12 or L == 0:\n  if R > 12 or R == 0: print('NA')\n  else: print('YYMM')\nelse:\n  if R > 12 or R == 0: print('MMYY')\n  else: print('AMBIGUOUS')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!"]}, "14039": {"id": 14039, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nflg = 0\nrev = 0 \nfor c,n in zip(A, A[1:]):\n    if not flg:\n        if c < n:\n            flg = 1\n        elif c > n:\n            flg = 1\n            rev = 1\n    else:\n        if rev:\n            c = -c\n            n = -n\n        if c > n:\n            ans += 1\n            flg = 0\n            rev = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "12796": {"id": 12796, "code": "X = 5\nprint( \"YES\" if X%2 == 1 and X != 1 and X != 9 else \"NO\")", "coverage": [">", ">"]}, "11587": {"id": 11587, "code": "S = \"SUN\"\nyoubi =['MON','TUE','WED','THU','FRI','SAT','SUN']\nnissu = 6-youbi.index(S)\nif nissu == 0:\n    nissu = 7\nprint(nissu)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8550": {"id": 8550, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3679": {"id": 3679, "code": "a = 20;b = 15\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "7563": {"id": 7563, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nAA = sum(A)\nif AA >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "456": {"id": 456, "code": "s = \"a\"\nk = 25\nn=len(s)\ni=0\nans=\"\"\nwhile i<n:\n    if i!=n-1:\n        if s[i]==\"a\":\n            ans+=\"a\"\n        elif k>=123-ord(s[i]):\n            ans+=\"a\"\n            k-=(123-ord(s[i]))\n        else:\n            ans+=s[i]\n    else:\n        if k>=123-ord(s[i]):\n            k-=(123-ord(s[i]))\n            k=k%26\n            ans+=chr(97+k)\n        else:\n            ans+=chr(ord(s[i])+k)\n    i+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">"]}, "18471": {"id": 18471, "code": "h = 14\nw = 12\nn = 112\nprint(min(-(-n//h),-(-n//w)))", "coverage": [">", ">", ">", ">"]}, "15682": {"id": 15682, "code": "X = 64146;Y = 123;Z = 456\nwidth = X - 2 * Z\nif width < Y:\n  print(0)\n  exit()\nnum = (width - Y) // ( Y + Z)\nprint(num + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5982": {"id": 5982, "code": "import math\nS = 100\nif S%2==0:\n    print(int(S/2))\nelse:\n    print(int(S//2)+1)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13972": {"id": 13972, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nans = 0\nwhile i < N:\n    j = i\n    while j < N-1 and A[j]<=A[j+1]:\n        j += 1\n    k = i\n    while k < N-1 and A[k]>=A[k+1]:\n        k += 1\n    ans += 1\n    i = max(j, k) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18551": {"id": 18551, "code": "H = 3\nW = 7\nN = 10\nc=0\nch=0\ncw=0\nwhile c<N:\n    if H-cw>W-ch:\n        c+=H-cw\n        ch+=1\n    else:\n        c+=W-ch\n        cw+=1\nprint(ch+cw)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "18137": {"id": 18137, "code": "S = \"1905\"\nmmyy=1<=int(S[:2])<=12\nyymm=1<=int(S[2:])<=12\nl=[['AMBIGUOUS','MMYY'],['YYMM','NA']]\nprint(l[not mmyy][not yymm])", "coverage": [">", ">", ">", ">", ">"]}, "8949": {"id": 8949, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2875": {"id": 2875, "code": "S = \"1234567876\"\nans = 10**9\nfor i in range(len(S)):\n    s = int(S[i:i+3])\n    val = abs(753 - s)\n    if val < ans:\n        ans = val\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5661": {"id": 5661, "code": "N = 100\nif N%2 == 0:\n    print(N//2)\nelif N%2 != 0:\n    print(N//2+1)", "coverage": [">", ">", ">", "!", "!"]}, "6592": {"id": 6592, "code": "from bisect import bisect_right,bisect_left\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\nfor i in b:ans+=bisect_left(a,i)*(n-bisect_right(c,i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13885": {"id": 13885, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nif n == 1 or n == 2:\n  ans = 1\nelse:\n  b = [a[0], a[1]]\n  if a[1] - a[0] > 0:\n    f = '+'\n  elif a[1] - a[0] < 0:\n    f = '-'\n  elif a[1] - a[0] == 0:\n    f = ''\n  for i in range(2, n):\n    if f == '+' and a[i] - b[-1] >= 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '+' and a[i] - b[-1] < 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '-' and a[i] - b[-1] <= 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '-' and a[i] - b[-1] > 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '' and a[i] - b[-1] > 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '' and a[i] - b[-1] < 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '' and a[i] - b[-1] == 0:\n      b.append(a[i])\n      f = ''\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14460": {"id": 14460, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nfor a in A:\n  right, right2 = i, i\n  while right+1 < N and A[right] <= A[right+1]: right += 1\n  while right2+1 < N and A[right2] >= A[right2+1]: right2 += 1\n  i = max(right, right2) + 1\n  ans += 1\n  if i >= N: break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7522": {"id": 7522, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nh = 20;n = 3\na = [4, 5, 6]\nif sum(a)>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16770": {"id": 16770, "code": "a = \"H\";b = \"H\"\nif (a == b): print('H')\nelse:print('D')  ", "coverage": [">", ">", "!"]}, "6006": {"id": 6006, "code": "N = 100\nif(N%2==0):\n  print(N//2)\nelse:\n  print((N+1)//2)", "coverage": [">", ">", ">", "!", "!"]}, "9834": {"id": 9834, "code": "_ = \"3\"\nS = \"())\"\nneeds_right = 0\nneeds_left = 0\nfor c in S:\n    if c == '(':\n        needs_right += 1\n    else:\n        if needs_right == 0:\n            needs_left += 1\n        else:\n            needs_right -= 1\nprint('(' * needs_left + S + ')' * needs_right)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "16553": {"id": 16553, "code": "a = \"D\";b = \"D\"\nprint('H' if a == b else 'D')", "coverage": [">", ">"]}, "3025": {"id": 3025, "code": "S = \"35753\"\nL = len(S)\nres = float(\"inf\")\nfor i in range(L-2):\n    res = min(abs(int(S[i:i+3]) - 753), res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12980": {"id": 12980, "code": "a = \"5\"\nif a in \"753\":\n    print(\"YES\")\nelse:\n    print(\"NO\")", "coverage": [">", ">", ">", "!", "!"]}, "2219": {"id": 2219, "code": "N = 10;A = 7;B = 5\nlargest = min(A, B)\nminimum = max(0, A + B - N)\nprint(largest, minimum)", "coverage": [">", ">", ">", ">"]}, "2233": {"id": 2233, "code": "N = 10;A = 3;B = 5\nA_N = N - A\nB_N = N - B\nprint(min(A,B) , max(0,A + B - N))", "coverage": [">", ">", ">", ">"]}, "19181": {"id": 19181, "code": "N = 12\nN1 = N // 10\nif N % 2 == 1:\n    print(0)\nelse:\n    counter = 0\n    div = 10\n    while True:\n        num = N // div\n        if num == 0:\n            break\n        counter += num\n        div *= 5\n    print(counter)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "533": {"id": 533, "code": "X='abcdefghijklmnopqrstuvwxyz'*2\nS = \"a\"\nk = 25\nN=[]\nfor s in S:\n    if s=='a':\n        N.append(0)\n    else:\n        N.append(26-X.index(s))\nans=''\nfor i in range(len(S)):\n    if N[i]<=k :\n        k-=N[i]\n        ans+='a'\n    else:\n        ans+=S[i]\nans=ans[:-1]+X[X.index(ans[-1])+k%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19410": {"id": 19410, "code": "n = 999999999\nprint(n if n % 2 == 0 else 2 * n)", "coverage": [">", ">"]}, "16148": {"id": 16148, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort(reverse=True)\nideal = a[0]//2\ndif_mn = 10**9\nfor i in range(1,n):\n    tmp = a[0]-a[i] if a[i] > ideal else a[i]\n    dif = ideal-tmp\n    if dif < dif_mn:\n        r = a[i]\n        dif_mn = dif\nprint(a[0], r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2882": {"id": 2882, "code": "S = \"35753\"\nM=1000\nN=len(S)\nfor i in range(N-2):\n  M=min(abs(753-int(S[i]+S[i+1]+S[i+2])),M)\nprint(M)", "coverage": [">", ">", ">", ">", ">", ">"]}, "3454": {"id": 3454, "code": "a = 12;b = 4\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "9371": {"id": 9371, "code": "s = \"2017/01/31\"\nprint(\"2018/01/\" + s[8::])", "coverage": [">", ">"]}, "2833": {"id": 2833, "code": "S = \"1234567876\"\nans = 99999\nans_s = 99999\nfor i in range(0,len(S)-2):\n    s = int(S[i:i+3])\n    ans = min(ans,abs(s-753))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2167": {"id": 2167, "code": "n = 10;a = 3;b = 5\nif a+b>=n:\n    c = a+b-n\nelse:\n    c = 0\nprint(min(a,b), c)", "coverage": [">", ">", "!", "!", ">", ">"]}, "2351": {"id": 2351, "code": "N = 1;W = 1\ntotal1 = 0\ntotal2 = 0\nif N>1:\n  total1 = N*(N-1)//2\nelse:\n  total1 = 0\nif W>=2:\n  total2 = W*(W-1)//2\nelse:\n  total2 = 0\nprint(total1+total2)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "9244": {"id": 9244, "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3] = '8'\nprint(*S, sep=\"\")", "coverage": [">", ">", ">"]}, "19190": {"id": 19190, "code": "N = 5\nif N%2 == 1:\n    print(0)\nelse:\n    cnt = 0\n    for i in range(1,N):\n        if N >= 2*(5**i):\n            cnt += N // (2*(5**i))\n        else:\n            break\n    print(cnt)        ", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "356": {"id": 356, "code": "s = \"a\"\nk = 25\nalp = 'bcdefghijklmnopqrstuvwxyza'\nt = alp.find(s[0])\nif len(s) == 1:\n    s = alp[(k+t)%26]\nelse: \n    if k >= 25-t:\n        s = 'a' + s[1:]\n        k -= 25-t\n    for i in range(1, len(s)-1):\n        t = alp.find(s[i])\n        if k >= 25-t:\n            s = s[:i] + 'a' + s[i+1:]\n            k -= 25-t\n    s = s[:len(s)-1] + alp[(k+alp.find(s[-1]))%26]\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14321": {"id": 14321, "code": "N = 6\nans = 1\nA = [1, 2, 3, 2, 2, 1]\nprev = A[0]\ntrend = 0\nfor a in A[1:]:\n    if (a - prev) * trend < 0:\n        ans += 1\n        trend = 0\n    elif trend == 0:\n        if a - prev > 0:\n            trend = 1\n        elif a - prev < 0:\n            trend = -1\n    prev = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16726": {"id": 16726, "code": "a = \"D\";b = \"H\"\nx= (a==\"H\")\ny=(b==\"H\")\nif x and y or not x and not y:\n  print(\"H\")\nelse:\n  print(\"D\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15309": {"id": 15309, "code": "X = 12;Y = 3;Z = 1\nX -= Y + 2 * Z\nans = X // (Y + Z) + 1\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "9950": {"id": 9950, "code": "N = 8\nS = \"))))((((\"\nl, r = 0, 0\nfor s in S:\n    if s == \"(\":\n        l += 1\n    else:\n        r += 1\n        if l > 0:\n            l -= 1\n            r -= 1\nprint(\"(\"*r+S+\")\"*l)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "13533": {"id": 13533, "code": "n = \"haiku,atcoder,tasks\"\nfor i in n:\n    if i==\",\":\n        n=n.replace(\",\",\" \")\nprint(n)", "coverage": [">", ">", ">", ">", ">"]}, "3285": {"id": 3285, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 12;B = 4\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "7143": {"id": 7143, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nfor i in range(N) :\n    H = H - A[i]\nif H > 0 :\n    print(\"No\")\nelse :\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18631": {"id": 18631, "code": "x = 2\ny = 100\nz=max(x,y)\nprint(-int(\"200\")//z*-1)", "coverage": [">", ">", ">", ">"]}, "14014": {"id": 14014, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nc = 1\ni = 0\nwhile i < N - 1:\n    if A[i] < A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] > A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] > A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] < A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] == A[i + 1]:\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "12082": {"id": 12082, "code": "m = 11;d = 30\nm2 = 12;d2 = 1\nif(m!=m2):\n  print(1)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "13362": {"id": 13362, "code": "icase=0\nif icase==0:\n    s = \"haiku,atcoder,tasks\"\n    ss=s[0:5]+\" \"+s[6:13]+\" \"+s[14:19]\n    print(ss)", "coverage": [">", ">", ">", ">", ">"]}, "15322": {"id": 15322, "code": "x = 64145;y = 123;z = 456\nprint((x - 1 * z) // (y + z))", "coverage": [">", ">"]}, "14597": {"id": 14597, "code": "n = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nflg = True\nfor i in a:\n    if i % 2 != 0:\n        flg = False\n        break\nif flg:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    print(2**(n-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "10002": {"id": 10002, "code": "N = 8\nS = [')', ')', ')', ')', '(', '(', '(', '(']\nL = 0\nout = []\nout2 = []\nfor i in range(N):\n    X = S[i]\n    if X==\"(\":\n        L += 1\n        out.append(\"(\")\n    elif X==\")\":\n        if L>0:\n            L += -1\n            out.append(\")\")\n        else:\n            out2.append(\"(\")\n            out.append(\")\")\nfor i in range(L):\n    out.append(\")\")\nprint(\"\".join(out2)+\"\".join(out))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13198": {"id": 13198, "code": "s_in = \"abcde,fghihgf,edcba\"\ns_out = s_in.replace(\",\", \" \", 2)\nprint(s_out)", "coverage": [">", ">", ">"]}, "3358": {"id": 3358, "code": "a = 12;b = 4\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "6978": {"id": 6978, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\natk = 0\nfor i in A:\n    atk += i\nif H > atk:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "18075": {"id": 18075, "code": "s = \"1700\"\ns_a = int(s[:2])\ns_b = int(s[2:])\nif s_a >= 1 and s_a <=12 and s_b >= 1 and s_b <=12:\n  ans = \"AMBIGUOUS\"\nelif (s_a > 12 or s_a == 0) and s_b >= 1 and s_b <=12:\n  ans = \"YYMM\"\nelif (s_b > 12 or s_b == 0) and s_a >= 1 and s_a <=12:\n  ans = \"MMYY\"\nelse:\n  ans = \"NA\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "6542": {"id": 6542, "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nC.sort()\nimport bisect\nret = 0\nfor b in B:\n    i = bisect.bisect_left(A, b)\n    j = bisect.bisect_right(C, b)\n    ret += i * (N - j)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10869": {"id": 10869, "code": "s = ['l', 'e', 'v', 'e', 'l']\nn = len(s)\na = (n - 1) // 2\nb = (n + 3) // 2\njudge = 1\nfor i in range(n // 2):\n  if s[i] != s[-(i + 1)]:\n    judge = 0\n    break\nif judge == 0:\n  print('No')\nelse:\n  al = s[:a]\n  bl = s[b - 1:]\n  for j in range(a // 2):\n    if al[j] != al[-(j + 1)]:\n      judge = 0\n      break\n  if judge == 0:\n    print('No')\n  else:\n    for k in range((n - b) // 2):\n      if bl[k] != bl[-(k + 1)]:\n        judge = 0\n        break\n    if judge == 0:\n      print('No')\n    else:\n      print('Yes')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8602": {"id": 8602, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2651": {"id": 2651, "code": "a = \"4 9 0 8\"\nnum1 = a.count(\"1\")\nnum9 = a.count(\"9\")\nnum7 = a.count(\"7\")\nnum4 = a.count(\"4\")\nif num1 == 1 and num9 == 1 and num7 == 1 and num4 == 1:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4448": {"id": 4448, "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nresult = s[0] + str(len(s) - 2) + s[len(s) - 1]\nprint(result)", "coverage": [">", ">", ">"]}, "19407": {"id": 19407, "code": "n = 10\nif(n%2==1):n*=2\nprint(n)", "coverage": [">", ">", ">"]}, "10751": {"id": 10751, "code": "S = \"akasaka\"\nS1 = S[0:((len(S) - 1) // 2)]\nS2 = S[((len(S) + 3) // 2 - 1):]\nif S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1]:\n\tprint('Yes')\nelse:\n\tprint('No')", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "16070": {"id": 16070, "code": "a = \"12\";b = \"4\"\nc = int(a)-(2*int(b))\nif c >= 0:\n    print(c)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "1296": {"id": 1296, "code": "n = 750\nif n//100<(n%100)//10 or (n//100==(n%100)//10 and n//100<(n%10)):\n  print(((n//100)+1)*111)\nelse:\n  print((n//100)*111)", "coverage": [">", ">", "!", "!", ">"]}, "1216": {"id": 1216, "code": "N = 750\nf = 0\nfor i in range(1, 10):\n  if N <= i * 111:\n    print(i * 111)\n    f = 1\n    break\nif f == 0:\n  print(1111)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "18614": {"id": 18614, "code": "row = 3\ncolmun = 7\ntop = 10\nlow, high = 0,0\nif row <= colmun:\n  low, high = row, colmun\nelse:\n  low, high = colmun, row\nfor n in range(low):\n  if (n + 1) * high >= top:\n    print(n + 1)\n    break", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "17540": {"id": 17540, "code": "s = \"1700\"\naa = int(s[0])*10 + int(s[1])\nbb = int(s[2])*10 + int(s[3])\nif 1 <= aa <= 12 and 1 <= bb <= 12 :\n    print(\"AMBIGUOUS\")\nelif 1 <= aa <= 12 and bb == 0 :\n    print(\"MMYY\")\nelif 1 <= aa <= 12 and 13 <= bb :\n    print(\"MMYY\")\nelif aa == 0 and 1<= bb <= 12 :\n    print(\"YYMM\")\nelif 13<=aa and 1<=bb<=12 :\n    print(\"YYMM\")\nelse :\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "9866": {"id": 9866, "code": "n = 3\ns = \"())\"\nmn=0\nsm=0\nfor i in range(n):\n  sm+=1 if s[i]==\"(\" else -1\n  mn=min(mn,sm)\nmn*=-1\nprint(\"(\"*mn+s+\")\"*(sm+mn))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2210": {"id": 2210, "code": "n = 10;a = 7;b = 5\nprint(a if a<b else b, 0 if a+b<n else a+b-n)", "coverage": [">", ">"]}, "7987": {"id": 7987, "code": "n = 3;k = 3\na = [1, 2, 3]\ncount=1\nn=n-k\nwhile(n>0):\n    n=n-(k-1)\n    count+=1\nprint(count)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "11694": {"id": 11694, "code": "D=['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']\nS = \"SAT\"\nans=6-D.index(S)\nif ans == 0:\n\tans=7\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">"]}, "18693": {"id": 18693, "code": "H = 14\nW = 12\nN = 112\ncount1 = 0\ncount2 = 0\nfor i in range(1,W+1):\n    count1 += 1\n    if i*H >= N:\n        break\nfor j in range(1,H+1):\n    count2 += 1\n    if j*W >= N:\n        break\nif count1 > count2:\n    print(count2)\nelse:\n    print(count1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9440": {"id": 9440, "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[0:4]=[\"2\",\"0\",\"1\",\"8\"]\nprint(\"\".join(s))", "coverage": [">", ">", ">"]}, "8540": {"id": 8540, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6328": {"id": 6328, "code": "import bisect\nN = 6\nA = [2, 3, 6, 14, 53, 159]\nB = [6, 9, 58, 79, 84, 323]\nC = [2, 50, 79, 288, 383, 2643]\nans = 0\nb = []\nfor i in range(N):\n    b.append(N - bisect.bisect_left(C,B[i]+1))\nb.append(0)\nfor i in range(N-1,-1,-1):\n    b[i] += b[i+1]\nans = 0\nfor i in range(N):\n    ans += b[bisect.bisect_left(B, A[i]+1)]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3938": {"id": 3938, "code": "x = 13;y = 3;z = 1\nn = z\ncnt = 0\nwhile n + (y + z) <= x:\n  n += (y + z)\n  cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18172": {"id": 18172, "code": "s = \"1700\"\nfirst_two=int(''.join(s[:2]))\nlast_two=int(''.join(s[2:]))\nif 1<=first_two<=12 and 1<=last_two<=12:\n  print('AMBIGUOUS')\nelif 1<=last_two<=12:\n  print('YYMM')\nelif 1<=first_two<=12:\n  print('MMYY')\nelse:\n  print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18112": {"id": 18112, "code": "s = \"1700\"\na, b = int(s[:2]), int(s[2:])\nym, my = False, False\nif a > 0 and a <13:\n    my = True\nif b > 0 and b <13:\n    ym = True\nif ym and my:\n    print('AMBIGUOUS')\nelif ym and not my:\n    print('YYMM')\nelif not ym and my:\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "6075": {"id": 6075, "code": "n = 100\na = n // 2 + n % 2\nprint(a)", "coverage": [">", ">", ">"]}, "1939": {"id": 1939, "code": "n = 10;a = 3;b = 5\nMAX = min(a, b)\nMIN = max(0, a+b-n)\nprint(MAX, MIN)", "coverage": [">", ">", ">", ">"]}, "1137": {"id": 1137, "code": "str_n = \"111\"\ntemp = int(str_n[0])\ntemp = 111*temp\nint_n = int(str_n)\nif int_n > temp:\n  temp = int(str_n[0])\n  temp = temp+1\n  print(111*temp)\nelse:\n  temp = int(str_n[0])\n  print(111*temp)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "5795": {"id": 5795, "code": "N = 2\nr = (N +2-1)//2\nprint(r)", "coverage": [">", ">", ">"]}, "8885": {"id": 8885, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17366": {"id": 17366, "code": "S = \"1700\"\nflag1 = False\nflag2 = False\nif 0 <= int(S[:2]) <= 99 and 1 <= int(S[2:]) <= 12:\n    flag1 = True\nif 1 <= int(S[:2]) <= 12 and 0 <= int(S[2:]) <= 99:\n    flag2 = True\nif flag1 and not flag2:\n    print(\"YYMM\")\nelif not flag1 and flag2:\n    print(\"MMYY\")\nelif flag1 and flag2:\n    print(\"AMBIGUOUS\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">"]}, "11418": {"id": 11418, "code": "days = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nS = \"SAT\"\nif S == \"SUN\":\n    print(7)\nelse:\n    print(days.index(\"SUN\") - days.index(S))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3576": {"id": 3576, "code": "from sys import stdin\na = 20;b = 30\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "6764": {"id": 6764, "code": "H = 211;N = 5\nA = \"31 41 59 26 53\"\nlist_A=A.split()\nwaza=0\nfor i in range(0,N):\n    waza=waza+int(list_A[i])\nif waza>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3800": {"id": 3800, "code": "import sys\nsys.setrecursionlimit(10**6)\nx = 64146;y = 123;z = 456\nprint((x-z)//(y+z))", "coverage": [">", ">", ">", ">"]}, "18125": {"id": 18125, "code": "s = \"1905\"\na = int(s[0]) * 10 + int(s[1])\nb = int(s[2]) * 10 + int(s[3])\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif 1 <= a <= 12:\n    print('MMYY')\nelif 1 <= b <= 12:\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "4331": {"id": 4331, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nt = 0\nif h1 == h2:\n    t = m2 - m1\nelse:\n    if m2 >= m1:\n        t = (h2 - h1) * 60 + m2 - m1\n    else:\n        t = (h2 - h1 -1) * 60 + m2 +60 - m1\nprint(t - k)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "11747": {"id": 11747, "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(m2 - m1)", "coverage": [">", ">", ">"]}, "8782": {"id": 8782, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15405": {"id": 15405, "code": "a = \"13\";b = \"3\";c = \"1\"\na=int(a)\nb=int(b)\nc=int(c)\nprint((a-c)//(b+c))", "coverage": [">", ">", ">", ">", ">"]}, "8542": {"id": 8542, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14784": {"id": 14784, "code": "n = 1;p = 1\na = [50]\no = 0\nfor i in a:\n    if  i % 2:\n        o += 1 \ne = n-o\nif o != 0:\n    print((2**e)*int(2**(o-1)))\nelse:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", "!", "!", ">"]}, "13445": {"id": 13445, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(\",\", \" \"))", "coverage": [">", ">"]}, "8146": {"id": 8146, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 0\ni = 0\nwhile True:\n    if i*(K-1) >= N-1:\n        break\n    ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10493": {"id": 10493, "code": "A = 100;B = 50;K = 4\nC=[]\nfor i in range(1,(min(A,B))+1):\n    if A%i==0 and B%i==0:\n        C.append(i)\nC.sort()\nprint(C[len(C)-K])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4970": {"id": 4970, "code": "S = \"smiles\"\nprefix = S[0]\nsufix = S[-1]\ncontent = str(len(S[1:-1]))\nprint(prefix + content + sufix)", "coverage": [">", ">", ">", ">", ">"]}, "8074": {"id": 8074, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nA.sort()\nfor i in range(1, N):\n    if A[i] != A[0]:\n        idx = i\n        break\nif (N - idx) % (K - 1) == 0:\n    print(int((N - idx) / (K - 1)))\nelse:\n    print(int((N - idx) / (K - 1)) + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "997": {"id": 997, "code": "n = 750\nif n % 100 <= n // 100 * 11:\n  print(n // 100 * 111)\nelse:\n  print((n // 100 + 1) * 111)", "coverage": [">", ">", ">", "!", "!"]}, "6513": {"id": 6513, "code": "N = 2\nA = map(int, \"1 5\".split())\nB = map(int, \"2 4\".split())\nC = map(int, \"3 6\".split())\nL = []\nL.extend(((x, 3)  for x in A))\nL.extend(((x, 2)  for x in B))\nL.extend(((x, 1)  for x in C))\nL = sorted(L, reverse=True)\ncnt_C = 0\ncnt_B = 0\ncnt_A = 0\nfor x, i in L:\n    if i == 1:\n        cnt_C += 1\n    elif i == 2:\n        cnt_B += cnt_C\n    elif i == 3:\n        cnt_A += cnt_B\nprint(cnt_A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3347": {"id": 3347, "code": "A = 20;B = 15\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "3256": {"id": 3256, "code": "a = 20;b = 15\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "11912": {"id": 11912, "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n  print(\"1\")\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "19245": {"id": 19245, "code": "import math\nn = 12\nten_counter = 0\nexp_index = math.log(10 ** 18, 5)\nif n % 2 == 0:\n    n //= 2\n    for i in range(1, int(exp_index) + 1):\n        if n // (5 ** i) == 0:\n            break\n        else:\n            ten_counter += n // (5 ** i)\nelse:\n    pass\nprint(ten_counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "15318": {"id": 15318, "code": "x = 13;y = 3;z = 1\nprint((x - 1 * z) // (y + z))", "coverage": [">", ">"]}, "7233": {"id": 7233, "code": "h = 210;n = 5\nl = [31, 41, 59, 26, 53]\nans=0\ncount=0\nfor i in range(0,n):\n    ans+=l[i]\n    if(ans==h or ans>h):\n        count+=1\n    else:\n        count+=0\nif(count>0):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "18835": {"id": 18835, "code": "h = 3\nw = 7\nn = 10\nif h >= w:\n    _max = h\n    _min = w\nelse:\n    _max = w\n    _min = h\nfor i in range(1, _min+1):\n    if _max * i >= n:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "11176": {"id": 11176, "code": "s = \"level\"\nn = len(s)\nif s != s[::-1]:\n    print(\"No\")\nelse:\n    t = s[:int((n - 1) / 2)]\n    u = s[int((n + 1) / 2):]\n    if t == t[::-1] and u == u[::-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "3334": {"id": 3334, "code": "A = 12;B = 4\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!"]}, "5897": {"id": 5897, "code": "n = 2\nprint(-1*(n//(-2)))", "coverage": [">", ">"]}, "3214": {"id": 3214, "code": "s = \"35753\"\nn = len(s)\nret = 753\nfor i in range(n-2):\n    x = abs(753-int(s[i:i+3]))\n    ret = min(x, ret)\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17716": {"id": 17716, "code": "n = 112\nr = n // 100\nl = n % 100\nif r <= 12 and 1 <= r:\n  if l <= 12 and 1 <= l:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if l <= 12 and 1 <= l:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "9549": {"id": 9549, "code": "s = \"2017/01/31\"\na=int(s[0:4])\nprint(str(a+1)+s[4:])", "coverage": [">", ">", ">"]}, "10141": {"id": 10141, "code": "n = 8\ns = \"))))((((\"\nr = 0\nl = 0\nfor i in s:\n    if i == \"(\":\n        r += 1\n    else:\n        if r == 0:\n            l += 1\n        else:\n            r -= 1\nelse:\n    print(\"(\"*l + s + \")\"*r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">"]}, "10675": {"id": 10675, "code": "import sys\nA = 8;B = 12;K = 2\nif A < B: \n    A, B = B, A\nwhile A%B != 0:\n    A,B = B,A%B\ncount = 0\nfor I in range(B,0,-1):\n    if B % I == 0:\n        count += 1\n    if count == K:\n        print(I)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14120": {"id": 14120, "code": "N = 7\nnow=0\nans=1\nS=0\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nfor i in range(1,N):\n   X=l[i]-l[i-1]\n   X=0 if X==0 else 1 if X>0 else -1\n   if X==0:\n      continue\n   elif S ==0:\n      S=X\n   elif S != X:\n      ans+=1\n      S=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "15265": {"id": 15265, "code": "X = 100000;Y = 1;Z = 1\nans = X - Z\nYZ = Y + Z\nprint(ans // YZ)", "coverage": [">", ">", ">", ">"]}, "12092": {"id": 12092, "code": "a = 11;b = 30\nc = 12;d = 1\nif a != c:\n    ans = 1\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "4752": {"id": 4752, "code": "inputstr = \"xyz\"\nlength = len(inputstr) - 2\nprint('{}{}{}'.format(inputstr[0],length,inputstr[-1]))", "coverage": [">", ">", ">"]}, "15987": {"id": 15987, "code": "N = 20;M = 15\nprint(max(N - (M*2),0))", "coverage": [">", ">"]}, "14440": {"id": 14440, "code": "def main():\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    res = 1\n    plus = 0\n    minus = 0\n    for i in range(n-1):\n        if a[i + 1] - a[i] > 0:\n            plus += 1\n        elif a[i + 1] - a[i] < 0:\n            minus += 1\n        if plus and minus:\n            res += 1\n            plus = 0\n            minus = 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16503": {"id": 16503, "code": "def d_binomial_coefficients():\n    N = 5\n    A = [2, 4, 6, 9, 11]\n    n = A[-1]  \n    r = min(A[:-1], key=lambda x: abs(n / 2 - x))\n    return f'{n} {r}'\nprint(d_binomial_coefficients())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12993": {"id": 12993, "code": "def resolve():\n    N = 6\n    print(\"YES\" if N in [7, 5, 3] else \"NO\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "16143": {"id": 16143, "code": "def main():\n    n = 2\n    A = [100, 0]\n    A.sort()\n    m = A.pop()\n    B = [[a, abs(a - (m / 2))] for a in A]\n    B.sort(key = lambda x: x[1])\n    print('{} {}'. format(m, B[0][0]))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10924": {"id": 10924, "code": "S = \"level\"\ndef kaibun(x):\n    N = len(x)\n    flag = True\n    for i in range(N // 2):\n        if x[i] != x[-i - 1]:\n            flag = False\n    return flag\ntmp1 = kaibun(S)\ntmp2 = kaibun(S[:(len(S) - 1) // 2])\ntmp3 = kaibun(S[(len(S) + 3) // 2 - 1:])\nif tmp1 and tmp2 and tmp3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10948": {"id": 10948, "code": "def solve():\n    S = \"level\"\n    if S != S[::-1]:\n        print(\"No\")\n    else:\n        sub = S[:(len(S)-1)//2]\n        if sub != sub[::-1]:\n            print(\"No\")\n        else:\n            print(\"Yes\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "14967": {"id": 14967, "code": "def comb(n, max_k, mod):\n    res = [1]*(max_k+1)\n    t = 1\n    for i in range(max_k+1):\n        res[i] *= t\n        t *= n-i\n        t %= mod\n    n = reduce(lambda x,y: (x*y)%mod, range(1,max_k+1), 1)\n    n = modinv(n, mod)\n    for i in reversed(range(max_k+1)):\n        res[i] *= n\n        res[i] %= mod\n        n *= i\n        n %= mod\n    return res\nN = 3;P = 0\nA = map(int,\"1 1 1\".split())\nevens = 0\nodds = 0\nfor a in A:\n    if a%2:\n        odds += 1\n    else:\n        evens += 1\ncnt = 0\nif P == 0:\n    comb = 1\n    cnt = 1\n    for n in range(2,odds+1,2):\n        comb *= (odds+2-n)*(odds+1-n)\n        comb //= n*(n-1)\n        cnt += comb\nelse:\n    comb = odds\n    cnt = odds\n    for n in range(3,odds+1,2):\n        comb *= (odds+2-n)*(odds+1-n)\n        comb //= n*(n-1)\n        cnt += comb\nprint(2**evens * cnt)", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "11835": {"id": 11835, "code": "def solve():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m1 != m2:\n        print(1)\n    else:\n        print(0)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8592": {"id": 8592, "code": "N = 4\nx = [1, 1, 1, 1]\ny = [1, 1, 1, 1]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11689": {"id": 11689, "code": "def main():\n    DW = 'SUN,MON,TUE,WED,THU,FRI,SAT'\n    DW = DW.split(',')\n    s = \"SUN\"\n    ind_sun = DW.index('SUN')\n    ind_s = DW.index(s)\n    diff = ind_sun - ind_s\n    print(diff if diff > 0 else diff + 7)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14947": {"id": 14947, "code": "n = 3;p = 0\na = [1, 1, 1]\nos = list(filter(lambda x: x % 2 == 1, a))\nes = list(filter(lambda x: x % 2 == 0, a))\ndef calc_even(o_num, e_num):\n    if o_num < 0 or e_num < 0:\n        return 0\n    res = 1\n    tmp = 1\n    for i in range(1, o_num // 2 + 1):\n        tmp *= (o_num - i * 2 + 2) * (o_num - i * 2 + 1)\n        tmp /= 2 * i * (2 * i - 1)\n        res += tmp\n    res *= 2 ** e_num\n    return res\ndef calc_odd(o_num, e_num):\n    if o_num < 0 or e_num < 0:\n        return 0\n    tmp = o_num\n    res = tmp\n    end = o_num if o_num % 2 == 1 else o_num-1\n    for i in range(1, end // 2 + 1):\n        tmp *= (o_num - i * 2 + 1) * (o_num - i * 2)\n        tmp /= 2 * i * (2 * i + 1)\n        res += tmp\n    res *= 2 ** e_num\n    return res\nif p == 0:\n    res = calc_even(len(os), len(es))\n    print(int(res))\nelse:\n    res = calc_odd(len(os), len(es))\n    print(int(res))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!"]}, "10239": {"id": 10239, "code": "def main():\n    n = 6\n    s = \")))())\"\n    l, r = 0, 0\n    for i in s:\n        if i == \")\":\n            if l:\n                l -= 1\n            else:\n                r += 1\n        else:\n            l += 1\n    print(r * \"(\" + s + \")\" * l)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">"]}, "19343": {"id": 19343, "code": "N = 10\ndef gcd(x, y):\n    if x == 0:\n        return y\n    else:\n        return gcd(y%x, x)\nprint((2 * N) // gcd(2, N))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "97": {"id": 97, "code": "def solve():\n    S = \"xyz\"\n    l = len(S)\n    K = 4\n    i = 0\n    ans = ''\n    while i < l-1 and K>0:\n        n = ord(S[i])-ord('a')\n        if n==0:\n            ans += 'a'\n            i += 1\n            continue\n        if 25-n<K:\n            ans += 'a'\n            K -= 26-n\n        else:\n            ans += S[i]\n        i += 1\n    if K == 0:\n        ans += S[i:]\n    else:\n        ans += chr((ord(S[-1])-ord('a')+K)%26+ord('a'))\n    return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8488": {"id": 8488, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 5\n    a1 = chain(tuple([0]), tuple(map(int, \"3 2 2 4 1\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"1 2 2 2 1\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12535": {"id": 12535, "code": "def divisors(n):\n    d=[]\n    for i in range(1,int(n**0.5)+1):\n        if n%i==0:\n            d.append(i)\n            if i!=n//i:\n                d.append(n//i)\n    d.sort()\n    return d\na = 8;b = 12;k = 2\nprint(sorted(list(set(divisors(a))&set(divisors(b))))[::-1][k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8257": {"id": 8257, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    ans = 0\n    for x in range(1, N+1):\n        if (K-1)*x + 1 >= N:\n            ans = x\n            break\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3171": {"id": 3171, "code": "def resolve():\n    N = \"1234567876\"\n    minA = 10**5\n    for i in range(len(N) - 2):\n        minA = min(minA, abs(753 - int(N[i:i + 3])))\n    print(minA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12235": {"id": 12235, "code": "def main():\n    S = \"level\"\n    N = len(S)\n    S1 = S[0:(N - 1) // 2]\n    S2 = S[(N + 3) // 2 - 1:]\n    if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1]:\n        print('Yes')\n    else:\n        print('No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14701": {"id": 14701, "code": "n = 3;p = 0\nla = [1, 1, 1]\nn0 = sum(1 for a in la if a % 2 == 0)\nn1 = sum(1 for a in la if a % 2 == 1)\ndef combi(n, k):\n    c = 1\n    for i in range(1, n + 1):\n        c *= i\n    for i in range(1, k + 1):\n        c //= i\n    for i in range(1, n - k + 1):\n        c //= i\n    return c\ndef answer():\n    if p == 0:\n        c0 = 2 ** n0\n        c1 = 0\n        for i in range(0, n1 + 1, 2):\n            c1 += combi(n1, i)\n        return c0 * c1\n    else:\n        c0 = 2 ** n0\n        c1 = 0\n        for i in range(1, n1 + 1, 2):\n            c1 += combi(n1, i)\n        return c0 * c1\nprint(answer())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "8110": {"id": 8110, "code": "def main():\n    n = 8;k = 3\n    a_lst = [7, 3, 1, 8, 4, 6, 2, 5]\n    tmp = k\n    count = 1\n    while tmp < n:\n        tmp += k - 1\n        count += 1\n    print(count)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18157": {"id": 18157, "code": "import sys\ndef input(): return \"1700\".strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\nINF = float('inf')\ndef is_yymm(f, l):\n    if 1 <= l <= 12:\n        return True\n    return False\ndef is_mmyy(f, l):\n    if 1 <= f <= 12:\n        return True\n    return False\ns = S()\nf = int(s[:2])\nl = int(s[2:])\nif is_yymm(f, l) and is_mmyy(f, l):\n    print('AMBIGUOUS')\nelif is_yymm(f, l) and not(is_mmyy(f, l)):\n    print('YYMM')\nelif not(is_yymm(f, l)) and is_mmyy(f, l):\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "10431": {"id": 10431, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 100;b = 50;k = 4\n    cnt = 0\n    for i in range(min(a,b), 0, -1):\n        if a%i==0 and b%i==0:\n            cnt += 1\n        if cnt == k:\n            print(i)\n            return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1708": {"id": 1708, "code": "import sys\ndef main():\n    raw = ['100', '100', '100']\n    n = int(raw[0])\n    a = int(raw[1])\n    b = int(raw[2])\n    def get_max():\n        return min(a, b)\n    def get_min():\n        return max(a + b - n, 0)\n    print(\"{} {}\".format(get_max(), get_min()))\nif __name__ == \"__main__\":\n    argv = sys.argv[1:]\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19379": {"id": 19379, "code": "def Multiple(n):\n    return n if n % 2 == 0 else n * 2\ndef main():\n    n = 10\n    print(Multiple(n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12962": {"id": 12962, "code": "def main():\n    x = 5\n    print('YES' if x in (3, 5, 7) else 'NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "4383": {"id": 4383, "code": "def find(H1,M1,H2,M2,K):\n    left = H1*60+M1\n    right = H2*60+M2\n    remain = right-left-K\n    return max(remain,0)\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(find(H1,M1,H2,M2,K))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10459": {"id": 10459, "code": "def divisors(n):\n    i = 1\n    table = set()\n    while i * i <= n:\n        if not n % i:\n            table.add(i)\n            table.add(n//i)\n        i += 1\n    return table\nA = 100;B = 50;K = 4\nres = divisors(A) & divisors(B)\nres = list(res)\nres.sort()\nprint(res[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15217": {"id": 15217, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    x = 13;y = 3;z = 1\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14798": {"id": 14798, "code": "n = 3;p = 0\na = [1, 1, 1]\nnCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\noishii = a.count(1)\nc = sum([cmb(oishii,i) for i in range(p,oishii+1,2)])\nprint(c*2**(n-oishii))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11407": {"id": 11407, "code": "def main():\n    S = \"SUN\"\n    lst = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\n    ans = 6 - lst.index(S)\n    if ans == 0:\n        ans = 7\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14842": {"id": 14842, "code": "def resolve():\n    N = 1;P = 1\n    A = [50]\n    odd = 0\n    for a in A:\n        if a % 2 == 1:\n            odd += 1\n    even = N - odd\n    if P == 1:\n        if odd > 0:\n            ans = (2**even) * (2**(odd - 1))\n        else:\n            ans = 0\n    else:\n        if odd == 0:\n            ans = (2**even)\n        else:\n            ans = (2**even) * (2**(odd - 1))\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">"]}, "10437": {"id": 10437, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    a = 1;b = 1;k = 1\n    List = [x for x in range(1, min(a,b)+1)]\n    List.sort(reverse=True)\n    cnt = 0\n    for y in List:\n        if a % y == 0 and b % y == 0:\n            cnt += 1\n            if cnt == k:\n                print(y)\n                break\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13119": {"id": 13119, "code": "def main():\n    x = 6\n    if x in [3, 5, 7]:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "10927": {"id": 10927, "code": "def palin(x):\n    if x == x[::-1]: return True\n    return False\na = \"level\"\nn = len(a)\nif palin(a) and palin(a[:int((n-1)/2)]) and palin(a[int((n+3)/2)-1:]):\n    print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "1791": {"id": 1791, "code": "def resolve():\n    n = 10;a = 7;b = 5\n    if n >= a + b:\n        mn = 0\n    else:\n        mn = a + b - n\n    print(min(a, b), mn)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "17622": {"id": 17622, "code": "def main():\n    S = \"1905\"\n    front = int(S[0:2])\n    latter = int(S[2:4])\n    if front < 13 and latter < 13 and (front > 0 and latter > 0):\n        print('AMBIGUOUS')\n    elif front < 13 and latter < 100 and front > 0:\n        print('MMYY')\n    elif front < 100 and latter < 13 and latter > 0:\n        print('YYMM')\n    else:\n        print('NA')\nmain()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">"]}, "19112": {"id": 19112, "code": "def resolve():\n    N = 5\n    if N%2 == 1:\n        print(0)\n    else:\n        ans = 0\n        for i in range(0, 50):\n            ans += N//(10*(5**i))\n        print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "9970": {"id": 9970, "code": "N = 6\nS = ')))())'\nN = 8\nS = \"))))((((\"\ndef calculate(n, str):\n    finalStr = ''\n    while True:\n        point = 0\n        remainStr = ''\n        for i in range(len(str)):\n            if i > 0:\n                if (str[i-1] == '(') and (str[i] == ')'):\n                    point += 1\n                    continue\n            if i < (n - 1):\n                if (str[i] == '(') and (str[i+1] == ')'):\n                    point += 1\n                    continue\n            remainStr += str[i]\n        str = remainStr\n        n = len(str)\n        if point == 0:\n            finalStr = remainStr\n            return finalStr\n            break\nres = calculate(N, S)\nfor i in range(len(res)):\n    if res[i] == '(':\n        S = S + ')'\n    if res[i] == ')':\n        S = '(' + S\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "7405": {"id": 7405, "code": "import sys\ninput = sys.stdin.buffer.readline\ndef MAP(): return map(int, \"210 5\".split())\ndef LIST(): return list(map(int, \"31 41 59 26 53\".split()))\nh, n = MAP()\na = LIST()\nprint('Yes') if h <= sum(a) else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1466": {"id": 1466, "code": "def main():\n    n = \"112\"\n    if n[0] == '0':\n        print('111')\n    elif n[0] < n[1] or n[0] < n[2]:\n        print((int(n[0]) + 1) * 111)\n    else:\n        print(int(n[0]) * 111)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "8738": {"id": 8738, "code": "def resolve():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9771": {"id": 9771, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 8\n    s = \"))))((((\"\n    left_left=0\n    need_left=0\n    for i in range(n):\n        if s[i]==\"(\":\n            left_left+=1\n        else:\n            if left_left>0:\n                left_left-=1\n            else:\n                need_left+=1\n    print(\"(\"*need_left+s+\")\"*left_left)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "10192": {"id": 10192, "code": "def cin():  return list(map(int,\"8\".split()))\nN = cin()[0]\nS = \"))))((((\"\ntmp = S[::]\nfor i in range(100): tmp = tmp.replace(\"()\", \"\")\ncnt1 = 0\ncnt2 = 0\nfor i in range(len(tmp)):\n    if tmp[i] == '(': cnt1 += 1\n    else: cnt2 += 1\nans = S[::]\nans = \"(\" * cnt2 + S + ')' * cnt1;\nprint(ans);", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2314": {"id": 2314, "code": "import sys\ndef input(): return \"10 3 5\".rstrip()\ndef main():\n    n = 10;a = 3;b = 5\n    print(min(a,b),max(0,a+b-n))\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14621": {"id": 14621, "code": "n = 1;p = 1\nA = [50]\neven = sum([a%2==0 for a in A])\nodd = n - even\ndef nCr(n,r):\n  ret = 1\n  for i in range(r):\n    ret *= n-i\n    ret //= i+1  \n  return ret\nans = 0\nadd = 2 ** even\nfor k in range(p,odd+1,2):  \n  ans += nCr(odd,k) * add  \nprint(ans)  ", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">"]}, "12381": {"id": 12381, "code": "s = \"atcoder\"\ndef kaibun(s):\n    if s == s[::-1]:\n        return 1\n    else:\n        return 0\nq = len(s)\nd = int((q-1)/2)\nket = s[0:d]\nmat = s[int((q+1)/2):q]\nif (kaibun(s) + kaibun(ket) + kaibun(mat)) == 3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3860": {"id": 3860, "code": "def main():\n    X = 64146;Y = 123;Z = 456\n    print((X - Z) // (Y + Z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "12740": {"id": 12740, "code": "def solve_A():\n    x = 5\n    if x == 3 or x == 5 or x == 7:\n        return \"YES\"\n    else:\n        return \"NO\"\nprint(solve_A())", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14894": {"id": 14894, "code": "import sys\nN = 2;P = 0\nA = [1, 3]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a % 2 == 1:\n        kisu += 1\n    else:\n        gusu += 1\ntotal = 2 ** N \nx = [1]\nres = 1\nfor i in range(1, N + 1):\n    res *= i\n    x.append(res)\ndef cmb(n, r):\n    return x[n] // (x[r] * x[n - r])\nans = 0 \nfor k in range(kisu + 1):\n    if k % 2 == 0:\n        ans += cmb(kisu, k) * (2 ** gusu)\nif P == 0:\n    print(ans)\nelse:\n    print(total - ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16007": {"id": 16007, "code": "def solve():\n    a = 12;b = 4\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "704": {"id": 704, "code": "def main():\n    K = 101\n    a_i = 7\n    if a_i % K == 0:\n        print(1)\n        return\n    for i in range(2, 10 ** 6+1):\n        a_i = a_i * 10 + 7\n        if a_i % K == 0:\n            print(i)\n            return\n        a_i %= K\n    print(-1)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "15911": {"id": 15911, "code": "def main():\n    A = 12;B = 4\n    area = A - 2*B\n    if area > 0:\n        print(area)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14651": {"id": 14651, "code": "import math\ndef main():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    modA = list()\n    for a in A:\n        modA.append(a % 2)\n    zero = modA.count(0)\n    one = modA.count(1)\n    ans = tmp = 0\n    f = math.factorial\n    if P == 0:\n        for i in range(0, one + 1, 2):\n            tmp += f(one) // (f(i) * f(one - i))\n    else:\n        for i in range(1, one + 1, 2):\n            tmp += f(one) // (f(i) * f(one - i))\n    if zero > 0:\n        ans = tmp * 2 ** zero\n    else:\n        ans = tmp\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "15219": {"id": 15219, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    x = 100000;y = 1;z = 1\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6896": {"id": 6896, "code": "def solve():\n    H = 20;N = 3\n    A = [4, 5, 6]\n    A_sum = sum(A)\n    if A_sum >= H:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10559": {"id": 10559, "code": "import math\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\na = 100;b = 50;c = 4\nn=math.gcd(a,b)\nans=make_divisors(n)\nprint(ans[-c])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14111": {"id": 14111, "code": "def resolve():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    result = 0\n    while len(A) > 1:\n        flag = False\n        for i in range(1, len(A)):\n            if A[0] == A[i]:\n                continue\n            elif A[0] < A[i]:\n                j = i\n                while A[j-1] <= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            elif A[0] > A[i]:\n                j = i\n                while A[j-1] >= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            if flag == True:\n                break\n    else:\n        if len(A) == 1:\n            result += 1\n    print(result)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "14944": {"id": 14944, "code": "from collections import Counter\ndef modinv(a, mod=10**9+7):\n    return pow(a, mod-2, mod)\ndef combination(n, r, mod=10**9+7):\n    if n < r:\n        return 0\n    r = min(r, n-r)\n    res = 1\n    for i in range(r):\n        res = res * (n - i) * modinv(i+1, mod) % mod\n    return res\nn = 1;p = 1\na = [50]\nb = [ai % 2 for ai in a]\nc = Counter(b)\nans = 0\nif p == 0:\n    even = (2 ** c[0])\n    odd = 1\n    for i in range(2, c[1] + 1, 2):\n        odd += combination(c[1], i)\n    ans = even * odd\nelse:\n    even = (2 ** c[0])\n    odd = 0\n    for i in range(1, c[1] + 1, 2):\n        odd += combination(c[1], i)\n    ans = even * odd\nprint(ans)", "coverage": [">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "14692": {"id": 14692, "code": "def comb(n, k):\n    if k > n // 2:\n        return comb(n, n - k)\n    numer = 1\n    denom = 1\n    for i in range(k):\n        numer *= n - i\n        denom *= k - i\n    return numer // denom\ndef main():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    cnt_even_bag = len([a for a in A if a % 2 == 0])\n    cnt_odd_bag = N - cnt_even_bag\n    cnt_even_pattern = 2 ** cnt_even_bag\n    cnt_odd_pattern = 0\n    for c in range(1, cnt_odd_bag + 1, 2):\n        cnt_odd_pattern += comb(cnt_odd_bag, c)\n    cnt_even = cnt_even_pattern * cnt_odd_pattern\n    if P == 1:\n        print(cnt_even)\n    else:\n        print(2 ** N - cnt_even)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3422": {"id": 3422, "code": "from sys import stdin\ndef main():\n    A = 20;B = 15\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "9732": {"id": 9732, "code": "def resolve():\n    N = 8\n    S = \"))))((((\"\n    left, right, cnt = 0,0,0\n    for s in S:\n        if s == \"(\":\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt < 0:\n            right += 1\n            cnt = 0\n    if cnt>0:\n        left = cnt\n    ans = \"(\"*right + S + \")\"*left\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13696": {"id": 13696, "code": "import sys\ndef MI(): return map(int,\"10 0 12 0 120\".rstrip().split())\nH1,M1,H2,M2,K = MI()\nprint(max(0,60*H2+M2-60*H1-M1-K))", "coverage": [">", ">", ">", ">"]}, "4424": {"id": 4424, "code": "def resolve():\n    s = \"smiles\"\n    ans = s[0] + str(len(s)-2) + s[-1]\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "5819": {"id": 5819, "code": "import math\ndef get_input() -> int:\n    N = 2\n    return N\ndef main(N: int) -> None:\n    result = math.ceil(N/2)\n    print(result)\nif __name__ == \"__main__\":\n    N = 2\n    main(N)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9666": {"id": 9666, "code": "def main():\n    n = 3\n    S = \"())\"\n    a, b = 0, 0\n    aa = 0\n    m = 0\n    for s in S:\n        if aa > 0 and s == ')':\n            m += 1\n            aa -= 1\n        if s == '(':\n            a += 1\n            aa += 1\n        else:\n            b += 1\n    print(''.join(['(' * (b - m), S, ')' * (a - m)]))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "16015": {"id": 16015, "code": "def main():\n    A = 20;B = 30\n    print(max(A - 2*B, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3441": {"id": 3441, "code": "def ABC_143_A():\n    A = 20;B = 30\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "8680": {"id": 8680, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 4\n    A = [1, 1, 1, 1]\n    B = [1, 1, 1, 1]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10476": {"id": 10476, "code": "A = 100;B = 50;K = 4\ndef make_div(n):\n  divisors = []\n  for i in range(1, int(n**0.5)+1):\n    if n % i == 0:\n      divisors.append(i)\n      if i != n // i:\n        divisors.append(n//i)\n  return divisors\nprint(sorted(set(make_div(A))&set(make_div(B)), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13358": {"id": 13358, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    print(s.replace(\",\", \" \"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "14851": {"id": 14851, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 2;p = 0\na = [1, 3]\nfor i in range(n):\n    a[i] %=2\none = a.count(1)\nzero = a.count(0)\nans=0\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nif p==0:\n    for i in range(0,one+1,2):\n        ans += cmb(one,i)*2**zero\nelse:\n    for i in range(1,one+1,2):\n        ans += cmb(one,i)*2**zero\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "10423": {"id": 10423, "code": "def make_divisors(n):\n    if n==1:\n        divisors=[1]\n        return divisors\n    else:\n        divisors=[]\n        for i in range(1,n):\n            if i*i>n:\n                break\n            if n%i==0:\n                divisors.append(i)\n                if i!=n//i:\n                    divisors.append(n//i)\n        divisors.sort(reverse=True)\n        return divisors\nfrom sys import stdin\nfrom math import gcd\ndef main():\n    readline=stdin.readline\n    a = 100;b = 50;k = 4\n    c=gcd(a,b)\n    li=make_divisors(c)\n    print(li[k-1])\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16152": {"id": 16152, "code": "def getval():\n    n = 5\n    a = [6, 9, 4, 2, 11]\n    return n,a\ndef main(n,a):\n    a.sort()\n    c = a[n-1]\n    R = c/2\n    r = 0\n    for i in a:\n        if abs(R-i)<abs(R-r):\n            r = i \n    print(\"{x} {y}\".format(x=c,y=r))\nif __name__==\"__main__\":\n    n,a = getval()\n    main(n,a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14678": {"id": 14678, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 1;P = 1\n    A = [50]\n    odd = len([1 for a in A if a % 2])\n    even = len([1 for a in A if a % 2 == 0])\n    nCr_ = {}\n    def nCr(n, r):\n        r = min(n-r, r)\n        if r == 0:\n            return 1\n        if (n, r) in nCr_:\n            return nCr_[(n, r)]\n        ret1 = 1\n        ret2 = 1\n        for r in range(1, r+1):\n            ret1 *= n - r + 1\n            ret2 *= r\n        nCr_[(n, r)] = ret1 // ret2\n        return nCr_[(n, r)]\n    t = 0\n    for i in range(even + 1):\n        t += nCr(even, i)\n    ans = 0\n    for i in range(P, odd + 1, 2):\n        ans += t * nCr(odd, i)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7122": {"id": 7122, "code": "H = 211;N = 5\nspecial_move = ['31', '41', '59', '26', '53']\ndef answer(H: int, N: int, special_move: list) -> str:\n    damage = 0\n    for i in range(0, N):\n        damage += int(special_move[i])\n    if damage >= H:\n        return 'Yes'\n    else:\n        return 'No'\nprint(answer(H, N, special_move))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "477": {"id": 477, "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\ndef plus(c,i):\n    return chr((ord(c)-ord('a')+i)%26+ord('a'))\nfor i,ss in enumerate(s):\n    want = (ord('z') + 1 - ord(ss))%26\n    if K >= want:\n        s[i] = plus(s[i],want)\n        K = K - want\nK = K % 26\nif K >= 1:\n    s[-1] = plus(s[-1],K)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14641": {"id": 14641, "code": "def ncr(n, r):\n    if n < r: return 0\n    r = min(r, n - r)\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + i + 1 for i in range(r)]\n    denominator = [i + 1 for i in range(r)]\n    for p in range(2, r + 1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p - 1, r, p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= numerator[k]\n    return int(result)\nn = 3;p = 0\na = [1, 1, 1]\ndic = {'odd': 0, 'even': 0}\nfor i in a:\n    if i % 2 == 0:\n        dic['even'] += 1\n    else:\n        dic['odd'] += 1\neven = 0\nodd = 0\nfor i in range(dic['even'] + 1):\n    even += ncr(dic['even'], i)\nif p == 0:\n    for i in range(0, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nelse:\n    for i in range(1, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nprint(odd * even)", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "15317": {"id": 15317, "code": "import math\ndef main():\n  x = 64145;y = 123;z = 456\n  print(int((x-z)/(y+z)))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "15898": {"id": 15898, "code": "import sys\ndef main():\n    input = sys.stdin.buffer.readline\n    a = 20;b = 30\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2795": {"id": 2795, "code": "def main():\n    s = \"35753\"\n    comp_num = 753\n    min_diff = 754\n    for i in range(len(s)-2):\n        n = int(s[i:i+3])\n        diff = abs(comp_num - n)\n        if min_diff > diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18465": {"id": 18465, "code": "def a_painting():\n    from math import ceil\n    H = 14\n    W = 12\n    N = 112\n    return ceil(N / max(H, W))\nprint(a_painting())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5924": {"id": 5924, "code": "def main():\n    n = 2\n    div, mod = divmod(n, 2)\n    if mod != 0:\n        print(div + 1)\n    else:\n        print(div)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "5577": {"id": 5577, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    n = 100\n    print(n // 2) if n % 2 == 0 else print((n + 1) // 2)\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6512": {"id": 6512, "code": "def main(n,a,b,c):\n  import bisect\n  ans=0\n  for i in range(n):\n    na=bisect.bisect_left(a,b[i])\n    nc=n-bisect.bisect_right(c,b[i])\n    ans+=na*nc\n  print(ans)\nif __name__=='__main__':\n  n = 6\n  a = [2, 3, 6, 14, 53, 159]\n  b = [6, 9, 58, 79, 84, 323]\n  c = [2, 50, 79, 288, 383, 2643]\n  main(n,a,b,c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16917": {"id": 16917, "code": "def resolve():\n    a = \"H\";b = \"H\"\n    ans = str()\n    if a == \"H\":\n        if b == \"H\":\n            ans = \"H\"\n        elif b == \"D\":\n            ans = \"D\"\n    elif a == \"D\":\n        if b == \"H\":\n            ans = \"D\"\n        elif b == \"D\":\n            ans = \"H\"\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14837": {"id": 14837, "code": "from collections import Counter\ndef main():\n    N = 3;P = 0\n    A = Counter(list( map( lambda x: int(x)%2, \"1 1 1\".split())))\n    zero = A[0]\n    one = A[1]\n    ans = 1\n    now = 1\n    for i in range(1,one+1):\n        now *= (one-i+1)\n        now //= i\n        if i%2 == 0:\n            ans += now\n    if P == 0:\n        print( ans*pow(2,zero))\n    else:\n        print(pow(2,N) - ans*pow(2,zero))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15505": {"id": 15505, "code": "def solve():\n    X = 13;Y = 3;Z = 1\n    print((X - Z) // (Y + Z))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "15155": {"id": 15155, "code": "def answer(x: int, y: int, z: int) -> int:\n    return len(range(y + z * 2, x + 1, y + z))\ndef main():\n    x = 13;y = 3;z = 1\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15002": {"id": 15002, "code": "n = 2;p = 0\na = [1, 3]\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\ng = 0\nk=0\nfor i in a:\n    if i%2:\n        k+=1\n    else:\n        g+=1\nif p == 0:\n    x = 2**g - 1\n    y = 0\n    for i in range(2,k+1,2):\n        y += cmb(k,i)\n    ans = y*x + x + y +1\n    print(ans)\nelse:\n    x = 2**g-1\n    y = 0\n    for i in range(1,k+1,2):\n        y += cmb(k,i)\n    print(y*x+y)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "10571": {"id": 10571, "code": "def resolve():\n    a = 100;b = 50;k = 4\n    t = []\n    for i in range(1, min(a,b)+1):\n        if a % i == 0 and b % i == 0:\n            t.append(i)\n    print(t[-k])\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14561": {"id": 14561, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\nA = [1, 1, 1]\nAA = [0]*n\nfor i in range(n):\n    if A[i]%2:\n        AA[i]=1\nsumA = sum(AA)\nres1 = 0\nfor i in range(p,sumA+1,2):\n    res1 += comb(sumA,i)\nres0 = 2**(n-sumA)\nprint(res1*res0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8266": {"id": 8266, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\ndef solve(N,K,A):\n    ans = -(-(N-1)//(K-1))\n    return ans\nprint(solve(N,K,A))", "coverage": [">", ">", ">", ">", ">", ">"]}, "9837": {"id": 9837, "code": "def main():\n    n = 3\n    S = \"())\"\n    left_shortage = 0\n    now = 0\n    for s in S:\n        if s == \"(\":\n            now += 1\n        else:\n            now -= 1\n            left_shortage = min(now, left_shortage)\n    right_shortage = 0\n    now = 0\n    for s in S[::-1]:\n        if s == \")\":\n            now += 1\n        else:\n            now -= 1\n            right_shortage = min(now, right_shortage)\n    print(\"(\"*-left_shortage + S + \")\"*-right_shortage)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14758": {"id": 14758, "code": "def resolve():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    odds = sum([1 for a in A if a % 2 == 1])\n    ans = 0\n    if odds == 0:\n        if P == 0:\n            ans = 2 ** N\n    else:\n        ans = 2 ** (N - 1)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "12728": {"id": 12728, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    X = 5\n    if X in [7, 5, 3]:\n        ans = \"YES\"\n    else:\n        ans = \"NO\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "7430": {"id": 7430, "code": "import sys\ndef main():\n    input = sys.stdin.buffer.readline\n    h = 211\n    a = [31, 41, 59, 26, 53]\n    print(\"Yes\" if sum(a) >= h else \"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3967": {"id": 3967, "code": "def main(x, y, z):\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    x = 64146;y = 123;z = 456\n    main(x, y, z)", "coverage": [">", ">", ">", ">", ">"]}, "1325": {"id": 1325, "code": "def resolve():\n    cands = [111,222,333,444,555,666,777,888,999]\n    N = 112\n    import bisect\n    print(cands[bisect.bisect_left(cands, N)])\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "610": {"id": 610, "code": "from string import ascii_lowercase\ndef main():\n    s = ['a']\n    K = 25\n    for i, c in enumerate(s):\n        num = ord(c) - ord(\"a\")\n        if num > 0 and K - (26-num) >= 0:\n            s[i] = \"a\"\n            K -= (26-num)\n    num = ord(s[-1]) - ord(\"a\")\n    last = (num + K)%26\n    s[-1] = ascii_lowercase[last]\n    print(\"\".join(s))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "11455": {"id": 11455, "code": "import sys\ndef solve(S):\n    return {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}[S]\ndef main(args):\n    S = \"SUN\"\n    ans = solve(S)\n    print(ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7709": {"id": 7709, "code": "def resolve():\n    import math\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    print(math.ceil((N-1)/(K-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "15025": {"id": 15025, "code": "import collections\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\nH = [i%2 for i in A]\nB = collections.Counter(H)[1]\nans = 0\nfor i in range(1,B//2+1):\n    ans += combinations_count(B, 2*i)\nC = (ans+1) * (2**(len(A)-B))\nprint(C if P == 0 else 2**N - C)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9478": {"id": 9478, "code": "def ABC_85_A():\n    S = \"2017/01/07\"\n    S = list(S)\n    S[3] = '8'\n    S = ''.join(S)\n    print(S)\nif __name__ == '__main__':\n    ABC_85_A()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12879": {"id": 12879, "code": "import sys\ncand = [7, 5, 3]\nx = 6\ndef main():\n    return 'YES' if x in cand else 'NO'\nif __name__ == '__main__':\n    ans = main()\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15834": {"id": 15834, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    X = 13;Y = 3;Z = 1\n    ans = (X - Z) // (Y + Z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14756": {"id": 14756, "code": "def resolve():\n    N = 2;P = 0\n    A = [1, 3]\n    odds = sum([1 for a in A if a % 2 == 1])\n    ans = 0\n    if odds == 0:\n        if P == 0:\n            ans = 2 ** N\n    else:\n        ans = 2 ** (N - 1)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "15094": {"id": 15094, "code": "def solve():\n  N = 1;P = 1\n  A = [50]\n  zero,one = 0,0\n  for i in range(N):\n    if A[i]%2==0:\n      zero += 1\n    else:\n      one += 1\n  ans = pow(2,N-1)\n  if P==1 and one == 0:\n    return 0\n  if P==0 and one == 0:\n    return pow(2,N)\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "10698": {"id": 10698, "code": "def kaibun(lst):\n    k = len(lst)//2 + len(lst)%2\n    for i in range(1,k+1):\n        if lst[i-1] != lst[-i]:\n            return False\n    return True\nS = ['l', 'e', 'v', 'e', 'l']\nN = len(S)\nif kaibun(S) and kaibun(S[:(N-1)//2]) and kaibun(S[(N+3)//2-1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18033": {"id": 18033, "code": "x = ['1', '9', '0', '5']\nfirst = 10 * int(x[0]) + int(x[1])\nsecond = 10 * int(x[2]) + int(x[3])\ndef mc(num):\n    if 1 <= num <= 12:\n        return True\n    else:\n        return False\ndef yc(num):\n    if 0 <= num <= 99:\n        return True\n    else:\n        return False\nif yc(first):\n    if mc(second):\n        if yc(second):\n            if mc(first):\n                print(\"AMBIGUOUS\")\n            else:\n                print(\"YYMM\")\n        else:\n            print(\"YYMM\")\n    elif yc(second):\n        if mc(first):\n            print(\"MMYY\")\n        else:\n            print(\"NA\")\n    else:\n        print(\"NA\")\nelif yc(second):\n    if mc(first):\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8246": {"id": 8246, "code": "import sys\ndef MI(): return map(int,\"3 3\".rstrip().split())\ndef LI(): return list(map(int,\"1 2 3\".rstrip().split()))  \nN,K = MI()\nA = LI()\nprint((N+K-3)//(K-1))", "coverage": [">", ">", ">", ">", ">", ">"]}, "3618": {"id": 3618, "code": "def resolve():\n    a = 20;b = 15\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "3492": {"id": 3492, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 30\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "270": {"id": 270, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom bisect import bisect\ndef main():\n    s = \"xyz\"\n    k = 4\n    s2 = []\n    s2a = s2.append\n    for se in s:\n        if ord(se) - 97:\n            s2a(123 - ord(se))\n        else:\n            s2a(0)\n    s2_ac = tuple(accumulate(s2))\n    lens = len(s)\n    if s2_ac[-1] < k:\n        k -= s2_ac[-1]\n        k = k % 26\n        r = 'a' * (lens - 1) + chr(97 + k)\n        print(r)\n    elif s2_ac[-1] == k:\n        r = 'a' * lens\n        print(r)\n    else:\n        pos = bisect(s2_ac, k)\n        if pos == 0:\n            r = chr(k + ord(s[0])) + s[1:]\n            print(r)\n        elif s2_ac[pos-1] == k:\n            r = 'a' * pos + s[pos:]\n            print(r)\n        else:\n            r = 'a' * pos\n            k -= s2_ac[pos-1]\n            for i1 in range(pos, len(s)):\n                if s2[i1] <= k:\n                    r += 'a'\n                    k -= s2[i1]\n                else:\n                    r += s[i1]\n            if k:\n                lastc = chr(ord(r[-1]) + k)\n                r = r[:-1] + lastc\n            print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", "!", ">", ">", "!", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "2296": {"id": 2296, "code": "def solve(n, a, b):\n    return \" \".join(map(str, [min(a,b), max(0,a+b-n)]))\nn = 10;a = 3;b = 5\nprint(solve(n, a, b))", "coverage": [">", ">", ">", ">"]}, "14516": {"id": 14516, "code": "def comb(n,k):\n    res = 1\n    for i in range(1,k+1):\n        res *= (n+1-i)\n        res //= i\n    return res\nn = 3;p = 0\na = [1, 1, 1]\na = [ai % 2 for ai in a]\nodd, even = a.count(1), a.count(0)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i) * pow(2, even)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8931": {"id": 8931, "code": "def solve():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15023": {"id": 15023, "code": "import random as rng\nimport itertools as it\nimport collections as col\nimport heapq as hq\nimport sys\nimport copy as cp\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\ndef dump_impl(*objects):\n    print(*objects, file=sys.stderr)\ndef dump_dummy(*objects):\n    pass\ndump = dump_impl if \"DEBUG\" in sys.argv else dump_dummy\ndef odd(n): return n & 1\ndef even(n): return not odd(n)\ndef comb(n, m):\n    r = 1\n    for i in range(1, n+1):\n        r *= i\n    for i in range(1, m+1):\n        r //= i\n    for i in range(1, n-m+1):\n        r //= i\n    return r\ndef main():\n    N = 1;P = 1\n    A = [0]\n    cnt0 = len([a for a in A if a == 0])\n    cnt1 = len([a for a in A if a == 1])\n    ans = 0\n    if odd(P):\n        for i in range(cnt1 + 1):\n            if odd(i):\n                ans += comb(cnt1, i)\n    else:\n        for i in range(cnt1 + 1):\n            if even(i):\n                ans += comb(cnt1, i)\n    ans *= pow(2, cnt0)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14541": {"id": 14541, "code": "import math\ndef comb(n, r): \n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\na = [50]\na_even = 0\na_odd = 0\nfor i in range(n):\n    if a[i]%2 == 0:\n        a_even += 1\n    else:\n        a_odd += 1\nans = 0\nif p%2 == 0:\n    k = 0\n    for i in range(10**10):\n        if 2*i > a_odd:\n            break\n        k += comb(a_odd, 2*i)\n    print(k*2**a_even)\nelse:\n    k = 0\n    for i in range(10**10):\n        if 2*i+1 > a_odd:\n            break\n        k += comb(a_odd, 2*i+1)\n    print(k*2**a_even)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">"]}, "12701": {"id": 12701, "code": "import sys\ndef I(): return int(\"6\".rstrip())\nprint('YES' if I() in [3,5,7] else  'NO')", "coverage": [">", ">", ">"]}, "12497": {"id": 12497, "code": "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y,x%y)\na = 1;b = 1;k = 1\nans = gcd(a,b)\ncnt = 1\nwhile cnt < k:\n    ans -= 1\n    if a % ans == 0 and b % ans == 0:\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10817": {"id": 10817, "code": "def isPalindrome(str):\n  ret = True\n  l = len(str)\n  end = int(l/2)\n  for i in range(end):\n    if str[i] != str[-1-i]:\n      ret = False\n  return ret\nans = \"Yes\"\nstr = \"atcoder\"\nstr_l = len(str)\nif isPalindrome(str) and isPalindrome(str[:int(str_l/2)]) and isPalindrome(str[-int(str_l/2):]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12045": {"id": 12045, "code": "def resolve():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m2==m1:\n        print('0')\n    else:\n        print('1')\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "14505": {"id": 14505, "code": "N = 2;P = 0\nA = [1, 3]\ndef comb(x, y):\n  m = c = 1\n  for i in range(y):\n    m *= x-i\n    c *= y-i\n  return m//c\neven = odd = 0\nfor a in A:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nif P == 0:\n  ans = 0\n  for i in range(0, odd+1, 2):\n    ans += comb(odd, i)\n  print(pow(2, even) * ans)\nelse:\n  ans = 0\n  for i in range(1, odd+1, 2):\n    ans += comb(odd, i)\n  print(pow(2, even) * ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "5923": {"id": 5923, "code": "def main():\n    n = 5\n    div, mod = divmod(n, 2)\n    if mod != 0:\n        print(div + 1)\n    else:\n        print(div)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12217": {"id": 12217, "code": "s = \"level\"\nn=len(s)\ndef isk(S):\n  l=len(S)\n  f=1\n  for i in range(l//2+1):\n    if S[i]==S[l-i-1]:\n      f*=1\n    else:\n      f=0\n  if f:\n    return True\n  else:\n    return False\nif isk(s) and isk(s[:(n-1)//2]) and isk(s[(n+1)//2:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "394": {"id": 394, "code": "def main():\n    s = \"a\"\n    K = 25\n    new_s = \"\"\n    l = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    d = {\n        \"a\": 0,\n        \"b\": 25,\n        \"c\": 24,\n        \"d\": 23,\n        \"e\": 22,\n        \"f\": 21,\n        \"g\": 20,\n        \"h\": 19,\n        \"i\": 18,\n        \"j\": 17,\n        \"k\": 16,\n        \"l\": 15,\n        \"m\": 14,\n        \"n\": 13,\n        \"o\": 12,\n        \"p\": 11,\n        \"q\": 10,\n        \"r\": 9,\n        \"s\": 8,\n        \"t\": 7,\n        \"u\": 6,\n        \"v\": 5,\n        \"w\": 4,\n        \"x\": 3,\n        \"y\": 2,\n        \"z\": 1,\n    }\n    for i in range(len(s)-1):\n        if d[s[i]] <= K:\n            K -= d[s[i]]\n            new_s += 'a'\n        else:\n            new_s += s[i]\n    new_s += l[(l.index(s[-1]) + K) % 26]\n    print(new_s)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "10637": {"id": 10637, "code": "def cf(x1,x2):\n    cf=[]\n    for i in range(1,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nimport sys\ninput = sys.stdin.readline  \nA = 100;B = 50;K = 4\ndiv =cf(A,B)\nprint(div[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6330": {"id": 6330, "code": "def main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    Bdic = [0]*N\n    from bisect import bisect\n    from itertools import accumulate\n    for i, b in enumerate(B):\n        idx = bisect(C, b)\n        Bdic[i] = N - idx\n    Bacc = list(accumulate([b for b in Bdic + [0]][::-1]))[::-1]\n    ans = 0\n    for i, a in enumerate(A):\n        idx = bisect(B, a)\n        ans += (Bacc[idx])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11069": {"id": 11069, "code": "import math\nfrom math import gcd\nINF = float(\"inf\")\nimport sys\ninput=sys.stdin.readline\nimport itertools\ndef main():\n    s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\n    n = len(s)\n    h = n//2\n    f = s[:h]\n    l = s[h+1:]\n    if s == s[::-1] and f == f[::-1] and l == l[::-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3047": {"id": 3047, "code": "def resolve():\n    S = \"35753\"\n    res = 99999\n    num = len(S)\n    for i in range(num-1):\n        res = min(res, abs(int(S[i:i+3]) - 753))\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14461": {"id": 14461, "code": "def solve():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    ans = 0\n    cur = []\n    flag = None\n    for a in A:\n        if not cur:\n            cur.append(a)\n            continue\n        elif cur[-1] == a:\n            cur.append(a)\n        elif flag is None:\n            if cur[-1] > a:\n                flag = False\n            elif cur[-1] < a:\n                flag = True\n            cur.append(a)\n            continue\n        elif flag:  \n            if cur[-1] > a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n        elif not flag:  \n            if cur[-1] < a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n    if cur:\n        ans += 1\n    print(ans)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "12741": {"id": 12741, "code": "def solve_A():\n    x = 6\n    if x == 3 or x == 5 or x == 7:\n        return \"YES\"\n    else:\n        return \"NO\"\nprint(solve_A())", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "10060": {"id": 10060, "code": "N = 3\nS = \"())\"\nans1=0\nmaxans=0\ndef split(word): \n    return [char for char in word]  \ndef convert(s): \n    new = \"\" \n    for x in s: \n        new += x  \n    return new \nfor i in range(N):\n  if S[i]=='(':\n    ans1-=1\n  else:\n    ans1+=1\n    if ans1>maxans:\n      maxans=ans1\nans2=0\nminans=0\nfor i in range(N):\n  if S[N-1-i]==')':\n    ans2-=1\n  else:\n    ans2+=1\n    if ans2>minans:\n      minans=ans2\nr=split(S)\nfor i in range(minans):\n  r.append(')')\nr.reverse()\nfor i in range(maxans):\n  r.append('(')\nr.reverse()\nprint(convert(r))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14992": {"id": 14992, "code": "from collections import deque\nN = 2;P = 0\neven = 0\nodd = 0\nfor a in \"1 3\".split():\n    check = int(a)\n    if check % 2 == 0:\n        even += 1\n    else:\n        odd += 1\ndef comb(n, r):\n    up = 1\n    down = 1\n    for i in range(r):\n        up *= n - i\n        down *= i + 1\n    return up // down\nresult = 0\nif P == 1:\n    for i in range(1, odd+1, 2):\n        result += comb(odd, i)\nelse:\n    for i in range(0, odd+1, 2):\n        result += comb(odd, i)\nif even == 0:\n    mul = 1\nelse:\n    mul = 2 ** even\nresult *= mul\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10129": {"id": 10129, "code": "def main():\n    N = 8\n    S = \"))))((((\"\n    count = 0\n    for i in range(N-1, -1, -1):\n        if S[i] == \")\":\n            count +=1\n        else:\n            if count:\n                count -= 1\n            else:\n                S += \")\"\n    S = \"(\"*count + S\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "7568": {"id": 7568, "code": "import math\ndef main():\n  H = 211;N = 5\n  A = [31, 41, 59, 26, 53]\n  if sum(A) >= H:\n    print('Yes')\n  else:\n    print('No')\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "476": {"id": 476, "code": "s = ['a']\nK = 25\ndef plus(c,i):\n    return chr((ord(c)-ord('a')+i)%26+ord('a'))\nfor i,ss in enumerate(s):\n    want = (ord('z') + 1 - ord(ss))%26\n    if K >= want:\n        s[i] = plus(s[i],want)\n        K = K - want\nK = K % 26\nif K >= 1:\n    s[-1] = plus(s[-1],K)\nprint(\"\".join(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15980": {"id": 15980, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 12;b = 4\n    ans = a - 2 * b\n    if ans >= 0:\n        print(ans)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "19261": {"id": 19261, "code": "def solve():\n    N = 5\n    if N % 2 != 0:\n        return 0\n    else:\n        ans = 0\n        N //= 10\n        while N > 0:\n            ans += N\n            N //= 5\n        return ans\nprint(solve())", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14512": {"id": 14512, "code": "def main():\n    n = 1;p = 1\n    a = [50]\n    D = {0:0, 1:0}\n    for i in range(n):\n        D[a[i]%2]+=1\n    ans = 0\n    nCr = {}\n    def cmb(n, r):\n        if r == 0 or r == n: return 1\n        if r == 1: return n\n        if (n,r) in nCr: return nCr[(n,r)]\n        nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n        return nCr[(n,r)]\n    if p==0:\n        for i in range(D[1]//2+1):\n            ans += cmb(D[1],2*i)\n    else:\n        for i in range(D[1]//2):\n            ans += cmb(D[1],2*i+1)\n    print(ans * pow(2,D[0]))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", "!", ">", "!", ">", ">", ">"]}, "6580": {"id": 6580, "code": "import math\nimport copy\nimport sys\nimport bisect\ninput = sys.stdin.readline\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    c.sort()\n    ans=0\n    for x in b:\n        ans += bisect.bisect_left(a, x) * (n - bisect.bisect_right(c, x))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14629": {"id": 14629, "code": "import math\ndef combi(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\nL = [1, 1, 1]\nodd = 0\neven = 0\nfor a in L:\n    if a % 2:\n        odd += 1\n    else:\n        even += 1\nc = 0\nif p == 0:\n    for i in range(0, odd + 1, 2):\n        c += combi(odd, i)\nelse:\n    for i in range(1, odd + 1, 2):\n        c += combi(odd, i)\nans = 2 ** even * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "12371": {"id": 12371, "code": "s = \"level\"\nn=len(s)\ndef f(s):\n    m=len(s)\n    for i in range(-(-m//2)):\n        if s[i]!=s[-1-i]:\n            return False\n    return True\nif f(s) and f(s[:(n-1)//2]) and f(s[((n+3)//2)-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3142": {"id": 3142, "code": "import sys\ninput=sys.stdin.readline\ndef main():\n    S = \"35753\"\n    mind=643\n    for i in range(len(S)-2):\n        mind=min(mind,abs(int(S[i:i+3])-753))\n    print(mind)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10316": {"id": 10316, "code": "def resolve():\n    A = 8;B = 12;K = 2\n    ans = [1]\n    for i in range(2, min(A, B)+1):\n        if A%i == 0 and B%i == 0:\n            ans.append(i)\n    print(ans[K*-1])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12293": {"id": 12293, "code": "def main():\n    s = \"level\"\n    n = len(s)\n    s1 = s[:int((n-1)/2)]\n    s2 = s[int((n+3)/2)-1:]\n    for tmp in [s, s1, s2]:\n        tmp_rev = tmp[::-1]\n        if tmp != tmp_rev:\n            print(\"No\")\n            break\n    else:\n        print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7678": {"id": 7678, "code": "def main():\n    H = 20\n    A = map(int, \"4 5 6\".split())\n    cond = sum(A) >= H\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7217": {"id": 7217, "code": "def main():\n    h = 10;n = 3\n    a_lst = [4, 5, 6]\n    if sum(a_lst) >= h:\n        ans = \"Yes\"\n    else:\n        ans = \"No\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "19224": {"id": 19224, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    n = 5\n    if n % 2 == 1:\n        print(0)\n    else:\n        n = n // 2\n        num = 0\n        for i in range(1, 100):\n            num += n // (5 ** i)\n        print(num)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "10875": {"id": 10875, "code": "def CheckPalindrome(S, L):\n    result = True\n    for i in range((L+1)//2):\n        if S[i] != S[-i-1]:\n            result = False\n            break\n    return result\nresult = True\nS = \"level\"\nL = len(S)\nresult = CheckPalindrome(S, L)\nif result:\n    S2 = S[:(len(S)-1) // 2]\n    L2 = len(S2)\n    result = CheckPalindrome(S2, L2)\nif result:\n    S3 = S[(L+3)//2-1:]\n    L3 = len(S3)\n    result = CheckPalindrome(S3, L3)\nif result:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "17908": {"id": 17908, "code": "def main():\n    s = \"0112\"\n    if (int(s[:2]) > 12 or int(s[:2]) == 0)and (int(s[2:4]) >= 1 and int(s[2:4]) <= 12) :\n        print(\"YYMM\")\n    elif (int(s[2:4]) > 12 or int(s[2:4]) == 0) and (int(s[:2]) >=1 and int(s[:2]) <=12) :\n        print(\"MMYY\")\n    elif (int(s[:2]) >= 1 and int(s[:2])) <= 12 and (int(s[2:4]) >=1 and int(s[2:4]) <= 12) :\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"NA\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">"]}, "17588": {"id": 17588, "code": "def YY(x):\n    if 1<=x and x<=12:\n        return True\n    else:\n        return False\nS = \"1700\"\nA=int(S[0:2])\nB=int(S[2:4])\nif YY(A) and YY(B):\n    print(\"AMBIGUOUS\")\nelif YY(A):\n    print(\"MMYY\")\nelif YY(B):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "5903": {"id": 5903, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 2\n    return (N//2) + N % 2\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19171": {"id": 19171, "code": "def main():\n    n = 5\n    if n%2==1:\n        print(0)\n        return\n    md = 10\n    cnt = 0\n    while n>=md:\n        cnt += n//md\n        md = md*5\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "609": {"id": 609, "code": "from string import ascii_lowercase\ndef main():\n    s = ['x', 'y', 'z']\n    K = 4\n    for i, c in enumerate(s):\n        num = ord(c) - ord(\"a\")\n        if num > 0 and K - (26-num) >= 0:\n            s[i] = \"a\"\n            K -= (26-num)\n    num = ord(s[-1]) - ord(\"a\")\n    last = (num + K)%26\n    s[-1] = ascii_lowercase[last]\n    print(\"\".join(s))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "77": {"id": 77, "code": "def main():\n    s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    k = 100\n    for i in range(len(s)-1):\n        if s[i] == 'a':\n            continue\n        else:\n            mod = 26-(ord(s[i])-97)%26\n            if k >= mod:\n                k -= mod\n                s[i] = 'a'\n            if k == 0:\n                break\n    if k > 0:\n        mod = ((ord(s[-1])-97)+k)%26\n        s[-1] = chr(mod+97)\n    print(''.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "19259": {"id": 19259, "code": "def main():\n    N = 5\n    if N % 2 == 1:\n        print(0)\n        return\n    N //= 2\n    ret = 0\n    while N > 0:\n        N //= 5\n        ret += N\n    print(ret)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14156": {"id": 14156, "code": "def main():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    ans = 1\n    flg = 0\n    cursol = 0\n    for i in a:\n        if cursol == 0:\n            cursol = i\n            continue\n        if flg == 0:\n            if i > cursol:\n                flg = 1\n                cursol = i\n            elif i < cursol:\n                flg = -1\n                cursol = i\n        elif flg == 1:\n            if i >= cursol:\n                cursol = i\n            elif i < cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n        else:\n            if i <= cursol:\n                cursol = i\n            elif i > cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "16926": {"id": 16926, "code": "a = \"H\";b = \"H\"\ndef judge():\n    def sub_judge1():\n        if a == 'H':\n            return True\n        else:\n            return False\n    def sub_judge2():\n        if b == 'H':\n            return True\n        else:\n            return False\n    if sub_judge2():\n        return sub_judge1()\n    else:\n        return not sub_judge1()\nif judge():\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!"]}, "14700": {"id": 14700, "code": "n = 1;p = 1\nla = [0]\nn0 = sum(1 for a in la if a % 2 == 0)\nn1 = sum(1 for a in la if a % 2 == 1)\ndef combi(n, k):\n    c = 1\n    for i in range(1, n + 1):\n        c *= i\n    for i in range(1, k + 1):\n        c //= i\n    for i in range(1, n - k + 1):\n        c //= i\n    return c\ndef answer():\n    if p == 0:\n        c0 = 2 ** n0\n        c1 = 0\n        for i in range(0, n1 + 1, 2):\n            c1 += combi(n1, i)\n        return c0 * c1\n    else:\n        c0 = 2 ** n0\n        c1 = 0\n        for i in range(1, n1 + 1, 2):\n            c1 += combi(n1, i)\n        return c0 * c1\nprint(answer())", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "13016": {"id": 13016, "code": "def main():\n    from sys import stdin\n    r = \"\"\n    if r in ('3','5','7'):\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11115": {"id": 11115, "code": "import sys\ninput = \"<function <lambda>>\"\ndef pal(s, L, R):\n    return s[L] == s[R] and (L >= R or pal(s, L + 1, R - 1))\ns = \"akasaka\"\nn = len(s)\nprint('Yes' if pal(s, 0, n - 1) and pal(s, 0, (n - 1) // 2 - 1) and pal(s, (n + 3) // 2 - 1, n - 1) else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "129": {"id": 129, "code": "import sys\nclass alphabet(): \n    def __init__(self, capitalize):\n        self.num = dict() \n        self.index = dict() \n        self.abc = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"            ,\"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n        if capitalize: \n            for i in range(26): self.abc[i] = self.abc[i].upper()\n        for i, a in enumerate(self.abc):\n            self.num[a] = i\n            self.index[i] = a\ndef solve():\n    S = ['x', 'y', 'z']\n    length = len(S)\n    K = 4\n    changed = 0\n    AB = alphabet(False)\n    for i, s in enumerate(S):\n        aId = AB.num[s]\n        if aId == 0: continue\n        else:\n            toA = 26 - aId\n            if K - changed >= toA: \n                S[i] = \"a\"\n                changed += toA\n    if K - changed > 0:\n        aId = AB.num[S[length - 1]]\n        S[length - 1] = AB.index[(aId + K - changed) % 26]\n    print(\"\".join(map(str, S)))\n    return 0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8284": {"id": 8284, "code": "import math\nn = 4;k = 3\na = [2, 3, 1, 4]\ndef get_1_index(a):\n    for i,j in enumerate(a):\n        if j==1:\n            return i\nindex=get_1_index(a)\nmae=index\nusiro=n-index-1\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5370": {"id": 5370, "code": "def solve():\n    n = 100\n    ans = (n + 1) //2\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "6665": {"id": 6665, "code": "def resolve():\n    H = 210;N = 5\n    A = [31, 41, 59, 26, 53]\n    print(\"Yes\" if sum(A) >= H else \"No\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "6087": {"id": 6087, "code": "def main():\n    n = 100\n    if n % 2 == 0:\n        print(int(n/2))\n    else:\n        print(int(n/2)+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "9451": {"id": 9451, "code": "import sys\ndef input(): return \"2017/01/31\".strip()\ndef resolve():\n    s = \"2017/01/31\"\n    print('2018'+s[4:])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "1912": {"id": 1912, "code": "import sys\ninput = sys.stdin.readline\ndef mi(): return map(int, \"10 3 5\".split())\nN, A, B = mi()\nans = [0,0]\nans[0] = min(A,B)\nans[1] = max(A+B-N,0)\nprint(ans[0], ans[1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10599": {"id": 10599, "code": "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nA = 8;B = 12;K = 2\nset_a = set(make_divisors(A))\nset_b = set(make_divisors(B))\nset_ab = set_a.intersection(set_b)\nlist_ab = list(set_ab)\nlist_ab.sort()\nprint(list_ab[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1813": {"id": 1813, "code": "import sys\nimport collections\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    n = 100;a = 100;b = 100\n    print(min(a, b), max(a + b - n, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5566": {"id": 5566, "code": "def main():\n    page = 5\n    if (page % 2) == 1:\n        print(page // 2 + 1)\n    else:\n        print(page // 2)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14848": {"id": 14848, "code": "import math\ndef combination(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\nodd = 0\neven = 0\nfor a in A:\n    if a % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n    tmp = combination(odd, i)\n    for j in range(0, even+1):\n        ans += tmp * combination(even, j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3647": {"id": 3647, "code": "import sys\ndef main():\n    A = 12;B = 4\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "14982": {"id": 14982, "code": "def count(l):\n    res = {0:0, 1:0}\n    for d in l:\n        if d in res:\n            res[d] += 1\n        else:\n            res[d] = 1\n    return res\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    if n < r: return 0\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nn = 3;p = 0\ndata = [1, 1, 1]\ndata = [i%2 for i in data]\noz = count(data)\nans = 0\nm = 2**oz[0]\nif p == 0:\n    choice = 2\n    ans += m\nelif p == 1:\n    choice = 1\nones = oz[1]\nwhile choice <= ones:\n    ans += m*cmb(ones, choice)\n    choice += 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "12028": {"id": 12028, "code": "def p_a():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    print(0 if m1 == m2 else 1)\np_a()", "coverage": [">", ">", ">", ">", ">"]}, "7173": {"id": 7173, "code": "def atc_153b(a: str, b: str) -> str:\n    HN = a.split(\" \")\n    H = int(HN[0])\n    N = int(HN[1])\n    A = b.split(\" \")\n    A_int = [int(ai) for ai in A]\n    damage = sum(A_int)\n    if (H - damage) <= 0:\n        return \"Yes\"\n    else:\n        return \"No\"\na = \"10 3\"\nb = \"4 5 6\"\nprint(atc_153b(a, b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "411": {"id": 411, "code": "def main():\n    s = ['a']\n    k = 25\n    i=0\n    while k>=0 and i<len(s)-1:\n        if s[i]!='a' and k>=123-ord(s[i]):\n            k-=123-ord(s[i])\n            s[i]=\"a\"\n        i+=1\n    if i==len(s)-1:\n        s[-1]=chr(97+(k-(123-ord(s[i])))%26)\n    print(\"\".join(s))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6360": {"id": 6360, "code": "from bisect import bisect_right\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    l = [0] * n\n    for index, i in enumerate(b):\n        l[index] = n - bisect_right(c, i)\n    s = [l[-1]] * n\n    for i in range(n - 2, -1, -1):\n        s[i] = s[i + 1] + l[i]\n    ans = 0\n    for i in a:\n        j = bisect_right(b, i)\n        if j < n:\n            ans += s[j]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8259": {"id": 8259, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    ans = 0\n    for x in range(1, N+1):\n        if (K-1)*x + 1 >= N:\n            ans = x\n            break\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19092": {"id": 19092, "code": "def solve(n):\n    if n % 2 == 1:\n        return 0 \n    div_2 = 0\n    cur = 2\n    while cur <= n:\n        div_2 += (n // cur)\n        cur = cur * 2\n    div_5 = 0\n    cur = 5\n    while cur <= n:\n        div_5 += (n // cur) // 2\n        cur = cur * 5\n    return min(div_2, div_5)\nn = 5\nprint(solve(n))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "15117": {"id": 15117, "code": "N = 2;P = 0\nA = [1, 3]\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\ndef calc(n):\n    ans = 0\n    for r in range(n-n%2, -1, -2):\n        ans += combinations_count(n, r)\n    return ans\ngusu = 0\nfor a in A:\n    if a%2 == 0:\n        gusu +=1\nkisu = N - gusu\np0 = 2**gusu*calc(kisu)\nif P == 0:\n    print(p0)\nelse:\n    print(2**N-p0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!"]}, "19170": {"id": 19170, "code": "def main():\n    n = 12\n    if n%2==1:\n        print(0)\n        return\n    md = 10\n    cnt = 0\n    while n>=md:\n        cnt += n//md\n        md = md*5\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5385": {"id": 5385, "code": "import sys\nfrom math import ceil\ndef main():\n    input = sys.stdin.buffer.readline\n    n = 100\n    print(ceil(n / 2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10106": {"id": 10106, "code": "N = 3\nS = \"())\"\ndef add1(S):\n  cum=[0]\n  for i in range(len(S)):\n    if S[i]=='(':cum.append(cum[-1]+1)\n    else:cum.append(cum[-1]-1)\n  if min(cum)>=0:return S\n  out = '('*(-min(cum))\n  out += S\n  return out\ndef add2(S):\n  cum=[0]\n  for i in range(len(S)):\n    if S[i]=='(':cum.append(cum[-1]+1)\n    else:cum.append(cum[-1]-1)\n  if cum[-1]==0:return S\n  n = cum[-1]\n  out = S + ')'*n\n  return out\nS = add1(S)\nS = add2(S)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "10770": {"id": 10770, "code": "def isPalindrome(string):\n    flag = True\n    len_string = len(string)\n    if len_string == 1:\n        return flag\n    for i in range(len_string//2):\n        if string[i] != string[-1-i]:\n            flag = False\n            break\n    return flag\nS = \"level\"\nlen_s = len(S)\nfro_s = S[:len_s//2]\nif len_s % 2 == 0:\n    bak_s = S[-len_s//2:]\nelse:\n    bak_s = S[-len_s//2 + 1:]\nif isPalindrome(S) and isPalindrome(fro_s) and isPalindrome(bak_s):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "6546": {"id": 6546, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a_s = sorted(a)\n    c_s = sorted(c)\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a_s, i)\n        e = n - bisect.bisect_right(c_s, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12523": {"id": 12523, "code": "def euclidean(a,b):\n  _ = a % b\n  if _ == 0:\n    return b\n  else:\n    while 1:\n      if b % _ == 0 :\n        break\n      else:\n        _ = b % _\n    return _\nA = 1;B = 1;K = 1\na = max(A, B)\nb = min(A, B)\ne = euclidean(a, b)\nby = []\nr = int(e ** (1 / 2))\nfor i in range(1, r + 1):\n  if e % i == 0:\n    by.append(i)\n    j = e // i\n    if j != i:\n      by.append(j)\nby.sort(reverse = True)\nprint(by[K - 1])", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "13506": {"id": 13506, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    s = s.replace(\",\", \" \")\n    print(s)\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "16342": {"id": 16342, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\ndef binary(l,i):\n  r=N-1\n  while l<=r:\n    m=(l+r)//2\n    if A[m]==i:\n      return A[m]\n    elif A[m]>i:\n      r=m-1\n    else:\n      l=m+1\n  x=abs(A[m]-i)\n  for j in range(max(0,m-2),min(m+3,N-1)):\n    if x >= abs(A[j]-i):\n      res = A[j]     \n      x=abs(A[j]-i)\n  return res\nprint(A[-1],binary(1,A[-1]/2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14712": {"id": 14712, "code": "import functools\n@functools.lru_cache(maxsize=None)\ndef num_counts(size, P):\n    if size == 1:\n        return 1 + (A[size - 1] + 1) % 2 if P == 0 else A[size - 1] % 2\n    if A[size - 1] % 2 == 0:\n        return num_counts(size - 1, P) * 2\n    else:\n        return num_counts(size - 1, P) + num_counts(size - 1, (P + 1) % 2)\nif __name__ == \"__main__\":\n    N = 3;P = 0\n    A = [1, 1, 1]\n    print(num_counts(len(A), P))", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14584": {"id": 14584, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\nA = [0]\nx = A.count(0)\ny = n - x\nif p == 1:\n    cnt = 0\n    for i in range(y + 1):\n        if i % 2 == 1:\n            cnt += combinations_count(y, i)\n    print(2 ** x * cnt)\nelse:\n    cnt = 0\n    for i in range(y + 1):\n        if i % 2 == 0:\n            cnt += combinations_count(y, i)\n    print(2 ** x * cnt)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!"]}, "14555": {"id": 14555, "code": "n = 3;p = 0\na = [1, 1, 1]\nn_odd=0\nn_even=0\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nfor i in a:\n    if i%2==0:\n        n_even+=1\n    else:\n        n_odd+=1\nans=0\nif p==0:    \n    for j in range(n_odd+1):\n        if j%2==1:\n            continue\n        else:\n            tmp=0\n            for l in range(n_even+1):\n                tmp+=cmb(n_even,l)\n            ans+=cmb(n_odd,j)*tmp\nelif p==1:\n    for k in range(n_odd+1):\n        if k%2==0:\n            continue\n        else:\n            tmp=0\n            for l in range(n_even+1):\n                tmp+=cmb(n_even,l)\n            ans+=cmb(n_odd,k)*tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14615": {"id": 14615, "code": "N = 1;P = 1\nA = [50]\neven = 0\nodd = 0\nfor i in A:\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nimport math\ndef Perm(n, r):\n    return math.factorial(n)//math.factorial(n-r)\ndef comb(n, r):\n    return Perm(n, r)//math.factorial(r)\nif P == 0:\n    ans = 0\n    for x in range(odd+1):\n        if x % 2 == 0:\n            ans += comb(odd,x)\n    ans *= 2**even\n    print(ans)\nelse:\n    ans = 0\n    for x in range(odd+1):\n        if x % 2 == 1:\n            if odd != 0:\n                ans += comb(odd,x)\n    ans *= 2**even\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "2315": {"id": 2315, "code": "import sys\ndef input(): return \"10 7 5\".rstrip()\ndef main():\n    n = 10;a = 7;b = 5\n    print(min(a,b),max(0,a+b-n))\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7802": {"id": 7802, "code": "def main():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    ans = 1\n    N -= K\n    if N % (K-1) == 0:\n        ans += N // (K-1)\n    else:\n        ans += N // (K-1) + 1\n    return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "9022": {"id": 9022, "code": "def main():\n a = 1\n b = 2\n c = 4\n d = 8\n e = 9\n lim = 15\n if max(a,b,c,d,e) - min(a,b,c,d,e) <= lim:\n     print('Yay!')\n else:\n     print(':(')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15981": {"id": 15981, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 15\n    ans = a - 2 * b\n    if ans >= 0:\n        print(ans)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "2395": {"id": 2395, "code": "def main():\n    N = 4;M = 3\n    ans = N*(N-1)//2 + M*(M-1)//2\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3417": {"id": 3417, "code": "def main():\n    a = 20;b = 30\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12251": {"id": 12251, "code": "s = \"atcoder\"\nn = len(s)\nflag = False\ndef palind(S):\n    size = len(S)\n    for i in range(size//2):\n        if S[i] != S[-1-i]:\n            return False\n    return True\nif palind(s):\n    m = (n-1)//2\n    sb = s[:m]\n    if palind(sb):\n        sa = s[m+1:]\n        flag = palind(sa)\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", ">"]}, "19345": {"id": 19345, "code": "def gcd(a, b):\n  while b:\n    a, b = b, a%b\n  return a\ndef lcm(a, b):\n  return a*b // gcd(a, b)\nN = 3\nans = lcm(2, N)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10472": {"id": 10472, "code": "def main():\n    a = 8;b = 12;k = 2\n    ans = []\n    for i in range(1,min(a,b)+1):\n        if a % i == 0 and b % i == 0:\n            ans.append(i)\n    print(ans[-k])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3496": {"id": 3496, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 12;b = 4\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17092": {"id": 17092, "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    a = \"D\";b = \"H\"\n    if a == 'H':\n        print(b)\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "10771": {"id": 10771, "code": "def isPalindrome(string):\n    flag = True\n    len_string = len(string)\n    if len_string == 1:\n        return flag\n    for i in range(len_string//2):\n        if string[i] != string[-1-i]:\n            flag = False\n            break\n    return flag\nS = \"atcoder\"\nlen_s = len(S)\nfro_s = S[:len_s//2]\nif len_s % 2 == 0:\n    bak_s = S[-len_s//2:]\nelse:\n    bak_s = S[-len_s//2 + 1:]\nif isPalindrome(S) and isPalindrome(fro_s) and isPalindrome(bak_s):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "908": {"id": 908, "code": "def main():\n    k = 101\n    if k & 0:\n        print(-1)\n        return\n    r = 7 % k\n    l = 0\n    while r and l < k:\n        r = (r * 10 + 7) % k\n        l += 1\n    print([l+1, -1][l == k])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17863": {"id": 17863, "code": "def main():\n    inp = \"0112\"\n    ch1=int(inp[0:2])\n    ch2=int(inp[2:])\n    if inp[0]==0:\n        ch1=int(inp[1])\n    if inp[2]==0:\n        ch2=int(inp[-1])\n    if ch1<=12 and ch1>=1:\n        if ch2<=12 and ch2>=1 and ch2<=12 and ch2>=1:\n            print(\"AMBIGUOUS\")\n            return\n        elif ch2<=12 or ch2>=1:\n            print(\"MMYY\")\n            return\n    if ch1>12 or ch1<1:\n        if ch2<=12 and ch2>=1:\n            print(\"YYMM\")\n            return\n        else:\n            print(\"NA\")\n            return\nmain()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "17387": {"id": 17387, "code": "s = \"1700\"\ndef YYMM(s):\n    p = int(s[2:])\n    if 1 <= p <= 12:\n        return True\n    return False\ndef MMYY(s):\n    p = int(s[:2])\n    if 1 <= p <= 12:\n        return True \n    return False\nif YYMM(s) and MMYY(s):\n    print('AMBIGUOUS')\nelif YYMM(s):\n    print('YYMM')\nelif MMYY(s):\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12335": {"id": 12335, "code": "S = \"akasaka\"\ndef iskai(s):\n  result=False\n  if s == s[::-1]:\n    result=True\n  return(result)\nans = 'No'\nhf = len(S)//2 + 1\nif iskai(S) and iskai(S[:hf-1]) and iskai(S[hf:]):\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14843": {"id": 14843, "code": "def resolve():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    odd = 0\n    for a in A:\n        if a % 2 == 1:\n            odd += 1\n    even = N - odd\n    if P == 1:\n        if odd > 0:\n            ans = (2**even) * (2**(odd - 1))\n        else:\n            ans = 0\n    else:\n        if odd == 0:\n            ans = (2**even)\n        else:\n            ans = (2**even) * (2**(odd - 1))\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "13331": {"id": 13331, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    ans = s.replace(\",\", \" \")\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "16013": {"id": 16013, "code": "def main():\n    A = 12;B = 4\n    print(max(A - 2*B, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3068": {"id": 3068, "code": "def diff_number(runrun_num: int, master_num: int = 753) -> int:\n    return abs(master_num - runrun_num)\ndef main():\n    s = \"35753\"\n    min_num = int(s[0:3])\n    for i in range(3, len(s) + 1):\n        runrun_num = int(s[(i - 3):i])\n        if diff_number(runrun_num) < diff_number(min_num):\n            min_num = runrun_num\n    print(diff_number(min_num))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6979": {"id": 6979, "code": "def main():\n    H = 10;N = 3\n    A = map(int, \"4 5 6\".split())\n    if sum(A) >= H:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14628": {"id": 14628, "code": "import math\ndef combi(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\nL = [50]\nodd = 0\neven = 0\nfor a in L:\n    if a % 2:\n        odd += 1\n    else:\n        even += 1\nc = 0\nif p == 0:\n    for i in range(0, odd + 1, 2):\n        c += combi(odd, i)\nelse:\n    for i in range(1, odd + 1, 2):\n        c += combi(odd, i)\nans = 2 ** even * c\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">"]}, "9766": {"id": 9766, "code": "def hoge(S):\n    cum = 0\n    mi = 0\n    for s in S:\n        cum += 1 if s == '(' else -1\n        mi = min(mi, cum)\n    return (-mi, cum - mi)\nN = 3\nS = \"())\"\nl, r = hoge(S)\nprint('(' * l + S + ')' * r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "482": {"id": 482, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    s = \"a\"\n    K = 25\n    ans = \"\"\n    for c in s:\n        if c == \"a\":\n            ans += c\n        else:\n            cost = 26 - (ord(c) - ord(\"a\"))\n            if cost <= K:\n                K -= cost\n                ans += \"a\"\n            else:\n                ans += c\n    finalletter = ans[-1]\n    ans = ans[:-1] + chr(ord(\"a\") + (ord(finalletter) - ord(\"a\") + K) % 26)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "15038": {"id": 15038, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\no, e = 0, 0\nfor i in A:\n    if i % 2 == 0:\n        e += 1\n    else:\n        o += 1\nans = 0\nfor i in range(P, o+1, 2):\n    ans += comb(o, i)\nprint(ans * 2 ** e)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "14542": {"id": 14542, "code": "import math\ndef comb(n, r): \n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\na = [1, 1, 1]\na_even = 0\na_odd = 0\nfor i in range(n):\n    if a[i]%2 == 0:\n        a_even += 1\n    else:\n        a_odd += 1\nans = 0\nif p%2 == 0:\n    k = 0\n    for i in range(10**10):\n        if 2*i > a_odd:\n            break\n        k += comb(a_odd, 2*i)\n    print(k*2**a_even)\nelse:\n    k = 0\n    for i in range(10**10):\n        if 2*i+1 > a_odd:\n            break\n        k += comb(a_odd, 2*i+1)\n    print(k*2**a_even)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "6830": {"id": 6830, "code": "def solve():\n    h = 20;n = 3\n    a = map(int, \"4 5 6\".split())\n    for i in a:\n        h -= i\n    print('YNeos'[h>0::2])\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19361": {"id": 19361, "code": "import math\ndef main():\n a = 3\n print(a * 2 // math.gcd(a,2))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "1729": {"id": 1729, "code": "def main():\n    n = 100;a = 100;b = 100\n    max_num = min(a, b)\n    min_num = max(0, a + b - n)\n    print(max_num, min_num)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12714": {"id": 12714, "code": "def ABC_114_A():\n    X = 5\n    if X==7 or X==5 or X==3:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    ABC_114_A()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "10996": {"id": 10996, "code": "def main():\n    S = \"atcoder\"\n    N = len(S)\n    for i in range(N):\n        if S[i] != S[N-i-1]:\n            print(\"No\")\n            return\n    M = (N-1)//2\n    for i in range(M):\n        if S[i] != S[N-i-1]:\n            print(\"No\")\n            return\n    L = (N+3)//2 - 1\n    for i in range(L, N):\n        if S[i] != S[N+L-i-1]:\n            print(\"No\")\n            return\n    print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16922": {"id": 16922, "code": "import sys\ndef input(): return \"D D\".strip()\ndef main():\n    a = \"D\";b = \"D\"\n    if a == b:\n        print('H')\n    else:\n        print('D')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17451": {"id": 17451, "code": "def solve(yy,mm):\n    if 1<=yy<=12:\n        if 1 <= mm <=12:\n            return 'AMBIGUOUS'\n        else:\n            return 'MMYY'\n    else:\n        if 1<= mm <= 12:\n            return 'YYMM'\n        else:\n            return \"NA\"\ns = \"1905\"\nyy = int(s[:2])\nmm = int(s[2:])\nprint(solve(yy,mm))", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3529": {"id": 3529, "code": "def resolve():\n    A = 12;B = 4\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "7011": {"id": 7011, "code": "def main():\n    h = 10;n = 3\n    a = [4, 5, 6]\n    if h > sum(a):\n        print('No')\n    else:\n        print('Yes')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "5471": {"id": 5471, "code": "def A():\n    n = 2\n    print(-(-n//2))\nA()", "coverage": [">", ">", ">", ">"]}, "8739": {"id": 8739, "code": "def resolve():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2419": {"id": 2419, "code": "import math\ndef calc_combi(n,m):\n    if n<=1:\n        return 0\n    return math.factorial(n)/(math.factorial(m)*(math.factorial(n-m)))\nn = 2;m = 1\nans=int(calc_combi(n,2)+calc_combi(m,2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16246": {"id": 16246, "code": "import math\nimport itertools\ndef swap(a,b):\n    return max(a,b),min(a,b)\ndef comb(n,r):\n    return math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n_ = \"5\"\nan = [6, 9, 4, 2, 11]\nan.sort()\ntarget = an[-1]/2\nres = min(enumerate(an), key=lambda x: abs(target - x[1]))\nprint(an[-1], res[1])", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "13852": {"id": 13852, "code": "def nyu():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    return N,A\ndef kansu(LN,LA):\n    highflg = False\n    lowflg = False\n    count = 1\n    for n in range(LN-1):\n        if LA[n] == LA[n+1]:\n            continue\n        elif LA[n] < LA[n+1]:\n            highflg = True\n            if lowflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n        else:\n            lowflg = True\n            if highflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n    print(count)\nN,A = nyu()\nkansu(N,A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9297": {"id": 9297, "code": "def main():\n    s = \"2017/01/31\"\n    ans = \"2018\" + s[4:]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "17558": {"id": 17558, "code": "def main():\n    s = \"1700\"\n    s1=int(s[:2])\n    s2=int(s[2:])\n    yymm = 1 <= s2 <= 12\n    mmyy = 1 <= s1 <= 12\n    if yymm and mmyy:\n        print(\"AMBIGUOUS\")\n    elif yymm:\n        print(\"YYMM\")\n    elif mmyy:\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "762": {"id": 762, "code": "def main():\n    k = 101\n    if k % 2 ==0:\n        print(-1)\n        return\n    last = 0\n    for i in range(1000000):\n        if (last*10 + 7) % k == 0:\n            print(i+1)\n            return\n        last = (last*10 + 7) % k\n    print(-1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "17789": {"id": 17789, "code": "def solve():\n    s = \"1905\"\n    front = int(s[:2])\n    back = int(s[2:])\n    if 1 <= front <= 12 and 1 <= back <= 12:\n        print('AMBIGUOUS')\n    elif 1 <= front <= 12:\n        print('MMYY')\n    elif 1 <= back <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">"]}, "2869": {"id": 2869, "code": "def solve():\n    N = \"1234567876\"\n    target = 753\n    ans = 1000\n    for i in range(len(N)-2):\n        ans = min(ans, abs(753-int(N[i:i+3])))\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14162": {"id": 14162, "code": "def answer(arr):\n    n = len(arr)\n    count = 0\n    INC = 'INCREASING'\n    DEC = 'DECREASING'\n    STATE = None\n    if n == 1 or n == 2:\n        return 1\n    for i in range(n-1):\n        diff = arr[i+1] - arr[i]\n        if diff == 0:\n            continue\n        if STATE is None:\n            if diff > 0:\n                STATE = INC\n            if diff < 0:\n                STATE = DEC\n            count += 1\n        elif STATE is INC:\n            if diff < 0:\n                STATE = None\n        elif STATE is DEC:\n            if diff > 0:\n                STATE = None\n        if STATE is None and i == n-2:\n            count += 1\n    return count\nn = 6\narr = [1, 2, 3, 2, 2, 1]\nprint(answer(arr))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", ">"]}, "10722": {"id": 10722, "code": "def check(string):\n    if string == string[::-1]:\n        return True\n    else:\n        return False\nS = \"level\"\nn = len(S)\nS1 = S[:(n-1)//2]\nS2 = S[(n+1)//2:]\nif check(S) and check(S1) and check(S2):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12021": {"id": 12021, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    M1 = 11;D1 = 16\n    M2 = 11;D2 = 17\n    if M1 == M2:\n        ans = 0\n    else:\n        ans = 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "6581": {"id": 6581, "code": "import math\nimport copy\nimport sys\nimport bisect\ninput = sys.stdin.readline\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    c.sort()\n    ans=0\n    for x in b:\n        ans += bisect.bisect_left(a, x) * (n - bisect.bisect_right(c, x))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5203": {"id": 5203, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    S = \"internationalization\"\n    print(S[0]+str(len(S)-2)+S[-1])\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15225": {"id": 15225, "code": "import math\ndef main():\n  x = 64146;y = 123;z = 456\n  x -= z\n  print(x//(y+z))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17783": {"id": 17783, "code": "def check_my(string):\n    if 1 <= int(string) <= 12:\n        return 'YorM'\n    else:\n        return 'Y'\ns = \"1905\"\nmy_set = (check_my(s[0:2]), check_my(s[2:4]))\nif my_set == ('YorM', 'YorM'):\n    print('AMBIGUOUS')\nelif my_set == ('YorM', 'Y'):\n    print('MMYY')\nelif my_set == ('Y', 'YorM'):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "1728": {"id": 1728, "code": "def main():\n    n = 10;a = 7;b = 5\n    max_num = min(a, b)\n    min_num = max(0, a + b - n)\n    print(max_num, min_num)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "866": {"id": 866, "code": "K = 2\ndef solve():\n    val = 0\n    for i in range(1, K + 1):\n        val = val * 10 + 7\n        val = val % K\n        if val == 0:\n            return i\n    return -1\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "11020": {"id": 11020, "code": "def is_palindrome(s):\n    res = s == s[::-1]\n    return res\nS = \"akasaka\"\nN = len(S)\nans = ['No', 'Yes'][is_palindrome(S) & is_palindrome(S[:((N-1)//2)]) & is_palindrome(S[((N+1)//2):])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14145": {"id": 14145, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    ans = 0\n    i = 0\n    while i < n:\n        while i+1<n and a[i]==a[i+1]:\n            i += 1\n        if i+1<n and a[i] < a[i+1]:\n            while i+1<n and a[i]<=a[i+1]:\n                i += 1\n        elif i+1<n and a[i] > a[i+1]:\n            while i+1<n and a[i]>=a[i+1]:\n                i += 1\n        ans += 1\n        i += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17314": {"id": 17314, "code": "import sys\nimport math\nimport bisect\ndef main():\n    a = \"D\";b = \"H\"\n    if a == 'H' and b == 'H':\n        print('H')\n    elif a == 'D' and b == 'D':\n        print('H')\n    else:\n        print('D')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "10087": {"id": 10087, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 8\n    S = \"))))((((\"\n    ans = \"\"\n    n_left = 0\n    n_right = 0\n    for s in S:\n        if s == \"(\":\n            n_left += 1\n        else:\n            if n_left > 0:\n                n_left -= 1\n            else:\n                n_right += 1\n    ans = \"\".join((\"(\" * n_right, S, \")\" * n_left))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "11615": {"id": 11615, "code": "def main():\n    S = \"SUN\"\n    lst = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\n    ans = 7 - lst.index(S)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "731": {"id": 731, "code": "import sys\ndef input(): return \"2\".rstrip()\ndef main():\n    k = 2\n    keta = 1\n    mod = 7%k\n    if k % 7 == 0:\n        max_k = 9*k//7\n    else:\n        max_k = 9*k\n    while keta < max_k:\n        if mod == 0:\n            print(keta)\n            break\n        mod = (mod*10 + 7)%k\n        keta += 1\n    else:\n        print(-1)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">"]}, "5667": {"id": 5667, "code": "def main():\n    N = 100\n    if N % 2 == 0:\n        print(N // 2)\n    else:\n        print(N // 2 + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "18849": {"id": 18849, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    h = 2\n    w = 100\n    n = 200\n    if h>=w:\n        print((n-1)//h+1)\n    else:\n        print((n-1)//w+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "16651": {"id": 16651, "code": "def main():\n  a = \"D\";b = \"H\"\n  if a == 'H':\n    ans = b\n  else:\n    if b == 'H':\n      ans = 'D'\n    else:\n      ans = 'H'\n  print(ans)\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "13308": {"id": 13308, "code": "def main():\n    print(\"haiku,atcoder,tasks\".replace(\",\", \" \"))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "4715": {"id": 4715, "code": "def answer(s: str) -> str:\n    return f'{s[0]}{len(s) - 2}{s[-1]}'\ndef main():\n    s = \"smiles\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8573": {"id": 8573, "code": "def resolve():\n    N = 7\n    A = [3, 3, 4, 5, 4, 5, 3]\n    a = [5, 3, 4, 4, 2, 3, 2]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3490": {"id": 3490, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 12;b = 4\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19391": {"id": 19391, "code": "def main():\n    N = 3\n    if N % 2 == 0: return N\n    else: return N*2\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">"]}, "961": {"id": 961, "code": "def not_xxx(N):\n    X = list(str(N))\n    if len(set(X)) == 1:\n        return False\n    else:\n        return True\nN = 750\nwhile not_xxx(N):\n    N += 1\nprint(N)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "255": {"id": 255, "code": "S = \"xyz\"\nS = list(S)\ndef func(c) -> int:\n    t = 26 - (ord(c) - ord('a'))\n    t %= 26\n    return t\nL = [func(c) for c in S]\nK = 4\nfor i in range(len(L)):\n    if(L[i] <= K):\n        K -= L[i]\n        L[i] = 0\n    else:\n        continue\nif(K > 0):\n    K %= 26\n    L[-1] -= K\n    if(L[-1] < 0):\n        L[-1] += 26\ndef gunc(c):\n    t = 26 - c\n    t %= 26\n    return chr(t+97)\nans = [gunc(c) for c in L]\nst = ''\nfor c in ans:\n    st += c\nprint(st)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15802": {"id": 15802, "code": "def resolve():\n    X = 100000;Y = 1;Z = 1\n    print((X-Z)//(Y+Z))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "9808": {"id": 9808, "code": "from collections import deque\ndef main():\n    n = 6\n    s = \")))())\"\n    left = 0\n    stack = deque([])\n    for ss in s:\n        if ss == \"(\":\n            stack.append(\"(\")\n        elif not stack:\n            left += 1\n        else:\n            stack.pop()\n    print(left * \"(\" + s + len(stack) * \")\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3695": {"id": 3695, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 20;b = 30\nprint(curtain(a,b))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "2423": {"id": 2423, "code": "import math\ndef calc_combi(n,m):\n    if n<=1:\n        return 0\n    return math.factorial(n)/(math.factorial(m)*(math.factorial(n-m)))\nn = 0;m = 3\nans=int(calc_combi(n,2)+calc_combi(m,2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11189": {"id": 11189, "code": "def check(str):\n    str2 = str[::-1]\n    return str == str2\ndef main():\n    s = \"akasaka\"\n    n = len(s)\n    first = s[:(n-1)//2]\n    end = s[((n+3)//2)-1:]\n    if all((check(s), check(first), check(end))):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2664": {"id": 2664, "code": "import sys\ndef input(): return \"1 7 9 4\".strip()\ndef resolve():\n    l = {1, 4, 9, 7}\n    if l=={1,7,9,4}:\n        print('YES')\n    else:\n        print('NO')\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16183": {"id": 16183, "code": "N = 5\nA = [6, 9, 4, 2, 11]\nif N > 2:\n    A.sort()\n    num_total = A[-1]\n    A.pop()\n    def isOK(index, key, l):\n        if l[index] >= key:\n            return True\n        else:\n            return False\n    def meguru_search(l,key): \n        left = -1\n        right = len(l)\n        while (right - left) > 1: \n            mid = left + (right - left)//2\n            if isOK(mid,key,l):\n                right = mid\n            else:\n                left = mid\n        return right\n    if num_total%2 == 0:\n        Max = num_total//2 \n    else:\n        Max = num_total//2 + 1\n    Maxind1 = meguru_search(A,Max) \n    Maxind2 = Maxind1 - 1 \n    abs_1 = abs(Max - A[Maxind1])\n    abs_2 = abs(Max - A[Maxind2])\n    if abs_1 > abs_2: \n        r = A[Maxind2]\n    else:\n        r = A[Maxind1]\n    print(num_total,r)\nelse:\n    print(max(A),min(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]}, "7220": {"id": 7220, "code": "def main():\n    h = 211;n = 5\n    a_lst = [31, 41, 59, 26, 53]\n    if sum(a_lst) >= h:\n        ans = \"Yes\"\n    else:\n        ans = \"No\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "10536": {"id": 10536, "code": "import math\nA = 100;B = 50;K = 4\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndivisors = make_divisors(math.gcd(A, B))\ndivisors.sort(reverse=True)\nprint(divisors[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9543": {"id": 9543, "code": "def main():\n    s = \"2017/01/31\"\n    print(s.replace('2017', '2018'))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "643": {"id": 643, "code": "import sys\ndef input(): return \"101\".rstrip()\ndef main():\n    k = 101\n    keta = 1\n    mod = 7%k\n    while keta < 10**7:\n        if mod==0:\n            print(keta)\n            break\n        keta += 1\n        mod = (mod*10 + 7)%k\n    else:\n        print(-1)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16250": {"id": 16250, "code": "def solve(n,a):\n  a = list(sorted(a,reverse=True))\n  first = a[0]\n  b = a[1:]\n  delta = [abs(x-first//2) for x in b]\n  second = b[delta.index(min(delta))]\n  return first,second\ndef main():\n  N = 5\n  a = [6, 9, 4, 2, 11]\n  print(*solve(N,a))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13796": {"id": 13796, "code": "import sys\nreadline = sys.stdin.readline\nflagset = ['not increase', 'flat', 'not decrease']\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    cnt = 0\n    A0 = A[0]\n    flag = flagset[1]\n    for i in range(N-1):\n        Ai = A[i]\n        Ai1 = A[i+1]\n        if flag == 'flat':\n            if Ai < Ai1:\n                flag = 'not decrease'\n            elif Ai > Ai1:\n                flag = 'not increase'\n            elif Ai == Ai1:\n                flag = 'flat'\n            else:\n                cnt += 1\n        elif flag == 'not decrease':\n            if Ai <= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n        else:\n            if Ai >= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n    cnt += 1\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "3696": {"id": 3696, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 12;B = 4\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18554": {"id": 18554, "code": "def main():\n    h = 3\n    w = 7\n    n = 10\n    if n % max(h,w) == 0:\n        print(n//max(h,w))\n    else:\n        print(n//max(h,w) + 1)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12029": {"id": 12029, "code": "def solve(m1, d1, m2, d2):\n    return int(m1 != m2)\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(solve(m1, d1, m2, d2))", "coverage": [">", ">", ">", ">", ">"]}, "10110": {"id": 10110, "code": "def resolve():\n    N = 6\n    S = [')', ')', ')', '(', ')', ')']\n    nopen = 0\n    addleft = 0\n    addright = 0\n    for s in S:\n        if s == \"(\":\n            nopen += 1\n        else:\n            if nopen == 0:\n                addleft += 1\n            else:\n                nopen -= 1\n    addright = nopen\n    print(\"(\"*addleft+\"\".join(S)+\")\"*addright)\nif __name__ == '__main__':\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "17746": {"id": 17746, "code": "def solve():\n    s = \"0112\"\n    a = int(s[:2])\n    if a == 0 or a > 12:\n        x = \"YY\"\n    else:\n        x = \"MM\"\n    b = int(s[2:])\n    if b == 0 or b > 12:\n        y = \"YY\"\n    else:\n        y = \"MM\"\n    if x + y == \"YYYY\":\n        print(\"NA\")\n    elif x + y == \"MMMM\":\n        print(\"AMBIGUOUS\")\n    else:\n        print(x + y)\nsolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">"]}, "12350": {"id": 12350, "code": "def is_kaibun(string):\n    for i in range((len(string)//2)+1):\n        if string[i] != string[len(string)-i-1]:\n            return False\n    else:\n        return True\nS = \"atcoder\"\nif is_kaibun(S) and is_kaibun(S[0:(len(S)-1)//2]) and is_kaibun(S[((len(S)+3)//2)-1:len(S)]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "17453": {"id": 17453, "code": "def solve(yy,mm):\n    if 1<=yy<=12:\n        if 1 <= mm <=12:\n            return 'AMBIGUOUS'\n        else:\n            return 'MMYY'\n    else:\n        if 1<= mm <= 12:\n            return 'YYMM'\n        else:\n            return \"NA\"\ns = \"1700\"\nyy = int(s[:2])\nmm = int(s[2:])\nprint(solve(yy,mm))", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "6014": {"id": 6014, "code": "def main():\n    n = 2\n    if n%2:\n        print(n//2+1)\n    else:\n        print(n//2)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "12266": {"id": 12266, "code": "S = \"level\"\nN=len(S)\ndef isKaibun(S):\n  if S==S[::-1]:\n    return True\n  return False\nif isKaibun(S) and isKaibun(S[:(N-1)//2]) and isKaibun(S[(N+3)//2-1:]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15221": {"id": 15221, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    x = 64145;y = 123;z = 456\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19097": {"id": 19097, "code": "def solve(N):\n    if N % 2 == 1:\n        print(0)\n        return\n    n = 10\n    ans = 0\n    while n <= N:\n        ans += N // n\n        n *= 5\n    print(ans)\nif __name__ == '__main__':\n    N = 5\n    solve(N)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "245": {"id": 245, "code": "def need(a):\n    if a==\"a\":\n        return 0\n    else:\n        return 123-ord(a)\ns = ['x', 'y', 'z']\nx = 4\ni=0\nwhile x>0:\n    count=need(s[i])\n    if x>=count:\n        s[i]=\"a\"\n        x-=count\n    if i==len(s)-1:\n        s[i]=chr(ord(s[i])+(x%26))\n        x=0\n    i+=1\nprint(\"\".join(s))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3554": {"id": 3554, "code": "def main():\n    a = 20;b = 15\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "17202": {"id": 17202, "code": "a = \"H\";b = \"H\"\ndef ch(x):\n  return 1 if x==\"D\" else -1\na=ch(a)\nb=ch(b)\nprint(\"H\" if a*b==1 else \"D\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "16431": {"id": 16431, "code": "def solve():\n  N = 5\n  A = [-float('inf')]+list(map(int, \"6 9 4 2 11\".split()))\n  A.sort()\n  ans = [A[-1]]\n  n = A[-1]//2\n  for i in range(1,N+1):\n    if A[i]>n or i==N-1:\n      if A[i]-n>n-A[i-1]:\n        ans.append(A[i-1])\n      else:\n        ans.append(A[i])\n      break\n  return ans\nprint(*solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14825": {"id": 14825, "code": "from math import factorial \ndef comb(n, r):\n  return factorial(n)//(factorial(n-r)*factorial(r))\nn = 3;p = 0\nal = [1, 1, 1]\neven = 0\nodd = 0\nfor a in al:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nif p == 1 and odd == 0:\n  print(0)\n  exit()\nans1 = 2**even\nans2 = 0\nif p == 0:\n  t = 0\n  while t <= odd:\n    ans2 += comb(odd,t)\n    t += 2\nelse:\n  k = 1\n  while k <= odd:\n    ans2 += comb(odd,k)\n    k += 2\nprint(ans1*ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "18450": {"id": 18450, "code": "def ceilT(a,b): \n    return (a+b-1)//b\nH = 14\nW = 12\nN = 112\ne=max(H,W)\nprint(ceilT(N,e))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2242": {"id": 2242, "code": "def resolve():\n    N = 10;A = 3;B = 5\n    print(min(A, B), max(0, A+B-N))\nresolve()", "coverage": [">", ">", ">", ">"]}, "7876": {"id": 7876, "code": "def resolve():\n    n = 4;k = 3\n    a = [2, 3, 1, 4]\n    print(-(-(n-1)//(k-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "10474": {"id": 10474, "code": "def main():\n    a = 1;b = 1;k = 1\n    ans = []\n    for i in range(1,min(a,b)+1):\n        if a % i == 0 and b % i == 0:\n            ans.append(i)\n    print(ans[-k])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19136": {"id": 19136, "code": "from math import ceil\ndef main():\n    N = 5\n    if N%2==1:\n        print(0)\n        return\n    else:\n        ans = 0\n        N //= 2\n        while N:\n            ans += N//5\n            N //= 5\n        print(ans)\n        return\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "9594": {"id": 9594, "code": "def actual(s):\n    return s.replace('2017', '2018')\ns = \"2017/01/07\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "19079": {"id": 19079, "code": "def max_exponent(a, n):\n    ret, v = 0, 1\n    while a * v <= n:\n        ret += 1\n        v *= a\n    return ret\ndef main():\n    N = 12\n    if N % 2 == 1:\n        print(0)\n        return\n    count_5_in_even, pow_5 = 0, 5\n    for k in range(1, max_exponent(5, N) + 1):\n        count_5_in_even += (N // pow_5) // 2\n        pow_5 *= 5\n    count_2_in_even, pow_2 = 0, 2\n    for k in range(1, max_exponent(2, N) + 1):\n        count_2_in_even += N // k\n        pow_2 *= 2\n    print(min(count_5_in_even, count_2_in_even))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1841": {"id": 1841, "code": "import sys\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nint1 = lambda x: int(x) - 1\ndef main():\n    n = 10;a = 7;b = 5\n    mx=min(a,b)\n    mn=max(a+b-n,0)\n    print(mx,mn)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5482": {"id": 5482, "code": "import math\ndef main():\n  n = 5\n  if n % 2 == 0:\n    print(int(n/2))\n  else:\n    print(math.floor((n/2) + 1))\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "4537": {"id": 4537, "code": "def main():\n    s = \"internationalization\"\n    print(s[0] + str(len(s) - 2) + s[-1])\nmain()", "coverage": [">", ">", ">", ">"]}, "16868": {"id": 16868, "code": "def main():\n    a = \"D\";b = \"D\"\n    if a == 'H' and b == 'H':\n        print('H')\n    elif a == 'D' and b == 'H':\n        print('D')\n    elif a == 'H' and b == 'D':\n        print('D')\n    elif a == 'D' and b == 'D':\n        print('H')\nmain()", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">"]}, "16504": {"id": 16504, "code": "def d_binomial_coefficients():\n    N = 2\n    A = [0, 100]\n    n = A[-1]  \n    r = min(A[:-1], key=lambda x: abs(n / 2 - x))\n    return f'{n} {r}'\nprint(d_binomial_coefficients())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14646": {"id": 14646, "code": "def m():\n    N = 1;P = 1\n    A = [50]\n    Even = [a for a in A if a % 2 == 0]\n    Odd = [a for a in A if a % 2 == 1]\n    if P == 1 and len(Odd) == 0:\n        return 0\n    if len(Odd) == 0:\n        return pow(2, len(Even))\n    else:\n        return pow(2, N-1)\nprint(m())", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "19206": {"id": 19206, "code": "def count_five(n):\n    res = 0\n    i = 1\n    while n//pow(5,i) - n//pow(10,i)> 0:\n        res += n//pow(5,i) - n//(2*pow(5,i))\n        i += 1\n    return res\ndef main(N):\n    if N%2:\n        return 0\n    M = list(str(N))\n    L = len(M)\n    temp = 0\n    temp2 = 0\n    res = 0\n    for i, n in enumerate(M[:-1], start=1):\n        temp *= 10\n        temp += int(n)\n        res += (temp - temp2)*(L-i)\n        res += count_five(temp)\n        temp2 = temp\n    return res\nN = 5\nprint(main(N))", "coverage": [">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "11936": {"id": 11936, "code": "def main():\n    M1 = 11;D1 = 16\n    M2 = 11;D2 = 17\n    print(int(M1 != M2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "9087": {"id": 9087, "code": "import sys\ndef input(): return \"2017/01/31\".strip()\ndef main():\n    s = \"2017/01/31\"\n    print(\"2018\" + s[4:])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13904": {"id": 13904, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    status = \"undefined\"\n    ans = 1\n    for i in range(N - 1):\n        diff = A[i + 1] - A[i]\n        if status == \"undefined\":\n            if diff == 0:\n                pass\n            elif diff > 0:\n                status = \"increase\"\n            else:\n                status = \"decrease\"\n        elif status == \"increase\":\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                status = \"undefined\"\n        else:\n            if diff <= 0:\n                pass\n            else:\n                status = \"undefined\"\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "17370": {"id": 17370, "code": "def main():\n    S = \"1905\"\n    first = S[:2]\n    second = S[2:]\n    YYMM = False\n    MMYY = False\n    if \"00\" <= first <= \"99\" and \"01\" <= second <= \"12\":\n        YYMM = True\n    if \"01\" <= first <= \"12\" and \"00\" <= second <= \"99\":\n        MMYY = True\n    if YYMM and MMYY:\n        ans = \"AMBIGUOUS\"\n    elif YYMM:\n        ans = \"YYMM\"\n    elif MMYY:\n        ans = \"MMYY\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "13747": {"id": 13747, "code": "def calc_blank_minute(H1, M1, H2, M2, K):\n  return (H2 * 60) + M2 - (H1 * 60) - M1 - K\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nans = calc_blank_minute(H1, M1, H2, M2, K)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "15032": {"id": 15032, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\nn = 1;p = 1\na = [50]\neven = []\nodd = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        even.append(a[i])\n    else:\n        odd.append(a[i])\nm = len(even)\ncount1 = 0\nfor i in range(m+1):\n    count1 += comb(m, i)\nk = len(odd)\ncount2 = 0\nif p == 0:\n    for i in range(0, k+1, 2):\n        count2 += comb(k, i)\nelse:\n    for i in range(1, k+1, 2):\n        count2 += comb(k, i)\nprint(count1*count2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "13909": {"id": 13909, "code": "def check(a,b):\n  if a<b:\n    return 'up'\n  if a>b:\n    return 'down'\n  return ''\ndef solve():\n  ans = 1\n  N = 6\n  A = [1, 2, 3, 2, 2, 1]\n  ud = ''\n  for i in range(N-1):\n    a = check(A[i],A[i+1])\n    if ud=='' or ud==a:\n      ud = a\n      continue\n    if a=='':\n      continue\n    ans += 1\n    ud = ''\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "11917": {"id": 11917, "code": "def resolve():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m2==m1+1 and d2==1:\n        print('1')\n    elif m1==12 and m2==1 and d2==1:\n        print('1')\n    else:\n        print('0')\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "7676": {"id": 7676, "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\ndef answer(H: int, N: int, A: list) -> str:\n    damage = 0                          \n    for i in range(0, N):               \n        damage += int(A[i])             \n        i += 1                          \n    if damage < H:\n        return 'No'\n    else:\n        return 'Yes'\nprint(answer(H, N, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12943": {"id": 12943, "code": "import sys\ndef input(): return \"6\".strip()\ndef main():\n    X = 6\n    if X == 7 or X == 5 or X == 3:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "16371": {"id": 16371, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    n = 5\n    a = [6, 9, 4, 2, 11]\n    a.sort()\n    if len(a) == 2:\n        a.sort(reverse=True)\n        print(*a)\n        return\n    amax = a.pop()\n    mid = amax//2\n    mididx = bisect.bisect_left(a, mid)\n    am1 = a[mididx]; am2 = a[mididx-1]\n    if abs(am1-mid) <= abs(am2-mid):\n        am = am1\n    else:\n        am = am2\n    print(amax, am)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "15481": {"id": 15481, "code": "def solve(x, y, z):\n    tmp = x - z\n    ans = tmp // (y + z)\n    return ans\nif __name__ == \"__main__\":\n    x = 64146;y = 123;z = 456\n    print(solve(x,y,z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19012": {"id": 19012, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 5\n  if N % 2:\n    print(0)\n    return\n  nz = 0\n  i = 1\n  while True:\n    if N//(5**i)//2 > 0:\n      nz += (N//(5**i)//2)\n      i += 1\n    else:\n      break\n  print(nz)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "8080": {"id": 8080, "code": "def main():\n    n = 8;k = 3\n    a = [7, 3, 1, 8, 4, 6, 2, 5]\n    ans = 1\n    n -= k\n    while n > 0:\n        ans += 1\n        n -= k - 1\n    return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "508": {"id": 508, "code": "def resolve():\n    S = \"codefestival\"\n    K = 100\n    ans = []\n    for s in S:\n        diff = ord(s) - ord(\"a\")\n        if diff == 0:\n            ans.append(\"a\")\n            continue\n        elif 26 - diff <= K:\n            ans.append(\"a\")\n            K -= 26 - diff\n        else:\n            ans.append(s)\n    K %= 26\n    d = (K + ord(ans[-1]) - ord('a')) % 26\n    ans[-1] = chr(d + ord('a'))\n    print(\"\".join(ans))\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "16377": {"id": 16377, "code": "def resolve():\n    N = 5\n    A = [2, 4, 6, 9, 11]\n    n = A[-1]\n    import bisect\n    idx = bisect.bisect_left(A, n//2)\n    candidates = []\n    if idx < N:\n        candidates.append(A[idx])\n    if idx > 0:\n        candidates.append(A[idx-1])\n    if abs(n/2 - candidates[0]) < abs(n/2 - candidates[1]):\n        print(n, candidates[0])\n    else:\n        print(n, candidates[1])       \nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2237": {"id": 2237, "code": "def slove():\n    import sys\n    input = sys.stdin.readline\n    n = 10;a = 7;b = 5\n    print(min(a, b), max(0, a + b - n))\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7713": {"id": 7713, "code": "N = 3;K = 3\nA = [1, 2, 3]\ndef main():\n    s = N - K\n    k = K - 1\n    ans = 1\n    ans += s // k\n    if s % k != 0:\n        ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15211": {"id": 15211, "code": "X = 64145;Y = 123;Z = 456\ndef is_ok(key):\n    if key * Y + (key + 1) * Z <= X:\n        return True\n    else:\n        return False\ndef binary_search():\n    ok = 0\n    ng = 3000001\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\nprint(binary_search())", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "17713": {"id": 17713, "code": "YYMM = False\nMMYY = False\nf = \"0112\"\nh1 = f[0] + f[1]\nh2 = f[2] + f[3]\nif 1 <= int(h2) <= 12:\n  YYMM = True\nif 1 <= int(h1) <= 12:\n  MMYY = True\ndef ret(c1,c2):\n  if c1 and c2:\n    return \"AMBIGUOUS\"\n  elif c1:\n    return \"YYMM\"\n  elif c2:\n    return \"MMYY\"\n  else:\n    return \"NA\"\nprint(ret(YYMM,MMYY))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "15093": {"id": 15093, "code": "def solve():\n  N = 2;P = 0\n  A = [1, 3]\n  zero,one = 0,0\n  for i in range(N):\n    if A[i]%2==0:\n      zero += 1\n    else:\n      one += 1\n  ans = pow(2,N-1)\n  if P==1 and one == 0:\n    return 0\n  if P==0 and one == 0:\n    return pow(2,N)\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", ">", ">"]}, "912": {"id": 912, "code": "def check7s(k):\n    x = 7 % k\n    for i in range(1, k + 1):\n        if x == 0: return i\n        x = (x * 10 + 7) % k\n    return -1\nK = 2\nprint(check7s(K))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13260": {"id": 13260, "code": "def actual(s):\n    return s.replace(',', ' ')\ns = \"haiku,atcoder,tasks\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "3712": {"id": 3712, "code": "def main():\n    A = 20;B = 15\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "16928": {"id": 16928, "code": "a = \"D\";b = \"D\"\ndef judge():\n    def sub_judge1():\n        if a == 'H':\n            return True\n        else:\n            return False\n    def sub_judge2():\n        if b == 'H':\n            return True\n        else:\n            return False\n    if sub_judge2():\n        return sub_judge1()\n    else:\n        return not sub_judge1()\nif judge():\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "12411": {"id": 12411, "code": "s = \"atcoder\"\nn = len(s)\ndef check(r):\n    if r == r[::-1]:\n        return True\nprint(\"Yes\" if check(s) and check(s[:(n-1)//2])\n      and check(s[((n-1)//2) + 1:]) else \"No\")", "coverage": [">", ">", ">", ">", "!", ">", "!"]}, "5900": {"id": 5900, "code": "def resolve():\n    N = 2\n    import math\n    print(math.ceil(N/2))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "8346": {"id": 8346, "code": "def main():\n    n = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14841": {"id": 14841, "code": "def resolve():\n    N = 2;P = 0\n    A = [1, 3]\n    odd = 0\n    for a in A:\n        if a % 2 == 1:\n            odd += 1\n    even = N - odd\n    if P == 1:\n        if odd > 0:\n            ans = (2**even) * (2**(odd - 1))\n        else:\n            ans = 0\n    else:\n        if odd == 0:\n            ans = (2**even)\n        else:\n            ans = (2**even) * (2**(odd - 1))\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "10881": {"id": 10881, "code": "def is_kaibun(kaibun):\n    for i in range(len(kaibun)//2):\n        if kaibun[i] != kaibun[-i-1]:\n            return False\n    return True\ns = \"level\"\nn = len(s)\nans = False\nif is_kaibun(s):\n    s = s[:n//2]\n    if is_kaibun(s):\n        ans = True\nif ans:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "1524": {"id": 1524, "code": "def main():\n    n = 112\n    for i in range(1, 10):\n        if n <= i * 111:\n            print(i * 111)\n            break\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7024": {"id": 7024, "code": "def main():\n  h = 20;n = 3\n  a = [4, 5, 6]\n  if sum(a)>=h:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "6374": {"id": 6374, "code": "def main():\n    from bisect import bisect_right\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [6, 9, 58, 79, 84, 323]\n    C = [2, 50, 79, 288, 383, 2643]\n    num_greater_than_b = []\n    for b in B:\n        num_greater_than_b.append(N-bisect_right(C,b))\n    csum = [0]*(N+1)\n    for i in range(N-1,-1,-1):\n        csum[i] = csum[i+1]+num_greater_than_b[i]\n    ans = 0\n    for i,a in enumerate(A):\n        ans += csum[bisect_right(B,a)]\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "902": {"id": 902, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    K = 101\n    a = 0\n    ans = 0\n    for _ in range(K+1):\n        a = 10*a+7\n        a %= K\n        ans += 1\n        if a%K == 0:\n            break\n    if ans == K+1: \n        print(-1)\n    else:\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12610": {"id": 12610, "code": "def com_div(x, y):\n    dv = []\n    for i in range(min(x, y), 0, -1):\n        if x % i == 0 and y % i == 0:\n            dv.append(i)\n    return dv\na = 8;b = 12;k = 2\nprint(com_div(a, b)[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5917": {"id": 5917, "code": "def solve(n):\n    return (n+1)//2\nn = 5\nprint(solve(n))", "coverage": [">", ">", ">", ">"]}, "10841": {"id": 10841, "code": "def is_palindrome(text):\n    l = len(text)\n    for i in range(l // 2 if l % 2 == 0 else (l + 1) // 2):\n        if text[i] != text[l - 1 - i]:\n            return False\n    return True\ns = \"level\"\nq1 = is_palindrome(text=s)\nq2 = is_palindrome(text=s[0:(len(s) - 1) // 2])\nq3 = is_palindrome(text=s[(len(s) + 3) // 2 - 1:len(s)])\nprint(\"Yes\" if q1 and q2 and q3 else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3302": {"id": 3302, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 20;b = 15\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5421": {"id": 5421, "code": "import math\ndef main():\n    N = 100\n    ans = math.ceil(N / 2)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16758": {"id": 16758, "code": "def hd(a,b):\n    ans = \"\"\n    if a == \"H\":\n        ans = \"H\" if b == \"H\" else \"D\"\n    else:\n        ans = \"D\" if b == \"H\" else \"H\"\n    return ans\ndef main():\n    a = \"H\";b = \"H\"\n    print(hd(a , b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "5067": {"id": 5067, "code": "import sys\nimport math\nimport bisect\ndef main():\n    s = \"xyz\"\n    print('%s%d%s' % (s[0], len(s) - 2, s[-1]))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6916": {"id": 6916, "code": "def solve():\n    n = 20;m = 3\n    s = [4, 5, 6]\n    if sum(s) >= n:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nsolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "8700": {"id": 8700, "code": "def resolve():\n  n = 1\n  a1 = [2]\n  a2 = [3]\n  s1 = [0] * (n+1)\n  s2 = [0] * (n+1)\n  for i in range(n):\n    s1[i] = a1[i]\n    if i > 0:\n      s1[i] += s1[i-1]\n  for i in range(n):\n    s2[n-i-1] = a2[n-i-1]\n    if i > 0:\n      s2[n-i-1] += s2[n-i]\n  ans = 0\n  for i in range(n):\n    ans = max(ans, s1[i] + s2[i])\n  print(ans)\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3187": {"id": 3187, "code": "def resolve():\n    s = \"35753\"\n    a = 753\n    for i in range(len(s)-2):\n        b = abs(int(s[i:i+3]) - 753)\n        if b < a:\n            a = b\n    print(a)\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9595": {"id": 9595, "code": "def actual(s):\n    return s.replace('2017', '2018')\ns = \"2017/01/31\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "7362": {"id": 7362, "code": "h = 20;n = 3\nA = [4, 5, 6]\ndef hp(h: int, n: int, A: list) -> str:\n    damage = 0                   \n    for i in range(0, n):        \n        damage += int(A[i])      \n        i += 1                   \n    if (h - damage) <= 0:     \n        return 'Yes'\n    else:              \n        return 'No'\nprint(hp(h, n, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13174": {"id": 13174, "code": "s = \"abcde,fghihgf,edcba\"\ndef Main(s):\n    s = s.replace(',', ' ')\n    return s\nprint(Main(s))", "coverage": [">", ">", ">", ">", ">"]}, "18156": {"id": 18156, "code": "import sys\ndef input(): return \"0112\".strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\nINF = float('inf')\ndef is_yymm(f, l):\n    if 1 <= l <= 12:\n        return True\n    return False\ndef is_mmyy(f, l):\n    if 1 <= f <= 12:\n        return True\n    return False\ns = S()\nf = int(s[:2])\nl = int(s[2:])\nif is_yymm(f, l) and is_mmyy(f, l):\n    print('AMBIGUOUS')\nelif is_yymm(f, l) and not(is_mmyy(f, l)):\n    print('YYMM')\nelif not(is_yymm(f, l)) and is_mmyy(f, l):\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "15039": {"id": 15039, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\no, e = 0, 0\nfor i in A:\n    if i % 2 == 0:\n        e += 1\n    else:\n        o += 1\nans = 0\nfor i in range(P, o+1, 2):\n    ans += comb(o, i)\nprint(ans * 2 ** e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "7205": {"id": 7205, "code": "def main():\n    H = 10\n    offence = 15\n    print('Yes' if H <= offence else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "11454": {"id": 11454, "code": "import sys\ndef solve(S):\n    return {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}[S]\ndef main(args):\n    S = \"SAT\"\n    ans = solve(S)\n    print(ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16379": {"id": 16379, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\nf_inf = float('inf')\nmod = 998244353\ndef resolve():\n    n = 5\n    A = [2, 4, 6, 9, 11]\n    MAX_V = A[-1]\n    target = MAX_V // 2 if MAX_V % 2 == 0 else (MAX_V + 1) // 2\n    diff = f_inf\n    res = A[0]\n    for i in range(n - 1):\n        if abs(target - A[i]) < diff:\n            diff = abs(target - A[i])\n            res = A[i]\n    print(MAX_V, res)\nif __name__ == '__main__':\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14634": {"id": 14634, "code": "from math import factorial\ndef comb(n, r):\n    return factorial(n) // (factorial(n-r) * factorial(r))\nn = 1;p = 1\narr = [50]\nodd = 0\neven = 0\nfor a in arr:\n    if a % 2 == 1:\n        odd += 1\n    else:\n        even += 1\nans = 2 ** even\ntmp = 0\nfor i in range(p, odd+1, 2):\n    tmp += comb(odd, i)\nans *= tmp\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "1321": {"id": 1321, "code": "import sys\ndef input(): return \"111\".strip()\ndef resolve():\n    n = 111\n    print(-(-n // 111)*111)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "7712": {"id": 7712, "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\ndef main():\n    s = N - K\n    k = K - 1\n    ans = 1\n    ans += s // k\n    if s % k != 0:\n        ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14520": {"id": 14520, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\neven_cnt = sum([1 for x in A if x%2 == 0])\nodd_cnt = sum([1 for x in A if x%2 != 0])\nif P == 0:\n    ans1 = 2**even_cnt\n    ans2 = 0\n    for i in range(0,odd_cnt+1,2):\n        ans2 += comb(odd_cnt,i)\nelse:\n    ans1 = 2**even_cnt\n    ans2 = 0\n    for i in range(1,odd_cnt+1,2):\n        ans2 += comb(odd_cnt,i)\nprint(ans1*ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "16975": {"id": 16975, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    a = \"D\";b = \"H\"\n    if a == \"H\":\n        print(\"H\" if b == \"H\" else \"D\")\n    else:\n        print(\"D\" if b == \"H\" else \"H\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "859": {"id": 859, "code": "n = 101\ndef calc(target):\n    result = 0\n    count = 0\n    if target % 2 == 0:\n        print(-1)\n        return\n    for i in range(n):\n        result = (result * 10 + 7) % target\n        count += 1\n        if result == 0:\n            print(count)\n            return\n    print(-1)\ncalc(n)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "5858": {"id": 5858, "code": "def ABC_157_A():\n    N = 2\n    if N%2 == 0:\n        print(int(N/2))\n    else:\n        print(int(N/2+1))\nif __name__ == '__main__':\n    ABC_157_A()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "231": {"id": 231, "code": "def resolve():\n    def decode(x):\n        return ord(x) - 97\n    def encode(x):\n        return chr(x + 97)\n    S = [0]\n    K = 25\n    for i in range(len(S) - 1):\n        if S[i] == 0:\n            continue\n        if 26 - S[i] <= K:\n            K -= 26 - S[i]\n            S[i] = 0\n    S[-1] = (S[-1] + K) % 26\n    ans = map(encode, S)\n    print(\"\".join(ans))\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "590": {"id": 590, "code": "def main():\n    s = \"codefestival\"\n    k = 100\n    for i in range(len(s)):\n        x = ord(\"z\") - ord(s[i]) + 1\n        if k >= x and x != 26:\n            k -= x\n            s = s[:i] + \"a\" + s[i+1:]\n        if i == len(s)-1:\n            s = s[:i] + (chr(ord(s[i]) + (k%26)))\n    print(s)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8363": {"id": 8363, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 1\n  U = [2]\n  L = [3]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10548": {"id": 10548, "code": "def dv(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    return divisors\nA = 8;B = 12;K = 2\nC = list(set(dv(A))&set(dv(B)))\nC.sort()\nC.reverse()\nprint(C[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3423": {"id": 3423, "code": "from sys import stdin\ndef main():\n    A = 20;B = 30\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "6425": {"id": 6425, "code": "def Binary_Search(A,x):\n    L=0\n    R=len(A)\n    while R-L>1:\n        C=(R+L-1)//2\n        if A[C]<=x:\n            L=C+1\n        else:\n            R=C+1\n    return L\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nA.append(A[-1]+1)\nB.sort()\nC.sort()\nC=[0]+C\nC=[-c for c in C[::-1]]\nS=0\nfor b in B:\n    S+=Binary_Search(A,b-1)*Binary_Search(C,-(b+1))\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5468": {"id": 5468, "code": "def solve():\n    N = 2\n    print((N+1)//2)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "15127": {"id": 15127, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\na = [0]\nz=a.count(0)\no=a.count(1)\nonum=0\nif p:\n  i=1\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nelse:\n  i=0\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nprint((2**z)*onum)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16927": {"id": 16927, "code": "a = \"D\";b = \"H\"\ndef judge():\n    def sub_judge1():\n        if a == 'H':\n            return True\n        else:\n            return False\n    def sub_judge2():\n        if b == 'H':\n            return True\n        else:\n            return False\n    if sub_judge2():\n        return sub_judge1()\n    else:\n        return not sub_judge1()\nif judge():\n    print('H')\nelse:\n    print('D')", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", "!", "!", ">"]}, "16652": {"id": 16652, "code": "def main():\n  a = \"D\";b = \"D\"\n  if a == 'H':\n    ans = b\n  else:\n    if b == 'H':\n      ans = 'D'\n    else:\n      ans = 'H'\n  print(ans)\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "13240": {"id": 13240, "code": "def resolve():\n    s = \"abcde,fghihgf,edcba\"\n    print(s[:5],s[6:13],s[14:])\nresolve()", "coverage": [">", ">", ">", ">"]}, "12859": {"id": 12859, "code": "def resolve():\n    x = \"6\"\n    if x in '753':\n        print('YES')\n    else:\n        print('NO')\nresolve()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "5779": {"id": 5779, "code": "def main():\n    n = 5\n    if n % 2 == 1:\n        print(n // 2 + 1)\n    else:\n        print(n // 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "19509": {"id": 19509, "code": "N = 3\ndef gcd(a,b):\n  if a==b:\n    return a\n  else:\n    a,b=max(a,b),min(a,b)\n    if a%b==0:\n      return b\n    return gcd(b,a%b)  \nif N%2==0:\n  print(N)\nelse:\n  lcm=int(2*N/gcd(2,N))\n  print(lcm)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14893": {"id": 14893, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nN = 3;P = 0\nA = [1, 1, 1]\nodd = 0\neven = 0\nfor i in range(N):\n    if A[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n    ans += cmb(odd, i)\nans *= 2 ** even\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "18644": {"id": 18644, "code": "H = 3\nW = 7\nN = 10\ndef ceil_div(a, b):\n    return (a + b - 1) // b\nprint(ceil_div(N, max(H, W)))", "coverage": [">", ">", ">", ">", ">", ">"]}, "16599": {"id": 16599, "code": "def main():\n    a = \"H\";b = \"H\"\n    if a == 'H':\n        if b == 'H':\n            print('H')\n        else:\n            print('D')\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "11000": {"id": 11000, "code": "S = \"level\"\ndef is_kaibun(s):\n    l = len(s)\n    if s[:int(l/2)] == s[:-(int(l/2))-1:-1]:\n        return True\n    else:\n        return False\nif is_kaibun(S):\n    if is_kaibun(S[:int((len(S)-1)/2)]):\n        if is_kaibun(S[int((len(S)+3)/2)-1:]):\n            print('Yes')\n            exit()\nprint('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "14853": {"id": 14853, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 3;p = 0\na = [1, 1, 1]\nfor i in range(n):\n    a[i] %=2\none = a.count(1)\nzero = a.count(0)\nans=0\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nif p==0:\n    for i in range(0,one+1,2):\n        ans += cmb(one,i)*2**zero\nelse:\n    for i in range(1,one+1,2):\n        ans += cmb(one,i)*2**zero\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "17452": {"id": 17452, "code": "def solve(yy,mm):\n    if 1<=yy<=12:\n        if 1 <= mm <=12:\n            return 'AMBIGUOUS'\n        else:\n            return 'MMYY'\n    else:\n        if 1<= mm <= 12:\n            return 'YYMM'\n        else:\n            return \"NA\"\ns = \"0112\"\nyy = int(s[:2])\nmm = int(s[2:])\nprint(solve(yy,mm))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "11902": {"id": 11902, "code": "str1 = ['11', '16']\nstr2 = ['11', '17']\nm1 = str1[0]\nd1 = str1[1]\nm2 = str2[0]\nd2 = str2[1]\nif m1 == m2:\n    return_value = '0'\nelse:\n    return_value = '1'\nprint(return_value)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6232": {"id": 6232, "code": "def main():\n  n = 3\n  la = [1, 1, 1]\n  lb = [2, 2, 2]\n  lc = [3, 3, 3]\n  la.sort(), lb.sort(), lc.sort()\n  i = 0\n  ab = []\n  for b in lb:\n    while i < n and la[i] < b:\n      i += 1\n    ab.append(i)\n  i = 0\n  bc = []\n  for c in lc:\n    while i < n and lb[i] < c:\n      i += 1\n    bc.append(i)\n  ans = 0\n  cs = [0]\n  for x in ab:\n    cs.append(cs[-1] + x)\n  for y in bc:\n    ans += cs[y]\n  print(ans)\nif __name__=='__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8022": {"id": 8022, "code": "def main():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    print((N + K - 3) // ~-K)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10107": {"id": 10107, "code": "N = 6\nS = \")))())\"\ndef add1(S):\n  cum=[0]\n  for i in range(len(S)):\n    if S[i]=='(':cum.append(cum[-1]+1)\n    else:cum.append(cum[-1]-1)\n  if min(cum)>=0:return S\n  out = '('*(-min(cum))\n  out += S\n  return out\ndef add2(S):\n  cum=[0]\n  for i in range(len(S)):\n    if S[i]=='(':cum.append(cum[-1]+1)\n    else:cum.append(cum[-1]-1)\n  if cum[-1]==0:return S\n  n = cum[-1]\n  out = S + ')'*n\n  return out\nS = add1(S)\nS = add2(S)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "5368": {"id": 5368, "code": "def solve():\n    n = 5\n    ans = (n + 1) //2\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10304": {"id": 10304, "code": "A = 100;B = 50;K = 4\nresult_list = []\ndef divisor_list(n):\n    i = 1\n    array = []\n    while i * i <= n:\n        if n % i == 0:\n            array.append(i)\n            array.append(n//i)\n        i += 1\n    array = list(set(array))\n    return array\nfor i in range(1, min(A, B) + 1):\n    if A % i == 0 and B % i == 0:\n        result_list.append(i)\nprint(sorted(result_list)[-K])", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "1121": {"id": 1121, "code": "def main():\n    n = 750\n    for x in range(n, 1000):\n        if str(x)[0] == str(x)[1] == str(x)[2]:\n            print(x)\n            break\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9641": {"id": 9641, "code": "def main():\n  N = 3\n  S = ['(', ')', ')']\n  num_1 = 0\n  num_2 = 0\n  for i in range(N):\n    if S[i] == '(':\n      num_1 += 1\n    else:\n      if num_1 > 0: num_1 -= 1\n  for i in range(N-1, -1, -1):\n    if S[i] == ')':\n      num_2 += 1\n    else:\n      if num_2 > 0: num_2-=1\n  for i in range(num_1):\n    S.append(')')\n  for i in range(num_2):\n    S.insert(0, '(')\n  print(''.join(S))\nif __name__ == \"__main__\":\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "8818": {"id": 8818, "code": "def main():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5364": {"id": 5364, "code": "def main():\n    N = 100\n    print(int((N+1)/2))\nmain()", "coverage": [">", ">", ">", ">"]}, "13795": {"id": 13795, "code": "import sys\nreadline = sys.stdin.readline\nflagset = ['not increase', 'flat', 'not decrease']\ndef main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    cnt = 0\n    A0 = A[0]\n    flag = flagset[1]\n    for i in range(N-1):\n        Ai = A[i]\n        Ai1 = A[i+1]\n        if flag == 'flat':\n            if Ai < Ai1:\n                flag = 'not decrease'\n            elif Ai > Ai1:\n                flag = 'not increase'\n            elif Ai == Ai1:\n                flag = 'flat'\n            else:\n                cnt += 1\n        elif flag == 'not decrease':\n            if Ai <= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n        else:\n            if Ai >= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n    cnt += 1\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "9818": {"id": 9818, "code": "def main():\n    N = 8\n    S = \"))))((((\"\n    solo_close_no = 0\n    for i in range(N):\n        if S[-i-1] == \")\":\n            solo_close_no += 1\n        elif solo_close_no >= 1:\n            solo_close_no -= 1\n    solo_open_no = 0\n    for i in range(N):\n        if S[i] == \"(\":\n            solo_open_no += 1\n        elif solo_open_no >= 1:\n            solo_open_no -= 1\n    answer = \"(\"*solo_close_no + S + \")\"*solo_open_no\n    print(answer)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4212": {"id": 4212, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    ans = max((H2 * 60 + M2) - (H1 * 60 + M1) - K, 0)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "14754": {"id": 14754, "code": "from math import factorial\nn = 1;p = 1\na_input = [50]\ndef calc_comb(n,r):\n    return factorial(n) / factorial(r) / factorial(n - r)\nodd_len = 0\neven_len = 0\nfor i in range(n):\n    if a_input[i]%2==0:\n        even_len+=1\n    else:\n        odd_len+=1\nans=0\neven_comb = 2**even_len\nif p==0:\n    if odd_len%2==0:\n        for i in range(0,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\n    if odd_len%2==1:\n        for i in range(1,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\nelse:\n    if odd_len%2==0:\n        for i in range(1,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\n    if odd_len%2==1:\n        for i in range(0,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\nprint(int(ans))", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", "!", "!", ">"]}, "3861": {"id": 3861, "code": "def main():\n    X = 64145;Y = 123;Z = 456\n    print((X - Z) // (Y + Z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "10964": {"id": 10964, "code": "S = \"level\"\nN = len(S)\ndef isPalindrome(s):\n  n = len(s)\n  re_s = s[::-1]\n  for i in range(n // 2):\n    if re_s[i] != s[i]:\n      break\n  else:\n    return True\n  return False\nif isPalindrome(S) and isPalindrome(S[:N // 2]) and isPalindrome(S[(N + 1) // 2:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "14904": {"id": 14904, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nn = 1;p = 1\nA = [50]\nodd = 0\nfor a in A:\n    if a%2:\n        odd += 1\nall_c = 0\nfor i in range(n+1):\n    all_c += cmb(n, i)\nodd_c = 0\nfor i in range(-(-odd//2)):\n    odd_c += cmb(odd, 2*i+1)\neven_c = 0\nfor i in range(n-odd+1):\n    even_c += cmb(n-odd, i)\nif p == 1:\n    print(odd_c*even_c)\nelse:\n    print(all_c - odd_c*even_c)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "9049": {"id": 9049, "code": "def main():\n    a = 15\n    b = 18\n    c = 26\n    d = 35\n    e = 36\n    k = 18\n    nums = []\n    nums.extend([a, b, c, d, e])\n    nums.reverse()\n    if (nums[0] - nums[4]) > k:\n        print(':(')\n    else:\n        print('Yay!')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1413": {"id": 1413, "code": "def main():\n    N = 112\n    for i in range(1, 10):\n        if int(str(i) * 3) >= N:\n            print(str(i) * 3)\n            break\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14647": {"id": 14647, "code": "def m():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    Even = [a for a in A if a % 2 == 0]\n    Odd = [a for a in A if a % 2 == 1]\n    if P == 1 and len(Odd) == 0:\n        return 0\n    if len(Odd) == 0:\n        return pow(2, len(Even))\n    else:\n        return pow(2, N-1)\nprint(m())", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "800": {"id": 800, "code": "import sys\ndef main():\n    K = 2\n    A = 7\n    for i in range(K):\n        if A % K == 0:\n            print(i+1)\n            return\n        A = (A * 10) + 7\n        A %= K\n    print(-1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "13788": {"id": 13788, "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    m = 60 - m1\n    h1 += 1\n    m += (h2 - h1)*60 + m2\n    print(max(0, m - k))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14673": {"id": 14673, "code": "import math\ndef combination(n, k):\n    return math.factorial(n) // math.factorial(k) // math.factorial(n - k)    \nN = 3;P = 0\nA = [1, 1, 1]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a%2 == 0:\n        gusu += 1\n    else:\n        kisu += 1\nsum_gu = 2**gusu\nif P%2==0:\n    sum_ki = 0\n    for i in range(2,kisu+1, 2):\n        sum_ki += combination(kisu, i)\n    sum_ki *= sum_gu\n    print(sum_gu+sum_ki)\nelse:\n    sum_ki = 0\n    for i in range(1,kisu+1, 2):\n        sum_ki += combination(kisu, i)\n    print(sum_gu*sum_ki)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "2485": {"id": 2485, "code": "import sys\ndef input(): return \"4 9 0 8\".rstrip()\ndef main():\n    a = 0;b = 4;c = 8;d = 9\n    if a==1 and b==4 and c==7 and d==9:\n        print(\"YES\")\n    else:print(\"NO\")\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "10404": {"id": 10404, "code": "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndef main():\n    a = 8;b = 12;k = 2\n    from math import gcd\n    y = make_divisors(gcd(a,b))\n    print(y[-k])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10897": {"id": 10897, "code": "S = \"atcoder\"\nN=len(S)\nM=(N-1)//2\ndef iskaibun(T):\n    K=len(T)\n    for i in range(K):\n        if T[i]==T[-i-1]:\n            pass\n        else:\n            return False\n    return True\nif iskaibun(S) and iskaibun(S[:M]) and iskaibun(S[M+1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", "!", "!", ">"]}, "17297": {"id": 17297, "code": "def resolve():\n    a = \"D\";b = \"D\"\n    if a==b:\n        print('H')\n    else:\n        print('D')\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "14689": {"id": 14689, "code": "import math\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\nal = [1, 1, 1]\na0 = 0\na1 = 0\nfor a in al:\n    if a%2 == 0:\n        a0 += 1\n    else:\n        a1 += 1\nans = pow(2,a0)\nans2 = 0\nif p == 0:\n    for i in range(0,51,2):\n        if a1 < i:break\n        ans2 += com(a1,i)\nelse:\n    for i in range(1,51,2):\n        if a1 < i:break\n        ans2 += com(a1,i)\nprint(ans*ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14859": {"id": 14859, "code": "from operator import mul\nfrom functools import reduce\ndef combinations_count(n, r):\n    r = min(r, n - r)\n    numer = reduce(mul, range(n, n - r, -1), 1)\n    denom = reduce(mul, range(1, r + 1), 1)\n    return numer // denom\nfrom collections import Counter\nn = 3;p = 0\na = [1, 1, 1]\na = sorted(list(map(lambda x: x % 2, a)))\na = Counter(a)\nans = 0\nif p == 1:\n    for i in range(1, a[1] + 1, 2):\n        for j in range(a[0] + 1):\n            ans += combinations_count(a[1], i) * combinations_count(a[0], j)\nif p == 0:\n    for i in range(0, a[1] + 1, 2):\n        for j in range(a[0] + 1):\n            ans += combinations_count(a[1], i) * combinations_count(a[0], j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6982": {"id": 6982, "code": "def main():\n    H = 211;N = 5\n    A = map(int, \"31 41 59 26 53\".split())\n    if sum(A) >= H:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12234": {"id": 12234, "code": "def main():\n    S = \"akasaka\"\n    N = len(S)\n    S1 = S[0:(N - 1) // 2]\n    S2 = S[(N + 3) // 2 - 1:]\n    if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1]:\n        print('Yes')\n    else:\n        print('No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "7427": {"id": 7427, "code": "import sys\ndef main():\n    input = sys.stdin.buffer.readline\n    h = 10\n    a = [4, 5, 6]\n    print(\"Yes\" if sum(a) >= h else \"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15124": {"id": 15124, "code": "from math import factorial\nfrom collections import Counter\ndef nCr(n,r):\n    return factorial(n)//(factorial(r)*factorial(n-r))\nN = 1;P = 1\nA = [0]\nc=Counter(A)\nz=pow(2,c.get(0,0))\nres=0\nfor i in range(1 if P else 0,c.get(1,0)+1,2):\n    res+=nCr(c.get(1,0),i)\nprint(z*res)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "3872": {"id": 3872, "code": "def resolve():\n    x = 64146;y = 123;z = 456\n    x=x-z\n    print(x//(y+z))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "11969": {"id": 11969, "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10276": {"id": 10276, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 8\n    s = \"))))((((\"\n    left_left=0\n    need_left=0\n    for i in range(n):\n        if s[i]==\"(\":\n            left_left+=1\n        else:\n            if left_left>0:\n                left_left-=1\n            else:\n                need_left+=1\n    right_right=0\n    need_right=0\n    for i in range(n-1,-1,-1):\n        if s[i]==\")\":\n            right_right+=1\n        else:\n            if right_right>0:\n                right_right-=1\n            else:\n                need_right+=1\n    print(\"(\"*need_left+s+\")\"*need_right)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "14447": {"id": 14447, "code": "import sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial\ndef solve():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    b = []\n    p = 0\n    for e in a:\n        if p != e:\n            b.append(e)\n        p = e\n    a = b\n    n = len(b)\n    ans = 0\n    i = 0\n    while i < n:\n        ans += 1\n        if i + 1 == n: break\n        else:\n            if a[i] < a[i+1]:\n                while i + 1 < n and a[i] < a[i+1]:\n                    i += 1\n                i += 1\n            else:\n                while i + 1 < n and a[i] > a[i+1]:\n                    i += 1\n                i += 1\n    print(ans)\nt = 1\nfor case in range(1,t+1):\n    ans = solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "12333": {"id": 12333, "code": "def check(r):\n    if r == r[::-1]:\n        return True\ndef main():\n    s = \"level\"\n    n = len(s)\n    print(\"Yes\" if check(s) and check(s[:(n-1)//2])\n          and check(s[((n-1)//2) + 1:]) else \"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5187": {"id": 5187, "code": "def actual(s):\n    head = s[0]\n    tail = s[-1]\n    length = len(s[1:-1])\n    return f'{head}{length}{tail}'\ns = \"xyz\"\nprint(actual(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14554": {"id": 14554, "code": "n = 1;p = 1\na = [50]\nn_odd=0\nn_even=0\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nfor i in a:\n    if i%2==0:\n        n_even+=1\n    else:\n        n_odd+=1\nans=0\nif p==0:    \n    for j in range(n_odd+1):\n        if j%2==1:\n            continue\n        else:\n            tmp=0\n            for l in range(n_even+1):\n                tmp+=cmb(n_even,l)\n            ans+=cmb(n_odd,j)*tmp\nelif p==1:\n    for k in range(n_odd+1):\n        if k%2==0:\n            continue\n        else:\n            tmp=0\n            for l in range(n_even+1):\n                tmp+=cmb(n_even,l)\n            ans+=cmb(n_odd,k)*tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "10709": {"id": 10709, "code": "def main():\n    s = \"akasaka\"\n    n = len(s)\n    rule1 = True\n    rule2 = True\n    rule3 = True\n    for i in range(n):\n        if s[i] != s[n - 1 - i]:\n            rule1 = False\n            break\n    for i in range(n // 2):\n        if s[i] != s[n // 2 - 1 - i]:\n            rule2 = False\n            break\n    for i in range(n // 2):\n        if s[n // 2 + 1 + i] != s[n - 1 - i]:\n            rule3 = False\n            break\n    if rule1 and rule2 and rule3:\n        ans = \"Yes\"\n    else:\n        ans = \"No\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "6518": {"id": 6518, "code": "import bisect\ndef main():\n    n = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    res = [0]*(n)\n    j = 0\n    res2=[0]*(n)\n    for i in range(n):\n        res[i]=bisect.bisect_left(A, B[i])\n        res2[i]=n-bisect.bisect_right(C, B[i])\n    ans = 0\n    for i in range(n):\n        ans+=(res[i]*res2[i])\n    return ans\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8660": {"id": 8660, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 5\n    A = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    t = A[0]\n    t2 = sum(A2)\n    ans = t + t2\n    for i in range(1, N):\n        t += A[i]\n        t2 -= A2[i-1]\n        ans = max(ans, t+t2)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14614": {"id": 14614, "code": "N = 2;P = 0\nA = [1, 3]\neven = 0\nodd = 0\nfor i in A:\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nimport math\ndef Perm(n, r):\n    return math.factorial(n)//math.factorial(n-r)\ndef comb(n, r):\n    return Perm(n, r)//math.factorial(r)\nif P == 0:\n    ans = 0\n    for x in range(odd+1):\n        if x % 2 == 0:\n            ans += comb(odd,x)\n    ans *= 2**even\n    print(ans)\nelse:\n    ans = 0\n    for x in range(odd+1):\n        if x % 2 == 1:\n            if odd != 0:\n                ans += comb(odd,x)\n    ans *= 2**even\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "4199": {"id": 4199, "code": "def main() -> None:\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    if h1 > h2:\n        h2 += 24\n    length = (h2*60+m2) - (h1*60+m1)\n    print(max(0, length - k))\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "4256": {"id": 4256, "code": "def submit():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    time1 = h1 * 60 + m1\n    time2 = h2 * 60 + m2\n    if time1 > time2:\n        time2 += 24 * 60\n    print(time2 - time1 - k)\nsubmit()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "12274": {"id": 12274, "code": "string = \"akasaka\"\npalindrome=False\npalin1=False\ndef palin(string):\n    palindrome=False\n    if string==string[::-1]:\n        palindrome=True\n    return palindrome\npalindrome=palin(string)\nif palin(string[int((len(string)-1)/2)])==True and palindrome==True:\n    palin1=True\nif palin(string[int((len(string)+3)/2)-1:len(string)])==True and palin1==True:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5472": {"id": 5472, "code": "def A():\n    n = 100\n    print(-(-n//2))\nA()", "coverage": [">", ">", ">", ">"]}, "16127": {"id": 16127, "code": "import sys\ndef solve(A, B):\n    return max(0, A - B * 2)\ndef main(args):\n    A = 20;B = 30\n    ans = solve(A, B)\n    print(ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8566": {"id": 8566, "code": "def resolve():\n    n = 1\n    a_1 = [2]\n    a_2 = [3]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15878": {"id": 15878, "code": "def main():\n    x = 64145;y = 123;z = 456\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "8519": {"id": 8519, "code": "def main():\n    n = 4\n    a1lis = [1, 1, 1, 1]\n    a2lis = [1, 1, 1, 1]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18415": {"id": 18415, "code": "import math\ndef main():\n    H = 2\n    W = 100\n    N = 200\n    print(int(math.ceil(N/max(H, W))))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6268": {"id": 6268, "code": "import bisect\nfrom itertools import accumulate\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\ndef my_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    i_a = 0\n    i_c = N-1\n    for i in range(N):\n        b = B[i]\n        while i_a < N and A[i_a] < b:\n            acc_a[i] += 1\n            i_a += 1\n    for i in reversed(range(N)):\n        b = B[i]\n        while i_c >= 0 and C[i_c] > b:\n            acc_c[i] += 1\n            i_c -= 1\n    acc_a = list(accumulate(acc_a))\n    acc_c = list(accumulate(acc_c[::-1]))\n    acc_c = acc_c[::-1]\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\ndef bisect_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    for i in range(N):\n        acc_a[i] = bisect.bisect_left(A, B[i])\n        acc_c[i] = N-bisect.bisect_right(C, B[i])\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\n    return ans\nprint(bisect_func(A, B, C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10383": {"id": 10383, "code": "def mapt(fn, *args):\n    return tuple(map(fn, *args))\ndef Input():\n    return mapt(int, \"1 1 1\".split(\" \"))\ndef gcd(a, b):\n    if b == 0: return a\n    return gcd(b, a % b)\ndef main():\n    a, b, k = Input()\n    k -= 1\n    data = sorted((i for i in range(1, gcd(a, b)+1)\n                   if a % i == 0 and b % i == 0), reverse=True)\n    print(data[k])\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10842": {"id": 10842, "code": "def is_palindrome(text):\n    l = len(text)\n    for i in range(l // 2 if l % 2 == 0 else (l + 1) // 2):\n        if text[i] != text[l - 1 - i]:\n            return False\n    return True\ns = \"atcoder\"\nq1 = is_palindrome(text=s)\nq2 = is_palindrome(text=s[0:(len(s) - 1) // 2])\nq3 = is_palindrome(text=s[(len(s) + 3) // 2 - 1:len(s)])\nprint(\"Yes\" if q1 and q2 and q3 else \"No\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14579": {"id": 14579, "code": "from collections import Counter\nfrom functools import reduce\nfrom operator import mul\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(mul, range(n, n - r, -1), 1)\n    denom = reduce(mul, range(1, r + 1), 1)\n    return numer // denom\nN = 3;P = 0\nA = Counter(list(map(lambda x: int(x) % 2, \"1 1 1\".split())))\nans = 2 ** A[0]\nif P:\n    print(ans * sum(ncr(A[1], i) for i in range(1, A[1] + 1, 2)))\nelse:\n    print(ans * sum(ncr(A[1], i) for i in range(0, A[1] + 1, 2)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12224": {"id": 12224, "code": "s = \"atcoder\"\ndef check():\n  if s != s[::-1]:\n    return(\"No\")\n  n = len(s)\n  s1 = s[:int((n-1)/2)]\n  if s1 != s1[::-1]:\n    return(\"No\")\n  s2 = s[int((n+3)/2-1):]\n  if s2 != s2[::-1]:\n    return(\"No\")\n  return(\"Yes\")\nprint(check())", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "6454": {"id": 6454, "code": "import sys\ninput=sys.stdin.readline\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans=0\ndef ab_check(list_count,i):\n    ok=-1\n    ng=n\n    B=b[i]\n    while ng-ok>1:\n        mid=(ok+ng)//2\n        if list_count[mid]<B:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bc_check(list_count,i):\n    ok=n\n    ng=-1\n    B=b[i]\n    while ok-ng>1:\n        mid=(ok+ng)//2\n        if list_count[mid]>B:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\nfor i in range(n):\n    ans+=ab_check(a,i)*bc_check(c,i)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "9127": {"id": 9127, "code": "def resolve():\n    n = \"2017/01/31\"\n    m = n[:3] + \"8\" + n[4:]\n    print(m)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "14903": {"id": 14903, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nn = 2;p = 0\nA = [1, 3]\nodd = 0\nfor a in A:\n    if a%2:\n        odd += 1\nall_c = 0\nfor i in range(n+1):\n    all_c += cmb(n, i)\nodd_c = 0\nfor i in range(-(-odd//2)):\n    odd_c += cmb(odd, 2*i+1)\neven_c = 0\nfor i in range(n-odd+1):\n    even_c += cmb(n-odd, i)\nif p == 1:\n    print(odd_c*even_c)\nelse:\n    print(all_c - odd_c*even_c)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5666": {"id": 5666, "code": "def main():\n    N = 2\n    if N % 2 == 0:\n        print(N // 2)\n    else:\n        print(N // 2 + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "9433": {"id": 9433, "code": "def main():\n    date = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\n    date[3] = '8'\n    ans = ''\n    for i in date:\n        ans = ans + i\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9642": {"id": 9642, "code": "def main():\n  N = 6\n  S = [')', ')', ')', '(', ')', ')']\n  num_1 = 0\n  num_2 = 0\n  for i in range(N):\n    if S[i] == '(':\n      num_1 += 1\n    else:\n      if num_1 > 0: num_1 -= 1\n  for i in range(N-1, -1, -1):\n    if S[i] == ')':\n      num_2 += 1\n    else:\n      if num_2 > 0: num_2-=1\n  for i in range(num_1):\n    S.append(')')\n  for i in range(num_2):\n    S.insert(0, '(')\n  print(''.join(S))\nif __name__ == \"__main__\":\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14747": {"id": 14747, "code": "import sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial, gcd\ndef solve():\n    n = 2;p = 0\n    a = [1, 3]\n    o = 0\n    e = 0\n    for e in a:\n        if e % 2:\n            o += 1\n        else:\n            e += 1\n    if o:\n        print(2 ** (n-1))\n    else:\n        if p:\n            print(0)\n        else:\n            print(2 ** n)\nt = 1\nfor case in range(1,t+1):\n    ans = solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "13370": {"id": 13370, "code": "def main():\n str = \"happy,newyear,enjoy\"\n print(str.replace(',',' '))\nmain()", "coverage": [">", ">", ">", ">"]}, "13591": {"id": 13591, "code": "def resolve():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.replace(',',' '))\nresolve()", "coverage": [">", ">", ">", ">"]}, "1794": {"id": 1794, "code": "def main():\n    n = 10;a = 7;b = 5\n    print(min(a, b), max(0, a+b-n))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "4425": {"id": 4425, "code": "def resolve():\n    s = \"xyz\"\n    ans = s[0] + str(len(s)-2) + s[-1]\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "8679": {"id": 8679, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 5\n    A = [3, 2, 2, 4, 1]\n    B = [1, 2, 2, 2, 1]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14163": {"id": 14163, "code": "def answer(arr):\n    n = len(arr)\n    count = 0\n    INC = 'INCREASING'\n    DEC = 'DECREASING'\n    STATE = None\n    if n == 1 or n == 2:\n        return 1\n    for i in range(n-1):\n        diff = arr[i+1] - arr[i]\n        if diff == 0:\n            continue\n        if STATE is None:\n            if diff > 0:\n                STATE = INC\n            if diff < 0:\n                STATE = DEC\n            count += 1\n        elif STATE is INC:\n            if diff < 0:\n                STATE = None\n        elif STATE is DEC:\n            if diff > 0:\n                STATE = None\n        if STATE is None and i == n-2:\n            count += 1\n    return count\nn = 7\narr = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprint(answer(arr))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "17313": {"id": 17313, "code": "import sys\nimport math\nimport bisect\ndef main():\n    a = \"H\";b = \"H\"\n    if a == 'H' and b == 'H':\n        print('H')\n    elif a == 'D' and b == 'D':\n        print('H')\n    else:\n        print('D')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "3141": {"id": 3141, "code": "import sys\ninput=sys.stdin.readline\ndef main():\n    S = \"1234567876\"\n    mind=643\n    for i in range(len(S)-2):\n        mind=min(mind,abs(int(S[i:i+3])-753))\n    print(mind)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "629": {"id": 629, "code": "def resolve():\n    k = 101\n    x = 7 % k\n    for i in range(1, k + 1):\n        if x == 0:\n            print(i)\n            return\n        x = (x * 10 + 7) % k\n    print(-1)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1502": {"id": 1502, "code": "def answer(n: int) -> int:\n    q = n // 111\n    if n % 111 != 0:\n        q += 1\n    return 111 * q\ndef main():\n    n = 750\n    print(answer(n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17776": {"id": 17776, "code": "S = \"1700\"\nheads = int(S[:2])\ntails = int(S[2:])\ndef is_month(n):\n    return n >= 1 and n <= 12\nif is_month(heads) and (not is_month(tails)):\n    print(\"MMYY\")\nelif (not is_month(heads)) and (not is_month(tails)):\n    print(\"NA\")\nelif (not is_month(heads)) and is_month(tails):\n    print(\"YYMM\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "18502": {"id": 18502, "code": "def main():\n    H = 2\n    W = 100\n    N = 200\n    c_row = 0\n    c_col = 0\n    ans = 0\n    while True:\n        if N <= 0:\n            print(ans)\n            break\n        else:\n            if W - c_col <= H - c_row:\n                N -=  H - c_row\n                c_col += 1\n                ans += 1\n            else:\n                N -=  W - c_col\n                c_row += 1\n                ans += 1\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "9643": {"id": 9643, "code": "def main():\n  N = 8\n  S = [')', ')', ')', ')', '(', '(', '(', '(']\n  num_1 = 0\n  num_2 = 0\n  for i in range(N):\n    if S[i] == '(':\n      num_1 += 1\n    else:\n      if num_1 > 0: num_1 -= 1\n  for i in range(N-1, -1, -1):\n    if S[i] == ')':\n      num_2 += 1\n    else:\n      if num_2 > 0: num_2-=1\n  for i in range(num_1):\n    S.append(')')\n  for i in range(num_2):\n    S.insert(0, '(')\n  print(''.join(S))\nif __name__ == \"__main__\":\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1812": {"id": 1812, "code": "import sys\nimport collections\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    n = 10;a = 7;b = 5\n    print(min(a, b), max(a + b - n, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6570": {"id": 6570, "code": "def slove():\n    import sys\n    import bisect\n    input = sys.stdin.readline\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    b.sort()\n    c.sort()\n    t = 0\n    for v in b:\n        an = bisect.bisect_left(a, v)\n        cn = n - bisect.bisect_right(c, v)\n        t += (an * cn)\n    print(t)\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14830": {"id": 14830, "code": "n = 1;p = 1\na = [50]\nk=0\ng=0\nfor i in range(n):\n    if a[i]%2==0:\n        g+=1\n    else:\n        k+=1\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nnumg=0\nnumk=0\nif p==0:\n    for i in range(k//2+1):\n        numk+=cmb(k,i*2)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)\nelse:\n    for i in range((k+1)//2):\n        numk+=cmb(k,i*2+1)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", ">"]}, "5208": {"id": 5208, "code": "def resolve():\n    s = \"xyz\"\n    print('{}{}{}'.format(s[0],len(s)-2,s[-1]))\nresolve()", "coverage": [">", ">", ">", ">"]}, "7565": {"id": 7565, "code": "import math\ndef main():\n  H = 10;N = 3\n  A = [4, 5, 6]\n  if sum(A) >= H:\n    print('Yes')\n  else:\n    print('No')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14503": {"id": 14503, "code": "from math import factorial\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n - r)\nn = 1;p = 1\na = [50]\neven = 0\nodd = 0\nfor i in a:\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nif p == 0:\n    temp = 0\n    for i in range(0,odd+1,2):\n        temp += nCr(odd,i)\n    print(int(2**even * temp))\nelse:\n    temp = 0\n    for i in range(1,odd+1,2):\n        temp += nCr(odd,i)\n    print(int(2**even * temp))", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">"]}, "9466": {"id": 9466, "code": "import sys\ndef LS2(): return list(\"2017/01/07\".rstrip())  \nS = LS2()\nS[3] = '8'\nprint(\"\".join(S))", "coverage": [">", ">", ">", ">", ">"]}, "11585": {"id": 11585, "code": "def main():\n    day = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n    s = \"SUN\"\n    ans = 7 - day.index(s)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14566": {"id": 14566, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\nn = [0] * 2\nfor a in A:\n    n[a % 2] += 1\nif P == 1:\n    ans = 0\n    for i in range(1, n[1]+1, 2):\n        ans += comb(n[1], i)\n    ans *= 2 ** n[0]\nelse:\n    ans = 0\n    for i in range(0, n[1]+1, 2):\n        if i == 0:\n            ans += 1\n        else:\n            ans += comb(n[1], i)\n    ans *= 2 ** n[0]\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16136": {"id": 16136, "code": "def curtain(a, b):\n    return a-b*2 if a > b*2 else 0\ndef main():\n    a = 20;b = 30\n    print(curtain(a, b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18988": {"id": 18988, "code": "def resolve():\n    N = 12\n    if N % 2 == 1:\n        return print(0)\n    ans = 0\n    tmp = N // 2\n    while tmp:\n        tmp //= 5\n        ans += tmp\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1317": {"id": 1317, "code": "def resolve():\n    N = \"750\"\n    a, b, c = list(N)\n    if a < b or (a == b and a < c):\n        a = int(a) + 1\n    print(a, a, a, sep=\"\")\nresolve()", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "1315": {"id": 1315, "code": "def resolve():\n    N = \"111\"\n    a, b, c = list(N)\n    if a < b or (a == b and a < c):\n        a = int(a) + 1\n    print(a, a, a, sep=\"\")\nresolve()", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "3536": {"id": 3536, "code": "import sys\ndef S(): return \"20 15\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "8070": {"id": 8070, "code": "import sys\ndef main():\n    N = 3;K = 3\n    a = [1, 2, 3]\n    answer = 0\n    for i in range(N):\n        if K + (i-1)*(K-1) >= N:\n            answer = i\n            break\n    print(answer)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13590": {"id": 13590, "code": "def resolve():\n    s = \"haiku,atcoder,tasks\"\n    print(s.replace(',',' '))\nresolve()", "coverage": [">", ">", ">", ">"]}, "4565": {"id": 4565, "code": "def main():\n    s = \"smiles\"\n    res = s[0]\n    res += str(len(s) - 2)\n    res += s[-1]\n    print(res)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "132": {"id": 132, "code": "def main():\n    s = ['a']\n    k = 25\n    ascii_lowercase = 'abcdefghijklmnopqrstuvwxyz'\n    D = dict(zip(ascii_lowercase,list(range(0,len(ascii_lowercase)))))\n    n = len(ascii_lowercase)\n    for i in range(0,len(s)):\n        j = D[s[i]]\n        if j != 0 and 26 -j <= k:\n            k -= (26-j)\n            s[i] ='a'\n    if k >0:\n        j = (D[s[-1]] + k%26)%26\n        s[-1] = ascii_lowercase[j]\n    print(''.join(s))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "17907": {"id": 17907, "code": "def main():\n    s = \"1905\"\n    if (int(s[:2]) > 12 or int(s[:2]) == 0)and (int(s[2:4]) >= 1 and int(s[2:4]) <= 12) :\n        print(\"YYMM\")\n    elif (int(s[2:4]) > 12 or int(s[2:4]) == 0) and (int(s[:2]) >=1 and int(s[:2]) <=12) :\n        print(\"MMYY\")\n    elif (int(s[:2]) >= 1 and int(s[:2])) <= 12 and (int(s[2:4]) >=1 and int(s[2:4]) <= 12) :\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"NA\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13783": {"id": 13783, "code": "def study_time(h1, m1, h2, m2, k):\n    result = (h2 - h1) * 60 + m2 - m1 - k\n    return result\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif __name__ == '__main__':\n    print(study_time(h1, m1, h2, m2, k))", "coverage": [">", ">", ">", ">", ">", ">"]}, "14564": {"id": 14564, "code": "n = 3;p = 0\nns = [1, 1, 1]\nns = [i % 2 for i in ns]\nans = [0, 0]\ndef cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nc = ns.count(1)\nans[1] = sum(cmb(c, i) for i in range(1, c + 1, 2)) * 2 ** (n - c)\nans[0] = 2**n - ans[1]\nprint(ans[p])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "5408": {"id": 5408, "code": "def main():\n n = 2\n print((n + 1) // 2)\nmain()", "coverage": [">", ">", ">", ">"]}, "3787": {"id": 3787, "code": "def main():\n    x = 100000;y = 1;z = 1\n    x = x - z\n    ans = x // (y+z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5612": {"id": 5612, "code": "def resolve():\n    n = 2\n    ans = n // 2 + n % 2\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "4805": {"id": 4805, "code": "import sys\ndef input(): return \"smiles\".strip()\ndef resolve():\n    s = \"smiles\"\n    print(s[0]+str(len(s)-2)+s[-1])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "14799": {"id": 14799, "code": "nCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\nN = 2;P = 0\nA = [1, 1]\nkisuu = sum(A)  \nguusuu = N-kisuu  \nif P == 1:\n    tmp_guusuu = 0\n    tmp_kisuu = 0\n    for i in range(guusuu+1):\n        tmp_guusuu += cmb(guusuu, i)\n    for i in range(kisuu+1):\n        if i % 2 == 0:\n            continue\n        tmp_kisuu += cmb(kisuu, i)\n    print(tmp_guusuu*tmp_kisuu)\nelif P == 0:\n    tmp_guusuu = 0\n    tmp_kisuu = 0\n    for i in range(guusuu+1):\n        tmp_guusuu += cmb(guusuu, i)\n    for i in range(kisuu+1):\n        if i % 2 == 1:\n            continue\n        tmp_kisuu += cmb(kisuu, i)\n    print(tmp_guusuu*tmp_kisuu)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9941": {"id": 9941, "code": "def abc064_d():\n  _ = int(\"8\")\n  s = \"))))((((\"\n  srev = s[::-1]\n  op, cl = 0, 0\n  f, r = '', ''\n  for c in srev:\n    if c == '(': op += 1\n    else: cl += 1\n    if op > cl:\n      r += ')'\n      cl += 1\n  else:\n    f += '(' * (cl - op)\n  ans = f + s + r\n  print(ans)\nabc064_d()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3965": {"id": 3965, "code": "def main(x, y, z):\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    x = 12;y = 3;z = 1\n    main(x, y, z)", "coverage": [">", ">", ">", ">", ">"]}, "12398": {"id": 12398, "code": "def resolve():\n    s = \"level\"\n    if s == s[::-1]:\n        s_1 = s[:len(s)//2]\n        s_2 = s[(len(s)+1)//2:]\n        if (s_1 == s_1[::-1]) and (s_2 == s_2[::-1]):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "14858": {"id": 14858, "code": "from operator import mul\nfrom functools import reduce\ndef combinations_count(n, r):\n    r = min(r, n - r)\n    numer = reduce(mul, range(n, n - r, -1), 1)\n    denom = reduce(mul, range(1, r + 1), 1)\n    return numer // denom\nfrom collections import Counter\nn = 1;p = 1\na = [50]\na = sorted(list(map(lambda x: x % 2, a)))\na = Counter(a)\nans = 0\nif p == 1:\n    for i in range(1, a[1] + 1, 2):\n        for j in range(a[0] + 1):\n            ans += combinations_count(a[1], i) * combinations_count(a[0], j)\nif p == 0:\n    for i in range(0, a[1] + 1, 2):\n        for j in range(a[0] + 1):\n            ans += combinations_count(a[1], i) * combinations_count(a[0], j)\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", ">"]}, "11116": {"id": 11116, "code": "import sys\ninput = \"<function <lambda>>\"\ndef pal(s, L, R):\n    return s[L] == s[R] and (L >= R or pal(s, L + 1, R - 1))\ns = \"level\"\nn = len(s)\nprint('Yes' if pal(s, 0, n - 1) and pal(s, 0, (n - 1) // 2 - 1) and pal(s, (n + 3) // 2 - 1, n - 1) else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5973": {"id": 5973, "code": "def solve():\n    n = 100\n    print((n+1)//2)\nsolve()", "coverage": [">", ">", ">", ">"]}, "137": {"id": 137, "code": "import sys\nsys.setrecursionlimit(10**7)\nalphabets = \"abcdefghijklmnopqrstuvwxyz\"\na = {c:i for i, c in enumerate(alphabets)}\ns = ['a']\nn = len(s)\nk = 25\ndef f(k, i):\n    if i == n - 1:\n        k_ = k % 26\n        c = s[i]\n        shifted = (k_ + a[c]) % 26\n        return alphabets[shifted]\n    c = s[i]\n    diff = 26 - a[c]\n    if c != \"a\" and diff <= k:\n        return \"a\" + f(k-diff, i+1)\n    else:\n        return c + f(k, i+1)\nprint(f(k, 0))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "14157": {"id": 14157, "code": "def main():\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 1\n    flg = 0\n    cursol = 0\n    for i in a:\n        if cursol == 0:\n            cursol = i\n            continue\n        if flg == 0:\n            if i > cursol:\n                flg = 1\n                cursol = i\n            elif i < cursol:\n                flg = -1\n                cursol = i\n        elif flg == 1:\n            if i >= cursol:\n                cursol = i\n            elif i < cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n        else:\n            if i <= cursol:\n                cursol = i\n            elif i > cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "18791": {"id": 18791, "code": "def main():\n    H = 14\n    W = 12\n    N = 112\n    ans = -(-N//max(H, W))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15123": {"id": 15123, "code": "from math import factorial\nfrom collections import Counter\ndef nCr(n,r):\n    return factorial(n)//(factorial(r)*factorial(n-r))\nN = 2;P = 0\nA = [1, 1]\nc=Counter(A)\nz=pow(2,c.get(0,0))\nres=0\nfor i in range(1 if P else 0,c.get(1,0)+1,2):\n    res+=nCr(c.get(1,0),i)\nprint(z*res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6430": {"id": 6430, "code": "from bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    B_count = [0] * N\n    for i in range(N):\n        index = bisect_right(C,B[i])\n        if index < N:\n            B_count[i] = N - index\n    D = [0] + list(accumulate(B_count))\n    ans = 0\n    for a in A:\n        index = bisect_right(B,a)\n        ans += D[N] - D[index]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14606": {"id": 14606, "code": "n = 3;p = 0\nA = [1, 1, 1]\neven = 0\nodd = 0\nfor i in range(n):\n    if A[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\neven_answer = 2 ** even\ncheck = p\ndef kaijo(i):\n    if (i == 1) or (i == 0):\n        return 1\n    return i * kaijo(i - 1)\nodd_answer = 0\nwhile check <= odd:\n    odd_answer = odd_answer + (kaijo(odd) / kaijo(check) / kaijo(odd - check))\n    check += 2\nprint(int(odd_answer * even_answer))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18998": {"id": 18998, "code": "def resolve():\n    N = \"5\"\n    res = 0\n    if int(str(N)[-1]) % 2 == 0:\n        i = 0\n        N=int(N)\n        while int(N) >= 2*5**i:\n            i += 1\n            res += N//(2*5**i)\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "8177": {"id": 8177, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    N = 3;K = 3\n    a = [1, 2, 3]\n    m=N-1\n    l=K-1\n    print((m+l-1)//l)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13791": {"id": 13791, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print((max(0, (h2 - h1) * 60 + (m2 - m1) - k)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16759": {"id": 16759, "code": "def hd(a,b):\n    ans = \"\"\n    if a == \"H\":\n        ans = \"H\" if b == \"H\" else \"D\"\n    else:\n        ans = \"D\" if b == \"H\" else \"H\"\n    return ans\ndef main():\n    a = \"D\";b = \"H\"\n    print(hd(a , b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "16583": {"id": 16583, "code": "import sys\ndef IS(): return \"D D\".rstrip()\ndef II(): return int(IS())\ndef MII(): return list(map(int, IS().split()))\ndef MIIZ(): return list(map(lambda x: x-1, MII()))\ndef main():\n    a,b = IS().split()\n    if a == 'H':\n        print(b)\n    elif a == 'D':\n        if b == 'H':\n            print('D')\n        elif b == 'D':\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "8025": {"id": 8025, "code": "def waru(a,b):\n  if a%b==0:\n    return a//b\n  else:\n    return (a//b)+1\nN = 3;K = 3\nL = [1, 2, 3]\nmina=min(L)\nind=list()\nR=[0]*N\nfor i in range(N):\n  if L[i]==mina:\n    ind.append(i)\n    R[i]+=1\nfor i in range(1,N):\n  R[i]=R[i-1]+R[i]\ns=ind[0]\na=waru(s,K-1)\nb=(a*(K-1))-s\nsusumi=b+s+1\nwhile True:\n  if susumi>=N:\n    print(a)\n    break\n  if R[min(susumi+K,N-1)]-R[susumi]>0:\n    susumi+=K\n    a+=1\n  else:\n    susumi+=K-1\n    a+=1", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "15881": {"id": 15881, "code": "X = 13;Y = 3;Z = 1\ndef solve(x,y,z):\n  cnt = 0\n  x -= z\n  while True:\n    x -= y + z\n    if x >= 0:\n      cnt += 1\n    else:\n      return cnt\nprint(solve(X,Y,Z))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "7163": {"id": 7163, "code": "def main():\n    h = 210;n = 5\n    a = [31, 41, 59, 26, 53]\n    if sum(a)>=h:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2215": {"id": 2215, "code": "def main():\n    n = 10;a = 3;b = 5\n    mx = min(a, b)\n    mn = max(0, a + b - n)\n    print(mx, mn)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16409": {"id": 16409, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 2\n    a = [100, 0]\n    a.sort()\n    a_max=a[-1]\n    b_max=-1\n    for i in range(n-1):\n        if b_max<min(a[i],a_max-a[i]):\n            b_max=a[i]\n    print(a_max,b_max)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14895": {"id": 14895, "code": "import sys\nN = 1;P = 1\nA = [50]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a % 2 == 1:\n        kisu += 1\n    else:\n        gusu += 1\ntotal = 2 ** N \nx = [1]\nres = 1\nfor i in range(1, N + 1):\n    res *= i\n    x.append(res)\ndef cmb(n, r):\n    return x[n] // (x[r] * x[n - r])\nans = 0 \nfor k in range(kisu + 1):\n    if k % 2 == 0:\n        ans += cmb(kisu, k) * (2 ** gusu)\nif P == 0:\n    print(ans)\nelse:\n    print(total - ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14005": {"id": 14005, "code": "def solve():\n  ans = 1\n  N = 7\n  A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n  ud = 0\n  for i in range(N-1):\n    a = A[i+1]-A[i]\n    if a*ud<0:\n      ans += 1\n      ud = 0\n    elif ud==0:\n      ud = a\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16450": {"id": 16450, "code": "import bisect\ndef main():\n    N = 2\n    A = [0, 100]\n    r = A[-1]//2\n    B = A[:-1]\n    x = bisect.bisect_left(B, r)\n    if x == 0:\n        return A[-1], B[x]\n    elif x == N-1:\n        return A[-1], B[x-1]\n    else:\n        if abs(B[x]-r) <= abs(B[x-1]-r): return A[-1], B[x]\n        else: return A[-1], B[x-1]\nif __name__ == '__main__':\n    print(*main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">"]}, "439": {"id": 439, "code": "abc = ''\nfor i in range(97 ,97+26):\n    abc += chr(i)\nS = \"a\"\nK = 25\nans = ''\nfor i,s in enumerate(S):\n    if ord(s) > ord('a') and 26 - (ord(s) - ord('a')) <= K and i!=len(S)-1:\n        ans += 'a'\n        K -= 26 - (ord(s) - ord('a'))\n    elif i != len(S)-1:\n        ans += s\n    else:\n        ans += abc[(ord(s) + K%26-ord('a'))%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]}, "2513": {"id": 2513, "code": "import sys\ndef input(): return \"4 9 0 8\".rstrip()\ndef main():\n    n = {0, 9, 4, 8}\n    if 1 in n and 9 in n and 7 in n and 4 in n:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14966": {"id": 14966, "code": "def comb(n, max_k, mod):\n    res = [1]*(max_k+1)\n    t = 1\n    for i in range(max_k+1):\n        res[i] *= t\n        t *= n-i\n        t %= mod\n    n = reduce(lambda x,y: (x*y)%mod, range(1,max_k+1), 1)\n    n = modinv(n, mod)\n    for i in reversed(range(max_k+1)):\n        res[i] *= n\n        res[i] %= mod\n        n *= i\n        n %= mod\n    return res\nN = 1;P = 1\nA = map(int,\"50\".split())\nevens = 0\nodds = 0\nfor a in A:\n    if a%2:\n        odds += 1\n    else:\n        evens += 1\ncnt = 0\nif P == 0:\n    comb = 1\n    cnt = 1\n    for n in range(2,odds+1,2):\n        comb *= (odds+2-n)*(odds+1-n)\n        comb //= n*(n-1)\n        cnt += comb\nelse:\n    comb = odds\n    cnt = odds\n    for n in range(3,odds+1,2):\n        comb *= (odds+2-n)*(odds+1-n)\n        comb //= n*(n-1)\n        cnt += comb\nprint(2**evens * cnt)", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "9769": {"id": 9769, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 3\n    s = \"())\"\n    left_left=0\n    need_left=0\n    for i in range(n):\n        if s[i]==\"(\":\n            left_left+=1\n        else:\n            if left_left>0:\n                left_left-=1\n            else:\n                need_left+=1\n    print(\"(\"*need_left+s+\")\"*left_left)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "15022": {"id": 15022, "code": "import random as rng\nimport itertools as it\nimport collections as col\nimport heapq as hq\nimport sys\nimport copy as cp\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\ndef dump_impl(*objects):\n    print(*objects, file=sys.stderr)\ndef dump_dummy(*objects):\n    pass\ndump = dump_impl if \"DEBUG\" in sys.argv else dump_dummy\ndef odd(n): return n & 1\ndef even(n): return not odd(n)\ndef comb(n, m):\n    r = 1\n    for i in range(1, n+1):\n        r *= i\n    for i in range(1, m+1):\n        r //= i\n    for i in range(1, n-m+1):\n        r //= i\n    return r\ndef main():\n    N = 2;P = 0\n    A = [1, 1]\n    cnt0 = len([a for a in A if a == 0])\n    cnt1 = len([a for a in A if a == 1])\n    ans = 0\n    if odd(P):\n        for i in range(cnt1 + 1):\n            if odd(i):\n                ans += comb(cnt1, i)\n    else:\n        for i in range(cnt1 + 1):\n            if even(i):\n                ans += comb(cnt1, i)\n    ans *= pow(2, cnt0)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11156": {"id": 11156, "code": "s = \"akasaka\"\nn=len(s)\ns1=s[:(n-1)//2]\ns2=s[n+3//2:]\ndef ispalindrome(str):\n    if str==str[::-1]:\n        s1=s[:(n-1)//2]\n        if s1==s1[::-1]:\n            s2=s[n+3//2:]\n            if s2==s2[::-1]:\n                return 'Yes'\n            return 'No'\n        return 'No'\n    else:\n        return 'No'\nprint(ispalindrome(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "10809": {"id": 10809, "code": "def is_p(s):\n    return s == s[::-1]\ns = \"level\"\nl = (len(s) - 1)//2\nr = l + 1\nprint('Yes' if is_p(s) and is_p(s[:l]) and is_p(s[r:]) else 'No')", "coverage": [">", ">", ">", ">", ">", ">"]}, "12612": {"id": 12612, "code": "def com_div(x, y):\n    dv = []\n    for i in range(min(x, y), 0, -1):\n        if x % i == 0 and y % i == 0:\n            dv.append(i)\n    return dv\na = 1;b = 1;k = 1\nprint(com_div(a, b)[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10325": {"id": 10325, "code": "def actual(a, b, k):\n    M = max(a, b)\n    common_divisors = []\n    for i in range(1, M + 1):\n        if (a % i == 0) and (b % i == 0):\n            common_divisors.append(i)\n    return common_divisors[-k]\na = 8;b = 12;k = 2\nprint(actual(a, b, k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17433": {"id": 17433, "code": "import math\ndef main():\n    s = \"1905\"\n    f = int(s[:2])\n    b = int(s[2:])\n    if 1 <= f and f <= 12 and 1 <= b and b <= 12:\n        print(\"AMBIGUOUS\")\n    elif 0 <= f and f <= 99 and 1 <= b and b <= 12:\n        print(\"YYMM\")\n    elif 0 <= b and b <= 99 and 1 <= f and f <= 12:\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "12046": {"id": 12046, "code": "def resolve():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m2==m1:\n        print('0')\n    else:\n        print('1')\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "8496": {"id": 8496, "code": "def main():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13902": {"id": 13902, "code": "def main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    end = len(A)\n    judge = 0\n    ans = 0\n    i = 0\n    if end == 1:\n        return 1\n    while True:\n        if A[i] < A[i+1]:\n            ans += 1\n            while True:\n                i += 1\n                if i == end-1:\n                    return ans\n                elif A[i] <= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] > A[i+1]:\n            ans += 1\n            while True:\n                i = i+1\n                if i == end-1:\n                    return ans\n                elif A[i] >= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] == A[i+1]:\n            i += 1\n            if i == end-1:\n                ans += 1\n                return ans\n            else:\n                continue\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "15912": {"id": 15912, "code": "def main():\n    A = 20;B = 15\n    area = A - 2*B\n    if area > 0:\n        print(area)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "4977": {"id": 4977, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    s = \"xyz\"\n    ans = \"\".join([s[0], str(len(s) - 2), s[-1]])\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6377": {"id": 6377, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        tmpa = bisect.bisect_left(A, b)\n        tmpc = N - bisect.bisect_right(C, b)\n        ans += tmpa*tmpc\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5781": {"id": 5781, "code": "def main():\n    n = 100\n    if n % 2 == 1:\n        print(n // 2 + 1)\n    else:\n        print(n // 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "230": {"id": 230, "code": "def resolve():\n    def decode(x):\n        return ord(x) - 97\n    def encode(x):\n        return chr(x + 97)\n    S = [23, 24, 25]\n    K = 4\n    for i in range(len(S) - 1):\n        if S[i] == 0:\n            continue\n        if 26 - S[i] <= K:\n            K -= 26 - S[i]\n            S[i] = 0\n    S[-1] = (S[-1] + K) % 26\n    ans = map(encode, S)\n    print(\"\".join(ans))\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4689": {"id": 4689, "code": "def main():\n    s = \"xyz\"\n    print(s[0] + str(len(s[1:-1])) + s[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13449": {"id": 13449, "code": "import sys\ndef input(): return \"haiku,atcoder,tasks\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\ns = \"haiku,atcoder,tasks\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2108": {"id": 2108, "code": "import sys\ndef input(): return \"10 7 5\".strip()\ndef resolve():\n    n = 10;a = 7;b = 5\n    ans1=min(a,b)\n    ans2=max(a+b-n,0)\n    print(ans1,ans2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "924": {"id": 924, "code": "def calc(k):\n    cur = 7 % k\n    for i in range(1, k + 1):\n        if cur == 0:\n            return i\n        else:\n            cur *= 10\n            cur += 7\n            cur %= k\n    return -1\nk = 101\nprint(calc(k))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "12332": {"id": 12332, "code": "def check(r):\n    if r == r[::-1]:\n        return True\ndef main():\n    s = \"akasaka\"\n    n = len(s)\n    print(\"Yes\" if check(s) and check(s[:(n-1)//2])\n          and check(s[((n-1)//2) + 1:]) else \"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5931": {"id": 5931, "code": "import math\ndef main():\n    n = 100\n    print(math.ceil(n / 2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "9450": {"id": 9450, "code": "import sys\ndef input(): return \"2017/01/07\".strip()\ndef resolve():\n    s = \"2017/01/07\"\n    print('2018'+s[4:])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "15975": {"id": 15975, "code": "import sys\ninput = sys.stdin.buffer.readline\nsys.setrecursionlimit(10**6)\nINF = float(\"inf\")\ndef main():\n    A = 20;B = 15\n    print(max(0, A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2943": {"id": 2943, "code": "def main():\n    s = \"1234567876\"\n    n = len(s)\n    ans = 100000000\n    for i in range(2, n):\n        t = int(s[i - 2: i+1])\n        ans = min(ans, abs(753 - t))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1525": {"id": 1525, "code": "def main():\n    n = 750\n    for i in range(1, 10):\n        if n <= i * 111:\n            print(i * 111)\n            break\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9975": {"id": 9975, "code": "def main():\n    N = 6\n    S = \")))())\"\n    h_left, h_min, h_cur = 0, 0, 0\n    for c in S:\n        if c == '(':\n            h_cur += 1\n        else:\n            h_cur -= 1\n        h_min = min(h_min, h_cur)\n    h_right = h_cur\n    if h_min < 0:\n        h_left -= h_min\n        h_right -= h_min\n    print('(' * h_left + S + ')' * h_right)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5947": {"id": 5947, "code": "def main():\n    N = 5\n    if N%2 == 1:\n      print(int((N+1)/2))\n    else:\n      print(int(N/2))\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12682": {"id": 12682, "code": "N = 5\ndef check():\n    if N==3 or N==5 or N==7:\n        return True\n    return False\nif check():\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "14733": {"id": 14733, "code": "memo = [0] * 100\ndef f(x):\n  global memo\n  if x in [0, 1]:\n    memo[x] = 1\n    return 1\n  else:\n    if memo[x] > 0:\n      return memo[x]\n    else:\n      memo[x] = x*f(x-1)\n      return memo[x]\ndef comb(n, r):\n  a = f(n)\n  b = f(r)\n  c = f(n-r)\n  return a // b // c\nN = 1;P = 1\nA = [50]\nA = [a%2 for a in A]\nn0 = A.count(0)\nn1 = N - n0\nbase = 2 ** n0\nm0 = m1 = 0\nfor i in range(n1+1):\n  if i % 2:\n    m1 += comb(n1, i)\n  else:\n    m0 += comb(n1, i)\nif P == 0:\n  print(base * m0)\nelse:\n  print(base * m1)", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "13214": {"id": 13214, "code": "def main():\n    stdIn = \"happy,newyear,enjoy\"\n    stdOut = solve(stdIn)\n    print(stdOut)\ndef solve(stdIn):\n    return stdIn.replace(',',' ')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15135": {"id": 15135, "code": "from math import factorial as fa\ndef comb(n, r):\n    return fa(n)//(fa(n-r)*fa(r))\nn = 2;p = 0\nA = [1, 1]\neven = A.count(0)\nodd = A.count(1)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i)\nprint(ans*pow(2,even))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10461": {"id": 10461, "code": "def main():\n    A = 8;B = 12;K = 2\n    cnt = 0\n    ans = 0\n    for i in range(min(A, B), 0, -1):\n        if A % i == 0 and B % i == 0:\n            cnt += 1\n        if cnt == K:\n            ans = i\n            break\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3339": {"id": 3339, "code": "import sys\ndef ISI(): return map(int, \"20 30\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", "!"]}, "664": {"id": 664, "code": "import sys\ndef input(): return \"101\".rstrip()\ndef main():\n    k = 101\n    keta = 1\n    mod = 7%k\n    if k % 7 == 0:\n        max_k = 9*k//7\n    else:\n        max_k = 9*k\n    if k %2 == 0 or k%5 == 0:\n        print(-1)\n    while keta < max_k:\n        if mod == 0:\n            print(keta)\n            break\n        mod = (mod*10 + 7)%k\n        keta += 1\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13165": {"id": 13165, "code": "def main():\n    print(*\"abcde,fghihgf,edcba\".split(\",\"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">"]}, "13832": {"id": 13832, "code": "def main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 1\n    is_add = False\n    is_minus = False\n    tmp = A[0]\n    for a in A[1:]:\n        if tmp > a:\n            if is_add:\n                ans += 1\n                is_add = False\n            else:\n                is_minus = True\n        elif tmp < a:\n            if is_minus:\n                ans += 1\n                is_minus = False\n            else:\n                is_add = True\n        tmp = a\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14687": {"id": 14687, "code": "import math\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\nal = [1, 3]\na0 = 0\na1 = 0\nfor a in al:\n    if a%2 == 0:\n        a0 += 1\n    else:\n        a1 += 1\nans = pow(2,a0)\nans2 = 0\nif p == 0:\n    for i in range(0,51,2):\n        if a1 < i:break\n        ans2 += com(a1,i)\nelse:\n    for i in range(1,51,2):\n        if a1 < i:break\n        ans2 += com(a1,i)\nprint(ans*ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "16630": {"id": 16630, "code": "def actual(a, b):\n    if a == b:\n        return 'H'\n    return 'D'\na = \"D\";b = \"H\"\nprint(actual(a, b))", "coverage": [">", ">", "!", ">", ">", ">"]}, "13429": {"id": 13429, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.replace(',', ' '))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13318": {"id": 13318, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    ans = s.replace(',', ' ')\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "360": {"id": 360, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    s = ['x', 'y', 'z']\n    K = 4\n    for i, c in enumerate(s):\n        if c == 'a':\n            continue\n        z = 123 - ord(c)\n        if K >= z:\n            s[i] = 'a'\n            K -= z\n        if K == 0:\n            break\n    s[-1] = chr(((ord(s[-1])-97+K))%26+97)\n    print(''.join(s))\nif __name__ == '__main__':\n     main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3643": {"id": 3643, "code": "def solve():\n    N = 20;M = 30\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "17093": {"id": 17093, "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    a = \"D\";b = \"D\"\n    if a == 'H':\n        print(b)\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "18442": {"id": 18442, "code": "from math import ceil\ndef main():\n    width = 2\n    height = 100\n    lower_limit = 200\n    print(ceil(lower_limit / max(width, height)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16457": {"id": 16457, "code": "def main():\n    N = 5\n    A = [6, 9, 4, 2, 11]\n    A_sorted = sorted(A)\n    A_max = A_sorted[-1]\n    A = A_sorted[:-1]\n    tansaku = (A_max + 1) // 2\n    ok = 0\n    ng = len(A) - 1\n    if A[ok] > tansaku:\n        print(A_max, A[ok])\n        exit()\n    if A[ng] <= tansaku:\n        print(A_max, A[ng])\n        exit()\n    while ok + 1 < ng:\n        center = (ok + ng) // 2\n        if A[center] <= tansaku:\n            ok = center\n        else:\n            ng = center\n    if tansaku - A[ok] <= A[ng] - tansaku:\n        print(A_max, A[ok])\n    else:\n        print(A_max, A[ng])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "192": {"id": 192, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\ndef main():\n    s = ['a']\n    N = len(s)\n    K = 25\n    i = 0\n    while K > 0:\n        if i == N-1:\n            num = ord(s[i])+K%26\n            if num > ord('z'):\n                num -= 26\n            s[i] = chr(num)\n            break\n        else:\n            if s[i] != 'a':\n                num = 26-ord(s[i])+ord('a')\n                if  num <= K:\n                    s[i] = 'a'\n                    K -= num\n            i += 1\n    print(''.join(s))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "11290": {"id": 11290, "code": "def main():\n    s = \"SAT\"\n    dic = {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}\n    print(dic.get(s))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "1952": {"id": 1952, "code": "import sys\ndef input(): return \"10 7 5\".strip()\ndef resolve():\n    n = 10;a = 7;b = 5\n    ans1=min(a,b)\n    if a+b>n:\n        ans2=a+b-n\n    else:\n        ans2=0\n    print(ans1,ans2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16533": {"id": 16533, "code": "def ABC_56_A():\n    A = \"H\";B = \"H\"\n    if A == 'H' and B == 'H':\n        print('H')\n    elif A == 'H' and B == 'D':\n        print('D')\n    elif A == 'D' and B == 'H':\n        print('D')\n    else:\n        print('H')\nif __name__ == '__main__':\n    ABC_56_A()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "18666": {"id": 18666, "code": "import math\nfrom collections import deque\ndef main():\n    h = 14\n    w = 12\n    n = 112\n    times = n//max([h,w])+(0 if n%max([h,w])==0 else 1)\n    print(times)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "763": {"id": 763, "code": "def main():\n    k = 2\n    if k % 2 ==0:\n        print(-1)\n        return\n    last = 0\n    for i in range(1000000):\n        if (last*10 + 7) % k == 0:\n            print(i+1)\n            return\n        last = (last*10 + 7) % k\n    print(-1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "3046": {"id": 3046, "code": "def resolve():\n    S = \"1234567876\"\n    res = 99999\n    num = len(S)\n    for i in range(num-1):\n        res = min(res, abs(int(S[i:i+3]) - 753))\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18449": {"id": 18449, "code": "def ceilT(a,b): \n    return (a+b-1)//b\nH = 3\nW = 7\nN = 10\ne=max(H,W)\nprint(ceilT(N,e))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3376": {"id": 3376, "code": "def main():\n    a = 12;b = 4\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "18645": {"id": 18645, "code": "H = 14\nW = 12\nN = 112\ndef ceil_div(a, b):\n    return (a + b - 1) // b\nprint(ceil_div(N, max(H, W)))", "coverage": [">", ">", ">", ">", ">", ">"]}, "6488": {"id": 6488, "code": "def main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    S = [0]\n    s = 0\n    i = 0\n    for b in B:\n        while i < N:\n            if b <= A[i]:\n                break\n            i += 1\n        s += i\n        S.append(s)\n    t = 0\n    i = 0\n    for c in C:\n        while i < N:\n            if c <= B[i]:\n                break\n            i += 1\n        t += S[i]\n    print(t)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10697": {"id": 10697, "code": "def kaibun(lst):\n    k = len(lst)//2 + len(lst)%2\n    for i in range(1,k+1):\n        if lst[i-1] != lst[-i]:\n            return False\n    return True\nS = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nN = len(S)\nif kaibun(S) and kaibun(S[:(N-1)//2]) and kaibun(S[(N+3)//2-1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "7174": {"id": 7174, "code": "def atc_153b(a: str, b: str) -> str:\n    HN = a.split(\" \")\n    H = int(HN[0])\n    N = int(HN[1])\n    A = b.split(\" \")\n    A_int = [int(ai) for ai in A]\n    damage = sum(A_int)\n    if (H - damage) <= 0:\n        return \"Yes\"\n    else:\n        return \"No\"\na = \"20 3\"\nb = \"4 5 6\"\nprint(atc_153b(a, b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15577": {"id": 15577, "code": "def answer(x: int, y: int, z: int) -> int:\n    return (x - z) // (y + z)\ndef main():\n    x = 12;y = 3;z = 1\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12893": {"id": 12893, "code": "def main(X):\n    list753 = [3,5,7]\n    return 'YES' if X in list753 else 'NO'\nX = 6\nprint(main(X))", "coverage": [">", ">", ">", ">", ">"]}, "911": {"id": 911, "code": "def check7s(k):\n    x = 7 % k\n    for i in range(1, k + 1):\n        if x == 0: return i\n        x = (x * 10 + 7) % k\n    return -1\nK = 101\nprint(check7s(K))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "10384": {"id": 10384, "code": "def divisor(n): \n    i = 1\n    table = []\n    while i * i <= n:\n        if n % i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\nA = 8;B = 12;K = 2\na_divisor = divisor(A)\nb_divisor = divisor(B)\nprint(sorted(list(set(a_divisor) & set(b_divisor)), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12761": {"id": 12761, "code": "def a753(x):\n    return \"YES\" if x == 3 or x == 5 or x == 7 else \"NO\"\ndef main():\n    x = 6\n    print(a753(x))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8490": {"id": 8490, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 7\n    a1 = chain(tuple([0]), tuple(map(int, \"3 3 4 5 4 5 3\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"5 3 4 4 2 3 2\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15618": {"id": 15618, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    x = 13;y = 3;z = 1\n    x = x - z\n    ans = x // (y + z)\n    print(ans)\n    return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19007": {"id": 19007, "code": "def calculate(n):\n    if n % 2 == 1:\n        return 0\n    s1 = n // 10\n    index = 1\n    s2 = 0\n    while (5 ** index) <= s1:\n        s2 += (s1 // (5 ** index))\n        index += 1\n    return s1 + s2\nprint(calculate(int(\"5\")))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14639": {"id": 14639, "code": "def ncr(n, r):\n    if n < r: return 0\n    r = min(r, n - r)\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + i + 1 for i in range(r)]\n    denominator = [i + 1 for i in range(r)]\n    for p in range(2, r + 1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p - 1, r, p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= numerator[k]\n    return int(result)\nn = 2;p = 0\na = [1, 3]\ndic = {'odd': 0, 'even': 0}\nfor i in a:\n    if i % 2 == 0:\n        dic['even'] += 1\n    else:\n        dic['odd'] += 1\neven = 0\nodd = 0\nfor i in range(dic['even'] + 1):\n    even += ncr(dic['even'], i)\nif p == 0:\n    for i in range(0, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nelse:\n    for i in range(1, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nprint(odd * even)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "15157": {"id": 15157, "code": "def answer(x: int, y: int, z: int) -> int:\n    return len(range(y + z * 2, x + 1, y + z))\ndef main():\n    x = 100000;y = 1;z = 1\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5971": {"id": 5971, "code": "def solve():\n    n = 5\n    print((n+1)//2)\nsolve()", "coverage": [">", ">", ">", ">"]}, "19258": {"id": 19258, "code": "def main():\n    N = 12\n    if N % 2 == 1:\n        print(0)\n        return\n    N //= 2\n    ret = 0\n    while N > 0:\n        N //= 5\n        ret += N\n    print(ret)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1683": {"id": 1683, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 10;A = 7;B = 5\n    max_XY = min(A, B)\n    min_XY = max(A + B - N, 0)\n    print(\"{} {}\".format(max_XY, min_XY))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10344": {"id": 10344, "code": "def solve():\n    A = 100;B = 50;K = 4\n    common_div = []\n    for i in range(1, min(A, B)+1):\n        if(A % i == 0 and B % i == 0):\n            common_div.append(i)\n    common_div.sort(reverse=True)\n    print(common_div[K-1])\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8817": {"id": 8817, "code": "def main():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13057": {"id": 13057, "code": "def main():\n    n = 6\n    if n == 7 or n == 5 or n==3 :\n        print(\"YES\")\n    else: print(\"NO\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", ">", ">", ">"]}, "2404": {"id": 2404, "code": "n = 2;m = 1\ndef f(x):\n  return x*(x-1)//2\nprint(f(n) + f(m))", "coverage": [">", ">", ">", ">"]}, "765": {"id": 765, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    K = 2\n    t = 7\n    t %= K\n    for i in range(K+1):\n        if t == 0:\n            print(i+1)\n            break\n        t = (t * 10 + 7) % K\n    else:\n        print(-1)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">"]}, "6527": {"id": 6527, "code": "def main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    from bisect import bisect\n    ans = []\n    ans2 = []\n    for a in A:\n        b = bisect(B, a)\n        ans.append(N-b)\n    for b in B:\n        c = bisect(C, b)\n        ans2.append(N-c)\n    from itertools import accumulate\n    ans2 = list(accumulate([0] + ans2[::-1]))\n    answer = 0\n    for a in ans:\n        answer += ans2[a]\n    print(answer)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9976": {"id": 9976, "code": "def main():\n    N = 8\n    S = \"))))((((\"\n    h_left, h_min, h_cur = 0, 0, 0\n    for c in S:\n        if c == '(':\n            h_cur += 1\n        else:\n            h_cur -= 1\n        h_min = min(h_min, h_cur)\n    h_right = h_cur\n    if h_min < 0:\n        h_left -= h_min\n        h_right -= h_min\n    print('(' * h_left + S + ')' * h_right)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14877": {"id": 14877, "code": "n = 1;p = 1\nlis = [50]\ndef nCk( n, k):\n  ans = 1\n  for i in range(k):\n    ans *= (n-i)\n  for i in range(k):\n    ans /= (k-i)\n  return ans\ne = 0\no = 0\nfor i in lis:\n  if i % 2 == 0:\n    e += 1\n  else:\n    o += 1\nif p == 0:\n  ans = 1\n  for i in range( o//2):\n    ans += nCk( o, (i+1)*2)\n  print( int( ans * 2**e))\nelse:\n  ans = 0\n  for i in range( o//2):\n    ans += nCk( o, i*2+1)\n  print( int( ans * 2**e))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">"]}, "8351": {"id": 8351, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 1\n    a1_list = [2]\n    a2_list = [3]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15803": {"id": 15803, "code": "def resolve():\n    X = 64146;Y = 123;Z = 456\n    print((X-Z)//(Y+Z))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "13752": {"id": 13752, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    HM1 = H1*60+M1\n    HM2 = H2*60+M2\n    print(HM2-HM1-K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16056": {"id": 16056, "code": "def main():\n    a = 20;b = 15\n    ans = a - 2*b\n    ans = 0 if ans < 0 else ans \n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14439": {"id": 14439, "code": "def main():\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    res = 1\n    plus = 0\n    minus = 0\n    for i in range(n-1):\n        if a[i + 1] - a[i] > 0:\n            plus += 1\n        elif a[i + 1] - a[i] < 0:\n            minus += 1\n        if plus and minus:\n            res += 1\n            plus = 0\n            minus = 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8349": {"id": 8349, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 4\n    a1_list = [1, 1, 1, 1]\n    a2_list = [1, 1, 1, 1]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11142": {"id": 11142, "code": "def main():\n    S = \"akasaka\"\n    L = len(S)\n    def check(s):\n        return s == s[::-1]\n    cond = check(S)\n    cond = cond and check(S[:L // 2])\n    cond = cond and check(S[(L + 1) // 2:])\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11251": {"id": 11251, "code": "def main():\n  s = \"SUN\"\n  if(s=='SUN'):\n    print(7)\n  elif(s=='MON'):\n    print(6)\n  elif(s=='TUE'):\n    print(5)\n  elif(s=='WED'):\n    print(4)\n  elif(s=='THU'):\n    print(3)\n  elif(s=='FRI'):\n    print(2)\n  else:\n    print(1)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "12287": {"id": 12287, "code": "def isKaibun(ss):    \n    return ss==ss[::-1]\ns = \"level\"\nans=True\nn=len(s)\nif not isKaibun(s):\n    ans=False\nif not isKaibun(s[:((n-1)//2)]):\n    ans=False\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "3659": {"id": 3659, "code": "def main():\n    A = 12;B = 4\n    if A < B * 2:\n        print(0)\n        exit(0)\n    else:\n        print(A - B * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "16008": {"id": 16008, "code": "def solve():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "11792": {"id": 11792, "code": "from sys import stdin\ndef main():\n    M_1 = 11;D_1 = 16\n    M_2 = 11;D_2 = 17\n    if not M_1 == M_2:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8572": {"id": 8572, "code": "def resolve():\n    N = 4\n    A = [1, 1, 1, 1]\n    a = [1, 1, 1, 1]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13751": {"id": 13751, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    HM1 = H1*60+M1\n    HM2 = H2*60+M2\n    print(HM2-HM1-K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14583": {"id": 14583, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\nA = [1, 1]\nx = A.count(0)\ny = n - x\nif p == 1:\n    cnt = 0\n    for i in range(y + 1):\n        if i % 2 == 1:\n            cnt += combinations_count(y, i)\n    print(2 ** x * cnt)\nelse:\n    cnt = 0\n    for i in range(y + 1):\n        if i % 2 == 0:\n            cnt += combinations_count(y, i)\n    print(2 ** x * cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "19161": {"id": 19161, "code": "N = \"5\"\ndef f(x):\n  p = 1\n  i = 1\n  cnt = 0\n  while p > 0:\n    p = x // (5**i) // 2\n    cnt += p\n    i += 1\n  return cnt\nif int(N[-1])%2 == 1:\n  print(0)\nelse:\n  print(f(int(N)))", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "15875": {"id": 15875, "code": "def main():\n    x = 12;y = 3;z = 1\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "12770": {"id": 12770, "code": "import sys\ndef input():\n    return \"5\".rstrip()\ndef main():\n    X = 5\n    if X==1:\n        print(\"NO\")\n        exit()\n    if 105 % X ==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "1268": {"id": 1268, "code": "import sys\ndef I(): return int(\"112\".rstrip())\nN = I()\nA = [111*i for i in range(1,10)]\nfor i in range(9):\n    if N <= A[i]:\n        print(A[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2747": {"id": 2747, "code": "def resolve():\n    l = {0, 9, 4, 8}\n    if l == {1, 7, 9, 4}:\n        print('YES')\n    else:\n        print('NO')\nresolve()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "14770": {"id": 14770, "code": "import sys\nimport math\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    odd = 0\n    even = 0\n    ans = 0\n    def comb(n, r):\n        return math.factorial(n) // math.factorial(r) // math.factorial(n - r)\n    for a in A:\n        if a % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if P == 0:\n        for i in range(0, odd + 1, 2):\n            for j in range(even + 1):\n                ans += comb(odd, i) * comb(even, j)\n        print(ans)\n    else:\n        for i in range(1, odd + 1, 2):\n            for j in range(even + 1):\n                ans += comb(odd, i) * comb(even, j)\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "15480": {"id": 15480, "code": "def solve(x, y, z):\n    tmp = x - z\n    ans = tmp // (y + z)\n    return ans\nif __name__ == \"__main__\":\n    x = 100000;y = 1;z = 1\n    print(solve(x,y,z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13364": {"id": 13364, "code": "def resolve():\n    a = \"happy\";b = \"newyear\";c = \"enjoy\"\n    print(a,b,c)\nresolve()", "coverage": [">", ">", ">", ">"]}, "19360": {"id": 19360, "code": "def actual(n):\n    if n % 2 == 0:\n        return n\n    return 2 * n\nn = 999999999\nprint(actual(n))", "coverage": [">", ">", "!", ">", ">", ">"]}, "6664": {"id": 6664, "code": "def resolve():\n    H = 20;N = 3\n    A = [4, 5, 6]\n    print(\"Yes\" if sum(A) >= H else \"No\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "15876": {"id": 15876, "code": "def main():\n    x = 100000;y = 1;z = 1\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "16535": {"id": 16535, "code": "def ABC_56_A():\n    A = \"D\";B = \"D\"\n    if A == 'H' and B == 'H':\n        print('H')\n    elif A == 'H' and B == 'D':\n        print('D')\n    elif A == 'D' and B == 'H':\n        print('D')\n    else:\n        print('H')\nif __name__ == '__main__':\n    ABC_56_A()", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "18466": {"id": 18466, "code": "def a_painting():\n    from math import ceil\n    H = 2\n    W = 100\n    N = 200\n    return ceil(N / max(H, W))\nprint(a_painting())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14438": {"id": 14438, "code": "def main():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    res = 1\n    plus = 0\n    minus = 0\n    for i in range(n-1):\n        if a[i + 1] - a[i] > 0:\n            plus += 1\n        elif a[i + 1] - a[i] < 0:\n            minus += 1\n        if plus and minus:\n            res += 1\n            plus = 0\n            minus = 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13748": {"id": 13748, "code": "def calc_blank_minute(H1, M1, H2, M2, K):\n  return (H2 * 60) + M2 - (H1 * 60) - M1 - K\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nans = calc_blank_minute(H1, M1, H2, M2, K)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "18949": {"id": 18949, "code": "def main():\n  N = 12\n  if N % 2 != 0:\n    print(0)\n    exit()\n  ans = 0\n  i = 1\n  while 2*5**i<=N:\n    ans += N//(2*5**i)\n    i += 1\n  print(ans)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "12360": {"id": 12360, "code": "s = \"akasaka\"\nn = len(s)\ndef judge_palindrome(s):\n    if s == s[::-1]:\n        return True\n    else:\n        return False\nif judge_palindrome(s) and judge_palindrome(s[:(n - 1) // 2]) and judge_palindrome(s[(n + 3) // 2 - 1:]):\n    ans = 'Yes'\nelse:\n    ans = 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "16132": {"id": 16132, "code": "import sys\na = 20;b = 15\ndef main():\n    r = max(0, a - b * 2)\n    print(r)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3909": {"id": 3909, "code": "def main():\n    X = 12;Y = 3;Z = 1\n    rest = X - Z\n    c = 0\n    while rest > 0:\n        rest = rest - Y - Z\n        if rest < 0:\n            print(c)\n            return\n        elif rest == 0:\n            print(c+1)\n            return\n        else:\n            c += 1\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "9182": {"id": 9182, "code": "def main():\n    print(\"2017/01/07\".replace('2017', '2018', 1))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "1637": {"id": 1637, "code": "def main():\n    n = 10;a = 3;b = 5\n    print(min(a, b), max(a + b - n, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "19401": {"id": 19401, "code": "n = 10\ndef getmdc(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef mmc2(x):\n    return x * 2 // getmdc(x, 2)\nprint(mmc2(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1436": {"id": 1436, "code": "import sys\ndef input(): return \"111\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nN = 111\nprint(-(-N//111)*111)", "coverage": [">", ">", ">", ">", ">", ">"]}, "14709": {"id": 14709, "code": "def f(n, p, a):\n    odd = sum(i % 2 for i in a)\n    if odd == 0:\n        if p == 0:\n            return 2**n\n        elif p == 1:\n            return 0\n    else:\n        return 2**(n-1)\nn = 45;p = 1\na = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nprint(f(n, p, a))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "5902": {"id": 5902, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 5\n    return (N//2) + N % 2\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15854": {"id": 15854, "code": "import collections\ndef main():\n    x = 12;y = 3;z = 1\n    k = y+z+z\n    res = 1\n    while((k<x)):\n        k+=(z+y)\n        if(k>x):\n            break\n        res+=1\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10761": {"id": 10761, "code": "def check(a):\n  for i in range(int(len(a)/2)):\n    if a[i]!=a[-(i+1)]:\n       return False\n  return True\nS = \"atcoder\"\nif check(S):\n  a=S[0:int(len(S)/2)]\n  b=S[int(len(S)/2)+1:len(S)]\n  if check(a) and check(b):\n    print('Yes')\n  else:\n    print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "16058": {"id": 16058, "code": "def main():\n    a = 12;b = 4\n    if a < b * 2:\n        print(0)\n    else:\n        print(a - b * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "9662": {"id": 9662, "code": "def Level(S):\n    A=[0]\n    for i in range(len(S)):\n        if S[i]==\"(\":\n            A.append(A[-1]+1)\n        else:\n            A.append(A[-1]-1)\n    return A\nN = 8\nS = \"))))((((\"\nA=Level(S)\nX=-min(A)\nT=\"(\"*X+S\nB=Level(T)\nY=B[-1]\nU=T+\")\"*Y\nprint(U)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15120": {"id": 15120, "code": "import collections\ndef nCk(n, k):\n    k = min(k, n-k)\n    numer = 1\n    for i in range(n, n-k, -1):\n        numer *= i\n    denom = 1\n    for i in range(k, 1, -1):\n        denom *= i\n    return numer // denom\ndef main():\n    N = 2;P = 0\n    A = [1, 3]\n    B = [x%2 for x in A]\n    Bcount = collections.Counter(B)\n    if Bcount[1] == 0 and P == 1:\n        print(0)\n        return\n    ans = 0\n    if P == 0:\n        tmp = pow(2, Bcount[0])\n        for i in range(0, Bcount[1]+1, 2):\n            ans += tmp * nCk(Bcount[1], i)\n        print(ans)\n        return\n    else:\n        tmp = pow(2, Bcount[0])\n        for i in range(1, Bcount[1]+1, 2):\n            ans += tmp * nCk(Bcount[1], i)\n        print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "10330": {"id": 10330, "code": "A = 100;B = 50;K = 4\ndef divisor(n):\n    div_list = []\n    for i in range(1, int(1+ n**0.5)):\n        if n%i == 0 and i**2 == n:\n            div_list.append(i)\n        elif n%i == 0:\n            div_list.append(i)\n            div_list.append(int(n/i))\n    return div_list\nlnA = divisor(A)\nlnB = divisor(B)\nln = []\nfor i in lnA:\n    if i in lnB:\n        ln.append(i)\nline = sorted(ln, reverse = True)\nprint(line[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1261": {"id": 1261, "code": "import sys\ndef input(): return \"111\".strip()\ndef resolve():\n    n = 111\n    while True:\n        if str(n)[0] == str(n)[1] == str(n)[2]:\n            print(n)\n            break\n        n+=1\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "2422": {"id": 2422, "code": "import math\ndef calc_combi(n,m):\n    if n<=1:\n        return 0\n    return math.factorial(n)/(math.factorial(m)*(math.factorial(n-m)))\nn = 13;m = 3\nans=int(calc_combi(n,2)+calc_combi(m,2))\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">"]}, "5417": {"id": 5417, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 2\n    print(N//2+1) if N % 2 else print(N//2)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10851": {"id": 10851, "code": "s = \"akasaka\"\nn = len(s)\ndef f(s):\n    return s == s[::-1]\nif f(s) and f(s[:(n-1)//2]) and f(s[(n+3)//2-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "98": {"id": 98, "code": "def solve():\n    S = \"a\"\n    l = len(S)\n    K = 25\n    i = 0\n    ans = ''\n    while i < l-1 and K>0:\n        n = ord(S[i])-ord('a')\n        if n==0:\n            ans += 'a'\n            i += 1\n            continue\n        if 25-n<K:\n            ans += 'a'\n            K -= 26-n\n        else:\n            ans += S[i]\n        i += 1\n    if K == 0:\n        ans += S[i:]\n    else:\n        ans += chr((ord(S[-1])-ord('a')+K)%26+ord('a'))\n    return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "12309": {"id": 12309, "code": "S = \"level\"\nsize=len(S)\ndef palin(S,size):\n    for i  in range (size//2):\n        if S[i]!=S[-1-i]:\n            return False\n    return True\nif palin(S,size) == True:\n    L=S[:size//2]\n    R=S[size//2+2:]\n    if palin(L,size//2) & palin(L,size//2):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]}, "8682": {"id": 8682, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 1\n    A = [2]\n    B = [3]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17861": {"id": 17861, "code": "S = \"1700\"\nf = int(S[0]+S[1])\nb = int(S[2]+S[3])\ndef judge(int):\n    if 1 <= int <= 12:\n        return 0\n    else:\n        return 1\nref = [judge(f), judge(b)]\nif ref == [1, 1]:\n    print(\"NA\")\nelif ref == [0, 1]:\n    print(\"MMYY\")\nelif ref == [1, 0]:\n    print(\"YYMM\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3382": {"id": 3382, "code": "def main():\n    n = 12;k = 4\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "5564": {"id": 5564, "code": "import sys\ndef main():\n    n = 2\n    if n%2==0:\n        print(n//2)\n    else:\n        print(n//2+1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5027": {"id": 5027, "code": "import sys\ndef LS2(): \n    return list(\"smiles\".rstrip())  \ns = LS2()\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">", ">", ">", ">"]}, "16581": {"id": 16581, "code": "import sys\ndef IS(): return \"H H\".rstrip()\ndef II(): return int(IS())\ndef MII(): return list(map(int, IS().split()))\ndef MIIZ(): return list(map(lambda x: x-1, MII()))\ndef main():\n    a,b = IS().split()\n    if a == 'H':\n        print(b)\n    elif a == 'D':\n        if b == 'H':\n            print('D')\n        elif b == 'D':\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "10580": {"id": 10580, "code": "def resolve():\n    A = 100;B = 50;K = 4\n    mx = min(A, B)\n    ans = []\n    for i in range(1, mx+1):\n        if A % i == 0 and B % i == 0:\n            ans.append(i)\n    print(ans[-K])\n    return\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16603": {"id": 16603, "code": "def main():\n    a = \"D\";b = \"H\"\n    if a == \"H\" and b == \"H\":\n        ans = 'H'\n    elif a == 'D' and b == 'H':\n        ans = 'D'\n    elif a == \"D\" and b == \"D\":\n        ans = \"H\"\n    else:\n        ans = \"D\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "6378": {"id": 6378, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    N = 6\n    A = [3, 14, 159, 2, 6, 53]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2643, 383, 2, 79, 50, 288]\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        tmpa = bisect.bisect_left(A, b)\n        tmpc = N - bisect.bisect_right(C, b)\n        ans += tmpa*tmpc\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16817": {"id": 16817, "code": "def main():\n  string = ['D', 'D']\n  if string[0]=='H':\n    print(string[1])\n  else:\n    if string[1]=='H':\n      print('D')\n    else:\n      print('H')\nmain()", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]}, "2945": {"id": 2945, "code": "def main():\n    s = \"1111111111\"\n    n = len(s)\n    ans = 100000000\n    for i in range(2, n):\n        t = int(s[i - 2: i+1])\n        ans = min(ans, abs(753 - t))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8258": {"id": 8258, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 3;K = 3\n    A = [1, 2, 3]\n    ans = 0\n    for x in range(1, N+1):\n        if (K-1)*x + 1 >= N:\n            ans = x\n            break\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10765": {"id": 10765, "code": "S = \"akasaka\"\ndef is_kaibun(s):\n    return s[:len(s)//2] == s[:(len(s)-1)//2:-1]\nflg = is_kaibun(S) and is_kaibun(S[:len(S)//2]) and is_kaibun(S[:len(S)//2:-1])\nprint('Yes' if flg else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "14804": {"id": 14804, "code": "import sys\nimport math\nN = 3;P = 0\nA = map(int, \"1 1 1\".strip().split())\ndef nCr(n, r):\n    return math.factorial(n) // math.factorial(n - r) // math.factorial(r)\nevens = 0\nodds = 0\nfor a_i in A:\n    if a_i % 2 == 0:\n        evens += 1\n    else:\n        odds += 1\nif P == 0:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(0, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nelse:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(1, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "11190": {"id": 11190, "code": "def check(str):\n    str2 = str[::-1]\n    return str == str2\ndef main():\n    s = \"level\"\n    n = len(s)\n    first = s[:(n-1)//2]\n    end = s[((n+3)//2)-1:]\n    if all((check(s), check(first), check(end))):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14050": {"id": 14050, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    b = [a[0]]\n    for i in a:\n        if b[-1] == i:\n            continue\n        b.append(i)\n    res = 1\n    if len(b) <= 2:\n        print(res)\n    else:\n        i = 1\n        while i <= len(b)-2:\n            if b[i] == max(b[i-1], b[i], b[i+1]) or b[i] == min(b[i-1], b[i], b[i+1]):\n                res += 1\n                i += 1\n            i += 1\n        print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8071": {"id": 8071, "code": "import sys\ndef main():\n    N = 8;K = 3\n    a = [7, 3, 1, 8, 4, 6, 2, 5]\n    answer = 0\n    for i in range(N):\n        if K + (i-1)*(K-1) >= N:\n            answer = i\n            break\n    print(answer)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14175": {"id": 14175, "code": "def sign(x):\n    return (x > 0) - (x < 0)\ndef main():\n    _ = int(\"7\")\n    a = map(int, \"1 2 3 2 1 999999999 1000000000\".split())\n    ans = []\n    arr = []\n    state = 0\n    for an in a:\n        if len(arr) < 2:\n            arr.append(an)\n        else:\n            state += (arr[-1] - arr[-2])\n            if state == 0:\n                arr.append(an)\n            else:\n                current = an - arr[-1]\n                if current == 0 or sign(state) == sign(current):\n                    arr.append(an)\n                else:\n                    ans.append(arr)\n                    arr = [an]\n                    state = 0\n    ans.append(arr)\n    print(len(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "7998": {"id": 7998, "code": "def main():\n    n = 3;k = 3\n    As = [1, 2, 3]\n    ans = (n-2) // (k-1) + 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15037": {"id": 15037, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\no, e = 0, 0\nfor i in A:\n    if i % 2 == 0:\n        e += 1\n    else:\n        o += 1\nans = 0\nfor i in range(P, o+1, 2):\n    ans += comb(o, i)\nprint(ans * 2 ** e)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14208": {"id": 14208, "code": "import sys\ninput = sys.stdin.readline\ndef read():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    return N, A\ndef solve(N, A):\n    B = [A[0]]\n    prev = A[0]\n    for a in A:\n        if prev != a:\n            B.append(a)\n            prev = a\n    count = 1\n    up = False\n    down = False\n    for i in range(1, len(B)):\n        if not up and not down:\n            if B[i-1] < B[i]:\n                up = True\n            else:\n                down = True\n        elif up and B[i-1] > B[i]:\n            up = False\n            count += 1\n        elif down and B[i-1] < B[i]:\n            down = False\n            count += 1\n    return count\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2445": {"id": 2445, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 13;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">"]}, "16602": {"id": 16602, "code": "def main():\n    a = \"H\";b = \"H\"\n    if a == \"H\" and b == \"H\":\n        ans = 'H'\n    elif a == 'D' and b == 'H':\n        ans = 'D'\n    elif a == \"D\" and b == \"D\":\n        ans = \"H\"\n    else:\n        ans = \"D\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "15361": {"id": 15361, "code": "import sys\nfrom itertools import accumulate\ndef input(): return \"64145 123 456\".strip()\ndef main():\n    x = 64145;y = 123;z = 456\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16133": {"id": 16133, "code": "import sys\na = 20;b = 30\ndef main():\n    r = max(0, a - b * 2)\n    print(r)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11602": {"id": 11602, "code": "def main():\n s = \"SAT\"\n if s == 'SUN':\n     print(7)\n elif s == 'MON':\n     print(6)\n elif s == 'TUE':\n     print(5)\n elif s == 'WED':\n     print(4)\n elif s == 'THU':\n     print(3)\n elif s == 'FRI':\n     print(2)\n else:\n     print(1)\nmain()", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "10804": {"id": 10804, "code": "def kaibun(moji):\n    n = len(moji)\n    for i in range(0,int(n/2)):\n        if s[i]!=s[n-1-i]:\n            return False\n    return True\ns = \"atcoder\"\nn = len(s)\nmoji1 = int((n - 1) / 2)\nmoji2 = int((n + 3) / 2)\nif kaibun(s) and kaibun(s[:moji1]) and kaibun(s[moji2-1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9958": {"id": 9958, "code": "import sys\ndef I(): return int(\"6\".rstrip())\ndef LS2(): return list(\")))())\".rstrip())  \nN = I()\nS = LS2()\na,b = 0,0\nleft = []\nfor i in range(N):\n    if S[i] == '(':\n        a += 1\n    else:\n        b += 1\n    if a < b:\n        a,b = 0,0\n        left.append('(')\nANS = left + S + [')']*(a-b)\nprint(''.join(ANS))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "12176": {"id": 12176, "code": "def main():\n  M1 = 11;D1 = 30\n  M2 = 12;D2 = 1\n  print(0) if M1 == M2 else print(1)\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "588": {"id": 588, "code": "def main():\n    s = \"xyz\"\n    k = 4\n    for i in range(len(s)):\n        x = ord(\"z\") - ord(s[i]) + 1\n        if k >= x and x != 26:\n            k -= x\n            s = s[:i] + \"a\" + s[i+1:]\n        if i == len(s)-1:\n            s = s[:i] + (chr(ord(s[i]) + (k%26)))\n    print(s)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17376": {"id": 17376, "code": "import math\ndef isMM(num):\n    if num < 13 and num > 0:\n        return True\n    else:\n        return False\ndef hantei(number):\n    num = math.floor(number/100)\n    ber = number % 100\n    if isMM(num) is False and isMM(ber) is False:\n        return \"NA\"\n    elif isMM(num) is True and isMM(ber) is True:\n        return \"AMBIGUOUS\"\n    elif isMM(num) is True and isMM(ber) is False:\n        return \"MMYY\"\n    else:\n        return \"YYMM\"\nnum = 1905\nprint(hantei(num))", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "18500": {"id": 18500, "code": "def main():\n    H = 3\n    W = 7\n    N = 10\n    c_row = 0\n    c_col = 0\n    ans = 0\n    while True:\n        if N <= 0:\n            print(ans)\n            break\n        else:\n            if W - c_col <= H - c_row:\n                N -=  H - c_row\n                c_col += 1\n                ans += 1\n            else:\n                N -=  W - c_col\n                c_row += 1\n                ans += 1\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14796": {"id": 14796, "code": "n = 2;p = 0\na = [1, 1]\nnCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\noishii = a.count(1)\nc = sum([cmb(oishii,i) for i in range(p,oishii+1,2)])\nprint(c*2**(n-oishii))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "4135": {"id": 4135, "code": "def solve(h1, m1, h2, m2, k):\n    return (h2-h1)*60 + (m2-m1) - k\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nprint(solve(h1, m1, h2, m2, k))", "coverage": [">", ">", ">", ">"]}, "14109": {"id": 14109, "code": "def resolve():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    result = 0\n    while len(A) > 1:\n        flag = False\n        for i in range(1, len(A)):\n            if A[0] == A[i]:\n                continue\n            elif A[0] < A[i]:\n                j = i\n                while A[j-1] <= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            elif A[0] > A[i]:\n                j = i\n                while A[j-1] >= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            if flag == True:\n                break\n    else:\n        if len(A) == 1:\n            result += 1\n    print(result)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">", "!", ">", ">"]}, "12249": {"id": 12249, "code": "s = \"akasaka\"\nn = len(s)\nflag = False\ndef palind(S):\n    size = len(S)\n    for i in range(size//2):\n        if S[i] != S[-1-i]:\n            return False\n    return True\nif palind(s):\n    m = (n-1)//2\n    sb = s[:m]\n    if palind(sb):\n        sa = s[m+1:]\n        flag = palind(sa)\nprint(\"Yes\" if flag else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5202": {"id": 5202, "code": "url = \"https://atcoder.jp//contests/abc069/tasks/abc069_b\"\ndef main():\n    st = \"xyz\"\n    ans = st[0] + str(len(st[1:-1])) + st[-1]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7012": {"id": 7012, "code": "def main():\n    h = 20;n = 3\n    a = [4, 5, 6]\n    if h > sum(a):\n        print('No')\n    else:\n        print('Yes')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19006": {"id": 19006, "code": "def calculate(n):\n    if n % 2 == 1:\n        return 0\n    s1 = n // 10\n    index = 1\n    s2 = 0\n    while (5 ** index) <= s1:\n        s2 += (s1 // (5 ** index))\n        index += 1\n    return s1 + s2\nprint(calculate(int(\"12\")))", "coverage": [">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14793": {"id": 14793, "code": "n = 2;p = 0\na = [1, 3]\nodd=0\neven=0\nnCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\no_pattern=0\nfor i in range(p,odd+1,2):\n    o_pattern += cmb(odd,i)\ne_pattern=0\nfor i in range(even+1):\n    e_pattern += cmb(even,i)\nprint(o_pattern*e_pattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12474": {"id": 12474, "code": "def isPalindrome(st):\n    l = len(st)\n    c = l//2\n    if l%2 == 1:\n        return st[:c] == st[c+1:][::-1]\n    else:\n        return st[:c] == st[c:][::-1]\nS = \"atcoder\"\nN = len(S)\nif isPalindrome(S) and isPalindrome(S[:(N-1)//2]) and isPalindrome(S[(N+3)//2 - 1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "19030": {"id": 19030, "code": "def solve(N: int):\n    if N % 2 == 0:\n        N = N // 2\n        answer = 0\n        div = 5\n        while N >= div:\n            answer += N // div\n            div *= 5\n        return answer\n    else:\n        return 0\n    return answer\ndef main():\n    N = 5\n    answer = solve(N)\n    print(answer)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "16378": {"id": 16378, "code": "def resolve():\n    N = 2\n    A = [0, 100]\n    n = A[-1]\n    import bisect\n    idx = bisect.bisect_left(A, n//2)\n    candidates = []\n    if idx < N:\n        candidates.append(A[idx])\n    if idx > 0:\n        candidates.append(A[idx-1])\n    if abs(n/2 - candidates[0]) < abs(n/2 - candidates[1]):\n        print(n, candidates[0])\n    else:\n        print(n, candidates[1])       \nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2007": {"id": 2007, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"10 7 5\".strip()\ndef resolve():\n    n = 10;a = 7;b = 5\n    l=min(a,b)\n    if n>a+b:\n        r=0\n    else:\n        r=a+b-n\n    print(l,r)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "9106": {"id": 9106, "code": "def resolve():\n  s = \"2017/01/07\"\n  s = s.replace('2017', '2018')\n  print(s)\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15359": {"id": 15359, "code": "import sys\nfrom itertools import accumulate\ndef input(): return \"100000 1 1\".strip()\ndef main():\n    x = 100000;y = 1;z = 1\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16899": {"id": 16899, "code": "def resolve():\n    A = \"H\";B = \"H\"\n    print(\"H\" if (A==\"H\" and B==\"H\") or (A==\"D\" and B==\"D\") else \"D\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "18667": {"id": 18667, "code": "import math\nfrom collections import deque\ndef main():\n    h = 2\n    w = 100\n    n = 200\n    times = n//max([h,w])+(0 if n%max([h,w])==0 else 1)\n    print(times)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "326": {"id": 326, "code": "def solve():\n    s = ['x', 'y', 'z']\n    K = 4\n    for i in range(len(s)):\n        distToA = (ord('z')+1 - ord(s[i])) % 26\n        if distToA <= K:\n            s[i] = 'a'\n            K -= distToA\n    else:\n        s[-1] = chr(ord(s[-1]) + K%26)\n    print(\"\".join(s))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "19397": {"id": 19397, "code": "import sys\ndef solve():\n    input = sys.stdin.readline\n    N = 3\n    print(N if N % 2 == 0 else 2 * N)\n    return  0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3172": {"id": 3172, "code": "def resolve():\n    N = \"35753\"\n    minA = 10**5\n    for i in range(len(N) - 2):\n        minA = min(minA, abs(753 - int(N[i:i + 3])))\n    print(minA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14694": {"id": 14694, "code": "from math import factorial\ndef comb(n,r):\n    return factorial(n) // (factorial(n-r) * factorial(r))\ndef main():\n    N = 1;P = 1\n    A = [50]\n    even,odd = 0,0\n    for i in range(N):\n        if A[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    a,b = 0,0\n    b = 2**even\n    for i in range(odd+1):\n        if i % 2 == P:\n            a += comb(odd,i)\n    print(a*b)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "5185": {"id": 5185, "code": "def actual(s):\n    head = s[0]\n    tail = s[-1]\n    length = len(s[1:-1])\n    return f'{head}{length}{tail}'\ns = \"internationalization\"\nprint(actual(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10636": {"id": 10636, "code": "def cf(x1,x2):\n    cf=[]\n    for i in range(1,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nimport sys\ninput = sys.stdin.readline  \nA = 8;B = 12;K = 2\ndiv =cf(A,B)\nprint(div[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5240": {"id": 5240, "code": "def main():\n    s = ['s', 'm', 'i', 'l', 'e', 's']\n    start, end = s[0], s[-1]\n    midle = len(s[1:-1])\n    print(\"{}{}{}\".format(start, midle, end))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18898": {"id": 18898, "code": "def resolve():\n  N = 5\n  if N%2:\n    print(0)\n    return True\n  multiplier = 10\n  result = 0\n  while multiplier <= N:\n    result += N // multiplier\n    multiplier *= 5\n  print(result)\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "17860": {"id": 17860, "code": "S = \"0112\"\nf = int(S[0]+S[1])\nb = int(S[2]+S[3])\ndef judge(int):\n    if 1 <= int <= 12:\n        return 0\n    else:\n        return 1\nref = [judge(f), judge(b)]\nif ref == [1, 1]:\n    print(\"NA\")\nelif ref == [0, 1]:\n    print(\"MMYY\")\nelif ref == [1, 0]:\n    print(\"YYMM\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "3143": {"id": 3143, "code": "import sys\ninput=sys.stdin.readline\ndef main():\n    S = \"1111111111\"\n    mind=643\n    for i in range(len(S)-2):\n        mind=min(mind,abs(int(S[i:i+3])-753))\n    print(mind)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11008": {"id": 11008, "code": "S = \"atcoder\"\nN = len(S)\ndef kaibun(s):\n    n = len(s)\n    f_kaibun = True\n    for i in range(int(n/2)):\n        j = n-1-i\n        if j <= i:\n            break\n        if s[i] != s[j]:\n            f_kaibun = False\n            break\n    return f_kaibun\nif kaibun(S) and kaibun(S[0:int(round((N-1)/2))]) and kaibun(S[int(round((N+3)/2))-1:N]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15210": {"id": 15210, "code": "X = 64146;Y = 123;Z = 456\ndef is_ok(key):\n    if key * Y + (key + 1) * Z <= X:\n        return True\n    else:\n        return False\ndef binary_search():\n    ok = 0\n    ng = 3000001\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\nprint(binary_search())", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "16684": {"id": 16684, "code": "def main():\n    a = \"D\";b = \"H\"\n    if a == \"H\" and b == \"H\":\n        print(\"H\")\n    elif a == \"D\" and b == \"D\":\n        print(\"H\")\n    else:\n        print(\"D\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "8362": {"id": 8362, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 7\n  U = [3, 3, 4, 5, 4, 5, 3]\n  L = [5, 3, 4, 4, 2, 3, 2]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1324": {"id": 1324, "code": "def resolve():\n    cands = [111,222,333,444,555,666,777,888,999]\n    N = 111\n    import bisect\n    print(cands[bisect.bisect_left(cands, N)])\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19223": {"id": 19223, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    n = 12\n    if n % 2 == 1:\n        print(0)\n    else:\n        n = n // 2\n        num = 0\n        for i in range(1, 100):\n            num += n // (5 ** i)\n        print(num)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "18115": {"id": 18115, "code": "def is_month(x):\n  if 1 <= x <= 12:\n    return True\n  else:\n    return False\nS = \"1700\"\nfirst, latter = is_month(int(S[:2])), is_month(int(S[2:]))\nif first and latter:\n  ans = \"AMBIGUOUS\"\nelif not first and not latter:\n  ans = \"NA\"\nelif first:\n  ans = \"MMYY\"\nelse:\n  ans = \"YYMM\"\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "5239": {"id": 5239, "code": "def main():\n    s = ['i', 'n', 't', 'e', 'r', 'n', 'a', 't', 'i', 'o', 'n', 'a', 'l', 'i', 'z', 'a', 't', 'i', 'o', 'n']\n    start, end = s[0], s[-1]\n    midle = len(s[1:-1])\n    print(\"{}{}{}\".format(start, midle, end))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11128": {"id": 11128, "code": "S = \"level\"\nN=len(S)\ndef isPalindrome(s):\n  n = len(s)\n  flag=True\n  slist=list(s)\n  for i, c in enumerate(slist):\n    if c!=slist[n-1-i]:\n      flag=False\n    if i > n-i:\n      break\n  return flag\nSlist=list(S)\nif isPalindrome(S) and   isPalindrome(Slist[0:int((N-1)/2)]) and   isPalindrome(Slist[int((N+3)/2)-1:N]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9350": {"id": 9350, "code": "def main():\n   s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\n   s[:4] = ['2','0','1','8']\n   print(''.join(s))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "15307": {"id": 15307, "code": "def main():\n    X = 64145;Y = 123;Z = 456\n    print((X-Z)//(Y+Z))\nmain()", "coverage": [">", ">", ">", ">"]}, "10579": {"id": 10579, "code": "def resolve():\n    A = 8;B = 12;K = 2\n    mx = min(A, B)\n    ans = []\n    for i in range(1, mx+1):\n        if A % i == 0 and B % i == 0:\n            ans.append(i)\n    print(ans[-K])\n    return\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3175": {"id": 3175, "code": "def main():\n    S = \"35753\"\n    t = 0\n    diff = 0\n    near = 10000\n    for i in range(2, len(S)):\n        t = int(S[i-2]) * 100 + int(S[i-1]) * 10 + int(S[i])\n        if 753 < t:\n            diff = t - 753\n        else:\n            diff = 753 - t\n        if near > diff:\n            near = diff\n    print(near) \nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "12783": {"id": 12783, "code": "def main():\n    X = 6\n    print(\"YES\" if X in {7, 5, 3} else \"NO\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "2594": {"id": 2594, "code": "def main():\n    N = {1, 2, 9}\n    print(\"YES\" if N == {1, 4, 7, 9} else \"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "17440": {"id": 17440, "code": "def check_month(month):\n    return 1 <= int(month) <= 12\nS = \"0112\"\nls = S[:2]\nrs = S[2:]\nif check_month(ls) and check_month(rs):\n    print('AMBIGUOUS')\nelif check_month(ls) and not check_month(rs):\n    print('MMYY')\nelif not check_month(ls) and check_month(rs):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "363": {"id": 363, "code": "S = \"xyz\"\nK = 4\ndef ctoi(c):\n    return ord(c) - ord('a')\ndef toa(c):\n    i = ctoi(c)\n    return (26-i)%26\nans = ''\nfor c in S:\n    if len(ans)+1 == len(S):\n        ans += chr((ctoi(c) + K)%26 + ord('a'))\n    else:\n        to = toa(c)\n        if to <= K:\n            ans += 'a'\n            K -= to\n        else:\n            ans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "1927": {"id": 1927, "code": "def main():\n    N = 10;A = 3;B = 5\n    mx = min(A,B)\n    mi = max((A + B) - N,0)\n    print(mx,mi)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2407": {"id": 2407, "code": "n = 13;m = 3\ndef f(x):\n  return x*(x-1)//2\nprint(f(n) + f(m))", "coverage": [">", ">", ">", ">"]}, "14956": {"id": 14956, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import Counter \ndef read():\n    N = 1;P = 1\n    A = [50]\n    return N, P, A\ndef binom_64bit(n):\n    c = [1 for i in range(n+1)]\n    for k in range(1, n):\n        c[k] = c[k-1] * (n-k+1) // k\n    return c\ndef solve(N, P, A):\n    B = Counter([a % 2 for a in A])\n    C0 = binom_64bit(B[0])\n    C1 = binom_64bit(B[1])\n    ans = 0\n    if P == 1:\n        for i in range(0, B[0]+1):\n            for j in range(1, B[1]+1, 2):\n                ans += C0[i] * C1[j]\n    else:\n        for i in range(0, B[0]+1):\n            for j in range(0, B[1]+1, 2):\n                ans += C0[i] * C1[j]\n    return ans\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "6988": {"id": 6988, "code": "H = 20;N = 3\nA = [4, 5, 6]\ndef battle(a,n):\n  ans = 0\n  for i in range(n):\n    ans += a[i]\n  return ans\nif H <= battle(A,N):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15701": {"id": 15701, "code": "def isu(x , y , z):\n    ans = (x - z) // (y + z)\n    return ans\ndef main():\n    x = 100000;y = 1;z = 1\n    print(isu(x , y , z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18908": {"id": 18908, "code": "import sys\ndef input(): return \"12\".rstrip()\ndef main():\n    n = 12\n    if n%2==1:\n        print(0)\n    else:\n        m=n//2\n        ans=0\n        for i in range(1,30):\n            ans+=m//(5**i)\n        print(ans)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "12782": {"id": 12782, "code": "def main():\n    X = 5\n    print(\"YES\" if X in {7, 5, 3} else \"NO\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "10991": {"id": 10991, "code": "S = \"akasaka\"\nlength = len(S)\ndef check_palin(s):\n    num = len(s)\n    for i in range(num // 2):\n        if s[i] != s[num - i - 1]:\n            return False\n    return True\nfirst = S[:(length - 1) // 2]\nsecond = S[(length + 1) // 2:]\nif check_palin(S) and check_palin(first) and check_palin(second):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "9342": {"id": 9342, "code": "def main():\n    S = \"2017/01/07\"\n    S = S.replace('2017','2018')\n    print(S)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10737": {"id": 10737, "code": "S = \"level\"\nN = len(S)\ndef palindrome(string):\n  return 0 if string==string[::-1] else 1\nls1 = S[0:int((N-1)/2)]\nls2 = S[int((N+3)/2-1):N]\nif palindrome(S) == palindrome(ls1) == palindrome(ls2) == 0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "7771": {"id": 7771, "code": "import math\ndef main():\n    n = 8;k = 3\n    As = [7, 3, 1, 8, 4, 6, 2, 5]\n    ans = math.ceil((n-1)/(k-1))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12337": {"id": 12337, "code": "S = \"atcoder\"\ndef iskai(s):\n  result=False\n  if s == s[::-1]:\n    result=True\n  return(result)\nans = 'No'\nhf = len(S)//2 + 1\nif iskai(S) and iskai(S[:hf-1]) and iskai(S[hf:]):\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">"]}, "5469": {"id": 5469, "code": "def solve():\n    N = 100\n    print((N+1)//2)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "10329": {"id": 10329, "code": "A = 8;B = 12;K = 2\ndef divisor(n):\n    div_list = []\n    for i in range(1, int(1+ n**0.5)):\n        if n%i == 0 and i**2 == n:\n            div_list.append(i)\n        elif n%i == 0:\n            div_list.append(i)\n            div_list.append(int(n/i))\n    return div_list\nlnA = divisor(A)\nlnB = divisor(B)\nln = []\nfor i in lnA:\n    if i in lnB:\n        ln.append(i)\nline = sorted(ln, reverse = True)\nprint(line[K - 1])", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14448": {"id": 14448, "code": "import sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial\ndef solve():\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    b = []\n    p = 0\n    for e in a:\n        if p != e:\n            b.append(e)\n        p = e\n    a = b\n    n = len(b)\n    ans = 0\n    i = 0\n    while i < n:\n        ans += 1\n        if i + 1 == n: break\n        else:\n            if a[i] < a[i+1]:\n                while i + 1 < n and a[i] < a[i+1]:\n                    i += 1\n                i += 1\n            else:\n                while i + 1 < n and a[i] > a[i+1]:\n                    i += 1\n                i += 1\n    print(ans)\nt = 1\nfor case in range(1,t+1):\n    ans = solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "18810": {"id": 18810, "code": "H = 2\nW = 100\nN = 200\ndef paint(H,W,N):\n    large = max(H,W)\n    if N/large == int(N/large):\n        return int(N/large)\n    else:\n        return int (N/large)+1\nprint(paint(H,W,N))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9768": {"id": 9768, "code": "def hoge(S):\n    cum = 0\n    mi = 0\n    for s in S:\n        cum += 1 if s == '(' else -1\n        mi = min(mi, cum)\n    return (-mi, cum - mi)\nN = 8\nS = \"))))((((\"\nl, r = hoge(S)\nprint('(' * l + S + ')' * r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17378": {"id": 17378, "code": "import math\ndef isMM(num):\n    if num < 13 and num > 0:\n        return True\n    else:\n        return False\ndef hantei(number):\n    num = math.floor(number/100)\n    ber = number % 100\n    if isMM(num) is False and isMM(ber) is False:\n        return \"NA\"\n    elif isMM(num) is True and isMM(ber) is True:\n        return \"AMBIGUOUS\"\n    elif isMM(num) is True and isMM(ber) is False:\n        return \"MMYY\"\n    else:\n        return \"YYMM\"\nnum = 1700\nprint(hantei(num))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "7840": {"id": 7840, "code": "def solve():\n    N = 8;K = 3\n    Ax = [7, 3, 1, 8, 4, 6, 2, 5]\n    if N == K:\n        print(1)\n        exit()\n    N -= K\n    ans = 1\n    while N > 0:\n        N = N-(K-1)\n        ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9968": {"id": 9968, "code": "N = 6\nS = ')))())'\nN = 3\nS = \"())\"\ndef calculate(n, str):\n    finalStr = ''\n    while True:\n        point = 0\n        remainStr = ''\n        for i in range(len(str)):\n            if i > 0:\n                if (str[i-1] == '(') and (str[i] == ')'):\n                    point += 1\n                    continue\n            if i < (n - 1):\n                if (str[i] == '(') and (str[i+1] == ')'):\n                    point += 1\n                    continue\n            remainStr += str[i]\n        str = remainStr\n        n = len(str)\n        if point == 0:\n            finalStr = remainStr\n            return finalStr\n            break\nres = calculate(N, S)\nfor i in range(len(res)):\n    if res[i] == '(':\n        S = S + ')'\n    if res[i] == ')':\n        S = '(' + S\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">"]}, "2160": {"id": 2160, "code": "def main():\n    n = 100;a = 100;b = 100\n    ans_max = min(a, b)\n    if n >= a + b:\n        ans_min = 0\n    else:\n        ans_min = (a + b) - n\n    print(str(ans_max) + \" \" + str(ans_min))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3671": {"id": 3671, "code": "def main():\n    a = 20;b = 30\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "7804": {"id": 7804, "code": "def main():\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    ans = 1\n    N -= K\n    if N % (K-1) == 0:\n        ans += N // (K-1)\n    else:\n        ans += N // (K-1) + 1\n    return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "1430": {"id": 1430, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 111\n    for i in range(1, 10):\n        if N <= 111 * i:\n            ans = 111 * i\n            break\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14946": {"id": 14946, "code": "n = 1;p = 1\na = [50]\nos = list(filter(lambda x: x % 2 == 1, a))\nes = list(filter(lambda x: x % 2 == 0, a))\ndef calc_even(o_num, e_num):\n    if o_num < 0 or e_num < 0:\n        return 0\n    res = 1\n    tmp = 1\n    for i in range(1, o_num // 2 + 1):\n        tmp *= (o_num - i * 2 + 2) * (o_num - i * 2 + 1)\n        tmp /= 2 * i * (2 * i - 1)\n        res += tmp\n    res *= 2 ** e_num\n    return res\ndef calc_odd(o_num, e_num):\n    if o_num < 0 or e_num < 0:\n        return 0\n    tmp = o_num\n    res = tmp\n    end = o_num if o_num % 2 == 1 else o_num-1\n    for i in range(1, end // 2 + 1):\n        tmp *= (o_num - i * 2 + 1) * (o_num - i * 2)\n        tmp /= 2 * i * (2 * i + 1)\n        res += tmp\n    res *= 2 ** e_num\n    return res\nif p == 0:\n    res = calc_even(len(os), len(es))\n    print(int(res))\nelse:\n    res = calc_odd(len(os), len(es))\n    print(int(res))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "18705": {"id": 18705, "code": "def main():\n    h = 2\n    w = 100\n    n = 200\n    a = max(h, w)\n    print((n + a - 1) // a)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14791": {"id": 14791, "code": "N = 1;P = 1\nA = [50]\ndef comb(n, k):\n  ret = 1\n  for i in range(1, k+1):\n    ret = ret * (n+1-i) // i\n  return ret\nEven = 0\nOdd = 0\nfor a in A:\n  if a % 2 == 0:\n    Even += 1\n  else:\n    Odd += 1\nans = 0\nwhile P <= Odd:\n  ans += comb(Odd, P)\n  P += 2\nprint(ans * 2 ** Even)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "10965": {"id": 10965, "code": "S = \"atcoder\"\nN = len(S)\ndef isPalindrome(s):\n  n = len(s)\n  re_s = s[::-1]\n  for i in range(n // 2):\n    if re_s[i] != s[i]:\n      break\n  else:\n    return True\n  return False\nif isPalindrome(S) and isPalindrome(S[:N // 2]) and isPalindrome(S[(N + 1) // 2:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "4698": {"id": 4698, "code": "def reducestr(s) : \n  return s[0] + str(len(s[1 : len(s) - 1])) + s[-1]\ns = \"xyz\"\nprint(reducestr(s))", "coverage": [">", ">", ">", ">"]}, "8929": {"id": 8929, "code": "def solve():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12889": {"id": 12889, "code": "def main():\n    x = 6\n    answer = \"NO\"\n    if x in [7,5,3]:\n        answer = \"YES\"\n    print(answer)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "14818": {"id": 14818, "code": "from functools import lru_cache\n@lru_cache(maxsize=None)\ndef kaijou(n):\n    if n <= 1:\n        return 1\n    return kaijou(n-1)*n\nn = 1;p = 1\neven = 0\nodd = 0\nans = 0\nfor i in map(int,\"50\".split()):\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nif p == 0:\n    eveng = 0\n    for j in range(0,odd+1,2):\n        if j > odd:\n            break\n        eveng += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*eveng)\nelse:\n    oddg = 0\n    for j in range(1,odd+1,2):\n        if j > odd:\n            break\n        oddg += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*oddg)\nprint(ans)", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", ">", ">"]}, "364": {"id": 364, "code": "S = \"a\"\nK = 25\ndef ctoi(c):\n    return ord(c) - ord('a')\ndef toa(c):\n    i = ctoi(c)\n    return (26-i)%26\nans = ''\nfor c in S:\n    if len(ans)+1 == len(S):\n        ans += chr((ctoi(c) + K)%26 + ord('a'))\n    else:\n        to = toa(c)\n        if to <= K:\n            ans += 'a'\n            K -= to\n        else:\n            ans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13664": {"id": 13664, "code": "import sys\ndef II(): return int(\"5 4 2\")\ndef MI(): return map(int, \"2 1 1\".split())\ndef LI(): return list(map(int, \"3 3 4\".split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef solver(Width, Height, op_count, x_list, y_list, op_list):\n    result = 0\n    x_label_max = Width\n    x_label_min = 0\n    y_label_max = Height\n    y_label_min = 0\n    for j in range(0, op_count):\n        real_ope = op_list[j]\n        if real_ope == 1:\n            x_label_min = max(x_list[j], x_label_min)\n        if real_ope == 2:\n            x_label_max = min(x_list[j], x_label_max)\n        if real_ope == 3:\n            y_label_min = max(y_list[j], y_label_min)\n        if real_ope == 4:\n            y_label_max = min(y_list[j], y_label_max)\n    resultWidth = x_label_max - x_label_min\n    resultHeight = y_label_max - y_label_min\n    if resultWidth < 0:\n        resultWidth = 0\n    if resultHeight < 0:\n        resultHeight = 0\n    result = resultWidth * resultHeight\n    return result\nif __name__ == \"__main__\":\n    W, H, N = MI()\n    x_list = list()\n    y_list = list()\n    op_list = list()\n    for _ in range(0, N, +1):\n        tmp_x, tmp_y, tmp_op = MI()\n        x_list.append(tmp_x)\n        y_list.append(tmp_y)\n        op_list.append(tmp_op)\n    print(\"{}\".format(solver(W, H, N, x_list, y_list, op_list)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11012": {"id": 11012, "code": "def main():\n    S = \"level\"\n    N = len(S)\n    if S[:(N - 1) // 2] == S[(N + 3) // 2 - 1:]:\n        print('Yes')\n    else:\n        print('No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10382": {"id": 10382, "code": "def mapt(fn, *args):\n    return tuple(map(fn, *args))\ndef Input():\n    return mapt(int, \"100 50 4\".split(\" \"))\ndef gcd(a, b):\n    if b == 0: return a\n    return gcd(b, a % b)\ndef main():\n    a, b, k = Input()\n    k -= 1\n    data = sorted((i for i in range(1, gcd(a, b)+1)\n                   if a % i == 0 and b % i == 0), reverse=True)\n    print(data[k])\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12370": {"id": 12370, "code": "s = \"akasaka\"\nn=len(s)\ndef f(s):\n    m=len(s)\n    for i in range(-(-m//2)):\n        if s[i]!=s[-1-i]:\n            return False\n    return True\nif f(s) and f(s[:(n-1)//2]) and f(s[((n+3)//2)-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "3715": {"id": 3715, "code": "def main():\n    A = 20;B = 15\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6572": {"id": 6572, "code": "def slove():\n    import sys\n    import bisect\n    input = sys.stdin.readline\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    b.sort()\n    c.sort()\n    t = 0\n    for v in b:\n        an = bisect.bisect_left(a, v)\n        cn = n - bisect.bisect_right(c, v)\n        t += (an * cn)\n    print(t)\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15478": {"id": 15478, "code": "def solve(x, y, z):\n    tmp = x - z\n    ans = tmp // (y + z)\n    return ans\nif __name__ == \"__main__\":\n    x = 13;y = 3;z = 1\n    print(solve(x,y,z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3050": {"id": 3050, "code": "def answer(s: str) -> int:\n    return min(abs(753 - int(s[i:i + 3])) for i in range(len(s) - 2))\ndef main():\n    s = \"35753\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11584": {"id": 11584, "code": "def main():\n    day = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n    s = \"SAT\"\n    ans = 7 - day.index(s)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15835": {"id": 15835, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    X = 12;Y = 3;Z = 1\n    ans = (X - Z) // (Y + Z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6863": {"id": 6863, "code": "def common_raccoon_vs_monster():\n    H = 210;N = 5\n    A = [31, 41, 59, 26, 53]\n    sum_A = 0 \n    for i in range(len(A)):\n        sum_A += A[i]\n    if H > sum_A:\n        return 'No'\n    else:\n        return 'Yes'\nresult = common_raccoon_vs_monster()\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14146": {"id": 14146, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 0\n    i = 0\n    while i < n:\n        while i+1<n and a[i]==a[i+1]:\n            i += 1\n        if i+1<n and a[i] < a[i+1]:\n            while i+1<n and a[i]<=a[i+1]:\n                i += 1\n        elif i+1<n and a[i] > a[i+1]:\n            while i+1<n and a[i]>=a[i+1]:\n                i += 1\n        ans += 1\n        i += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "10569": {"id": 10569, "code": "A = 1;B = 1;K = 1\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\nlstA = make_divisors(A)\nlstB = make_divisors(B)\nfin = []\nfor i in lstA:\n    if i in lstB:\n        fin.append(i)\nfin.sort(reverse = True)\nprint(fin[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19271": {"id": 19271, "code": "n = 5\ndef solve(n):\n    if n % 2 == 1:\n        return 0\n    n //= 2\n    ans = 0\n    fact = 5\n    while n >= 5:\n        ans += n // 5\n        n //= 5\n    return ans\nprint(solve(n))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "958": {"id": 958, "code": "def isSame(n):\n    if n[0] == n[1] and n[1] == n[2]:\n        return True\n    else:\n        return False\nn_s = \"111\"\nn_i = int(n_s)\nwhile True:\n    if isSame(n_s):\n        print(n_s)\n        break\n    else:\n        n_i += 1\n        n_s = str(n_i)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!"]}, "6832": {"id": 6832, "code": "def solve():\n    h = 211;n = 5\n    a = map(int, \"31 41 59 26 53\".split())\n    for i in a:\n        h -= i\n    print('YNeos'[h>0::2])\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10495": {"id": 10495, "code": "import sys\nimport math\nread = sys.stdin.read\nreadline = sys.stdin.buffer.readline\nINF = float('inf')\ndef main():\n    A = 8;B = 12;K = 2\n    C = []\n    for i in range(1,min(A,B)+1):\n        if A%i==0 and B%i==0:\n            C.append(i)\n    print(C[-K])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10535": {"id": 10535, "code": "import math\nA = 8;B = 12;K = 2\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndivisors = make_divisors(math.gcd(A, B))\ndivisors.sort(reverse=True)\nprint(divisors[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3303": {"id": 3303, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 20;b = 30\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3458": {"id": 3458, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"20 15\".strip()\ndef resolve():\n    a = 20;b = 15\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17384": {"id": 17384, "code": "def m(s):\n  return True if 1 <= int(s) <= 12 else False\ns = \"1700\"\nf = int(s[:2])\nl = int(s[2:])\nif m(f) and m(l):\n  print(\"AMBIGUOUS\")\nelif m(f):\n  print(\"MMYY\")\nelif m(l):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "18877": {"id": 18877, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    N = 12\n    if N % 2 == 1 or N < 10:\n        print(0)\n        exit()\n    ans = 0\n    div = 10\n    while div <= N:\n        ans += N // div\n        div *= 5\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14795": {"id": 14795, "code": "n = 3;p = 0\na = [1, 1, 1]\nodd=0\neven=0\nnCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\no_pattern=0\nfor i in range(p,odd+1,2):\n    o_pattern += cmb(odd,i)\ne_pattern=0\nfor i in range(even+1):\n    e_pattern += cmb(even,i)\nprint(o_pattern*e_pattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "440": {"id": 440, "code": "abc = ''\nfor i in range(97 ,97+26):\n    abc += chr(i)\nS = \"codefestival\"\nK = 100\nans = ''\nfor i,s in enumerate(S):\n    if ord(s) > ord('a') and 26 - (ord(s) - ord('a')) <= K and i!=len(S)-1:\n        ans += 'a'\n        K -= 26 - (ord(s) - ord('a'))\n    elif i != len(S)-1:\n        ans += s\n    else:\n        ans += abc[(ord(s) + K%26-ord('a'))%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14627": {"id": 14627, "code": "import math\ndef combi(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\nL = [1, 3]\nodd = 0\neven = 0\nfor a in L:\n    if a % 2:\n        odd += 1\n    else:\n        even += 1\nc = 0\nif p == 0:\n    for i in range(0, odd + 1, 2):\n        c += combi(odd, i)\nelse:\n    for i in range(1, odd + 1, 2):\n        c += combi(odd, i)\nans = 2 ** even * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "11093": {"id": 11093, "code": "s = \"level\"\nl = len(s)\ndef check(a):\n  n = len(a)\n  if n % 2 == 0:\n    for i in range(n//2):\n      if a[i] != a[n-i-1]:\n        return False\n    return True\n  else:\n    for i in range((n-1)//2):\n      if a[i] != a[n-i-1]:\n        return False\n    return True\nres = \"No\"\nif check(s):\n  if check(s[:(l-1)//2]):\n    if check(s[(l+3)//2 - 1:]):\n      res = \"Yes\"\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "15700": {"id": 15700, "code": "def isu(x , y , z):\n    ans = (x - z) // (y + z)\n    return ans\ndef main():\n    x = 12;y = 3;z = 1\n    print(isu(x , y , z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14173": {"id": 14173, "code": "def sign(x):\n    return (x > 0) - (x < 0)\ndef main():\n    _ = int(\"6\")\n    a = map(int, \"1 2 3 2 2 1\".split())\n    ans = []\n    arr = []\n    state = 0\n    for an in a:\n        if len(arr) < 2:\n            arr.append(an)\n        else:\n            state += (arr[-1] - arr[-2])\n            if state == 0:\n                arr.append(an)\n            else:\n                current = an - arr[-1]\n                if current == 0 or sign(state) == sign(current):\n                    arr.append(an)\n                else:\n                    ans.append(arr)\n                    arr = [an]\n                    state = 0\n    ans.append(arr)\n    print(len(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "2925": {"id": 2925, "code": "def main():\n    s = \"1234567876\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        ans = min(ans, abs(753 - int(s[i:i + 3])))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9536": {"id": 9536, "code": "def main():\n    S = \"2017/01/07\"\n    print(S[:3] + \"8\" + S[4:])\nmain()", "coverage": [">", ">", ">", ">"]}, "3384": {"id": 3384, "code": "def main():\n    n = 20;k = 30\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3535": {"id": 3535, "code": "import sys\ndef S(): return \"12 4\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "19444": {"id": 19444, "code": "def main():\n    a = 2;b = 3\n    ta, tb = a, b\n    if b == 0: print(0)\n    while a%b != 0:\n       a, b = b, a%b\n    print(int((ta*tb)/b))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3714": {"id": 3714, "code": "def main():\n    A = 12;B = 4\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11809": {"id": 11809, "code": "def main():\n    M1 = 11;D1 = 30\n    M2 = 12;D2 = 1\n    if D2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11099": {"id": 11099, "code": "s = \"level\"\ndef kaibun(w):\n    for i in range(len(w)):\n        if w[i]!=w[len(w)-1-i]:\n            return False\n    return True\nn=len(s)\nprint(\"Yes\") if all([kaibun(s) , kaibun(s[:(n-1)//2]) , kaibun(s[(n+3)//2-1:])]) else print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10699": {"id": 10699, "code": "def kaibun(lst):\n    k = len(lst)//2 + len(lst)%2\n    for i in range(1,k+1):\n        if lst[i-1] != lst[-i]:\n            return False\n    return True\nS = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nN = len(S)\nif kaibun(S) and kaibun(S[:(N-1)//2]) and kaibun(S[(N+3)//2-1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "14808": {"id": 14808, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\nl = [1, 3]\no = 0\ne = 0\nfor i in range(n):\n    if l[i] % 2 == 0:\n        e += 1\n    else:\n        o += 1\nif p == 0:\n    a = 0\n    for i in range(e+1):\n        a += comb(e, i)\n    b = 0\n    for i in range(0, o+1, 2):\n        b += comb(o, i)\n    print(a*b)\nelse:\n    a = 0\n    for i in range(e+1):\n        a += comb(e, i)\n    b = 0\n    for i in range(1, o+1, 2):\n        b += comb(o, i)\n    print(a*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6052": {"id": 6052, "code": "def main():\n    N = 5\n    print(int((N + 2 - 1) / 2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "6884": {"id": 6884, "code": "def main():\n    H = 20;N = 3\n    A = ['4', '5', '6']\n    total = 0\n    for i in A:\n        total += int(i)\n    if total >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "7404": {"id": 7404, "code": "import sys\ninput = sys.stdin.buffer.readline\ndef MAP(): return map(int, \"20 3\".split())\ndef LIST(): return list(map(int, \"4 5 6\".split()))\nh, n = MAP()\na = LIST()\nprint('Yes') if h <= sum(a) else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3457": {"id": 3457, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"12 4\".strip()\ndef resolve():\n    a = 12;b = 4\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5460": {"id": 5460, "code": "def main():\n    n = 100\n    if n % 2 == 0:\n        print(n // 2)\n    else:\n        print(n // 2 + 1)\n    return\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "15026": {"id": 15026, "code": "import collections\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\nH = [i%2 for i in A]\nB = collections.Counter(H)[1]\nans = 0\nfor i in range(1,B//2+1):\n    ans += combinations_count(B, 2*i)\nC = (ans+1) * (2**(len(A)-B))\nprint(C if P == 0 else 2**N - C)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2217": {"id": 2217, "code": "def main():\n    n = 100;a = 100;b = 100\n    mx = min(a, b)\n    mn = max(0, a + b - n)\n    print(mx, mn)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9343": {"id": 9343, "code": "def main():\n    S = \"2017/01/31\"\n    S = S.replace('2017','2018')\n    print(S)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13536": {"id": 13536, "code": "def solve():\n    print(\"haiku,atcoder,tasks\".replace(',', ' '))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">"]}, "5901": {"id": 5901, "code": "def resolve():\n    N = 100\n    import math\n    print(math.ceil(N/2))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "5407": {"id": 5407, "code": "def main():\n n = 5\n print((n + 1) // 2)\nmain()", "coverage": [">", ">", ">", ">"]}, "11250": {"id": 11250, "code": "def main():\n  s = \"SAT\"\n  if(s=='SUN'):\n    print(7)\n  elif(s=='MON'):\n    print(6)\n  elif(s=='TUE'):\n    print(5)\n  elif(s=='WED'):\n    print(4)\n  elif(s=='THU'):\n    print(3)\n  elif(s=='FRI'):\n    print(2)\n  else:\n    print(1)\nmain()", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "10151": {"id": 10151, "code": "def main():\n    from collections import deque\n    N = 3\n    s = \"())\"\n    ans = deque(s)\n    cnt = 0\n    for c in s:\n        if c == ')':\n            if cnt:\n                cnt -= 1\n            else:\n                ans.appendleft('(')\n        else:\n            cnt += 1\n    for _ in range(cnt):\n        ans.append(')')\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", ">", ">", ">"]}, "16534": {"id": 16534, "code": "def ABC_56_A():\n    A = \"D\";B = \"H\"\n    if A == 'H' and B == 'H':\n        print('H')\n    elif A == 'H' and B == 'D':\n        print('D')\n    elif A == 'D' and B == 'H':\n        print('D')\n    else:\n        print('H')\nif __name__ == '__main__':\n    ABC_56_A()", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">"]}, "2844": {"id": 2844, "code": "import math\ndef main():\n  s = \"1111111111\"\n  min=abs(int(s[:3])-753)\n  for i in range(1,len(s)-2):\n    if abs(int(s[i:i+3])-753)<min:\n      min=abs(int(s[i:i+3])-753)\n  print(min)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "10111": {"id": 10111, "code": "def resolve():\n    N = 8\n    S = [')', ')', ')', ')', '(', '(', '(', '(']\n    nopen = 0\n    addleft = 0\n    addright = 0\n    for s in S:\n        if s == \"(\":\n            nopen += 1\n        else:\n            if nopen == 0:\n                addleft += 1\n            else:\n                nopen -= 1\n    addright = nopen\n    print(\"(\"*addleft+\"\".join(S)+\")\"*addright)\nif __name__ == '__main__':\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "16364": {"id": 16364, "code": "def pow(x, n , mod):\n    res = 1\n    while n > 0:\n        if  bin(n & 1) == bin(1) :\n            res = res * x % mod\n        x = x*x % mod\n        n = n >>1\n    return res   \ndef combination(n,a):\n    x = 1\n    for i in range(a):\n        x = x * (n-i) % mod\n    y = 1\n    for i in range(a):\n        y = y * (a-i) % mod\n    y = pow(y, mod-2, mod)\n    return (x*y % mod)\nn = 5\na = [6, 9, 4, 2, 11]\nmod =1\nm = max(a)\na = sorted(a)\nans = 0\nfor i in a:\n    if abs(m/2-i) < abs(m/2-ans):\n        ans = i\nprint(m, ans)", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10710": {"id": 10710, "code": "def main():\n    s = \"level\"\n    n = len(s)\n    rule1 = True\n    rule2 = True\n    rule3 = True\n    for i in range(n):\n        if s[i] != s[n - 1 - i]:\n            rule1 = False\n            break\n    for i in range(n // 2):\n        if s[i] != s[n // 2 - 1 - i]:\n            rule2 = False\n            break\n    for i in range(n // 2):\n        if s[n // 2 + 1 + i] != s[n - 1 - i]:\n            rule3 = False\n            break\n    if rule1 and rule2 and rule3:\n        ans = \"Yes\"\n    else:\n        ans = \"No\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "167": {"id": 167, "code": "def main():\n    S = \"codefestival\"\n    K = 100\n    ans = ''\n    for s in S:\n        if 123 - ord(s) <= K and s != 'a':\n            ans += 'a'\n            K -= 123-ord(s)\n        else:\n            ans += s\n    if K > 0:\n        ans = ans[:-1] + chr((ord(ans[-1])+K-97) % 26+97)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "19393": {"id": 19393, "code": "def main():\n    N = 999999999\n    if N % 2 == 0: return N\n    else: return N*2\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">"]}, "10590": {"id": 10590, "code": "A = 100;B = 50;K = 4\ndef divisor(n): \n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\nprint(sorted(list(set(divisor(A)) & set(divisor(B))), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8344": {"id": 8344, "code": "def main():\n    n = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9432": {"id": 9432, "code": "def main():\n    date = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\n    date[3] = '8'\n    ans = ''\n    for i in date:\n        ans = ans + i\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13427": {"id": 13427, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    print(s.replace(',', ' '))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "18448": {"id": 18448, "code": "def resolve():\n    h = 2\n    w = 100\n    n = 200\n    print(-(-n//max(h,w)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "5985": {"id": 5985, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    N = 100\n    ans = int(N / 2 + 0.6)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12743": {"id": 12743, "code": "def solve():\n    x = 6\n    if x == 7 or x == 5 or x == 3:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "10133": {"id": 10133, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\ndef read():\n    N = 3\n    S = \"())\"\n    return N, S\ndef solve(N, S):\n    rank = 0\n    q = deque()\n    for s in S:\n        if rank == 0:\n            if s == \")\":\n                q.appendleft(\"(\")\n                q.append(\")\")\n            else:\n                q.append(\"(\")\n                rank += 1\n        else:\n            if s == \")\":\n                q.append(\")\")\n                rank -= 1\n            else:\n                q.append(\"(\")\n                rank += 1\n    while rank > 0:\n        q.append(\")\")\n        rank -= 1\n    return \"\".join(q)\nif __name__ == '__main__':\n    inputs = read()\n    print(solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "13868": {"id": 13868, "code": "def main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    idx = 0\n    ans = 0\n    for i in range(len(A)):\n        if idx + 1 > len(A) - 1 :\n            break\n        m = \"\"\n        if A[idx] < A[idx + 1]:\n            m = \"+\"\n        elif A[idx] > A[idx + 1]:\n            m = \"-\"\n        else:\n            find = False\n            for j in range(idx, len(A)-1):\n                if A[j] < A[j + 1]:\n                    m = \"+\"\n                    find = True\n                    idx = j\n                    break\n                elif A[j] > A[j + 1]:\n                    m = \"-\"\n                    find = True\n                    idx = j\n                    break\n            if find == False:\n                print(ans + 1)\n                exit()\n        for j in range(idx, len(A) - 1):\n            if m == \"+\":\n                if A[j] <= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n            elif m == \"-\":\n                if A[j] >= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n    print(ans + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "3439": {"id": 3439, "code": "def ABC_143_A():\n    A = 12;B = 4\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "10275": {"id": 10275, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 6\n    s = \")))())\"\n    left_left=0\n    need_left=0\n    for i in range(n):\n        if s[i]==\"(\":\n            left_left+=1\n        else:\n            if left_left>0:\n                left_left-=1\n            else:\n                need_left+=1\n    right_right=0\n    need_right=0\n    for i in range(n-1,-1,-1):\n        if s[i]==\")\":\n            right_right+=1\n        else:\n            if right_right>0:\n                right_right-=1\n            else:\n                need_right+=1\n    print(\"(\"*need_left+s+\")\"*need_right)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "14581": {"id": 14581, "code": "import math\ndef C(n, r):\n    ret = math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\n    return ret\ndef sum_C(n, R):\n    nCr_0 = 1\n    s = nCr_0\n    for r in range(min(n, R)):\n        nCr_1 = nCr_0 * (n - r) // (r + 1)\n        nCr_0 = nCr_1\n        s += nCr_1\n    return s\ndef list_conb(n, R):\n    nCr_0 = 1\n    ret = [nCr_0]\n    for r in range(min(n, R)):\n        nCr_1 = nCr_0 * (n - r) // (r + 1)\n        ret.append(nCr_1)\n        nCr_0 = nCr_1\n    return ret\ndef main():\n    N = 1;P = 1\n    A = [50]\n    A = [a % 2 for a in A]\n    n_1 = sum(A)\n    n_0 = N - n_1\n    c = 0\n    if P == 0:\n        r = range(0, n_1 + 1, 2)\n    else:\n        r = range(1, n_1 + 1, 2)\n    for i in r:  \n        if N - i < 0:\n            break\n        c += C(n_1, i) * sum_C(n_0, N - i)\n    print(c)\nmain()", "coverage": [">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">"]}, "10654": {"id": 10654, "code": "def make_divisors(n):\n    lower_divisors, upper_divisors = [], []\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n // i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nA = 8;B = 12;K = 2\nA_yaku = make_divisors(A)\nB_yaku = make_divisors(B)\nA_B_yaku = sorted(list(set(A_yaku) & set(B_yaku)))\nprint(A_B_yaku[len(A_B_yaku) - K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16650": {"id": 16650, "code": "def main():\n  a = \"H\";b = \"H\"\n  if a == 'H':\n    ans = b\n  else:\n    if b == 'H':\n      ans = 'D'\n    else:\n      ans = 'H'\n  print(ans)\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "3236": {"id": 3236, "code": "def q1():\n    A = 20;B = 30\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10672": {"id": 10672, "code": "A = 1;B = 1;K = 1\ndef ans120(A:int, B:int, K:int):\n    if A>=B:\n        n=A\n    else:\n        n=B\n    ans_list=[]\n    for i in range(1,n+1):\n        if A%i==0 and B%i==0:\n            ans_list.append(i)\n    return ans_list[-K]\nprint(ans120(A,B,K))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "15639": {"id": 15639, "code": "def main():\n    import sys\n    sys.setrecursionlimit(10000000)\n    from collections import Counter, deque\n    from itertools import combinations\n    from math import floor, ceil\n    x = 100000;y = 1;z = 1\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2216": {"id": 2216, "code": "def main():\n    n = 10;a = 7;b = 5\n    mx = min(a, b)\n    mn = max(0, a + b - n)\n    print(mx, mn)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1814": {"id": 1814, "code": "def main():\n    N = 10;A = 3;B = 5\n    x = min(A, B)\n    y = max(0, x - (N - max(A, B)))\n    print(x, y)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10993": {"id": 10993, "code": "S = \"atcoder\"\nlength = len(S)\ndef check_palin(s):\n    num = len(s)\n    for i in range(num // 2):\n        if s[i] != s[num - i - 1]:\n            return False\n    return True\nfirst = S[:(length - 1) // 2]\nsecond = S[(length + 1) // 2:]\nif check_palin(S) and check_palin(first) and check_palin(second):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "16227": {"id": 16227, "code": "def check(n, m):\n    l = n // 2\n    r = l + (n % 2 == 1)\n    return min(abs(l - m), abs(r - m))\nN = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nn = A[-1]\npd = float('inf')\nfor i in range(N - 1):\n    a = A[i]\n    d = check(n, a)\n    if d < pd:\n        b = a\n        pd = d\nprint(n, b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1750": {"id": 1750, "code": "def main():\n    population = 100;a_reader = 100;b_reader = 100\n    print(min(a_reader, b_reader), max(a_reader + b_reader - population, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "2447": {"id": 2447, "code": "import math\nn = 4;m = 3\nt = 0\ntt = 0\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nif n > 1:\n    t = com(n,2)\nif m > 1:\n    tt = com(m,2)\nprint(t+tt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12592": {"id": 12592, "code": "def solve(a,b,k):\n    l = []\n    for i in range(min(a,b)):\n        if a % (i+1) == 0 and b % (i+1) == 0:\n            l.append(i+1)\n    return(l[-k])\ndef main():\n    A = 8;B = 12;K = 2\n    print(solve(A,B,K))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "507": {"id": 507, "code": "def resolve():\n    S = \"a\"\n    K = 25\n    ans = []\n    for s in S:\n        diff = ord(s) - ord(\"a\")\n        if diff == 0:\n            ans.append(\"a\")\n            continue\n        elif 26 - diff <= K:\n            ans.append(\"a\")\n            K -= 26 - diff\n        else:\n            ans.append(s)\n    K %= 26\n    d = (K + ord(ans[-1]) - ord('a')) % 26\n    ans[-1] = chr(d + ord('a'))\n    print(\"\".join(ans))\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7680": {"id": 7680, "code": "def main():\n    H = 211\n    A = map(int, \"31 41 59 26 53\".split())\n    cond = sum(A) >= H\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2041": {"id": 2041, "code": "def main():\n    N = 100;A = 100;B = 100\n    if A + B >= N:\n        mini = (A + B) - N\n    else:\n        mini = 0\n    maxi = min(A, B)\n    print(maxi, mini)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15122": {"id": 15122, "code": "import collections\ndef nCk(n, k):\n    k = min(k, n-k)\n    numer = 1\n    for i in range(n, n-k, -1):\n        numer *= i\n    denom = 1\n    for i in range(k, 1, -1):\n        denom *= i\n    return numer // denom\ndef main():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    B = [x%2 for x in A]\n    Bcount = collections.Counter(B)\n    if Bcount[1] == 0 and P == 1:\n        print(0)\n        return\n    ans = 0\n    if P == 0:\n        tmp = pow(2, Bcount[0])\n        for i in range(0, Bcount[1]+1, 2):\n            ans += tmp * nCk(Bcount[1], i)\n        print(ans)\n        return\n    else:\n        tmp = pow(2, Bcount[0])\n        for i in range(1, Bcount[1]+1, 2):\n            ans += tmp * nCk(Bcount[1], i)\n        print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "16353": {"id": 16353, "code": "def main():\n    _ = int(\"2\")\n    a = [100, 0]\n    a.sort()\n    half_val = -(-a[-1] // 2)\n    dist_list = [abs(half_val - an) for an in a[:-1]]\n    min_index = dist_list.index(min(dist_list))\n    print(f'{a[-1]} {a[min_index]}')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2796": {"id": 2796, "code": "def main():\n    s = \"1111111111\"\n    comp_num = 753\n    min_diff = 754\n    for i in range(len(s)-2):\n        n = int(s[i:i+3])\n        diff = abs(comp_num - n)\n        if min_diff > diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12399": {"id": 12399, "code": "def resolve():\n    s = \"atcoder\"\n    if s == s[::-1]:\n        s_1 = s[:len(s)//2]\n        s_2 = s[(len(s)+1)//2:]\n        if (s_1 == s_1[::-1]) and (s_2 == s_2[::-1]):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')\nresolve()", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13672": {"id": 13672, "code": "import sys\ndef input(): return \"10 0 12 0 120\".rstrip()\ndef main():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    print(h2*60+m2-h1*60-m1-k)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19150": {"id": 19150, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\nimport math\ndef main():\n    N = 5\n    if N % 2 == 1:\n        print(0)\n    else:\n        ans = 0\n        tmp = 10\n        while tmp <= N:\n            ans += N//tmp\n            tmp *= 5\n        print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "16228": {"id": 16228, "code": "def check(n, m):\n    l = n // 2\n    r = l + (n % 2 == 1)\n    return min(abs(l - m), abs(r - m))\nN = 2\nA = [100, 0]\nA.sort()\nn = A[-1]\npd = float('inf')\nfor i in range(N - 1):\n    a = A[i]\n    d = check(n, a)\n    if d < pd:\n        b = a\n        pd = d\nprint(n, b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9212": {"id": 9212, "code": "from collections import defaultdict,deque\nimport math\ndef main():\n    n = \"2017/01/07\"\n    print(n[0:3]+\"8\"+n[4:])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1795": {"id": 1795, "code": "def main():\n    n = 100;a = 100;b = 100\n    print(min(a, b), max(0, a+b-n))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "14524": {"id": 14524, "code": "n = 1;p = 1\na = [50]\nfac = [1]*(n+1)\nfor i in range(2,n+1): fac[i] = fac[i-1]*i\ndef comb(n,k):\n    if n < k: return 0\n    if n < 0 or k < 0: return 0\n    return fac[n]//(fac[k]*fac[n-k])\neven = odd = 0\nfor i in range(n):\n    if a[i]%2 == 0: even += 1\n    else: odd += 1\ncnte = cnto = 0\nfor i in range(even+1): cnte += comb(even,i)\nfor i in range(odd+1)[p::2]: cnto += comb(odd,i)\nprint(cnte*cnto)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10326": {"id": 10326, "code": "def actual(a, b, k):\n    M = max(a, b)\n    common_divisors = []\n    for i in range(1, M + 1):\n        if (a % i == 0) and (b % i == 0):\n            common_divisors.append(i)\n    return common_divisors[-k]\na = 1;b = 1;k = 1\nprint(actual(a, b, k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19341": {"id": 19341, "code": "import sys\nn = 10\ndef main():\n    ans = n\n    if n & 1: ans *= 2\n    print(ans)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10829": {"id": 10829, "code": "S = \"atcoder\"\nN=len(S)\ndef rule1():\n  return S==S[::-1]\ndef rule2():\n  s = S[:(N-1)//2]\n  return s==s[::-1]\ndef rule3():\n  s = S[(N+3)//2-1:]\n  return s==s[::-1]  \nprint ('Yes' if rule1() and rule2() and rule3() else 'No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "13729": {"id": 13729, "code": "def solve():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    print((H2*60 + M2) - (H1*60 + M1) - K)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "10152": {"id": 10152, "code": "def main():\n    from collections import deque\n    N = 6\n    s = \")))())\"\n    ans = deque(s)\n    cnt = 0\n    for c in s:\n        if c == ')':\n            if cnt:\n                cnt -= 1\n            else:\n                ans.appendleft('(')\n        else:\n            cnt += 1\n    for _ in range(cnt):\n        ans.append(')')\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", ">", ">", ">"]}, "10018": {"id": 10018, "code": "def main():\n    n = 6\n    s = \")))())\"\n    l, r, c = 0, 0, 0\n    for a in s:\n        if a == '(':\n            c += 1\n        elif c:\n            c -= 1\n        else:\n            l += 1\n    r = c\n    print(\"(\"*l + s + \")\"*r)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "12223": {"id": 12223, "code": "s = \"level\"\ndef check():\n  if s != s[::-1]:\n    return(\"No\")\n  n = len(s)\n  s1 = s[:int((n-1)/2)]\n  if s1 != s1[::-1]:\n    return(\"No\")\n  s2 = s[int((n+3)/2-1):]\n  if s2 != s2[::-1]:\n    return(\"No\")\n  return(\"Yes\")\nprint(check())", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13695": {"id": 13695, "code": "import sys\ndef MI(): return map(int,\"10 0 15 0 30\".rstrip().split())\nH1,M1,H2,M2,K = MI()\nprint(max(0,60*H2+M2-60*H1-M1-K))", "coverage": [">", ">", ">", ">"]}, "11395": {"id": 11395, "code": "import sys\ndef main():\n    S = \"SUN\"\n    if S == \"SUN\":\n        print(7)\n    elif S == \"MON\":\n        print(6)\n    elif S ==\"TUE\":\n        print(5)\n    elif S ==\"WED\":\n        print(4)\n    elif S ==\"THU\":\n        print(3)\n    elif S ==\"FRI\":\n        print(2)\n    else:\n        print(1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13978": {"id": 13978, "code": "import sys\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    zogen = 0\n    ans = 0\n    for a, b in zip(A, A[1:]):\n        if zogen > 0 and b >= a:\n            continue\n        if zogen < 0 and b <= a:\n            continue\n        if zogen == 0:\n            zogen = b - a\n            continue\n        ans += 1\n        zogen = 0\n    print(ans + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5033": {"id": 5033, "code": "def main():\n    s = \"smiles\"\n    print(s[0]+str(len(s)-2)+s[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "12522": {"id": 12522, "code": "def euclidean(a,b):\n  _ = a % b\n  if _ == 0:\n    return b\n  else:\n    while 1:\n      if b % _ == 0 :\n        break\n      else:\n        _ = b % _\n    return _\nA = 100;B = 50;K = 4\na = max(A, B)\nb = min(A, B)\ne = euclidean(a, b)\nby = []\nr = int(e ** (1 / 2))\nfor i in range(1, r + 1):\n  if e % i == 0:\n    by.append(i)\n    j = e // i\n    if j != i:\n      by.append(j)\nby.sort(reverse = True)\nprint(by[K - 1])", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10256": {"id": 10256, "code": "def solve():\n    N = 3\n    S = \"())\"\n    l,r = 0,0\n    state = 'r'\n    for i in range(N):\n        if i == 0 and S[i] == ')': state = 'l'\n        if i > 0  and S[i-1] == ')' and S[i] == '(':\n            state = 'r' \n        if S[i] == '(':\n            if state == 'l':\n                if l > 0:\n                    l -= 1\n                else:\n                    r += 1\n            elif state == 'r':\n                r += 1\n        elif S[i] == ')':\n            if state == 'r':\n                if r > 0:\n                    r -= 1\n                else:\n                    l += 1\n            elif state == 'l':\n                l += 1\n    print('('*l+S+')'*r)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "10119": {"id": 10119, "code": "from collections import deque\ndef main():\n    N = 6\n    S = [')', ')', ')', '(', ')', ')']\n    Stmp = S.copy()\n    Stmp = deque(Stmp)\n    cnt = 0\n    for s in S:\n        cnt += (s=='(') - (s==')')\n        if cnt < 0:\n            Stmp.appendleft('(')\n            cnt += 1\n    for _ in range(cnt):\n        Stmp.append(')')\n    print(''.join(Stmp))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8075": {"id": 8075, "code": "import math\ndef main():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    if N == 1:\n        print(0)\n    elif N <= K:\n        print(1)\n    else:\n        print(1+math.ceil((N-K)/(K-1)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "13239": {"id": 13239, "code": "def resolve():\n    s = \"haiku,atcoder,tasks\"\n    print(s[:5],s[6:13],s[14:])\nresolve()", "coverage": [">", ">", ">", ">"]}, "14810": {"id": 14810, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\nl = [1, 1, 1]\no = 0\ne = 0\nfor i in range(n):\n    if l[i] % 2 == 0:\n        e += 1\n    else:\n        o += 1\nif p == 0:\n    a = 0\n    for i in range(e+1):\n        a += comb(e, i)\n    b = 0\n    for i in range(0, o+1, 2):\n        b += comb(o, i)\n    print(a*b)\nelse:\n    a = 0\n    for i in range(e+1):\n        a += comb(e, i)\n    b = 0\n    for i in range(1, o+1, 2):\n        b += comb(o, i)\n    print(a*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "5206": {"id": 5206, "code": "def resolve():\n    s = \"internationalization\"\n    print('{}{}{}'.format(s[0],len(s)-2,s[-1]))\nresolve()", "coverage": [">", ">", ">", ">"]}, "12611": {"id": 12611, "code": "def com_div(x, y):\n    dv = []\n    for i in range(min(x, y), 0, -1):\n        if x % i == 0 and y % i == 0:\n            dv.append(i)\n    return dv\na = 100;b = 50;k = 4\nprint(com_div(a, b)[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11144": {"id": 11144, "code": "def main():\n    S = \"atcoder\"\n    L = len(S)\n    def check(s):\n        return s == s[::-1]\n    cond = check(S)\n    cond = cond and check(S[:L // 2])\n    cond = cond and check(S[(L + 1) // 2:])\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "471": {"id": 471, "code": "INF = 10 ** 9\nimport sys\nsys.setrecursionlimit(100000000)\ndy = (-1,0,1,0)\ndx = (0,1,0,-1)\nfrom  collections import deque\ndef main():\n    s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    k = 100\n    for i in range(len(s)):\n        if s[i] == 'a':\n            continue\n        if k >= ord('z') - ord(s[i]) + 1:\n            k -= ord('z') - ord(s[i]) + 1\n            s[i] = 'a'\n            if k == 0:\n                break\n    if k > 0:\n        s[-1] = chr((ord(s[-1]) + k - 97)%26 + 97)\n    print(''.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10379": {"id": 10379, "code": "a = 100;b = 50;k = 4\ndef cf(x1,x2):\n    cf=[]\n    for i in range(2,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nlst=cf(a,b)\nlst.insert(0,1)\nprint(lst[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2006": {"id": 2006, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"10 3 5\".strip()\ndef resolve():\n    n = 10;a = 3;b = 5\n    l=min(a,b)\n    if n>a+b:\n        r=0\n    else:\n        r=a+b-n\n    print(l,r)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17435": {"id": 17435, "code": "import math\ndef main():\n    s = \"1700\"\n    f = int(s[:2])\n    b = int(s[2:])\n    if 1 <= f and f <= 12 and 1 <= b and b <= 12:\n        print(\"AMBIGUOUS\")\n    elif 0 <= f and f <= 99 and 1 <= b and b <= 12:\n        print(\"YYMM\")\n    elif 0 <= b and b <= 99 and 1 <= f and f <= 12:\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "17516": {"id": 17516, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"1700\"\n    if 1 <= int(S[:2]) <= 12:\n        is_MMYY = True\n    else:\n        is_MMYY = False\n    if 1 <= int(S[2:]) <= 12:\n        is_YYMM = True\n    else:\n        is_YYMM = False\n    if is_MMYY and is_YYMM:\n        ans = \"AMBIGUOUS\"\n    elif is_MMYY:\n        ans = \"MMYY\"\n    elif is_YYMM:\n        ans = \"YYMM\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "2815": {"id": 2815, "code": "def main():\n    s = \"1234567876\"\n    print(min(abs(int(s[i:i+3]) - 753) for i in range(len(s)-3+1)))\nmain()", "coverage": [">", ">", ">", ">"]}, "12735": {"id": 12735, "code": "def solve():\n    X = 6\n    if X == 5 or X == 7 or X == 3:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "16234": {"id": 16234, "code": "def resolve():\n    import bisect\n    N = 5\n    A = [2, 4, 6, 9, 11]\n    if N == 2:\n        print(max(A), min(A))\n        return\n    maxA = A[-1]\n    half = maxA / 2\n    i = bisect.bisect_left(A, half)\n    if A[i] - half < half - A[i - 1]:\n        print(maxA, A[i])\n    else:\n        print(maxA, A[i - 1])\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14800": {"id": 14800, "code": "nCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\nN = 1;P = 1\nA = [0]\nkisuu = sum(A)  \nguusuu = N-kisuu  \nif P == 1:\n    tmp_guusuu = 0\n    tmp_kisuu = 0\n    for i in range(guusuu+1):\n        tmp_guusuu += cmb(guusuu, i)\n    for i in range(kisuu+1):\n        if i % 2 == 0:\n            continue\n        tmp_kisuu += cmb(kisuu, i)\n    print(tmp_guusuu*tmp_kisuu)\nelif P == 0:\n    tmp_guusuu = 0\n    tmp_kisuu = 0\n    for i in range(guusuu+1):\n        tmp_guusuu += cmb(guusuu, i)\n    for i in range(kisuu+1):\n        if i % 2 == 1:\n            continue\n        tmp_kisuu += cmb(kisuu, i)\n    print(tmp_guusuu*tmp_kisuu)", "coverage": [">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8153": {"id": 8153, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    if N==K:\n        print(1)\n    else:\n        N=N-K\n        print(1+-(-N//(K-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10721": {"id": 10721, "code": "def check(string):\n    if string == string[::-1]:\n        return True\n    else:\n        return False\nS = \"akasaka\"\nn = len(S)\nS1 = S[:(n-1)//2]\nS2 = S[(n+1)//2:]\nif check(S) and check(S1) and check(S2):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "19510": {"id": 19510, "code": "N = 10\ndef gcd(a,b):\n  if a==b:\n    return a\n  else:\n    a,b=max(a,b),min(a,b)\n    if a%b==0:\n      return b\n    return gcd(b,a%b)  \nif N%2==0:\n  print(N)\nelse:\n  lcm=int(2*N/gcd(2,N))\n  print(lcm)", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!"]}, "12795": {"id": 12795, "code": "import sys\nu = set('753')\nx = \"6\"\ndef main():\n    ans = 'YES' if x in u else 'NO'\n    print(ans)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18323": {"id": 18323, "code": "def main():\n    H = 3\n    W = 7\n    N = 10\n    if H < W:\n        H, W = W, H\n    ans = N//H\n    if N%H != 0:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11149": {"id": 11149, "code": "import sys\nimport collections as cl\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef main():\n    S = \"akasaka\"\n    N  = len(S)\n    for i in range(N):\n        if S[i] != S[N-i-1]:\n            print(\"No\")\n            exit()\n    half = int((N-1)/2)\n    for i in range(half):\n        if S[i] != S[half-i-1]:\n            print(\"No\")\n            exit()\n    for i in range(half+2,N):\n        if S[i] != S[N-i-1]:\n            print(\"No\")\n            exit()\n    print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "17775": {"id": 17775, "code": "S = \"0112\"\nheads = int(S[:2])\ntails = int(S[2:])\ndef is_month(n):\n    return n >= 1 and n <= 12\nif is_month(heads) and (not is_month(tails)):\n    print(\"MMYY\")\nelif (not is_month(heads)) and (not is_month(tails)):\n    print(\"NA\")\nelif (not is_month(heads)) and is_month(tails):\n    print(\"YYMM\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "19160": {"id": 19160, "code": "N = \"12\"\ndef f(x):\n  p = 1\n  i = 1\n  cnt = 0\n  while p > 0:\n    p = x // (5**i) // 2\n    cnt += p\n    i += 1\n  return cnt\nif int(N[-1])%2 == 1:\n  print(0)\nelse:\n  print(f(int(N)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12601": {"id": 12601, "code": "a = 8;b = 12;k = 2\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_y = set(make_divisors(a))\nb_y = set(make_divisors(b))\ny = list(a_y & b_y)\ny.sort(reverse=True)\nprint(y[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12816": {"id": 12816, "code": "import sys\ndef input(): return \"5\".rstrip()\ndef main():\n    X = 5\n    if X in (3, 5, 7):\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3123": {"id": 3123, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    s = \"1234567876\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        num = int(s[i:i+3])\n        if ans > abs(753 - num):\n            ans = abs(753 - num)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12151": {"id": 12151, "code": "import sys\nstdin = sys.stdin\ndef ns(): return \"11 16\".rstrip()\ndef ni(): return int(ns())\ndef na(): return list(map(int, \"11 17\".split()))\ndef main():\n    a, _ = na()\n    b, _ = na()\n    print(b-a)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12286": {"id": 12286, "code": "def isKaibun(ss):    \n    return ss==ss[::-1]\ns = \"akasaka\"\nans=True\nn=len(s)\nif not isKaibun(s):\n    ans=False\nif not isKaibun(s[:((n-1)//2)]):\n    ans=False\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "8205": {"id": 8205, "code": "import math\ndef main():\n    n = 8;k = 3\n    a = [7, 3, 1, 8, 4, 6, 2, 5]\n    print(math.ceil((n-k)/(k-1)+1))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2421": {"id": 2421, "code": "import math\ndef calc_combi(n,m):\n    if n<=1:\n        return 0\n    return math.factorial(n)/(math.factorial(m)*(math.factorial(n-m)))\nn = 1;m = 1\nans=int(calc_combi(n,2)+calc_combi(m,2))\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "6645": {"id": 6645, "code": "import bisect\ndef main():\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2, 50, 79, 288, 383, 2643]\n    ans = 0\n    for b in B:\n        indexa = bisect.bisect_left(A, b)\n        indexc = bisect.bisect_right(C, b)\n        ans += indexa * (N - indexc)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12441": {"id": 12441, "code": "def main():\n  s = \"level\"\n  x=s[:int((len(s)-1)/2)]\n  y=s[int((len(s)+3)/2)-1:]\n  flg=0\n  if s !=s[::-1]:\n    flg=1\n  if x !=x[::-1]:\n    flg=1\n  if y !=y[::-1]:\n    flg=1\n  if flg==1:\n    print(\"No\")\n  else:\n    print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "839": {"id": 839, "code": "def main():\n    K = 2\n    v = 7 % K\n    for i in range(K+5):\n        if v == 0:\n            print(i+1)\n            return\n        v = v * 10 + 7\n        v %= K\n    print(-1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "18912": {"id": 18912, "code": "import sys\nsysread = sys.stdin.buffer.readline\nread = sys.stdin.buffer.read\nfrom heapq import heappop, heappush\nsys.setrecursionlimit(10**7)\ndef run():\n    N = 12\n    if N % 2:\n        print(0)\n    else:\n        ans = 0\n        div = 10\n        while True:\n            val = N // div\n            ans += val\n            if not val:break\n            div *= 5\n        print(ans)\nif __name__ == \"__main__\":\n    run()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7997": {"id": 7997, "code": "def main():\n    n = 4;k = 3\n    As = [2, 3, 1, 4]\n    ans = (n-2) // (k-1) + 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10803": {"id": 10803, "code": "def kaibun(moji):\n    n = len(moji)\n    for i in range(0,int(n/2)):\n        if s[i]!=s[n-1-i]:\n            return False\n    return True\ns = \"level\"\nn = len(s)\nmoji1 = int((n - 1) / 2)\nmoji2 = int((n + 3) / 2)\nif kaibun(s) and kaibun(s[:moji1]) and kaibun(s[moji2-1:]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "4716": {"id": 4716, "code": "def answer(s: str) -> str:\n    return f'{s[0]}{len(s) - 2}{s[-1]}'\ndef main():\n    s = \"xyz\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13185": {"id": 13185, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"haiku,atcoder,tasks\"\n    S = S.replace(\",\", \" \")\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1444": {"id": 1444, "code": "import sys\ndef input():\n    return \"750\".rstrip()\ndef main():\n    N = 750\n    d =(N-1)//111\n    print((d+1)*111)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "1431": {"id": 1431, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 112\n    for i in range(1, 10):\n        if N <= 111 * i:\n            ans = 111 * i\n            break\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17349": {"id": 17349, "code": "def main():\n    A = \"H\";B = \"H\"\n    print('H'if A == B else 'D')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "12603": {"id": 12603, "code": "a = 1;b = 1;k = 1\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_y = set(make_divisors(a))\nb_y = set(make_divisors(b))\ny = list(a_y & b_y)\ny.sort(reverse=True)\nprint(y[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11903": {"id": 11903, "code": "str1 = ['11', '30']\nstr2 = ['12', '1']\nm1 = str1[0]\nd1 = str1[1]\nm2 = str2[0]\nd2 = str2[1]\nif m1 == m2:\n    return_value = '0'\nelse:\n    return_value = '1'\nprint(return_value)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14728": {"id": 14728, "code": "N = 1;P = 1\nA = [0]\no = A.count(1)\ne = N-o\non = en = 0\ndef ncr(n, r):\n    r = min(r,n-r)\n    res=1\n    d=1\n    for i in range(r):\n        res*=n-i\n        d *= i + 1\n    return res//d\nfor r in range(e+1):\n    en+=ncr(e,r)\nfor r in range(P, o+1, 2):\n    on+=ncr(o,r)\nprint(on*en)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">"]}, "10477": {"id": 10477, "code": "A = 1;B = 1;K = 1\ndef make_div(n):\n  divisors = []\n  for i in range(1, int(n**0.5)+1):\n    if n % i == 0:\n      divisors.append(i)\n      if i != n // i:\n        divisors.append(n//i)\n  return divisors\nprint(sorted(set(make_div(A))&set(make_div(B)), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12380": {"id": 12380, "code": "s = \"level\"\ndef kaibun(s):\n    if s == s[::-1]:\n        return 1\n    else:\n        return 0\nq = len(s)\nd = int((q-1)/2)\nket = s[0:d]\nmat = s[int((q+1)/2):q]\nif (kaibun(s) + kaibun(ket) + kaibun(mat)) == 3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1706": {"id": 1706, "code": "import sys\ndef main():\n    raw = ['10', '3', '5']\n    n = int(raw[0])\n    a = int(raw[1])\n    b = int(raw[2])\n    def get_max():\n        return min(a, b)\n    def get_min():\n        return max(a + b - n, 0)\n    print(\"{} {}\".format(get_max(), get_min()))\nif __name__ == \"__main__\":\n    argv = sys.argv[1:]\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18035": {"id": 18035, "code": "x = ['1', '7', '0', '0']\nfirst = 10 * int(x[0]) + int(x[1])\nsecond = 10 * int(x[2]) + int(x[3])\ndef mc(num):\n    if 1 <= num <= 12:\n        return True\n    else:\n        return False\ndef yc(num):\n    if 0 <= num <= 99:\n        return True\n    else:\n        return False\nif yc(first):\n    if mc(second):\n        if yc(second):\n            if mc(first):\n                print(\"AMBIGUOUS\")\n            else:\n                print(\"YYMM\")\n        else:\n            print(\"YYMM\")\n    elif yc(second):\n        if mc(first):\n            print(\"MMYY\")\n        else:\n            print(\"NA\")\n    else:\n        print(\"NA\")\nelif yc(second):\n    if mc(first):\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "2228": {"id": 2228, "code": "def main():\n    n = 10;a = 7;b = 5\n    print(min(a, b), max(0, (a + b) - n))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "6917": {"id": 6917, "code": "def solve():\n    n = 210;m = 5\n    s = [31, 41, 59, 26, 53]\n    if sum(s) >= n:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nsolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "136": {"id": 136, "code": "import sys\nsys.setrecursionlimit(10**7)\nalphabets = \"abcdefghijklmnopqrstuvwxyz\"\na = {c:i for i, c in enumerate(alphabets)}\ns = ['x', 'y', 'z']\nn = len(s)\nk = 4\ndef f(k, i):\n    if i == n - 1:\n        k_ = k % 26\n        c = s[i]\n        shifted = (k_ + a[c]) % 26\n        return alphabets[shifted]\n    c = s[i]\n    diff = 26 - a[c]\n    if c != \"a\" and diff <= k:\n        return \"a\" + f(k-diff, i+1)\n    else:\n        return c + f(k, i+1)\nprint(f(k, 0))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "2448": {"id": 2448, "code": "import math\nn = 1;m = 1\nt = 0\ntt = 0\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nif n > 1:\n    t = com(n,2)\nif m > 1:\n    tt = com(m,2)\nprint(t+tt)", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "13134": {"id": 13134, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    x = 5\n    if x in [3,5,7]:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15128": {"id": 15128, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\na = [1, 1, 1]\nz=a.count(0)\no=a.count(1)\nonum=0\nif p:\n  i=1\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nelse:\n  i=0\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nprint((2**z)*onum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "5905": {"id": 5905, "code": "def main():\n  num = 5\n  if num%2==0:\n    print(int(num/2))\n  else:\n    print(int(num/2)+1)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "7164": {"id": 7164, "code": "def main():\n    h = 211;n = 5\n    a = [31, 41, 59, 26, 53]\n    if sum(a)>=h:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17196": {"id": 17196, "code": "A = \"H\";B = \"H\"\ndef Main(A, B):\n    return 'H' if A == B else 'D'\nprint(Main(A, B))", "coverage": [">", ">", ">", ">"]}, "227": {"id": 227, "code": "def str_rotate(S,k): \n    if k >= 26:\n        k = k%26\n    if ord(S) + k > 123:\n        S = chr(ord(S)+k-97)\n    else:\n        S = chr(ord(S)+k)\n    return S\ns = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n    if k == 0:\n        break\n    if s[i] == \"a\":\n        pass\n    elif 123 - ord(s[i]) <= k:\n        k -= 123 - ord(s[i])\n        s[i] = \"a\"\n    else:\n        pass\ns[-1] = str_rotate(s[-1],k)\nprint(\"\".join(s))", "coverage": [">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "16125": {"id": 16125, "code": "import sys\ndef solve(A, B):\n    return max(0, A - B * 2)\ndef main(args):\n    A = 12;B = 4\n    ans = solve(A, B)\n    print(ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18521": {"id": 18521, "code": "import sys\nreadline = sys.stdin.readline\ndef main():\n    H = 3\n    W = 7\n    N = 10\n    print(-(-N // max(H, W)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15222": {"id": 15222, "code": "import math\ndef main():\n  x = 13;y = 3;z = 1\n  x -= z\n  print(x//(y+z))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "747": {"id": 747, "code": "def main():\n    K = 101\n    work = 7\n    answer = -1\n    for i in range(1, K+1):\n        i_mod = work % K\n        if i_mod == 0 :\n            answer = i\n            break\n        work = i_mod * 10 + 7\n    print(answer)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6883": {"id": 6883, "code": "def main():\n    H = 10;N = 3\n    A = ['4', '5', '6']\n    total = 0\n    for i in A:\n        total += int(i)\n    if total >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16399": {"id": 16399, "code": "n = 2\na = [100, 0]\na.sort()\nl = a[-1]\ndef bigger(ind):\n    global a, n, l\n    if a[ind] > l / 2:\n        return True\n    else:\n        return False\ntop = n\nbottom = -1\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if bigger(mid):\n        top = mid\n    else:\n        bottom = mid\nif a[top] + a[bottom]> l or a[top] == l:\n    print(l, a[bottom])\nelse:\n    print(l, a[top])", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "5317": {"id": 5317, "code": "def resolve():\n    n = 5\n    if n%2==0:\n        print(n//2)\n    else:\n        print(n//2+1)\nresolve()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "14523": {"id": 14523, "code": "n = 2;p = 0\na = [1, 3]\nfac = [1]*(n+1)\nfor i in range(2,n+1): fac[i] = fac[i-1]*i\ndef comb(n,k):\n    if n < k: return 0\n    if n < 0 or k < 0: return 0\n    return fac[n]//(fac[k]*fac[n-k])\neven = odd = 0\nfor i in range(n):\n    if a[i]%2 == 0: even += 1\n    else: odd += 1\ncnte = cnto = 0\nfor i in range(even+1): cnte += comb(even,i)\nfor i in range(odd+1)[p::2]: cnto += comb(odd,i)\nprint(cnte*cnto)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1593": {"id": 1593, "code": "def nikkei19q_a():\n    N = 10;A = 7;B = 5\n    ans_max = min(A, B)\n    ans_min = max(0, A + B - N)\n    print(*[ans_max, ans_min], sep=' ')\nnikkei19q_a()", "coverage": [">", ">", ">", ">", ">", ">"]}, "18646": {"id": 18646, "code": "H = 2\nW = 100\nN = 200\ndef ceil_div(a, b):\n    return (a + b - 1) // b\nprint(ceil_div(N, max(H, W)))", "coverage": [">", ">", ">", ">", ">", ">"]}, "3622": {"id": 3622, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    A = 20;B = 30\n    C=max(0,A-B*2)\n    print(C)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15703": {"id": 15703, "code": "def isu(x , y , z):\n    ans = (x - z) // (y + z)\n    return ans\ndef main():\n    x = 64145;y = 123;z = 456\n    print(isu(x , y , z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14527": {"id": 14527, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nnum_pack = 1;mod = 1\npack_ls = [50]\nnum_pack_0 = 0\nnum_pack_1 = 0\nfor i in range(num_pack):\n    if pack_ls[i] % 2 == 0:\n        num_pack_0 += 1\n    else:\n        num_pack_1 += 1\nif mod == 1:\n    pattern_0 = 2 ** num_pack_0\n    pattern_1 = 0\n    i = 1\n    while i <= num_pack_1:\n        pattern_1 += combinations_count(num_pack_1, i)\n        i += 2\n    ans = pattern_0 * pattern_1\nelse:\n    pattern_0 = 2 ** num_pack_0\n    pattern_1 = 0\n    i = 0\n    while i <= num_pack_1:\n        pattern_1 += combinations_count(num_pack_1, i)\n        i += 2\n    ans = pattern_0 * pattern_1\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13316": {"id": 13316, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    ans = s.replace(',', ' ')\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "8663": {"id": 8663, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 1\n    A = [2]\n    A2 = [3]\n    t = A[0]\n    t2 = sum(A2)\n    ans = t + t2\n    for i in range(1, N):\n        t += A[i]\n        t2 -= A2[i-1]\n        ans = max(ans, t+t2)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "14207": {"id": 14207, "code": "import sys\ninput = sys.stdin.readline\ndef read():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    return N, A\ndef solve(N, A):\n    B = [A[0]]\n    prev = A[0]\n    for a in A:\n        if prev != a:\n            B.append(a)\n            prev = a\n    count = 1\n    up = False\n    down = False\n    for i in range(1, len(B)):\n        if not up and not down:\n            if B[i-1] < B[i]:\n                up = True\n            else:\n                down = True\n        elif up and B[i-1] > B[i]:\n            up = False\n            count += 1\n        elif down and B[i-1] < B[i]:\n            down = False\n            count += 1\n    return count\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14824": {"id": 14824, "code": "from math import factorial \ndef comb(n, r):\n  return factorial(n)//(factorial(n-r)*factorial(r))\nn = 2;p = 0\nal = [1, 3]\neven = 0\nodd = 0\nfor a in al:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nif p == 1 and odd == 0:\n  print(0)\n  exit()\nans1 = 2**even\nans2 = 0\nif p == 0:\n  t = 0\n  while t <= odd:\n    ans2 += comb(odd,t)\n    t += 2\nelse:\n  k = 1\n  while k <= odd:\n    ans2 += comb(odd,k)\n    k += 2\nprint(ans1*ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "10781": {"id": 10781, "code": "def main():\n    S = \"akasaka\"\n    n = len(S)\n    frontN = (n - 1) // 2\n    backN = (n + 3) // 2\n    checkFN = frontN // 2\n    checkFNW = S[0:frontN]\n    for i in range(checkFN):\n        temp = (i + 1) * -1\n        if checkFNW[i] == checkFNW[temp]:\n            continue\n        else:\n            print('No')\n            return\n    checkBN = n - backN\n    checkBNW = S[backN - 1:n]\n    for i in range(checkBN // 2):\n        temp = (i + 1) * -1\n        if checkBNW[i] == checkBNW[temp]:\n            continue\n        else:\n            print('No')\n            return\n    for i in range(n // 2):\n        temp = (i + 1) * -1\n        if S[i] == S[temp]:\n            continue\n        else:\n            print('No')\n            return\n    print('Yes')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "15641": {"id": 15641, "code": "def main():\n    import sys\n    sys.setrecursionlimit(10000000)\n    from collections import Counter, deque\n    from itertools import combinations\n    from math import floor, ceil\n    x = 64145;y = 123;z = 456\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12734": {"id": 12734, "code": "def solve():\n    X = 5\n    if X == 5 or X == 7 or X == 3:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "1336": {"id": 1336, "code": "def main():\n    s = 111\n    for n in range(111, 1000, 111):\n        if s <= n:\n            print(n)\n            return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18722": {"id": 18722, "code": "def solve():\n  H = 14\n  W = 12\n  N = 112\n  ans = -(-N//max(H,W))\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3669": {"id": 3669, "code": "def main():\n    a = 12;b = 4\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13952": {"id": 13952, "code": "import sys\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 0\n    i = 0\n    while 1:\n        if i == N:\n            break\n        a = i\n        while a < N-1 and A[a] <= A[a+1]:\n            a += 1\n        b = i\n        while b < N-1 and A[b] >= A[b+1]:\n            b += 1\n        i = max(a,b) + 1\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17819": {"id": 17819, "code": "s = \"1700\"\ns_front=int(s[0]+s[1])\ns_end=int(s[2]+s[3])\ndef MM(x):\n    if 1<=x<=12:return True\n    else:return False\nif MM(s_front) and MM(s_end):print(\"AMBIGUOUS\")\nelif MM(s_front) and not MM(s_end):print(\"MMYY\")\nelif not MM(s_front) and MM(s_end):print(\"YYMM\")\nelse:print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16014": {"id": 16014, "code": "def main():\n    A = 20;B = 15\n    print(max(A - 2*B, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "6895": {"id": 6895, "code": "def solve():\n    H = 10;N = 3\n    A = [4, 5, 6]\n    A_sum = sum(A)\n    if A_sum >= H:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10601": {"id": 10601, "code": "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nA = 1;B = 1;K = 1\nset_a = set(make_divisors(A))\nset_b = set(make_divisors(B))\nset_ab = set_a.intersection(set_b)\nlist_ab = list(set_ab)\nlist_ab.sort()\nprint(list_ab[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13371": {"id": 13371, "code": "def main():\n str = \"haiku,atcoder,tasks\"\n print(str.replace(',',' '))\nmain()", "coverage": [">", ">", ">", ">"]}, "16647": {"id": 16647, "code": "import sys\ndef convert(x):\n    return 1 if x == 'H' else 0\na = \"H\";b = \"H\"\na = convert(a)\nb = convert(b)\ndef main():\n    ans = 'D' if a ^ b else 'H'\n    print(ans)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11113": {"id": 11113, "code": "S = \"level\"\nlenS = len(S)\nans = \"No\"\ndef checkPalindrome(string):\n    l = len(string)\n    string2 = string[::-1]\n    if string[:l//2] == string2[:l//2]:\n        return True\n    else:\n        return False\nif checkPalindrome(S):\n    if checkPalindrome(S[:(lenS-1)//2]):\n        if checkPalindrome(S[(lenS+3)//2-1:]):\n            ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "12566": {"id": 12566, "code": "a = 1;b = 1;k = 1\ndef make_divisors(n): \n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_d = set(make_divisors(a))\nb_d = set(make_divisors(b))\nd = sorted(list(a_d & b_d), reverse=True)\nprint(d[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "9838": {"id": 9838, "code": "def main():\n    n = 6\n    S = \")))())\"\n    left_shortage = 0\n    now = 0\n    for s in S:\n        if s == \"(\":\n            now += 1\n        else:\n            now -= 1\n            left_shortage = min(now, left_shortage)\n    right_shortage = 0\n    now = 0\n    for s in S[::-1]:\n        if s == \")\":\n            now += 1\n        else:\n            now -= 1\n            right_shortage = min(now, right_shortage)\n    print(\"(\"*-left_shortage + S + \")\"*-right_shortage)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "2842": {"id": 2842, "code": "import math\ndef main():\n  s = \"1234567876\"\n  min=abs(int(s[:3])-753)\n  for i in range(1,len(s)-2):\n    if abs(int(s[i:i+3])-753)<min:\n      min=abs(int(s[i:i+3])-753)\n  print(min)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4453": {"id": 4453, "code": "def resolve():\n    s = \"internationalization\"\n    print(\"{}{}{}\".format(s[0],len(s)-2,s[-1]))\nresolve()", "coverage": [">", ">", ">", ">"]}, "12349": {"id": 12349, "code": "def is_kaibun(string):\n    for i in range((len(string)//2)+1):\n        if string[i] != string[len(string)-i-1]:\n            return False\n    else:\n        return True\nS = \"level\"\nif is_kaibun(S) and is_kaibun(S[0:(len(S)-1)//2]) and is_kaibun(S[((len(S)+3)//2)-1:len(S)]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "4515": {"id": 4515, "code": "def main():\n    s = \"xyz\"\n    print(f'{s[0]}{len(s) - 2}{s[-1]}')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13589": {"id": 13589, "code": "def resolve():\n    s = \"happy,newyear,enjoy\"\n    print(s.replace(',',' '))\nresolve()", "coverage": [">", ">", ">", ">"]}, "4104": {"id": 4104, "code": "import datetime\ndef main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    start = H1 * 60 + M1\n    end = H2 * 60 + M2\n    ans = end - start - K\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9930": {"id": 9930, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import chain\ndef main():\n    n = 3\n    s = ('(', ')', ')')\n    cnt = 0\n    cnt_ushiro = 0\n    cnt_mae = 0\n    for se in s:\n        cnt += se == ')'\n        cnt -= se == '('\n        cnt_mae = max(cnt_mae, cnt)\n    cnt -= cnt_mae\n    if cnt < 0:\n        cnt_ushiro = -cnt\n    s_mae = ('(') * cnt_mae\n    s_ushiro = (')') * cnt_ushiro\n    r = tuple(chain(s_mae, s, s_ushiro))\n    print(*r,sep=\"\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "10612": {"id": 10612, "code": "a = 1;b = 1;k = 1\ndef divisor(n):\n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = set(table)\n    return table\nablist = sorted(list(divisor(a) & divisor(b)),reverse=True)\nprint(ablist[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15968": {"id": 15968, "code": "import sys\nimport math\nimport bisect\ndef main():\n    n = 12;m = 4\n    n = max(0, n - 2 * m)\n    print(n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12027": {"id": 12027, "code": "def p_a():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    print(0 if m1 == m2 else 1)\np_a()", "coverage": [">", ">", ">", ">", ">"]}, "14794": {"id": 14794, "code": "n = 1;p = 1\na = [50]\nodd=0\neven=0\nnCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\no_pattern=0\nfor i in range(p,odd+1,2):\n    o_pattern += cmb(odd,i)\ne_pattern=0\nfor i in range(even+1):\n    e_pattern += cmb(even,i)\nprint(o_pattern*e_pattern)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "998": {"id": 998, "code": "def main():\n    s = 111\n    for n in range(s, 1000):\n        ns=str(n)\n        if ns[0] == ns[1] == ns[2]:\n            print(ns)\n            return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1323": {"id": 1323, "code": "import sys\ndef input(): return \"750\".strip()\ndef resolve():\n    n = 750\n    print(-(-n // 111)*111)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "1438": {"id": 1438, "code": "import sys\ndef input(): return \"750\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nN = 750\nprint(-(-N//111)*111)", "coverage": [">", ">", ">", ">", ">", ">"]}, "11651": {"id": 11651, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    S = \"SUN\"\n    weeks = ['SUN','MON','TUE','WED','THU','FRI','SAT']\n    for i in range(len(weeks)):\n        if weeks[i] == S:\n            print(7-i)\n            return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3532": {"id": 3532, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 12;b = 4\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2960": {"id": 2960, "code": "def main():\n    owner_num = 753\n    s = \"1111111111\"\n    min_diff = int(s[0:3])\n    for i in range(3,len(s)+1):\n        runrun_num = int(s[(i-3):i])\n        if abs(owner_num - runrun_num) < abs(owner_num - min_diff):\n            min_diff = runrun_num\n    print(abs(owner_num - min_diff))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "10815": {"id": 10815, "code": "def isPalindrome(str):\n  ret = True\n  l = len(str)\n  end = int(l/2)\n  for i in range(end):\n    if str[i] != str[-1-i]:\n      ret = False\n  return ret\nans = \"Yes\"\nstr = \"akasaka\"\nstr_l = len(str)\nif isPalindrome(str) and isPalindrome(str[:int(str_l/2)]) and isPalindrome(str[-int(str_l/2):]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12760": {"id": 12760, "code": "def a753(x):\n    return \"YES\" if x == 3 or x == 5 or x == 7 else \"NO\"\ndef main():\n    x = 5\n    print(a753(x))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12630": {"id": 12630, "code": "def main():\n    X = 5\n    if 105 % X == 0 and X > 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "655": {"id": 655, "code": "def main():\n    K = 101\n    cnt = 1\n    a = 7%K\n    s = {a}\n    for i in range(K):\n        if a%K == 0:\n            print(cnt)\n            return\n        a = a*10 + 7\n        a = a % K\n        if a in s:\n            print(-1)\n            return\n        s.add(a)\n        cnt += 1\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14407": {"id": 14407, "code": "import sys\nsys.setrecursionlimit(1000000)\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\ndef main(i, A):\n  global N\n  global ans\n  if A[i] == A[i+1]:\n    if i == N-2:\n      ans += 1\n      return ans\n    else:\n      return main(i+1, A)\n  elif A[i] < A[i+1]:\n    while i < N-1:\n      if A[i] <= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\n  else:\n    while i < N-1:\n      if A[i] >= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\nif N == 1:\n  print(1)\nelse:\n  print(main(0, A))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "13017": {"id": 13017, "code": "def main():\n    from sys import stdin\n    r = \"\"\n    if r in ('3','5','7'):\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "321": {"id": 321, "code": "def main():\n    S = ['a']\n    k = 25\n    ans = []\n    for s in S:\n        if s != 'a' and ord(s) >= 123 - k:\n            ans.append('a')\n            k -= 123 - ord(s)\n        else:\n            ans.append(s)\n    if k > 0:\n        ans[-1] = chr((ord(ans[-1]) + k - 97) % 26 + 97)\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "14480": {"id": 14480, "code": "def main():\n  N = 7\n  A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n  ans = 1\n  x=y=0\n  for i in range(1, N):\n    if A[i - 1] < A[i]:\n      x = 1\n    if A[i - 1] > A[i]:\n      y = 1\n    if x and y:\n      ans += 1\n      x = y = 0\n  print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "311": {"id": 311, "code": "def decode(x):\n    return ord(x) - 97\ndef encode(x):\n    return chr(x + 97)\nS = [2, 14, 3, 4, 5, 4, 18, 19, 8, 21, 0, 11]\nK = 100\nfor i in range(len(S) - 1):\n    if S[i] == 0:\n        continue\n    if 26 - S[i] <= K:\n        K -= 26 - S[i]\n        S[i] = 0\nS[-1] = (S[-1] + K) % 26\nprint(\"\".join(map(encode, S)))", "coverage": [">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19289": {"id": 19289, "code": "def fac1(num, div):\n    if num == 0:\n        return 0\n    return num // div + fac1(num // div, div)\ndef fac2(num, div):\n    return fac1(num // 2, div)\ndef main():\n    num = 5\n    if num % 2 == 1:\n        return 0\n    else:\n        return fac2(num, 5)\nif __name__ == '__main__':\n    ans = main()\n    print(ans)", "coverage": [">", "!", "!", "!", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "18114": {"id": 18114, "code": "def is_month(x):\n  if 1 <= x <= 12:\n    return True\n  else:\n    return False\nS = \"0112\"\nfirst, latter = is_month(int(S[:2])), is_month(int(S[2:]))\nif first and latter:\n  ans = \"AMBIGUOUS\"\nelif not first and not latter:\n  ans = \"NA\"\nelif first:\n  ans = \"MMYY\"\nelse:\n  ans = \"YYMM\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "13535": {"id": 13535, "code": "def solve():\n    print(\"happy,newyear,enjoy\".replace(',', ' '))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">"]}, "7999": {"id": 7999, "code": "def main():\n    n = 8;k = 3\n    As = [7, 3, 1, 8, 4, 6, 2, 5]\n    ans = (n-2) // (k-1) + 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8489": {"id": 8489, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 4\n    a1 = chain(tuple([0]), tuple(map(int, \"1 1 1 1\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"1 1 1 1\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4564": {"id": 4564, "code": "def main():\n    s = \"internationalization\"\n    res = s[0]\n    res += str(len(s) - 2)\n    res += s[-1]\n    print(res)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5983": {"id": 5983, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    N = 5\n    ans = int(N / 2 + 0.6)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19459": {"id": 19459, "code": "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef ngcd(a):\n    res = a[0]\n    for i in range(len(a)):\n        if res != 1:\n            res = gcd(a[i], res)\n    return res\ndef lcm(a,b):\n    return a * b // gcd(a, b)\ndef nlcm(a):\n    res = a[0]\n    for i in range(len(a)):\n        res = lcm(res, a[i])\n    return res\nn = 10\nprint(lcm(n, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "10783": {"id": 10783, "code": "def main():\n    S = \"atcoder\"\n    n = len(S)\n    frontN = (n - 1) // 2\n    backN = (n + 3) // 2\n    checkFN = frontN // 2\n    checkFNW = S[0:frontN]\n    for i in range(checkFN):\n        temp = (i + 1) * -1\n        if checkFNW[i] == checkFNW[temp]:\n            continue\n        else:\n            print('No')\n            return\n    checkBN = n - backN\n    checkBNW = S[backN - 1:n]\n    for i in range(checkBN // 2):\n        temp = (i + 1) * -1\n        if checkBNW[i] == checkBNW[temp]:\n            continue\n        else:\n            print('No')\n            return\n    for i in range(n // 2):\n        temp = (i + 1) * -1\n        if S[i] == S[temp]:\n            continue\n        else:\n            print('No')\n            return\n    print('Yes')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "10120": {"id": 10120, "code": "from collections import deque\ndef main():\n    N = 8\n    S = [')', ')', ')', ')', '(', '(', '(', '(']\n    Stmp = S.copy()\n    Stmp = deque(Stmp)\n    cnt = 0\n    for s in S:\n        cnt += (s=='(') - (s==')')\n        if cnt < 0:\n            Stmp.appendleft('(')\n            cnt += 1\n    for _ in range(cnt):\n        Stmp.append(')')\n    print(''.join(Stmp))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2827": {"id": 2827, "code": "import sys\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return map(int, stdin.readline().split())\ndef nl(): return list(map(int, stdin.readline().split()))\ndef main():\n    S = \"1234567876\"\n    ans = 1000\n    for i in range(len(S) - 2):\n        s = int(S[i:i + 3])\n        ans = min(ans, (abs(s - 753)))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16867": {"id": 16867, "code": "def main():\n    a = \"D\";b = \"H\"\n    if a == 'H' and b == 'H':\n        print('H')\n    elif a == 'D' and b == 'H':\n        print('D')\n    elif a == 'H' and b == 'D':\n        print('D')\n    elif a == 'D' and b == 'D':\n        print('H')\nmain()", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "8564": {"id": 8564, "code": "def resolve():\n    n = 4\n    a_1 = [1, 1, 1, 1]\n    a_2 = [1, 1, 1, 1]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1437": {"id": 1437, "code": "import sys\ndef input(): return \"112\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nN = 112\nprint(-(-N//111)*111)", "coverage": [">", ">", ">", ">", ">", ">"]}, "12209": {"id": 12209, "code": "def han(l):\n    for i in range((len(l) // 2)):\n        if l[i] != l[-i - 1]:\n            return 0\n    return 1\nS = \"atcoder\"\nf1 = han(S)\nS2 = S[0:(len(S) // 2)]\nS3 = S[len(S)//2 + 1 : len(S)]\nf2 = han(S2)\nf3 = han(S3)\nif f1 * f2 * f3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9086": {"id": 9086, "code": "import sys\ndef input(): return \"2017/01/07\".strip()\ndef main():\n    s = \"2017/01/07\"\n    print(\"2018\" + s[4:])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12702": {"id": 12702, "code": "def ya(boo):\n  if boo:\n    print(\"Yes\")\n  else:\n    print(\"No\")\ndef yay(boo):\n  if boo:\n    print(\"YES\")\n  else:\n    print(\"NO\")\nyay(\"5\" in \"753\")", "coverage": [">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "10567": {"id": 10567, "code": "A = 8;B = 12;K = 2\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\nlstA = make_divisors(A)\nlstB = make_divisors(B)\nfin = []\nfor i in lstA:\n    if i in lstB:\n        fin.append(i)\nfin.sort(reverse = True)\nprint(fin[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18848": {"id": 18848, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    h = 14\n    w = 12\n    n = 112\n    if h>=w:\n        print((n-1)//h+1)\n    else:\n        print((n-1)//w+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "12275": {"id": 12275, "code": "string = \"level\"\npalindrome=False\npalin1=False\ndef palin(string):\n    palindrome=False\n    if string==string[::-1]:\n        palindrome=True\n    return palindrome\npalindrome=palin(string)\nif palin(string[int((len(string)-1)/2)])==True and palindrome==True:\n    palin1=True\nif palin(string[int((len(string)+3)/2)-1:len(string)])==True and palin1==True:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16057": {"id": 16057, "code": "def main():\n    a = 20;b = 30\n    ans = a - 2*b\n    ans = 0 if ans < 0 else ans \n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19234": {"id": 19234, "code": "import sys\nsys.setrecursionlimit(2000)\ndef check_2(num):\n    if num % 2 != 0:\n        return 0\n    return check_2(num // 2) + 1\ndef check_5(num):\n    if num % 5 != 0:\n        return 0\n    return check_5(num // 5) + 1\ndef f_2(num):\n    if num < 2:\n        return 0\n    return f_2(num - 2) + check_2(num)\ndef f_5(num):\n    if num < 5:\n        return 0\n    return f_5(num - 2) + check_5(num)\nN = 12\nif N < 10:\n    print(0)\n    exit()\nif N % 2 != 0:\n    print(0)\n    exit()\ni = 1\nans = 0\nwhile N // ((5 ** i) * 2) > 0:\n    ans += N // ((5 ** i) * 2)\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", ">", "!", "!", "!", ">", "!", "!", "!", ">", "!", "!", "!", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "3893": {"id": 3893, "code": "def main():\n    chair_width = 100000;person_width = 1;space = 1\n    print((chair_width - space) // (person_width + space))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "12127": {"id": 12127, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    a = 11;b = 16\n    c = 11;d = 17\n    if d==1:\n        print(1)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "7162": {"id": 7162, "code": "def main():\n    h = 20;n = 3\n    a = [4, 5, 6]\n    if sum(a)>=h:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "19375": {"id": 19375, "code": "def main():\n    n = 3\n    print(n) if n%2==0 else print(n*2)     \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3891": {"id": 3891, "code": "def main():\n    chair_width = 13;person_width = 3;space = 1\n    print((chair_width - space) // (person_width + space))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "16406": {"id": 16406, "code": "def resolve():\n    n = 5\n    a = [2, 4, 6, 9, 11]\n    cost = float(\"INF\")\n    mn = 0\n    mx = a[-1]\n    for aa in a[:-1]:\n        tmp = abs(mx - aa * 2)\n        if tmp < cost:\n            cost = tmp\n            mn = aa\n    print(mx, mn)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14957": {"id": 14957, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import Counter \ndef read():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    return N, P, A\ndef binom_64bit(n):\n    c = [1 for i in range(n+1)]\n    for k in range(1, n):\n        c[k] = c[k-1] * (n-k+1) // k\n    return c\ndef solve(N, P, A):\n    B = Counter([a % 2 for a in A])\n    C0 = binom_64bit(B[0])\n    C1 = binom_64bit(B[1])\n    ans = 0\n    if P == 1:\n        for i in range(0, B[0]+1):\n            for j in range(1, B[1]+1, 2):\n                ans += C0[i] * C1[j]\n    else:\n        for i in range(0, B[0]+1):\n            for j in range(0, B[1]+1, 2):\n                ans += C0[i] * C1[j]\n    return ans\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "7120": {"id": 7120, "code": "H = 20;N = 3\nspecial_move = ['4', '5', '6']\ndef answer(H: int, N: int, special_move: list) -> str:\n    damage = 0\n    for i in range(0, N):\n        damage += int(special_move[i])\n    if damage >= H:\n        return 'Yes'\n    else:\n        return 'No'\nprint(answer(H, N, special_move))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "470": {"id": 470, "code": "INF = 10 ** 9\nimport sys\nsys.setrecursionlimit(100000000)\ndy = (-1,0,1,0)\ndx = (0,1,0,-1)\nfrom  collections import deque\ndef main():\n    s = ['a']\n    k = 25\n    for i in range(len(s)):\n        if s[i] == 'a':\n            continue\n        if k >= ord('z') - ord(s[i]) + 1:\n            k -= ord('z') - ord(s[i]) + 1\n            s[i] = 'a'\n            if k == 0:\n                break\n    if k > 0:\n        s[-1] = chr((ord(s[-1]) + k - 97)%26 + 97)\n    print(''.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "3530": {"id": 3530, "code": "def resolve():\n    A = 20;B = 15\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "54": {"id": 54, "code": "import sys\ninput = sys.stdin.readline\ndef read():\n    s = \"codefestival\"\n    K = 100\n    return s, K\ndef solve(s, K):\n    ans = []\n    for a in s:\n        c = (ord(\"z\") - ord(a) + 1) % 26\n        if c <= K:\n            K -= c\n            ans.append(\"a\")\n        else:\n            ans.append(a)\n    if K > 0:\n        c = (ord(ans[-1]) - ord(\"a\") + K) % 26\n        ans[-1] = chr(c + ord(\"a\"))\n    return \"\".join(ans)\nif __name__ == '__main__':\n    inputs = read()\n    outputs = solve(*inputs)\n    if outputs is not None:\n        print(\"%s\" % str(outputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3999": {"id": 3999, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    print((max(0, (h2 - h1) * 60 + (m2 - m1) - k)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11160": {"id": 11160, "code": "def main(S):\n    N = len(S)\n    if S == S[::-1] and S[:(N - 1) // 2] == S[:(N - 1) // 2][::-1] and S[(N + 1) // 2:] == S[(N + 1) // 2:][::-1]:\n        return True\n    else:\n        return False\nS = ['l', 'e', 'v', 'e', 'l']\nif main(S) == True:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "14504": {"id": 14504, "code": "from math import factorial\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n - r)\nn = 3;p = 0\na = [1, 1, 1]\neven = 0\nodd = 0\nfor i in a:\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nif p == 0:\n    temp = 0\n    for i in range(0,odd+1,2):\n        temp += nCr(odd,i)\n    print(int(2**even * temp))\nelse:\n    temp = 0\n    for i in range(1,odd+1,2):\n        temp += nCr(odd,i)\n    print(int(2**even * temp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "2114": {"id": 2114, "code": "def solve():\n    N = 10;A = 7;B = 5\n    max_both = B if A > B else A\n    min_both = (A + B) - N if (A + B) > N else 0\n    print(max_both, min_both)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14037": {"id": 14037, "code": "def solve():\n  n = 7\n  a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n  g, z = 0, 0\n  cut = 1\n  for i in range(n-1):\n    if a[i+1] > a[i]:\n      g += 1\n    elif a[i+1] < a[i]:\n      z += 1\n    if g != 0 and z != 0:\n      cut += 1\n      g, z = 0, 0\n  print(cut)\n  return 0\nif __name__ == \"__main__\":\n  solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13216": {"id": 13216, "code": "def main():\n    stdIn = \"abcde,fghihgf,edcba\"\n    stdOut = solve(stdIn)\n    print(stdOut)\ndef solve(stdIn):\n    return stdIn.replace(',',' ')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4975": {"id": 4975, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    s = \"internationalization\"\n    ans = \"\".join([s[0], str(len(s) - 2), s[-1]])\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14755": {"id": 14755, "code": "from math import factorial\nn = 3;p = 0\na_input = [1, 1, 1]\ndef calc_comb(n,r):\n    return factorial(n) / factorial(r) / factorial(n - r)\nodd_len = 0\neven_len = 0\nfor i in range(n):\n    if a_input[i]%2==0:\n        even_len+=1\n    else:\n        odd_len+=1\nans=0\neven_comb = 2**even_len\nif p==0:\n    if odd_len%2==0:\n        for i in range(0,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\n    if odd_len%2==1:\n        for i in range(1,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\nelse:\n    if odd_len%2==0:\n        for i in range(1,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\n    if odd_len%2==1:\n        for i in range(0,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13317": {"id": 13317, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    ans = s.replace(',', ' ')\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12495": {"id": 12495, "code": "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y,x%y)\na = 8;b = 12;k = 2\nans = gcd(a,b)\ncnt = 1\nwhile cnt < k:\n    ans -= 1\n    if a % ans == 0 and b % ans == 0:\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14827": {"id": 14827, "code": "import sys,math\ninput = sys.stdin.readline\ndef f(s):\n    n = int(s)%2\n    return n\nN = 1;P = 1\nA = [0]\nc0 = A.count(0)\nc1 = A.count(1)\nfact = [1]* (c1+1)\nfor i in range(1,c1+1):\n    fact[i]= fact[i-1]*i\ncnt = 0\nfor i in range(P,c1+1,2):\n    cnt += fact[c1]//fact[i]//fact[c1-i]\nprint(cnt*pow(2,c0))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "15619": {"id": 15619, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    x = 12;y = 3;z = 1\n    x = x - z\n    ans = x // (y + z)\n    print(ans)\n    return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3176": {"id": 3176, "code": "def main():\n    S = \"1111111111\"\n    t = 0\n    diff = 0\n    near = 10000\n    for i in range(2, len(S)):\n        t = int(S[i-2]) * 100 + int(S[i-1]) * 10 + int(S[i])\n        if 753 < t:\n            diff = t - 753\n        else:\n            diff = 753 - t\n        if near > diff:\n            near = diff\n    print(near) \nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "9026": {"id": 9026, "code": "import sys\nfrom itertools import combinations\ninput = sys.stdin.readline\ndef main():\n    a = 1\n    b = 2\n    c = 4\n    d = 8\n    e = 9\n    k = 15\n    ans = \"Yay!\"\n    for p, q in combinations([a, b, c, d, e], 2):\n        if abs(p - q) > k:\n            ans = \":(\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "10414": {"id": 10414, "code": "a = 100;b = 50;k = 4\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_yakusu = make_divisors(a)\nb_yakusu = make_divisors(b)\nab_yakusu = sorted(set(a_yakusu) & set(b_yakusu), reverse=True)\nprint(ab_yakusu[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2107": {"id": 2107, "code": "import sys\ndef input(): return \"10 3 5\".strip()\ndef resolve():\n    n = 10;a = 3;b = 5\n    ans1=min(a,b)\n    ans2=max(a+b-n,0)\n    print(ans1,ans2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3378": {"id": 3378, "code": "def main():\n    a = 20;b = 30\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "16343": {"id": 16343, "code": "N = 2\nA = [100, 0]\nA.sort()\ndef binary(l,i):\n  r=N-1\n  while l<=r:\n    m=(l+r)//2\n    if A[m]==i:\n      return A[m]\n    elif A[m]>i:\n      r=m-1\n    else:\n      l=m+1\n  x=abs(A[m]-i)\n  for j in range(max(0,m-2),min(m+3,N-1)):\n    if x >= abs(A[j]-i):\n      res = A[j]     \n      x=abs(A[j]-i)\n  return res\nprint(A[-1],binary(1,A[-1]/2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3451": {"id": 3451, "code": "def main():\n a = 12;b = 4\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "18522": {"id": 18522, "code": "import sys\nreadline = sys.stdin.readline\ndef main():\n    H = 14\n    W = 12\n    N = 112\n    print(-(-N // max(H, W)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3892": {"id": 3892, "code": "def main():\n    chair_width = 12;person_width = 3;space = 1\n    print((chair_width - space) // (person_width + space))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "2930": {"id": 2930, "code": "def main():\n    s = \"1111111111\"\n    n = len(s)\n    min_diff = 1000\n    for i in range(n - 2):\n        diff = abs(int(s[i: i+3]) - 753)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4198": {"id": 4198, "code": "def main() -> None:\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    if h1 > h2:\n        h2 += 24\n    length = (h2*60+m2) - (h1*60+m1)\n    print(max(0, length - k))\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "18325": {"id": 18325, "code": "def main():\n    H = 2\n    W = 100\n    N = 200\n    if H < W:\n        H, W = W, H\n    ans = N//H\n    if N%H != 0:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15845": {"id": 15845, "code": "def main():\n    x = 12;y = 3;z = 1\n    x -= y + z * 2\n    ans = 0\n    if x < 0:\n        print(ans)\n    while x >= 0:\n        ans += 1\n        x -= y + z\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "374": {"id": 374, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\n    s = \"xyz\"\n    k = 4\n    r = \"\"\n    for se in s:\n        if se == 'a':\n            r += 'a'\n        else:\n            if 123 - ord(se) <= k:\n                r += 'a'\n                k -= (123 - ord(se))\n            else:\n                r += se\n    if k:\n        k = k % 26\n        lastc = chr(k + ord(r[-1]))\n        r = r[:-1] + lastc\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">", ">"]}, "16468": {"id": 16468, "code": "import bisect\nimport sys\ndef main(args):\n    n = 5\n    A = [6, 9, 4, 2, 11]\n    A.sort()\n    ans = [max(A), 0]\n    ind = bisect.bisect_left(A ,ans[0]//2)\n    if A[ind] == ans[0]//2:\n        ans[1] = ans[0]//2\n    else:\n        r1 = min(A[ind],ans[0]-A[ind])\n        r2 = min(A[ind-1],ans[0]-A[ind-1])\n        if r1 > r2:\n            ans[1] = A[ind]\n        else:\n            ans[1] = A[ind-1]\n    print(*ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10415": {"id": 10415, "code": "a = 1;b = 1;k = 1\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_yakusu = make_divisors(a)\nb_yakusu = make_divisors(b)\nab_yakusu = sorted(set(a_yakusu) & set(b_yakusu), reverse=True)\nprint(ab_yakusu[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "16631": {"id": 16631, "code": "def actual(a, b):\n    if a == b:\n        return 'H'\n    return 'D'\na = \"D\";b = \"D\"\nprint(actual(a, b))", "coverage": [">", ">", ">", "!", ">", ">"]}, "14790": {"id": 14790, "code": "N = 2;P = 0\nA = [1, 3]\ndef comb(n, k):\n  ret = 1\n  for i in range(1, k+1):\n    ret = ret * (n+1-i) // i\n  return ret\nEven = 0\nOdd = 0\nfor a in A:\n  if a % 2 == 0:\n    Even += 1\n  else:\n    Odd += 1\nans = 0\nwhile P <= Odd:\n  ans += comb(Odd, P)\n  P += 2\nprint(ans * 2 ** Even)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "16414": {"id": 16414, "code": "def main():\n  n = 5\n  a = [6, 9, 4, 2, 11]\n  a = sorted(a)\n  a_i = a[-1]\n  a_j = 0\n  dist = a_i\n  for i in range(len(a)-1):\n    if abs(a_i/2-a[i]) < dist:\n      a_j = a[i]\n      dist = abs(a_i/2-a[i])\n  print(a_i, a_j)\nif __name__ == \"__main__\":\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15530": {"id": 15530, "code": "def main():\n    X = 64146;Y = 123;Z = 456\n    print(int((X - Z) / (Y + Z)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3498": {"id": 3498, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 20;b = 30\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19344": {"id": 19344, "code": "N = 999999999\ndef gcd(x, y):\n    if x == 0:\n        return y\n    else:\n        return gcd(y%x, x)\nprint((2 * N) // gcd(2, N))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "903": {"id": 903, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    K = 2\n    a = 0\n    ans = 0\n    for _ in range(K+1):\n        a = 10*a+7\n        a %= K\n        ans += 1\n        if a%K == 0:\n            break\n    if ans == K+1: \n        print(-1)\n    else:\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "17760": {"id": 17760, "code": "def main():\n  s = \"0112\"\n  sa=int(s[:2])\n  sb=int(s[2:])\n  if 1 <= sa and sa <= 12:\n    if 1 <= sb and sb <= 12:\n      print('AMBIGUOUS')\n    else:\n      print('MMYY')\n  else:\n    if 1 <= sb and sb <= 12:\n      print('YYMM')\n    else:\n      print('NA')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14650": {"id": 14650, "code": "import math\ndef main():\n    N = 1;P = 1\n    A = [50]\n    modA = list()\n    for a in A:\n        modA.append(a % 2)\n    zero = modA.count(0)\n    one = modA.count(1)\n    ans = tmp = 0\n    f = math.factorial\n    if P == 0:\n        for i in range(0, one + 1, 2):\n            tmp += f(one) // (f(i) * f(one - i))\n    else:\n        for i in range(1, one + 1, 2):\n            tmp += f(one) // (f(i) * f(one - i))\n    if zero > 0:\n        ans = tmp * 2 ** zero\n    else:\n        ans = tmp\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "14797": {"id": 14797, "code": "n = 1;p = 1\na = [0]\nnCr = {}\ndef cmb(n, r):\n    if r == 0 or r == n: return 1\n    if r == 1: return n\n    if (n,r) in nCr: return nCr[(n,r)]\n    nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n    return nCr[(n,r)]\noishii = a.count(1)\nc = sum([cmb(oishii,i) for i in range(p,oishii+1,2)])\nprint(c*2**(n-oishii))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "1070": {"id": 1070, "code": "import sys\nfrom functools import lru_cache\ndef input(): return \"750\".strip()\ndef main():\n    n = 750\n    for i in range(1, 10):\n        if n <= 111 * i:\n            print(111 * i)\n            return \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14988": {"id": 14988, "code": "import sys\ndef MI(): return map(int,\"2 0\".rstrip().split())\ndef LI(): return list(map(int,\"1 3\".rstrip().split()))  \nN,P = MI()\nA = LI()\nx = sum(A[i] % 2 == 0 for i in range(N))  \ny = N-x  \nif y == 0:\n    print(0 if P == 1 else 2**x)\nelse:\n    print(2**(x+y-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3356": {"id": 3356, "code": "def main():\n    A = 20;B = 15\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8290": {"id": 8290, "code": "import math\ndef Minimization(n , k , al):\n    ans = math.ceil((n - 1) / (k - 1))\n    return ans\ndef main():\n    n = 4;k = 3\n    al = [2, 3, 1, 4]\n    print(Minimization(n , k , al))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16873": {"id": 16873, "code": "def solve():\n    a = \"D\";b = \"H\"\n    if a == 'H':\n        print(b)\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "2298": {"id": 2298, "code": "def solve(n, a, b):\n    return \" \".join(map(str, [min(a,b), max(0,a+b-n)]))\nn = 100;a = 100;b = 100\nprint(solve(n, a, b))", "coverage": [">", ">", ">", ">"]}, "11096": {"id": 11096, "code": "s = \"level\"\nn=len(s)\ns1=s[:(n-1)//2]\ns2=s[(n+3)//2-1:]\ndef check(s):\n  i=0\n  j=len(s)-1\n  while j>i:\n    if s[j]!=s[i]:\n      return False\n    j-=1\n    i+=1\n  return True\nif check(s) and check(s1) and check(s2):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14741": {"id": 14741, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\noddC = 0\nevenC = 0\nfor a in A:\n    if a % 2 == 1:\n        oddC += 1\n    else:\n        evenC += 1\nc = 0\nif P == 0:\n    oddcombi = 0\n    for i in range(oddC+1):\n        if i % 2 == 1:\n            continue\n        oddcombi += combinations_count(oddC,i)\n    evencombi = 0\n    for i in range(evenC+1):\n        evencombi += combinations_count(evenC,i)\n    print(oddcombi*evencombi)\nelse:\n    oddcombi = 0\n    for i in range(oddC+1):\n        if i % 2 == 0:\n            continue\n        oddcombi += combinations_count(oddC,i)\n    evencombi = 0\n    for i in range(evenC+1):\n        evencombi += combinations_count(evenC,i)\n    print(oddcombi*evencombi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6813": {"id": 6813, "code": "def main():\n    h = 10;n = 3\n    inlis = [4, 5, 6]\n    total = sum(inlis)\n    if h <= total:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14616": {"id": 14616, "code": "N = 3;P = 0\nA = [1, 1, 1]\neven = 0\nodd = 0\nfor i in A:\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nimport math\ndef Perm(n, r):\n    return math.factorial(n)//math.factorial(n-r)\ndef comb(n, r):\n    return Perm(n, r)//math.factorial(r)\nif P == 0:\n    ans = 0\n    for x in range(odd+1):\n        if x % 2 == 0:\n            ans += comb(odd,x)\n    ans *= 2**even\n    print(ans)\nelse:\n    ans = 0\n    for x in range(odd+1):\n        if x % 2 == 1:\n            if odd != 0:\n                ans += comb(odd,x)\n    ans *= 2**even\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "14768": {"id": 14768, "code": "import sys\nimport math\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 2;P = 0\n    A = [1, 3]\n    odd = 0\n    even = 0\n    ans = 0\n    def comb(n, r):\n        return math.factorial(n) // math.factorial(r) // math.factorial(n - r)\n    for a in A:\n        if a % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if P == 0:\n        for i in range(0, odd + 1, 2):\n            for j in range(even + 1):\n                ans += comb(odd, i) * comb(even, j)\n        print(ans)\n    else:\n        for i in range(1, odd + 1, 2):\n            for j in range(even + 1):\n                ans += comb(odd, i) * comb(even, j)\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "6663": {"id": 6663, "code": "def resolve():\n    H = 10;N = 3\n    A = [4, 5, 6]\n    print(\"Yes\" if sum(A) >= H else \"No\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10963": {"id": 10963, "code": "S = \"akasaka\"\nN = len(S)\ndef isPalindrome(s):\n  n = len(s)\n  re_s = s[::-1]\n  for i in range(n // 2):\n    if re_s[i] != s[i]:\n      break\n  else:\n    return True\n  return False\nif isPalindrome(S) and isPalindrome(S[:N // 2]) and isPalindrome(S[(N + 1) // 2:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", "!", "!"]}, "730": {"id": 730, "code": "import sys\ndef input(): return \"101\".rstrip()\ndef main():\n    k = 101\n    keta = 1\n    mod = 7%k\n    if k % 7 == 0:\n        max_k = 9*k//7\n    else:\n        max_k = 9*k\n    while keta < max_k:\n        if mod == 0:\n            print(keta)\n            break\n        mod = (mod*10 + 7)%k\n        keta += 1\n    else:\n        print(-1)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11801": {"id": 11801, "code": "def main(lst):\n    m_1, d_1, m_2, d_2 = lst[0], lst[1], lst[2], lst[3]\n    before = False\n    after = None\n    lst_1 = [1, 3, 5, 7, 8, 10, 12]\n    lst_2 = [2]\n    lst_3 = [4, 6, 9, 11]\n    if m_1 in lst_1:\n        if d_1 == 31:\n            before = True\n            if m_2 == m_1 + 1 or m_2 == 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    elif m_1 in lst_2:\n        if d_1 == 28:\n            before = True\n            if m_2 == 3:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if m_1 in lst_3:\n        if d_1 == 30:\n            before = True\n            if m_2 == m_1 + 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if before == True and after == True:\n        return 1\n    else:\n        return 0\nif __name__ == '__main__':\n    before = [11, 30]\n    after = [12, 1]\n    print(main(before + after))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "10302": {"id": 10302, "code": "def main():\n    a = 1;b = 1;k = 1\n    cnt = 0\n    for i in range(max(a,b), 0, -1):\n        if a % i == 0 and b % i == 0:\n            cnt += 1\n            if cnt == k:\n                print(i)\n                return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14462": {"id": 14462, "code": "def solve():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 0\n    cur = []\n    flag = None\n    for a in A:\n        if not cur:\n            cur.append(a)\n            continue\n        elif cur[-1] == a:\n            cur.append(a)\n        elif flag is None:\n            if cur[-1] > a:\n                flag = False\n            elif cur[-1] < a:\n                flag = True\n            cur.append(a)\n            continue\n        elif flag:  \n            if cur[-1] > a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n        elif not flag:  \n            if cur[-1] < a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n    if cur:\n        ans += 1\n    print(ans)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "5899": {"id": 5899, "code": "def resolve():\n    N = 5\n    import math\n    print(math.ceil(N/2))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "4697": {"id": 4697, "code": "def reducestr(s) : \n  return s[0] + str(len(s[1 : len(s) - 1])) + s[-1]\ns = \"smiles\"\nprint(reducestr(s))", "coverage": [">", ">", ">", ">"]}, "3009": {"id": 3009, "code": "S = \"1234567876\"\ndef f(i):\n    return abs(100*int(S[i])+10*int(S[i+1])+int(S[i+2])-753)\nans = 10000\nfor i in range(len(S)-2):\n    ans = min(ans, f(i))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2178": {"id": 2178, "code": "def LI():\n    return list(map(int, \"100 100 100\".split()))\nN, A, B = LI()\nif A+B <= N:\n    ans = 0\nelse:\n    ans = A+B-N\nprint(min(A, B), ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "19479": {"id": 19479, "code": "import math\ndef main():\n    n = 3\n    x=2*n//math.gcd(2,n)\n    print(x)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10014": {"id": 10014, "code": "def main():\n    n = 8\n    s = \"))))((((\"\n    l, r = 0, 0\n    for c in s:\n        if c == '(':\n            l += 1\n        else:\n            if l:\n                l -= 1\n            else:\n                r += 1\n    print('(' * r + s + ')' * l)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "15066": {"id": 15066, "code": "def resolve():\n    N = 2;P = 0\n    As = [1, 1]\n    is_all_even = True\n    for item in As:\n        if item == 1:\n            is_all_even = False\n    res = 0\n    if is_all_even:\n        if P == 0:\n            res = 2 ** N\n        else:\n            res = 0\n    else:\n        res = 2**(N-1)\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "246": {"id": 246, "code": "def need(a):\n    if a==\"a\":\n        return 0\n    else:\n        return 123-ord(a)\ns = ['a']\nx = 25\ni=0\nwhile x>0:\n    count=need(s[i])\n    if x>=count:\n        s[i]=\"a\"\n        x-=count\n    if i==len(s)-1:\n        s[i]=chr(ord(s[i])+(x%26))\n        x=0\n    i+=1\nprint(\"\".join(s))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12562": {"id": 12562, "code": "import math\ndef main():\n    A = 100;B = 50;K = 4\n    c_list = []\n    for i in range(1, min(A, B)+1):\n        if A%i==0 and B%i==0:\n            c_list.append(i)\n    c_list.reverse()\n    print(c_list[K-1])\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10923": {"id": 10923, "code": "S = \"akasaka\"\ndef kaibun(x):\n    N = len(x)\n    flag = True\n    for i in range(N // 2):\n        if x[i] != x[-i - 1]:\n            flag = False\n    return flag\ntmp1 = kaibun(S)\ntmp2 = kaibun(S[:(len(S) - 1) // 2])\ntmp3 = kaibun(S[(len(S) + 3) // 2 - 1:])\nif tmp1 and tmp2 and tmp3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16380": {"id": 16380, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\nf_inf = float('inf')\nmod = 998244353\ndef resolve():\n    n = 2\n    A = [0, 100]\n    MAX_V = A[-1]\n    target = MAX_V // 2 if MAX_V % 2 == 0 else (MAX_V + 1) // 2\n    diff = f_inf\n    res = A[0]\n    for i in range(n - 1):\n        if abs(target - A[i]) < diff:\n            diff = abs(target - A[i])\n            res = A[i]\n    print(MAX_V, res)\nif __name__ == '__main__':\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14318": {"id": 14318, "code": "from itertools import tee\ndef pairwise(iterable):\n    a, b = tee(iterable)\n    next(b, None)\n    return zip(a, b)\nN = 6\nA = [1, 2, 3, 2, 2, 1]\ncut = 0\nprevious = None\nis_increase = False\nis_decrease = False\nfor a in A:\n    if previous is None:\n        previous = a\n    elif not (is_increase or is_decrease):\n        if previous < a:\n            is_increase = True\n        elif previous > a:\n            is_decrease = True\n        previous = a\n    elif is_increase and a < previous:\n        cut += 1\n        is_increase = False\n    elif is_decrease and a > previous:\n        cut += 1\n        is_decrease = False\n    previous = a\nprint(cut + 1)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10934": {"id": 10934, "code": "def is_p(s):\n    return s == s[::-1]\ns = \"atcoder\"\nn = len(s)\nl = (n - 1)//2\nr = l + 1\nprint('Yes' if is_p(s) and is_p(s[:l]) and is_p(s[r:]) else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7219": {"id": 7219, "code": "def main():\n    h = 210;n = 5\n    a_lst = [31, 41, 59, 26, 53]\n    if sum(a_lst) >= h:\n        ans = \"Yes\"\n    else:\n        ans = \"No\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "9126": {"id": 9126, "code": "def resolve():\n    n = \"2017/01/07\"\n    m = n[:3] + \"8\" + n[4:]\n    print(m)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "15142": {"id": 15142, "code": "def main():\n    from operator import mul\n    from functools import reduce\n    def combinations_count(n, r):\n        r = min(r, n - r)\n        numer = reduce(mul, range(n, n - r, -1), 1)\n        denom = reduce(mul, range(1, r + 1), 1)\n        return numer // denom\n    n = 3;p = 0\n    A = [1, 1, 1]\n    odd = sum([a % 2 == 1 for a in A])\n    even = n - odd\n    if p == 0:\n        odd_sum = 0\n        for i in range(0, odd + 1, 2):\n            odd_sum += combinations_count(odd, i)\n    else:\n        if odd == 0:\n            print(0)\n            exit()\n        else:\n            odd_sum = 0\n            for i in range(1, odd + 1, 2):\n                odd_sum += combinations_count(odd, i)\n    if even == 0:\n        even_sum = 0\n        print(odd_sum)\n    else:\n        even_sum = pow(2, even)\n        print(even_sum * odd_sum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "8930": {"id": 8930, "code": "def solve():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2109": {"id": 2109, "code": "import sys\ndef input(): return \"100 100 100\".strip()\ndef resolve():\n    n = 100;a = 100;b = 100\n    ans1=min(a,b)\n    ans2=max(a+b-n,0)\n    print(ans1,ans2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "909": {"id": 909, "code": "def main():\n    k = 2\n    if k & 0:\n        print(-1)\n        return\n    r = 7 % k\n    l = 0\n    while r and l < k:\n        r = (r * 10 + 7) % k\n        l += 1\n    print([l+1, -1][l == k])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13442": {"id": 13442, "code": "from sys import stdin\ndef S(): return \"happy,newyear,enjoy\".rstrip()\ns = S()\nprint(s.replace(',',' '))", "coverage": [">", ">", ">", ">"]}, "2667": {"id": 2667, "code": "import sys\ndef input(): return \"4 9 0 8\".strip()\ndef resolve():\n    l = {0, 9, 4, 8}\n    if l=={1,7,9,4}:\n        print('YES')\n    else:\n        print('NO')\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16872": {"id": 16872, "code": "def solve():\n    a = \"H\";b = \"H\"\n    if a == 'H':\n        print(b)\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "5948": {"id": 5948, "code": "def main():\n    N = 2\n    if N%2 == 1:\n      print(int((N+1)/2))\n    else:\n      print(int(N/2))\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "2950": {"id": 2950, "code": "import sys\ndef input():\n    return \"35753\".rstrip()\ndef main():\n    S = \"35753\"\n    prime =753\n    ans =1000\n    for i in range(len(S)-2):\n        ans =min(ans, abs(prime-int(S[i:i+3])))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5212": {"id": 5212, "code": "def actual(s):\n    head = s[0]\n    tail = s[-1]\n    length = len(s[1:-1])\n    return '{}{}{}'.format(head, length, tail)  \ns = \"internationalization\"\nprint(actual(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "362": {"id": 362, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    K = 100\n    for i, c in enumerate(s):\n        if c == 'a':\n            continue\n        z = 123 - ord(c)\n        if K >= z:\n            s[i] = 'a'\n            K -= z\n        if K == 0:\n            break\n    s[-1] = chr(((ord(s[-1])-97+K))%26+97)\n    print(''.join(s))\nif __name__ == '__main__':\n     main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9252": {"id": 9252, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = ['2017', '01', '07']\n    s[0] = '2018'\n    print('/'.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12281": {"id": 12281, "code": "def resolve():\n    def is_rotatable(S):\n        for i in range(len(S)//2):\n            if S[i] != S[-1-i]:\n                return False\n        return True\n    S = \"level\"\n    N = len(S)\n    if is_rotatable(S) and is_rotatable(S[:N//2]) and is_rotatable(S[(N//2)+1:]):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17371": {"id": 17371, "code": "def main():\n    S = \"0112\"\n    first = S[:2]\n    second = S[2:]\n    YYMM = False\n    MMYY = False\n    if \"00\" <= first <= \"99\" and \"01\" <= second <= \"12\":\n        YYMM = True\n    if \"01\" <= first <= \"12\" and \"00\" <= second <= \"99\":\n        MMYY = True\n    if YYMM and MMYY:\n        ans = \"AMBIGUOUS\"\n    elif YYMM:\n        ans = \"YYMM\"\n    elif MMYY:\n        ans = \"MMYY\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "1269": {"id": 1269, "code": "import sys\ndef I(): return int(\"750\".rstrip())\nN = I()\nA = [111*i for i in range(1,10)]\nfor i in range(9):\n    if N <= A[i]:\n        print(A[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3174": {"id": 3174, "code": "def main():\n    S = \"1234567876\"\n    t = 0\n    diff = 0\n    near = 10000\n    for i in range(2, len(S)):\n        t = int(S[i-2]) * 100 + int(S[i-1]) * 10 + int(S[i])\n        if 753 < t:\n            diff = t - 753\n        else:\n            diff = 753 - t\n        if near > diff:\n            near = diff\n    print(near) \nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "7428": {"id": 7428, "code": "import sys\ndef main():\n    input = sys.stdin.buffer.readline\n    h = 20\n    a = [4, 5, 6]\n    print(\"Yes\" if sum(a) >= h else \"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "310": {"id": 310, "code": "def decode(x):\n    return ord(x) - 97\ndef encode(x):\n    return chr(x + 97)\nS = [0]\nK = 25\nfor i in range(len(S) - 1):\n    if S[i] == 0:\n        continue\n    if 26 - S[i] <= K:\n        K -= 26 - S[i]\n        S[i] = 0\nS[-1] = (S[-1] + K) % 26\nprint(\"\".join(map(encode, S)))", "coverage": [">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "7025": {"id": 7025, "code": "def main():\n  h = 210;n = 5\n  a = [31, 41, 59, 26, 53]\n  if sum(a)>=h:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18483": {"id": 18483, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H = 14\n    W = 12\n    N = 112\n    q, r, = divmod(N, max(H, W))\n    ans = q\n    ans += 1 if r > 0 else 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12421": {"id": 12421, "code": "s = \"akasaka\"\nn = len(s)\ndef func():\n    if n == 3 and s[0] == s[2]:\n        return\"Yes\"\n    else:\n        a = 0\n        for i in range(n//2):\n            if s[i] == s[n - 1 - i]:\n                a += 1\n                if a == n//2:\n                    b = 0\n                    for j in range((n-1)//4):\n                        if s[j] == s[(n-1)//2 - 1 - j]:\n                            b += 1\n                            if b == (n-1)//4:\n                                c = 0\n                                for k in range((n - (n+3)//2 + 1)//2):\n                                    if s[(n+3)//2 - 1 + k] == s[n - 1 - k]:\n                                        c += 1\n                                        if c == (n - (n+3)//2 + 1)//2:\n                                            return \"Yes\"\n                        else:\n                            return \"No\"\n            else:\n                return \"No\"\nprint(func())", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "12675": {"id": 12675, "code": "def YN(P):\n    if P:\n        print(\"YES\")\n    else:\n        print(\"NO\")\ndef yn(P):\n    if P:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nx = 6\nYN(x==3 or x==5 or x==7)", "coverage": [">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "10581": {"id": 10581, "code": "def resolve():\n    A = 1;B = 1;K = 1\n    mx = min(A, B)\n    ans = []\n    for i in range(1, mx+1):\n        if A % i == 0 and B % i == 0:\n            ans.append(i)\n    print(ans[-K])\n    return\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14699": {"id": 14699, "code": "n = 2;p = 0\nla = [1, 1]\nn0 = sum(1 for a in la if a % 2 == 0)\nn1 = sum(1 for a in la if a % 2 == 1)\ndef combi(n, k):\n    c = 1\n    for i in range(1, n + 1):\n        c *= i\n    for i in range(1, k + 1):\n        c //= i\n    for i in range(1, n - k + 1):\n        c //= i\n    return c\ndef answer():\n    if p == 0:\n        c0 = 2 ** n0\n        c1 = 0\n        for i in range(0, n1 + 1, 2):\n            c1 += combi(n1, i)\n        return c0 * c1\n    else:\n        c0 = 2 ** n0\n        c1 = 0\n        for i in range(1, n1 + 1, 2):\n            c1 += combi(n1, i)\n        return c0 * c1\nprint(answer())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "5568": {"id": 5568, "code": "def main():\n    page = 100\n    if (page % 2) == 1:\n        print(page // 2 + 1)\n    else:\n        print(page // 2)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "4539": {"id": 4539, "code": "def main():\n    s = \"xyz\"\n    print(s[0] + str(len(s) - 2) + s[-1])\nmain()", "coverage": [">", ">", ">", ">"]}, "17689": {"id": 17689, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"0112\"\n    month = [i for i in range(1, 13)]\n    if int(s[:2]) not in month and int(s[2:]) in month:\n        print('YYMM')\n    elif int(s[:2]) in month and int(s[2:]) not in month:\n        print('MMYY')\n    elif int(s[:2]) in month and int(s[2:]) in month:\n        print('AMBIGUOUS')\n    else:\n        print('NA')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">"]}, "1748": {"id": 1748, "code": "def main():\n    population = 10;a_reader = 3;b_reader = 5\n    print(min(a_reader, b_reader), max(a_reader + b_reader - population, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "16285": {"id": 16285, "code": "import math\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\ndef comb(n, r):\n    return math.factorial(n) // math.factorial(n - r)\nmaxi = 0\ni = -1\nkey = a[i] // 2\nfor j in range(n):\n    if a[j] > key:\n        break\nif abs(a[j-1] - key) >= abs(a[j] - key) and j < n-1:\n    ans = [a[i], a[j]]\nelse:\n    ans = [a[i], a[j-1]]\nprint(\"{} {}\". format(ans[0], ans[1]))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18264": {"id": 18264, "code": "def main(h: int, w: int, n: int):\n    m = max(h, w)\n    if n % m == 0:\n        print(n // m)\n    else:\n        print((n // m) + 1)\nif __name__ == \"__main__\":\n    h = 14\n    w = 12\n    n = 112\n    main(h, w, n)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "10134": {"id": 10134, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\ndef read():\n    N = 6\n    S = \")))())\"\n    return N, S\ndef solve(N, S):\n    rank = 0\n    q = deque()\n    for s in S:\n        if rank == 0:\n            if s == \")\":\n                q.appendleft(\"(\")\n                q.append(\")\")\n            else:\n                q.append(\"(\")\n                rank += 1\n        else:\n            if s == \")\":\n                q.append(\")\")\n                rank -= 1\n            else:\n                q.append(\"(\")\n                rank += 1\n    while rank > 0:\n        q.append(\")\")\n        rank -= 1\n    return \"\".join(q)\nif __name__ == '__main__':\n    inputs = read()\n    print(solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "1710": {"id": 1710, "code": "def main():\n    N = 10;A = 7;B = 5\n    max_v = min(A, B)\n    min_v = max(0, A+B-N)\n    print(\" \".join(map(str, [max_v, min_v])))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "193": {"id": 193, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\ndef main():\n    s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    N = len(s)\n    K = 100\n    i = 0\n    while K > 0:\n        if i == N-1:\n            num = ord(s[i])+K%26\n            if num > ord('z'):\n                num -= 26\n            s[i] = chr(num)\n            break\n        else:\n            if s[i] != 'a':\n                num = 26-ord(s[i])+ord('a')\n                if  num <= K:\n                    s[i] = 'a'\n                    K -= num\n            i += 1\n    print(''.join(s))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10378": {"id": 10378, "code": "a = 8;b = 12;k = 2\ndef cf(x1,x2):\n    cf=[]\n    for i in range(2,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nlst=cf(a,b)\nlst.insert(0,1)\nprint(lst[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3235": {"id": 3235, "code": "def q1():\n    A = 20;B = 15\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "9660": {"id": 9660, "code": "def Level(S):\n    A=[0]\n    for i in range(len(S)):\n        if S[i]==\"(\":\n            A.append(A[-1]+1)\n        else:\n            A.append(A[-1]-1)\n    return A\nN = 3\nS = \"())\"\nA=Level(S)\nX=-min(A)\nT=\"(\"*X+S\nB=Level(T)\nY=B[-1]\nU=T+\")\"*Y\nprint(U)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11800": {"id": 11800, "code": "def main(lst):\n    m_1, d_1, m_2, d_2 = lst[0], lst[1], lst[2], lst[3]\n    before = False\n    after = None\n    lst_1 = [1, 3, 5, 7, 8, 10, 12]\n    lst_2 = [2]\n    lst_3 = [4, 6, 9, 11]\n    if m_1 in lst_1:\n        if d_1 == 31:\n            before = True\n            if m_2 == m_1 + 1 or m_2 == 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    elif m_1 in lst_2:\n        if d_1 == 28:\n            before = True\n            if m_2 == 3:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if m_1 in lst_3:\n        if d_1 == 30:\n            before = True\n            if m_2 == m_1 + 1:\n                if d_2 == 1:\n                    after = True\n        else:\n            before = False\n    if before == True and after == True:\n        return 1\n    else:\n        return 0\nif __name__ == '__main__':\n    before = [11, 16]\n    after = [11, 17]\n    print(main(before + after))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "2843": {"id": 2843, "code": "import math\ndef main():\n  s = \"35753\"\n  min=abs(int(s[:3])-753)\n  for i in range(1,len(s)-2):\n    if abs(int(s[i:i+3])-753)<min:\n      min=abs(int(s[i:i+3])-753)\n  print(min)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2446": {"id": 2446, "code": "import math\nn = 2;m = 1\nt = 0\ntt = 0\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nif n > 1:\n    t = com(n,2)\nif m > 1:\n    tt = com(m,2)\nprint(t+tt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "12536": {"id": 12536, "code": "def divisors(n):\n    d=[]\n    for i in range(1,int(n**0.5)+1):\n        if n%i==0:\n            d.append(i)\n            if i!=n//i:\n                d.append(n//i)\n    d.sort()\n    return d\na = 100;b = 50;k = 4\nprint(sorted(list(set(divisors(a))&set(divisors(b))))[::-1][k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12631": {"id": 12631, "code": "def main():\n    X = 6\n    if 105 % X == 0 and X > 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "1117": {"id": 1117, "code": "def main():\n    N = 112\n    divide = N // 111\n    rest = N % 111\n    if rest > 0:\n        print((divide+1)*111)\n    else:\n        print(divide*111)\nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18032": {"id": 18032, "code": "s = \"1700\"\nb = int(s[:2])\na = int(s[2:])\ndef yorm(i):\n    flag = 'none'\n    if 0<i<=12:\n        flag = 'MM'\n    elif i<100:\n        flag = 'YY'\n    return flag\nbf = yorm(b)\naf = yorm(a)\nans = bf+af\nif len(ans) != 4:\n    ans = 'NA'\nif ans == 'MMMM':\n    ans = 'AMBIGUOUS'\nif ans == 'YYYY':\n    ans = 'NA'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]}, "14529": {"id": 14529, "code": "from math import factorial\nn = 2;p = 0\na = [1, 3]\neven=0\nodd=0\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\ndef comb(a,b):\n    return factorial(a)//(factorial(a-b)*factorial(b))\nn_even=0\nn_odd=0\nfor i in range(even+1):\n    n_even+=comb(even,i)\nif p==1:\n    for i in range(1,odd+1,2):\n        n_odd+=comb(odd,i)\nelse:\n    for i in range(0,odd+1,2):\n        n_odd+=comb(odd,i)\nprint(n_even*n_odd)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "1752": {"id": 1752, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    n = 10;a = 7;b = 5\n    print(min(a,b), max(0, a+b-n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8498": {"id": 8498, "code": "def main():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18778": {"id": 18778, "code": "def resolve():\n    import math\n    H = 3\n    W = 7\n    N = 10\n    print(math.ceil(N/max(H, W)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15541": {"id": 15541, "code": "def ABC_78_B():\n    X = 13;Y = 3;Z = 1\n    sum=0\n    N=0\n    while sum<= X:\n        sum = Y*N+Z*(N+1)\n        N+=1  \n    print(N-2)\nif __name__ == '__main__':\n    ABC_78_B()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8606": {"id": 8606, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 5\n    a1 = chain(tuple([0]), tuple(map(int, \"3 2 2 4 1\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"1 2 2 2 1\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2236": {"id": 2236, "code": "def slove():\n    import sys\n    input = sys.stdin.readline\n    n = 10;a = 3;b = 5\n    print(min(a, b), max(0, a + b - n))\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15507": {"id": 15507, "code": "def solve():\n    X = 100000;Y = 1;Z = 1\n    print((X - Z) // (Y + Z))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "10258": {"id": 10258, "code": "def solve():\n    N = 8\n    S = \"))))((((\"\n    l,r = 0,0\n    state = 'r'\n    for i in range(N):\n        if i == 0 and S[i] == ')': state = 'l'\n        if i > 0  and S[i-1] == ')' and S[i] == '(':\n            state = 'r' \n        if S[i] == '(':\n            if state == 'l':\n                if l > 0:\n                    l -= 1\n                else:\n                    r += 1\n            elif state == 'r':\n                r += 1\n        elif S[i] == ')':\n            if state == 'r':\n                if r > 0:\n                    r -= 1\n                else:\n                    l += 1\n            elif state == 'l':\n                l += 1\n    print('('*l+S+')'*r)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "17230": {"id": 17230, "code": "def main():\n    a = False;b = True\n    if (a and b) or (not a and not b): print('H')\n    else: print('D')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "17307": {"id": 17307, "code": "def main():\n    a = \"H\";b = \"H\"\n    liar = False\n    if  a == \"H\" and b == \"H\" :\n        liar = False\n    elif a == \"H\" and b == \"D\" :\n        liar = True\n    elif a == \"D\" and b == \"H\" :\n        liar = True\n    elif a == \"D\" and b == \"D\" :\n        liar = False\n    if liar:\n        print(\"D\")\n    else:\n        print(\"H\")\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "2744": {"id": 2744, "code": "def resolve():\n    l = {1, 4, 9, 7}\n    if l == {1, 7, 9, 4}:\n        print('YES')\n    else:\n        print('NO')\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "9817": {"id": 9817, "code": "def main():\n    N = 6\n    S = \")))())\"\n    solo_close_no = 0\n    for i in range(N):\n        if S[-i-1] == \")\":\n            solo_close_no += 1\n        elif solo_close_no >= 1:\n            solo_close_no -= 1\n    solo_open_no = 0\n    for i in range(N):\n        if S[i] == \"(\":\n            solo_open_no += 1\n        elif solo_open_no >= 1:\n            solo_open_no -= 1\n    answer = \"(\"*solo_close_no + S + \")\"*solo_open_no\n    print(answer)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17787": {"id": 17787, "code": "def main():\n    S = \"0112\"\n    v1 = int(S[:2])\n    v2 = int(S[2:])\n    if 1 <= v1 <= 12 and 1 <= v2 <= 12:\n        print(\"AMBIGUOUS\")\n    elif 1 <= v1 <= 12 and (v2 >= 13 or v2 == 0):\n        print(\"MMYY\")\n    elif (v1 >= 13 or v1 == 0) and 1 <= v2 <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "611": {"id": 611, "code": "from string import ascii_lowercase\ndef main():\n    s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    K = 100\n    for i, c in enumerate(s):\n        num = ord(c) - ord(\"a\")\n        if num > 0 and K - (26-num) >= 0:\n            s[i] = \"a\"\n            K -= (26-num)\n    num = ord(s[-1]) - ord(\"a\")\n    last = (num + K)%26\n    s[-1] = ascii_lowercase[last]\n    print(\"\".join(s))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10412": {"id": 10412, "code": "def mi():\n    return map(int, \"1 1 1\".split())\ndef main():\n    A, B, K = mi()\n    cnt = 0\n    for i in range(min(A, B), 0, -1):\n        if A%i == 0 and B%i == 0:\n            cnt += 1\n            if cnt == K:\n                print(i)\n                return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16494": {"id": 16494, "code": "import bisect\nN = 5\nARR = [6, 9, 4, 2, 11]\nN = 2\nARR = [100, 0]\nN = int(\"2\")\nARR = list(map(int, \"100 0\".split()))\ndef calculate(n, arr):\n    arr = sorted(arr)\n    mid = arr[n - 1] / 2\n    a1 = bisect.bisect_left(arr, mid)\n    s1 = abs(arr[a1 - 1] - (arr[n - 1] / 2))\n    s2 = abs(arr[a1] - (arr[n - 1] / 2))\n    if s1 > s2:\n        return arr[n - 1],arr[a1]\n    else:\n        return arr[n-1],arr[a1-1]\nn, a = calculate(N, ARR)\nprint(n, a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8964": {"id": 8964, "code": "def main():\n    n = 4\n    a_lst1 = [1, 1, 1, 1]\n    a_lst2 = [1, 1, 1, 1]\n    candies_lst = []\n    tmp = 1\n    while tmp <= n:\n        a1_tmp = a_lst1[:tmp]\n        a2_tmp = a_lst2[tmp-1:]\n        a1 = sum(a1_tmp)\n        a2 = sum(a2_tmp)\n        tmp += 1\n        candies = a1 + a2\n        candies_lst.append(candies)\n    maximum = max(candies_lst)\n    print(maximum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1203": {"id": 1203, "code": "import sys\nimport math\nimport itertools\ndef input():\n    return \"112\".rstrip()\ndef main():\n    N = 112\n    d,m = divmod(N-1,111)\n    print((d+1)*111)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "6579": {"id": 6579, "code": "def check(arr, mid, maxV):\n    if arr[mid] < maxV:\n        return True\n    else:\n        return False\ndef binSearch(arr, maxV):\n    ok = -1\n    ng = len(arr)\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if check(arr, mid, maxV):\n            ok = mid\n        else:\n            ng = mid\n    return ok\ndef resolve():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    BoverA = [0 for _ in range(N)]\n    sumA = 0\n    for i in range(N):\n        a = binSearch(A, B[i])\n        sumA += (a + 1)\n        BoverA[i] = sumA\n    sumA = 0\n    for i in range(N):\n        b = binSearch(B, C[i])\n        if b >= 0:\n            sumA += 1 * 1 * BoverA[b]\n    print(sumA)\nresolve()", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17785": {"id": 17785, "code": "def check_my(string):\n    if 1 <= int(string) <= 12:\n        return 'YorM'\n    else:\n        return 'Y'\ns = \"1700\"\nmy_set = (check_my(s[0:2]), check_my(s[2:4]))\nif my_set == ('YorM', 'YorM'):\n    print('AMBIGUOUS')\nelif my_set == ('YorM', 'Y'):\n    print('MMYY')\nelif my_set == ('Y', 'YorM'):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "13661": {"id": 13661, "code": "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(\"5 4 3\")\ndef i_map(): return map(int, \"2 1 1\".split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return \"3 3 4\"\ndef s_map(): return \"1 4 2\".split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\ndef main():\n    w,h,n = i_map()\n    up = h\n    right = w\n    down = 0\n    left = 0\n    for i in range(n):\n        x,y,a = i_map()\n        if a == 1:\n            left = max(left,x)\n        elif a == 2:\n            right = min(right, x)\n        elif a == 3:\n            down = max(down, y)\n        else:\n            up = min(up, y)\n    print(max((up-down),0)*max((right-left),0))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "13444": {"id": 13444, "code": "from sys import stdin\ndef S(): return \"abcde,fghihgf,edcba\".rstrip()\ns = S()\nprint(s.replace(',',' '))", "coverage": [">", ">", ">", ">"]}, "14540": {"id": 14540, "code": "import math\ndef comb(n, r): \n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\na = [1, 3]\na_even = 0\na_odd = 0\nfor i in range(n):\n    if a[i]%2 == 0:\n        a_even += 1\n    else:\n        a_odd += 1\nans = 0\nif p%2 == 0:\n    k = 0\n    for i in range(10**10):\n        if 2*i > a_odd:\n            break\n        k += comb(a_odd, 2*i)\n    print(k*2**a_even)\nelse:\n    k = 0\n    for i in range(10**10):\n        if 2*i+1 > a_odd:\n            break\n        k += comb(a_odd, 2*i+1)\n    print(k*2**a_even)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "17385": {"id": 17385, "code": "s = \"1905\"\ndef YYMM(s):\n    p = int(s[2:])\n    if 1 <= p <= 12:\n        return True\n    return False\ndef MMYY(s):\n    p = int(s[:2])\n    if 1 <= p <= 12:\n        return True \n    return False\nif YYMM(s) and MMYY(s):\n    print('AMBIGUOUS')\nelif YYMM(s):\n    print('YYMM')\nelif MMYY(s):\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "15111": {"id": 15111, "code": "n = 2;p = 0\na = [1, 3]\ndef comb(n, r):\n    ans = 1\n    if n < 2*r:\n        r = n - r\n    for i in range(r):\n        ans *= (n - i)\n        ans //= (i + 1)\n    return ans\nev, od = 0, 0\nfor i in a:\n    if i%2 == 0:\n        ev += 1\n    else:\n        od += 1\nans = 0\nif p == 0:\n    for i in range(0, od+1, 2):\n        for j in range(ev+1):\n            ans += comb(od, i)*comb(ev, j)\nelse:\n    for i in range(1, od+1, 2):\n        for j in range(ev+1):\n            ans += comb(od, i)*comb(ev, j) \nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "10036": {"id": 10036, "code": "def main():\n    n = 8\n    s = \"))))((((\"\n    left = 0\n    right = 0\n    for i in range(n):\n        if s[i] == '(':\n            right += 1\n        else:\n            if right == 0:\n                left += 1\n            else:\n                right -= 1\n    print('('*left+s+')'*right)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "5643": {"id": 5643, "code": "def main():\n    N = 100\n    print(N // 2) if N % 2 == 0 else print(N // 2 + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "15970": {"id": 15970, "code": "import sys\nimport math\nimport bisect\ndef main():\n    n = 20;m = 30\n    n = max(0, n - 2 * m)\n    print(n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8499": {"id": 8499, "code": "def main():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18777": {"id": 18777, "code": "H = 2\nW = 100\nN = 200\ndef f(a):\n   if N % a == 0:\n      result = int(N / a)\n   else:\n      result = int(N / a) + 1\n   print(result)\nif H <= W:\n   f(W)\nelse:\n   f(H)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "17434": {"id": 17434, "code": "import math\ndef main():\n    s = \"0112\"\n    f = int(s[:2])\n    b = int(s[2:])\n    if 1 <= f and f <= 12 and 1 <= b and b <= 12:\n        print(\"AMBIGUOUS\")\n    elif 0 <= f and f <= 99 and 1 <= b and b <= 12:\n        print(\"YYMM\")\n    elif 0 <= b and b <= 99 and 1 <= f and f <= 12:\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "4213": {"id": 4213, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    ans = max((H2 * 60 + M2) - (H1 * 60 + M1) - K, 0)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "1501": {"id": 1501, "code": "def answer(n: int) -> int:\n    q = n // 111\n    if n % 111 != 0:\n        q += 1\n    return 111 * q\ndef main():\n    n = 112\n    print(answer(n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10170": {"id": 10170, "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    N = 6\n    S = \")))())\"\n    right=0\n    left=0\n    for i in range(N):\n        if S[i]=='(':\n            right+=1\n        else:\n            if right:\n                right-=1\n            else:\n                left+=1\n    print(left*'('+S+right*')')\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "6519": {"id": 6519, "code": "import bisect\ndef main():\n    n = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    res = [0]*(n)\n    j = 0\n    res2=[0]*(n)\n    for i in range(n):\n        res[i]=bisect.bisect_left(A, B[i])\n        res2[i]=n-bisect.bisect_right(C, B[i])\n    ans = 0\n    for i in range(n):\n        ans+=(res[i]*res2[i])\n    return ans\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10299": {"id": 10299, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 6\n    S = \")))())\"\n    L = 0\n    R = 0\n    for s in S:\n        if s == \"(\":\n            R += 1\n        else:\n            if R > 0:\n                R -= 1\n            else:\n                L += 1\n    ans = \"\".join([\"(\" * L, S, \")\" * R])\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "2828": {"id": 2828, "code": "import sys\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return map(int, stdin.readline().split())\ndef nl(): return list(map(int, stdin.readline().split()))\ndef main():\n    S = \"35753\"\n    ans = 1000\n    for i in range(len(S) - 2):\n        s = int(S[i:i + 3])\n        ans = min(ans, (abs(s - 753)))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7013": {"id": 7013, "code": "def main():\n    h = 210;n = 5\n    a = [31, 41, 59, 26, 53]\n    if h > sum(a):\n        print('No')\n    else:\n        print('Yes')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10109": {"id": 10109, "code": "def resolve():\n    N = 3\n    S = ['(', ')', ')']\n    nopen = 0\n    addleft = 0\n    addright = 0\n    for s in S:\n        if s == \"(\":\n            nopen += 1\n        else:\n            if nopen == 0:\n                addleft += 1\n            else:\n                nopen -= 1\n    addright = nopen\n    print(\"(\"*addleft+\"\".join(S)+\")\"*addright)\nif __name__ == '__main__':\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "5384": {"id": 5384, "code": "import sys\nfrom math import ceil\ndef main():\n    input = sys.stdin.buffer.readline\n    n = 2\n    print(ceil(n / 2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10430": {"id": 10430, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 8;b = 12;k = 2\n    cnt = 0\n    for i in range(min(a,b), 0, -1):\n        if a%i==0 and b%i==0:\n            cnt += 1\n        if cnt == k:\n            print(i)\n            return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15078": {"id": 15078, "code": "import itertools\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\nodd = []\neven = []\nc = 0\nfor i in A:\n    if i % 2 == 0:\n        even.append(i)\n    else:\n        odd.append(i)\nif P == 1:\n    for i in range(1, len(odd)+1, 2):\n        c += combinations_count(len(odd), i)\nif P == 0:\n    for i in range(0, len(odd)+1, 2):\n        c += combinations_count(len(odd), i)\nprint(2 ** len(even) * c) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11007": {"id": 11007, "code": "S = \"level\"\nN = len(S)\ndef kaibun(s):\n    n = len(s)\n    f_kaibun = True\n    for i in range(int(n/2)):\n        j = n-1-i\n        if j <= i:\n            break\n        if s[i] != s[j]:\n            f_kaibun = False\n            break\n    return f_kaibun\nif kaibun(S) and kaibun(S[0:int(round((N-1)/2))]) and kaibun(S[int(round((N+3)/2))-1:N]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14126": {"id": 14126, "code": "def main():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "7877": {"id": 7877, "code": "def resolve():\n    n = 3;k = 3\n    a = [1, 2, 3]\n    print(-(-(n-1)//(k-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "6443": {"id": 6443, "code": "import bisect\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    B1 = [0]*N\n    for i in range(N):\n        b = B[i]\n        B1[i] = N - bisect.bisect_right(C, b)\n        if i != 0:\n            B1[i] += B1[i - 1]\n    A1 = [0]*N\n    for i in range(N):\n        a = A[i]\n        index = bisect.bisect_right(B, a)\n        if index == 0:\n            A1[i] = B1[-1]\n        elif index < N:\n            A1[i] = B1[-1] - B1[index - 1]\n    ans = sum(A1)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10816": {"id": 10816, "code": "def isPalindrome(str):\n  ret = True\n  l = len(str)\n  end = int(l/2)\n  for i in range(end):\n    if str[i] != str[-1-i]:\n      ret = False\n  return ret\nans = \"Yes\"\nstr = \"level\"\nstr_l = len(str)\nif isPalindrome(str) and isPalindrome(str[:int(str_l/2)]) and isPalindrome(str[-int(str_l/2):]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16901": {"id": 16901, "code": "def resolve():\n    A = \"D\";B = \"D\"\n    print(\"H\" if (A==\"H\" and B==\"H\") or (A==\"D\" and B==\"D\") else \"D\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "14036": {"id": 14036, "code": "def solve():\n  n = 9\n  a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  g, z = 0, 0\n  cut = 1\n  for i in range(n-1):\n    if a[i+1] > a[i]:\n      g += 1\n    elif a[i+1] < a[i]:\n      z += 1\n    if g != 0 and z != 0:\n      cut += 1\n      g, z = 0, 0\n  print(cut)\n  return 0\nif __name__ == \"__main__\":\n  solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18523": {"id": 18523, "code": "import sys\nreadline = sys.stdin.readline\ndef main():\n    H = 2\n    W = 100\n    N = 200\n    print(-(-N // max(H, W)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13608": {"id": 13608, "code": "def main():\n    print(\"haiku,atcoder,tasks\".replace(',', ' '))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "4074": {"id": 4074, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    t1 = 60*H1 + M1\n    t2 = 60*H2 + M2\n    d = 0\n    if t1 <= t2:\n        d = t2 - t1\n    else:\n        d = 60*24 - t1 + t2\n    print(max(0, d - K))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "18700": {"id": 18700, "code": "h = 3\nw = 7\nn = 10\ndef paint(num):\n    if num >= n:\n        print(1)\n    else:\n        k = 0\n        c = 0\n        while k < n:\n            k +=num\n            c+=1\n        print(c)\nif h <= w:\n    paint(w)\nelse:\n    paint(h)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15159": {"id": 15159, "code": "def answer(x: int, y: int, z: int) -> int:\n    return len(range(y + z * 2, x + 1, y + z))\ndef main():\n    x = 64145;y = 123;z = 456\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12729": {"id": 12729, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    X = 6\n    if X in [7, 5, 3]:\n        ans = \"YES\"\n    else:\n        ans = \"NO\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "10475": {"id": 10475, "code": "A = 8;B = 12;K = 2\ndef make_div(n):\n  divisors = []\n  for i in range(1, int(n**0.5)+1):\n    if n % i == 0:\n      divisors.append(i)\n      if i != n // i:\n        divisors.append(n//i)\n  return divisors\nprint(sorted(set(make_div(A))&set(make_div(B)), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8176": {"id": 8176, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    N = 4;K = 3\n    a = [2, 3, 1, 4]\n    m=N-1\n    l=K-1\n    print((m+l-1)//l)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18211": {"id": 18211, "code": "import math\ndef main():\n    h = 14\n    w = 12\n    n = 112\n    if w >= h:\n        ans = math.ceil(n/w)\n    else:\n        ans = math.ceil(n/h)\n    print(ans)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6391": {"id": 6391, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    c.sort()\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a, i)\n        e = len(c) - bisect.bisect_right(c, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16900": {"id": 16900, "code": "def resolve():\n    A = \"D\";B = \"H\"\n    print(\"H\" if (A==\"H\" and B==\"H\") or (A==\"D\" and B==\"D\") else \"D\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "7788": {"id": 7788, "code": "import math\ndef get_input() -> tuple:\n    N = 3;K = 3\n    A = [1, 2, 3]\n    return N, K, A\ndef main(N: int, K: int) -> None:\n    ans = math.ceil((N - 1) / (K - 1))\n    print(ans)\nif __name__ == \"__main__\":\n    N = 3;K = 3;A = [1, 2, 3]\n    main(N, K)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "229": {"id": 229, "code": "def str_rotate(S,k): \n    if k >= 26:\n        k = k%26\n    if ord(S) + k > 123:\n        S = chr(ord(S)+k-97)\n    else:\n        S = chr(ord(S)+k)\n    return S\ns = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nk = 100\nfor i in range(len(s)):\n    if k == 0:\n        break\n    if s[i] == \"a\":\n        pass\n    elif 123 - ord(s[i]) <= k:\n        k -= 123 - ord(s[i])\n        s[i] = \"a\"\n    else:\n        pass\ns[-1] = str_rotate(s[-1],k)\nprint(\"\".join(s))", "coverage": [">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16134": {"id": 16134, "code": "def curtain(a, b):\n    return a-b*2 if a > b*2 else 0\ndef main():\n    a = 12;b = 4\n    print(curtain(a, b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19358": {"id": 19358, "code": "def actual(n):\n    if n % 2 == 0:\n        return n\n    return 2 * n\nn = 3\nprint(actual(n))", "coverage": [">", ">", "!", ">", ">", ">"]}, "13957": {"id": 13957, "code": "def solve(): \n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    i = 0\n    result = 0\n    while i < N:\n        while i+1 < N and A[i] == A[i+1]:\n            i += 1\n        if i+1 < N and A[i] < A[i+1]:\n            while i+1 < N and A[i] <= A[i+1]:\n                i += 1\n        elif i+1 < N and A[i] > A[i+1]:\n            while i+1 < N and A[i] >= A[i+1]:\n                i += 1\n        result += 1\n        i += 1\n    print(result)    \nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "11808": {"id": 11808, "code": "def main():\n    M1 = 11;D1 = 16\n    M2 = 11;D2 = 17\n    if D2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3416": {"id": 3416, "code": "def main():\n    a = 20;b = 15\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12440": {"id": 12440, "code": "def main():\n  s = \"akasaka\"\n  x=s[:int((len(s)-1)/2)]\n  y=s[int((len(s)+3)/2)-1:]\n  flg=0\n  if s !=s[::-1]:\n    flg=1\n  if x !=x[::-1]:\n    flg=1\n  if y !=y[::-1]:\n    flg=1\n  if flg==1:\n    print(\"No\")\n  else:\n    print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "868": {"id": 868, "code": "import sys\ndef IS(): return \"101\".rstrip()\ndef II(): return int(IS())\ndef MII(): return list(map(int, IS().split()))\ndef MIIZ(): return list(map(lambda x: x-1, MII()))\ndef main():\n    k = II()\n    sevens = 7%k\n    for i in range(1, k+1):\n        if sevens % k == 0:\n            print(i)\n            return\n        sevens = (10*sevens + 7)%k\n    print(-1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "16060": {"id": 16060, "code": "def main():\n    a = 20;b = 30\n    if a < b * 2:\n        print(0)\n    else:\n        print(a - b * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "14739": {"id": 14739, "code": "import math\nfrom itertools import combinations_with_replacement\nn = 1;p = 1\nA = [50]\nodd = []\neven = []\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor a in A:\n    if a % 2 == 0:\n        even.append(a)\n    else:\n        odd.append(a)\neven_count = []\nfor i in range(len(even)+1):\n    even_count.append(combinations_count(len(even), i))\nodd_odd_count = []\nodd_even_count = []\nfor i in range(len(odd)+1):\n    cnt = combinations_count(len(odd), i)\n    if i % 2 == 1:\n        odd_odd_count.append(cnt)\n    else:\n        odd_even_count.append(cnt)\nans = 0\nif p == 0:\n    for i in even_count:\n        for j in odd_even_count:\n            ans += i*j\nelse:\n    for i in even_count:\n        for j in odd_odd_count:\n            ans += i*j\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">"]}, "4252": {"id": 4252, "code": "def solve():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    period = (h2-h1)*60 + (m2-m1)\n    return period - k\ndef main():\n    print(solve())\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6537": {"id": 6537, "code": "import bisect\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    cnt=0\n    for i in B:\n        a=bisect.bisect_left(A,i)\n        c=N-bisect.bisect_right(C,i)\n        cnt+=a*c\n    print(cnt)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4253": {"id": 4253, "code": "def solve():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    period = (h2-h1)*60 + (m2-m1)\n    return period - k\ndef main():\n    print(solve())\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4776": {"id": 4776, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nimport itertools\nINF = float('inf')\nfrom heapq import heapify, heappop, heappush\ndef main():\n    S = \"xyz\"\n    print(S[0] + str(len(S)-2) +S[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8593": {"id": 8593, "code": "N = 7\nx = [3, 3, 4, 5, 4, 5, 3]\ny = [5, 3, 4, 4, 2, 3, 2]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1815": {"id": 1815, "code": "def main():\n    N = 10;A = 7;B = 5\n    x = min(A, B)\n    y = max(0, x - (N - max(A, B)))\n    print(x, y)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4416": {"id": 4416, "code": "def main():\n    S = \"xyz\"\n    print(S[0]+str(len(S)-2)+S[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "12884": {"id": 12884, "code": "def main():\n    n = \"5\"\n    if n in (\"3\", \"5\", \"7\"): print(\"YES\")\n    else: print(\"NO\")\nmain()", "coverage": [">", ">", ">", "!", ">"]}, "131": {"id": 131, "code": "def main():\n    s = ['x', 'y', 'z']\n    k = 4\n    ascii_lowercase = 'abcdefghijklmnopqrstuvwxyz'\n    D = dict(zip(ascii_lowercase,list(range(0,len(ascii_lowercase)))))\n    n = len(ascii_lowercase)\n    for i in range(0,len(s)):\n        j = D[s[i]]\n        if j != 0 and 26 -j <= k:\n            k -= (26-j)\n            s[i] ='a'\n    if k >0:\n        j = (D[s[-1]] + k%26)%26\n        s[-1] = ascii_lowercase[j]\n    print(''.join(s))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3357": {"id": 3357, "code": "def main():\n    A = 20;B = 30\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17439": {"id": 17439, "code": "def check_month(month):\n    return 1 <= int(month) <= 12\nS = \"1905\"\nls = S[:2]\nrs = S[2:]\nif check_month(ls) and check_month(rs):\n    print('AMBIGUOUS')\nelif check_month(ls) and not check_month(rs):\n    print('MMYY')\nelif not check_month(ls) and check_month(rs):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "18329": {"id": 18329, "code": "def resolve():\n    a = 3\n    b = 7\n    c = 10\n    d = max(a, b)\n    print(((c-1)//d)+1)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5628": {"id": 5628, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 100\n    if n % 2 == 0:\n        print(n//2)\n    else:\n        print(n//2+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14993": {"id": 14993, "code": "from collections import deque\nN = 1;P = 1\neven = 0\nodd = 0\nfor a in \"50\".split():\n    check = int(a)\n    if check % 2 == 0:\n        even += 1\n    else:\n        odd += 1\ndef comb(n, r):\n    up = 1\n    down = 1\n    for i in range(r):\n        up *= n - i\n        down *= i + 1\n    return up // down\nresult = 0\nif P == 1:\n    for i in range(1, odd+1, 2):\n        result += comb(odd, i)\nelse:\n    for i in range(0, odd+1, 2):\n        result += comb(odd, i)\nif even == 0:\n    mul = 1\nelse:\n    mul = 2 ** even\nresult *= mul\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "11688": {"id": 11688, "code": "def main():\n    DW = 'SUN,MON,TUE,WED,THU,FRI,SAT'\n    DW = DW.split(',')\n    s = \"SAT\"\n    ind_sun = DW.index('SUN')\n    ind_s = DW.index(s)\n    diff = ind_sun - ind_s\n    print(diff if diff > 0 else diff + 7)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7207": {"id": 7207, "code": "def main():\n    H = 210\n    offence = 210\n    print('Yes' if H <= offence else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "7919": {"id": 7919, "code": "import sys\nreadline = sys.stdin.readline\nimport math\ndef main():\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    print(math.ceil((N-1)/(K-1)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14174": {"id": 14174, "code": "def sign(x):\n    return (x > 0) - (x < 0)\ndef main():\n    _ = int(\"9\")\n    a = map(int, \"1 2 1 2 1 2 1 2 1\".split())\n    ans = []\n    arr = []\n    state = 0\n    for an in a:\n        if len(arr) < 2:\n            arr.append(an)\n        else:\n            state += (arr[-1] - arr[-2])\n            if state == 0:\n                arr.append(an)\n            else:\n                current = an - arr[-1]\n                if current == 0 or sign(state) == sign(current):\n                    arr.append(an)\n                else:\n                    ans.append(arr)\n                    arr = [an]\n                    state = 0\n    ans.append(arr)\n    print(len(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13261": {"id": 13261, "code": "def actual(s):\n    return s.replace(',', ' ')\ns = \"abcde,fghihgf,edcba\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "13760": {"id": 13760, "code": "def main():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    a = h1*60+m1\n    b = h2*60+m2\n    print(b-a-k)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9959": {"id": 9959, "code": "import sys\ndef I(): return int(\"8\".rstrip())\ndef LS2(): return list(\"))))((((\".rstrip())  \nN = I()\nS = LS2()\na,b = 0,0\nleft = []\nfor i in range(N):\n    if S[i] == '(':\n        a += 1\n    else:\n        b += 1\n    if a < b:\n        a,b = 0,0\n        left.append('(')\nANS = left + S + [')']*(a-b)\nprint(''.join(ANS))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "11916": {"id": 11916, "code": "def resolve():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m2==m1+1 and d2==1:\n        print('1')\n    elif m1==12 and m2==1 and d2==1:\n        print('1')\n    else:\n        print('0')\nresolve()", "coverage": [">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "15622": {"id": 15622, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    x = 64145;y = 123;z = 456\n    x = x - z\n    ans = x // (y + z)\n    print(ans)\n    return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5857": {"id": 5857, "code": "def ABC_157_A():\n    N = 5\n    if N%2 == 0:\n        print(int(N/2))\n    else:\n        print(int(N/2+1))\nif __name__ == '__main__':\n    ABC_157_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "6814": {"id": 6814, "code": "def main():\n    h = 20;n = 3\n    inlis = [4, 5, 6]\n    total = sum(inlis)\n    if h <= total:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14695": {"id": 14695, "code": "from math import factorial\ndef comb(n,r):\n    return factorial(n) // (factorial(n-r) * factorial(r))\ndef main():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    even,odd = 0,0\n    for i in range(N):\n        if A[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    a,b = 0,0\n    b = 2**even\n    for i in range(odd+1):\n        if i % 2 == P:\n            a += comb(odd,i)\n    print(a*b)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10787": {"id": 10787, "code": "from collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\ndef ceil(a, b):\n    return (a + b - 1) // b\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\ndef solve():\n    S = \"akasaka\"\n    N = len(S)\n    if S != S[::-1]:\n        return False\n    t = S[:(N - 1) // 2]\n    if t != t[::-1]:\n        return False\n    t = S[(N + 3) // 2 - 1:]\n    if t != t[::-1]:\n        return False\n    return True\ndef main():\n    if solve():\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14693": {"id": 14693, "code": "from math import factorial\ndef comb(n,r):\n    return factorial(n) // (factorial(n-r) * factorial(r))\ndef main():\n    N = 2;P = 0\n    A = [1, 3]\n    even,odd = 0,0\n    for i in range(N):\n        if A[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    a,b = 0,0\n    b = 2**even\n    for i in range(odd+1):\n        if i % 2 == P:\n            a += comb(odd,i)\n    print(a*b)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13095": {"id": 13095, "code": "import sys\nimport math\nimport bisect\ndef main():\n    if int(\"6\") in [3, 5, 7]:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10735": {"id": 10735, "code": "def is_kaibun(string):\n    isk = True\n    length = len(string)\n    for i in range(length // 2):\n        if string[i] != string[length - 1 - i]:\n            isk = False\n            break\n    return isk\ns = \"atcoder\"\nlen_s = len(s)\nif is_kaibun(s[0:(len_s // 2)]) and is_kaibun(s):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "10317": {"id": 10317, "code": "def resolve():\n    A = 100;B = 50;K = 4\n    ans = [1]\n    for i in range(2, min(A, B)+1):\n        if A%i == 0 and B%i == 0:\n            ans.append(i)\n    print(ans[K*-1])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12568": {"id": 12568, "code": "A = 100;B = 50;K = 4\ndef cf(x1,x2):\n    cf=[]\n    for i in range(1,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nprint(cf(A,B)[-(K)])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8023": {"id": 8023, "code": "def main():\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    print((N + K - 3) // ~-K)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "14601": {"id": 14601, "code": "def fur(n, r):\n    return  math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nimport math\nn = 2;p = 0\nA = [1, 1]\nfrom collections import Counter\nc = dict(Counter(A))\na, b = 0, 0\nif c.get(0) != None:\n    a = c[0]\nif c.get(1) != None:\n    b = c[1]\nresult = 0\npiyo = 1\nfor i in range(1, a+1):\n    piyo += fur(a, i)\nfor i in range(0, b+1, 2):\n    result += fur(b, i) * piyo\nif p == 0:\n    print(result)\nelse:\n    hoge = 0\n    for i in range(n+1):\n        hoge += fur(n, i)\n    print(hoge - result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "14302": {"id": 14302, "code": "def main():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    res = 1\n    inc = 0\n    dec = 0\n    for i in range(n - 1):\n        if A[i] < A[i+1]:\n            inc += 1\n        elif A[i] > A[i+1]:\n            dec += 1\n        if inc and dec:\n            res += 1\n            inc, dec = 0, 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10541": {"id": 10541, "code": "def main():\n  a = 100;b = 50;k = 4\n  loop=0\n  if a<b:\n    loop=a\n  else:\n    loop=b\n  now=0\n  for i in reversed(range(1,loop+1)):\n    if a%i==0 and b%i==0:\n      now+=1\n      if now==k:\n        print(i)\n        break\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10411": {"id": 10411, "code": "def mi():\n    return map(int, \"100 50 4\".split())\ndef main():\n    A, B, K = mi()\n    cnt = 0\n    for i in range(min(A, B), 0, -1):\n        if A%i == 0 and B%i == 0:\n            cnt += 1\n            if cnt == K:\n                print(i)\n                return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2363": {"id": 2363, "code": "import math\ndef combi(n,r):\n  ans = math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n  return ans\nN = 0;M = 3\nans = 0\nif N > 1:\n  ans += combi(N,2)\nif M > 1:\n  ans += combi(M,2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14522": {"id": 14522, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\neven_cnt = sum([1 for x in A if x%2 == 0])\nodd_cnt = sum([1 for x in A if x%2 != 0])\nif P == 0:\n    ans1 = 2**even_cnt\n    ans2 = 0\n    for i in range(0,odd_cnt+1,2):\n        ans2 += comb(odd_cnt,i)\nelse:\n    ans1 = 2**even_cnt\n    ans2 = 0\n    for i in range(1,odd_cnt+1,2):\n        ans2 += comb(odd_cnt,i)\nprint(ans1*ans2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "10570": {"id": 10570, "code": "def resolve():\n    a = 8;b = 12;k = 2\n    t = []\n    for i in range(1, min(a,b)+1):\n        if a % i == 0 and b % i == 0:\n            t.append(i)\n    print(t[-k])\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11112": {"id": 11112, "code": "S = \"akasaka\"\nlenS = len(S)\nans = \"No\"\ndef checkPalindrome(string):\n    l = len(string)\n    string2 = string[::-1]\n    if string[:l//2] == string2[:l//2]:\n        return True\n    else:\n        return False\nif checkPalindrome(S):\n    if checkPalindrome(S[:(lenS-1)//2]):\n        if checkPalindrome(S[(lenS+3)//2-1:]):\n            ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "11130": {"id": 11130, "code": "S = \"akasaka\"\nN = len(S)\ndef isp(s):\n  n = len(s)\n  for i in range(n // 2):\n    if s[i] != s[n - 1 - i]:\n      return False\n  return True\nif isp(S) and isp(S[0:(N - 1) // 2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "16604": {"id": 16604, "code": "def main():\n    a = \"D\";b = \"D\"\n    if a == \"H\" and b == \"H\":\n        ans = 'H'\n    elif a == 'D' and b == 'H':\n        ans = 'D'\n    elif a == \"D\" and b == \"D\":\n        ans = \"H\"\n    else:\n        ans = \"D\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "16059": {"id": 16059, "code": "def main():\n    a = 20;b = 15\n    if a < b * 2:\n        print(0)\n    else:\n        print(a - b * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "19235": {"id": 19235, "code": "def main():\n    n = 12\n    if n % 2:\n        print(0)\n    else:\n        n //= 2\n        ans = 0\n        i = 5\n        while i <= n:\n            ans += n // i\n            i *= 5\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2959": {"id": 2959, "code": "def main():\n    owner_num = 753\n    s = \"35753\"\n    min_diff = int(s[0:3])\n    for i in range(3,len(s)+1):\n        runrun_num = int(s[(i-3):i])\n        if abs(owner_num - runrun_num) < abs(owner_num - min_diff):\n            min_diff = runrun_num\n    print(abs(owner_num - min_diff))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1928": {"id": 1928, "code": "def main():\n    N = 10;A = 7;B = 5\n    mx = min(A,B)\n    mi = max((A + B) - N,0)\n    print(mx,mi)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "646": {"id": 646, "code": "import sys\nsys.setrecursionlimit(10**7)\ndef input(): return \"101\".rstrip()\ndef main():\n    k = 101\n    cur = 0\n    for i in range(1, 10 ** 7):\n        cur *= 10\n        cur += 7\n        cur %= k\n        if cur == 0:\n            print(i)\n            return\n    print(-1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "1265": {"id": 1265, "code": "import math\ndef main():\n  n = 112\n  a=int(n/100)\n  if a*100+a*10+a>=n:\n    print(a*100+a*10+a)\n  else:\n    print((a+1)*100+(a+1)*10+a+1)\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15036": {"id": 15036, "code": "from collections import Counter\nfrom functools import reduce\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(lambda x, y: x * y, range(n, n - r, -1), 1)\n    denom = reduce(lambda x, y: x * y, range(1, r + 1), 1)\n    return numer // denom\nN = 3;P = 0\nA = Counter(map(lambda x: int(x) % 2, \"1 1 1\".split()))\ne = A.get(0, 0)\no = A.get(1, 0)\nans = 2 ** e\nif P:\n    if o == 0:\n        print(0)\n    else:\n        ans *= sum(ncr(o, i) for i in range(1, o + 1) if i % 2)\n        print(ans)\nelse:\n    ans *= sum(ncr(o, i) for i in range(o + 1) if i % 2 == 0)\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "11702": {"id": 11702, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    next_day = {\n        \"SAT\": 1,\n        \"FRI\": 2,\n        \"THU\": 3,\n        \"WED\": 4,\n        \"TUE\": 5,\n        \"MON\": 6,\n        \"SUN\": 7,\n    }\n    S = \"SAT\"\n    ans = next_day[S]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3788": {"id": 3788, "code": "def main():\n    x = 64146;y = 123;z = 456\n    x = x - z\n    ans = x // (y+z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15531": {"id": 15531, "code": "def main():\n    X = 64145;Y = 123;Z = 456\n    print(int((X - Z) / (Y + Z)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "9954": {"id": 9954, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 3\n    T = \"())\"\n    S = []\n    for s in T:\n        if s == '(':\n            S.append(1)\n        else:\n            S.append(-1)\n    S = list(accumulate(S))\n    minS = min(S)\n    if minS < 0:\n        for i in range(N):\n            S[i] -= minS\n    print('('*max(0,-minS) + T + ')'*S[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9175": {"id": 9175, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"2017/01/31\".strip()\ndef resolve():\n    s = \"2017/01/31\"\n    print('2018'+s[4:])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14945": {"id": 14945, "code": "n = 2;p = 0\na = [1, 3]\nos = list(filter(lambda x: x % 2 == 1, a))\nes = list(filter(lambda x: x % 2 == 0, a))\ndef calc_even(o_num, e_num):\n    if o_num < 0 or e_num < 0:\n        return 0\n    res = 1\n    tmp = 1\n    for i in range(1, o_num // 2 + 1):\n        tmp *= (o_num - i * 2 + 2) * (o_num - i * 2 + 1)\n        tmp /= 2 * i * (2 * i - 1)\n        res += tmp\n    res *= 2 ** e_num\n    return res\ndef calc_odd(o_num, e_num):\n    if o_num < 0 or e_num < 0:\n        return 0\n    tmp = o_num\n    res = tmp\n    end = o_num if o_num % 2 == 1 else o_num-1\n    for i in range(1, end // 2 + 1):\n        tmp *= (o_num - i * 2 + 1) * (o_num - i * 2)\n        tmp /= 2 * i * (2 * i + 1)\n        res += tmp\n    res *= 2 ** e_num\n    return res\nif p == 0:\n    res = calc_even(len(os), len(es))\n    print(int(res))\nelse:\n    res = calc_odd(len(os), len(es))\n    print(int(res))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!"]}, "19062": {"id": 19062, "code": "def main():\n    n = 12\n    c = 0\n    if n % 2 == 1:\n        print(0)\n        return \n    i = 10\n    x, _ = divmod(n, i)\n    while x:\n        c += x\n        i *= 5\n        x, _ = divmod(n, i)\n    print(c)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17786": {"id": 17786, "code": "def main():\n    S = \"1905\"\n    v1 = int(S[:2])\n    v2 = int(S[2:])\n    if 1 <= v1 <= 12 and 1 <= v2 <= 12:\n        print(\"AMBIGUOUS\")\n    elif 1 <= v1 <= 12 and (v2 >= 13 or v2 == 0):\n        print(\"MMYY\")\n    elif (v1 >= 13 or v1 == 0) and 1 <= v2 <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">"]}, "12572": {"id": 12572, "code": "def Div(N):\n    L = []\n    R = []\n    I = 1\n    while I*I<=N:\n        if N%I==0:\n            L.append(I)\n            if I!=N//I: R.append(N//I)\n        I += 1\n    return R+L[::-1]\nA = 1;B = 1;K = 1\nCount = 0\nDivid = Div(min(A,B))\nfor T in Divid:\n    if A%T==0 and B%T==0:\n        Count += 1\n        if Count==K:\n            print(T)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11068": {"id": 11068, "code": "import math\nfrom math import gcd\nINF = float(\"inf\")\nimport sys\ninput=sys.stdin.readline\nimport itertools\ndef main():\n    s = ['l', 'e', 'v', 'e', 'l']\n    n = len(s)\n    h = n//2\n    f = s[:h]\n    l = s[h+1:]\n    if s == s[::-1] and f == f[::-1] and l == l[::-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3743": {"id": 3743, "code": "X = 13;Y = 3;Z = 1\nans = 0\ns = 0\ndef judge(x, y, z):\n    width = y + 2 * z\n    if width > x:\n        return 0\n    s = 1  \n    rest = x - width\n    width = y + z\n    while width <= rest:\n        s += 1\n        width = y + z\n        rest -= width\n    return s\nprint(judge(X, Y, Z))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6898": {"id": 6898, "code": "def solve():\n    H = 211;N = 5\n    A = [31, 41, 59, 26, 53]\n    A_sum = sum(A)\n    if A_sum >= H:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11191": {"id": 11191, "code": "def check(str):\n    str2 = str[::-1]\n    return str == str2\ndef main():\n    s = \"atcoder\"\n    n = len(s)\n    first = s[:(n-1)//2]\n    end = s[((n+3)//2)-1:]\n    if all((check(s), check(first), check(end))):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10362": {"id": 10362, "code": "def main():\n    A = 1;B = 1;K = 1\n    v = []\n    for i in range(1, min([A, B])+1):\n        if A % i == 0 and B % i == 0:\n            v.append(i)\n    print(v[-K])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8078": {"id": 8078, "code": "def main():\n    n = 4;k = 3\n    a = [2, 3, 1, 4]\n    ans = 1\n    n -= k\n    while n > 0:\n        ans += 1\n        n -= k - 1\n    return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4131": {"id": 4131, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    a = 10;b = 0;c = 12;d = 0;e = 120\n    if d >= b:\n        res = (c-a)*60 + d-b\n        print(res-e)\n    else:\n        res = (c-a-1)*60 + d-b+60\n        print(res-e)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "18943": {"id": 18943, "code": "def cin():\n    in_ = [5]\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "239": {"id": 239, "code": "import sys\nfrom string import ascii_lowercase as AL\ninput = sys.stdin.readline\ndef main():\n    S = \"xyz\"\n    K = 4\n    N = len(S)\n    T = [s for s in S]\n    for i in range(N):\n        if T[i] == \"a\":\n            continue\n        idx = AL.index(T[i])\n        if 26 - idx <= K:\n            K -= (26 - idx)\n            T[i] = \"a\"\n    _, r = divmod(K, 26)\n    T[-1] = AL[AL.index(T[-1]) + r]\n    ans = \"\".join(T)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15621": {"id": 15621, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    x = 64146;y = 123;z = 456\n    x = x - z\n    ans = x // (y + z)\n    print(ans)\n    return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19413": {"id": 19413, "code": "import sys\ndef input(): return \"3\".strip()\ndef main():\n    n = 3\n    if n % 2 == 0: print(n)\n    else: print(n * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14526": {"id": 14526, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nnum_pack = 2;mod = 0\npack_ls = [1, 3]\nnum_pack_0 = 0\nnum_pack_1 = 0\nfor i in range(num_pack):\n    if pack_ls[i] % 2 == 0:\n        num_pack_0 += 1\n    else:\n        num_pack_1 += 1\nif mod == 1:\n    pattern_0 = 2 ** num_pack_0\n    pattern_1 = 0\n    i = 1\n    while i <= num_pack_1:\n        pattern_1 += combinations_count(num_pack_1, i)\n        i += 2\n    ans = pattern_0 * pattern_1\nelse:\n    pattern_0 = 2 ** num_pack_0\n    pattern_1 = 0\n    i = 0\n    while i <= num_pack_1:\n        pattern_1 += combinations_count(num_pack_1, i)\n        i += 2\n    ans = pattern_0 * pattern_1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19149": {"id": 19149, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\nimport math\ndef main():\n    N = 12\n    if N % 2 == 1:\n        print(0)\n    else:\n        ans = 0\n        tmp = 10\n        while tmp <= N:\n            ans += N//tmp\n            tmp *= 5\n        print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13663": {"id": 13663, "code": "from collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nimport itertools\nimport math\ndef readInt():\n  return int(\"5 4 3\")\ndef readInts():\n  return list(map(int, \"2 1 1\".split()))\ndef readChar():\n  return \"3 3 4\"\ndef readChars():\n  return \"1 4 2\".split()\nw,h,n = readInts()\nxya = [readInts() for i in range(n)]\nxmin = 0\nxmax = w\nymin = 0\nymax = h\nfor x,y,a in xya:\n  if a==1:\n    xmin = max(x,xmin)\n  elif a==2:\n    xmax = min(x,xmax)\n  elif a==3:\n    ymin = max(y,ymin)\n  else:\n    ymax = min(y,ymax)\nprint(max(0,xmax-xmin)*max(0,ymax-ymin))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "14688": {"id": 14688, "code": "import math\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\nal = [50]\na0 = 0\na1 = 0\nfor a in al:\n    if a%2 == 0:\n        a0 += 1\n    else:\n        a1 += 1\nans = pow(2,a0)\nans2 = 0\nif p == 0:\n    for i in range(0,51,2):\n        if a1 < i:break\n        ans2 += com(a1,i)\nelse:\n    for i in range(1,51,2):\n        if a1 < i:break\n        ans2 += com(a1,i)\nprint(ans*ans2)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">"]}, "10988": {"id": 10988, "code": "def palindrome(S):\n  for i in range(len(S)//2):\n    if S[i] != S[-(i+1)]:\n      return 0\n  return 1\nans = \"No\"\nS = \"akasaka\"\nS1 = S[:(len(S)-1)//2]\nS2 = S[(len(S)+1)//2:]\nif palindrome(S) == 1:\n  if palindrome(S1) == 1:\n    if palindrome(S2) == 1:\n      ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13730": {"id": 13730, "code": "def solve():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    print((H2*60 + M2) - (H1*60 + M1) - K)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "12207": {"id": 12207, "code": "def han(l):\n    for i in range((len(l) // 2)):\n        if l[i] != l[-i - 1]:\n            return 0\n    return 1\nS = \"akasaka\"\nf1 = han(S)\nS2 = S[0:(len(S) // 2)]\nS3 = S[len(S)//2 + 1 : len(S)]\nf2 = han(S2)\nf3 = han(S3)\nif f1 * f2 * f3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "14035": {"id": 14035, "code": "def solve():\n  n = 6\n  a = [1, 2, 3, 2, 2, 1]\n  g, z = 0, 0\n  cut = 1\n  for i in range(n-1):\n    if a[i+1] > a[i]:\n      g += 1\n    elif a[i+1] < a[i]:\n      z += 1\n    if g != 0 and z != 0:\n      cut += 1\n      g, z = 0, 0\n  print(cut)\n  return 0\nif __name__ == \"__main__\":\n  solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8965": {"id": 8965, "code": "def main():\n    n = 1\n    a_lst1 = [2]\n    a_lst2 = [3]\n    candies_lst = []\n    tmp = 1\n    while tmp <= n:\n        a1_tmp = a_lst1[:tmp]\n        a2_tmp = a_lst2[tmp-1:]\n        a1 = sum(a1_tmp)\n        a2 = sum(a2_tmp)\n        tmp += 1\n        candies = a1 + a2\n        candies_lst.append(candies)\n    maximum = max(candies_lst)\n    print(maximum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "860": {"id": 860, "code": "n = 2\ndef calc(target):\n    result = 0\n    count = 0\n    if target % 2 == 0:\n        print(-1)\n        return\n    for i in range(n):\n        result = (result * 10 + 7) % target\n        count += 1\n        if result == 0:\n            print(count)\n            return\n    print(-1)\ncalc(n)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "10560": {"id": 10560, "code": "import math\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\na = 1;b = 1;c = 1\nn=math.gcd(a,b)\nans=make_divisors(n)\nprint(ans[-c])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "15853": {"id": 15853, "code": "import collections\ndef main():\n    x = 13;y = 3;z = 1\n    k = y+z+z\n    res = 1\n    while((k<x)):\n        k+=(z+y)\n        if(k>x):\n            break\n        res+=1\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13660": {"id": 13660, "code": "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(\"5 4 3\".rstrip())\ndef LI(): return list(map(int,\"2 1 1\".rstrip().split()))\ndef S(): return \"3 3 4\".rstrip()\ndef LS(): return list(\"1 4 2\".rstrip().split())\ndef main():\n    w,h,n = LI()\n    board = [[1]*h for _ in range(w)]\n    for _ in range(n):\n        x,y,a = LI()\n        if a == 1:\n            for i in range(x):\n                board[i] = [0 for _ in range(h)]\n        elif a == 2:\n            for i in range(x,w):\n                board[i] = [0 for _ in range(h)]\n        elif a == 3:\n            for i in range(w):\n                for j in range(y):\n                    board[i][j] = 0\n        elif a == 4:\n            for i in range(w):\n                for j in range(y,h):\n                    board[i][j] = 0\n    ans = 0\n    for line in board:\n        ans += sum(line)\n    print(ans)\nmain()            ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "6013": {"id": 6013, "code": "def main():\n    n = 5\n    if n%2:\n        print(n//2+1)\n    else:\n        print(n//2)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "191": {"id": 191, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\ndef main():\n    s = ['x', 'y', 'z']\n    N = len(s)\n    K = 4\n    i = 0\n    while K > 0:\n        if i == N-1:\n            num = ord(s[i])+K%26\n            if num > ord('z'):\n                num -= 26\n            s[i] = chr(num)\n            break\n        else:\n            if s[i] != 'a':\n                num = 26-ord(s[i])+ord('a')\n                if  num <= K:\n                    s[i] = 'a'\n                    K -= num\n            i += 1\n    print(''.join(s))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12442": {"id": 12442, "code": "def main():\n  s = \"atcoder\"\n  x=s[:int((len(s)-1)/2)]\n  y=s[int((len(s)+3)/2)-1:]\n  flg=0\n  if s !=s[::-1]:\n    flg=1\n  if x !=x[::-1]:\n    flg=1\n  if y !=y[::-1]:\n    flg=1\n  if flg==1:\n    print(\"No\")\n  else:\n    print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "19460": {"id": 19460, "code": "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef ngcd(a):\n    res = a[0]\n    for i in range(len(a)):\n        if res != 1:\n            res = gcd(a[i], res)\n    return res\ndef lcm(a,b):\n    return a * b // gcd(a, b)\ndef nlcm(a):\n    res = a[0]\n    for i in range(len(a)):\n        res = lcm(res, a[i])\n    return res\nn = 999999999\nprint(lcm(n, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "5419": {"id": 5419, "code": "import math\ndef main():\n    N = 5\n    ans = math.ceil(N / 2)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12567": {"id": 12567, "code": "A = 8;B = 12;K = 2\ndef cf(x1,x2):\n    cf=[]\n    for i in range(1,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nprint(cf(A,B)[-(K)])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8109": {"id": 8109, "code": "def main():\n    n = 3;k = 3\n    a_lst = [1, 2, 3]\n    tmp = k\n    count = 1\n    while tmp < n:\n        tmp += k - 1\n        count += 1\n    print(count)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "9770": {"id": 9770, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 6\n    s = \")))())\"\n    left_left=0\n    need_left=0\n    for i in range(n):\n        if s[i]==\"(\":\n            left_left+=1\n        else:\n            if left_left>0:\n                left_left-=1\n            else:\n                need_left+=1\n    print(\"(\"*need_left+s+\")\"*left_left)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "13707": {"id": 13707, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    h = H2 - H1\n    m = M2 - M1\n    print(max(0, h * 60 + m - K))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11582": {"id": 11582, "code": "def main():\n    s = \"SUN\"\n    week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n    ind = week.index(s)\n    print(7 - (ind % 7))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17791": {"id": 17791, "code": "def solve():\n    s = \"1700\"\n    front = int(s[:2])\n    back = int(s[2:])\n    if 1 <= front <= 12 and 1 <= back <= 12:\n        print('AMBIGUOUS')\n    elif 1 <= front <= 12:\n        print('MMYY')\n    elif 1 <= back <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "2360": {"id": 2360, "code": "import math\ndef combi(n,r):\n  ans = math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n  return ans\nN = 4;M = 3\nans = 0\nif N > 1:\n  ans += combi(N,2)\nif M > 1:\n  ans += combi(M,2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14067": {"id": 14067, "code": "def f(n,a):\n    if n==1:\n        print(1)\n        exit()\n    pre=a[1]-a[0]\n    ans=1\n    for i in range(2,n):\n        if pre*(a[i]-a[i-1])<0:\n            pre=0\n            ans+=1\n        else:\n            if a[i]-a[i-1]:\n                pre=a[i]-a[i-1]\n    return ans\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprint(f(n,a))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "8267": {"id": 8267, "code": "N = 3;K = 3\nA = [1, 2, 3]\ndef solve(N,K,A):\n    ans = -(-(N-1)//(K-1))\n    return ans\nprint(solve(N,K,A))", "coverage": [">", ">", ">", ">", ">", ">"]}, "11021": {"id": 11021, "code": "def is_palindrome(s):\n    res = s == s[::-1]\n    return res\nS = \"level\"\nN = len(S)\nans = ['No', 'Yes'][is_palindrome(S) & is_palindrome(S[:((N-1)//2)]) & is_palindrome(S[((N+1)//2):])]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13905": {"id": 13905, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    status = \"undefined\"\n    ans = 1\n    for i in range(N - 1):\n        diff = A[i + 1] - A[i]\n        if status == \"undefined\":\n            if diff == 0:\n                pass\n            elif diff > 0:\n                status = \"increase\"\n            else:\n                status = \"decrease\"\n        elif status == \"increase\":\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                status = \"undefined\"\n        else:\n            if diff <= 0:\n                pass\n            else:\n                status = \"undefined\"\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "6487": {"id": 6487, "code": "def main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    S = [0]\n    s = 0\n    i = 0\n    for b in B:\n        while i < N:\n            if b <= A[i]:\n                break\n            i += 1\n        s += i\n        S.append(s)\n    t = 0\n    i = 0\n    for c in C:\n        while i < N:\n            if c <= B[i]:\n                break\n            i += 1\n        t += S[i]\n    print(t)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8497": {"id": 8497, "code": "def main():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10305": {"id": 10305, "code": "A = 1;B = 1;K = 1\nresult_list = []\ndef divisor_list(n):\n    i = 1\n    array = []\n    while i * i <= n:\n        if n % i == 0:\n            array.append(i)\n            array.append(n//i)\n        i += 1\n    array = list(set(array))\n    return array\nfor i in range(1, min(A, B) + 1):\n    if A % i == 0 and B % i == 0:\n        result_list.append(i)\nprint(sorted(result_list)[-K])", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "10992": {"id": 10992, "code": "S = \"level\"\nlength = len(S)\ndef check_palin(s):\n    num = len(s)\n    for i in range(num // 2):\n        if s[i] != s[num - i - 1]:\n            return False\n    return True\nfirst = S[:(length - 1) // 2]\nsecond = S[(length + 1) // 2:]\nif check_palin(S) and check_palin(first) and check_palin(second):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15482": {"id": 15482, "code": "def solve(x, y, z):\n    tmp = x - z\n    ans = tmp // (y + z)\n    return ans\nif __name__ == \"__main__\":\n    x = 64145;y = 123;z = 456\n    print(solve(x,y,z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8891": {"id": 8891, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    n = 5\n    a1_list = [3, 2, 2, 4, 1]\n    a2_list = [1, 2, 2, 2, 1]\n    upper_sum = a1_list[0]\n    lower_sum = sum(a2_list)\n    ans = upper_sum + lower_sum\n    for i in range(1, n):\n        upper_sum += a1_list[i]\n        lower_sum -= a2_list[i-1]\n        candy = upper_sum + lower_sum\n        if candy > ans:\n            ans = candy\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13305": {"id": 13305, "code": "import sys\ns = \"haiku,atcoder,tasks\"\ndef main():\n    t = s.replace(',', ' ')\n    print(t)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6885": {"id": 6885, "code": "def main():\n    H = 210;N = 5\n    A = ['31', '41', '59', '26', '53']\n    total = 0\n    for i in A:\n        total += int(i)\n    if total >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6269": {"id": 6269, "code": "import bisect\nfrom itertools import accumulate\nN = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\ndef my_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    i_a = 0\n    i_c = N-1\n    for i in range(N):\n        b = B[i]\n        while i_a < N and A[i_a] < b:\n            acc_a[i] += 1\n            i_a += 1\n    for i in reversed(range(N)):\n        b = B[i]\n        while i_c >= 0 and C[i_c] > b:\n            acc_c[i] += 1\n            i_c -= 1\n    acc_a = list(accumulate(acc_a))\n    acc_c = list(accumulate(acc_c[::-1]))\n    acc_c = acc_c[::-1]\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\ndef bisect_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    for i in range(N):\n        acc_a[i] = bisect.bisect_left(A, B[i])\n        acc_c[i] = N-bisect.bisect_right(C, B[i])\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\n    return ans\nprint(bisect_func(A, B, C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10696": {"id": 10696, "code": "s = \"atcoder\"\nn = len(s)\ndef palindrome(s):\n    ret = True\n    for i in range(len(s)//2):\n        if s[i] != s[-i-1]:\n            ret = False\n            break\n    return ret\ncheck_1 = palindrome(s)\ncheck_2 = palindrome(s[:(n)//2])\ncheck_3 = palindrome(s[(n+2)//2:])\nif check_1 and check_2 and check_3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5319": {"id": 5319, "code": "def resolve():\n    n = 100\n    if n%2==0:\n        print(n//2)\n    else:\n        print(n//2+1)\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12030": {"id": 12030, "code": "def solve(m1, d1, m2, d2):\n    return int(m1 != m2)\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(solve(m1, d1, m2, d2))", "coverage": [">", ">", ">", ">", ">"]}, "16236": {"id": 16236, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm = a.pop()\nr = m/2\ndef isOK(index, key):\n    return a[index] >= key\ndef bsearch(key):\n    left = -1\n    right = n-1\n    while right-left > 1:\n        mid = left+(right-left)//2\n        if isOK(mid, key):\n            right = mid\n        else:\n            left = mid\n    if right == n-1:\n        return -1\n    else:\n        return right\nindex = bsearch(r)\nif index > 0 and 2*r < a[index-1]+a[index]:\n    index -= 1\nprint(m, a[index])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", "!", ">"]}, "16874": {"id": 16874, "code": "def solve():\n    a = \"D\";b = \"D\"\n    if a == 'H':\n        print(b)\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "3537": {"id": 3537, "code": "import sys\ndef S(): return \"20 30\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "12496": {"id": 12496, "code": "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y,x%y)\na = 100;b = 50;k = 4\nans = gcd(a,b)\ncnt = 1\nwhile cnt < k:\n    ans -= 1\n    if a % ans == 0 and b % ans == 0:\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13675": {"id": 13675, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    minuts = (H2 - H1) * 60 + (M2 - M1)\n    print(minuts - K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3869": {"id": 3869, "code": "def resolve():\n    x = 13;y = 3;z = 1\n    x=x-z\n    print(x//(y+z))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "13958": {"id": 13958, "code": "def solve(): \n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    i = 0\n    result = 0\n    while i < N:\n        while i+1 < N and A[i] == A[i+1]:\n            i += 1\n        if i+1 < N and A[i] < A[i+1]:\n            while i+1 < N and A[i] <= A[i+1]:\n                i += 1\n        elif i+1 < N and A[i] > A[i+1]:\n            while i+1 < N and A[i] >= A[i+1]:\n                i += 1\n        result += 1\n        i += 1\n    print(result)    \nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "638": {"id": 638, "code": "k = 101\ndef cal(k):\n    n = 7\n    for i in range(1,10000000):\n        if n % k == 0:\n            return i\n        else:\n            n = (n *10 + 7) % k\n    return -1\nprint(cal(k))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "328": {"id": 328, "code": "def solve():\n    s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    K = 100\n    for i in range(len(s)):\n        distToA = (ord('z')+1 - ord(s[i])) % 26\n        if distToA <= K:\n            s[i] = 'a'\n            K -= distToA\n    else:\n        s[-1] = chr(ord(s[-1]) + K%26)\n    print(\"\".join(s))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14835": {"id": 14835, "code": "from collections import Counter\ndef main():\n    N = 2;P = 0\n    A = Counter(list( map( lambda x: int(x)%2, \"1 3\".split())))\n    zero = A[0]\n    one = A[1]\n    ans = 1\n    now = 1\n    for i in range(1,one+1):\n        now *= (one-i+1)\n        now //= i\n        if i%2 == 0:\n            ans += now\n    if P == 0:\n        print( ans*pow(2,zero))\n    else:\n        print(pow(2,N) - ans*pow(2,zero))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15357": {"id": 15357, "code": "import sys\nfrom itertools import accumulate\ndef input(): return \"13 3 1\".strip()\ndef main():\n    x = 13;y = 3;z = 1\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18723": {"id": 18723, "code": "def solve():\n  H = 2\n  W = 100\n  N = 200\n  ans = -(-N//max(H,W))\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12683": {"id": 12683, "code": "N = 6\ndef check():\n    if N==3 or N==5 or N==7:\n        return True\n    return False\nif check():\n    print('YES')\nelse:\n    print('NO')", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "12637": {"id": 12637, "code": "def main():\n    x = 6\n    ans = \"NO\"\n    if (x == 7 or x == 5 or x == 3):\n        ans = \"YES\"\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]}, "2238": {"id": 2238, "code": "def slove():\n    import sys\n    input = sys.stdin.readline\n    n = 100;a = 100;b = 100\n    print(min(a, b), max(0, a + b - n))\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10071": {"id": 10071, "code": "def main():\n  n = 3\n  s = \"())\"\n  sl,sr=[0],[0]\n  l,r=0,0\n  for si in s:\n    if si=='(':\n      l+=1\n    else:\n      r+=1\n    sr.append(r)\n    sl.append(l)\n  ans=n\n  al,ar=0,0\n  for i in range(n):\n    if s[i]=='(':\n      a=(sl[n]-sl[i+1])-(ar+sr[n]-sr[i+1])\n      if a>=0:\n        ar+=a+1\n    else:\n      a=sr[i]-(al+sl[i+1])\n      if a>=0:\n        al+=a+1\n  print('('*al+s+')'*ar)\nif __name__=='__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "19402": {"id": 19402, "code": "n = 999999999\ndef getmdc(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef mmc2(x):\n    return x * 2 // getmdc(x, 2)\nprint(mmc2(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7026": {"id": 7026, "code": "def main():\n  h = 211;n = 5\n  a = [31, 41, 59, 26, 53]\n  if sum(a)>=h:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "15013": {"id": 15013, "code": "import math\nn = 3;p = 0\nls = [1, 1, 1]\nlo = []\nle = []\ndef combinations_count(n, r): \n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor i in ls:\n    if i % 2 == 0:\n        le.append(i)\n    else:\n        lo.append(i)\nx = len(lo)\ny = len(le)\nif p == 0:\n    a = 1\n    if x != 0:\n        if x % 2 == 0:\n            r = x\n        else:\n            r = x - 1\n        a = 0\n        for j in range(0,r+1,2):\n            a += combinations_count(x, j)\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)\nelse:\n    if x != 0:\n        if x % 2 == 0:\n            r = x - 1\n        else:\n            r = x\n        a = 0\n        for j in range(1,r+1,2):\n            a += combinations_count(x, j)\n    else:\n        a = 0\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "3649": {"id": 3649, "code": "import sys\ndef main():\n    A = 20;B = 30\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10889": {"id": 10889, "code": "def is_palindrome(s):\n    return s == s[::-1]\ndef main():\n    s = \"-akasaka\"\n    n = len(s) - 1\n    if (\n        is_palindrome(s[1:])\n        and is_palindrome(s[1 : (n - 1) // 2 + 1])\n        and is_palindrome(s[(n + 3) // 2 : n + 1])\n    ):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "1266": {"id": 1266, "code": "import math\ndef main():\n  n = 750\n  a=int(n/100)\n  if a*100+a*10+a>=n:\n    print(a*100+a*10+a)\n  else:\n    print((a+1)*100+(a+1)*10+a+1)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5484": {"id": 5484, "code": "import math\ndef main():\n  n = 100\n  if n % 2 == 0:\n    print(int(n/2))\n  else:\n    print(math.floor((n/2) + 1))\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "7675": {"id": 7675, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\ndef answer(H: int, N: int, A: list) -> str:\n    damage = 0                          \n    for i in range(0, N):               \n        damage += int(A[i])             \n        i += 1                          \n    if damage < H:\n        return 'No'\n    else:\n        return 'Yes'\nprint(answer(H, N, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "18482": {"id": 18482, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H = 3\n    W = 7\n    N = 10\n    q, r, = divmod(N, max(H, W))\n    ans = q\n    ans += 1 if r > 0 else 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11161": {"id": 11161, "code": "def main(S):\n    N = len(S)\n    if S == S[::-1] and S[:(N - 1) // 2] == S[:(N - 1) // 2][::-1] and S[(N + 1) // 2:] == S[(N + 1) // 2:][::-1]:\n        return True\n    else:\n        return False\nS = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nif main(S) == True:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "10605": {"id": 10605, "code": "def gcd(a, b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b, a%b)\ndef make_divisors(n):\n  lower_divisors , upper_divisors = [], []\n  i = 1\n  while i*i <= n:\n    if n % i == 0:\n      lower_divisors.append(i)\n      if i != n // i:\n        upper_divisors.append(n//i)\n    i += 1\n  return lower_divisors + upper_divisors[::-1]\nA = 100;B = 50;K = 4\nc=gcd(A,B)\nprint(make_divisors(c)[-K])", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15914": {"id": 15914, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    A = 12;B = 4\n    print(max(A - 2 * B, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7789": {"id": 7789, "code": "import math\ndef get_input() -> tuple:\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    return N, K, A\ndef main(N: int, K: int) -> None:\n    ans = math.ceil((N - 1) / (K - 1))\n    print(ans)\nif __name__ == \"__main__\":\n    N = 8;K = 3;A = [7, 3, 1, 8, 4, 6, 2, 5]\n    main(N, K)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "19270": {"id": 19270, "code": "n = 12\ndef solve(n):\n    if n % 2 == 1:\n        return 0\n    n //= 2\n    ans = 0\n    fact = 5\n    while n >= 5:\n        ans += n // 5\n        n //= 5\n    return ans\nprint(solve(n))", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19399": {"id": 19399, "code": "import sys\ndef solve():\n    input = sys.stdin.readline\n    N = 999999999\n    print(N if N % 2 == 0 else 2 * N)\n    return  0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14752": {"id": 14752, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\ns = [1, 1, 1]\nx,y,ans = 0,0,0\nfor i in s:\n    if i%2 == 0:\n        x += 1\n    else:\n        y += 1\nif p == 1:\n    k = 0\n    for i in range(1,y+1,2):\n        k += comb(y,i)\n    g = 0\n    for i in range(x+1):\n        g += comb(x,i)\n    print(k*g)\nelse:\n    g = 0\n    for i in range(x+1):\n        g += comb(x,i)\n    k = 0\n    for i in range(0,y+1,2):\n        k += comb(y,i)\n    print(k*g)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "271": {"id": 271, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom bisect import bisect\ndef main():\n    s = \"a\"\n    k = 25\n    s2 = []\n    s2a = s2.append\n    for se in s:\n        if ord(se) - 97:\n            s2a(123 - ord(se))\n        else:\n            s2a(0)\n    s2_ac = tuple(accumulate(s2))\n    lens = len(s)\n    if s2_ac[-1] < k:\n        k -= s2_ac[-1]\n        k = k % 26\n        r = 'a' * (lens - 1) + chr(97 + k)\n        print(r)\n    elif s2_ac[-1] == k:\n        r = 'a' * lens\n        print(r)\n    else:\n        pos = bisect(s2_ac, k)\n        if pos == 0:\n            r = chr(k + ord(s[0])) + s[1:]\n            print(r)\n        elif s2_ac[pos-1] == k:\n            r = 'a' * pos + s[pos:]\n            print(r)\n        else:\n            r = 'a' * pos\n            k -= s2_ac[pos-1]\n            for i1 in range(pos, len(s)):\n                if s2[i1] <= k:\n                    r += 'a'\n                    k -= s2[i1]\n                else:\n                    r += s[i1]\n            if k:\n                lastc = chr(ord(r[-1]) + k)\n                r = r[:-1] + lastc\n            print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "4687": {"id": 4687, "code": "def main():\n    s = \"internationalization\"\n    print(s[0] + str(len(s[1:-1])) + s[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "4237": {"id": 4237, "code": "def main():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    x = 60 * h1 + m1\n    y = 60 * h2 + m2 - k\n    print(max(0, y - x))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11013": {"id": 11013, "code": "def main():\n    S = \"atcoder\"\n    N = len(S)\n    if S[:(N - 1) // 2] == S[(N + 3) // 2 - 1:]:\n        print('Yes')\n    else:\n        print('No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10422": {"id": 10422, "code": "def make_divisors(n):\n    if n==1:\n        divisors=[1]\n        return divisors\n    else:\n        divisors=[]\n        for i in range(1,n):\n            if i*i>n:\n                break\n            if n%i==0:\n                divisors.append(i)\n                if i!=n//i:\n                    divisors.append(n//i)\n        divisors.sort(reverse=True)\n        return divisors\nfrom sys import stdin\nfrom math import gcd\ndef main():\n    readline=stdin.readline\n    a = 8;b = 12;k = 2\n    c=gcd(a,b)\n    li=make_divisors(c)\n    print(li[k-1])\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19280": {"id": 19280, "code": "import sys\ndef input(): return \"5\".strip()\ndef resolve():\n    n = 5\n    if n%2==1:\n        print(0)\n    elif n<10:\n        print(0)\n    else:\n        ans=0\n        for i in range(1,1000000):\n            y=5**i\n            num=(n//y)//2\n            if num==0:\n                break\n            else:\n                ans+=num\n        print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "12715": {"id": 12715, "code": "def ABC_114_A():\n    X = 6\n    if X==7 or X==5 or X==3:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    ABC_114_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "14891": {"id": 14891, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nN = 2;P = 0\nA = [1, 3]\nodd = 0\neven = 0\nfor i in range(N):\n    if A[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n    ans += cmb(odd, i)\nans *= 2 ** even\nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "14924": {"id": 14924, "code": "from math import factorial\ndef combinations_count(n, r):\n    return factorial(n) // (factorial(n - r) * factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nmodA = [i % 2 for i in A]\nodd = modA.count(1)\neven = modA.count(0)\neven_count = 1\nfor i in range(1, even+1):\n    even_count += combinations_count(even, i)\nif P == 0:\n    odd_count = 0\n    for i in range(0,odd+1,2):\n        odd_count += combinations_count(odd, i)\n    print(even_count * odd_count)\nelse:\n    odd_count = 0\n    for i in range(1,odd+1,2):\n        odd_count += combinations_count(odd, i)\n    print(even_count * odd_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "15360": {"id": 15360, "code": "import sys\nfrom itertools import accumulate\ndef input(): return \"64146 123 456\".strip()\ndef main():\n    x = 64146;y = 123;z = 456\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1913": {"id": 1913, "code": "import sys\ninput = sys.stdin.readline\ndef mi(): return map(int, \"10 7 5\".split())\nN, A, B = mi()\nans = [0,0]\nans[0] = min(A,B)\nans[1] = max(A+B-N,0)\nprint(ans[0], ans[1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13831": {"id": 13831, "code": "def main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    ans = 1\n    is_add = False\n    is_minus = False\n    tmp = A[0]\n    for a in A[1:]:\n        if tmp > a:\n            if is_add:\n                ans += 1\n                is_add = False\n            else:\n                is_minus = True\n        elif tmp < a:\n            if is_minus:\n                ans += 1\n                is_minus = False\n            else:\n                is_add = True\n        tmp = a\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "678": {"id": 678, "code": "def function(x):\n    base = 0\n    for i in range(1, 10 ** 7):\n        base *= 10\n        base += 7\n        base %= x\n        if base == 0:\n            return i\n    return -1\nx = 101\nprint(function(x))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5420": {"id": 5420, "code": "import math\ndef main():\n    N = 2\n    ans = math.ceil(N / 2)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8681": {"id": 8681, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [3, 3, 4, 5, 4, 5, 3]\n    B = [5, 3, 4, 4, 2, 3, 2]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8286": {"id": 8286, "code": "import math\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\ndef get_1_index(a):\n    for i,j in enumerate(a):\n        if j==1:\n            return i\nindex=get_1_index(a)\nmae=index\nusiro=n-index-1\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18324": {"id": 18324, "code": "def main():\n    H = 14\n    W = 12\n    N = 112\n    if H < W:\n        H, W = W, H\n    ans = N//H\n    if N%H != 0:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "9846": {"id": 9846, "code": "import sys\nreadline = sys.stdin.readline\ndef main():\n    N = 3\n    S = \"())\"\n    res = S[:]\n    pls_left = 0\n    pls_right = 0\n    for s in S:\n        if s == '(':\n            pls_right += 1\n        else:\n            if pls_right == 0:\n                pls_left += 1\n            else:\n                pls_right -= 1\n    res = '(' * pls_left + S + ')' * pls_right\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "3125": {"id": 3125, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    s = \"1111111111\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        num = int(s[i:i+3])\n        if ans > abs(753 - num):\n            ans = abs(753 - num)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2177": {"id": 2177, "code": "def LI():\n    return list(map(int, \"10 7 5\".split()))\nN, A, B = LI()\nif A+B <= N:\n    ans = 0\nelse:\n    ans = A+B-N\nprint(min(A, B), ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "19205": {"id": 19205, "code": "def count_five(n):\n    res = 0\n    i = 1\n    while n//pow(5,i) - n//pow(10,i)> 0:\n        res += n//pow(5,i) - n//(2*pow(5,i))\n        i += 1\n    return res\ndef main(N):\n    if N%2:\n        return 0\n    M = list(str(N))\n    L = len(M)\n    temp = 0\n    temp2 = 0\n    res = 0\n    for i, n in enumerate(M[:-1], start=1):\n        temp *= 10\n        temp += int(n)\n        res += (temp - temp2)*(L-i)\n        res += count_five(temp)\n        temp2 = temp\n    return res\nN = 12\nprint(main(N))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15086": {"id": 15086, "code": "n = 3;p = 0\na = [1, 1, 1]\nfor i in range(n):\n    a[i] %= 2\ncnt_zero = a.count(0)\ncnt_one = n - cnt_zero\nans = 0\ndef nCk(n, k):\n    if k > n - k:\n        return nCk(n, n - k)\n    ret = 1\n    for i in range(k):\n        ret *= n - i\n    for i in range(k):\n        ret //= i + 1\n    return ret\nans = 0\nc = 0\nfor i in range(p, cnt_one + 1, 2):\n    c += nCk(cnt_one, i)\nans = (2 ** cnt_zero) * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19480": {"id": 19480, "code": "import math\ndef main():\n    n = 10\n    x=2*n//math.gcd(2,n)\n    print(x)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "869": {"id": 869, "code": "import sys\ndef IS(): return \"2\".rstrip()\ndef II(): return int(IS())\ndef MII(): return list(map(int, IS().split()))\ndef MIIZ(): return list(map(lambda x: x-1, MII()))\ndef main():\n    k = II()\n    sevens = 7%k\n    for i in range(1, k+1):\n        if sevens % k == 0:\n            print(i)\n            return\n        sevens = (10*sevens + 7)%k\n    print(-1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11089": {"id": 11089, "code": "s = \"akasaka\"\ndef is_palinedrome(st):\n    for i in range(len(st)//2):\n        if st[i] != st[-(i+1)]:\n            return False\n    return True\ns_pali = is_palinedrome(s)\nsub_pali_left = is_palinedrome(s[:len(s)//2])\nsub_pali_right = is_palinedrome(s[len(s)//2+1:])\nif s_pali and sub_pali_left and sub_pali_right:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16184": {"id": 16184, "code": "N = 2\nA = [100, 0]\nif N > 2:\n    A.sort()\n    num_total = A[-1]\n    A.pop()\n    def isOK(index, key, l):\n        if l[index] >= key:\n            return True\n        else:\n            return False\n    def meguru_search(l,key): \n        left = -1\n        right = len(l)\n        while (right - left) > 1: \n            mid = left + (right - left)//2\n            if isOK(mid,key,l):\n                right = mid\n            else:\n                left = mid\n        return right\n    if num_total%2 == 0:\n        Max = num_total//2 \n    else:\n        Max = num_total//2 + 1\n    Maxind1 = meguru_search(A,Max) \n    Maxind2 = Maxind1 - 1 \n    abs_1 = abs(Max - A[Maxind1])\n    abs_2 = abs(Max - A[Maxind2])\n    if abs_1 > abs_2: \n        r = A[Maxind2]\n    else:\n        r = A[Maxind1]\n    print(num_total,r)\nelse:\n    print(max(A),min(A))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "10852": {"id": 10852, "code": "s = \"level\"\nn = len(s)\ndef f(s):\n    return s == s[::-1]\nif f(s) and f(s[:(n-1)//2]) and f(s[(n+3)//2-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3453": {"id": 3453, "code": "def main():\n a = 20;b = 30\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "17688": {"id": 17688, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"1905\"\n    month = [i for i in range(1, 13)]\n    if int(s[:2]) not in month and int(s[2:]) in month:\n        print('YYMM')\n    elif int(s[:2]) in month and int(s[2:]) not in month:\n        print('MMYY')\n    elif int(s[:2]) in month and int(s[2:]) in month:\n        print('AMBIGUOUS')\n    else:\n        print('NA')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "3908": {"id": 3908, "code": "def main():\n    X = 13;Y = 3;Z = 1\n    rest = X - Z\n    c = 0\n    while rest > 0:\n        rest = rest - Y - Z\n        if rest < 0:\n            print(c)\n            return\n        elif rest == 0:\n            print(c+1)\n            return\n        else:\n            c += 1\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">"]}, "7363": {"id": 7363, "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\ndef hp(h: int, n: int, A: list) -> str:\n    damage = 0                   \n    for i in range(0, n):        \n        damage += int(A[i])      \n        i += 1                   \n    if (h - damage) <= 0:     \n        return 'Yes'\n    else:              \n        return 'No'\nprint(hp(h, n, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "9839": {"id": 9839, "code": "def main():\n    n = 8\n    S = \"))))((((\"\n    left_shortage = 0\n    now = 0\n    for s in S:\n        if s == \"(\":\n            now += 1\n        else:\n            now -= 1\n            left_shortage = min(now, left_shortage)\n    right_shortage = 0\n    now = 0\n    for s in S[::-1]:\n        if s == \")\":\n            now += 1\n        else:\n            now -= 1\n            right_shortage = min(now, right_shortage)\n    print(\"(\"*-left_shortage + S + \")\"*-right_shortage)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6520": {"id": 6520, "code": "import bisect\ndef main():\n    n = 6\n    A = [3, 14, 159, 2, 6, 53]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2643, 383, 2, 79, 50, 288]\n    A.sort()\n    B.sort()\n    C.sort()\n    res = [0]*(n)\n    j = 0\n    res2=[0]*(n)\n    for i in range(n):\n        res[i]=bisect.bisect_left(A, B[i])\n        res2[i]=n-bisect.bisect_right(C, B[i])\n    ans = 0\n    for i in range(n):\n        ans+=(res[i]*res2[i])\n    return ans\nif __name__ == '__main__':\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16512": {"id": 16512, "code": "def binary_search(b, a):\n    low = 0\n    high = len(b) - 1\n    while low <= high:\n        mid = (low + high) // 2\n        guess = b[mid]\n        if guess == a:\n            return b[mid]\n        elif guess > a:\n            high = mid - 1\n        else:\n            low = mid + 1\n    abs_low = a * 4\n    if len(b) > low: \n        abs_low = abs(b[low] - a)\n    abs_high = abs(b[high] - a)\n    return b[high] if abs_low > abs_high else b[low]\nif __name__ == \"__main__\":\n    n = 2\n    a = [100, 0]\n    a.sort()\n    b = a[0:len(a)-1]\n    c = binary_search(b, a[len(a)-1] / 2)\n    print(str(a[len(a)-1]) + \" \" + str(c))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8108": {"id": 8108, "code": "def main():\n    n = 4;k = 3\n    a_lst = [2, 3, 1, 4]\n    tmp = k\n    count = 1\n    while tmp < n:\n        tmp += k - 1\n        count += 1\n    print(count)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12336": {"id": 12336, "code": "S = \"level\"\ndef iskai(s):\n  result=False\n  if s == s[::-1]:\n    result=True\n  return(result)\nans = 'No'\nhf = len(S)//2 + 1\nif iskai(S) and iskai(S[:hf-1]) and iskai(S[hf:]):\n  ans = 'Yes'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "18808": {"id": 18808, "code": "H = 3\nW = 7\nN = 10\ndef paint(H,W,N):\n    large = max(H,W)\n    if N/large == int(N/large):\n        return int(N/large)\n    else:\n        return int (N/large)+1\nprint(paint(H,W,N))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15132": {"id": 15132, "code": "def combination(n,r=-1):\n    if r==-1:\n        r = n\n    if (r<0) or (n<r):\n        return 0\n    cur = 1\n    res = []\n    res.append(cur)\n    for i in range(1,r+1):\n        cur *= n + 1 -i\n        cur //= i\n        res.append(cur)\n    return res\nN = 2;P = 0\nA = 2\nB = N - A\nC = combination(A)\ncomb = 0\nfor i in range(P,A+1,2):\n    comb += C[i]\nprint(2**B * comb)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15029": {"id": 15029, "code": "def fact(n):\n  a = 1\n  for i in range(2, n+1):\n    a *= i\n  return a\ndef comb(n, r):\n  return fact(n) // fact(r) // fact(n-r)\nn = 1;p = 1\na = [50]\nzero = 0\none = 0\nfor i in a:\n  if i % 2 == 0:\n    zero += 1\n  else:\n    one += 1\nif p == 0:\n  ans = 2 ** zero\n  c = 0\n  for i in range(0, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)\nelse:\n  ans = 2 ** zero\n  c = 0\n  for i in range(1, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)", "coverage": [">", "!", "!", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "13349": {"id": 13349, "code": "def resolve():\n  s = \"happy,newyear,enjoy\"\n  print(s.replace(',', ' '))\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "2482": {"id": 2482, "code": "import sys\ndef input(): return \"1 7 9 4\".rstrip()\ndef main():\n    a = 1;b = 4;c = 7;d = 9\n    if a==1 and b==4 and c==7 and d==9:\n        print(\"YES\")\n    else:print(\"NO\")\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "10402": {"id": 10402, "code": "def check(a,b):\n  d=[]\n  for i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n      d.append(i)\n  return d[::-1]\na = 100;b = 50;k = 4\nprint(check(a,b)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10628": {"id": 10628, "code": "a = 8;b = 12;k = 2\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nimport math\nprint(sorted(make_divisors(math.gcd(a,b)),reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14828": {"id": 14828, "code": "import sys,math\ninput = sys.stdin.readline\ndef f(s):\n    n = int(s)%2\n    return n\nN = 3;P = 0\nA = [1, 1, 1]\nc0 = A.count(0)\nc1 = A.count(1)\nfact = [1]* (c1+1)\nfor i in range(1,c1+1):\n    fact[i]= fact[i-1]*i\ncnt = 0\nfor i in range(P,c1+1,2):\n    cnt += fact[c1]//fact[i]//fact[c1-i]\nprint(cnt*pow(2,c0))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2794": {"id": 2794, "code": "def main():\n    s = \"1234567876\"\n    comp_num = 753\n    min_diff = 754\n    for i in range(len(s)-2):\n        n = int(s[i:i+3])\n        diff = abs(comp_num - n)\n        if min_diff > diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12565": {"id": 12565, "code": "a = 100;b = 50;k = 4\ndef make_divisors(n): \n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_d = set(make_divisors(a))\nb_d = set(make_divisors(b))\nd = sorted(list(a_d & b_d), reverse=True)\nprint(d[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14850": {"id": 14850, "code": "import math\ndef combination(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nodd = 0\neven = 0\nfor a in A:\n    if a % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n    tmp = combination(odd, i)\n    for j in range(0, even+1):\n        ans += tmp * combination(even, j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13723": {"id": 13723, "code": "def resolve():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    T = h2*60 + m2 - (h1*60 + m1)\n    print(T-k)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "12986": {"id": 12986, "code": "def main():\n    x = 5\n    if x in [3, 5, 7]:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "15358": {"id": 15358, "code": "import sys\nfrom itertools import accumulate\ndef input(): return \"12 3 1\".strip()\ndef main():\n    x = 12;y = 3;z = 1\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14878": {"id": 14878, "code": "n = 3;p = 0\nlis = [1, 1, 1]\ndef nCk( n, k):\n  ans = 1\n  for i in range(k):\n    ans *= (n-i)\n  for i in range(k):\n    ans /= (k-i)\n  return ans\ne = 0\no = 0\nfor i in lis:\n  if i % 2 == 0:\n    e += 1\n  else:\n    o += 1\nif p == 0:\n  ans = 1\n  for i in range( o//2):\n    ans += nCk( o, (i+1)*2)\n  print( int( ans * 2**e))\nelse:\n  ans = 0\n  for i in range( o//2):\n    ans += nCk( o, i*2+1)\n  print( int( ans * 2**e))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "11650": {"id": 11650, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    S = \"SAT\"\n    weeks = ['SUN','MON','TUE','WED','THU','FRI','SAT']\n    for i in range(len(weeks)):\n        if weeks[i] == S:\n            print(7-i)\n            return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8350": {"id": 8350, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 7\n    a1_list = [3, 3, 4, 5, 4, 5, 3]\n    a2_list = [5, 3, 4, 4, 2, 3, 2]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10013": {"id": 10013, "code": "def main():\n    n = 6\n    s = \")))())\"\n    l, r = 0, 0\n    for c in s:\n        if c == '(':\n            l += 1\n        else:\n            if l:\n                l -= 1\n            else:\n                r += 1\n    print('(' * r + s + ')' * l)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "15314": {"id": 15314, "code": "import math\ndef main():\n  x = 12;y = 3;z = 1\n  print(int((x-z)/(y+z)))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "12244": {"id": 12244, "code": "def flg(s):\n  le = len(s) // 2\n  return s[:le] == s[::-1][:le]\ns = \"level\"\nle1 = len(s) // 2\nt = s[:le1]\nprint([\"No\", \"Yes\"][flg(s) and flg(t)])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8348": {"id": 8348, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 5\n    a1_list = [3, 2, 2, 4, 1]\n    a2_list = [1, 2, 2, 2, 1]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1790": {"id": 1790, "code": "def resolve():\n    n = 10;a = 3;b = 5\n    if n >= a + b:\n        mn = 0\n    else:\n        mn = a + b - n\n    print(min(a, b), mn)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14501": {"id": 14501, "code": "from functools import lru_cache\nN = 3;P = 0\nA_list = [1, 1, 1]\nA_odd_list = list()\nA_even_list = list()\nfor A in A_list:\n    if A%2 == 0:\n        A_even_list.append(A)\n    else:\n        A_odd_list.append(A)\nfrom operator import mul\nfrom functools import reduce\n@lru_cache(maxsize=100000000)\ndef combinations_count(n, r):\n    r = min(r, n - r)\n    numer = reduce(mul, range(n, n - r, -1), 1)\n    denom = reduce(mul, range(1, r + 1), 1)\n    return numer // denom\nchoice_odd = 0\nchoice_even = 0\nodds = len(A_odd_list)\nevens = len(A_even_list)\nif P == 1:\n    for i in range(1,odds+1,2):\n        choice_odd += combinations_count(odds,i)\n    for i in range(0,evens+1,1):\n        choice_even += combinations_count(evens,i)\nelse:\n    for i in range(0,odds+1,2):\n        choice_odd += combinations_count(odds,i)\n    for i in range(0,evens+1,1):\n        choice_even += combinations_count(evens,i)\nprint(choice_odd*choice_even)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "7406": {"id": 7406, "code": "import sys\ninput = sys.stdin.buffer.readline\ndef MAP(): return map(int, \"211 5\".split())\ndef LIST(): return list(map(int, \"31 41 59 26 53\".split()))\nh, n = MAP()\na = LIST()\nprint('Yes') if h <= sum(a) else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17761": {"id": 17761, "code": "def main():\n  s = \"1700\"\n  sa=int(s[:2])\n  sb=int(s[2:])\n  if 1 <= sa and sa <= 12:\n    if 1 <= sb and sb <= 12:\n      print('AMBIGUOUS')\n    else:\n      print('MMYY')\n  else:\n    if 1 <= sb and sb <= 12:\n      print('YYMM')\n    else:\n      print('NA')\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">"]}, "10738": {"id": 10738, "code": "S = \"atcoder\"\nN = len(S)\ndef palindrome(string):\n  return 0 if string==string[::-1] else 1\nls1 = S[0:int((N-1)/2)]\nls2 = S[int((N+3)/2-1):N]\nif palindrome(S) == palindrome(ls1) == palindrome(ls2) == 0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "16420": {"id": 16420, "code": "def main():\n    n = 5\n    a = [2, 4, 6, 9, 11]\n    t = a[-1]\n    s = t/2\n    z = a[0]\n    for i in range(1,n-1):\n        if abs(a[i]-s)<abs(z-s):\n            z = a[i]\n    print(t,z)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8292": {"id": 8292, "code": "import math\ndef Minimization(n , k , al):\n    ans = math.ceil((n - 1) / (k - 1))\n    return ans\ndef main():\n    n = 8;k = 3\n    al = [7, 3, 1, 8, 4, 6, 2, 5]\n    print(Minimization(n , k , al))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14989": {"id": 14989, "code": "import sys\ndef MI(): return map(int,\"1 1\".rstrip().split())\ndef LI(): return list(map(int,\"50\".rstrip().split()))  \nN,P = MI()\nA = LI()\nx = sum(A[i] % 2 == 0 for i in range(N))  \ny = N-x  \nif y == 0:\n    print(0 if P == 1 else 2**x)\nelse:\n    print(2**(x+y-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "19260": {"id": 19260, "code": "def solve():\n    N = 12\n    if N % 2 != 0:\n        return 0\n    else:\n        ans = 0\n        N //= 10\n        while N > 0:\n            ans += N\n            N //= 5\n        return ans\nprint(solve())", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "1116": {"id": 1116, "code": "def main():\n    N = 111\n    divide = N // 111\n    rest = N % 111\n    if rest > 0:\n        print((divide+1)*111)\n    else:\n        print(divide*111)\nmain()  ", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14585": {"id": 14585, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 3;p = 0\nA = [1, 1, 1]\nx = A.count(0)\ny = n - x\nif p == 1:\n    cnt = 0\n    for i in range(y + 1):\n        if i % 2 == 1:\n            cnt += combinations_count(y, i)\n    print(2 ** x * cnt)\nelse:\n    cnt = 0\n    for i in range(y + 1):\n        if i % 2 == 0:\n            cnt += combinations_count(y, i)\n    print(2 ** x * cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "10085": {"id": 10085, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 3\n    S = \"())\"\n    ans = \"\"\n    n_left = 0\n    n_right = 0\n    for s in S:\n        if s == \"(\":\n            n_left += 1\n        else:\n            if n_left > 0:\n                n_left -= 1\n            else:\n                n_right += 1\n    ans = \"\".join((\"(\" * n_right, S, \")\" * n_left))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15882": {"id": 15882, "code": "X = 12;Y = 3;Z = 1\ndef solve(x,y,z):\n  cnt = 0\n  x -= z\n  while True:\n    x -= y + z\n    if x >= 0:\n      cnt += 1\n    else:\n      return cnt\nprint(solve(X,Y,Z))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "5907": {"id": 5907, "code": "def main():\n  num = 100\n  if num%2==0:\n    print(int(num/2))\n  else:\n    print(int(num/2)+1)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12308": {"id": 12308, "code": "S = \"akasaka\"\nsize=len(S)\ndef palin(S,size):\n    for i  in range (size//2):\n        if S[i]!=S[-1-i]:\n            return False\n    return True\nif palin(S,size) == True:\n    L=S[:size//2]\n    R=S[size//2+2:]\n    if palin(L,size//2) & palin(L,size//2):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!"]}, "13950": {"id": 13950, "code": "import sys\ndef main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    ans = 0\n    i = 0\n    while 1:\n        if i == N:\n            break\n        a = i\n        while a < N-1 and A[a] <= A[a+1]:\n            a += 1\n        b = i\n        while b < N-1 and A[b] >= A[b+1]:\n            b += 1\n        i = max(a,b) + 1\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11765": {"id": 11765, "code": "import heapq\nfrom sys import stdin\ninput = stdin.readline\nm1 = 11;d1 = 30\nm2 = 12;d2 = 1\ndef main():\n    if m1 ==12:\n        if m2 == 1 and d2 ==1 :\n            print(1)\n        else:\n            print(0)\n    else:\n        if m2 ==m1+1 and d2 ==1:\n            print(1)\n        else:\n            print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "15874": {"id": 15874, "code": "def main():\n    x = 13;y = 3;z = 1\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "14896": {"id": 14896, "code": "import sys\nN = 3;P = 0\nA = [1, 1, 1]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a % 2 == 1:\n        kisu += 1\n    else:\n        gusu += 1\ntotal = 2 ** N \nx = [1]\nres = 1\nfor i in range(1, N + 1):\n    res *= i\n    x.append(res)\ndef cmb(n, r):\n    return x[n] // (x[r] * x[n - r])\nans = 0 \nfor k in range(kisu + 1):\n    if k % 2 == 0:\n        ans += cmb(kisu, k) * (2 ** gusu)\nif P == 0:\n    print(ans)\nelse:\n    print(total - ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "13163": {"id": 13163, "code": "def main():\n    print(*\"happy,newyear,enjoy\".split(\",\"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">"]}, "459": {"id": 459, "code": "def c2a(c):\n    return (26 - ord(c) + ord(\"a\")) % 26\ns = \"a\"\nk = 25\nl = len(s)\nans = \"\"\nfor i, e in enumerate(s, 1):\n    if i == l:\n        code = (ord(e) - ord(\"a\") + k) % 26 + ord(\"a\")\n        c = chr(code)\n    else:\n        cnt = c2a(e)\n        if cnt <= k:\n            c = \"a\"\n            k -= cnt\n        else:\n            c = e\n    ans += c\nprint(ans)", "coverage": [">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "10606": {"id": 10606, "code": "def gcd(a, b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b, a%b)\ndef make_divisors(n):\n  lower_divisors , upper_divisors = [], []\n  i = 1\n  while i*i <= n:\n    if n % i == 0:\n      lower_divisors.append(i)\n      if i != n // i:\n        upper_divisors.append(n//i)\n    i += 1\n  return lower_divisors + upper_divisors[::-1]\nA = 1;B = 1;K = 1\nc=gcd(A,B)\nprint(make_divisors(c)[-K])", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10410": {"id": 10410, "code": "def mi():\n    return map(int, \"8 12 2\".split())\ndef main():\n    A, B, K = mi()\n    cnt = 0\n    for i in range(min(A, B), 0, -1):\n        if A%i == 0 and B%i == 0:\n            cnt += 1\n            if cnt == K:\n                print(i)\n                return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12987": {"id": 12987, "code": "def main():\n    x = 6\n    if x in [3, 5, 7]:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "15112": {"id": 15112, "code": "n = 1;p = 1\na = [50]\ndef comb(n, r):\n    ans = 1\n    if n < 2*r:\n        r = n - r\n    for i in range(r):\n        ans *= (n - i)\n        ans //= (i + 1)\n    return ans\nev, od = 0, 0\nfor i in a:\n    if i%2 == 0:\n        ev += 1\n    else:\n        od += 1\nans = 0\nif p == 0:\n    for i in range(0, od+1, 2):\n        for j in range(ev+1):\n            ans += comb(od, i)*comb(ev, j)\nelse:\n    for i in range(1, od+1, 2):\n        for j in range(ev+1):\n            ans += comb(od, i)*comb(ev, j) \nprint(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]}, "6372": {"id": 6372, "code": "def main():\n    from bisect import bisect_right\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    num_greater_than_b = []\n    for b in B:\n        num_greater_than_b.append(N-bisect_right(C,b))\n    csum = [0]*(N+1)\n    for i in range(N-1,-1,-1):\n        csum[i] = csum[i+1]+num_greater_than_b[i]\n    ans = 0\n    for i,a in enumerate(A):\n        ans += csum[bisect_right(B,a)]\n    print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "99": {"id": 99, "code": "def solve():\n    S = \"codefestival\"\n    l = len(S)\n    K = 100\n    i = 0\n    ans = ''\n    while i < l-1 and K>0:\n        n = ord(S[i])-ord('a')\n        if n==0:\n            ans += 'a'\n            i += 1\n            continue\n        if 25-n<K:\n            ans += 'a'\n            K -= 26-n\n        else:\n            ans += S[i]\n        i += 1\n    if K == 0:\n        ans += S[i:]\n    else:\n        ans += chr((ord(S[-1])-ord('a')+K)%26+ord('a'))\n    return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">"]}, "5026": {"id": 5026, "code": "import sys\ndef LS2(): \n    return list(\"internationalization\".rstrip())  \ns = LS2()\nprint(s[0]+str(len(s)-2)+s[-1])", "coverage": [">", ">", ">", ">", ">"]}, "11114": {"id": 11114, "code": "S = \"atcoder\"\nlenS = len(S)\nans = \"No\"\ndef checkPalindrome(string):\n    l = len(string)\n    string2 = string[::-1]\n    if string[:l//2] == string2[:l//2]:\n        return True\n    else:\n        return False\nif checkPalindrome(S):\n    if checkPalindrome(S[:(lenS-1)//2]):\n        if checkPalindrome(S[(lenS+3)//2-1:]):\n            ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">"]}, "10876": {"id": 10876, "code": "def CheckPalindrome(S, L):\n    result = True\n    for i in range((L+1)//2):\n        if S[i] != S[-i-1]:\n            result = False\n            break\n    return result\nresult = True\nS = \"atcoder\"\nL = len(S)\nresult = CheckPalindrome(S, L)\nif result:\n    S2 = S[:(len(S)-1) // 2]\n    L2 = len(S2)\n    result = CheckPalindrome(S2, L2)\nif result:\n    S3 = S[(L+3)//2-1:]\n    L3 = len(S3)\n    result = CheckPalindrome(S3, L3)\nif result:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", "!", ">", "!", "!", ">"]}, "16010": {"id": 16010, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    a = 12;b = 4\n    print(max(0, a-b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "53": {"id": 53, "code": "import sys\ninput = sys.stdin.readline\ndef read():\n    s = \"a\"\n    K = 25\n    return s, K\ndef solve(s, K):\n    ans = []\n    for a in s:\n        c = (ord(\"z\") - ord(a) + 1) % 26\n        if c <= K:\n            K -= c\n            ans.append(\"a\")\n        else:\n            ans.append(a)\n    if K > 0:\n        c = (ord(ans[-1]) - ord(\"a\") + K) % 26\n        ans[-1] = chr(c + ord(\"a\"))\n    return \"\".join(ans)\nif __name__ == '__main__':\n    inputs = read()\n    outputs = solve(*inputs)\n    if outputs is not None:\n        print(\"%s\" % str(outputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3711": {"id": 3711, "code": "def main():\n    A = 12;B = 4\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "14500": {"id": 14500, "code": "from functools import lru_cache\nN = 1;P = 1\nA_list = [50]\nA_odd_list = list()\nA_even_list = list()\nfor A in A_list:\n    if A%2 == 0:\n        A_even_list.append(A)\n    else:\n        A_odd_list.append(A)\nfrom operator import mul\nfrom functools import reduce\n@lru_cache(maxsize=100000000)\ndef combinations_count(n, r):\n    r = min(r, n - r)\n    numer = reduce(mul, range(n, n - r, -1), 1)\n    denom = reduce(mul, range(1, r + 1), 1)\n    return numer // denom\nchoice_odd = 0\nchoice_even = 0\nodds = len(A_odd_list)\nevens = len(A_even_list)\nif P == 1:\n    for i in range(1,odds+1,2):\n        choice_odd += combinations_count(odds,i)\n    for i in range(0,evens+1,1):\n        choice_even += combinations_count(evens,i)\nelse:\n    for i in range(0,odds+1,2):\n        choice_odd += combinations_count(odds,i)\n    for i in range(0,evens+1,1):\n        choice_even += combinations_count(evens,i)\nprint(choice_odd*choice_even)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", ">"]}, "13951": {"id": 13951, "code": "import sys\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 0\n    i = 0\n    while 1:\n        if i == N:\n            break\n        a = i\n        while a < N-1 and A[a] <= A[a+1]:\n            a += 1\n        b = i\n        while b < N-1 and A[b] >= A[b+1]:\n            b += 1\n        i = max(a,b) + 1\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "2408": {"id": 2408, "code": "n = 0;m = 3\ndef f(x):\n  return x*(x-1)//2\nprint(f(n) + f(m))", "coverage": [">", ">", ">", ">"]}, "13853": {"id": 13853, "code": "def nyu():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    return N,A\ndef kansu(LN,LA):\n    highflg = False\n    lowflg = False\n    count = 1\n    for n in range(LN-1):\n        if LA[n] == LA[n+1]:\n            continue\n        elif LA[n] < LA[n+1]:\n            highflg = True\n            if lowflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n        else:\n            lowflg = True\n            if highflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n    print(count)\nN,A = nyu()\nkansu(N,A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14559": {"id": 14559, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\nA = [1, 3]\nAA = [0]*n\nfor i in range(n):\n    if A[i]%2:\n        AA[i]=1\nsumA = sum(AA)\nres1 = 0\nfor i in range(p,sumA+1,2):\n    res1 += comb(sumA,i)\nres0 = 2**(n-sumA)\nprint(res1*res0)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10274": {"id": 10274, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 3\n    s = \"())\"\n    left_left=0\n    need_left=0\n    for i in range(n):\n        if s[i]==\"(\":\n            left_left+=1\n        else:\n            if left_left>0:\n                left_left-=1\n            else:\n                need_left+=1\n    right_right=0\n    need_right=0\n    for i in range(n-1,-1,-1):\n        if s[i]==\")\":\n            right_right+=1\n        else:\n            if right_right>0:\n                right_right-=1\n            else:\n                need_right+=1\n    print(\"(\"*need_left+s+\")\"*need_right)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "13998": {"id": 13998, "code": "def main():\n    N = 6\n    lst = [1, 2, 3, 2, 2, 1]\n    last = lst[0]\n    A = [last]\n    for i in range(1, N):\n        if lst[i] == last: continue\n        last = lst[i]\n        A.append(lst[i])\n    left = right = output = 0\n    while left < len(A):\n        if left == len(A)-1:\n            output += 1\n            break\n        if A[left+1] - A[left] > 0:\n            while right < len(A)-1 and A[right] < A[right+1]:\n                right += 1\n        elif A[left+1] - A[left] < 0:\n            while right < len(A)-1 and A[right] > A[right+1]:\n                right += 1\n        output += 1\n        left = right + 1\n        right = left\n    print(output)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14711": {"id": 14711, "code": "import functools\n@functools.lru_cache(maxsize=None)\ndef num_counts(size, P):\n    if size == 1:\n        return 1 + (A[size - 1] + 1) % 2 if P == 0 else A[size - 1] % 2\n    if A[size - 1] % 2 == 0:\n        return num_counts(size - 1, P) * 2\n    else:\n        return num_counts(size - 1, P) + num_counts(size - 1, (P + 1) % 2)\nif __name__ == \"__main__\":\n    N = 1;P = 1\n    A = [50]\n    print(num_counts(len(A), P))", "coverage": [">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "130": {"id": 130, "code": "import sys\nclass alphabet(): \n    def __init__(self, capitalize):\n        self.num = dict() \n        self.index = dict() \n        self.abc = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"            ,\"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n        if capitalize: \n            for i in range(26): self.abc[i] = self.abc[i].upper()\n        for i, a in enumerate(self.abc):\n            self.num[a] = i\n            self.index[i] = a\ndef solve():\n    S = ['a']\n    length = len(S)\n    K = 25\n    changed = 0\n    AB = alphabet(False)\n    for i, s in enumerate(S):\n        aId = AB.num[s]\n        if aId == 0: continue\n        else:\n            toA = 26 - aId\n            if K - changed >= toA: \n                S[i] = \"a\"\n                changed += toA\n    if K - changed > 0:\n        aId = AB.num[S[length - 1]]\n        S[length - 1] = AB.index[(aId + K - changed) % 26]\n    print(\"\".join(map(str, S)))\n    return 0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "17203": {"id": 17203, "code": "a = \"D\";b = \"H\"\ndef ch(x):\n  return 1 if x==\"D\" else -1\na=ch(a)\nb=ch(b)\nprint(\"H\" if a*b==1 else \"D\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "15041": {"id": 15041, "code": "N = 1;P = 1\nA = [50]\nNO = 0\nNE = 0\nfor a in A:\n    if a % 2 == 0:\n        NE += 1\n    else:\n        NO += 1\ndef comb(n, k):\n    w = min(n - k, k)\n    if n <= 1 or w == 0:\n        return 1\n    a = n\n    for i in range(n - 1, n - w, -1):\n        a *= i\n    b = 1\n    for i in range(2, w + 1):\n        b *= i\n    return a // b\ne = 2 ** NE\no = 0\nfor i in range(P, NO + 1, 2):\n    o += comb(NO, i)\nif P == 0:\n    res = e * o if o > 0 else e\nelse:\n    res = o * e if e > 0 else o\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "7361": {"id": 7361, "code": "h = 10;n = 3\nA = [4, 5, 6]\ndef hp(h: int, n: int, A: list) -> str:\n    damage = 0                   \n    for i in range(0, n):        \n        damage += int(A[i])      \n        i += 1                   \n    if (h - damage) <= 0:     \n        return 'Yes'\n    else:              \n        return 'No'\nprint(hp(h, n, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2420": {"id": 2420, "code": "import math\ndef calc_combi(n,m):\n    if n<=1:\n        return 0\n    return math.factorial(n)/(math.factorial(m)*(math.factorial(n-m)))\nn = 4;m = 3\nans=int(calc_combi(n,2)+calc_combi(m,2))\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">"]}, "936": {"id": 936, "code": "import sys\nk = 2\ndef a(n):\n    t = n * 10 + 7\n    return t % k\na_i = 7\ni = 1\nif a_i % k == 0:\n    print(i)\n    sys.exit()\nfor j in range(k+1):\n    a_i = a(a_i)\n    i += 1\n    if a_i % k == 0:\n        print(i)\n        sys.exit()\nprint(-1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "10600": {"id": 10600, "code": "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nA = 100;B = 50;K = 4\nset_a = set(make_divisors(A))\nset_b = set(make_divisors(B))\nset_ab = set_a.intersection(set_b)\nlist_ab = list(set_ab)\nlist_ab.sort()\nprint(list_ab[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17372": {"id": 17372, "code": "def main():\n    S = \"1700\"\n    first = S[:2]\n    second = S[2:]\n    YYMM = False\n    MMYY = False\n    if \"00\" <= first <= \"99\" and \"01\" <= second <= \"12\":\n        YYMM = True\n    if \"01\" <= first <= \"12\" and \"00\" <= second <= \"99\":\n        MMYY = True\n    if YYMM and MMYY:\n        ans = \"AMBIGUOUS\"\n    elif YYMM:\n        ans = \"YYMM\"\n    elif MMYY:\n        ans = \"MMYY\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "17315": {"id": 17315, "code": "import sys\nimport math\nimport bisect\ndef main():\n    a = \"D\";b = \"D\"\n    if a == 'H' and b == 'H':\n        print('H')\n    elif a == 'D' and b == 'D':\n        print('H')\n    else:\n        print('D')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "5927": {"id": 5927, "code": "def solve():\n    N = 2\n    print(-(-N//2))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "7185": {"id": 7185, "code": "def answer(h: int, n: int, a: []) -> str:\n    return 'Yes' if h <= sum(a) else 'No'\ndef main():\n    h = 10;n = 3\n    a = map(int, \"4 5 6\".split())\n    print(answer(h, n, a))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2761": {"id": 2761, "code": "def main():\n    N = {'9', '4', '1', '7'}\n    if set(['1', '9', '7', '4']) == N:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "10610": {"id": 10610, "code": "a = 8;b = 12;k = 2\ndef divisor(n):\n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = set(table)\n    return table\nablist = sorted(list(divisor(a) & divisor(b)),reverse=True)\nprint(ablist[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12447": {"id": 12447, "code": "from sys  import stdin,stdout\nimport bisect\nimport math\ndef st():\n    return list(stdin.readline().strip())\ndef inp():\n    return int(stdin.readline())\ndef li():\n    return list(map(int,stdin.readline().split()))\ndef mp():\n    return map(int,stdin.readline().split())\ndef pr(n):\n    stdout.write(str(n)+\"\\n\")\ndef soe(limit):\n    l=[1]*(limit+1)\n    prime=[]\n    for i in range(2,limit+1):\n        if l[i]:\n            for j in range(i*i,limit+1,i):\n                l[j]=0\n    for i in range(2,limit+1):\n        if l[i]:\n            prime.append(i)\n    return prime\ndef segsoe(low,high):\n    limit=int(high**0.5)+1\n    prime=soe(limit)\n    n=high-low+1\n    l=[0]*(n+1)\n    for i in range(len(prime)):\n        lowlimit=(low//prime[i])*prime[i]\n        if lowlimit<low:\n            lowlimit+=prime[i]\n        if lowlimit==prime[i]:\n            lowlimit+=prime[i]\n        for j in range(lowlimit,high+1,prime[i]):\n            l[j-low]=1\n    for i in range(low,high+1):\n        if not l[i-low]:\n            if i!=1:\n                print(i)\ndef power(a,n):\n    r=1\n    while n:\n        if n&1:\n            r=(r*a)\n        a*=a\n        n=n>>1\n    return r\ndef solve():\n    s = \"level\"\n    n=len(s)\n    a=s[:(n-1)//2]\n    b=a[::-1]\n    c=s[(n+3)//2 -1 :]\n    d=c[::-1]\n    if s==s[::-1] and a==b and c==d:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfor _ in range(1):\n    solve()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13529": {"id": 13529, "code": "s = \"happy,newyear,enjoy\"\ndef main():\n  print(s.replace(',',' '))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">"]}, "4145": {"id": 4145, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    h = H2 - H1\n    m = M2 - M1\n    ans = h*60 + m - K\n    if ans > 0:\n        print(ans)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "19080": {"id": 19080, "code": "def max_exponent(a, n):\n    ret, v = 0, 1\n    while a * v <= n:\n        ret += 1\n        v *= a\n    return ret\ndef main():\n    N = 5\n    if N % 2 == 1:\n        print(0)\n        return\n    count_5_in_even, pow_5 = 0, 5\n    for k in range(1, max_exponent(5, N) + 1):\n        count_5_in_even += (N // pow_5) // 2\n        pow_5 *= 5\n    count_2_in_even, pow_2 = 0, 2\n    for k in range(1, max_exponent(2, N) + 1):\n        count_2_in_even += N // k\n        pow_2 *= 2\n    print(min(count_5_in_even, count_2_in_even))\nif __name__ == '__main__':\n    main()", "coverage": [">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13607": {"id": 13607, "code": "def main():\n    print(\"happy,newyear,enjoy\".replace(',', ' '))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "13787": {"id": 13787, "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    m = 60 - m1\n    h1 += 1\n    m += (h2 - h1)*60 + m2\n    print(max(0, m - k))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6086": {"id": 6086, "code": "def main():\n    n = 2\n    if n % 2 == 0:\n        print(int(n/2))\n    else:\n        print(int(n/2)+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "2745": {"id": 2745, "code": "def resolve():\n    l = {1, 4, 9, 7}\n    if l == {1, 7, 9, 4}:\n        print('YES')\n    else:\n        print('NO')\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "15528": {"id": 15528, "code": "def main():\n    X = 12;Y = 3;Z = 1\n    print(int((X - Z) / (Y + Z)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "14602": {"id": 14602, "code": "def fur(n, r):\n    return  math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nimport math\nn = 1;p = 1\nA = [0]\nfrom collections import Counter\nc = dict(Counter(A))\na, b = 0, 0\nif c.get(0) != None:\n    a = c[0]\nif c.get(1) != None:\n    b = c[1]\nresult = 0\npiyo = 1\nfor i in range(1, a+1):\n    piyo += fur(a, i)\nfor i in range(0, b+1, 2):\n    result += fur(b, i) * piyo\nif p == 0:\n    print(result)\nelse:\n    hoge = 0\n    for i in range(n+1):\n        hoge += fur(n, i)\n    print(hoge - result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15226": {"id": 15226, "code": "import math\ndef main():\n  x = 64145;y = 123;z = 456\n  x -= z\n  print(x//(y+z))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2944": {"id": 2944, "code": "def main():\n    s = \"35753\"\n    n = len(s)\n    ans = 100000000\n    for i in range(2, n):\n        t = int(s[i - 2: i+1])\n        ans = min(ans, abs(753 - t))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13443": {"id": 13443, "code": "from sys import stdin\ndef S(): return \"haiku,atcoder,tasks\".rstrip()\ns = S()\nprint(s.replace(',',' '))", "coverage": [">", ">", ">", ">"]}, "7677": {"id": 7677, "code": "def main():\n    H = 10\n    A = map(int, \"4 5 6\".split())\n    cond = sum(A) >= H\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5565": {"id": 5565, "code": "import sys\ndef main():\n    n = 100\n    if n%2==0:\n        print(n//2)\n    else:\n        print(n//2+1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "4775": {"id": 4775, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nimport itertools\nINF = float('inf')\nfrom heapq import heapify, heappop, heappush\ndef main():\n    S = \"smiles\"\n    print(S[0] + str(len(S)-2) +S[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "573": {"id": 573, "code": "def ord_until_a(char):\n    if char == 'a':\n        return 0\n    return ord('a') + 26 - ord(char)\nS = \"xyz\"\nK = 4\nans = []\nfor s in S:\n    diff = ord_until_a(s)\n    if K >= diff:\n        ans.append('a')\n        K -= diff\n    else:\n        ans.append(s)\nif K > 0:\n    K %= 26\n    last = ord(ans[-1]) + K\n    if last > ord('z'):\n        last -= 26\n    ans[-1] = chr(last)\nprint(''.join(ans))", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", ">"]}, "17705": {"id": 17705, "code": "s = \"1700\"\ni1 = int(s[:2])\ni2 = int(s[2:])\ndef f(i):\n    if (0 < i < 13):\n        return 1\n    elif (0 < i < 100):\n        return 2\n    else:\n        return 0\nf1 = f(i1)\nf2 = f(i2)\nif (f1 == 1):\n    if (f2 == 1):\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if (f2 == 1):\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "347": {"id": 347, "code": "def main():\n    s = ['x', 'y', 'z']\n    K = 4\n    s = list(map(lambda x: ord(x), s))\n    B = [0 for _ in range(len(s))]\n    for i in range(len(s)):\n        b = 26 - (s[i] - ord(\"a\"))\n        if b == 26:\n            B[i] = 0\n        elif b <= K:\n            K -= b\n            B[i] = 0\n        else:\n            B[i] = b\n    if K != 0:\n        B[-1] -= K\n        B[-1] %= 26\n    ans = list(map(lambda c: chr(ord(\"a\") + (26 - c) % 26), B))\n    print(\"\".join(ans))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "10789": {"id": 10789, "code": "from collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\ndef ceil(a, b):\n    return (a + b - 1) // b\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\ndef solve():\n    S = \"atcoder\"\n    N = len(S)\n    if S != S[::-1]:\n        return False\n    t = S[:(N - 1) // 2]\n    if t != t[::-1]:\n        return False\n    t = S[(N + 3) // 2 - 1:]\n    if t != t[::-1]:\n        return False\n    return True\ndef main():\n    if solve():\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "10666": {"id": 10666, "code": "def gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\na = 8;b = 12;k = 2\nr = gcd(a,b)\ne = []\nfor i in range(1,r+1):\n    if r%i == 0:\n        e.append(i)\nprint(e[len(e)-k])", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1793": {"id": 1793, "code": "def main():\n    n = 10;a = 3;b = 5\n    print(min(a, b), max(0, a+b-n))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "10736": {"id": 10736, "code": "S = \"akasaka\"\nN = len(S)\ndef palindrome(string):\n  return 0 if string==string[::-1] else 1\nls1 = S[0:int((N-1)/2)]\nls2 = S[int((N+3)/2-1):N]\nif palindrome(S) == palindrome(ls1) == palindrome(ls2) == 0:\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "11380": {"id": 11380, "code": "def main():\n    S = \"SAT\"\n    week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n    for i, name in enumerate(week):\n        if name == S:\n            ans = 7 - i\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14955": {"id": 14955, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import Counter \ndef read():\n    N = 2;P = 0\n    A = [1, 3]\n    return N, P, A\ndef binom_64bit(n):\n    c = [1 for i in range(n+1)]\n    for k in range(1, n):\n        c[k] = c[k-1] * (n-k+1) // k\n    return c\ndef solve(N, P, A):\n    B = Counter([a % 2 for a in A])\n    C0 = binom_64bit(B[0])\n    C1 = binom_64bit(B[1])\n    ans = 0\n    if P == 1:\n        for i in range(0, B[0]+1):\n            for j in range(1, B[1]+1, 2):\n                ans += C0[i] * C1[j]\n    else:\n        for i in range(0, B[0]+1):\n            for j in range(0, B[1]+1, 2):\n                ans += C0[i] * C1[j]\n    return ans\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11793": {"id": 11793, "code": "from sys import stdin\ndef main():\n    M_1 = 11;D_1 = 30\n    M_2 = 12;D_2 = 1\n    if not M_1 == M_2:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14994": {"id": 14994, "code": "from collections import deque\nN = 3;P = 0\neven = 0\nodd = 0\nfor a in \"1 1 1\".split():\n    check = int(a)\n    if check % 2 == 0:\n        even += 1\n    else:\n        odd += 1\ndef comb(n, r):\n    up = 1\n    down = 1\n    for i in range(r):\n        up *= n - i\n        down *= i + 1\n    return up // down\nresult = 0\nif P == 1:\n    for i in range(1, odd+1, 2):\n        result += comb(odd, i)\nelse:\n    for i in range(0, odd+1, 2):\n        result += comb(odd, i)\nif even == 0:\n    mul = 1\nelse:\n    mul = 2 ** even\nresult *= mul\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14603": {"id": 14603, "code": "def fur(n, r):\n    return  math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nimport math\nn = 3;p = 0\nA = [1, 1, 1]\nfrom collections import Counter\nc = dict(Counter(A))\na, b = 0, 0\nif c.get(0) != None:\n    a = c[0]\nif c.get(1) != None:\n    b = c[1]\nresult = 0\npiyo = 1\nfor i in range(1, a+1):\n    piyo += fur(a, i)\nfor i in range(0, b+1, 2):\n    result += fur(b, i) * piyo\nif p == 0:\n    print(result)\nelse:\n    hoge = 0\n    for i in range(n+1):\n        hoge += fur(n, i)\n    print(hoge - result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "10354": {"id": 10354, "code": "def make_divisors(n):\n    lower_divisors, upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 8;b = 12;k = 2\nset_a = set(make_divisors(a))\nset_b = set(make_divisors(b))\nboth = list(set_a & set_b)\nboth.sort()\nprint(both[- k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14611": {"id": 14611, "code": "import math\nN = 2;P = 0\nA = [1, 3]\nremainders = [a%2 for a in A]\nodd = remainders.count(1)\neven = remainders.count(0)\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nans = 0\nfor n in range(N+1):\n  for p in range(P,n+1,2):\n    if odd >= p and even >= n-p:\n      ans += combinations_count(odd,p) * combinations_count(even,n-p)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10449": {"id": 10449, "code": "import sys\ndef input(): return \"8 12 2\".strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\nINF = float('inf')\na, b, k = LI()\ncds = []\nans = 1\nfor i in range(1, min(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        cds.append(i)\nprint(cds[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "348": {"id": 348, "code": "def main():\n    s = ['a']\n    K = 25\n    s = list(map(lambda x: ord(x), s))\n    B = [0 for _ in range(len(s))]\n    for i in range(len(s)):\n        b = 26 - (s[i] - ord(\"a\"))\n        if b == 26:\n            B[i] = 0\n        elif b <= K:\n            K -= b\n            B[i] = 0\n        else:\n            B[i] = b\n    if K != 0:\n        B[-1] -= K\n        B[-1] %= 26\n    ans = list(map(lambda c: chr(ord(\"a\") + (26 - c) % 26), B))\n    print(\"\".join(ans))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "17817": {"id": 17817, "code": "s = \"1905\"\ns_front=int(s[0]+s[1])\ns_end=int(s[2]+s[3])\ndef MM(x):\n    if 1<=x<=12:return True\n    else:return False\nif MM(s_front) and MM(s_end):print(\"AMBIGUOUS\")\nelif MM(s_front) and not MM(s_end):print(\"MMYY\")\nelif not MM(s_front) and MM(s_end):print(\"YYMM\")\nelse:print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]}, "7023": {"id": 7023, "code": "def main():\n  h = 10;n = 3\n  a = [4, 5, 6]\n  if sum(a)>=h:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "10462": {"id": 10462, "code": "def main():\n    A = 100;B = 50;K = 4\n    cnt = 0\n    ans = 0\n    for i in range(min(A, B), 0, -1):\n        if A % i == 0 and B % i == 0:\n            cnt += 1\n        if cnt == K:\n            ans = i\n            break\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5929": {"id": 5929, "code": "import math\ndef main():\n    n = 5\n    print(math.ceil(n / 2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "6388": {"id": 6388, "code": "n = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\ndef isOK(target,mid):\n  return target < mid\ndef isOK_dep(target,mid):\n  return target <= mid\ndef bin_search(l,r,li,target):\n  left = l\n  right = r\n  while right-left>1:\n    mid = (left + right)//2\n    if isOK(target,li[mid]):\n      right = mid\n    else:\n      left = mid\n  return left\ndef bin_search_dep(l,r,li,target):\n  left = l\n  right = r\n  while right-left>1:\n    mid = (left + right)//2\n    if isOK_dep(target,li[mid]):\n      right = mid\n    else:\n      left = mid\n  return left\nans = 0\nfor i in range(n):\n  top,bottom = 0,0\n  top += bin_search_dep(-1,n,A,B[i]) + 1\n  bottom += n-bin_search(-1,n,C,B[i])-1\n  ans += top * bottom\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16976": {"id": 16976, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    a = \"D\";b = \"D\"\n    if a == \"H\":\n        print(\"H\" if b == \"H\" else \"D\")\n    else:\n        print(\"D\" if b == \"H\" else \"H\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10127": {"id": 10127, "code": "def main():\n    N = 3\n    S = \"())\"\n    count = 0\n    for i in range(N-1, -1, -1):\n        if S[i] == \")\":\n            count +=1\n        else:\n            if count:\n                count -= 1\n            else:\n                S += \")\"\n    S = \"(\"*count + S\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11117": {"id": 11117, "code": "import sys\ninput = \"<function <lambda>>\"\ndef pal(s, L, R):\n    return s[L] == s[R] and (L >= R or pal(s, L + 1, R - 1))\ns = \"atcoder\"\nn = len(s)\nprint('Yes' if pal(s, 0, n - 1) and pal(s, 0, (n - 1) // 2 - 1) and pal(s, (n + 3) // 2 - 1, n - 1) else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10582": {"id": 10582, "code": "A = 8;B = 12;K = 2\ndef ans120(A:int, B:int, K:int):\n    l=sorted([A,B])\n    ans_list=[]\n    for i in range(1,l[1]+1):\n        if A%i==0 and B%i==0:\n            ans_list.append(i)\n    return ans_list[-K]\nprint(ans120(A,B,K))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13870": {"id": 13870, "code": "def main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    idx = 0\n    ans = 0\n    for i in range(len(A)):\n        if idx + 1 > len(A) - 1 :\n            break\n        m = \"\"\n        if A[idx] < A[idx + 1]:\n            m = \"+\"\n        elif A[idx] > A[idx + 1]:\n            m = \"-\"\n        else:\n            find = False\n            for j in range(idx, len(A)-1):\n                if A[j] < A[j + 1]:\n                    m = \"+\"\n                    find = True\n                    idx = j\n                    break\n                elif A[j] > A[j + 1]:\n                    m = \"-\"\n                    find = True\n                    idx = j\n                    break\n            if find == False:\n                print(ans + 1)\n                exit()\n        for j in range(idx, len(A) - 1):\n            if m == \"+\":\n                if A[j] <= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n            elif m == \"-\":\n                if A[j] >= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n    print(ans + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "352": {"id": 352, "code": "def main():\n    S = \"xyz\"\n    K = 4\n    ans = ['' for _ in range(len(S))]\n    for i in range(len(S)):\n        d = ord(S[i]) - ord('a')\n        shift = (26 - d) % 26\n        if K - shift >= 0:\n            ans[i] = 'a'\n            K -= shift\n        else:\n            ans[i] = S[i]\n    if K > 0:\n        K %= 26\n        d = (K + ord(ans[-1]) - ord('a')) % 26\n        ans[-1] = chr(d + ord('a'))\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">", ">"]}, "2240": {"id": 2240, "code": "import sys\ndef input(): return \"10 7 5\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nN, A, B = mapint()\nprint(min(A, B), max((A+B-N), 0))", "coverage": [">", ">", ">", ">", ">", ">"]}, "14567": {"id": 14567, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nn = [0] * 2\nfor a in A:\n    n[a % 2] += 1\nif P == 1:\n    ans = 0\n    for i in range(1, n[1]+1, 2):\n        ans += comb(n[1], i)\n    ans *= 2 ** n[0]\nelse:\n    ans = 0\n    for i in range(0, n[1]+1, 2):\n        if i == 0:\n            ans += 1\n        else:\n            ans += comb(n[1], i)\n    ans *= 2 ** n[0]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6536": {"id": 6536, "code": "import bisect\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    cnt=0\n    for i in B:\n        a=bisect.bisect_left(A,i)\n        c=N-bisect.bisect_right(C,i)\n        cnt+=a*c\n    print(cnt)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8014": {"id": 8014, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    n = 8;k = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    ans = 1\n    n -= k\n    ans += (n+k-2) // (k-1)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19262": {"id": 19262, "code": "def main():\n    N = 12\n    if N % 2 == 1:\n        print(0)\n    else:\n        N //= 2\n        ans = 0\n        i = 0\n        while True:\n            i += 1\n            v = 5 ** i\n            if v > N:\n                break\n            else:\n                ans += N // v\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9048": {"id": 9048, "code": "def main():\n    a = 1\n    b = 2\n    c = 4\n    d = 8\n    e = 9\n    k = 15\n    nums = []\n    nums.extend([a, b, c, d, e])\n    nums.reverse()\n    if (nums[0] - nums[4]) > k:\n        print(':(')\n    else:\n        print('Yay!')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2229": {"id": 2229, "code": "def main():\n    n = 100;a = 100;b = 100\n    print(min(a, b), max(0, (a + b) - n))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "16818": {"id": 16818, "code": "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\ndef main():\n    a = \"H\";b = \"H\"\n    if a==b:print(\"H\")\n    else:print(\"D\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "11614": {"id": 11614, "code": "def main():\n    S = \"SAT\"\n    lst = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\n    ans = 7 - lst.index(S)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11937": {"id": 11937, "code": "def main():\n    M1 = 11;D1 = 30\n    M2 = 12;D2 = 1\n    print(int(M1 != M2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12422": {"id": 12422, "code": "s = \"level\"\nn = len(s)\ndef func():\n    if n == 3 and s[0] == s[2]:\n        return\"Yes\"\n    else:\n        a = 0\n        for i in range(n//2):\n            if s[i] == s[n - 1 - i]:\n                a += 1\n                if a == n//2:\n                    b = 0\n                    for j in range((n-1)//4):\n                        if s[j] == s[(n-1)//2 - 1 - j]:\n                            b += 1\n                            if b == (n-1)//4:\n                                c = 0\n                                for k in range((n - (n+3)//2 + 1)//2):\n                                    if s[(n+3)//2 - 1 + k] == s[n - 1 - k]:\n                                        c += 1\n                                        if c == (n - (n+3)//2 + 1)//2:\n                                            return \"Yes\"\n                        else:\n                            return \"No\"\n            else:\n                return \"No\"\nprint(func())", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "8285": {"id": 8285, "code": "import math\nn = 3;k = 3\na = [1, 2, 3]\ndef get_1_index(a):\n    for i,j in enumerate(a):\n        if j==1:\n            return i\nindex=get_1_index(a)\nmae=index\nusiro=n-index-1\nprint(math.ceil((n-1)/(k-1)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10808": {"id": 10808, "code": "def is_p(s):\n    return s == s[::-1]\ns = \"akasaka\"\nl = (len(s) - 1)//2\nr = l + 1\nprint('Yes' if is_p(s) and is_p(s[:l]) and is_p(s[r:]) else 'No')", "coverage": [">", ">", ">", ">", ">", ">"]}, "9027": {"id": 9027, "code": "import sys\nfrom itertools import combinations\ninput = sys.stdin.readline\ndef main():\n    a = 15\n    b = 18\n    c = 26\n    d = 35\n    e = 36\n    k = 18\n    ans = \"Yay!\"\n    for p, q in combinations([a, b, c, d, e], 2):\n        if abs(p - q) > k:\n            ans = \":(\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18205": {"id": 18205, "code": "def main():\n    H = 14\n    W = 12\n    N = 112\n    print((N-1)//max(H,W) + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14740": {"id": 14740, "code": "import math\nfrom itertools import combinations_with_replacement\nn = 3;p = 0\nA = [1, 1, 1]\nodd = []\neven = []\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor a in A:\n    if a % 2 == 0:\n        even.append(a)\n    else:\n        odd.append(a)\neven_count = []\nfor i in range(len(even)+1):\n    even_count.append(combinations_count(len(even), i))\nodd_odd_count = []\nodd_even_count = []\nfor i in range(len(odd)+1):\n    cnt = combinations_count(len(odd), i)\n    if i % 2 == 1:\n        odd_odd_count.append(cnt)\n    else:\n        odd_even_count.append(cnt)\nans = 0\nif p == 0:\n    for i in even_count:\n        for j in odd_even_count:\n            ans += i*j\nelse:\n    for i in even_count:\n        for j in odd_odd_count:\n            ans += i*j\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "18145": {"id": 18145, "code": "def main():\n    S = \"1700\"\n    listS = [int(S[:2]), int(S[2:])]\n    if 1 <= listS[0] <= 12 and 1 <= listS[1] <= 12:\n        ans = 'AMBIGUOUS'\n    elif 1 <= listS[0] <= 12:\n        ans = 'MMYY'\n    elif 1 <= listS[1] <= 12:\n        ans = 'YYMM'\n    else:\n        ans = 'NA'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "14913": {"id": 14913, "code": "def main():\n  import math\n  n = 1;p = 1\n  a = [50]\n  x=[i for i in a if i%2==0]\n  y=[i for i in a if i%2==1]\n  def comb(n,r):\n    return math.factorial(n)//(math.factorial(r)*math.factorial(n-r))\n  xl,yl=len(x),len(y)\n  ans=0\n  for i in range(xl+1):\n    for j in range(yl+1):\n      if j%2==p:\n        ans+=comb(yl,j)*comb(xl,i)\n  print(ans)\nif __name__=='__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14506": {"id": 14506, "code": "N = 1;P = 1\nA = [50]\ndef comb(x, y):\n  m = c = 1\n  for i in range(y):\n    m *= x-i\n    c *= y-i\n  return m//c\neven = odd = 0\nfor a in A:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nif P == 0:\n  ans = 0\n  for i in range(0, odd+1, 2):\n    ans += comb(odd, i)\n  print(pow(2, even) * ans)\nelse:\n  ans = 0\n  for i in range(1, odd+1, 2):\n    ans += comb(odd, i)\n  print(pow(2, even) * ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">"]}, "7403": {"id": 7403, "code": "import sys\ninput = sys.stdin.buffer.readline\ndef MAP(): return map(int, \"10 3\".split())\ndef LIST(): return list(map(int, \"4 5 6\".split()))\nh, n = MAP()\na = LIST()\nprint('Yes') if h <= sum(a) else print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18971": {"id": 18971, "code": "def main():\n    import sys\n    def input(): return \"12\".rstrip()\n    n = 12\n    if n%2 == 1:\n        print(0)\n        exit(0)\n    def count(k, n):\n        now = k\n        cnt = 0\n        while now <= n:\n            cnt += n//now\n            now *= k\n        return cnt\n    n //= 2\n    ans = count(5, n)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18440": {"id": 18440, "code": "from math import ceil\ndef main():\n    width = 3\n    height = 7\n    lower_limit = 10\n    print(ceil(lower_limit / max(width, height)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "19096": {"id": 19096, "code": "def solve(N):\n    if N % 2 == 1:\n        print(0)\n        return\n    n = 10\n    ans = 0\n    while n <= N:\n        ans += N // n\n        n *= 5\n    print(ans)\nif __name__ == '__main__':\n    N = 12\n    solve(N)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10638": {"id": 10638, "code": "def cf(x1,x2):\n    cf=[]\n    for i in range(1,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nimport sys\ninput = sys.stdin.readline  \nA = 1;B = 1;K = 1\ndiv =cf(A,B)\nprint(div[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14909": {"id": 14909, "code": "from math import factorial\ndef com(n, r):\n    return fac_n // factorial(r) // factorial(n - r)\nN = 2;P = 0\nA = [1, 3]\nodd, even = 0, 0\nfor i in range(N):\n    if A[i] % 2 == 1:\n        odd += 1\n    else:\n        even += 1\nfac_n = factorial(odd)\nres = 0\nfor r in range(P, odd+1, 2):\n    res += com(odd, r)\nans = res * (2**even)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8740": {"id": 8740, "code": "def resolve():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13141": {"id": 13141, "code": "def main():\n    n = 6\n    celeb = [7, 5, 3]\n    if n in celeb:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2405": {"id": 2405, "code": "n = 4;m = 3\ndef f(x):\n  return x*(x-1)//2\nprint(f(n) + f(m))", "coverage": [">", ">", ">", ">"]}, "10545": {"id": 10545, "code": "def make_divisors(n: int):\n    lower_divs = []\n    upper_divs = []\n    i = 1\n    while i**2 <= n:\n        if n % i == 0:\n            lower_divs.append(i)\n            if i != n // i:\n                upper_divs.append(n//i)\n        i += 1\n    return lower_divs+upper_divs[::-1]\ndef main():\n    A = 8;B = 12;K = 2\n    div_A = set(make_divisors(A))\n    div_B = set(make_divisors(B))\n    common = div_A.intersection(div_B)\n    return sorted(list(common))[-K]\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16393": {"id": 16393, "code": "import bisect\ndef main():\n    n = 2\n    a = [0, 100]\n    if len(a) < 3:\n        print(a[1], a[0])\n        return\n    N = a[-1]\n    a = a[:-1]\n    r = bisect.bisect(a, N/2)\n    if r == 0:\n        R = a[0]\n    if r == len(a):\n        R = a[r-1]\n    else:\n        R = a[r] if abs(a[r-1] - N/2) > abs(a[r] - N/2) else a[r-1]\n    print(N, R)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "3966": {"id": 3966, "code": "def main(x, y, z):\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    x = 100000;y = 1;z = 1\n    main(x, y, z)", "coverage": [">", ">", ">", ">", ">"]}, "1594": {"id": 1594, "code": "def nikkei19q_a():\n    N = 100;A = 100;B = 100\n    ans_max = min(A, B)\n    ans_min = max(0, A + B - N)\n    print(*[ans_max, ans_min], sep=' ')\nnikkei19q_a()", "coverage": [">", ">", ">", ">", ">", ">"]}, "2595": {"id": 2595, "code": "def main():\n    N = {0, 9, 4, 8}\n    print(\"YES\" if N == {1, 4, 7, 9} else \"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "4840": {"id": 4840, "code": "def resolve():\n    S = \"internationalization\"\n    cnt = len(S[1:-1])\n    print(\"{}{}{}\".format(S[0], cnt, S[-1]))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "11381": {"id": 11381, "code": "def main():\n    S = \"SUN\"\n    week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n    for i, name in enumerate(week):\n        if name == S:\n            ans = 7 - i\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3377": {"id": 3377, "code": "def main():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13692": {"id": 13692, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    print(max(0,(h2-h1)*60+(m2-m1)-k))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16251": {"id": 16251, "code": "def solve(n,a):\n  a = list(sorted(a,reverse=True))\n  first = a[0]\n  b = a[1:]\n  delta = [abs(x-first//2) for x in b]\n  second = b[delta.index(min(delta))]\n  return first,second\ndef main():\n  N = 2\n  a = [100, 0]\n  print(*solve(N,a))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15084": {"id": 15084, "code": "n = 2;p = 0\na = [1, 3]\nfor i in range(n):\n    a[i] %= 2\ncnt_zero = a.count(0)\ncnt_one = n - cnt_zero\nans = 0\ndef nCk(n, k):\n    if k > n - k:\n        return nCk(n, n - k)\n    ret = 1\n    for i in range(k):\n        ret *= n - i\n    for i in range(k):\n        ret //= i + 1\n    return ret\nans = 0\nc = 0\nfor i in range(p, cnt_one + 1, 2):\n    c += nCk(cnt_one, i)\nans = (2 ** cnt_zero) * c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "12282": {"id": 12282, "code": "def resolve():\n    def is_rotatable(S):\n        for i in range(len(S)//2):\n            if S[i] != S[-1-i]:\n                return False\n        return True\n    S = \"atcoder\"\n    N = len(S)\n    if is_rotatable(S) and is_rotatable(S[:N//2]) and is_rotatable(S[(N//2)+1:]):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">"]}, "361": {"id": 361, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    s = ['a']\n    K = 25\n    for i, c in enumerate(s):\n        if c == 'a':\n            continue\n        z = 123 - ord(c)\n        if K >= z:\n            s[i] = 'a'\n            K -= z\n        if K == 0:\n            break\n    s[-1] = chr(((ord(s[-1])-97+K))%26+97)\n    print(''.join(s))\nif __name__ == '__main__':\n     main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14649": {"id": 14649, "code": "import math\ndef main():\n    N = 2;P = 0\n    A = [1, 3]\n    modA = list()\n    for a in A:\n        modA.append(a % 2)\n    zero = modA.count(0)\n    one = modA.count(1)\n    ans = tmp = 0\n    f = math.factorial\n    if P == 0:\n        for i in range(0, one + 1, 2):\n            tmp += f(one) // (f(i) * f(one - i))\n    else:\n        for i in range(1, one + 1, 2):\n            tmp += f(one) // (f(i) * f(one - i))\n    if zero > 0:\n        ans = tmp * 2 ** zero\n    else:\n        ans = tmp\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "18484": {"id": 18484, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H = 2\n    W = 100\n    N = 200\n    q, r, = divmod(N, max(H, W))\n    ans = q\n    ans += 1 if r > 0 else 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13903": {"id": 13903, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    status = \"undefined\"\n    ans = 1\n    for i in range(N - 1):\n        diff = A[i + 1] - A[i]\n        if status == \"undefined\":\n            if diff == 0:\n                pass\n            elif diff > 0:\n                status = \"increase\"\n            else:\n                status = \"decrease\"\n        elif status == \"increase\":\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                status = \"undefined\"\n        else:\n            if diff <= 0:\n                pass\n            else:\n                status = \"undefined\"\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "12776": {"id": 12776, "code": "def p_a():\n    n = 5\n    print(\"YES\" if n == 7 or n == 5 or n == 3 else \"NO\")\np_a()", "coverage": [">", ">", ">", ">"]}, "365": {"id": 365, "code": "S = \"codefestival\"\nK = 100\ndef ctoi(c):\n    return ord(c) - ord('a')\ndef toa(c):\n    i = ctoi(c)\n    return (26-i)%26\nans = ''\nfor c in S:\n    if len(ans)+1 == len(S):\n        ans += chr((ctoi(c) + K)%26 + ord('a'))\n    else:\n        to = toa(c)\n        if to <= K:\n            ans += 'a'\n            K -= to\n        else:\n            ans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "16918": {"id": 16918, "code": "def resolve():\n    a = \"D\";b = \"H\"\n    ans = str()\n    if a == \"H\":\n        if b == \"H\":\n            ans = \"H\"\n        elif b == \"D\":\n            ans = \"D\"\n    elif a == \"D\":\n        if b == \"H\":\n            ans = \"D\"\n        elif b == \"D\":\n            ans = \"H\"\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "327": {"id": 327, "code": "def solve():\n    s = ['a']\n    K = 25\n    for i in range(len(s)):\n        distToA = (ord('z')+1 - ord(s[i])) % 26\n        if distToA <= K:\n            s[i] = 'a'\n            K -= distToA\n    else:\n        s[-1] = chr(ord(s[-1]) + K%26)\n    print(\"\".join(s))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14049": {"id": 14049, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    b = [a[0]]\n    for i in a:\n        if b[-1] == i:\n            continue\n        b.append(i)\n    res = 1\n    if len(b) <= 2:\n        print(res)\n    else:\n        i = 1\n        while i <= len(b)-2:\n            if b[i] == max(b[i-1], b[i], b[i+1]) or b[i] == min(b[i-1], b[i], b[i+1]):\n                res += 1\n                i += 1\n            i += 1\n        print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14090": {"id": 14090, "code": "def main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ret = 1\n    state = 0\n    for i in range(1,N):\n        if A[i]>A[i-1]:\n            if state == -1:\n                ret += 1\n                state = 0\n            else:\n                state = 1\n        elif A[i]<A[i-1]:\n            if state == 1:\n                ret += 1\n                state = 0\n            else:\n                state = -1\n    print(ret)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "925": {"id": 925, "code": "def calc(k):\n    cur = 7 % k\n    for i in range(1, k + 1):\n        if cur == 0:\n            return i\n        else:\n            cur *= 10\n            cur += 7\n            cur %= k\n    return -1\nk = 2\nprint(calc(k))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "7839": {"id": 7839, "code": "def solve():\n    N = 4;K = 3\n    Ax = [2, 3, 1, 4]\n    if N == K:\n        print(1)\n        exit()\n    N -= K\n    ans = 1\n    while N > 0:\n        N = N-(K-1)\n        ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11097": {"id": 11097, "code": "s = \"atcoder\"\nn=len(s)\ns1=s[:(n-1)//2]\ns2=s[(n+3)//2-1:]\ndef check(s):\n  i=0\n  j=len(s)-1\n  while j>i:\n    if s[j]!=s[i]:\n      return False\n    j-=1\n    i+=1\n  return True\nif check(s) and check(s1) and check(s2):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "10994": {"id": 10994, "code": "def main():\n    S = \"akasaka\"\n    N = len(S)\n    for i in range(N):\n        if S[i] != S[N-i-1]:\n            print(\"No\")\n            return\n    M = (N-1)//2\n    for i in range(M):\n        if S[i] != S[N-i-1]:\n            print(\"No\")\n            return\n    L = (N+3)//2 - 1\n    for i in range(L, N):\n        if S[i] != S[N+L-i-1]:\n            print(\"No\")\n            return\n    print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "19068": {"id": 19068, "code": "def main():\n    n = 5\n    if n < 10 or n % 2 == 1:\n        print(0)\n    else:\n        ans = 0\n        i = 10\n        while i <= n:\n            ans += n // i\n            i *= 5\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "5766": {"id": 5766, "code": "def main():\n    N = 100\n    print(-(-N // 2))\nmain()", "coverage": [">", ">", ">", ">"]}, "15006": {"id": 15006, "code": "N = 1;P = 1\nA = [50]\ndef nCr(n, r):\n    r = min(r, n-r)\n    numerator = 1\n    for i in range(n, n-r, -1):\n        numerator *= i\n    denominator = 1\n    for i in range(r, 1, -1):\n        denominator *= i\n    return numerator // denominator\nx = sum(A) % 2\no = 0\ne = 0\nfor a in A:\n    if a % 2 == 0:\n        e += 1\n    else:\n        o += 1\nz = 2**e\ny = 1\nif P == 0:\n    y = 0\nif x:\n    y ^= 1\nres = 0\nfor i in range(y, o+1, 2):\n    res += nCr(o, i)\nprint(res*z)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", ">"]}, "16921": {"id": 16921, "code": "import sys\ndef input(): return \"D H\".strip()\ndef main():\n    a = \"D\";b = \"H\"\n    if a == b:\n        print('H')\n    else:\n        print('D')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12448": {"id": 12448, "code": "from sys  import stdin,stdout\nimport bisect\nimport math\ndef st():\n    return list(stdin.readline().strip())\ndef inp():\n    return int(stdin.readline())\ndef li():\n    return list(map(int,stdin.readline().split()))\ndef mp():\n    return map(int,stdin.readline().split())\ndef pr(n):\n    stdout.write(str(n)+\"\\n\")\ndef soe(limit):\n    l=[1]*(limit+1)\n    prime=[]\n    for i in range(2,limit+1):\n        if l[i]:\n            for j in range(i*i,limit+1,i):\n                l[j]=0\n    for i in range(2,limit+1):\n        if l[i]:\n            prime.append(i)\n    return prime\ndef segsoe(low,high):\n    limit=int(high**0.5)+1\n    prime=soe(limit)\n    n=high-low+1\n    l=[0]*(n+1)\n    for i in range(len(prime)):\n        lowlimit=(low//prime[i])*prime[i]\n        if lowlimit<low:\n            lowlimit+=prime[i]\n        if lowlimit==prime[i]:\n            lowlimit+=prime[i]\n        for j in range(lowlimit,high+1,prime[i]):\n            l[j-low]=1\n    for i in range(low,high+1):\n        if not l[i-low]:\n            if i!=1:\n                print(i)\ndef power(a,n):\n    r=1\n    while n:\n        if n&1:\n            r=(r*a)\n        a*=a\n        n=n>>1\n    return r\ndef solve():\n    s = \"atcoder\"\n    n=len(s)\n    a=s[:(n-1)//2]\n    b=a[::-1]\n    c=s[(n+3)//2 -1 :]\n    d=c[::-1]\n    if s==s[::-1] and a==b and c==d:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfor _ in range(1):\n    solve()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14048": {"id": 14048, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    b = [a[0]]\n    for i in a:\n        if b[-1] == i:\n            continue\n        b.append(i)\n    res = 1\n    if len(b) <= 2:\n        print(res)\n    else:\n        i = 1\n        while i <= len(b)-2:\n            if b[i] == max(b[i-1], b[i], b[i+1]) or b[i] == min(b[i-1], b[i], b[i+1]):\n                res += 1\n                i += 1\n            i += 1\n        print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11291": {"id": 11291, "code": "def main():\n    s = \"SUN\"\n    dic = {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}\n    print(dic.get(s))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "14902": {"id": 14902, "code": "N = 3;P = 0\nA = [1, 1, 1]\ndef comb(x, y):\n  m = c = 1\n  for i in range(y):\n    m *= x-i\n    c *= y-i\n  return m//c\neven = odd = 0\nfor a in A:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n  ans += comb(odd, i)\nprint(pow(2, even) * ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "15129": {"id": 15129, "code": "N = 2;P = 0\ndef combi(N,K):\n    a = 1\n    for i in range(K):\n        a *= N-i\n    for j in range(K):\n        a /= j+1\n    return a\nans = 0\nlis = [1, 3]\nls = []\nfor a in lis:\n    ls.append(a%2)\none = ls.count(1)\nzero = ls.count(0)\npattern_a = 0\npattern_b = 0\nfor j in range(zero+1):\n    pattern_b += combi(zero,j)\ntime = 0\nwhile time<=one:\n    if time%2 ==P:\n        pattern_a += combi(one,time)\n    time += 1\nprint(int(pattern_a*pattern_b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19207": {"id": 19207, "code": "def main():\n    import sys\n    def input(): return \"12\".rstrip()\n    n = 12\n    if n%2 == 1:\n        print(0)\n        exit(0)\n    def count(k, n):\n        now = k\n        cnt = 0\n        while now <= n:\n            cnt += n//now\n            now *= k\n        return cnt\n    n //= 2\n    cnt2 = n\n    cnt2 += count(2, n)\n    cnt5 = count(5, n)\n    ans = min(cnt2, cnt5)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12409": {"id": 12409, "code": "s = \"akasaka\"\nn = len(s)\ndef check(r):\n    if r == r[::-1]:\n        return True\nprint(\"Yes\" if check(s) and check(s[:(n-1)//2])\n      and check(s[((n-1)//2) + 1:]) else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "2762": {"id": 2762, "code": "def main():\n    N = {'9', '2', '1'}\n    if set(['1', '9', '7', '4']) == N:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "15011": {"id": 15011, "code": "import math\nn = 2;p = 0\nls = [1, 3]\nlo = []\nle = []\ndef combinations_count(n, r): \n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor i in ls:\n    if i % 2 == 0:\n        le.append(i)\n    else:\n        lo.append(i)\nx = len(lo)\ny = len(le)\nif p == 0:\n    a = 1\n    if x != 0:\n        if x % 2 == 0:\n            r = x\n        else:\n            r = x - 1\n        a = 0\n        for j in range(0,r+1,2):\n            a += combinations_count(x, j)\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)\nelse:\n    if x != 0:\n        if x % 2 == 0:\n            r = x - 1\n        else:\n            r = x\n        a = 0\n        for j in range(1,r+1,2):\n            a += combinations_count(x, j)\n    else:\n        a = 0\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "6267": {"id": 6267, "code": "import bisect\nfrom itertools import accumulate\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA = sorted(A)\nB = sorted(B)\nC = sorted(C)\ndef my_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    i_a = 0\n    i_c = N-1\n    for i in range(N):\n        b = B[i]\n        while i_a < N and A[i_a] < b:\n            acc_a[i] += 1\n            i_a += 1\n    for i in reversed(range(N)):\n        b = B[i]\n        while i_c >= 0 and C[i_c] > b:\n            acc_c[i] += 1\n            i_c -= 1\n    acc_a = list(accumulate(acc_a))\n    acc_c = list(accumulate(acc_c[::-1]))\n    acc_c = acc_c[::-1]\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\ndef bisect_func(A, B, C):\n    acc_a = [0]*N\n    acc_c = [0]*N\n    for i in range(N):\n        acc_a[i] = bisect.bisect_left(A, B[i])\n        acc_c[i] = N-bisect.bisect_right(C, B[i])\n    ans = 0\n    for a, c in zip(acc_a, acc_c):\n        ans += a*c\n    return ans\nprint(bisect_func(A, B, C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7567": {"id": 7567, "code": "import math\ndef main():\n  H = 210;N = 5\n  A = [31, 41, 59, 26, 53]\n  if sum(A) >= H:\n    print('Yes')\n  else:\n    print('No')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14965": {"id": 14965, "code": "def comb(n, max_k, mod):\n    res = [1]*(max_k+1)\n    t = 1\n    for i in range(max_k+1):\n        res[i] *= t\n        t *= n-i\n        t %= mod\n    n = reduce(lambda x,y: (x*y)%mod, range(1,max_k+1), 1)\n    n = modinv(n, mod)\n    for i in reversed(range(max_k+1)):\n        res[i] *= n\n        res[i] %= mod\n        n *= i\n        n %= mod\n    return res\nN = 2;P = 0\nA = map(int,\"1 3\".split())\nevens = 0\nodds = 0\nfor a in A:\n    if a%2:\n        odds += 1\n    else:\n        evens += 1\ncnt = 0\nif P == 0:\n    comb = 1\n    cnt = 1\n    for n in range(2,odds+1,2):\n        comb *= (odds+2-n)*(odds+1-n)\n        comb //= n*(n-1)\n        cnt += comb\nelse:\n    comb = odds\n    cnt = odds\n    for n in range(3,odds+1,2):\n        comb *= (odds+2-n)*(odds+1-n)\n        comb //= n*(n-1)\n        cnt += comb\nprint(2**evens * cnt)", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "7769": {"id": 7769, "code": "import math\ndef main():\n    n = 4;k = 3\n    As = [2, 3, 1, 4]\n    ans = math.ceil((n-1)/(k-1))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11050": {"id": 11050, "code": "s = \"akasaka\"\ndef kaibun(x):\n    ans=1\n    for i in range(len(x)//2):\n        if x[i]!=x[-i-1]:\n            ans=0\n            break\n    return ans\nn=len(s)\na1=kaibun(s)\na2=kaibun(s[0:(n-1)//2])\na3=kaibun(s[-1+(n+3)//2:n])\nif a1==1 and a2==1 and a3==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "7161": {"id": 7161, "code": "def main():\n    h = 10;n = 3\n    a = [4, 5, 6]\n    if sum(a)>=h:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3694": {"id": 3694, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 20;b = 15\nprint(curtain(a,b))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "14612": {"id": 14612, "code": "import math\nN = 1;P = 1\nA = [50]\nremainders = [a%2 for a in A]\nodd = remainders.count(1)\neven = remainders.count(0)\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nans = 0\nfor n in range(N+1):\n  for p in range(P,n+1,2):\n    if odd >= p and even >= n-p:\n      ans += combinations_count(odd,p) * combinations_count(even,n-p)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">"]}, "16609": {"id": 16609, "code": "def main():\n    a = \"D\";b = \"H\"\n    ans = ''\n    if a == 'H':\n        ans = b\n    else:\n        ans = 'H' if b == 'D' else 'D'\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "409": {"id": 409, "code": "def main():\n    S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    K = 100\n    L = len(S)\n    for i in range(L):\n        if S[i] == 'a':\n            continue\n        if ord('z') - ord(S[i]) + 1 <= K:\n            K -= ord('z') - ord(S[i]) + 1\n            S[i] = 'a'\n    if K > 0:\n        S[-1] = chr(ord(S[-1]) + K % 26)\n    print(''.join(S))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18330": {"id": 18330, "code": "def resolve():\n    a = 14\n    b = 12\n    c = 112\n    d = max(a, b)\n    print(((c-1)//d)+1)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12550": {"id": 12550, "code": "def abc120_b():\n    a = 100;b = 50;k = 4\n    n = min(a, b)\n    divisors = []\n    for i in range(1, n + 1):\n        if (a % i == 0) and (b % i == 0):\n            divisors.append(i)\n    print(divisors[-1 * k])\nif __name__ == '__main__':\n    abc120_b()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6821": {"id": 6821, "code": "def main():\n    H = 10;N = 3\n    A = [4, 5, 6]\n    s = sum(A)\n    if H > s:\n        print('No')\n    else:\n        print('Yes')\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14604": {"id": 14604, "code": "n = 2;p = 0\nA = [1, 3]\neven = 0\nodd = 0\nfor i in range(n):\n    if A[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\neven_answer = 2 ** even\ncheck = p\ndef kaijo(i):\n    if (i == 1) or (i == 0):\n        return 1\n    return i * kaijo(i - 1)\nodd_answer = 0\nwhile check <= odd:\n    odd_answer = odd_answer + (kaijo(odd) / kaijo(check) / kaijo(odd - check))\n    check += 2\nprint(int(odd_answer * even_answer))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8076": {"id": 8076, "code": "import math\ndef main():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    if N == 1:\n        print(0)\n    elif N <= K:\n        print(1)\n    else:\n        print(1+math.ceil((N-K)/(K-1)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "17774": {"id": 17774, "code": "S = \"1905\"\nheads = int(S[:2])\ntails = int(S[2:])\ndef is_month(n):\n    return n >= 1 and n <= 12\nif is_month(heads) and (not is_month(tails)):\n    print(\"MMYY\")\nelif (not is_month(heads)) and (not is_month(tails)):\n    print(\"NA\")\nelif (not is_month(heads)) and is_month(tails):\n    print(\"YYMM\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "460": {"id": 460, "code": "def c2a(c):\n    return (26 - ord(c) + ord(\"a\")) % 26\ns = \"codefestival\"\nk = 100\nl = len(s)\nans = \"\"\nfor i, e in enumerate(s, 1):\n    if i == l:\n        code = (ord(e) - ord(\"a\") + k) % 26 + ord(\"a\")\n        c = chr(code)\n    else:\n        cnt = c2a(e)\n        if cnt <= k:\n            c = \"a\"\n            k -= cnt\n        else:\n            c = e\n    ans += c\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "19531": {"id": 19531, "code": "def main():\n    n = 3\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(2 * n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "11968": {"id": 11968, "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10361": {"id": 10361, "code": "def main():\n    A = 100;B = 50;K = 4\n    v = []\n    for i in range(1, min([A, B])+1):\n        if A % i == 0 and B % i == 0:\n            v.append(i)\n    print(v[-K])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10424": {"id": 10424, "code": "def make_divisors(n):\n    if n==1:\n        divisors=[1]\n        return divisors\n    else:\n        divisors=[]\n        for i in range(1,n):\n            if i*i>n:\n                break\n            if n%i==0:\n                divisors.append(i)\n                if i!=n//i:\n                    divisors.append(n//i)\n        divisors.sort(reverse=True)\n        return divisors\nfrom sys import stdin\nfrom math import gcd\ndef main():\n    readline=stdin.readline\n    a = 1;b = 1;k = 1\n    c=gcd(a,b)\n    li=make_divisors(c)\n    print(li[k-1])\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17377": {"id": 17377, "code": "import math\ndef isMM(num):\n    if num < 13 and num > 0:\n        return True\n    else:\n        return False\ndef hantei(number):\n    num = math.floor(number/100)\n    ber = number % 100\n    if isMM(num) is False and isMM(ber) is False:\n        return \"NA\"\n    elif isMM(num) is True and isMM(ber) is True:\n        return \"AMBIGUOUS\"\n    elif isMM(num) is True and isMM(ber) is False:\n        return \"MMYY\"\n    else:\n        return \"YYMM\"\nnum = 112\nprint(hantei(num))", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "824": {"id": 824, "code": "def main(h):\n  count = 1\n  n = 0\n  for i in range (k):\n    n = (n * 10 + 7) % k  \n    if n == 0: \n      print(count)\n      return 0\n    count += 1\n  print(-1)\nif __name__ == '__main__':\n  k = 101\n  main(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "16189": {"id": 16189, "code": "def main():\n    N = 2\n    A = [100, 0]\n    A.sort()\n    max_a = A[-1]\n    A = A[:-1]\n    A.sort(key=lambda a: abs(a - max_a / 2))\n    print('{} {}'.format(max_a, A[0]))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2949": {"id": 2949, "code": "import sys\ndef input():\n    return \"1234567876\".rstrip()\ndef main():\n    S = \"1234567876\"\n    prime =753\n    ans =1000\n    for i in range(len(S)-2):\n        ans =min(ans, abs(prime-int(S[i:i+3])))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2929": {"id": 2929, "code": "def main():\n    s = \"35753\"\n    n = len(s)\n    min_diff = 1000\n    for i in range(n - 2):\n        diff = abs(int(s[i: i+3]) - 753)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2040": {"id": 2040, "code": "def main():\n    N = 10;A = 7;B = 5\n    if A + B >= N:\n        mini = (A + B) - N\n    else:\n        mini = 0\n    maxi = min(A, B)\n    print(maxi, mini)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15315": {"id": 15315, "code": "import math\ndef main():\n  x = 100000;y = 1;z = 1\n  print(int((x-z)/(y+z)))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "1753": {"id": 1753, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    n = 100;a = 100;b = 100\n    print(min(a,b), max(0, a+b-n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10356": {"id": 10356, "code": "def make_divisors(n):\n    lower_divisors, upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 1;b = 1;k = 1\nset_a = set(make_divisors(a))\nset_b = set(make_divisors(b))\nboth = list(set_a & set_b)\nboth.sort()\nprint(both[- k])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7188": {"id": 7188, "code": "def answer(h: int, n: int, a: []) -> str:\n    return 'Yes' if h <= sum(a) else 'No'\ndef main():\n    h = 211;n = 5\n    a = map(int, \"31 41 59 26 53\".split())\n    print(answer(h, n, a))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1118": {"id": 1118, "code": "def main():\n    N = 750\n    divide = N // 111\n    rest = N % 111\n    if rest > 0:\n        print((divide+1)*111)\n    else:\n        print(divide*111)\nmain()  ", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "6816": {"id": 6816, "code": "def main():\n    h = 211;n = 5\n    inlis = [31, 41, 59, 26, 53]\n    total = sum(inlis)\n    if h <= total:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "9931": {"id": 9931, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import chain\ndef main():\n    n = 6\n    s = (')', ')', ')', '(', ')', ')')\n    cnt = 0\n    cnt_ushiro = 0\n    cnt_mae = 0\n    for se in s:\n        cnt += se == ')'\n        cnt -= se == '('\n        cnt_mae = max(cnt_mae, cnt)\n    cnt -= cnt_mae\n    if cnt < 0:\n        cnt_ushiro = -cnt\n    s_mae = ('(') * cnt_mae\n    s_ushiro = (')') * cnt_ushiro\n    r = tuple(chain(s_mae, s, s_ushiro))\n    print(*r,sep=\"\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "2613": {"id": 2613, "code": "def solve():\n    S = \"1974\"\n    if S.find('1') == -1 or S.find('9') == -1 or S.find('7') == -1 or S.find('4') == -1:\n        print('NO')\n    else:\n        print('YES')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "11110": {"id": 11110, "code": "s = \"level\"\nmozisuu=len(s)\ndef hanteiki(s):\n    hantei=True\n    mozisuu=len(s)\n    for i in range(len(s)):\n        if s[i]!=s[mozisuu-i-1]:\n            hantei=False\n    return hantei\nif hanteiki(s):\n    if hanteiki(s[0:(mozisuu-1)//2]):\n        if hanteiki(s[(mozisuu+3)//2-1:]):\n            print(\"Yes\")\n            exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "4384": {"id": 4384, "code": "def find(H1,M1,H2,M2,K):\n    left = H1*60+M1\n    right = H2*60+M2\n    remain = right-left-K\n    return max(remain,0)\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(find(H1,M1,H2,M2,K))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "469": {"id": 469, "code": "INF = 10 ** 9\nimport sys\nsys.setrecursionlimit(100000000)\ndy = (-1,0,1,0)\ndx = (0,1,0,-1)\nfrom  collections import deque\ndef main():\n    s = ['x', 'y', 'z']\n    k = 4\n    for i in range(len(s)):\n        if s[i] == 'a':\n            continue\n        if k >= ord('z') - ord(s[i]) + 1:\n            k -= ord('z') - ord(s[i]) + 1\n            s[i] = 'a'\n            if k == 0:\n                break\n    if k > 0:\n        s[-1] = chr((ord(s[-1]) + k - 97)%26 + 97)\n    print(''.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "7674": {"id": 7674, "code": "H = 20;N = 3\nA = [4, 5, 6]\ndef answer(H: int, N: int, A: list) -> str:\n    damage = 0                          \n    for i in range(0, N):               \n        damage += int(A[i])             \n        i += 1                          \n    if damage < H:\n        return 'No'\n    else:\n        return 'Yes'\nprint(answer(H, N, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "2484": {"id": 2484, "code": "import sys\ndef input(): return \"1 2 9 1\".rstrip()\ndef main():\n    a = 1;b = 1;c = 2;d = 9\n    if a==1 and b==4 and c==7 and d==9:\n        print(\"YES\")\n    else:print(\"NO\")\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6371": {"id": 6371, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ndef func(x, y):\n    i = 0\n    j = 0\n    cnt = 0\n    s = [0 for i in range(n)]\n    while j < n and i < n:\n        if y[j] > x[i]:\n            cnt += 1\n            i += 1\n        else:\n            s[j] = cnt\n            j += 1\n    if i == n:\n        for k in range(j,n):\n            s[k] = cnt\n    return s\ns1 = func(a, b)\nfor i in range(1, n):\n    s1[i] += s1[i-1]\ns2 = func(b, c)\ncnt = 0\nfor i in range(n):\n    if s2[i] != 0:\n        cnt += s1[s2[i]-1]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6492": {"id": 6492, "code": "def resolve():\n    import bisect\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    ans = 0\n    for i in range(n):\n        btest = b[i]\n        aind = bisect.bisect_left(a,btest)\n        cind = bisect.bisect_right(c, btest)\n        ans += aind * (len(c)-cind)\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14110": {"id": 14110, "code": "def resolve():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    result = 0\n    while len(A) > 1:\n        flag = False\n        for i in range(1, len(A)):\n            if A[0] == A[i]:\n                continue\n            elif A[0] < A[i]:\n                j = i\n                while A[j-1] <= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            elif A[0] > A[i]:\n                j = i\n                while A[j-1] >= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            if flag == True:\n                break\n    else:\n        if len(A) == 1:\n            result += 1\n    print(result)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "5459": {"id": 5459, "code": "def main():\n    n = 2\n    if n % 2 == 0:\n        print(n // 2)\n    else:\n        print(n // 2 + 1)\n    return\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "13372": {"id": 13372, "code": "def main():\n str = \"abcde,fghihgf,edcba\"\n print(str.replace(',',' '))\nmain()", "coverage": [">", ">", ">", ">"]}, "4714": {"id": 4714, "code": "def answer(s: str) -> str:\n    return f'{s[0]}{len(s) - 2}{s[-1]}'\ndef main():\n    s = \"internationalization\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "497": {"id": 497, "code": "import sys\ndef main():\n    s = ['a']\n    K = 25\n    l = len(s)\n    for i in range(l-1):\n        moji = s[i]\n        if moji == \"a\":\n            continue\n        else:\n            a = ord(\"z\")-ord(moji)+1\n            if a <= K:\n                s[i] = \"a\"\n                K -= a\n    K %= 26\n    use = ord(s[-1])+K\n    if use >= 123:\n        use -= 26\n    s[-1] = chr(use)\n    print(\"\".join(map(str,s)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13135": {"id": 13135, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    x = 6\n    if x in [3,5,7]:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "15837": {"id": 15837, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    X = 64146;Y = 123;Z = 456\n    ans = (X - Z) // (Y + Z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3030": {"id": 3030, "code": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\nS = \"1234567876\"\nsa = float('inf')\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3]) - 753) < sa:\n        sa = abs(int(S[i:i+3]) - 753)\nprint(sa)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14742": {"id": 14742, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\noddC = 0\nevenC = 0\nfor a in A:\n    if a % 2 == 1:\n        oddC += 1\n    else:\n        evenC += 1\nc = 0\nif P == 0:\n    oddcombi = 0\n    for i in range(oddC+1):\n        if i % 2 == 1:\n            continue\n        oddcombi += combinations_count(oddC,i)\n    evencombi = 0\n    for i in range(evenC+1):\n        evencombi += combinations_count(evenC,i)\n    print(oddcombi*evencombi)\nelse:\n    oddcombi = 0\n    for i in range(oddC+1):\n        if i % 2 == 0:\n            continue\n        oddcombi += combinations_count(oddC,i)\n    evencombi = 0\n    for i in range(evenC+1):\n        evencombi += combinations_count(evenC,i)\n    print(oddcombi*evencombi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "7338": {"id": 7338, "code": "def resolve():\n    H = 20;N = 3\n    A = [4, 5, 6]\n    print(\"Yes\" if sum(A) >= H else \"No\")\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "8894": {"id": 8894, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    n = 1\n    a1_list = [2]\n    a2_list = [3]\n    upper_sum = a1_list[0]\n    lower_sum = sum(a2_list)\n    ans = upper_sum + lower_sum\n    for i in range(1, n):\n        upper_sum += a1_list[i]\n        lower_sum -= a2_list[i-1]\n        candy = upper_sum + lower_sum\n        if candy > ans:\n            ans = candy\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "3089": {"id": 3089, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"35753\"\n    ans = float('inf')\n    for i in range(len(s)-2):\n        if i == len(s)-3:\n            ans = min(ans, abs(int(s[i:]) - 753))\n        else:\n            ans = min(ans, abs(int(s[i:i+3]) - 753))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "19122": {"id": 19122, "code": "def main():\n    n = 5\n    if n % 2 == 0 and n >= 10:\n        m = n // 2\n        k = 5\n        m5 = 0\n        while k <= m:\n            m5 += m // k\n            k *= 5\n    else:\n        m5 = 0\n    print(m5)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "1592": {"id": 1592, "code": "def nikkei19q_a():\n    N = 10;A = 3;B = 5\n    ans_max = min(A, B)\n    ans_min = max(0, A + B - N)\n    print(*[ans_max, ans_min], sep=' ')\nnikkei19q_a()", "coverage": [">", ">", ">", ">", ">", ">"]}, "5765": {"id": 5765, "code": "def main():\n    N = 2\n    print(-(-N // 2))\nmain()", "coverage": [">", ">", ">", ">"]}, "9537": {"id": 9537, "code": "def main():\n    S = \"2017/01/31\"\n    print(S[:3] + \"8\" + S[4:])\nmain()", "coverage": [">", ">", ">", ">"]}, "14900": {"id": 14900, "code": "N = 2;P = 0\nA = [1, 3]\ndef comb(x, y):\n  m = c = 1\n  for i in range(y):\n    m *= x-i\n    c *= y-i\n  return m//c\neven = odd = 0\nfor a in A:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n  ans += comb(odd, i)\nprint(pow(2, even) * ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "10711": {"id": 10711, "code": "def main():\n    s = \"atcoder\"\n    n = len(s)\n    rule1 = True\n    rule2 = True\n    rule3 = True\n    for i in range(n):\n        if s[i] != s[n - 1 - i]:\n            rule1 = False\n            break\n    for i in range(n // 2):\n        if s[i] != s[n // 2 - 1 - i]:\n            rule2 = False\n            break\n    for i in range(n // 2):\n        if s[n // 2 + 1 + i] != s[n - 1 - i]:\n            rule3 = False\n            break\n    if rule1 and rule2 and rule3:\n        ans = \"Yes\"\n    else:\n        ans = \"No\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "6557": {"id": 6557, "code": "def main():\n    N = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "7679": {"id": 7679, "code": "def main():\n    H = 210\n    A = map(int, \"31 41 59 26 53\".split())\n    cond = sum(A) >= H\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10986": {"id": 10986, "code": "S = \"level\"\ndef kaibun(S):\n  for i in range(len(S) // 2):\n    if S[i] != S[len(S) - i - 1]:\n      return False\n  return True\nif kaibun(S) and kaibun(S[:(len(S) - 1)//2]) and kaibun(S[(len(S) + 3) // 2-1:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "18441": {"id": 18441, "code": "from math import ceil\ndef main():\n    width = 14\n    height = 12\n    lower_limit = 112\n    print(ceil(lower_limit / max(width, height)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11051": {"id": 11051, "code": "s = \"level\"\ndef kaibun(x):\n    ans=1\n    for i in range(len(x)//2):\n        if x[i]!=x[-i-1]:\n            ans=0\n            break\n    return ans\nn=len(s)\na1=kaibun(s)\na2=kaibun(s[0:(n-1)//2])\na3=kaibun(s[-1+(n+3)//2:n])\nif a1==1 and a2==1 and a3==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11001": {"id": 11001, "code": "S = \"atcoder\"\ndef is_kaibun(s):\n    l = len(s)\n    if s[:int(l/2)] == s[:-(int(l/2))-1:-1]:\n        return True\n    else:\n        return False\nif is_kaibun(S):\n    if is_kaibun(S[:int((len(S)-1)/2)]):\n        if is_kaibun(S[int((len(S)+3)/2)-1:]):\n            print('Yes')\n            exit()\nprint('No')", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">"]}, "19121": {"id": 19121, "code": "def main():\n    n = 12\n    if n % 2 == 0 and n >= 10:\n        m = n // 2\n        k = 5\n        m5 = 0\n        while k <= m:\n            m5 += m // k\n            k *= 5\n    else:\n        m5 = 0\n    print(m5)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11027": {"id": 11027, "code": "S = \"level\"\nN = len(S)\ndef check(S1):\n    if S1 != S1[::-1]:\n        return False\n    else:\n        return True\nPOS = int((N-1)/2)\nS1 = S[0:POS]\nPOS = int((N+3)/2)\nS2 = S[POS-1:N]\nif check(S) == False or check(S1) == False or check(S2) == False:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "14202": {"id": 14202, "code": "__DEUBG__ = 0\nimport math\nimport sys\nnum = 6\nseq = [1, 2, 3, 2, 2, 1]\nprev = None\ntmp = []\nincrease = None\ncount = 0\ndef dump(x):\n    from pprint import pprint\n    pprint(x)\nfor x in seq:\n    if __DEUBG__:\n        print(x)\n        print(tmp)\n    if prev is None:\n        tmp = [x]\n    elif increase is True:\n        if x >= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == tmp[-1]:\n            pass\n        elif x > tmp[-1]:\n            increase = True\n        else:\n            increase = False\n        tmp.append(x)\n    prev = x\nif __DEUBG__:\n    dump(tmp)\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "6220": {"id": 6220, "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ndef bin_a(list,bi):\n    ok=-1\n    ng=n\n    while abs(ok-ng)>1:\n        mid=(ok+ng)//2\n        if bi>list[mid]:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bin_c(list,bi):\n    ok=n\n    ng=-1\n    while abs(ok-ng)>1:\n        mid=(ok+ng)//2\n        if bi<list[mid]:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\ncnt=0\nfor i in range(n):\n    cnt+=bin_a(a,b[i])*bin_c(c,b[i])\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "15699": {"id": 15699, "code": "def isu(x , y , z):\n    ans = (x - z) // (y + z)\n    return ans\ndef main():\n    x = 13;y = 3;z = 1\n    print(isu(x , y , z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18143": {"id": 18143, "code": "def main():\n    S = \"1905\"\n    listS = [int(S[:2]), int(S[2:])]\n    if 1 <= listS[0] <= 12 and 1 <= listS[1] <= 12:\n        ans = 'AMBIGUOUS'\n    elif 1 <= listS[0] <= 12:\n        ans = 'MMYY'\n    elif 1 <= listS[1] <= 12:\n        ans = 'YYMM'\n    else:\n        ans = 'NA'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "13238": {"id": 13238, "code": "def resolve():\n    s = \"happy,newyear,enjoy\"\n    print(s[:5],s[6:13],s[14:])\nresolve()", "coverage": [">", ">", ">", ">"]}, "14706": {"id": 14706, "code": "def f(n, p, a):\n    odd = sum(i % 2 for i in a)\n    if odd == 0:\n        if p == 0:\n            return 2**n\n        elif p == 1:\n            return 0\n    else:\n        return 2**(n-1)\nn = 2;p = 0\na = [1, 3]\nprint(f(n, p, a))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "10153": {"id": 10153, "code": "def main():\n    from collections import deque\n    N = 8\n    s = \"))))((((\"\n    ans = deque(s)\n    cnt = 0\n    for c in s:\n        if c == ')':\n            if cnt:\n                cnt -= 1\n            else:\n                ans.appendleft('(')\n        else:\n            cnt += 1\n    for _ in range(cnt):\n        ans.append(')')\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "3421": {"id": 3421, "code": "from sys import stdin\ndef main():\n    A = 12;B = 4\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18814": {"id": 18814, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H = 3\n    W = 7\n    N = 10\n    ans = N // max(H, W)\n    if N % max(H, W) > 0:\n        ans += 1\n    return ans\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10949": {"id": 10949, "code": "def solve():\n    S = \"atcoder\"\n    if S != S[::-1]:\n        print(\"No\")\n    else:\n        sub = S[:(len(S)-1)//2]\n        if sub != sub[::-1]:\n            print(\"No\")\n        else:\n            print(\"Yes\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "3491": {"id": 3491, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 15\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8750": {"id": 8750, "code": "def main():\n    n = 7\n    a1 = [3, 3, 4, 5, 4, 5, 3]\n    a2 = [5, 3, 4, 4, 2, 3, 2]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13094": {"id": 13094, "code": "import sys\nimport math\nimport bisect\ndef main():\n    if int(\"5\") in [3, 5, 7]:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11006": {"id": 11006, "code": "S = \"akasaka\"\nN = len(S)\ndef kaibun(s):\n    n = len(s)\n    f_kaibun = True\n    for i in range(int(n/2)):\n        j = n-1-i\n        if j <= i:\n            break\n        if s[i] != s[j]:\n            f_kaibun = False\n            break\n    return f_kaibun\nif kaibun(S) and kaibun(S[0:int(round((N-1)/2))]) and kaibun(S[int(round((N+3)/2))-1:N]):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", "!"]}, "14622": {"id": 14622, "code": "n = 3;p = 0\nA = [1, 1, 1]\neven = sum([a%2==0 for a in A])\nodd = n - even\ndef nCr(n,r):\n  ret = 1\n  for i in range(r):\n    ret *= n-i\n    ret //= i+1  \n  return ret\nans = 0\nadd = 2 ** even\nfor k in range(p,odd+1,2):  \n  ans += nCr(odd,k) * add  \nprint(ans)  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10463": {"id": 10463, "code": "def main():\n    A = 1;B = 1;K = 1\n    cnt = 0\n    ans = 0\n    for i in range(min(A, B), 0, -1):\n        if A % i == 0 and B % i == 0:\n            cnt += 1\n        if cnt == K:\n            ans = i\n            break\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "354": {"id": 354, "code": "def main():\n    S = \"codefestival\"\n    K = 100\n    ans = ['' for _ in range(len(S))]\n    for i in range(len(S)):\n        d = ord(S[i]) - ord('a')\n        shift = (26 - d) % 26\n        if K - shift >= 0:\n            ans[i] = 'a'\n            K -= shift\n        else:\n            ans[i] = S[i]\n    if K > 0:\n        K %= 26\n        d = (K + ord(ans[-1]) - ord('a')) % 26\n        ans[-1] = chr(d + ord('a'))\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19236": {"id": 19236, "code": "def main():\n    n = 5\n    if n % 2:\n        print(0)\n    else:\n        n //= 2\n        ans = 0\n        i = 5\n        while i <= n:\n            ans += n // i\n            i *= 5\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "10318": {"id": 10318, "code": "def resolve():\n    A = 1;B = 1;K = 1\n    ans = [1]\n    for i in range(2, min(A, B)+1):\n        if A%i == 0 and B%i == 0:\n            ans.append(i)\n    print(ans[K*-1])\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "8748": {"id": 8748, "code": "def main():\n    n = 5\n    a1 = [3, 2, 2, 4, 1]\n    a2 = [1, 2, 2, 2, 1]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18703": {"id": 18703, "code": "def main():\n    h = 3\n    w = 7\n    n = 10\n    a = max(h, w)\n    print((n + a - 1) // a)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6788": {"id": 6788, "code": "mod = 1e9+7\ndef add(a, b):\n    c = a + b\n    if c >= mod:\n        c -= mod\n    return c\ndef main():\n    H = 211;N = 5\n    s = 210\n    if s >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "16009": {"id": 16009, "code": "def solve():\n    a = 20;b = 30\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "16188": {"id": 16188, "code": "def main():\n    N = 5\n    A = [6, 9, 4, 2, 11]\n    A.sort()\n    max_a = A[-1]\n    A = A[:-1]\n    A.sort(key=lambda a: abs(a - max_a / 2))\n    print('{} {}'.format(max_a, A[0]))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5972": {"id": 5972, "code": "def solve():\n    n = 2\n    print((n+1)//2)\nsolve()", "coverage": [">", ">", ">", ">"]}, "4976": {"id": 4976, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    s = \"smiles\"\n    ans = \"\".join([s[0], str(len(s) - 2), s[-1]])\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9661": {"id": 9661, "code": "def Level(S):\n    A=[0]\n    for i in range(len(S)):\n        if S[i]==\"(\":\n            A.append(A[-1]+1)\n        else:\n            A.append(A[-1]-1)\n    return A\nN = 6\nS = \")))())\"\nA=Level(S)\nX=-min(A)\nT=\"(\"*X+S\nB=Level(T)\nY=B[-1]\nU=T+\")\"*Y\nprint(U)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17308": {"id": 17308, "code": "def main():\n    a = \"D\";b = \"H\"\n    liar = False\n    if  a == \"H\" and b == \"H\" :\n        liar = False\n    elif a == \"H\" and b == \"D\" :\n        liar = True\n    elif a == \"D\" and b == \"H\" :\n        liar = True\n    elif a == \"D\" and b == \"D\" :\n        liar = False\n    if liar:\n        print(\"D\")\n    else:\n        print(\"H\")\nmain()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "2244": {"id": 2244, "code": "def resolve():\n    N = 100;A = 100;B = 100\n    print(min(A, B), max(0, A+B-N))\nresolve()", "coverage": [">", ">", ">", ">"]}, "13537": {"id": 13537, "code": "def solve():\n    print(\"abcde,fghihgf,edcba\".replace(',', ' '))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">"]}, "6545": {"id": 6545, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a_s = sorted(a)\n    c_s = sorted(c)\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a_s, i)\n        e = n - bisect.bisect_right(c_s, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15080": {"id": 15080, "code": "import itertools\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nodd = []\neven = []\nc = 0\nfor i in A:\n    if i % 2 == 0:\n        even.append(i)\n    else:\n        odd.append(i)\nif P == 1:\n    for i in range(1, len(odd)+1, 2):\n        c += combinations_count(len(odd), i)\nif P == 0:\n    for i in range(0, len(odd)+1, 2):\n        c += combinations_count(len(odd), i)\nprint(2 ** len(even) * c) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11292": {"id": 11292, "code": "wd = \"SUN MON TUE WED THU FRI SAT\".split()\nwd = list(reversed(wd))\ndef solve(S: str):\n    idx = wd.index(S)\n    return idx+1\ndef main():\n    S = \"SAT\"\n    answer = solve(S)\n    print(answer)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19277": {"id": 19277, "code": "import collections as cl\nimport sys\ndef II():\n    return int(\"5\")\ndef main():\n    n = II()\n    if n % 2 == 1:\n        print(0)\n        return\n    n_int = n // 2\n    ans_int = 0\n    k = 5\n    while k <= n_int:\n        ans_int += n_int//k\n        k *= 5\n    print(ans_int)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "17587": {"id": 17587, "code": "def YY(x):\n    if 1<=x and x<=12:\n        return True\n    else:\n        return False\nS = \"0112\"\nA=int(S[0:2])\nB=int(S[2:4])\nif YY(A) and YY(B):\n    print(\"AMBIGUOUS\")\nelif YY(A):\n    print(\"MMYY\")\nelif YY(B):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "3051": {"id": 3051, "code": "def answer(s: str) -> int:\n    return min(abs(753 - int(s[i:i + 3])) for i in range(len(s) - 2))\ndef main():\n    s = \"1111111111\"\n    print(answer(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5563": {"id": 5563, "code": "import sys\ndef main():\n    n = 5\n    if n%2==0:\n        print(n//2)\n    else:\n        print(n//2+1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13359": {"id": 13359, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    print(s.replace(\",\", \" \"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "16407": {"id": 16407, "code": "def resolve():\n    n = 2\n    a = [0, 100]\n    cost = float(\"INF\")\n    mn = 0\n    mx = a[-1]\n    for aa in a[:-1]:\n        tmp = abs(mx - aa * 2)\n        if tmp < cost:\n            cost = tmp\n            mn = aa\n    print(mx, mn)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15130": {"id": 15130, "code": "N = 1;P = 1\ndef combi(N,K):\n    a = 1\n    for i in range(K):\n        a *= N-i\n    for j in range(K):\n        a /= j+1\n    return a\nans = 0\nlis = [50]\nls = []\nfor a in lis:\n    ls.append(a%2)\none = ls.count(1)\nzero = ls.count(0)\npattern_a = 0\npattern_b = 0\nfor j in range(zero+1):\n    pattern_b += combi(zero,j)\ntime = 0\nwhile time<=one:\n    if time%2 ==P:\n        pattern_a += combi(one,time)\n    time += 1\nprint(int(pattern_a*pattern_b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "166": {"id": 166, "code": "def main():\n    S = \"a\"\n    K = 25\n    ans = ''\n    for s in S:\n        if 123 - ord(s) <= K and s != 'a':\n            ans += 'a'\n            K -= 123-ord(s)\n        else:\n            ans += s\n    if K > 0:\n        ans = ans[:-1] + chr((ord(ans[-1])+K-97) % 26+97)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "2444": {"id": 2444, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 4;M = 3\nif N==0 or N==1:\n    if M==0 or M==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(M, 2))\n        exit(0\n        )\nif M==0 or M==1:\n    if N==0 or N==1:\n        print(0)\n        exit(0)\n    else:\n        print(combinations_count(N, 2))\n        exit(0)\nprint(combinations_count(N, 2)+combinations_count(M, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">"]}, "10191": {"id": 10191, "code": "def cin():  return list(map(int,\"6\".split()))\nN = cin()[0]\nS = \")))())\"\ntmp = S[::]\nfor i in range(100): tmp = tmp.replace(\"()\", \"\")\ncnt1 = 0\ncnt2 = 0\nfor i in range(len(tmp)):\n    if tmp[i] == '(': cnt1 += 1\n    else: cnt2 += 1\nans = S[::]\nans = \"(\" * cnt2 + S + ')' * cnt1;\nprint(ans);", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5925": {"id": 5925, "code": "def main():\n    n = 100\n    div, mod = divmod(n, 2)\n    if mod != 0:\n        print(div + 1)\n    else:\n        print(div)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "2176": {"id": 2176, "code": "def LI():\n    return list(map(int, \"10 3 5\".split()))\nN, A, B = LI()\nif A+B <= N:\n    ans = 0\nelse:\n    ans = A+B-N\nprint(min(A, B), ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "15896": {"id": 15896, "code": "import sys\ndef main():\n    input = sys.stdin.buffer.readline\n    a = 12;b = 4\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5575": {"id": 5575, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    n = 5\n    print(n // 2) if n % 2 == 0 else print((n + 1) // 2)\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "256": {"id": 256, "code": "S = \"a\"\nS = list(S)\ndef func(c) -> int:\n    t = 26 - (ord(c) - ord('a'))\n    t %= 26\n    return t\nL = [func(c) for c in S]\nK = 25\nfor i in range(len(L)):\n    if(L[i] <= K):\n        K -= L[i]\n        L[i] = 0\n    else:\n        continue\nif(K > 0):\n    K %= 26\n    L[-1] -= K\n    if(L[-1] < 0):\n        L[-1] += 26\ndef gunc(c):\n    t = 26 - c\n    t %= 26\n    return chr(t+97)\nans = [gunc(c) for c in L]\nst = ''\nfor c in ans:\n    st += c\nprint(st)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14560": {"id": 14560, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\nA = [50]\nAA = [0]*n\nfor i in range(n):\n    if A[i]%2:\n        AA[i]=1\nsumA = sum(AA)\nres1 = 0\nfor i in range(p,sumA+1,2):\n    res1 += comb(sumA,i)\nres0 = 2**(n-sumA)\nprint(res1*res0)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14708": {"id": 14708, "code": "def f(n, p, a):\n    odd = sum(i % 2 for i in a)\n    if odd == 0:\n        if p == 0:\n            return 2**n\n        elif p == 1:\n            return 0\n    else:\n        return 2**(n-1)\nn = 3;p = 0\na = [1, 1, 1]\nprint(f(n, p, a))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14502": {"id": 14502, "code": "from math import factorial\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n - r)\nn = 2;p = 0\na = [1, 3]\neven = 0\nodd = 0\nfor i in a:\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nif p == 0:\n    temp = 0\n    for i in range(0,odd+1,2):\n        temp += nCr(odd,i)\n    print(int(2**even * temp))\nelse:\n    temp = 0\n    for i in range(1,odd+1,2):\n        temp += nCr(odd,i)\n    print(int(2**even * temp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "10769": {"id": 10769, "code": "def isPalindrome(string):\n    flag = True\n    len_string = len(string)\n    if len_string == 1:\n        return flag\n    for i in range(len_string//2):\n        if string[i] != string[-1-i]:\n            flag = False\n            break\n    return flag\nS = \"akasaka\"\nlen_s = len(S)\nfro_s = S[:len_s//2]\nif len_s % 2 == 0:\n    bak_s = S[-len_s//2:]\nelse:\n    bak_s = S[-len_s//2 + 1:]\nif isPalindrome(S) and isPalindrome(fro_s) and isPalindrome(bak_s):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "10403": {"id": 10403, "code": "def check(a,b):\n  d=[]\n  for i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n      d.append(i)\n  return d[::-1]\na = 1;b = 1;k = 1\nprint(check(a,b)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2398": {"id": 2398, "code": "def main():\n    N = 0;M = 3\n    ans = N*(N-1)//2 + M*(M-1)//2\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "14852": {"id": 14852, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 1;p = 1\na = [50]\nfor i in range(n):\n    a[i] %=2\none = a.count(1)\nzero = a.count(0)\nans=0\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nif p==0:\n    for i in range(0,one+1,2):\n        ans += cmb(one,i)*2**zero\nelse:\n    for i in range(1,one+1,2):\n        ans += cmb(one,i)*2**zero\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", "!", ">", "!", ">"]}, "5984": {"id": 5984, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    N = 2\n    ans = int(N / 2 + 0.6)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14636": {"id": 14636, "code": "import random as rng\nimport itertools as it\nimport collections as col\nimport heapq as hq\nimport sys\nimport copy as cp\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\ndef dump_impl(*objects):\n    print(*objects, file=sys.stderr)\ndef dump_dummy(*objects):\n    pass\ndump = dump_impl if \"DEBUG\" in sys.argv else dump_dummy\ndef odd(n): return n & 1\ndef even(n): return not odd(n)\ndef comb(n, m):\n    r = 1\n    for i in range(1, n+1):\n        r *= i\n    for i in range(1, m+1):\n        r //= i\n    for i in range(1, n-m+1):\n        r //= i\n    return r\nN = 2;P = 0\nA = [1, 1]\ncnt0 = len([a for a in A if a == 0])\ncnt1 = len([a for a in A if a == 1])\nans = 0\nif odd(P):\n    for i in range(cnt1 + 1):\n        if odd(i):\n            ans += comb(cnt1, i)\nelse:\n    for i in range(cnt1 + 1):\n        if even(i):\n            ans += comb(cnt1, i)\nans *= pow(2, cnt0)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13507": {"id": 13507, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    s = s.replace(\",\", \" \")\n    print(s)\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "18809": {"id": 18809, "code": "H = 14\nW = 12\nN = 112\ndef paint(H,W,N):\n    large = max(H,W)\n    if N/large == int(N/large):\n        return int(N/large)\n    else:\n        return int (N/large)+1\nprint(paint(H,W,N))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13659": {"id": 13659, "code": "import sys\nsys.setrecursionlimit(1000000)\nn = 15;m = 3\na = [5, 4, 6]\ncost = [float(\"inf\"), 2, 5, 5, 4, 5, 6, 3, 7, 6]\nmincost = min(cost)\ndp = [None] * (n + 1)\ndef dfs(at):\n    if at < 0:\n        return -1\n    if at == 0:\n        return 0\n    if dp[at] is not None:\n        return dp[at]\n    r = max(dfs(at - cost[v]) * 10 + v for v in a)\n    dp[at] = r\n    return r\nprint(dfs(n))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2241": {"id": 2241, "code": "import sys\ndef input(): return \"100 100 100\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nN, A, B = mapint()\nprint(min(A, B), max((A+B-N), 0))", "coverage": [">", ">", ">", ">", ">", ">"]}, "18556": {"id": 18556, "code": "def main():\n    h = 2\n    w = 100\n    n = 200\n    if n % max(h,w) == 0:\n        print(n//max(h,w))\n    else:\n        print(n//max(h,w) + 1)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14511": {"id": 14511, "code": "def main():\n    n = 2;p = 0\n    a = [1, 3]\n    D = {0:0, 1:0}\n    for i in range(n):\n        D[a[i]%2]+=1\n    ans = 0\n    nCr = {}\n    def cmb(n, r):\n        if r == 0 or r == n: return 1\n        if r == 1: return n\n        if (n,r) in nCr: return nCr[(n,r)]\n        nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n        return nCr[(n,r)]\n    if p==0:\n        for i in range(D[1]//2+1):\n            ans += cmb(D[1],2*i)\n    else:\n        for i in range(D[1]//2):\n            ans += cmb(D[1],2*i+1)\n    print(ans * pow(2,D[0]))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "11293": {"id": 11293, "code": "wd = \"SUN MON TUE WED THU FRI SAT\".split()\nwd = list(reversed(wd))\ndef solve(S: str):\n    idx = wd.index(S)\n    return idx+1\ndef main():\n    S = \"SUN\"\n    answer = solve(S)\n    print(answer)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16142": {"id": 16142, "code": "def main():\n    n = 5\n    A = [6, 9, 4, 2, 11]\n    A.sort()\n    m = A.pop()\n    B = [[a, abs(a - (m / 2))] for a in A]\n    B.sort(key = lambda x: x[1])\n    print('{} {}'. format(m, B[0][0]))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18206": {"id": 18206, "code": "def main():\n    H = 2\n    W = 100\n    N = 200\n    print((N-1)//max(H,W) + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "930": {"id": 930, "code": "N = 101\ndef resolve():\n  a = 7\n  for i in range(1,N+1):\n    if a % N == 0:\n      return i\n    a = (a * 10 + 7) % N\n  return -1\nans = resolve()\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "17063": {"id": 17063, "code": "def another(s):\n  if s == 'D':\n    return 'H'\n  else:\n    return 'D'\na = \"D\";b = \"D\"\nif a == 'H':\n  print(b)\nelse:\n  print(another(b))", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "15638": {"id": 15638, "code": "def main():\n    import sys\n    sys.setrecursionlimit(10000000)\n    from collections import Counter, deque\n    from itertools import combinations\n    from math import floor, ceil\n    x = 12;y = 3;z = 1\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12989": {"id": 12989, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    if int(\"6\") in [3, 5, 7]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "43": {"id": 43, "code": "def codefes16qa_c():\n    s = \"xyz\"\n    k = 4\n    n = len(s)\n    ans = ''\n    for i in range(n):\n        if s[i] == 'a':\n            ans += s[i]\n            continue\n        step2a = 1 + ord('z') - ord(s[i])\n        if step2a <= k:\n            ans += 'a'\n            k -= step2a\n        else:\n            ans += s[i]\n    if k > 0:\n        last = ord(ans[-1]) + (k % 26)\n        ans = ans[:n-1] + chr(last)\n    print(ans)\ncodefes16qa_c()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "7787": {"id": 7787, "code": "import math\ndef get_input() -> tuple:\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    return N, K, A\ndef main(N: int, K: int) -> None:\n    ans = math.ceil((N - 1) / (K - 1))\n    print(ans)\nif __name__ == \"__main__\":\n    N = 4;K = 3;A = [2, 3, 1, 4]\n    main(N, K)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "353": {"id": 353, "code": "def main():\n    S = \"a\"\n    K = 25\n    ans = ['' for _ in range(len(S))]\n    for i in range(len(S)):\n        d = ord(S[i]) - ord('a')\n        shift = (26 - d) % 26\n        if K - shift >= 0:\n            ans[i] = 'a'\n            K -= shift\n        else:\n            ans[i] = S[i]\n    if K > 0:\n        K %= 26\n        d = (K + ord(ans[-1]) - ord('a')) % 26\n        ans[-1] = chr(d + ord('a'))\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11353": {"id": 11353, "code": "def solve():\n    s = \"SUN\"\n    if s == 'SUN':\n        print(7)\n    elif s == 'MON':\n        print(6)\n    elif s == 'TUE':\n        print(5)\n    elif s == 'WED':\n        print(4)\n    elif s == 'THU':\n        print(3)\n    elif s == 'FRI':\n        print(2)\n    elif s == 'SAT':\n        print(1)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "12636": {"id": 12636, "code": "def main():\n    x = 5\n    ans = \"NO\"\n    if (x == 7 or x == 5 or x == 3):\n        ans = \"YES\"\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6787": {"id": 6787, "code": "mod = 1e9+7\ndef add(a, b):\n    c = a + b\n    if c >= mod:\n        c -= mod\n    return c\ndef main():\n    H = 210;N = 5\n    s = 210\n    if s >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5032": {"id": 5032, "code": "def main():\n    s = \"internationalization\"\n    print(s[0]+str(len(s)-2)+s[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "7208": {"id": 7208, "code": "def main():\n    H = 211\n    offence = 210\n    print('Yes' if H <= offence else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "232": {"id": 232, "code": "def resolve():\n    def decode(x):\n        return ord(x) - 97\n    def encode(x):\n        return chr(x + 97)\n    S = [2, 14, 3, 4, 5, 4, 18, 19, 8, 21, 0, 11]\n    K = 100\n    for i in range(len(S) - 1):\n        if S[i] == 0:\n            continue\n        if 26 - S[i] <= K:\n            K -= 26 - S[i]\n            S[i] = 0\n    S[-1] = (S[-1] + K) % 26\n    ans = map(encode, S)\n    print(\"\".join(ans))\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12569": {"id": 12569, "code": "A = 1;B = 1;K = 1\ndef cf(x1,x2):\n    cf=[]\n    for i in range(1,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nprint(cf(A,B)[-(K)])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "4842": {"id": 4842, "code": "def resolve():\n    S = \"xyz\"\n    cnt = len(S[1:-1])\n    print(\"{}{}{}\".format(S[0], cnt, S[-1]))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "16135": {"id": 16135, "code": "def curtain(a, b):\n    return a-b*2 if a > b*2 else 0\ndef main():\n    a = 20;b = 15\n    print(curtain(a, b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18878": {"id": 18878, "code": "N = 12\ndef solve_function(N):\n    if N % 2 == 1:\n        return 0\n    it_can_be_divisible = 10\n    ans = 0\n    while True:\n        if it_can_be_divisible > N:\n            break\n        ans += N//it_can_be_divisible\n        it_can_be_divisible *= 5\n    return ans\nif solve_function(N):\n    print(solve_function(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "15133": {"id": 15133, "code": "def combination(n,r=-1):\n    if r==-1:\n        r = n\n    if (r<0) or (n<r):\n        return 0\n    cur = 1\n    res = []\n    res.append(cur)\n    for i in range(1,r+1):\n        cur *= n + 1 -i\n        cur //= i\n        res.append(cur)\n    return res\nN = 1;P = 1\nA = 0\nB = N - A\nC = combination(A)\ncomb = 0\nfor i in range(P,A+1,2):\n    comb += C[i]\nprint(2**B * comb)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "1326": {"id": 1326, "code": "def resolve():\n    cands = [111,222,333,444,555,666,777,888,999]\n    N = 750\n    import bisect\n    print(cands[bisect.bisect_left(cands, N)])\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14066": {"id": 14066, "code": "def f(n,a):\n    if n==1:\n        print(1)\n        exit()\n    pre=a[1]-a[0]\n    ans=1\n    for i in range(2,n):\n        if pre*(a[i]-a[i-1])<0:\n            pre=0\n            ans+=1\n        else:\n            if a[i]-a[i-1]:\n                pre=a[i]-a[i-1]\n    return ans\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprint(f(n,a))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "19533": {"id": 19533, "code": "def main():\n    n = 999999999\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(2 * n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "15068": {"id": 15068, "code": "def resolve():\n    N = 3;P = 0\n    As = [1, 1, 1]\n    is_all_even = True\n    for item in As:\n        if item == 1:\n            is_all_even = False\n    res = 0\n    if is_all_even:\n        if P == 0:\n            res = 2 ** N\n        else:\n            res = 0\n    else:\n        res = 2**(N-1)\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "3337": {"id": 3337, "code": "import sys\ndef ISI(): return map(int, \"12 4\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", ">"]}, "7206": {"id": 7206, "code": "def main():\n    H = 20\n    offence = 15\n    print('Yes' if H <= offence else 'No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "8563": {"id": 8563, "code": "def resolve():\n    n = 5\n    a_1 = [3, 2, 2, 4, 1]\n    a_2 = [1, 2, 2, 2, 1]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14743": {"id": 14743, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\noddC = 0\nevenC = 0\nfor a in A:\n    if a % 2 == 1:\n        oddC += 1\n    else:\n        evenC += 1\nc = 0\nif P == 0:\n    oddcombi = 0\n    for i in range(oddC+1):\n        if i % 2 == 1:\n            continue\n        oddcombi += combinations_count(oddC,i)\n    evencombi = 0\n    for i in range(evenC+1):\n        evencombi += combinations_count(evenC,i)\n    print(oddcombi*evencombi)\nelse:\n    oddcombi = 0\n    for i in range(oddC+1):\n        if i % 2 == 0:\n            continue\n        oddcombi += combinations_count(oddC,i)\n    evencombi = 0\n    for i in range(evenC+1):\n        evencombi += combinations_count(evenC,i)\n    print(oddcombi*evencombi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "8749": {"id": 8749, "code": "def main():\n    n = 4\n    a1 = [1, 1, 1, 1]\n    a2 = [1, 1, 1, 1]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12022": {"id": 12022, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    M1 = 11;D1 = 30\n    M2 = 12;D2 = 1\n    if M1 == M2:\n        ans = 0\n    else:\n        ans = 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "10034": {"id": 10034, "code": "def main():\n    n = 3\n    s = \"())\"\n    left = 0\n    right = 0\n    for i in range(n):\n        if s[i] == '(':\n            right += 1\n        else:\n            if right == 0:\n                left += 1\n            else:\n                right -= 1\n    print('('*left+s+')'*right)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "10128": {"id": 10128, "code": "def main():\n    N = 6\n    S = \")))())\"\n    count = 0\n    for i in range(N-1, -1, -1):\n        if S[i] == \")\":\n            count +=1\n        else:\n            if count:\n                count -= 1\n            else:\n                S += \")\"\n    S = \"(\"*count + S\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14769": {"id": 14769, "code": "import sys\nimport math\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 1;P = 1\n    A = [50]\n    odd = 0\n    even = 0\n    ans = 0\n    def comb(n, r):\n        return math.factorial(n) // math.factorial(r) // math.factorial(n - r)\n    for a in A:\n        if a % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if P == 0:\n        for i in range(0, odd + 1, 2):\n            for j in range(even + 1):\n                ans += comb(odd, i) * comb(even, j)\n        print(ans)\n    else:\n        for i in range(1, odd + 1, 2):\n            for j in range(even + 1):\n                ans += comb(odd, i) * comb(even, j)\n        print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">"]}, "14753": {"id": 14753, "code": "from math import factorial\nn = 2;p = 0\na_input = [1, 3]\ndef calc_comb(n,r):\n    return factorial(n) / factorial(r) / factorial(n - r)\nodd_len = 0\neven_len = 0\nfor i in range(n):\n    if a_input[i]%2==0:\n        even_len+=1\n    else:\n        odd_len+=1\nans=0\neven_comb = 2**even_len\nif p==0:\n    if odd_len%2==0:\n        for i in range(0,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\n    if odd_len%2==1:\n        for i in range(1,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\nelse:\n    if odd_len%2==0:\n        for i in range(1,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\n    if odd_len%2==1:\n        for i in range(0,odd_len+1,2):\n            ans+=calc_comb(odd_len,i)*even_comb\nprint(int(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "15579": {"id": 15579, "code": "def answer(x: int, y: int, z: int) -> int:\n    return (x - z) // (y + z)\ndef main():\n    x = 64146;y = 123;z = 456\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "1230": {"id": 1230, "code": "import sys\ndef input(): return \"111\".strip()\ndef resolve():\n    def main():\n        n = 111\n        x=999-n\n        if str(n)[0]==str(n)[1]==str(n)[2]:\n            return n\n        for i in range(x+1):\n            n+=1\n            if str(n)[0]==str(n)[1]==str(n)[2]:\n                return n\n    print(main())\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13676": {"id": 13676, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    minuts = (H2 - H1) * 60 + (M2 - M1)\n    print(minuts - K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12549": {"id": 12549, "code": "def abc120_b():\n    a = 8;b = 12;k = 2\n    n = min(a, b)\n    divisors = []\n    for i in range(1, n + 1):\n        if (a % i == 0) and (b % i == 0):\n            divisors.append(i)\n    print(divisors[-1 * k])\nif __name__ == '__main__':\n    abc120_b()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14244": {"id": 14244, "code": "def resolve():\n    N = 7\n    A_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    if N >=2:\n        prev_num = A_list[0]\n        new_list = []\n        prev_direction = 0\n        cnt = 1\n        for item in A_list[1:]:\n            if item != prev_num:\n                if prev_direction == 1:\n                    if item - prev_num >= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                elif prev_direction == -1:\n                    if item - prev_num <= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                else:\n                    if item - prev_num > 0:\n                        prev_direction = 1\n                    elif item - prev_num < 0:\n                        prev_direction = -1\n            prev_num = item\n    else:\n        cnt = 1\n    print(cnt)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "6980": {"id": 6980, "code": "def main():\n    H = 20;N = 3\n    A = map(int, \"4 5 6\".split())\n    if sum(A) >= H:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10591": {"id": 10591, "code": "A = 1;B = 1;K = 1\ndef divisor(n): \n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\nprint(sorted(list(set(divisor(A)) & set(divisor(B))), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6829": {"id": 6829, "code": "def solve():\n    h = 10;n = 3\n    a = map(int, \"4 5 6\".split())\n    for i in a:\n        h -= i\n    print('YNeos'[h>0::2])\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15125": {"id": 15125, "code": "from math import factorial\nfrom collections import Counter\ndef nCr(n,r):\n    return factorial(n)//(factorial(r)*factorial(n-r))\nN = 3;P = 0\nA = [1, 1, 1]\nc=Counter(A)\nz=pow(2,c.get(0,0))\nres=0\nfor i in range(1 if P else 0,c.get(1,0)+1,2):\n    res+=nCr(c.get(1,0),i)\nprint(z*res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9563": {"id": 9563, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"2017/01/31\"\n    ans = \"2018\" + S[4:]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9006": {"id": 9006, "code": "def main():\n    a = 1\n    b = 2\n    c = 4\n    d = 8\n    e = 9\n    k = 15\n    if abs(a-b)>k or abs(a-c)>k or abs(a-d)>k or abs(a-e)>k or abs(b-c)>k or abs(b-d)>k or abs(b-e)>k or abs(c-d)>k or abs(c-e)>k or abs(d-e)>k:\n        print(\":(\")\n    else:\n        print(\"Yay!\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8247": {"id": 8247, "code": "import sys\ndef MI(): return map(int,\"8 3\".rstrip().split())\ndef LI(): return list(map(int,\"7 3 1 8 4 6 2 5\".rstrip().split()))  \nN,K = MI()\nA = LI()\nprint((N+K-3)//(K-1))", "coverage": [">", ">", ">", ">", ">", ">"]}, "5458": {"id": 5458, "code": "def main():\n    n = 5\n    if n % 2 == 0:\n        print(n // 2)\n    else:\n        print(n // 2 + 1)\n    return\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "12397": {"id": 12397, "code": "def resolve():\n    s = \"akasaka\"\n    if s == s[::-1]:\n        s_1 = s[:len(s)//2]\n        s_2 = s[(len(s)+1)//2:]\n        if (s_1 == s_1[::-1]) and (s_2 == s_2[::-1]):\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "12561": {"id": 12561, "code": "import math\ndef main():\n    A = 8;B = 12;K = 2\n    c_list = []\n    for i in range(1, min(A, B)+1):\n        if A%i==0 and B%i==0:\n            c_list.append(i)\n    c_list.reverse()\n    print(c_list[K-1])\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16398": {"id": 16398, "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nl = a[-1]\ndef bigger(ind):\n    global a, n, l\n    if a[ind] > l / 2:\n        return True\n    else:\n        return False\ntop = n\nbottom = -1\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if bigger(mid):\n        top = mid\n    else:\n        bottom = mid\nif a[top] + a[bottom]> l or a[top] == l:\n    print(l, a[bottom])\nelse:\n    print(l, a[top])", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "195": {"id": 195, "code": "from string import ascii_lowercase\ns = \"xyz\"\nk = 4\ndef main(s, k):\n    alp = ascii_lowercase\n    num = {char: i for i, char in enumerate(alp)}\n    ns = [num[char] for char in s]\n    for i in range(len(ns)):\n        v = ns[i]\n        if v != 0 and 26 - v <= k:\n            ns[i] = 0\n            k -= 26 - v\n    ns[-1] = (ns[-1] + k) % 26\n    return ''.join(alp[n] for n in ns)\nprint(main(s, k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14478": {"id": 14478, "code": "def main():\n  N = 6\n  A = [1, 2, 3, 2, 2, 1]\n  ans = 1\n  x=y=0\n  for i in range(1, N):\n    if A[i - 1] < A[i]:\n      x = 1\n    if A[i - 1] > A[i]:\n      y = 1\n    if x and y:\n      ans += 1\n      x = y = 0\n  print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11131": {"id": 11131, "code": "S = \"level\"\nN = len(S)\ndef isp(s):\n  n = len(s)\n  for i in range(n // 2):\n    if s[i] != s[n - 1 - i]:\n      return False\n  return True\nif isp(S) and isp(S[0:(N - 1) // 2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "11627": {"id": 11627, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"SUN\"\n    days = ['','SAT','FRI','THU','WED','TUE','MON','SUN']\n    print(days.index(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2483": {"id": 2483, "code": "import sys\ndef input(): return \"1 9 7 4\".rstrip()\ndef main():\n    a = 1;b = 4;c = 7;d = 9\n    if a==1 and b==4 and c==7 and d==9:\n        print(\"YES\")\n    else:print(\"NO\")\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "9380": {"id": 9380, "code": "def main():\n    s = \"2017/01/07\"\n    print(s.replace(\"2017\", \"2018\"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "5241": {"id": 5241, "code": "def main():\n    s = ['x', 'y', 'z']\n    start, end = s[0], s[-1]\n    midle = len(s[1:-1])\n    print(\"{}{}{}\".format(start, midle, end))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18414": {"id": 18414, "code": "import math\ndef main():\n    H = 14\n    W = 12\n    N = 112\n    print(int(math.ceil(N/max(H, W))))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "16352": {"id": 16352, "code": "def main():\n    _ = int(\"5\")\n    a = [6, 9, 4, 2, 11]\n    a.sort()\n    half_val = -(-a[-1] // 2)\n    dist_list = [abs(half_val - an) for an in a[:-1]]\n    min_index = dist_list.index(min(dist_list))\n    print(f'{a[-1]} {a[min_index]}')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11991": {"id": 11991, "code": "def main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if d2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17001": {"id": 17001, "code": "def solve():\n    a = \"H\";b = \"H\"\n    c = b == \"H\"\n    return c if a == \"H\" else not c\nif __name__ == '__main__':\n    res = solve()\n    print(\"H\") if res else print(\"D\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14672": {"id": 14672, "code": "import math\ndef combination(n, k):\n    return math.factorial(n) // math.factorial(k) // math.factorial(n - k)    \nN = 1;P = 1\nA = [50]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a%2 == 0:\n        gusu += 1\n    else:\n        kisu += 1\nsum_gu = 2**gusu\nif P%2==0:\n    sum_ki = 0\n    for i in range(2,kisu+1, 2):\n        sum_ki += combination(kisu, i)\n    sum_ki *= sum_gu\n    print(sum_gu+sum_ki)\nelse:\n    sum_ki = 0\n    for i in range(1,kisu+1, 2):\n        sum_ki += combination(kisu, i)\n    print(sum_gu*sum_ki)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">"]}, "17193": {"id": 17193, "code": "def resolve():\n  a = \"D\";b = \"D\"\n  flag=True\n  if a==\"H\":\n      if b==\"D\":flag=False\n  else:\n      if b==\"H\":flag=False\n  print(\"H\" if flag else \"D\")\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "17903": {"id": 17903, "code": "def mm(n):\n    if 0 < n and n < 13:\n        return True\n    else:\n        return False\nS = \"1700\"\nhead = int(S[:2])\ntail = int(S[2:])\nhead_mm = mm(head)\ntail_mm = mm(tail)\nif head_mm and tail_mm:\n    print(\"AMBIGUOUS\")\nelif head_mm:\n    print(\"MMYY\")\nelif tail_mm:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "12542": {"id": 12542, "code": "from math import gcd\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 100;b = 50;k = 4\nx = gcd(a, b)\nl = make_divisors(x)\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17864": {"id": 17864, "code": "def main():\n    inp = \"1700\"\n    ch1=int(inp[0:2])\n    ch2=int(inp[2:])\n    if inp[0]==0:\n        ch1=int(inp[1])\n    if inp[2]==0:\n        ch2=int(inp[-1])\n    if ch1<=12 and ch1>=1:\n        if ch2<=12 and ch2>=1 and ch2<=12 and ch2>=1:\n            print(\"AMBIGUOUS\")\n            return\n        elif ch2<=12 or ch2>=1:\n            print(\"MMYY\")\n            return\n    if ch1>12 or ch1<1:\n        if ch2<=12 and ch2>=1:\n            print(\"YYMM\")\n            return\n        else:\n            print(\"NA\")\n            return\nmain()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", ">", ">", ">"]}, "5205": {"id": 5205, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    S = \"xyz\"\n    print(S[0]+str(len(S)-2)+S[-1])\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3964": {"id": 3964, "code": "def main(x, y, z):\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    x = 13;y = 3;z = 1\n    main(x, y, z)", "coverage": [">", ">", ">", ">", ">"]}, "715": {"id": 715, "code": "K = 2\ndef check(k):\n    aaa = 0\n    prev = 7%k\n    for i in range(0,k):\n        aaa+=1\n        if prev == 0:\n            return(aaa)\n        prev = (prev*10+7)%k\n    return(-1)\nprint(check(K))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14203": {"id": 14203, "code": "__DEUBG__ = 0\nimport math\nimport sys\nnum = 7\nseq = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = None\ntmp = []\nincrease = None\ncount = 0\ndef dump(x):\n    from pprint import pprint\n    pprint(x)\nfor x in seq:\n    if __DEUBG__:\n        print(x)\n        print(tmp)\n    if prev is None:\n        tmp = [x]\n    elif increase is True:\n        if x >= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == tmp[-1]:\n            pass\n        elif x > tmp[-1]:\n            increase = True\n        else:\n            increase = False\n        tmp.append(x)\n    prev = x\nif __DEUBG__:\n    dump(tmp)\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "18034": {"id": 18034, "code": "x = ['0', '1', '1', '2']\nfirst = 10 * int(x[0]) + int(x[1])\nsecond = 10 * int(x[2]) + int(x[3])\ndef mc(num):\n    if 1 <= num <= 12:\n        return True\n    else:\n        return False\ndef yc(num):\n    if 0 <= num <= 99:\n        return True\n    else:\n        return False\nif yc(first):\n    if mc(second):\n        if yc(second):\n            if mc(first):\n                print(\"AMBIGUOUS\")\n            else:\n                print(\"YYMM\")\n        else:\n            print(\"YYMM\")\n    elif yc(second):\n        if mc(first):\n            print(\"MMYY\")\n        else:\n            print(\"NA\")\n    else:\n        print(\"NA\")\nelif yc(second):\n    if mc(first):\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "18113": {"id": 18113, "code": "def is_month(x):\n  if 1 <= x <= 12:\n    return True\n  else:\n    return False\nS = \"1905\"\nfirst, latter = is_month(int(S[:2])), is_month(int(S[2:]))\nif first and latter:\n  ans = \"AMBIGUOUS\"\nelif not first and not latter:\n  ans = \"NA\"\nelif first:\n  ans = \"MMYY\"\nelse:\n  ans = \"YYMM\"\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "13450": {"id": 13450, "code": "import sys\ndef input(): return \"abcde,fghihgf,edcba\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\ns = \"abcde,fghihgf,edcba\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "134": {"id": 134, "code": "import sys\ndef main():\n    input = sys.stdin.readline\n    s = \"a\"\n    K = 25\n    def c(x): return ord(x) - ord('a')\n    def d(x): return chr(x + ord('a'))\n    ans = []\n    i = 0\n    while i < (len(s) - 1):\n        to_a = (26 - c(s[i])) % 26\n        if to_a <= K:\n            ans.append('a')\n            K -= to_a\n        else:\n            ans.append(s[i])\n        i += 1\n    if K > 0:\n        ans.append(d((c(s[-1]) + K) % 26))\n    else:\n        ans.append(s[i])\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "10901": {"id": 10901, "code": "import math\nfrom math import gcd\nINF = float(\"inf\")\nimport sys\ninput=sys.stdin.readline\nimport itertools\ndef main():\n    s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\n    n = len(s)\n    k = s.copy()\n    k.reverse()\n    if k != s:\n        print(\"No\")\n        exit()\n    k = s[0:(n-1)//2]\n    l = k.copy()\n    l.reverse()\n    if k != l:\n        print(\"No\")\n        exit()\n    k = s[(n-1)//2+1:]\n    l = k.copy()\n    if k != l:\n        print(\"No\")\n        exit()\n    print(\"Yes\")\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14669": {"id": 14669, "code": "from math import factorial\ndef cmb(a,b):\n    return factorial(a)//factorial(b)//factorial(a-b)\nN = 1;P = 1\nA = [50]\nOdd = 0 \nEven = 0\nfor Ai in A:\n    if Ai % 2 == 0:\n        Even += 1\n    else:\n        Odd += 1\nans = 0\nif P == 0:\n    for i in range(Odd+1)[::2]:\n        ans += cmb(Odd,i)\nelse:\n    for i in range(Odd+1)[1::2]:\n        ans += cmb(Odd,i)\nans *= pow(2,Even)\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", "!", ">", ">"]}, "9562": {"id": 9562, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"2017/01/07\"\n    ans = \"2018\" + S[4:]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14826": {"id": 14826, "code": "import sys,math\ninput = sys.stdin.readline\ndef f(s):\n    n = int(s)%2\n    return n\nN = 2;P = 0\nA = [1, 1]\nc0 = A.count(0)\nc1 = A.count(1)\nfact = [1]* (c1+1)\nfor i in range(1,c1+1):\n    fact[i]= fact[i-1]*i\ncnt = 0\nfor i in range(P,c1+1,2):\n    cnt += fact[c1]//fact[i]//fact[c1-i]\nprint(cnt*pow(2,c0))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12288": {"id": 12288, "code": "def isKaibun(ss):    \n    return ss==ss[::-1]\ns = \"atcoder\"\nans=True\nn=len(s)\nif not isKaibun(s):\n    ans=False\nif not isKaibun(s[:((n-1)//2)]):\n    ans=False\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14729": {"id": 14729, "code": "N = 3;P = 0\nA = [1, 1, 1]\no = A.count(1)\ne = N-o\non = en = 0\ndef ncr(n, r):\n    r = min(r,n-r)\n    res=1\n    d=1\n    for i in range(r):\n        res*=n-i\n        d *= i + 1\n    return res//d\nfor r in range(e+1):\n    en+=ncr(e,r)\nfor r in range(P, o+1, 2):\n    on+=ncr(o,r)\nprint(on*en)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7878": {"id": 7878, "code": "def resolve():\n    n = 8;k = 3\n    a = [7, 3, 1, 8, 4, 6, 2, 5]\n    print(-(-(n-1)//(k-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "17028": {"id": 17028, "code": "def main():\n    a = \"H\";b = \"H\"\n    print(\"H\" if a == b else \"D\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "10017": {"id": 10017, "code": "def main():\n    n = 3\n    s = \"())\"\n    l, r, c = 0, 0, 0\n    for a in s:\n        if a == '(':\n            c += 1\n        elif c:\n            c -= 1\n        else:\n            l += 1\n    r = c\n    print(\"(\"*l + s + \")\"*r)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "7770": {"id": 7770, "code": "import math\ndef main():\n    n = 3;k = 3\n    As = [1, 2, 3]\n    ans = math.ceil((n-1)/(k-1))\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14727": {"id": 14727, "code": "N = 2;P = 0\nA = [1, 1]\no = A.count(1)\ne = N-o\non = en = 0\ndef ncr(n, r):\n    r = min(r,n-r)\n    res=1\n    d=1\n    for i in range(r):\n        res*=n-i\n        d *= i + 1\n    return res//d\nfor r in range(e+1):\n    en+=ncr(e,r)\nfor r in range(P, o+1, 2):\n    on+=ncr(o,r)\nprint(on*en)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "959": {"id": 959, "code": "def isSame(n):\n    if n[0] == n[1] and n[1] == n[2]:\n        return True\n    else:\n        return False\nn_s = \"750\"\nn_i = int(n_s)\nwhile True:\n    if isSame(n_s):\n        print(n_s)\n        break\n    else:\n        n_i += 1\n        n_s = str(n_i)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "786": {"id": 786, "code": "def main2():\n    K = 2\n    rem = set()\n    n = ans = 0\n    while True:\n        n = n * 10 + 7\n        ans += 1\n        if n % K == 0:\n            print(ans)\n            break\n        else:\n            n = n % K\n            if n in rem:\n                print(-1)\n                break\n            else:\n                rem.add(n)\nif __name__ == \"__main__\":\n    main2()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "17859": {"id": 17859, "code": "S = \"1905\"\nf = int(S[0]+S[1])\nb = int(S[2]+S[3])\ndef judge(int):\n    if 1 <= int <= 12:\n        return 0\n    else:\n        return 1\nref = [judge(f), judge(b)]\nif ref == [1, 1]:\n    print(\"NA\")\nelif ref == [0, 1]:\n    print(\"MMYY\")\nelif ref == [1, 0]:\n    print(\"YYMM\")\nelse:\n    print(\"AMBIGUOUS\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "15978": {"id": 15978, "code": "def main():\n    A = 20;B = 15\n    ans = A - 2 * B\n    if ans < 0:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17557": {"id": 17557, "code": "def main():\n    s = \"0112\"\n    s1=int(s[:2])\n    s2=int(s[2:])\n    yymm = 1 <= s2 <= 12\n    mmyy = 1 <= s1 <= 12\n    if yymm and mmyy:\n        print(\"AMBIGUOUS\")\n    elif yymm:\n        print(\"YYMM\")\n    elif mmyy:\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "12243": {"id": 12243, "code": "def flg(s):\n  le = len(s) // 2\n  return s[:le] == s[::-1][:le]\ns = \"akasaka\"\nle1 = len(s) // 2\nt = s[:le1]\nprint([\"No\", \"Yes\"][flg(s) and flg(t)])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6015": {"id": 6015, "code": "def main():\n    n = 100\n    if n%2:\n        print(n//2+1)\n    else:\n        print(n//2)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "14671": {"id": 14671, "code": "import math\ndef combination(n, k):\n    return math.factorial(n) // math.factorial(k) // math.factorial(n - k)    \nN = 2;P = 0\nA = [1, 3]\nkisu = 0\ngusu = 0\nfor a in A:\n    if a%2 == 0:\n        gusu += 1\n    else:\n        kisu += 1\nsum_gu = 2**gusu\nif P%2==0:\n    sum_ki = 0\n    for i in range(2,kisu+1, 2):\n        sum_ki += combination(kisu, i)\n    sum_ki *= sum_gu\n    print(sum_gu+sum_ki)\nelse:\n    sum_ki = 0\n    for i in range(1,kisu+1, 2):\n        sum_ki += combination(kisu, i)\n    print(sum_gu*sum_ki)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "12543": {"id": 12543, "code": "from math import gcd\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 1;b = 1;k = 1\nx = gcd(a, b)\nl = make_divisors(x)\nprint(l[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "8609": {"id": 8609, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 1\n    a1 = chain(tuple([0]), tuple(map(int, \"2\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"3\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6786": {"id": 6786, "code": "mod = 1e9+7\ndef add(a, b):\n    c = a + b\n    if c >= mod:\n        c -= mod\n    return c\ndef main():\n    H = 20;N = 3\n    s = 15\n    if s >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()", "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17350": {"id": 17350, "code": "def main():\n    A = \"D\";B = \"H\"\n    print('H'if A == B else 'D')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "12294": {"id": 12294, "code": "def main():\n    s = \"atcoder\"\n    n = len(s)\n    s1 = s[:int((n-1)/2)]\n    s2 = s[int((n+3)/2)-1:]\n    for tmp in [s, s1, s2]:\n        tmp_rev = tmp[::-1]\n        if tmp != tmp_rev:\n            print(\"No\")\n            break\n    else:\n        print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "17046": {"id": 17046, "code": "def main():\n    a = \"H\";b = \"H\"\n    if a == 'H':\n        if b == 'H':\n            ans = 'H'\n        else:\n            ans = 'D'\n    else:\n        if b == 'H':\n            ans = 'D'\n        else:\n            ans = 'H'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "10788": {"id": 10788, "code": "from collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\ndef ceil(a, b):\n    return (a + b - 1) // b\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\ndef solve():\n    S = \"level\"\n    N = len(S)\n    if S != S[::-1]:\n        return False\n    t = S[:(N - 1) // 2]\n    if t != t[::-1]:\n        return False\n    t = S[(N + 3) // 2 - 1:]\n    if t != t[::-1]:\n        return False\n    return True\ndef main():\n    if solve():\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "4538": {"id": 4538, "code": "def main():\n    s = \"smiles\"\n    print(s[0] + str(len(s) - 2) + s[-1])\nmain()", "coverage": [">", ">", ">", ">"]}, "19342": {"id": 19342, "code": "N = 3\ndef gcd(x, y):\n    if x == 0:\n        return y\n    else:\n        return gcd(y%x, x)\nprint((2 * N) // gcd(2, N))", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "8521": {"id": 8521, "code": "def main():\n    n = 1\n    a1lis = [2]\n    a2lis = [3]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "12794": {"id": 12794, "code": "import sys\nu = set('753')\nx = \"5\"\ndef main():\n    ans = 'YES' if x in u else 'NO'\n    print(ans)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9932": {"id": 9932, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import chain\ndef main():\n    n = 8\n    s = (')', ')', ')', ')', '(', '(', '(', '(')\n    cnt = 0\n    cnt_ushiro = 0\n    cnt_mae = 0\n    for se in s:\n        cnt += se == ')'\n        cnt -= se == '('\n        cnt_mae = max(cnt_mae, cnt)\n    cnt -= cnt_mae\n    if cnt < 0:\n        cnt_ushiro = -cnt\n    s_mae = ('(') * cnt_mae\n    s_ushiro = (')') * cnt_ushiro\n    r = tuple(chain(s_mae, s, s_ushiro))\n    print(*r,sep=\"\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5820": {"id": 5820, "code": "import math\ndef get_input() -> int:\n    N = 100\n    return N\ndef main(N: int) -> None:\n    result = math.ceil(N/2)\n    print(result)\nif __name__ == \"__main__\":\n    N = 100\n    main(N)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "2397": {"id": 2397, "code": "def main():\n    N = 13;M = 3\n    ans = N*(N-1)//2 + M*(M-1)//2\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12528": {"id": 12528, "code": "def com_div(x, y):\n    dv = []\n    m = min(x, y)\n    for i in range(1, m + 1):\n        if x % i == 0 and y % i == 0:\n            dv.append(i)\n    dv.sort()\n    return dv[::-1]\na = 1;b = 1;k = 1\nprint(com_div(a, b)[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8520": {"id": 8520, "code": "def main():\n    n = 7\n    a1lis = [3, 3, 4, 5, 4, 5, 3]\n    a2lis = [5, 3, 4, 4, 2, 3, 2]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10380": {"id": 10380, "code": "a = 1;b = 1;k = 1\ndef cf(x1,x2):\n    cf=[]\n    for i in range(2,min(x1,x2)+1):\n        if x1 % i == 0 and x2 % i == 0:\n            cf.append(i)\n    return cf\nlst=cf(a,b)\nlst.insert(0,1)\nprint(lst[-k])", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15969": {"id": 15969, "code": "import sys\nimport math\nimport bisect\ndef main():\n    n = 20;m = 15\n    n = max(0, n - 2 * m)\n    print(n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17704": {"id": 17704, "code": "s = \"0112\"\ni1 = int(s[:2])\ni2 = int(s[2:])\ndef f(i):\n    if (0 < i < 13):\n        return 1\n    elif (0 < i < 100):\n        return 2\n    else:\n        return 0\nf1 = f(i1)\nf2 = f(i2)\nif (f1 == 1):\n    if (f2 == 1):\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if (f2 == 1):\n        print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "10655": {"id": 10655, "code": "def make_divisors(n):\n    lower_divisors, upper_divisors = [], []\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n // i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nA = 100;B = 50;K = 4\nA_yaku = make_divisors(A)\nB_yaku = make_divisors(B)\nA_B_yaku = sorted(list(set(A_yaku) & set(B_yaku)))\nprint(A_B_yaku[len(A_B_yaku) - K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4031": {"id": 4031, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    time1 = H1*60 + M1\n    time2 = H2*60 + M2\n    time = time2-time1\n    ans = time-K\n    return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1120": {"id": 1120, "code": "def main():\n    n = 112\n    for x in range(n, 1000):\n        if str(x)[0] == str(x)[1] == str(x)[2]:\n            print(x)\n            break\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14690": {"id": 14690, "code": "def comb(n, k):\n    if k > n // 2:\n        return comb(n, n - k)\n    numer = 1\n    denom = 1\n    for i in range(k):\n        numer *= n - i\n        denom *= k - i\n    return numer // denom\ndef main():\n    N = 2;P = 0\n    A = [1, 3]\n    cnt_even_bag = len([a for a in A if a % 2 == 0])\n    cnt_odd_bag = N - cnt_even_bag\n    cnt_even_pattern = 2 ** cnt_even_bag\n    cnt_odd_pattern = 0\n    for c in range(1, cnt_odd_bag + 1, 2):\n        cnt_odd_pattern += comb(cnt_odd_bag, c)\n    cnt_even = cnt_even_pattern * cnt_odd_pattern\n    if P == 1:\n        print(cnt_even)\n    else:\n        print(2 ** N - cnt_even)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "6279": {"id": 6279, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_right\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    b_comb_accum = [0] * (N+1)\n    for i in range(N-1, -1, -1):\n        c_min_ind = bisect_right(C, B[i])\n        b_comb_accum[i] = b_comb_accum[i+1] + N - c_min_ind\n    ans = 0\n    for a in A:\n        b_min_ind = bisect_right(B, a)\n        ans += b_comb_accum[b_min_ind]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12379": {"id": 12379, "code": "s = \"akasaka\"\ndef kaibun(s):\n    if s == s[::-1]:\n        return 1\n    else:\n        return 0\nq = len(s)\nd = int((q-1)/2)\nket = s[0:d]\nmat = s[int((q+1)/2):q]\nif (kaibun(s) + kaibun(ket) + kaibun(mat)) == 3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "5214": {"id": 5214, "code": "def actual(s):\n    head = s[0]\n    tail = s[-1]\n    length = len(s[1:-1])\n    return '{}{}{}'.format(head, length, tail)  \ns = \"xyz\"\nprint(actual(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14530": {"id": 14530, "code": "from math import factorial\nn = 1;p = 1\na = [50]\neven=0\nodd=0\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\ndef comb(a,b):\n    return factorial(a)//(factorial(a-b)*factorial(b))\nn_even=0\nn_odd=0\nfor i in range(even+1):\n    n_even+=comb(even,i)\nif p==1:\n    for i in range(1,odd+1,2):\n        n_odd+=comb(odd,i)\nelse:\n    for i in range(0,odd+1,2):\n        n_odd+=comb(odd,i)\nprint(n_even*n_odd)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "4266": {"id": 4266, "code": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\ndef main():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;K = 120\n    wakeup = h1 * 60 + m1\n    sleep = h2 * 60 + m2\n    ans = sleep - K - wakeup\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18212": {"id": 18212, "code": "import math\ndef main():\n    h = 2\n    w = 100\n    n = 200\n    if w >= h:\n        ans = math.ceil(n/w)\n    else:\n        ans = math.ceil(n/h)\n    print(ans)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "932": {"id": 932, "code": "def main():\n    k = 101\n    seven = 7\n    already = set()\n    cnt = 0\n    if k%2==0:\n        print(-1)\n        return \n    while seven != 0:\n        if seven in already:\n            print(-1)\n            return \n        seven %= k\n        already.add(seven)\n        cnt += 1 \n        if seven != 0:\n            seven = seven * 10 + 7\n    print(cnt)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "19296": {"id": 19296, "code": "from collections import Counter\nimport sys\ndef input(): return \"12\".strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\nINF = float('inf')\nn = I()\nif n % 2 != 0:\n    print(0)\n    exit()\nans = 0\ni = 10\nwhile i <= n:\n    ans += n // i\n    i *= 5\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8345": {"id": 8345, "code": "def main():\n    n = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14757": {"id": 14757, "code": "def resolve():\n    N = 1;P = 1\n    A = [50]\n    odds = sum([1 for a in A if a % 2 == 1])\n    ans = 0\n    if odds == 0:\n        if P == 0:\n            ans = 2 ** N\n    else:\n        ans = 2 ** (N - 1)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "451": {"id": 451, "code": "def main():\n    S = \"a\"\n    N = len(S)\n    K = 25\n    from string import ascii_lowercase\n    dic = {a: i for i, a in enumerate(ascii_lowercase)}\n    rdic = {i: a for i, a in enumerate(ascii_lowercase)}\n    li = [(26 - dic[s]) % 26 for s in S]\n    ans = []\n    for i, cnt in enumerate(li):\n        if i == N - 1:\n            ans.append(rdic[(dic[S[i]] + K) % 26])\n            continue\n        if cnt <= K:\n            K -= cnt\n            ans.append(\"a\")\n        else:\n            ans.append(S[i])\n    print(\"\".join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "14242": {"id": 14242, "code": "def resolve():\n    N = 6\n    A_list = [1, 2, 3, 2, 2, 1]\n    if N >=2:\n        prev_num = A_list[0]\n        new_list = []\n        prev_direction = 0\n        cnt = 1\n        for item in A_list[1:]:\n            if item != prev_num:\n                if prev_direction == 1:\n                    if item - prev_num >= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                elif prev_direction == -1:\n                    if item - prev_num <= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                else:\n                    if item - prev_num > 0:\n                        prev_direction = 1\n                    elif item - prev_num < 0:\n                        prev_direction = -1\n            prev_num = item\n    else:\n        cnt = 1\n    print(cnt)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "858": {"id": 858, "code": "import collections\nimport sys\nimport math\nsys.setrecursionlimit(10 ** 7)\ndef input() : return \"2\".strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef LIST()  : return list(MAP())\ndef NIJIGEN(H): return [list(input()) for i in range(H)]\nK = 2\nif K%2==0 or K%5==0:\n  print(-1)\nans=7%K\nfor i in range(K):\n  if ans==0:\n    print(i+1)\n    exit()\n  ans=((ans*10)+7)%K", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13530": {"id": 13530, "code": "s = \"haiku,atcoder,tasks\"\ndef main():\n  print(s.replace(',',' '))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">"]}, "15982": {"id": 15982, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 30\n    ans = a - 2 * b\n    if ans >= 0:\n        print(ans)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "11183": {"id": 11183, "code": "def main():\n    s = \"atcoder\"\n    s1 = s[:int((len(s)-1)/2)]\n    s2 = s[int((len(s)+3)/2-1):]\n    rs = s[::-1]\n    rs1 = s1[::-1]\n    rs2 = s2[::-1]\n    if s1 == rs1 and s2 == rs2 and s == rs:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "6538": {"id": 6538, "code": "import bisect\nimport sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [58, 9, 79, 323, 84, 6]\n    C = [2, 50, 79, 288, 383, 2643]\n    cnt=0\n    for i in B:\n        a=bisect.bisect_left(A,i)\n        c=N-bisect.bisect_right(C,i)\n        cnt+=a*c\n    print(cnt)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12104": {"id": 12104, "code": "def main(M_1: int, D_1: int, M_2: int, D_2: int):\n    print(M_2 - M_1)\nif __name__ == \"__main__\":\n    M_1 = 11;D_1 = 30\n    M_2 = 12;D_2 = 1\n    main(M_1, D_1, M_2, D_2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "14809": {"id": 14809, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\nl = [50]\no = 0\ne = 0\nfor i in range(n):\n    if l[i] % 2 == 0:\n        e += 1\n    else:\n        o += 1\nif p == 0:\n    a = 0\n    for i in range(e+1):\n        a += comb(e, i)\n    b = 0\n    for i in range(0, o+1, 2):\n        b += comb(o, i)\n    print(a*b)\nelse:\n    a = 0\n    for i in range(e+1):\n        a += comb(e, i)\n    b = 0\n    for i in range(1, o+1, 2):\n        b += comb(o, i)\n    print(a*b)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">"]}, "19011": {"id": 19011, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 12\n  if N % 2:\n    print(0)\n    return\n  nz = 0\n  i = 1\n  while True:\n    if N//(5**i)//2 > 0:\n      nz += (N//(5**i)//2)\n      i += 1\n    else:\n      break\n  print(nz)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "375": {"id": 375, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\n    s = \"a\"\n    k = 25\n    r = \"\"\n    for se in s:\n        if se == 'a':\n            r += 'a'\n        else:\n            if 123 - ord(se) <= k:\n                r += 'a'\n                k -= (123 - ord(se))\n            else:\n                r += se\n    if k:\n        k = k % 26\n        lastc = chr(k + ord(r[-1]))\n        r = r[:-1] + lastc\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "19346": {"id": 19346, "code": "def gcd(a, b):\n  while b:\n    a, b = b, a%b\n  return a\ndef lcm(a, b):\n  return a*b // gcd(a, b)\nN = 10\nans = lcm(2, N)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15640": {"id": 15640, "code": "def main():\n    import sys\n    sys.setrecursionlimit(10000000)\n    from collections import Counter, deque\n    from itertools import combinations\n    from math import floor, ceil\n    x = 64146;y = 123;z = 456\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14553": {"id": 14553, "code": "n = 2;p = 0\na = [1, 3]\nn_odd=0\nn_even=0\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nfor i in a:\n    if i%2==0:\n        n_even+=1\n    else:\n        n_odd+=1\nans=0\nif p==0:    \n    for j in range(n_odd+1):\n        if j%2==1:\n            continue\n        else:\n            tmp=0\n            for l in range(n_even+1):\n                tmp+=cmb(n_even,l)\n            ans+=cmb(n_odd,j)*tmp\nelif p==1:\n    for k in range(n_odd+1):\n        if k%2==0:\n            continue\n        else:\n            tmp=0\n            for l in range(n_even+1):\n                tmp+=cmb(n_even,l)\n            ans+=cmb(n_odd,k)*tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "1414": {"id": 1414, "code": "def main():\n    N = 750\n    for i in range(1, 10):\n        if int(str(i) * 3) >= N:\n            print(str(i) * 3)\n            break\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "9767": {"id": 9767, "code": "def hoge(S):\n    cum = 0\n    mi = 0\n    for s in S:\n        cum += 1 if s == '(' else -1\n        mi = min(mi, cum)\n    return (-mi, cum - mi)\nN = 6\nS = \")))())\"\nl, r = hoge(S)\nprint('(' * l + S + ')' * r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12410": {"id": 12410, "code": "s = \"level\"\nn = len(s)\ndef check(r):\n    if r == r[::-1]:\n        return True\nprint(\"Yes\" if check(s) and check(s[:(n-1)//2])\n      and check(s[((n-1)//2) + 1:]) else \"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!"]}, "15578": {"id": 15578, "code": "def answer(x: int, y: int, z: int) -> int:\n    return (x - z) // (y + z)\ndef main():\n    x = 100000;y = 1;z = 1\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13350": {"id": 13350, "code": "def resolve():\n  s = \"haiku,atcoder,tasks\"\n  print(s.replace(',', ' '))\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "2227": {"id": 2227, "code": "def main():\n    n = 10;a = 3;b = 5\n    print(min(a, b), max(0, (a + b) - n))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "4802": {"id": 4802, "code": "import sys\ndef main():\n    s = \"smiles\"\n    N = len(s)\n    ans = s[0] + str(N - 2) + s[-1]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5418": {"id": 5418, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 100\n    print(N//2+1) if N % 2 else print(N//2)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10118": {"id": 10118, "code": "from collections import deque\ndef main():\n    N = 3\n    S = ['(', ')', ')']\n    Stmp = S.copy()\n    Stmp = deque(Stmp)\n    cnt = 0\n    for s in S:\n        cnt += (s=='(') - (s==')')\n        if cnt < 0:\n            Stmp.appendleft('(')\n            cnt += 1\n    for _ in range(cnt):\n        Stmp.append(')')\n    print(''.join(Stmp))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15158": {"id": 15158, "code": "def answer(x: int, y: int, z: int) -> int:\n    return len(range(y + z * 2, x + 1, y + z))\ndef main():\n    x = 64146;y = 123;z = 456\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5204": {"id": 5204, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    S = \"smiles\"\n    print(S[0]+str(len(S)-2)+S[-1])\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15218": {"id": 15218, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    x = 12;y = 3;z = 1\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5213": {"id": 5213, "code": "def actual(s):\n    head = s[0]\n    tail = s[-1]\n    length = len(s[1:-1])\n    return '{}{}{}'.format(head, length, tail)  \ns = \"smiles\"\nprint(actual(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17003": {"id": 17003, "code": "def solve():\n    a = \"D\";b = \"D\"\n    c = b == \"H\"\n    return c if a == \"H\" else not c\nif __name__ == '__main__':\n    res = solve()\n    print(\"H\") if res else print(\"D\")", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "11026": {"id": 11026, "code": "S = \"akasaka\"\nN = len(S)\ndef check(S1):\n    if S1 != S1[::-1]:\n        return False\n    else:\n        return True\nPOS = int((N-1)/2)\nS1 = S[0:POS]\nPOS = int((N+3)/2)\nS2 = S[POS-1:N]\nif check(S) == False or check(S1) == False or check(S2) == False:\n    print('No')\nelse:\n    print('Yes')", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3642": {"id": 3642, "code": "def solve():\n    N = 20;M = 15\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "1202": {"id": 1202, "code": "import sys\nimport math\nimport itertools\ndef input():\n    return \"111\".rstrip()\ndef main():\n    N = 111\n    d,m = divmod(N-1,111)\n    print((d+1)*111)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "3968": {"id": 3968, "code": "def main(x, y, z):\n    print((x - z) // (y + z))\nif __name__ == \"__main__\":\n    x = 64145;y = 123;z = 456\n    main(x, y, z)", "coverage": [">", ">", ">", ">", ">"]}, "8155": {"id": 8155, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    if N==K:\n        print(1)\n    else:\n        N=N-K\n        print(1+-(-N//(K-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12551": {"id": 12551, "code": "def abc120_b():\n    a = 1;b = 1;k = 1\n    n = min(a, b)\n    divisors = []\n    for i in range(1, n + 1):\n        if (a % i == 0) and (b % i == 0):\n            divisors.append(i)\n    print(divisors[-1 * k])\nif __name__ == '__main__':\n    abc120_b()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "408": {"id": 408, "code": "def main():\n    S = ['a']\n    K = 25\n    L = len(S)\n    for i in range(L):\n        if S[i] == 'a':\n            continue\n        if ord('z') - ord(S[i]) + 1 <= K:\n            K -= ord('z') - ord(S[i]) + 1\n            S[i] = 'a'\n    if K > 0:\n        S[-1] = chr(ord(S[-1]) + K % 26)\n    print(''.join(S))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "3301": {"id": 3301, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 12;b = 4\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14901": {"id": 14901, "code": "N = 1;P = 1\nA = [50]\ndef comb(x, y):\n  m = c = 1\n  for i in range(y):\n    m *= x-i\n    c *= y-i\n  return m//c\neven = odd = 0\nfor a in A:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n  ans += comb(odd, i)\nprint(pow(2, even) * ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "3744": {"id": 3744, "code": "X = 12;Y = 3;Z = 1\nans = 0\ns = 0\ndef judge(x, y, z):\n    width = y + 2 * z\n    if width > x:\n        return 0\n    s = 1  \n    rest = x - width\n    width = y + z\n    while width <= rest:\n        s += 1\n        width = y + z\n        rest -= width\n    return s\nprint(judge(X, Y, Z))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14910": {"id": 14910, "code": "from math import factorial\ndef com(n, r):\n    return fac_n // factorial(r) // factorial(n - r)\nN = 1;P = 1\nA = [50]\nodd, even = 0, 0\nfor i in range(N):\n    if A[i] % 2 == 1:\n        odd += 1\n    else:\n        even += 1\nfac_n = factorial(odd)\nres = 0\nfor r in range(P, odd+1, 2):\n    res += com(odd, r)\nans = res * (2**even)\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "16866": {"id": 16866, "code": "def main():\n    a = \"H\";b = \"H\"\n    if a == 'H' and b == 'H':\n        print('H')\n    elif a == 'D' and b == 'H':\n        print('D')\n    elif a == 'H' and b == 'D':\n        print('D')\n    elif a == 'D' and b == 'D':\n        print('H')\nmain()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "10568": {"id": 10568, "code": "A = 100;B = 50;K = 4\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\nlstA = make_divisors(A)\nlstB = make_divisors(B)\nfin = []\nfor i in lstA:\n    if i in lstB:\n        fin.append(i)\nfin.sort(reverse = True)\nprint(fin[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8203": {"id": 8203, "code": "import math\ndef main():\n    n = 4;k = 3\n    a = [2, 3, 1, 4]\n    print(math.ceil((n-k)/(k-1)+1))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "7364": {"id": 7364, "code": "h = 211;n = 5\nA = [31, 41, 59, 26, 53]\ndef hp(h: int, n: int, A: list) -> str:\n    damage = 0                   \n    for i in range(0, n):        \n        damage += int(A[i])      \n        i += 1                   \n    if (h - damage) <= 0:     \n        return 'Yes'\n    else:              \n        return 'No'\nprint(hp(h, n, A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1684": {"id": 1684, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 100;A = 100;B = 100\n    max_XY = min(A, B)\n    min_XY = max(A + B - N, 0)\n    print(\"{} {}\".format(max_XY, min_XY))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "76": {"id": 76, "code": "def main():\n    s = ['a']\n    k = 25\n    for i in range(len(s)-1):\n        if s[i] == 'a':\n            continue\n        else:\n            mod = 26-(ord(s[i])-97)%26\n            if k >= mod:\n                k -= mod\n                s[i] = 'a'\n            if k == 0:\n                break\n    if k > 0:\n        mod = ((ord(s[-1])-97)+k)%26\n        s[-1] = chr(mod+97)\n    print(''.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10454": {"id": 10454, "code": "def gcd(a,b):\n    if b==0: return a\n    return gcd(b,a%b)\na = 8;b = 12;k = 2\ng=gcd(a,b)\ncnt=0\nfor i in range(g,0,-1):\n    if g%i==0: cnt+=1\n    if cnt==k:\n        print(i)\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13609": {"id": 13609, "code": "def main():\n    print(\"abcde,fghihgf,edcba\".replace(',', ' '))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "10360": {"id": 10360, "code": "def main():\n    A = 8;B = 12;K = 2\n    v = []\n    for i in range(1, min([A, B])+1):\n        if A % i == 0 and B % i == 0:\n            v.append(i)\n    print(v[-K])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12527": {"id": 12527, "code": "def com_div(x, y):\n    dv = []\n    m = min(x, y)\n    for i in range(1, m + 1):\n        if x % i == 0 and y % i == 0:\n            dv.append(i)\n    dv.sort()\n    return dv[::-1]\na = 100;b = 50;k = 4\nprint(com_div(a, b)[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9974": {"id": 9974, "code": "def main():\n    N = 3\n    S = \"())\"\n    h_left, h_min, h_cur = 0, 0, 0\n    for c in S:\n        if c == '(':\n            h_cur += 1\n        else:\n            h_cur -= 1\n        h_min = min(h_min, h_cur)\n    h_right = h_cur\n    if h_min < 0:\n        h_left -= h_min\n        h_right -= h_min\n    print('(' * h_left + S + ')' * h_right)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15506": {"id": 15506, "code": "def solve():\n    X = 12;Y = 3;Z = 1\n    print((X - Z) // (Y + Z))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "12997": {"id": 12997, "code": "def main():\n  n = 6\n  ans = 0\n  count = 0\n  lis = []\n  if n == 7 or n == 5 or n == 3:\n    print(\"YES\")\n  else:\n    print(\"NO\")\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13428": {"id": 13428, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    print(s.replace(',', ' '))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "4566": {"id": 4566, "code": "def main():\n    s = \"xyz\"\n    res = s[0]\n    res += str(len(s) - 2)\n    res += s[-1]\n    print(res)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "6915": {"id": 6915, "code": "def solve():\n    n = 10;m = 3\n    s = [4, 5, 6]\n    if sum(s) >= n:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nsolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13956": {"id": 13956, "code": "def solve(): \n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    i = 0\n    result = 0\n    while i < N:\n        while i+1 < N and A[i] == A[i+1]:\n            i += 1\n        if i+1 < N and A[i] < A[i+1]:\n            while i+1 < N and A[i] <= A[i+1]:\n                i += 1\n        elif i+1 < N and A[i] > A[i+1]:\n            while i+1 < N and A[i] >= A[i+1]:\n                i += 1\n        result += 1\n        i += 1\n    print(result)    \nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6027": {"id": 6027, "code": "def duplex_printing(all_pages):\n    all_papers = (all_pages + 1) // 2\n    return all_papers\nN = 100\nresult = duplex_printing(N)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18923": {"id": 18923, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 12\n    if N % 2 == 1:\n        print(0)\n        exit()\n    count = []\n    i = 0\n    while True:\n        q = N // (10 * 5 ** i)\n        if q == 0:\n            break\n        else:\n            count.append((q, i + 1))\n            i += 1\n    ans = 0\n    prev_c = 0\n    for c, n_zero in count[::-1]:\n        ans += n_zero * (c - prev_c)\n        prev_c = c\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10860": {"id": 10860, "code": "def main():\n    s = \"atcoder\"\n    n = len(s)\n    for i in range(n//2):\n        if s[i] != s[n-1-i]:\n            print(\"No\")\n            return\n    s1 = s[:(n-1)//2]\n    s2 = s[(n+3)//2-1:]\n    n1 = len(s1)\n    for i in range(n//4):\n        if s1[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n        if s2[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n    print(\"Yes\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "3789": {"id": 3789, "code": "def main():\n    x = 64145;y = 123;z = 456\n    x = x - z\n    ans = x // (y+z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "6822": {"id": 6822, "code": "def main():\n    H = 20;N = 3\n    A = [4, 5, 6]\n    s = sum(A)\n    if H > s:\n        print('No')\n    else:\n        print('Yes')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15031": {"id": 15031, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\nn = 2;p = 0\na = [1, 3]\neven = []\nodd = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        even.append(a[i])\n    else:\n        odd.append(a[i])\nm = len(even)\ncount1 = 0\nfor i in range(m+1):\n    count1 += comb(m, i)\nk = len(odd)\ncount2 = 0\nif p == 0:\n    for i in range(0, k+1, 2):\n        count2 += comb(k, i)\nelse:\n    for i in range(1, k+1, 2):\n        count2 += comb(k, i)\nprint(count1*count2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "2612": {"id": 2612, "code": "def solve():\n    S = \"1794\"\n    if S.find('1') == -1 or S.find('9') == -1 or S.find('7') == -1 or S.find('4') == -1:\n        print('NO')\n    else:\n        print('YES')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "19195": {"id": 19195, "code": "import sys\ndef solve(N):\n    if N % 2:\n        return 0\n    ans, d = 0, 10\n    while True:\n        q = N // d\n        ans += q\n        if q == 0:\n            return ans\n        d *= 5\ndef main(args):\n    N = 5\n    ans = solve(N)\n    print(ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8178": {"id": 8178, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    N = 8;K = 3\n    a = [7, 3, 1, 8, 4, 6, 2, 5]\n    m=N-1\n    l=K-1\n    print((m+l-1)//l)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18501": {"id": 18501, "code": "def main():\n    H = 14\n    W = 12\n    N = 112\n    c_row = 0\n    c_col = 0\n    ans = 0\n    while True:\n        if N <= 0:\n            print(ans)\n            break\n        else:\n            if W - c_col <= H - c_row:\n                N -=  H - c_row\n                c_col += 1\n                ans += 1\n            else:\n                N -=  W - c_col\n                c_row += 1\n                ans += 1\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "12771": {"id": 12771, "code": "import sys\ndef input():\n    return \"6\".rstrip()\ndef main():\n    X = 6\n    if X==1:\n        print(\"NO\")\n        exit()\n    if 105 % X ==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "14819": {"id": 14819, "code": "from functools import lru_cache\n@lru_cache(maxsize=None)\ndef kaijou(n):\n    if n <= 1:\n        return 1\n    return kaijou(n-1)*n\nn = 3;p = 0\neven = 0\nodd = 0\nans = 0\nfor i in map(int,\"1 1 1\".split()):\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nif p == 0:\n    eveng = 0\n    for j in range(0,odd+1,2):\n        if j > odd:\n            break\n        eveng += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*eveng)\nelse:\n    oddg = 0\n    for j in range(1,odd+1,2):\n        if j > odd:\n            break\n        oddg += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*oddg)\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "19445": {"id": 19445, "code": "def main():\n    a = 2;b = 10\n    ta, tb = a, b\n    if b == 0: print(0)\n    while a%b != 0:\n       a, b = b, a%b\n    print(int((ta*tb)/b))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "2450": {"id": 2450, "code": "import math\nn = 0;m = 3\nt = 0\ntt = 0\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nif n > 1:\n    t = com(n,2)\nif m > 1:\n    tt = com(m,2)\nprint(t+tt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "2763": {"id": 2763, "code": "def main():\n    N = {'9', '4', '0', '8'}\n    if set(['1', '9', '7', '4']) == N:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "13097": {"id": 13097, "code": "def main():\n    x = 6\n    if x == 3 or x == 5 or x == 7:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "10629": {"id": 10629, "code": "a = 100;b = 50;k = 4\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nimport math\nprint(sorted(make_divisors(math.gcd(a,b)),reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17296": {"id": 17296, "code": "def resolve():\n    a = \"D\";b = \"H\"\n    if a==b:\n        print('H')\n    else:\n        print('D')\nresolve()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "4134": {"id": 4134, "code": "def solve(h1, m1, h2, m2, k):\n    return (h2-h1)*60 + (m2-m1) - k\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nprint(solve(h1, m1, h2, m2, k))", "coverage": [">", ">", ">", ">"]}, "11111": {"id": 11111, "code": "s = \"atcoder\"\nmozisuu=len(s)\ndef hanteiki(s):\n    hantei=True\n    mozisuu=len(s)\n    for i in range(len(s)):\n        if s[i]!=s[mozisuu-i-1]:\n            hantei=False\n    return hantei\nif hanteiki(s):\n    if hanteiki(s[0:(mozisuu-1)//2]):\n        if hanteiki(s[(mozisuu+3)//2-1:]):\n            print(\"Yes\")\n            exit()\nprint(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14507": {"id": 14507, "code": "N = 3;P = 0\nA = [1, 1, 1]\ndef comb(x, y):\n  m = c = 1\n  for i in range(y):\n    m *= x-i\n    c *= y-i\n  return m//c\neven = odd = 0\nfor a in A:\n  if a%2 == 0:\n    even += 1\n  else:\n    odd += 1\nif P == 0:\n  ans = 0\n  for i in range(0, odd+1, 2):\n    ans += comb(odd, i)\n  print(pow(2, even) * ans)\nelse:\n  ans = 0\n  for i in range(1, odd+1, 2):\n    ans += comb(odd, i)\n  print(pow(2, even) * ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "5200": {"id": 5200, "code": "url = \"https://atcoder.jp//contests/abc069/tasks/abc069_b\"\ndef main():\n    st = \"internationalization\"\n    ans = st[0] + str(len(st[1:-1])) + st[-1]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14565": {"id": 14565, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\nn = [0] * 2\nfor a in A:\n    n[a % 2] += 1\nif P == 1:\n    ans = 0\n    for i in range(1, n[1]+1, 2):\n        ans += comb(n[1], i)\n    ans *= 2 ** n[0]\nelse:\n    ans = 0\n    for i in range(0, n[1]+1, 2):\n        if i == 0:\n            ans += 1\n        else:\n            ans += comb(n[1], i)\n    ans *= 2 ** n[0]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "15800": {"id": 15800, "code": "def resolve():\n    X = 13;Y = 3;Z = 1\n    print((X-Z)//(Y+Z))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "3440": {"id": 3440, "code": "def ABC_143_A():\n    A = 20;B = 15\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "14990": {"id": 14990, "code": "import sys\ndef MI(): return map(int,\"3 0\".rstrip().split())\ndef LI(): return list(map(int,\"1 1 1\".rstrip().split()))  \nN,P = MI()\nA = LI()\nx = sum(A[i] % 2 == 0 for i in range(N))  \ny = N-x  \nif y == 0:\n    print(0 if P == 1 else 2**x)\nelse:\n    print(2**(x+y-1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "15915": {"id": 15915, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    A = 20;B = 15\n    print(max(A - 2 * B, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6831": {"id": 6831, "code": "def solve():\n    h = 210;n = 5\n    a = map(int, \"31 41 59 26 53\".split())\n    for i in a:\n        h -= i\n    print('YNeos'[h>0::2])\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3894": {"id": 3894, "code": "def main():\n    chair_width = 64146;person_width = 123;space = 456\n    print((chair_width - space) // (person_width + space))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "2829": {"id": 2829, "code": "import sys\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return map(int, stdin.readline().split())\ndef nl(): return list(map(int, stdin.readline().split()))\ndef main():\n    S = \"1111111111\"\n    ans = 1000\n    for i in range(len(S) - 2):\n        s = int(S[i:i + 3])\n        ans = min(ans, (abs(s - 753)))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16365": {"id": 16365, "code": "def pow(x, n , mod):\n    res = 1\n    while n > 0:\n        if  bin(n & 1) == bin(1) :\n            res = res * x % mod\n        x = x*x % mod\n        n = n >>1\n    return res   \ndef combination(n,a):\n    x = 1\n    for i in range(a):\n        x = x * (n-i) % mod\n    y = 1\n    for i in range(a):\n        y = y * (a-i) % mod\n    y = pow(y, mod-2, mod)\n    return (x*y % mod)\nn = 2\na = [100, 0]\nmod =1\nm = max(a)\na = sorted(a)\nans = 0\nfor i in a:\n    if abs(m/2-i) < abs(m/2-ans):\n        ans = i\nprint(m, ans)", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "17712": {"id": 17712, "code": "YYMM = False\nMMYY = False\nf = \"1905\"\nh1 = f[0] + f[1]\nh2 = f[2] + f[3]\nif 1 <= int(h2) <= 12:\n  YYMM = True\nif 1 <= int(h1) <= 12:\n  MMYY = True\ndef ret(c1,c2):\n  if c1 and c2:\n    return \"AMBIGUOUS\"\n  elif c1:\n    return \"YYMM\"\n  elif c2:\n    return \"MMYY\"\n  else:\n    return \"NA\"\nprint(ret(YYMM,MMYY))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">"]}, "3338": {"id": 3338, "code": "import sys\ndef ISI(): return map(int, \"20 15\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", "!"]}, "10542": {"id": 10542, "code": "def main():\n  a = 1;b = 1;k = 1\n  loop=0\n  if a<b:\n    loop=a\n  else:\n    loop=b\n  now=0\n  for i in reversed(range(1,loop+1)):\n    if a%i==0 and b%i==0:\n      now+=1\n      if now==k:\n        print(i)\n        break\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12267": {"id": 12267, "code": "S = \"atcoder\"\nN=len(S)\ndef isKaibun(S):\n  if S==S[::-1]:\n    return True\n  return False\nif isKaibun(S) and isKaibun(S[:(N-1)//2]) and isKaibun(S[(N+3)//2-1:]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "9183": {"id": 9183, "code": "def main():\n    print(\"2017/01/31\".replace('2017', '2018', 1))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "5567": {"id": 5567, "code": "def main():\n    page = 2\n    if (page % 2) == 1:\n        print(page // 2 + 1)\n    else:\n        print(page // 2)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "1953": {"id": 1953, "code": "import sys\ndef input(): return \"100 100 100\".strip()\ndef resolve():\n    n = 100;a = 100;b = 100\n    ans1=min(a,b)\n    if a+b>n:\n        ans2=a+b-n\n    else:\n        ans2=0\n    print(ans1,ans2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "11091": {"id": 11091, "code": "s = \"atcoder\"\ndef is_palinedrome(st):\n    for i in range(len(st)//2):\n        if st[i] != st[-(i+1)]:\n            return False\n    return True\ns_pali = is_palinedrome(s)\nsub_pali_left = is_palinedrome(s[:len(s)//2])\nsub_pali_right = is_palinedrome(s[len(s)//2+1:])\nif s_pali and sub_pali_left and sub_pali_right:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "2362": {"id": 2362, "code": "import math\ndef combi(n,r):\n  ans = math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n  return ans\nN = 13;M = 3\nans = 0\nif N > 1:\n  ans += combi(N,2)\nif M > 1:\n  ans += combi(M,2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5230": {"id": 5230, "code": "import sys\ndef input(): return \"internationalization\".strip()\ndef main():\n    s = \"internationalization\"\n    l = str(len(s) - 2)\n    print(s[0] + l + s[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13784": {"id": 13784, "code": "def study_time(h1, m1, h2, m2, k):\n    result = (h2 - h1) * 60 + m2 - m1 - k\n    return result\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif __name__ == '__main__':\n    print(study_time(h1, m1, h2, m2, k))", "coverage": [">", ">", ">", ">", ">", ">"]}, "15801": {"id": 15801, "code": "def resolve():\n    X = 12;Y = 3;Z = 1\n    print((X-Z)//(Y+Z))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "764": {"id": 764, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    K = 101\n    t = 7\n    t %= K\n    for i in range(K+1):\n        if t == 0:\n            print(i+1)\n            break\n        t = (t * 10 + 7) % K\n    else:\n        print(-1)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8591": {"id": 8591, "code": "N = 5\nx = [3, 2, 2, 4, 1]\ny = [1, 2, 2, 2, 1]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2512": {"id": 2512, "code": "import sys\ndef input(): return \"1 2 9 1\".rstrip()\ndef main():\n    n = {1, 2, 9}\n    if 1 in n and 9 in n and 7 in n and 4 in n:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14648": {"id": 14648, "code": "def m():\n    N = 45;P = 1\n    A = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\n    Even = [a for a in A if a % 2 == 0]\n    Odd = [a for a in A if a % 2 == 1]\n    if P == 1 and len(Odd) == 0:\n        return 0\n    if len(Odd) == 0:\n        return pow(2, len(Even))\n    else:\n        return pow(2, N-1)\nprint(m())", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "15479": {"id": 15479, "code": "def solve(x, y, z):\n    tmp = x - z\n    ans = tmp // (y + z)\n    return ans\nif __name__ == \"__main__\":\n    x = 12;y = 3;z = 1\n    print(solve(x,y,z))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13259": {"id": 13259, "code": "def actual(s):\n    return s.replace(',', ' ')\ns = \"happy,newyear,enjoy\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "6918": {"id": 6918, "code": "def solve():\n    n = 211;m = 5\n    s = [31, 41, 59, 26, 53]\n    if sum(s) >= n:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nsolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "13309": {"id": 13309, "code": "def main():\n    print(\"abcde,fghihgf,edcba\".replace(\",\", \" \"))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "14857": {"id": 14857, "code": "from operator import mul\nfrom functools import reduce\ndef combinations_count(n, r):\n    r = min(r, n - r)\n    numer = reduce(mul, range(n, n - r, -1), 1)\n    denom = reduce(mul, range(1, r + 1), 1)\n    return numer // denom\nfrom collections import Counter\nn = 2;p = 0\na = [1, 3]\na = sorted(list(map(lambda x: x % 2, a)))\na = Counter(a)\nans = 0\nif p == 1:\n    for i in range(1, a[1] + 1, 2):\n        for j in range(a[0] + 1):\n            ans += combinations_count(a[1], i) * combinations_count(a[0], j)\nif p == 0:\n    for i in range(0, a[1] + 1, 2):\n        for j in range(a[0] + 1):\n            ans += combinations_count(a[1], i) * combinations_count(a[0], j)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "7872": {"id": 7872, "code": "import math\ndef main():\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    index_one = A.index(1)\n    min_cnt = N\n    for left_index in range(index_one - (K - 1), index_one + 1):\n        right_index = left_index + (K - 1)\n        if left_index < 0 or right_index > N - 1:\n            continue\n        cnt = 1 + math.ceil(left_index / (K - 1)) + math.ceil((N - 1 - right_index) / (K - 1))\n        min_cnt = min([min_cnt, cnt])\n    print(min_cnt)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6666": {"id": 6666, "code": "def resolve():\n    H = 211;N = 5\n    A = [31, 41, 59, 26, 53]\n    print(\"Yes\" if sum(A) >= H else \"No\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "15034": {"id": 15034, "code": "from collections import Counter\nfrom functools import reduce\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(lambda x, y: x * y, range(n, n - r, -1), 1)\n    denom = reduce(lambda x, y: x * y, range(1, r + 1), 1)\n    return numer // denom\nN = 2;P = 0\nA = Counter(map(lambda x: int(x) % 2, \"1 3\".split()))\ne = A.get(0, 0)\no = A.get(1, 0)\nans = 2 ** e\nif P:\n    if o == 0:\n        print(0)\n    else:\n        ans *= sum(ncr(o, i) for i in range(1, o + 1) if i % 2)\n        print(ans)\nelse:\n    ans *= sum(ncr(o, i) for i in range(o + 1) if i % 2 == 0)\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "17441": {"id": 17441, "code": "def check_month(month):\n    return 1 <= int(month) <= 12\nS = \"1700\"\nls = S[:2]\nrs = S[2:]\nif check_month(ls) and check_month(rs):\n    print('AMBIGUOUS')\nelif check_month(ls) and not check_month(rs):\n    print('MMYY')\nelif not check_month(ls) and check_month(rs):\n    print('YYMM')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]}, "17862": {"id": 17862, "code": "def main():\n    inp = \"1905\"\n    ch1=int(inp[0:2])\n    ch2=int(inp[2:])\n    if inp[0]==0:\n        ch1=int(inp[1])\n    if inp[2]==0:\n        ch2=int(inp[-1])\n    if ch1<=12 and ch1>=1:\n        if ch2<=12 and ch2>=1 and ch2<=12 and ch2>=1:\n            print(\"AMBIGUOUS\")\n            return\n        elif ch2<=12 or ch2>=1:\n            print(\"MMYY\")\n            return\n    if ch1>12 or ch1<1:\n        if ch2<=12 and ch2>=1:\n            print(\"YYMM\")\n            return\n        else:\n            print(\"NA\")\n            return\nmain()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">"]}, "12571": {"id": 12571, "code": "def Div(N):\n    L = []\n    R = []\n    I = 1\n    while I*I<=N:\n        if N%I==0:\n            L.append(I)\n            if I!=N//I: R.append(N//I)\n        I += 1\n    return R+L[::-1]\nA = 100;B = 50;K = 4\nCount = 0\nDivid = Div(min(A,B))\nfor T in Divid:\n    if A%T==0 and B%T==0:\n        Count += 1\n        if Count==K:\n            print(T)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8751": {"id": 8751, "code": "def main():\n    n = 1\n    a1 = [2]\n    a2 = [3]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3748": {"id": 3748, "code": "def resolve():\n    x = 12;y = 3;z = 1\n    x -= z\n    count = 0\n    while True:\n        x = x-(y+z)\n        if x >= 0:\n            count += 1\n        else:\n            break\n    print(count)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6510": {"id": 6510, "code": "def main(n,a,b,c):\n  import bisect\n  ans=0\n  for i in range(n):\n    na=bisect.bisect_left(a,b[i])\n    nc=n-bisect.bisect_right(c,b[i])\n    ans+=na*nc\n  print(ans)\nif __name__=='__main__':\n  n = 2\n  a = [1, 5]\n  b = [2, 4]\n  c = [3, 6]\n  main(n,a,b,c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16532": {"id": 16532, "code": "def main():\n    N = 2\n    A = [100, 0]\n    A.sort()\n    aj = A.pop()\n    A.sort(key=lambda x: abs(aj / 2 - x))\n    print(aj, A[0]) \nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11011": {"id": 11011, "code": "def main():\n    S = \"akasaka\"\n    N = len(S)\n    if S[:(N - 1) // 2] == S[(N + 3) // 2 - 1:]:\n        print('Yes')\n    else:\n        print('No')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "15804": {"id": 15804, "code": "def resolve():\n    X = 64145;Y = 123;Z = 456\n    print((X-Z)//(Y+Z))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "13186": {"id": 13186, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"abcde,fghihgf,edcba\"\n    S = S.replace(\",\", \" \")\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10933": {"id": 10933, "code": "def is_p(s):\n    return s == s[::-1]\ns = \"level\"\nn = len(s)\nl = (n - 1)//2\nr = l + 1\nprint('Yes' if is_p(s) and is_p(s[:l]) and is_p(s[r:]) else 'No')", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19036": {"id": 19036, "code": "import sys\ndef input(): return \"12\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nN = 12\nans = 0\nif N%2==1:\n    print(0)\n    exit(0)\nfor i in range(1, 40):\n    cnt = N//(5**i)\n    ans += cnt//2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15030": {"id": 15030, "code": "def fact(n):\n  a = 1\n  for i in range(2, n+1):\n    a *= i\n  return a\ndef comb(n, r):\n  return fact(n) // fact(r) // fact(n-r)\nn = 3;p = 0\na = [1, 1, 1]\nzero = 0\none = 0\nfor i in a:\n  if i % 2 == 0:\n    zero += 1\n  else:\n    one += 1\nif p == 0:\n  ans = 2 ** zero\n  c = 0\n  for i in range(0, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)\nelse:\n  ans = 2 ** zero\n  c = 0\n  for i in range(1, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "10757": {"id": 10757, "code": "import sys\nS = \"akasaka\"\nN = len(S)\ndef is_palindrome(s):\n    return s == s[::-1]\nif not is_palindrome(S):\n    print('No')\n    sys.exit()\nif not is_palindrome(S[0:int((N - 1) / 2)]):\n    print('No')\n    sys.exit()\nif not is_palindrome(S[int((N + 3) / 2 - 1):]):\n    print('No')\n    sys.exit()\nprint('Yes')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">"]}, "10558": {"id": 10558, "code": "import math\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\na = 8;b = 12;c = 2\nn=math.gcd(a,b)\nans=make_divisors(n)\nprint(ans[-c])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16272": {"id": 16272, "code": "import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_left, bisect_right\ndef read():\n    N = 2\n    A = [100, 0]\n    return N, A\ndef solve(N, A):\n    A.sort()\n    n = N-1\n    p = bisect_left(A, A[n] / 2)\n    low = max(0, p - 1)\n    high = min(N - 1, p)\n    if n == high:\n        return \"%d %d\" % (A[n], A[low])\n    elif A[low] > A[n] - A[high]:\n        return \"%d %d\" % (A[n], A[low])\n    else:\n        return \"%d %d\" % (A[n], A[high])\nif __name__ == '__main__':\n    inputs = read()\n    outputs = solve(*inputs)\n    if outputs is not None:\n        print(\"%s\" % str(outputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "10345": {"id": 10345, "code": "def solve():\n    A = 1;B = 1;K = 1\n    common_div = []\n    for i in range(1, min(A, B)+1):\n        if(A % i == 0 and B % i == 0):\n            common_div.append(i)\n    common_div.sort(reverse=True)\n    print(common_div[K-1])\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14719": {"id": 14719, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nn = 3;p = 0\na = [1, 1, 1]\neven=0\nodd=0\nfor i in a:\n    if i%2 == 0:\n        even+=1\n    else:\n        odd+=1\nans = 0\nif p == 0:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    ans += 1<<even\n    i = 2\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)\nelse:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    i = 1\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "17382": {"id": 17382, "code": "def m(s):\n  return True if 1 <= int(s) <= 12 else False\ns = \"1905\"\nf = int(s[:2])\nl = int(s[2:])\nif m(f) and m(l):\n  print(\"AMBIGUOUS\")\nelif m(f):\n  print(\"MMYY\")\nelif m(l):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "9213": {"id": 9213, "code": "from collections import defaultdict,deque\nimport math\ndef main():\n    n = \"2017/01/31\"\n    print(n[0:3]+\"8\"+n[4:])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8077": {"id": 8077, "code": "import math\ndef main():\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    if N == 1:\n        print(0)\n    elif N <= K:\n        print(1)\n    else:\n        print(1+math.ceil((N-K)/(K-1)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "2297": {"id": 2297, "code": "def solve(n, a, b):\n    return \" \".join(map(str, [min(a,b), max(0,a+b-n)]))\nn = 10;a = 7;b = 5\nprint(solve(n, a, b))", "coverage": [">", ">", ">", ">"]}, "4257": {"id": 4257, "code": "def submit():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    time1 = h1 * 60 + m1\n    time2 = h2 * 60 + m2\n    if time1 > time2:\n        time2 += 24 * 60\n    print(time2 - time1 - k)\nsubmit()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "12175": {"id": 12175, "code": "def main():\n  M1 = 11;D1 = 16\n  M2 = 11;D2 = 17\n  print(0) if M1 == M2 else print(1)\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "14980": {"id": 14980, "code": "def count(l):\n    res = {0:0, 1:0}\n    for d in l:\n        if d in res:\n            res[d] += 1\n        else:\n            res[d] = 1\n    return res\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    if n < r: return 0\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nn = 2;p = 0\ndata = [1, 3]\ndata = [i%2 for i in data]\noz = count(data)\nans = 0\nm = 2**oz[0]\nif p == 0:\n    choice = 2\n    ans += m\nelif p == 1:\n    choice = 1\nones = oz[1]\nwhile choice <= ones:\n    ans += m*cmb(ones, choice)\n    choice += 2\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "15207": {"id": 15207, "code": "X = 13;Y = 3;Z = 1\ndef is_ok(key):\n    if key * Y + (key + 1) * Z <= X:\n        return True\n    else:\n        return False\ndef binary_search():\n    ok = 0\n    ng = 3000001\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\nprint(binary_search())", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13307": {"id": 13307, "code": "def main():\n    print(\"happy,newyear,enjoy\".replace(\",\", \" \"))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "1443": {"id": 1443, "code": "import sys\ndef input():\n    return \"112\".rstrip()\ndef main():\n    N = 112\n    d =(N-1)//111\n    print((d+1)*111)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "11626": {"id": 11626, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"SAT\"\n    days = ['','SAT','FRI','THU','WED','TUE','MON','SUN']\n    print(days.index(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5201": {"id": 5201, "code": "url = \"https://atcoder.jp//contests/abc069/tasks/abc069_b\"\ndef main():\n    st = \"smiles\"\n    ans = st[0] + str(len(st[1:-1])) + st[-1]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "320": {"id": 320, "code": "def main():\n    S = ['x', 'y', 'z']\n    k = 4\n    ans = []\n    for s in S:\n        if s != 'a' and ord(s) >= 123 - k:\n            ans.append('a')\n            k -= 123 - ord(s)\n        else:\n            ans.append(s)\n    if k > 0:\n        ans[-1] = chr((ord(ans[-1]) + k - 97) % 26 + 97)\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "12292": {"id": 12292, "code": "def main():\n    s = \"akasaka\"\n    n = len(s)\n    s1 = s[:int((n-1)/2)]\n    s2 = s[int((n+3)/2)-1:]\n    for tmp in [s, s1, s2]:\n        tmp_rev = tmp[::-1]\n        if tmp != tmp_rev:\n            print(\"No\")\n            break\n    else:\n        print(\"Yes\")\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "5483": {"id": 5483, "code": "import math\ndef main():\n  n = 2\n  if n % 2 == 0:\n    print(int(n/2))\n  else:\n    print(math.floor((n/2) + 1))\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "18155": {"id": 18155, "code": "import sys\ndef input(): return \"1905\".strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\nINF = float('inf')\ndef is_yymm(f, l):\n    if 1 <= l <= 12:\n        return True\n    return False\ndef is_mmyy(f, l):\n    if 1 <= f <= 12:\n        return True\n    return False\ns = S()\nf = int(s[:2])\nl = int(s[2:])\nif is_yymm(f, l) and is_mmyy(f, l):\n    print('AMBIGUOUS')\nelif is_yymm(f, l) and not(is_mmyy(f, l)):\n    print('YYMM')\nelif not(is_yymm(f, l)) and is_mmyy(f, l):\n    print('MMYY')\nelse:\n    print('NA')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]}, "17204": {"id": 17204, "code": "a = \"D\";b = \"D\"\ndef ch(x):\n  return 1 if x==\"D\" else -1\na=ch(a)\nb=ch(b)\nprint(\"H\" if a*b==1 else \"D\")", "coverage": [">", ">", ">", ">", ">", ">"]}, "4804": {"id": 4804, "code": "import sys\ndef input(): return \"internationalization\".strip()\ndef resolve():\n    s = \"internationalization\"\n    print(s[0]+str(len(s)-2)+s[-1])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "17295": {"id": 17295, "code": "def resolve():\n    a = \"H\";b = \"H\"\n    if a==b:\n        print('H')\n    else:\n        print('D')\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "11979": {"id": 11979, "code": "def main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    if m1 != m2:\n        print('1')\n    else:\n        print('0')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3895": {"id": 3895, "code": "def main():\n    chair_width = 64145;person_width = 123;space = 456\n    print((chair_width - space) // (person_width + space))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "14933": {"id": 14933, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\ndef main():\n    N = 1;P = 1\n    A = [50]\n    num1 = 0\n    num0 = 0\n    for i in range(N):\n        tmp = A[i]%2\n        if tmp == 0:\n            num0 += 1\n        else:\n            num1 += 1\n    ans2 = 0\n    for i in range(num0+1):\n        ans2 += comb(num0,i)\n    if P == 1:\n        syo = num1//2\n        amari = num1%2\n        tmp = syo + amari\n        i = 1\n        ans = 0\n        for j in range(tmp):\n            ans += comb(num1,i)\n            i += 2\n        ans = ans*ans2\n        return ans\n    else:\n        syo = num1//2\n        tmp = syo+1\n        i = 0\n        ans = 0\n        for j in range(tmp):\n            if i == 0:\n                ans += 1\n                i += 2\n            else:\n                ans += comb(num1,i)\n                i += 2\n        ans = ans*ans2\n        return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "3032": {"id": 3032, "code": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\nS = \"1111111111\"\nsa = float('inf')\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3]) - 753) < sa:\n        sa = abs(int(S[i:i+3]) - 753)\nprint(sa)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10385": {"id": 10385, "code": "def divisor(n): \n    i = 1\n    table = []\n    while i * i <= n:\n        if n % i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\nA = 100;B = 50;K = 4\na_divisor = divisor(A)\nb_divisor = divisor(B)\nprint(sorted(list(set(a_divisor) & set(b_divisor)), reverse=True)[K-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7566": {"id": 7566, "code": "import math\ndef main():\n  H = 20;N = 3\n  A = [4, 5, 6]\n  if sum(A) >= H:\n    print('Yes')\n  else:\n    print('No')\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10726": {"id": 10726, "code": "S = \"atcoder\"\nN = len(S)\ndef is_palindrome(s):\n    return s == ''.join(list(reversed(s)))\nans = 'Yes' if is_palindrome(S) and is_palindrome(S[:(N-1)//2]) and is_palindrome(S[(N+1)//2:]) else 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "4098": {"id": 4098, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    if M2 >= M1:\n        diff = (H2-H1)*60 + M2-M1\n    else:\n        diff = (H2-H1)*60 + 60-M1+M2 -60\n    if diff <= 0:\n        print(0)\n    else:\n        print(diff - K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "15637": {"id": 15637, "code": "def main():\n    import sys\n    sys.setrecursionlimit(10000000)\n    from collections import Counter, deque\n    from itertools import combinations\n    from math import floor, ceil\n    x = 13;y = 3;z = 1\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2159": {"id": 2159, "code": "def main():\n    n = 10;a = 7;b = 5\n    ans_max = min(a, b)\n    if n >= a + b:\n        ans_min = 0\n    else:\n        ans_min = (a + b) - n\n    print(str(ans_max) + \" \" + str(ans_min))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "940": {"id": 940, "code": "k = 2\ndef test_case(k):\n    ans,cnt = 7,1\n    if k % 2 == 0 or k % 5 == 0:\n        return -1\n    if k == 1 or k == 7:\n        return 1\n    while (1):\n        ans = (ans * 10 + 7) % k\n        cnt += 1\n        if ans == 0:\n            return cnt\nprint(test_case(k))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "6444": {"id": 6444, "code": "import bisect\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    B1 = [0]*N\n    for i in range(N):\n        b = B[i]\n        B1[i] = N - bisect.bisect_right(C, b)\n        if i != 0:\n            B1[i] += B1[i - 1]\n    A1 = [0]*N\n    for i in range(N):\n        a = A[i]\n        index = bisect.bisect_right(B, a)\n        if index == 0:\n            A1[i] = B1[-1]\n        elif index < N:\n            A1[i] = B1[-1] - B1[index - 1]\n    ans = sum(A1)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "18815": {"id": 18815, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H = 14\n    W = 12\n    N = 112\n    ans = N // max(H, W)\n    if N % max(H, W) > 0:\n        ans += 1\n    return ans\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "18989": {"id": 18989, "code": "def resolve():\n    N = 5\n    if N % 2 == 1:\n        return print(0)\n    ans = 0\n    tmp = N // 2\n    while tmp:\n        tmp //= 5\n        ans += tmp\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "10671": {"id": 10671, "code": "A = 8;B = 12;K = 2\ndef ans120(A:int, B:int, K:int):\n    if A>=B:\n        n=A\n    else:\n        n=B\n    ans_list=[]\n    for i in range(1,n+1):\n        if A%i==0 and B%i==0:\n            ans_list.append(i)\n    return ans_list[-K]\nprint(ans120(A,B,K))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "1792": {"id": 1792, "code": "def resolve():\n    n = 100;a = 100;b = 100\n    if n >= a + b:\n        mn = 0\n    else:\n        mn = a + b - n\n    print(min(a, b), mn)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3067": {"id": 3067, "code": "def diff_number(runrun_num: int, master_num: int = 753) -> int:\n    return abs(master_num - runrun_num)\ndef main():\n    s = \"1234567876\"\n    min_num = int(s[0:3])\n    for i in range(3, len(s) + 1):\n        runrun_num = int(s[(i - 3):i])\n        if diff_number(runrun_num) < diff_number(min_num):\n            min_num = runrun_num\n    print(diff_number(min_num))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8360": {"id": 8360, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 5\n  U = [3, 2, 2, 4, 1]\n  L = [1, 2, 2, 2, 1]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7870": {"id": 7870, "code": "import math\ndef main():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    index_one = A.index(1)\n    min_cnt = N\n    for left_index in range(index_one - (K - 1), index_one + 1):\n        right_index = left_index + (K - 1)\n        if left_index < 0 or right_index > N - 1:\n            continue\n        cnt = 1 + math.ceil(left_index / (K - 1)) + math.ceil((N - 1 - right_index) / (K - 1))\n        min_cnt = min([min_cnt, cnt])\n    print(min_cnt)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14978": {"id": 14978, "code": "import collections, math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\nfor i in range(N):\n    A[i] = A[i] % 2\nc = collections.Counter(A)\nzero = c[0]\none = c[1]\nans = 0\nif P == 0:\n    for i in range(0, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nelse:\n    for i in range(1, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]}, "1727": {"id": 1727, "code": "def main():\n    n = 10;a = 3;b = 5\n    max_num = min(a, b)\n    min_num = max(0, a + b - n)\n    print(max_num, min_num)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9956": {"id": 9956, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 8\n    T = \"))))((((\"\n    S = []\n    for s in T:\n        if s == '(':\n            S.append(1)\n        else:\n            S.append(-1)\n    S = list(accumulate(S))\n    minS = min(S)\n    if minS < 0:\n        for i in range(N):\n            S[i] -= minS\n    print('('*max(0,-minS) + T + ')'*S[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3459": {"id": 3459, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"20 30\".strip()\ndef resolve():\n    a = 20;b = 30\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "4514": {"id": 4514, "code": "def main():\n    s = \"smiles\"\n    print(f'{s[0]}{len(s) - 2}{s[-1]}')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "11352": {"id": 11352, "code": "def solve():\n    s = \"SAT\"\n    if s == 'SUN':\n        print(7)\n    elif s == 'MON':\n        print(6)\n    elif s == 'TUE':\n        print(5)\n    elif s == 'WED':\n        print(4)\n    elif s == 'THU':\n        print(3)\n    elif s == 'FRI':\n        print(2)\n    elif s == 'SAT':\n        print(1)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", ">", ">", ">"]}, "5186": {"id": 5186, "code": "def actual(s):\n    head = s[0]\n    tail = s[-1]\n    length = len(s[1:-1])\n    return f'{head}{length}{tail}'\ns = \"smiles\"\nprint(actual(s))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12103": {"id": 12103, "code": "def main(M_1: int, D_1: int, M_2: int, D_2: int):\n    print(M_2 - M_1)\nif __name__ == \"__main__\":\n    M_1 = 11;D_1 = 16\n    M_2 = 11;D_2 = 17\n    main(M_1, D_1, M_2, D_2)", "coverage": [">", ">", ">", ">", ">", ">"]}, "2510": {"id": 2510, "code": "import sys\ndef input(): return \"1 7 9 4\".rstrip()\ndef main():\n    n = {1, 4, 9, 7}\n    if 1 in n and 9 in n and 7 in n and 4 in n:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19362": {"id": 19362, "code": "import math\ndef main():\n a = 10\n print(a * 2 // math.gcd(a,2))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "18446": {"id": 18446, "code": "def resolve():\n    h = 3\n    w = 7\n    n = 10\n    print(-(-n//max(h,w)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13056": {"id": 13056, "code": "def main():\n    n = 5\n    if n == 7 or n == 5 or n==3 :\n        print(\"YES\")\n    else: print(\"NO\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", ">", ">"]}, "6989": {"id": 6989, "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\ndef battle(a,n):\n  ans = 0\n  for i in range(n):\n    ans += a[i]\n  return ans\nif H <= battle(A,N):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9174": {"id": 9174, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"2017/01/07\".strip()\ndef resolve():\n    s = \"2017/01/07\"\n    print('2018'+s[4:])\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10694": {"id": 10694, "code": "s = \"akasaka\"\nn = len(s)\ndef palindrome(s):\n    ret = True\n    for i in range(len(s)//2):\n        if s[i] != s[-i-1]:\n            ret = False\n            break\n    return ret\ncheck_1 = palindrome(s)\ncheck_2 = palindrome(s[:(n)//2])\ncheck_3 = palindrome(s[(n+2)//2:])\nif check_1 and check_2 and check_3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "16600": {"id": 16600, "code": "def main():\n    a = \"D\";b = \"H\"\n    if a == 'H':\n        if b == 'H':\n            print('H')\n        else:\n            print('D')\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]}, "14876": {"id": 14876, "code": "n = 2;p = 0\nlis = [1, 3]\ndef nCk( n, k):\n  ans = 1\n  for i in range(k):\n    ans *= (n-i)\n  for i in range(k):\n    ans /= (k-i)\n  return ans\ne = 0\no = 0\nfor i in lis:\n  if i % 2 == 0:\n    e += 1\n  else:\n    o += 1\nif p == 0:\n  ans = 1\n  for i in range( o//2):\n    ans += nCk( o, (i+1)*2)\n  print( int( ans * 2**e))\nelse:\n  ans = 0\n  for i in range( o//2):\n    ans += nCk( o, i*2+1)\n  print( int( ans * 2**e))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}, "17061": {"id": 17061, "code": "def another(s):\n  if s == 'D':\n    return 'H'\n  else:\n    return 'D'\na = \"H\";b = \"H\"\nif a == 'H':\n  print(b)\nelse:\n  print(another(b))", "coverage": [">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]}, "10716": {"id": 10716, "code": "S = \"level\"\nN = len(S)\nS1 = S[:(N - 1) // 2]\nS2 = S[(N + 3) // 2 - 1:]\ndef check(s):\n    i = 0\n    j = len(s) - 1\n    while j > i:\n        if s[j] != s[i]:\n            return False\n        j -= 1\n        i += 1\n    return True\nif check(S) and check(S1) and check(S2):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12918": {"id": 12918, "code": "X = 5\ndef age(X):\n if X==3 or X==5 or X==7:\n   return 'YES'\n else:\n   return 'NO'\nprint(age(X))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13505": {"id": 13505, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    s = s.replace(\",\", \" \")\n    print(s)\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "10413": {"id": 10413, "code": "a = 8;b = 12;k = 2\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_yakusu = make_divisors(a)\nb_yakusu = make_divisors(b)\nab_yakusu = sorted(set(a_yakusu) & set(b_yakusu), reverse=True)\nprint(ab_yakusu[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2615": {"id": 2615, "code": "def solve():\n    S = \"4908\"\n    if S.find('1') == -1 or S.find('9') == -1 or S.find('7') == -1 or S.find('4') == -1:\n        print('NO')\n    else:\n        print('YES')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "11063": {"id": 11063, "code": "def check(S, N):\n  for i in range((N-1)//2):\n    if S[i] != S[-(1+i)]:\n      print(\"No\")\n      exit()\ndef ot_check(S, N):\n  for i in range(N//2):\n    if S[i] != S[-(1+i)]:\n      print(\"No\")\n      exit()\nS = \"akasaka\"\nN = len(S)\nSS = S[0:(N-1)//2]\nNN = len(SS)\nSSS = S[((N+3)//2)-1:]\nNNN = len(SSS)\ncheck(S, N)\nif len(SS)%2 == 0:\n  ot_check(SS, NN)\nelse:\n  check(SS, NN)\nif len(SSS)%2 == 0:\n  ot_check(SSS, NNN)\nelse:\n  check(SSS, NNN)\nprint(\"Yes\")", "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]}, "14717": {"id": 14717, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nn = 2;p = 0\na = [1, 3]\neven=0\nodd=0\nfor i in a:\n    if i%2 == 0:\n        even+=1\n    else:\n        odd+=1\nans = 0\nif p == 0:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    ans += 1<<even\n    i = 2\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)\nelse:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    i = 1\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]}, "13304": {"id": 13304, "code": "import sys\ns = \"happy,newyear,enjoy\"\ndef main():\n    t = s.replace(',', ' ')\n    print(t)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5641": {"id": 5641, "code": "def main():\n    N = 5\n    print(N // 2) if N % 2 == 0 else print(N // 2 + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "6025": {"id": 6025, "code": "def duplex_printing(all_pages):\n    all_papers = (all_pages + 1) // 2\n    return all_papers\nN = 5\nresult = duplex_printing(N)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">"]}, "18665": {"id": 18665, "code": "import math\nfrom collections import deque\ndef main():\n    h = 3\n    w = 7\n    n = 10\n    times = n//max([h,w])+(0 if n%max([h,w])==0 else 1)\n    print(times)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15": {"id": 15, "code": "def main():\n    S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\n    K = 100\n    k = K\n    for i,c in enumerate(S):\n        distance = (ord('z') + 1 - ord(c))%26\n        if distance <= k:\n            k -= distance\n            S[i] = 'a'\n    S[-1] = chr((ord(S[-1]) - ord('a') + k) % 26 + ord('a'))\n    print(''.join(S))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15042": {"id": 15042, "code": "N = 3;P = 0\nA = [1, 1, 1]\nNO = 0\nNE = 0\nfor a in A:\n    if a % 2 == 0:\n        NE += 1\n    else:\n        NO += 1\ndef comb(n, k):\n    w = min(n - k, k)\n    if n <= 1 or w == 0:\n        return 1\n    a = n\n    for i in range(n - 1, n - w, -1):\n        a *= i\n    b = 1\n    for i in range(2, w + 1):\n        b *= i\n    return a // b\ne = 2 ** NE\no = 0\nfor i in range(P, NO + 1, 2):\n    o += comb(NO, i)\nif P == 0:\n    res = e * o if o > 0 else e\nelse:\n    res = o * e if e > 0 else o\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12222": {"id": 12222, "code": "s = \"akasaka\"\ndef check():\n  if s != s[::-1]:\n    return(\"No\")\n  n = len(s)\n  s1 = s[:int((n-1)/2)]\n  if s1 != s1[::-1]:\n    return(\"No\")\n  s2 = s[int((n+3)/2-1):]\n  if s2 != s2[::-1]:\n    return(\"No\")\n  return(\"Yes\")\nprint(check())", "coverage": [">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "19283": {"id": 19283, "code": "def wtf(x):\n    twos = 0\n    fives = 0\n    for j in range(1, 60):\n        bs = 2 ** j\n        twos = twos + x // bs\n        bs = 2 * 5 ** j\n        fives = fives + x // bs\n    return min(twos, fives)\nx = 5\nprint(wtf(x) if x % 2 == 0 else 0)", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "1267": {"id": 1267, "code": "import sys\ndef I(): return int(\"111\".rstrip())\nN = I()\nA = [111*i for i in range(1,10)]\nfor i in range(9):\n    if N <= A[i]:\n        print(A[i])\n        break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "52": {"id": 52, "code": "import sys\ninput = sys.stdin.readline\ndef read():\n    s = \"xyz\"\n    K = 4\n    return s, K\ndef solve(s, K):\n    ans = []\n    for a in s:\n        c = (ord(\"z\") - ord(a) + 1) % 26\n        if c <= K:\n            K -= c\n            ans.append(\"a\")\n        else:\n            ans.append(a)\n    if K > 0:\n        c = (ord(ans[-1]) - ord(\"a\") + K) % 26\n        ans[-1] = chr(c + ord(\"a\"))\n    return \"\".join(ans)\nif __name__ == '__main__':\n    inputs = read()\n    outputs = solve(*inputs)\n    if outputs is not None:\n        print(\"%s\" % str(outputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "10331": {"id": 10331, "code": "A = 1;B = 1;K = 1\ndef divisor(n):\n    div_list = []\n    for i in range(1, int(1+ n**0.5)):\n        if n%i == 0 and i**2 == n:\n            div_list.append(i)\n        elif n%i == 0:\n            div_list.append(i)\n            div_list.append(int(n/i))\n    return div_list\nlnA = divisor(A)\nlnB = divisor(B)\nln = []\nfor i in lnA:\n    if i in lnB:\n        ln.append(i)\nline = sorted(ln, reverse = True)\nprint(line[K - 1])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12570": {"id": 12570, "code": "def Div(N):\n    L = []\n    R = []\n    I = 1\n    while I*I<=N:\n        if N%I==0:\n            L.append(I)\n            if I!=N//I: R.append(N//I)\n        I += 1\n    return R+L[::-1]\nA = 8;B = 12;K = 2\nCount = 0\nDivid = Div(min(A,B))\nfor T in Divid:\n    if A%T==0 and B%T==0:\n        Count += 1\n        if Count==K:\n            print(T)\n            break", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12878": {"id": 12878, "code": "import sys\ncand = [7, 5, 3]\nx = 5\ndef main():\n    return 'YES' if x in cand else 'NO'\nif __name__ == '__main__':\n    ans = main()\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10630": {"id": 10630, "code": "a = 1;b = 1;k = 1\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\nimport math\nprint(sorted(make_divisors(math.gcd(a,b)),reverse=True)[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13172": {"id": 13172, "code": "s = \"happy,newyear,enjoy\"\ndef Main(s):\n    s = s.replace(',', ' ')\n    return s\nprint(Main(s))", "coverage": [">", ">", ">", ">", ">"]}, "241": {"id": 241, "code": "import sys\nfrom string import ascii_lowercase as AL\ninput = sys.stdin.readline\ndef main():\n    S = \"codefestival\"\n    K = 100\n    N = len(S)\n    T = [s for s in S]\n    for i in range(N):\n        if T[i] == \"a\":\n            continue\n        idx = AL.index(T[i])\n        if 26 - idx <= K:\n            K -= (26 - idx)\n            T[i] = \"a\"\n    _, r = divmod(K, 26)\n    T[-1] = AL[AL.index(T[-1]) + r]\n    ans = \"\".join(T)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6862": {"id": 6862, "code": "def common_raccoon_vs_monster():\n    H = 20;N = 3\n    A = [4, 5, 6]\n    sum_A = 0 \n    for i in range(len(A)):\n        sum_A += A[i]\n    if H > sum_A:\n        return 'No'\n    else:\n        return 'Yes'\nresult = common_raccoon_vs_monster()\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8154": {"id": 8154, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef resolve():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    if N==K:\n        print(1)\n    else:\n        N=N-K\n        print(1+-(-N//(K-1)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "1262": {"id": 1262, "code": "import sys\ndef input(): return \"112\".strip()\ndef resolve():\n    n = 112\n    while True:\n        if str(n)[0] == str(n)[1] == str(n)[2]:\n            print(n)\n            break\n        n+=1\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8594": {"id": 8594, "code": "N = 1\nx = [2]\ny = [3]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "15224": {"id": 15224, "code": "import math\ndef main():\n  x = 100000;y = 1;z = 1\n  x -= z\n  print(x//(y+z))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19111": {"id": 19111, "code": "def resolve():\n    N = 12\n    if N%2 == 1:\n        print(0)\n    else:\n        ans = 0\n        for i in range(0, 50):\n            ans += N//(10*(5**i))\n        print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13900": {"id": 13900, "code": "def main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    end = len(A)\n    judge = 0\n    ans = 0\n    i = 0\n    if end == 1:\n        return 1\n    while True:\n        if A[i] < A[i+1]:\n            ans += 1\n            while True:\n                i += 1\n                if i == end-1:\n                    return ans\n                elif A[i] <= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] > A[i+1]:\n            ans += 1\n            while True:\n                i = i+1\n                if i == end-1:\n                    return ans\n                elif A[i] >= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] == A[i+1]:\n            i += 1\n            if i == end-1:\n                ans += 1\n                return ans\n            else:\n                continue\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "19363": {"id": 19363, "code": "import math\ndef main():\n a = 999999999\n print(a * 2 // math.gcd(a,2))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "1264": {"id": 1264, "code": "import math\ndef main():\n  n = 111\n  a=int(n/100)\n  if a*100+a*10+a>=n:\n    print(a*100+a*10+a)\n  else:\n    print((a+1)*100+(a+1)*10+a+1)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "679": {"id": 679, "code": "from sys import stdin\ninput = stdin.readline\nimport math\ndef solve():\n    k = 101\n    if k % 2 == 0 or k % 5 == 0:\n        print(-1)\n        return\n    cnt = 1\n    cur = 7\n    while True:\n        r = cur % k\n        if r == 0:\n            print(cnt)\n            break\n        cur = r * 10 + 7\n        cnt += 1\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4226": {"id": 4226, "code": "import sys\ndef input(): return \"10 0 15 0 30\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nH1, M1, H2, M2, K = mapint()\nif M2>=M1:\n    minutes = (H2-H1)*60\n    minutes += M2-M1\nelse:\n    minutes = (H2-H1-1)*60\n    minutes += M2-M1+60\nprint(max(0, minutes-K))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "18904": {"id": 18904, "code": "def main():\n    n = 5\n    if n%2 == 1:\n        print(0)\n        return\n    five_cnt = 0\n    for i in range(1,25+1):\n        base = 2*(5**i)\n        five_cnt += n//base\n    print(five_cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "14139": {"id": 14139, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    f, p = 0, 0\n    ans = 0\n    for a in A:\n        if f == 1:\n            if a > p:\n                f = 2\n            elif a < p:\n                f = 3\n        elif f == 2:\n            if a < p:\n                ans += 1\n                f = 1\n        elif f == 3:\n            if a > p:\n                ans += 1\n                f = 1\n        elif f == 0:\n            f = 1\n        p = a\n    else:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15121": {"id": 15121, "code": "import collections\ndef nCk(n, k):\n    k = min(k, n-k)\n    numer = 1\n    for i in range(n, n-k, -1):\n        numer *= i\n    denom = 1\n    for i in range(k, 1, -1):\n        denom *= i\n    return numer // denom\ndef main():\n    N = 1;P = 1\n    A = [50]\n    B = [x%2 for x in A]\n    Bcount = collections.Counter(B)\n    if Bcount[1] == 0 and P == 1:\n        print(0)\n        return\n    ans = 0\n    if P == 0:\n        tmp = pow(2, Bcount[0])\n        for i in range(0, Bcount[1]+1, 2):\n            ans += tmp * nCk(Bcount[1], i)\n        print(ans)\n        return\n    else:\n        tmp = pow(2, Bcount[0])\n        for i in range(1, Bcount[1]+1, 2):\n            ans += tmp * nCk(Bcount[1], i)\n        print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14147": {"id": 14147, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 0\n    i = 0\n    while i < n:\n        while i+1<n and a[i]==a[i+1]:\n            i += 1\n        if i+1<n and a[i] < a[i+1]:\n            while i+1<n and a[i]<=a[i+1]:\n                i += 1\n        elif i+1<n and a[i] > a[i+1]:\n            while i+1<n and a[i]>=a[i+1]:\n                i += 1\n        ans += 1\n        i += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14528": {"id": 14528, "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nnum_pack = 3;mod = 0\npack_ls = [1, 1, 1]\nnum_pack_0 = 0\nnum_pack_1 = 0\nfor i in range(num_pack):\n    if pack_ls[i] % 2 == 0:\n        num_pack_0 += 1\n    else:\n        num_pack_1 += 1\nif mod == 1:\n    pattern_0 = 2 ** num_pack_0\n    pattern_1 = 0\n    i = 1\n    while i <= num_pack_1:\n        pattern_1 += combinations_count(num_pack_1, i)\n        i += 2\n    ans = pattern_0 * pattern_1\nelse:\n    pattern_0 = 2 ** num_pack_0\n    pattern_1 = 0\n    i = 0\n    while i <= num_pack_1:\n        pattern_1 += combinations_count(num_pack_1, i)\n        i += 2\n    ans = pattern_0 * pattern_1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10460": {"id": 10460, "code": "def divisors(n):\n    i = 1\n    table = set()\n    while i * i <= n:\n        if not n % i:\n            table.add(i)\n            table.add(n//i)\n        i += 1\n    return table\nA = 1;B = 1;K = 1\nres = divisors(A) & divisors(B)\nres = list(res)\nres.sort()\nprint(res[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5613": {"id": 5613, "code": "def resolve():\n    n = 100\n    ans = n // 2 + n % 2\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "12777": {"id": 12777, "code": "def p_a():\n    n = 6\n    print(\"YES\" if n == 7 or n == 5 or n == 3 else \"NO\")\np_a()", "coverage": [">", ">", ">", ">"]}, "14750": {"id": 14750, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\ns = [1, 3]\nx,y,ans = 0,0,0\nfor i in s:\n    if i%2 == 0:\n        x += 1\n    else:\n        y += 1\nif p == 1:\n    k = 0\n    for i in range(1,y+1,2):\n        k += comb(y,i)\n    g = 0\n    for i in range(x+1):\n        g += comb(x,i)\n    print(k*g)\nelse:\n    g = 0\n    for i in range(x+1):\n        g += comb(x,i)\n    k = 0\n    for i in range(0,y+1,2):\n        k += comb(y,i)\n    print(k*g)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "3090": {"id": 3090, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = \"1111111111\"\n    ans = float('inf')\n    for i in range(len(s)-2):\n        if i == len(s)-3:\n            ans = min(ans, abs(int(s[i:]) - 753))\n        else:\n            ans = min(ans, abs(int(s[i:i+3]) - 753))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "3173": {"id": 3173, "code": "def resolve():\n    N = \"1111111111\"\n    minA = 10**5\n    for i in range(len(N) - 2):\n        minA = min(minA, abs(753 - int(N[i:i + 3])))\n    print(minA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14710": {"id": 14710, "code": "import functools\n@functools.lru_cache(maxsize=None)\ndef num_counts(size, P):\n    if size == 1:\n        return 1 + (A[size - 1] + 1) % 2 if P == 0 else A[size - 1] % 2\n    if A[size - 1] % 2 == 0:\n        return num_counts(size - 1, P) * 2\n    else:\n        return num_counts(size - 1, P) + num_counts(size - 1, (P + 1) % 2)\nif __name__ == \"__main__\":\n    N = 2;P = 0\n    A = [1, 3]\n    print(num_counts(len(A), P))", "coverage": [">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "19279": {"id": 19279, "code": "import sys\ndef input(): return \"12\".strip()\ndef resolve():\n    n = 12\n    if n%2==1:\n        print(0)\n    elif n<10:\n        print(0)\n    else:\n        ans=0\n        for i in range(1,1000000):\n            y=5**i\n            num=(n//y)//2\n            if num==0:\n                break\n            else:\n                ans+=num\n        print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "17197": {"id": 17197, "code": "A = \"D\";B = \"H\"\ndef Main(A, B):\n    return 'H' if A == B else 'D'\nprint(Main(A, B))", "coverage": [">", ">", ">", ">"]}, "3934": {"id": 3934, "code": "def resolve():\n    X = 13;Y = 3;Z = 1\n    ans = 0\n    while ans*Y+(ans+1)*Z <= X:\n        ans += 1\n    print(ans-1)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "16815": {"id": 16815, "code": "def main():\n  string = ['H', 'H']\n  if string[0]=='H':\n    print(string[1])\n  else:\n    if string[1]=='H':\n      print('D')\n    else:\n      print('H')\nmain()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "10035": {"id": 10035, "code": "def main():\n    n = 6\n    s = \")))())\"\n    left = 0\n    right = 0\n    for i in range(n):\n        if s[i] == '(':\n            right += 1\n        else:\n            if right == 0:\n                left += 1\n            else:\n                right -= 1\n    print('('*left+s+')'*right)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "6547": {"id": 6547, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a_s = sorted(a)\n    c_s = sorted(c)\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a_s, i)\n        e = n - bisect.bisect_right(c_s, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8245": {"id": 8245, "code": "import sys\ndef MI(): return map(int,\"4 3\".rstrip().split())\ndef LI(): return list(map(int,\"2 3 1 4\".rstrip().split()))  \nN,K = MI()\nA = LI()\nprint((N+K-3)//(K-1))", "coverage": [">", ">", ">", ">", ">", ">"]}, "12564": {"id": 12564, "code": "a = 8;b = 12;k = 2\ndef make_divisors(n): \n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_d = set(make_divisors(a))\nb_d = set(make_divisors(b))\nd = sorted(list(a_d & b_d), reverse=True)\nprint(d[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17757": {"id": 17757, "code": "s = \"1905\"\ndef month(n):\n    if 1 <= n <= 12:\n        return True\n    else:\n        return False\nif int(s[0:2]) == 0:\n    if month(int(s[2:4])) :\n        print(\"YYMM\")\n        exit()\n    else:\n        print(\"NA\")\n        exit()\nif int(s[2:4]) == 0:\n    if month(int(s[0:2])):\n        print(\"MMYY\")\n        exit()\n    else:\n        print(\"NA\")\n        exit()\nif month(int(s[0:2])):\n    if month(int(s[2:4])):\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if month(int(s[2:4])):\n            print(\"YYMM\")\n    else:\n        print(\"NA\")", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!"]}, "12526": {"id": 12526, "code": "def com_div(x, y):\n    dv = []\n    m = min(x, y)\n    for i in range(1, m + 1):\n        if x % i == 0 and y % i == 0:\n            dv.append(i)\n    dv.sort()\n    return dv[::-1]\na = 8;b = 12;k = 2\nprint(com_div(a, b)[k - 1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13215": {"id": 13215, "code": "def main():\n    stdIn = \"haiku,atcoder,tasks\"\n    stdOut = solve(stdIn)\n    print(stdOut)\ndef solve(stdIn):\n    return stdIn.replace(',',' ')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "18030": {"id": 18030, "code": "s = \"1905\"\nb = int(s[:2])\na = int(s[2:])\ndef yorm(i):\n    flag = 'none'\n    if 0<i<=12:\n        flag = 'MM'\n    elif i<100:\n        flag = 'YY'\n    return flag\nbf = yorm(b)\naf = yorm(a)\nans = bf+af\nif len(ans) != 4:\n    ans = 'NA'\nif ans == 'MMMM':\n    ans = 'AMBIGUOUS'\nif ans == 'YYYY':\n    ans = 'NA'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "15775": {"id": 15775, "code": "import sys\nimport math\nimport bisect\ndef solve(x, y, z):\n    max_val = 0\n    for i in range(10 ** 18):\n        if y * i + z * (i + 1) <= x:\n            max_val = i\n        else:\n            break\n    return max_val\ndef main():\n    x = 13;y = 3;z = 1\n    print(solve(x, y, z))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "9296": {"id": 9296, "code": "def main():\n    s = \"2017/01/07\"\n    ans = \"2018\" + s[4:]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "8737": {"id": 8737, "code": "def resolve():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7175": {"id": 7175, "code": "def atc_153b(a: str, b: str) -> str:\n    HN = a.split(\" \")\n    H = int(HN[0])\n    N = int(HN[1])\n    A = b.split(\" \")\n    A_int = [int(ai) for ai in A]\n    damage = sum(A_int)\n    if (H - damage) <= 0:\n        return \"Yes\"\n    else:\n        return \"No\"\na = \"210 5\"\nb = \"31 41 59 26 53\"\nprint(atc_153b(a, b))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "10611": {"id": 10611, "code": "a = 100;b = 50;k = 4\ndef divisor(n):\n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = set(table)\n    return table\nablist = sorted(list(divisor(a) & divisor(b)),reverse=True)\nprint(ablist[k-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11603": {"id": 11603, "code": "def main():\n s = \"SUN\"\n if s == 'SUN':\n     print(7)\n elif s == 'MON':\n     print(6)\n elif s == 'TUE':\n     print(5)\n elif s == 'WED':\n     print(4)\n elif s == 'THU':\n     print(3)\n elif s == 'FRI':\n     print(2)\n else:\n     print(1)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "75": {"id": 75, "code": "def main():\n    s = ['x', 'y', 'z']\n    k = 4\n    for i in range(len(s)-1):\n        if s[i] == 'a':\n            continue\n        else:\n            mod = 26-(ord(s[i])-97)%26\n            if k >= mod:\n                k -= mod\n                s[i] = 'a'\n            if k == 0:\n                break\n    if k > 0:\n        mod = ((ord(s[-1])-97)+k)%26\n        s[-1] = chr(mod+97)\n    print(''.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "18888": {"id": 18888, "code": "def solve(N):\n    if N%2==1:\n        return 0\n    N2=(N-N%10)//10\n    count_zero=N2\n    x=5\n    while N2>=x:\n        count_zero+=N2//x\n        x*=5\n    return count_zero\nN = 5\nprint(solve(N))", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "19029": {"id": 19029, "code": "def solve(N: int):\n    if N % 2 == 0:\n        N = N // 2\n        answer = 0\n        div = 5\n        while N >= div:\n            answer += N // div\n            div *= 5\n        return answer\n    else:\n        return 0\n    return answer\ndef main():\n    N = 12\n    answer = solve(N)\n    print(answer)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8491": {"id": 8491, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 1\n    a1 = chain(tuple([0]), tuple(map(int, \"2\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"3\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14668": {"id": 14668, "code": "from math import factorial\ndef cmb(a,b):\n    return factorial(a)//factorial(b)//factorial(a-b)\nN = 2;P = 0\nA = [1, 3]\nOdd = 0 \nEven = 0\nfor Ai in A:\n    if Ai % 2 == 0:\n        Even += 1\n    else:\n        Odd += 1\nans = 0\nif P == 0:\n    for i in range(Odd+1)[::2]:\n        ans += cmb(Odd,i)\nelse:\n    for i in range(Odd+1)[1::2]:\n        ans += cmb(Odd,i)\nans *= pow(2,Even)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "7340": {"id": 7340, "code": "def resolve():\n    H = 211;N = 5\n    A = [31, 41, 59, 26, 53]\n    print(\"Yes\" if sum(A) >= H else \"No\")\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "16582": {"id": 16582, "code": "import sys\ndef IS(): return \"D H\".rstrip()\ndef II(): return int(IS())\ndef MII(): return list(map(int, IS().split()))\ndef MIIZ(): return list(map(lambda x: x-1, MII()))\ndef main():\n    a,b = IS().split()\n    if a == 'H':\n        print(b)\n    elif a == 'D':\n        if b == 'H':\n            print('D')\n        elif b == 'D':\n            print('H')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "10987": {"id": 10987, "code": "S = \"atcoder\"\ndef kaibun(S):\n  for i in range(len(S) // 2):\n    if S[i] != S[len(S) - i - 1]:\n      return False\n  return True\nif kaibun(S) and kaibun(S[:(len(S) - 1)//2]) and kaibun(S[(len(S) + 3) // 2-1:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "17818": {"id": 17818, "code": "s = \"0112\"\ns_front=int(s[0]+s[1])\ns_end=int(s[2]+s[3])\ndef MM(x):\n    if 1<=x<=12:return True\n    else:return False\nif MM(s_front) and MM(s_end):print(\"AMBIGUOUS\")\nelif MM(s_front) and not MM(s_end):print(\"MMYY\")\nelif not MM(s_front) and MM(s_end):print(\"YYMM\")\nelse:print(\"NA\")", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", "!", "!"]}, "3069": {"id": 3069, "code": "def diff_number(runrun_num: int, master_num: int = 753) -> int:\n    return abs(master_num - runrun_num)\ndef main():\n    s = \"1111111111\"\n    min_num = int(s[0:3])\n    for i in range(3, len(s) + 1):\n        runrun_num = int(s[(i - 3):i])\n        if diff_number(runrun_num) < diff_number(min_num):\n            min_num = runrun_num\n    print(diff_number(min_num))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "19276": {"id": 19276, "code": "import collections as cl\nimport sys\ndef II():\n    return int(\"12\")\ndef main():\n    n = II()\n    if n % 2 == 1:\n        print(0)\n        return\n    n_int = n // 2\n    ans_int = 0\n    k = 5\n    while k <= n_int:\n        ans_int += n_int//k\n        k *= 5\n    print(ans_int)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10990": {"id": 10990, "code": "def palindrome(S):\n  for i in range(len(S)//2):\n    if S[i] != S[-(i+1)]:\n      return 0\n  return 1\nans = \"No\"\nS = \"atcoder\"\nS1 = S[:(len(S)-1)//2]\nS2 = S[(len(S)+1)//2:]\nif palindrome(S) == 1:\n  if palindrome(S1) == 1:\n    if palindrome(S2) == 1:\n      ans = \"Yes\"\nprint(ans)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14923": {"id": 14923, "code": "from math import factorial\ndef combinations_count(n, r):\n    return factorial(n) // (factorial(n - r) * factorial(r))\nN = 1;P = 1\nA = [50]\nmodA = [i % 2 for i in A]\nodd = modA.count(1)\neven = modA.count(0)\neven_count = 1\nfor i in range(1, even+1):\n    even_count += combinations_count(even, i)\nif P == 0:\n    odd_count = 0\n    for i in range(0,odd+1,2):\n        odd_count += combinations_count(odd, i)\n    print(even_count * odd_count)\nelse:\n    odd_count = 0\n    for i in range(1,odd+1,2):\n        odd_count += combinations_count(odd, i)\n    print(even_count * odd_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">"]}, "18942": {"id": 18942, "code": "def cin():\n    in_ = [12]\n    if len(in_) == 1:  return in_[0]\n    else:  return in_\ndef fact_prime(n, p):\n    ret = 0\n    temp = p\n    while(n >= p):\n        ret += n // p\n        p *= temp\n    return ret\nn = cin()\nif n % 2:\n    n = (n + 1) // 2\n    a2 = fact_prime(2 * n, 2)\n    a5 = fact_prime(2 * n, 5)\n    b2 = fact_prime(n, 2) + n\n    b5 = fact_prime(n, 5)\n    ans = min(a2 - b2, a5 - b5)\nelse:\n    n = n // 2\n    ans = fact_prime(n, 5)\nprint(ans)", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "14679": {"id": 14679, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 3;P = 0\n    A = [1, 1, 1]\n    odd = len([1 for a in A if a % 2])\n    even = len([1 for a in A if a % 2 == 0])\n    nCr_ = {}\n    def nCr(n, r):\n        r = min(n-r, r)\n        if r == 0:\n            return 1\n        if (n, r) in nCr_:\n            return nCr_[(n, r)]\n        ret1 = 1\n        ret2 = 1\n        for r in range(1, r+1):\n            ret1 *= n - r + 1\n            ret2 *= r\n        nCr_[(n, r)] = ret1 // ret2\n        return nCr_[(n, r)]\n    t = 0\n    for i in range(even + 1):\n        t += nCr(even, i)\n    ans = 0\n    for i in range(P, odd + 1, 2):\n        ans += t * nCr(odd, i)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "16760": {"id": 16760, "code": "def hd(a,b):\n    ans = \"\"\n    if a == \"H\":\n        ans = \"H\" if b == \"H\" else \"D\"\n    else:\n        ans = \"D\" if b == \"H\" else \"H\"\n    return ans\ndef main():\n    a = \"D\";b = \"D\"\n    print(hd(a , b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "9807": {"id": 9807, "code": "from collections import deque\ndef main():\n    n = 3\n    s = \"())\"\n    left = 0\n    stack = deque([])\n    for ss in s:\n        if ss == \"(\":\n            stack.append(\"(\")\n        elif not stack:\n            left += 1\n        else:\n            stack.pop()\n    print(left * \"(\" + s + len(stack) * \")\")\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "1929": {"id": 1929, "code": "def main():\n    N = 100;A = 100;B = 100\n    mx = min(A,B)\n    mi = max((A + B) - N,0)\n    print(mx,mi)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9667": {"id": 9667, "code": "def main():\n    n = 6\n    S = \")))())\"\n    a, b = 0, 0\n    aa = 0\n    m = 0\n    for s in S:\n        if aa > 0 and s == ')':\n            m += 1\n            aa -= 1\n        if s == '(':\n            a += 1\n            aa += 1\n        else:\n            b += 1\n    print(''.join(['(' * (b - m), S, ')' * (a - m)]))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "16919": {"id": 16919, "code": "def resolve():\n    a = \"D\";b = \"D\"\n    ans = str()\n    if a == \"H\":\n        if b == \"H\":\n            ans = \"H\"\n        elif b == \"D\":\n            ans = \"D\"\n    elif a == \"D\":\n        if b == \"H\":\n            ans = \"D\"\n        elif b == \"D\":\n            ans = \"H\"\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "931": {"id": 931, "code": "N = 2\ndef resolve():\n  a = 7\n  for i in range(1,N+1):\n    if a % N == 0:\n      return i\n    a = (a * 10 + 7) % N\n  return -1\nans = resolve()\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10929": {"id": 10929, "code": "s = \"akasaka\"\nn = len(s)\ns1 = s[:(n-1)//2]\ns2 = s[((n+3)//2)-1:]\ndef kaibun(S):\n  for i,j in zip(S,S[::-1]):\n    if i!=j:\n      return False\n  return True\nif kaibun(s) and kaibun(s1) and kaibun(s2):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "6571": {"id": 6571, "code": "def slove():\n    import sys\n    import bisect\n    input = sys.stdin.readline\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    b.sort()\n    c.sort()\n    t = 0\n    for v in b:\n        an = bisect.bisect_left(a, v)\n        cn = n - bisect.bisect_right(c, v)\n        t += (an * cn)\n    print(t)\nif __name__ == '__main__':\n    slove()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8320": {"id": 8320, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1682": {"id": 1682, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 10;A = 3;B = 5\n    max_XY = min(A, B)\n    min_XY = max(A + B - N, 0)\n    print(\"{} {}\".format(max_XY, min_XY))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3555": {"id": 3555, "code": "def main():\n    a = 20;b = 30\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "4894": {"id": 4894, "code": "def resolve():\n    n = \"internationalization\"\n    i = len(n) -2\n    print(n[0] + str(i) + n[-1])\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "11519": {"id": 11519, "code": "def resolve():\n    week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\n    s = \"SAT\"\n    print(7-week.index(s))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "15529": {"id": 15529, "code": "def main():\n    X = 100000;Y = 1;Z = 1\n    print(int((X - Z) / (Y + Z)))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "10486": {"id": 10486, "code": "A = 1;B = 1;K = 1\nresult_list = []\ndef divisor_list(n):\n    i = 1\n    array = []\n    while i * i <= n:\n        if n % i == 0:\n            array.append(i)\n            array.append(n//i)\n        i += 1\n    array = list(set(array))\n    return array\nfor i in divisor_list(A):\n    for j in divisor_list(B):\n        if i == j:\n            result_list.append(i)\nprint(sorted(result_list)[-K])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10117": {"id": 10117, "code": "N = 8\nA = \"))))((((\"\ndef check_l(A):\n    for i in range(1,len(A)+1):\n        if not i==len(A):\n            if A[-i]==\"(\":\n                pass\n            else:\n                return i\n                break\n        elif i==len(A):\n            if A[-i]==\"(\":\n                return 0\n            else:\n                return i\n                break\ndef check_t(A):\n    for i in range(0,len(A)):\n        if not i==len(A)-1:\n            if A[i]==\")\":\n                pass\n            else:\n                return i\n                break\n        elif i==len(A)-1:\n            if A[i]==\")\":\n                a=len(A)\n                return a\n            else:\n                return i\ndef all(A,C):\n    if check_l(A)==0:\n        for i in range(len(A)):\n            C=C+\")\"\n        print(C)\n        exit()\n    elif not check_l(A)==0:\n        for i in range(check_l(A)-1):\n            A=A+\")\"\n            C=C+\")\"\n    if check_t==len(A):\n        for i in range(len(A)):\n            C=\"(\"+C\n        print(C)\n        exit()\n    else:\n        for i in range(check_t(A)):\n            A=\"(\"+A\n            C=\"(\"+C\n    for i in range(10**9):\n        if \"()\" in A:\n            A=A.replace(\"()\",\"\")\n        else:\n            break\n    return A,C\nX=A\nfor i in range(N):\n    if A==\"\":\n        print(X)\n        break\n    else:\n        A,X=all(A,X)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "6643": {"id": 6643, "code": "import bisect\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    ans = 0\n    for b in B:\n        indexa = bisect.bisect_left(A, b)\n        indexc = bisect.bisect_right(C, b)\n        ans += indexa * (N - indexc)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3697": {"id": 3697, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 20;B = 15\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14934": {"id": 14934, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\ndef main():\n    N = 3;P = 0\n    A = [1, 1, 1]\n    num1 = 0\n    num0 = 0\n    for i in range(N):\n        tmp = A[i]%2\n        if tmp == 0:\n            num0 += 1\n        else:\n            num1 += 1\n    ans2 = 0\n    for i in range(num0+1):\n        ans2 += comb(num0,i)\n    if P == 1:\n        syo = num1//2\n        amari = num1%2\n        tmp = syo + amari\n        i = 1\n        ans = 0\n        for j in range(tmp):\n            ans += comb(num1,i)\n            i += 2\n        ans = ans*ans2\n        return ans\n    else:\n        syo = num1//2\n        tmp = syo+1\n        i = 0\n        ans = 0\n        for j in range(tmp):\n            if i == 0:\n                ans += 1\n                i += 2\n            else:\n                ans += comb(num1,i)\n                i += 2\n        ans = ans*ans2\n        return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "8699": {"id": 8699, "code": "def resolve():\n  n = 4\n  a1 = [1, 1, 1, 1]\n  a2 = [1, 1, 1, 1]\n  s1 = [0] * (n+1)\n  s2 = [0] * (n+1)\n  for i in range(n):\n    s1[i] = a1[i]\n    if i > 0:\n      s1[i] += s1[i-1]\n  for i in range(n):\n    s2[n-i-1] = a2[n-i-1]\n    if i > 0:\n      s2[n-i-1] += s2[n-i]\n  ans = 0\n  for i in range(n):\n    ans = max(ans, s1[i] + s2[i])\n  print(ans)\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14578": {"id": 14578, "code": "from collections import Counter\nfrom functools import reduce\nfrom operator import mul\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(mul, range(n, n - r, -1), 1)\n    denom = reduce(mul, range(1, r + 1), 1)\n    return numer // denom\nN = 1;P = 1\nA = Counter(list(map(lambda x: int(x) % 2, \"50\".split())))\nans = 2 ** A[0]\nif P:\n    print(ans * sum(ncr(A[1], i) for i in range(1, A[1] + 1, 2)))\nelse:\n    print(ans * sum(ncr(A[1], i) for i in range(0, A[1] + 1, 2)))", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "14303": {"id": 14303, "code": "def main():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    res = 1\n    inc = 0\n    dec = 0\n    for i in range(n - 1):\n        if A[i] < A[i+1]:\n            inc += 1\n        elif A[i] > A[i+1]:\n            dec += 1\n        if inc and dec:\n            res += 1\n            inc, dec = 0, 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "933": {"id": 933, "code": "def main():\n    k = 2\n    seven = 7\n    already = set()\n    cnt = 0\n    if k%2==0:\n        print(-1)\n        return \n    while seven != 0:\n        if seven in already:\n            print(-1)\n            return \n        seven %= k\n        already.add(seven)\n        cnt += 1 \n        if seven != 0:\n            seven = seven * 10 + 7\n    print(cnt)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "987": {"id": 987, "code": "import sys\nimport math\nimport bisect\ndef solve(n):\n    while True:\n        if len(set(list(str(n)))) == 1:\n            return n\n        n = n + 1\ndef main():\n    n = 112\n    print(solve(n))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4415": {"id": 4415, "code": "def main():\n    S = \"smiles\"\n    print(S[0]+str(len(S)-2)+S[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "17624": {"id": 17624, "code": "def main():\n    S = \"1700\"\n    front = int(S[0:2])\n    latter = int(S[2:4])\n    if front < 13 and latter < 13 and (front > 0 and latter > 0):\n        print('AMBIGUOUS')\n    elif front < 13 and latter < 100 and front > 0:\n        print('MMYY')\n    elif front < 100 and latter < 13 and latter > 0:\n        print('YYMM')\n    else:\n        print('NA')\nmain()", "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]}, "14670": {"id": 14670, "code": "from math import factorial\ndef cmb(a,b):\n    return factorial(a)//factorial(b)//factorial(a-b)\nN = 3;P = 0\nA = [1, 1, 1]\nOdd = 0 \nEven = 0\nfor Ai in A:\n    if Ai % 2 == 0:\n        Even += 1\n    else:\n        Odd += 1\nans = 0\nif P == 0:\n    for i in range(Odd+1)[::2]:\n        ans += cmb(Odd,i)\nelse:\n    for i in range(Odd+1)[1::2]:\n        ans += cmb(Odd,i)\nans *= pow(2,Even)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "10012": {"id": 10012, "code": "def main():\n    n = 3\n    s = \"())\"\n    l, r = 0, 0\n    for c in s:\n        if c == '(':\n            l += 1\n        else:\n            if l:\n                l -= 1\n            else:\n                r += 1\n    print('(' * r + s + ')' * l)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "14803": {"id": 14803, "code": "import sys\nimport math\nN = 1;P = 1\nA = map(int, \"50\".strip().split())\ndef nCr(n, r):\n    return math.factorial(n) // math.factorial(n - r) // math.factorial(r)\nevens = 0\nodds = 0\nfor a_i in A:\n    if a_i % 2 == 0:\n        evens += 1\n    else:\n        odds += 1\nif P == 0:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(0, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nelse:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(1, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "11423": {"id": 11423, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    s = \"SUN\"\n    ans = 0\n    if s == 'SUN':\n        ans = 7\n    elif s == 'MON':\n        ans = 6\n    elif s == 'TUE':\n        ans = 5\n    elif s == 'WED':\n        ans = 4\n    elif s == 'THU':\n        ans = 3\n    elif s == 'FRI':\n        ans = 2\n    elif s == 'SAT':\n        ans = 1\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "15702": {"id": 15702, "code": "def isu(x , y , z):\n    ans = (x - z) // (y + z)\n    return ans\ndef main():\n    x = 64146;y = 123;z = 456\n    print(isu(x , y , z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10715": {"id": 10715, "code": "S = \"akasaka\"\nN = len(S)\nS1 = S[:(N - 1) // 2]\nS2 = S[(N + 3) // 2 - 1:]\ndef check(s):\n    i = 0\n    j = len(s) - 1\n    while j > i:\n        if s[j] != s[i]:\n            return False\n        j -= 1\n        i += 1\n    return True\nif check(S) and check(S1) and check(S2):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!"]}, "7187": {"id": 7187, "code": "def answer(h: int, n: int, a: []) -> str:\n    return 'Yes' if h <= sum(a) else 'No'\ndef main():\n    h = 210;n = 5\n    a = map(int, \"31 41 59 26 53\".split())\n    print(answer(h, n, a))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "11326": {"id": 11326, "code": "def main():\n    S = \"SAT\"\n    week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\n    print(7-week.index(S))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "19176": {"id": 19176, "code": "def z(x):\n  fives = 0\n  for j in range(1, 60):\n    bs = 2 * 5 ** j\n    fives = fives + x // bs\n  return fives\nx = 5\nprint(z(x) if x % 2 == 0 else 0)", "coverage": [">", "!", "!", "!", "!", "!", ">", ">"]}, "16237": {"id": 16237, "code": "n = 2\na = [100, 0]\na.sort()\nm = a.pop()\nr = m/2\ndef isOK(index, key):\n    return a[index] >= key\ndef bsearch(key):\n    left = -1\n    right = n-1\n    while right-left > 1:\n        mid = left+(right-left)//2\n        if isOK(mid, key):\n            right = mid\n        else:\n            left = mid\n    if right == n-1:\n        return -1\n    else:\n        return right\nindex = bsearch(r)\nif index > 0 and 2*r < a[index-1]+a[index]:\n    index -= 1\nprint(m, a[index])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "13333": {"id": 13333, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    ans = s.replace(\",\", \" \")\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "6085": {"id": 6085, "code": "def main():\n    n = 5\n    if n % 2 == 0:\n        print(int(n/2))\n    else:\n        print(int(n/2)+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "8079": {"id": 8079, "code": "def main():\n    n = 3;k = 3\n    a = [1, 2, 3]\n    ans = 1\n    n -= k\n    while n > 0:\n        ans += 1\n        n -= k - 1\n    return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "19063": {"id": 19063, "code": "def main():\n    n = 5\n    c = 0\n    if n % 2 == 1:\n        print(0)\n        return \n    i = 10\n    x, _ = divmod(n, i)\n    while x:\n        c += x\n        i *= 5\n        x, _ = divmod(n, i)\n    print(c)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "2592": {"id": 2592, "code": "def main():\n    N = {1, 4, 9, 7}\n    print(\"YES\" if N == {1, 4, 7, 9} else \"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "4423": {"id": 4423, "code": "def resolve():\n    s = \"internationalization\"\n    ans = s[0] + str(len(s)-2) + s[-1]\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "3713": {"id": 3713, "code": "def main():\n    A = 20;B = 30\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "15306": {"id": 15306, "code": "def main():\n    X = 64146;Y = 123;Z = 456\n    print((X-Z)//(Y+Z))\nmain()", "coverage": [">", ">", ">", ">"]}, "15305": {"id": 15305, "code": "def main():\n    X = 100000;Y = 1;Z = 1\n    print((X-Z)//(Y+Z))\nmain()", "coverage": [">", ">", ">", ">"]}, "10882": {"id": 10882, "code": "def is_kaibun(kaibun):\n    for i in range(len(kaibun)//2):\n        if kaibun[i] != kaibun[-i-1]:\n            return False\n    return True\ns = \"atcoder\"\nn = len(s)\nans = False\nif is_kaibun(s):\n    s = s[:n//2]\n    if is_kaibun(s):\n        ans = True\nif ans:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">"]}, "18447": {"id": 18447, "code": "def resolve():\n    h = 14\n    w = 12\n    n = 112\n    print(-(-n//max(h,w)))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3786": {"id": 3786, "code": "def main():\n    x = 12;y = 3;z = 1\n    x = x - z\n    ans = x // (y+z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5232": {"id": 5232, "code": "import sys\ndef input(): return \"xyz\".strip()\ndef main():\n    s = \"xyz\"\n    l = str(len(s) - 2)\n    print(s[0] + l + s[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "15974": {"id": 15974, "code": "import sys\ninput = sys.stdin.buffer.readline\nsys.setrecursionlimit(10**6)\nINF = float(\"inf\")\ndef main():\n    A = 12;B = 4\n    print(max(0, A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1842": {"id": 1842, "code": "import sys\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nint1 = lambda x: int(x) - 1\ndef main():\n    n = 100;a = 100;b = 100\n    mx=min(a,b)\n    mn=max(a+b-n,0)\n    print(mx,mn)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13691": {"id": 13691, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print(max(0,(h2-h1)*60+(m2-m1)-k))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "9542": {"id": 9542, "code": "def main():\n    s = \"2017/01/07\"\n    print(s.replace('2017', '2018'))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3383": {"id": 3383, "code": "def main():\n    n = 20;k = 15\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "12700": {"id": 12700, "code": "import sys\ndef I(): return int(\"5\".rstrip())\nprint('YES' if I() in [3,5,7] else  'NO')", "coverage": [">", ">", ">"]}, "14521": {"id": 14521, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\neven_cnt = sum([1 for x in A if x%2 == 0])\nodd_cnt = sum([1 for x in A if x%2 != 0])\nif P == 0:\n    ans1 = 2**even_cnt\n    ans2 = 0\n    for i in range(0,odd_cnt+1,2):\n        ans2 += comb(odd_cnt,i)\nelse:\n    ans1 = 2**even_cnt\n    ans2 = 0\n    for i in range(1,odd_cnt+1,2):\n        ans2 += comb(odd_cnt,i)\nprint(ans1*ans2)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">"]}, "15580": {"id": 15580, "code": "def answer(x: int, y: int, z: int) -> int:\n    return (x - z) // (y + z)\ndef main():\n    x = 64145;y = 123;z = 456\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "15303": {"id": 15303, "code": "def main():\n    X = 13;Y = 3;Z = 1\n    print((X-Z)//(Y+Z))\nmain()", "coverage": [">", ">", ">", ">"]}, "18847": {"id": 18847, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    h = 3\n    w = 7\n    n = 10\n    if h>=w:\n        print((n-1)//h+1)\n    else:\n        print((n-1)//w+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13164": {"id": 13164, "code": "def main():\n    print(*\"haiku,atcoder,tasks\".split(\",\"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">"]}, "7429": {"id": 7429, "code": "import sys\ndef main():\n    input = sys.stdin.buffer.readline\n    h = 210\n    a = [31, 41, 59, 26, 53]\n    print(\"Yes\" if sum(a) >= h else \"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7714": {"id": 7714, "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ndef main():\n    s = N - K\n    k = K - 1\n    ans = 1\n    ans += s // k\n    if s % k != 0:\n        ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3617": {"id": 3617, "code": "def resolve():\n    a = 12;b = 4\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "13671": {"id": 13671, "code": "import sys\ndef input(): return \"10 0 15 0 30\".rstrip()\ndef main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print(h2*60+m2-h1*60-m1-k)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "17192": {"id": 17192, "code": "def resolve():\n  a = \"D\";b = \"H\"\n  flag=True\n  if a==\"H\":\n      if b==\"D\":flag=False\n  else:\n      if b==\"H\":flag=False\n  print(\"H\" if flag else \"D\")\nresolve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "12216": {"id": 12216, "code": "s = \"akasaka\"\nn=len(s)\ndef isk(S):\n  l=len(S)\n  f=1\n  for i in range(l//2+1):\n    if S[i]==S[l-i-1]:\n      f*=1\n    else:\n      f=0\n  if f:\n    return True\n  else:\n    return False\nif isk(s) and isk(s[:(n-1)//2]) and isk(s[(n+1)//2:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!"]}, "15141": {"id": 15141, "code": "def main():\n    from operator import mul\n    from functools import reduce\n    def combinations_count(n, r):\n        r = min(r, n - r)\n        numer = reduce(mul, range(n, n - r, -1), 1)\n        denom = reduce(mul, range(1, r + 1), 1)\n        return numer // denom\n    n = 2;p = 0\n    A = [1, 3]\n    odd = sum([a % 2 == 1 for a in A])\n    even = n - odd\n    if p == 0:\n        odd_sum = 0\n        for i in range(0, odd + 1, 2):\n            odd_sum += combinations_count(odd, i)\n    else:\n        if odd == 0:\n            print(0)\n            exit()\n        else:\n            odd_sum = 0\n            for i in range(1, odd + 1, 2):\n                odd_sum += combinations_count(odd, i)\n    if even == 0:\n        even_sum = 0\n        print(odd_sum)\n    else:\n        even_sum = pow(2, even)\n        print(even_sum * odd_sum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "11052": {"id": 11052, "code": "s = \"atcoder\"\ndef kaibun(x):\n    ans=1\n    for i in range(len(x)//2):\n        if x[i]!=x[-i-1]:\n            ans=0\n            break\n    return ans\nn=len(s)\na1=kaibun(s)\na2=kaibun(s[0:(n-1)//2])\na3=kaibun(s[-1+(n+3)//2:n])\nif a1==1 and a2==1 and a3==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "5611": {"id": 5611, "code": "def resolve():\n    n = 5\n    ans = n // 2 + n % 2\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "10108": {"id": 10108, "code": "N = 8\nS = \"))))((((\"\ndef add1(S):\n  cum=[0]\n  for i in range(len(S)):\n    if S[i]=='(':cum.append(cum[-1]+1)\n    else:cum.append(cum[-1]-1)\n  if min(cum)>=0:return S\n  out = '('*(-min(cum))\n  out += S\n  return out\ndef add2(S):\n  cum=[0]\n  for i in range(len(S)):\n    if S[i]=='(':cum.append(cum[-1]+1)\n    else:cum.append(cum[-1]-1)\n  if cum[-1]==0:return S\n  n = cum[-1]\n  out = S + ')'*n\n  return out\nS = add1(S)\nS = add2(S)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4803": {"id": 4803, "code": "import sys\ndef main():\n    s = \"xyz\"\n    N = len(s)\n    ans = s[0] + str(N - 2) + s[-1]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "7014": {"id": 7014, "code": "def main():\n    h = 211;n = 5\n    a = [31, 41, 59, 26, 53]\n    if h > sum(a):\n        print('No')\n    else:\n        print('Yes')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "4414": {"id": 4414, "code": "def main():\n    S = \"internationalization\"\n    print(S[0]+str(len(S)-2)+S[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "11129": {"id": 11129, "code": "S = \"atcoder\"\nN=len(S)\ndef isPalindrome(s):\n  n = len(s)\n  flag=True\n  slist=list(s)\n  for i, c in enumerate(slist):\n    if c!=slist[n-1-i]:\n      flag=False\n    if i > n-i:\n      break\n  return flag\nSlist=list(S)\nif isPalindrome(S) and   isPalindrome(Slist[0:int((N-1)/2)]) and   isPalindrome(Slist[int((N+3)/2)-1:N]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "1412": {"id": 1412, "code": "def main():\n    N = 111\n    for i in range(1, 10):\n        if int(str(i) * 3) >= N:\n            print(str(i) * 3)\n            break\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12245": {"id": 12245, "code": "def flg(s):\n  le = len(s) // 2\n  return s[:le] == s[::-1][:le]\ns = \"atcoder\"\nle1 = len(s) // 2\nt = s[:le1]\nprint([\"No\", \"Yes\"][flg(s) and flg(t)])", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19340": {"id": 19340, "code": "import sys\nn = 3\ndef main():\n    ans = n\n    if n & 1: ans *= 2\n    print(ans)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8574": {"id": 8574, "code": "def resolve():\n    N = 1\n    A = [2]\n    a = [3]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "4688": {"id": 4688, "code": "def main():\n    s = \"smiles\"\n    print(s[0] + str(len(s[1:-1])) + s[-1])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "6393": {"id": 6393, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    c.sort()\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a, i)\n        e = len(c) - bisect.bisect_right(c, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3857": {"id": 3857, "code": "def main():\n    X = 13;Y = 3;Z = 1\n    print((X - Z) // (Y + Z))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "8819": {"id": 8819, "code": "def main():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "823": {"id": 823, "code": "def main():\n    k = 101\n    s=7\n    for i in range(10**6):\n        if s%k == 0:\n            print(i+1)\n            break\n        s = (s*10+7)%k\n    else:\n        print(-1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1316": {"id": 1316, "code": "def resolve():\n    N = \"112\"\n    a, b, c = list(N)\n    if a < b or (a == b and a < c):\n        a = int(a) + 1\n    print(a, a, a, sep=\"\")\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "5926": {"id": 5926, "code": "def solve():\n    N = 5\n    print(-(-N//2))\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "11703": {"id": 11703, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    next_day = {\n        \"SAT\": 1,\n        \"FRI\": 2,\n        \"THU\": 3,\n        \"WED\": 4,\n        \"TUE\": 5,\n        \"MON\": 6,\n        \"SUN\": 7,\n    }\n    S = \"SUN\"\n    ans = next_day[S]\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "15134": {"id": 15134, "code": "def combination(n,r=-1):\n    if r==-1:\n        r = n\n    if (r<0) or (n<r):\n        return 0\n    cur = 1\n    res = []\n    res.append(cur)\n    for i in range(1,r+1):\n        cur *= n + 1 -i\n        cur //= i\n        res.append(cur)\n    return res\nN = 3;P = 0\nA = 3\nB = N - A\nC = combination(A)\ncomb = 0\nfor i in range(P,A+1,2):\n    comb += C[i]\nprint(2**B * comb)", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14892": {"id": 14892, "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nN = 1;P = 1\nA = [50]\nodd = 0\neven = 0\nfor i in range(N):\n    if A[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n    ans += cmb(odd, i)\nans *= 2 ** even\nprint(ans)", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">"]}, "12537": {"id": 12537, "code": "def divisors(n):\n    d=[]\n    for i in range(1,int(n**0.5)+1):\n        if n%i==0:\n            d.append(i)\n            if i!=n//i:\n                d.append(n//i)\n    d.sort()\n    return d\na = 1;b = 1;k = 1\nprint(sorted(list(set(divisors(a))&set(divisors(b))))[::-1][k-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "15079": {"id": 15079, "code": "import itertools\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\nodd = []\neven = []\nc = 0\nfor i in A:\n    if i % 2 == 0:\n        even.append(i)\n    else:\n        odd.append(i)\nif P == 1:\n    for i in range(1, len(odd)+1, 2):\n        c += combinations_count(len(odd), i)\nif P == 0:\n    for i in range(0, len(odd)+1, 2):\n        c += combinations_count(len(odd), i)\nprint(2 ** len(even) * c) ", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", "!", ">"]}, "10355": {"id": 10355, "code": "def make_divisors(n):\n    lower_divisors, upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 100;b = 50;k = 4\nset_a = set(make_divisors(a))\nset_b = set(make_divisors(b))\nboth = list(set_a & set_b)\nboth.sort()\nprint(both[- k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5930": {"id": 5930, "code": "import math\ndef main():\n    n = 2\n    print(math.ceil(n / 2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10928": {"id": 10928, "code": "def palin(x):\n    if x == x[::-1]: return True\n    return False\na = \"atcoder\"\nn = len(a)\nif palin(a) and palin(a[:int((n-1)/2)]) and palin(a[int((n+3)/2)-1:]):\n    print(\"Yes\")\nelse: print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "12265": {"id": 12265, "code": "S = \"akasaka\"\nN=len(S)\ndef isKaibun(S):\n  if S==S[::-1]:\n    return True\n  return False\nif isKaibun(S) and isKaibun(S[:(N-1)//2]) and isKaibun(S[(N+3)//2-1:]):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "6861": {"id": 6861, "code": "def common_raccoon_vs_monster():\n    H = 10;N = 3\n    A = [4, 5, 6]\n    sum_A = 0 \n    for i in range(len(A)):\n        sum_A += A[i]\n    if H > sum_A:\n        return 'No'\n    else:\n        return 'Yes'\nresult = common_raccoon_vs_monster()\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "1068": {"id": 1068, "code": "import sys\nfrom functools import lru_cache\ndef input(): return \"111\".strip()\ndef main():\n    n = 111\n    for i in range(1, 10):\n        if n <= 111 * i:\n            print(111 * i)\n            return \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "18775": {"id": 18775, "code": "H = 3\nW = 7\nN = 10\ndef f(a):\n   if N % a == 0:\n      result = int(N / a)\n   else:\n      result = int(N / a) + 1\n   print(result)\nif H <= W:\n   f(W)\nelse:\n   f(H)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]}, "2870": {"id": 2870, "code": "def solve():\n    N = \"35753\"\n    target = 753\n    ans = 1000\n    for i in range(len(N)-2):\n        ans = min(ans, abs(753-int(N[i:i+3])))\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "309": {"id": 309, "code": "def decode(x):\n    return ord(x) - 97\ndef encode(x):\n    return chr(x + 97)\nS = [23, 24, 25]\nK = 4\nfor i in range(len(S) - 1):\n    if S[i] == 0:\n        continue\n    if 26 - S[i] <= K:\n        K -= 26 - S[i]\n        S[i] = 0\nS[-1] = (S[-1] + K) % 26\nprint(\"\".join(map(encode, S)))", "coverage": [">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "6280": {"id": 6280, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_right\n    N = 6\n    A = [2, 3, 6, 14, 53, 159]\n    B = [6, 9, 58, 79, 84, 323]\n    C = [2, 50, 79, 288, 383, 2643]\n    b_comb_accum = [0] * (N+1)\n    for i in range(N-1, -1, -1):\n        c_min_ind = bisect_right(C, B[i])\n        b_comb_accum[i] = b_comb_accum[i+1] + N - c_min_ind\n    ans = 0\n    for a in A:\n        b_min_ind = bisect_right(B, a)\n        ans += b_comb_accum[b_min_ind]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17745": {"id": 17745, "code": "def solve():\n    s = \"1905\"\n    a = int(s[:2])\n    if a == 0 or a > 12:\n        x = \"YY\"\n    else:\n        x = \"MM\"\n    b = int(s[2:])\n    if b == 0 or b > 12:\n        y = \"YY\"\n    else:\n        y = \"MM\"\n    if x + y == \"YYYY\":\n        print(\"NA\")\n    elif x + y == \"MMMM\":\n        print(\"AMBIGUOUS\")\n    else:\n        print(x + y)\nsolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", ">", "!", "!", ">", ">"]}, "12563": {"id": 12563, "code": "import math\ndef main():\n    A = 1;B = 1;K = 1\n    c_list = []\n    for i in range(1, min(A, B)+1):\n        if A%i==0 and B%i==0:\n            c_list.append(i)\n    c_list.reverse()\n    print(c_list[K-1])\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1951": {"id": 1951, "code": "import sys\ndef input(): return \"10 3 5\".strip()\ndef resolve():\n    n = 10;a = 3;b = 5\n    ans1=min(a,b)\n    if a+b>n:\n        ans2=a+b-n\n    else:\n        ans2=0\n    print(ans1,ans2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "16247": {"id": 16247, "code": "import math\nimport itertools\ndef swap(a,b):\n    return max(a,b),min(a,b)\ndef comb(n,r):\n    return math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n_ = \"2\"\nan = [100, 0]\nan.sort()\ntarget = an[-1]/2\nres = min(enumerate(an), key=lambda x: abs(target - x[1]))\nprint(an[-1], res[1])", "coverage": [">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">"]}, "16685": {"id": 16685, "code": "def main():\n    a = \"D\";b = \"D\"\n    if a == \"H\" and b == \"H\":\n        print(\"H\")\n    elif a == \"D\" and b == \"D\":\n        print(\"H\")\n    else:\n        print(\"D\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "8571": {"id": 8571, "code": "def resolve():\n    N = 5\n    A = [3, 2, 2, 4, 1]\n    a = [1, 2, 2, 2, 1]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5626": {"id": 5626, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 5\n    if n % 2 == 0:\n        print(n//2)\n    else:\n        print(n//2+1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "7929": {"id": 7929, "code": "import sys\ndef resolve():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    res = 0\n    covered = 0\n    while True:\n        if covered >= N:\n            break\n        if res == 0:\n            covered = K\n        else:\n            covered += K - 1\n        res += 1\n    print(res)\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14004": {"id": 14004, "code": "def solve():\n  ans = 1\n  N = 9\n  A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  ud = 0\n  for i in range(N-1):\n    a = A[i+1]-A[i]\n    if a*ud<0:\n      ans += 1\n      ud = 0\n    elif ud==0:\n      ud = a\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10381": {"id": 10381, "code": "def mapt(fn, *args):\n    return tuple(map(fn, *args))\ndef Input():\n    return mapt(int, \"8 12 2\".split(\" \"))\ndef gcd(a, b):\n    if b == 0: return a\n    return gcd(b, a % b)\ndef main():\n    a, b, k = Input()\n    k -= 1\n    data = sorted((i for i in range(1, gcd(a, b)+1)\n                   if a % i == 0 and b % i == 0), reverse=True)\n    print(data[k])\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9253": {"id": 9253, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    s = ['2017', '01', '31']\n    s[0] = '2018'\n    print('/'.join(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "5066": {"id": 5066, "code": "import sys\nimport math\nimport bisect\ndef main():\n    s = \"smiles\"\n    print('%s%d%s' % (s[0], len(s) - 2, s[-1]))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "10116": {"id": 10116, "code": "N = 6\nA = \")))())\"\ndef check_l(A):\n    for i in range(1,len(A)+1):\n        if not i==len(A):\n            if A[-i]==\"(\":\n                pass\n            else:\n                return i\n                break\n        elif i==len(A):\n            if A[-i]==\"(\":\n                return 0\n            else:\n                return i\n                break\ndef check_t(A):\n    for i in range(0,len(A)):\n        if not i==len(A)-1:\n            if A[i]==\")\":\n                pass\n            else:\n                return i\n                break\n        elif i==len(A)-1:\n            if A[i]==\")\":\n                a=len(A)\n                return a\n            else:\n                return i\ndef all(A,C):\n    if check_l(A)==0:\n        for i in range(len(A)):\n            C=C+\")\"\n        print(C)\n        exit()\n    elif not check_l(A)==0:\n        for i in range(check_l(A)-1):\n            A=A+\")\"\n            C=C+\")\"\n    if check_t==len(A):\n        for i in range(len(A)):\n            C=\"(\"+C\n        print(C)\n        exit()\n    else:\n        for i in range(check_t(A)):\n            A=\"(\"+A\n            C=\"(\"+C\n    for i in range(10**9):\n        if \"()\" in A:\n            A=A.replace(\"()\",\"\")\n        else:\n            break\n    return A,C\nX=A\nfor i in range(N):\n    if A==\"\":\n        print(X)\n        break\n    else:\n        A,X=all(A,X)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "16271": {"id": 16271, "code": "import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_left, bisect_right\ndef read():\n    N = 5\n    A = [6, 9, 4, 2, 11]\n    return N, A\ndef solve(N, A):\n    A.sort()\n    n = N-1\n    p = bisect_left(A, A[n] / 2)\n    low = max(0, p - 1)\n    high = min(N - 1, p)\n    if n == high:\n        return \"%d %d\" % (A[n], A[low])\n    elif A[low] > A[n] - A[high]:\n        return \"%d %d\" % (A[n], A[low])\n    else:\n        return \"%d %d\" % (A[n], A[high])\nif __name__ == '__main__':\n    inputs = read()\n    outputs = solve(*inputs)\n    if outputs is not None:\n        print(\"%s\" % str(outputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "9848": {"id": 9848, "code": "import sys\nreadline = sys.stdin.readline\ndef main():\n    N = 8\n    S = \"))))((((\"\n    res = S[:]\n    pls_left = 0\n    pls_right = 0\n    for s in S:\n        if s == '(':\n            pls_right += 1\n        else:\n            if pls_right == 0:\n                pls_left += 1\n            else:\n                pls_right -= 1\n    res = '(' * pls_left + S + ')' * pls_right\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "12885": {"id": 12885, "code": "def main():\n    n = \"6\"\n    if n in (\"3\", \"5\", \"7\"): print(\"YES\")\n    else: print(\"NO\")\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "9023": {"id": 9023, "code": "def main():\n a = 15\n b = 18\n c = 26\n d = 35\n e = 36\n lim = 18\n if max(a,b,c,d,e) - min(a,b,c,d,e) <= lim:\n     print('Yay!')\n else:\n     print(':(')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "17191": {"id": 17191, "code": "def resolve():\n  a = \"H\";b = \"H\"\n  flag=True\n  if a==\"H\":\n      if b==\"D\":flag=False\n  else:\n      if b==\"H\":flag=False\n  print(\"H\" if flag else \"D\")\nresolve()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5919": {"id": 5919, "code": "def solve(n):\n    return (n+1)//2\nn = 100\nprint(solve(n))", "coverage": [">", ">", ">", ">"]}, "5034": {"id": 5034, "code": "def main():\n    s = \"xyz\"\n    print(s[0]+str(len(s)-2)+s[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "19135": {"id": 19135, "code": "from math import ceil\ndef main():\n    N = 12\n    if N%2==1:\n        print(0)\n        return\n    else:\n        ans = 0\n        N //= 2\n        while N:\n            ans += N//5\n            N //= 5\n        print(ans)\n        return\nmain()", "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "5363": {"id": 5363, "code": "def main():\n    N = 2\n    print(int((N+1)/2))\nmain()", "coverage": [">", ">", ">", ">"]}, "10985": {"id": 10985, "code": "S = \"akasaka\"\ndef kaibun(S):\n  for i in range(len(S) // 2):\n    if S[i] != S[len(S) - i - 1]:\n      return False\n  return True\nif kaibun(S) and kaibun(S[:(len(S) - 1)//2]) and kaibun(S[(len(S) + 3) // 2-1:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]}, "3648": {"id": 3648, "code": "import sys\ndef main():\n    A = 20;B = 15\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "6493": {"id": 6493, "code": "def resolve():\n    import bisect\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    ans = 0\n    for i in range(n):\n        btest = b[i]\n        aind = bisect.bisect_left(a,btest)\n        cind = bisect.bisect_right(c, btest)\n        ans += aind * (len(c)-cind)\n    print(ans)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10546": {"id": 10546, "code": "def make_divisors(n: int):\n    lower_divs = []\n    upper_divs = []\n    i = 1\n    while i**2 <= n:\n        if n % i == 0:\n            lower_divs.append(i)\n            if i != n // i:\n                upper_divs.append(n//i)\n        i += 1\n    return lower_divs+upper_divs[::-1]\ndef main():\n    A = 100;B = 50;K = 4\n    div_A = set(make_divisors(A))\n    div_B = set(make_divisors(B))\n    common = div_A.intersection(div_B)\n    return sorted(list(common))[-K]\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13662": {"id": 13662, "code": "import sys\ndef II(): return int(\"5 4 2\")\ndef MI(): return map(int, \"2 1 1\".split())\ndef LI(): return list(map(int, \"3 3 4\".split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef solver(WIDTH, HEIGHT, OPERATION):\n    result = 0\n    all_ope = len(OPERATION)\n    up_max = HEIGHT\n    left_min = 0\n    right_max = WIDTH\n    down_min = 0\n    for j in range(0, all_ope, +1):\n        each_ope = OPERATION[j]\n        ope = each_ope[2]\n        if ope == 1:\n            if left_min < each_ope[0]:\n                left_min = each_ope[0]\n        if ope == 2:\n            if each_ope[0] < right_max:\n                right_max = each_ope[0]\n        if ope == 3:\n            if down_min < each_ope[1]:\n                down_min = each_ope[1]\n        if ope == 4:\n            if each_ope[1] < up_max:\n                up_max = each_ope[1]\n    if ((left_min < right_max) and (down_min < up_max)):\n        result = (right_max-left_min) * (up_max - down_min)\n    return result\nif __name__ == \"__main__\":\n    W, H, N = MI()\n    OPE = list()\n    for _ in range(0, N, +1):\n        OPE.append(LI())\n    print(\"{}\".format(solver(W, H, OPE)))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "960": {"id": 960, "code": "def not_xxx(N):\n    X = list(str(N))\n    if len(set(X)) == 1:\n        return False\n    else:\n        return True\nN = 111\nwhile not_xxx(N):\n    N += 1\nprint(N)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", "!", ">"]}, "12817": {"id": 12817, "code": "import sys\ndef input(): return \"6\".rstrip()\ndef main():\n    X = 6\n    if X in (3, 5, 7):\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13759": {"id": 13759, "code": "def main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    a = h1*60+m1\n    b = h2*60+m2\n    print(b-a-k)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "12963": {"id": 12963, "code": "def main():\n    x = 6\n    print('YES' if x in (3, 5, 7) else 'NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "2926": {"id": 2926, "code": "def main():\n    s = \"35753\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        ans = min(ans, abs(753 - int(s[i:i + 3])))\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1523": {"id": 1523, "code": "def main():\n    n = 111\n    for i in range(1, 10):\n        if n <= i * 111:\n            print(i * 111)\n            break\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14128": {"id": 14128, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndef f():\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            state = 0\n            break\n        if A[i-1] > A[i]:\n            state = 1\n            break\n    else:\n        print(1)\n        return\n    cnt = 1\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            if state == 1:\n                state = 2\n                cnt += 1\n            else:\n                state = 0\n        if A[i-1] > A[i]:\n            if state == 0:\n                state = 2\n                cnt += 1\n            else:\n                state = 1\n    print(cnt)\nf()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "10930": {"id": 10930, "code": "s = \"level\"\nn = len(s)\ns1 = s[:(n-1)//2]\ns2 = s[((n+3)//2)-1:]\ndef kaibun(S):\n  for i,j in zip(S,S[::-1]):\n    if i!=j:\n      return False\n  return True\nif kaibun(s) and kaibun(s1) and kaibun(s2):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13979": {"id": 13979, "code": "import sys\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    zogen = 0\n    ans = 0\n    for a, b in zip(A, A[1:]):\n        if zogen > 0 and b >= a:\n            continue\n        if zogen < 0 and b <= a:\n            continue\n        if zogen == 0:\n            zogen = b - a\n            continue\n        ans += 1\n        zogen = 0\n    print(ans + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "165": {"id": 165, "code": "def main():\n    S = \"xyz\"\n    K = 4\n    ans = ''\n    for s in S:\n        if 123 - ord(s) <= K and s != 'a':\n            ans += 'a'\n            K -= 123-ord(s)\n        else:\n            ans += s\n    if K > 0:\n        ans = ans[:-1] + chr((ord(ans[-1])+K-97) % 26+97)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">"]}, "12334": {"id": 12334, "code": "def check(r):\n    if r == r[::-1]:\n        return True\ndef main():\n    s = \"atcoder\"\n    n = len(s)\n    print(\"Yes\" if check(s) and check(s[:(n-1)//2])\n          and check(s[((n-1)//2) + 1:]) else \"No\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "4144": {"id": 4144, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    h = H2 - H1\n    m = M2 - M1\n    ans = h*60 + m - K\n    if ans > 0:\n        print(ans)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2396": {"id": 2396, "code": "def main():\n    N = 1;M = 1\n    ans = N*(N-1)//2 + M*(M-1)//2\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "5231": {"id": 5231, "code": "import sys\ndef input(): return \"smiles\".strip()\ndef main():\n    s = \"smiles\"\n    l = str(len(s) - 2)\n    print(s[0] + l + s[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "438": {"id": 438, "code": "abc = ''\nfor i in range(97 ,97+26):\n    abc += chr(i)\nS = \"xyz\"\nK = 4\nans = ''\nfor i,s in enumerate(S):\n    if ord(s) > ord('a') and 26 - (ord(s) - ord('a')) <= K and i!=len(S)-1:\n        ans += 'a'\n        K -= 26 - (ord(s) - ord('a'))\n    elif i != len(S)-1:\n        ans += s\n    else:\n        ans += abc[(ord(s) + K%26-ord('a'))%26]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "12623": {"id": 12623, "code": "import math\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 100;b = 50;k = 4\ntmp = math.gcd(a,b)\nans = make_divisors(tmp)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14141": {"id": 14141, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    f, p = 0, 0\n    ans = 0\n    for a in A:\n        if f == 1:\n            if a > p:\n                f = 2\n            elif a < p:\n                f = 3\n        elif f == 2:\n            if a < p:\n                ans += 1\n                f = 1\n        elif f == 3:\n            if a > p:\n                ans += 1\n                f = 1\n        elif f == 0:\n            f = 1\n        p = a\n    else:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "4314": {"id": 4314, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    h = (h2 - h1) * 60\n    m = m2 - m1\n    ans = h + m - k\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3641": {"id": 3641, "code": "def solve():\n    N = 12;M = 4\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "11127": {"id": 11127, "code": "S = \"akasaka\"\nN=len(S)\ndef isPalindrome(s):\n  n = len(s)\n  flag=True\n  slist=list(s)\n  for i, c in enumerate(slist):\n    if c!=slist[n-1-i]:\n      flag=False\n    if i > n-i:\n      break\n  return flag\nSlist=list(S)\nif isPalindrome(S) and   isPalindrome(Slist[0:int((N-1)/2)]) and   isPalindrome(Slist[int((N+3)/2)-1:N]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!"]}, "9955": {"id": 9955, "code": "from collections import deque, Counter\nfrom heapq import heappop, heappush\nfrom bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 6\n    T = \")))())\"\n    S = []\n    for s in T:\n        if s == '(':\n            S.append(1)\n        else:\n            S.append(-1)\n    S = list(accumulate(S))\n    minS = min(S)\n    if minS < 0:\n        for i in range(N):\n            S[i] -= minS\n    print('('*max(0,-minS) + T + ')'*S[-1])\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "7930": {"id": 7930, "code": "import sys\ndef resolve():\n    N = 8;K = 3\n    A = [7, 3, 1, 8, 4, 6, 2, 5]\n    res = 0\n    covered = 0\n    while True:\n        if covered >= N:\n            break\n        if res == 0:\n            covered = K\n        else:\n            covered += K - 1\n        res += 1\n    print(res)\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "8012": {"id": 8012, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    n = 4;k = 3\n    A = [2, 3, 1, 4]\n    ans = 1\n    n -= k\n    ans += (n+k-2) // (k-1)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6644": {"id": 6644, "code": "import bisect\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    ans = 0\n    for b in B:\n        indexa = bisect.bisect_left(A, b)\n        indexc = bisect.bisect_right(C, b)\n        ans += indexa * (N - indexc)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "1522": {"id": 1522, "code": "N = 111\ndef checkDigit(n):\n  a = n % 10\n  n = (n-a)//10\n  b = n % 10\n  c = (n-b)//10\n  if a == b and b == c:\n    return True\n  else:\n    return False\nfor i in range(1000):\n  if checkDigit(N):\n    print(N)\n    break\n  N += 1", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!"]}, "19532": {"id": 19532, "code": "def main():\n    n = 10\n    if n % 2 == 0:\n        print(n)\n    else:\n        print(2 * n)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "12372": {"id": 12372, "code": "s = \"atcoder\"\nn=len(s)\ndef f(s):\n    m=len(s)\n    for i in range(-(-m//2)):\n        if s[i]!=s[-1-i]:\n            return False\n    return True\nif f(s) and f(s[:(n-1)//2]) and f(s[((n+3)//2)-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]}, "481": {"id": 481, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    s = \"xyz\"\n    K = 4\n    ans = \"\"\n    for c in s:\n        if c == \"a\":\n            ans += c\n        else:\n            cost = 26 - (ord(c) - ord(\"a\"))\n            if cost <= K:\n                K -= cost\n                ans += \"a\"\n            else:\n                ans += c\n    finalletter = ans[-1]\n    ans = ans[:-1] + chr(ord(\"a\") + (ord(finalletter) - ord(\"a\") + K) % 26)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "6897": {"id": 6897, "code": "def solve():\n    H = 210;N = 5\n    A = [31, 41, 59, 26, 53]\n    A_sum = sum(A)\n    if A_sum >= H:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "2449": {"id": 2449, "code": "import math\nn = 13;m = 3\nt = 0\ntt = 0\ndef com(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nif n > 1:\n    t = com(n,2)\nif m > 1:\n    tt = com(m,2)\nprint(t+tt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10925": {"id": 10925, "code": "S = \"atcoder\"\ndef kaibun(x):\n    N = len(x)\n    flag = True\n    for i in range(N // 2):\n        if x[i] != x[-i - 1]:\n            flag = False\n    return flag\ntmp1 = kaibun(S)\ntmp2 = kaibun(S[:(len(S) - 1) // 2])\ntmp3 = kaibun(S[(len(S) + 3) // 2 - 1:])\nif tmp1 and tmp2 and tmp3:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "483": {"id": 483, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    s = \"codefestival\"\n    K = 100\n    ans = \"\"\n    for c in s:\n        if c == \"a\":\n            ans += c\n        else:\n            cost = 26 - (ord(c) - ord(\"a\"))\n            if cost <= K:\n                K -= cost\n                ans += \"a\"\n            else:\n                ans += c\n    finalletter = ans[-1]\n    ans = ans[:-1] + chr(ord(\"a\") + (ord(finalletter) - ord(\"a\") + K) % 26)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "3670": {"id": 3670, "code": "def main():\n    a = 20;b = 15\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "2614": {"id": 2614, "code": "def solve():\n    S = \"1291\"\n    if S.find('1') == -1 or S.find('9') == -1 or S.find('7') == -1 or S.find('4') == -1:\n        print('NO')\n    else:\n        print('YES')\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "8662": {"id": 8662, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    t = A[0]\n    t2 = sum(A2)\n    ans = t + t2\n    for i in range(1, N):\n        t += A[i]\n        t2 -= A2[i-1]\n        ans = max(ans, t+t2)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6361": {"id": 6361, "code": "from bisect import bisect_right\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    l = [0] * n\n    for index, i in enumerate(b):\n        l[index] = n - bisect_right(c, i)\n    s = [l[-1]] * n\n    for i in range(n - 2, -1, -1):\n        s[i] = s[i + 1] + l[i]\n    ans = 0\n    for i in a:\n        j = bisect_right(b, i)\n        if j < n:\n            ans += s[j]\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11499": {"id": 11499, "code": "def resolve():\n    S = \"SUN\"\n    week = [ \"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\" ]\n    print(7-week.index(S))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "17759": {"id": 17759, "code": "def main():\n  s = \"1905\"\n  sa=int(s[:2])\n  sb=int(s[2:])\n  if 1 <= sa and sa <= 12:\n    if 1 <= sb and sb <= 12:\n      print('AMBIGUOUS')\n    else:\n      print('MMYY')\n  else:\n    if 1 <= sb and sb <= 12:\n      print('YYMM')\n    else:\n      print('NA')\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "17556": {"id": 17556, "code": "def main():\n    s = \"1905\"\n    s1=int(s[:2])\n    s2=int(s[2:])\n    yymm = 1 <= s2 <= 12\n    mmyy = 1 <= s1 <= 12\n    if yymm and mmyy:\n        print(\"AMBIGUOUS\")\n    elif yymm:\n        print(\"YYMM\")\n    elif mmyy:\n        print(\"MMYY\")\n    else:\n        print(\"NA\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "8204": {"id": 8204, "code": "import math\ndef main():\n    n = 3;k = 3\n    a = [1, 2, 3]\n    print(math.ceil((n-k)/(k-1)+1))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "14849": {"id": 14849, "code": "import math\ndef combination(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 1;P = 1\nA = [50]\nodd = 0\neven = 0\nfor a in A:\n    if a % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nans = 0\nfor i in range(P, odd+1, 2):\n    tmp = combination(odd, i)\n    for j in range(0, even+1):\n        ans += tmp * combination(even, j)\nprint(ans)", "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">"]}, "17901": {"id": 17901, "code": "def mm(n):\n    if 0 < n and n < 13:\n        return True\n    else:\n        return False\nS = \"1905\"\nhead = int(S[:2])\ntail = int(S[2:])\nhead_mm = mm(head)\ntail_mm = mm(tail)\nif head_mm and tail_mm:\n    print(\"AMBIGUOUS\")\nelif head_mm:\n    print(\"MMYY\")\nelif tail_mm:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")", "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]}, "12280": {"id": 12280, "code": "def resolve():\n    def is_rotatable(S):\n        for i in range(len(S)//2):\n            if S[i] != S[-1-i]:\n                return False\n        return True\n    S = \"akasaka\"\n    N = len(S)\n    if is_rotatable(S) and is_rotatable(S[:N//2]) and is_rotatable(S[(N//2)+1:]):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "5065": {"id": 5065, "code": "import sys\nimport math\nimport bisect\ndef main():\n    s = \"internationalization\"\n    print('%s%d%s' % (s[0], len(s) - 2, s[-1]))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "12790": {"id": 12790, "code": "def main():\n x = 5\n if x == 7 or x == 5 or x == 3:\n     print('YES')\n else:\n     print('NO')\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "12218": {"id": 12218, "code": "s = \"atcoder\"\nn=len(s)\ndef isk(S):\n  l=len(S)\n  f=1\n  for i in range(l//2+1):\n    if S[i]==S[l-i-1]:\n      f*=1\n    else:\n      f=0\n  if f:\n    return True\n  else:\n    return False\nif isk(s) and isk(s[:(n-1)//2]) and isk(s[(n+1)//2:]):\n  print('Yes')\nelse:\n  print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "15033": {"id": 15033, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\nn = 3;p = 0\na = [1, 1, 1]\neven = []\nodd = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        even.append(a[i])\n    else:\n        odd.append(a[i])\nm = len(even)\ncount1 = 0\nfor i in range(m+1):\n    count1 += comb(m, i)\nk = len(odd)\ncount2 = 0\nif p == 0:\n    for i in range(0, k+1, 2):\n        count2 += comb(k, i)\nelse:\n    for i in range(1, k+1, 2):\n        count2 += comb(k, i)\nprint(count1*count2)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "6392": {"id": 6392, "code": "import bisect\nimport sys\nreadline = sys.stdin.buffer.readline\ndef main():\n    n = 3\n    a = [1, 1, 1]\n    b = [2, 2, 2]\n    c = [3, 3, 3]\n    a.sort()\n    c.sort()\n    ans = 0\n    for i in b:\n        d = bisect.bisect_left(a, i)\n        e = len(c) - bisect.bisect_right(c, i)\n        ans += d * e\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13448": {"id": 13448, "code": "import sys\ndef input(): return \"happy,newyear,enjoy\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\ns = \"happy,newyear,enjoy\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "18031": {"id": 18031, "code": "s = \"0112\"\nb = int(s[:2])\na = int(s[2:])\ndef yorm(i):\n    flag = 'none'\n    if 0<i<=12:\n        flag = 'MM'\n    elif i<100:\n        flag = 'YY'\n    return flag\nbf = yorm(b)\naf = yorm(a)\nans = bf+af\nif len(ans) != 4:\n    ans = 'NA'\nif ans == 'MMMM':\n    ans = 'AMBIGUOUS'\nif ans == 'YYYY':\n    ans = 'NA'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">"]}, "11534": {"id": 11534, "code": "def main():\n  S = \"SUN\"\n  week = {'SUN':7, 'MON':6, 'TUE':5, 'WED':4, 'THU':3, 'FRI':2, 'SAT':1}\n  print(week[S])\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "6987": {"id": 6987, "code": "H = 10;N = 3\nA = [4, 5, 6]\ndef battle(a,n):\n  ans = 0\n  for i in range(n):\n    ans += a[i]\n  return ans\nif H <= battle(A,N):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "12128": {"id": 12128, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    a = 11;b = 30\n    c = 12;d = 1\n    if d==1:\n        print(1)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14751": {"id": 14751, "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 1;p = 1\ns = [50]\nx,y,ans = 0,0,0\nfor i in s:\n    if i%2 == 0:\n        x += 1\n    else:\n        y += 1\nif p == 1:\n    k = 0\n    for i in range(1,y+1,2):\n        k += comb(y,i)\n    g = 0\n    for i in range(x+1):\n        g += comb(x,i)\n    print(k*g)\nelse:\n    g = 0\n    for i in range(x+1):\n        g += comb(x,i)\n    k = 0\n    for i in range(0,y+1,2):\n        k += comb(y,i)\n    print(k*g)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]}, "19398": {"id": 19398, "code": "import sys\ndef solve():\n    input = sys.stdin.readline\n    N = 10\n    print(N if N % 2 == 0 else 2 * N)\n    return  0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14691": {"id": 14691, "code": "def comb(n, k):\n    if k > n // 2:\n        return comb(n, n - k)\n    numer = 1\n    denom = 1\n    for i in range(k):\n        numer *= n - i\n        denom *= k - i\n    return numer // denom\ndef main():\n    N = 1;P = 1\n    A = [50]\n    cnt_even_bag = len([a for a in A if a % 2 == 0])\n    cnt_odd_bag = N - cnt_even_bag\n    cnt_even_pattern = 2 ** cnt_even_bag\n    cnt_odd_pattern = 0\n    for c in range(1, cnt_odd_bag + 1, 2):\n        cnt_odd_pattern += comb(cnt_odd_bag, c)\n    cnt_even = cnt_even_pattern * cnt_odd_pattern\n    if P == 1:\n        print(cnt_even)\n    else:\n        print(2 ** N - cnt_even)\nif __name__ == '__main__':\n    main()", "coverage": [">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "11581": {"id": 11581, "code": "def main():\n    s = \"SAT\"\n    week = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\n    ind = week.index(s)\n    print(7 - (ind % 7))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "19446": {"id": 19446, "code": "def main():\n    a = 2;b = 999999999\n    ta, tb = a, b\n    if b == 0: print(0)\n    while a%b != 0:\n       a, b = b, a%b\n    print(int((ta*tb)/b))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14620": {"id": 14620, "code": "n = 2;p = 0\nA = [1, 3]\neven = sum([a%2==0 for a in A])\nodd = n - even\ndef nCr(n,r):\n  ret = 1\n  for i in range(r):\n    ret *= n-i\n    ret //= i+1  \n  return ret\nans = 0\nadd = 2 ** even\nfor k in range(p,odd+1,2):  \n  ans += nCr(odd,k) * add  \nprint(ans)  ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "10572": {"id": 10572, "code": "def resolve():\n    a = 1;b = 1;k = 1\n    t = []\n    for i in range(1, min(a,b)+1):\n        if a % i == 0 and b % i == 0:\n            t.append(i)\n    print(t[-k])\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14515": {"id": 14515, "code": "def comb(n,k):\n    res = 1\n    for i in range(1,k+1):\n        res *= (n+1-i)\n        res //= i\n    return res\nn = 1;p = 1\na = [50]\na = [ai % 2 for ai in a]\nodd, even = a.count(1), a.count(0)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i) * pow(2, even)\nprint(ans)", "coverage": [">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">"]}, "44": {"id": 44, "code": "def codefes16qa_c():\n    s = \"a\"\n    k = 25\n    n = len(s)\n    ans = ''\n    for i in range(n):\n        if s[i] == 'a':\n            ans += s[i]\n            continue\n        step2a = 1 + ord('z') - ord(s[i])\n        if step2a <= k:\n            ans += 'a'\n            k -= step2a\n        else:\n            ans += s[i]\n    if k > 0:\n        last = ord(ans[-1]) + (k % 26)\n        ans = ans[:n-1] + chr(last)\n    print(ans)\ncodefes16qa_c()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "2511": {"id": 2511, "code": "import sys\ndef input(): return \"1 9 7 4\".rstrip()\ndef main():\n    n = {1, 4, 9, 7}\n    if 1 in n and 9 in n and 7 in n and 4 in n:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "1119": {"id": 1119, "code": "def main():\n    n = 111\n    for x in range(n, 1000):\n        if str(x)[0] == str(x)[1] == str(x)[2]:\n            print(x)\n            break\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14748": {"id": 14748, "code": "import sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial, gcd\ndef solve():\n    n = 1;p = 1\n    a = [50]\n    o = 0\n    e = 0\n    for e in a:\n        if e % 2:\n            o += 1\n        else:\n            e += 1\n    if o:\n        print(2 ** (n-1))\n    else:\n        if p:\n            print(0)\n        else:\n            print(2 ** n)\nt = 1\nfor case in range(1,t+1):\n    ans = solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">"]}, "10782": {"id": 10782, "code": "def main():\n    S = \"level\"\n    n = len(S)\n    frontN = (n - 1) // 2\n    backN = (n + 3) // 2\n    checkFN = frontN // 2\n    checkFNW = S[0:frontN]\n    for i in range(checkFN):\n        temp = (i + 1) * -1\n        if checkFNW[i] == checkFNW[temp]:\n            continue\n        else:\n            print('No')\n            return\n    checkBN = n - backN\n    checkBNW = S[backN - 1:n]\n    for i in range(checkBN // 2):\n        temp = (i + 1) * -1\n        if checkBNW[i] == checkBNW[temp]:\n            continue\n        else:\n            print('No')\n            return\n    for i in range(n // 2):\n        temp = (i + 1) * -1\n        if S[i] == S[temp]:\n            continue\n        else:\n            print('No')\n            return\n    print('Yes')\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "15067": {"id": 15067, "code": "def resolve():\n    N = 1;P = 1\n    As = [0]\n    is_all_even = True\n    for item in As:\n        if item == 1:\n            is_all_even = False\n    res = 0\n    if is_all_even:\n        if P == 0:\n            res = 2 ** N\n        else:\n            res = 0\n    else:\n        res = 2**(N-1)\n    print(res)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "10301": {"id": 10301, "code": "def main():\n    a = 8;b = 12;k = 2\n    cnt = 0\n    for i in range(max(a,b), 0, -1):\n        if a % i == 0 and b % i == 0:\n            cnt += 1\n            if cnt == k:\n                print(i)\n                return\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "665": {"id": 665, "code": "import sys\ndef input(): return \"2\".rstrip()\ndef main():\n    k = 2\n    keta = 1\n    mod = 7%k\n    if k % 7 == 0:\n        max_k = 9*k//7\n    else:\n        max_k = 9*k\n    if k %2 == 0 or k%5 == 0:\n        print(-1)\n    while keta < max_k:\n        if mod == 0:\n            print(keta)\n            break\n        mod = (mod*10 + 7)%k\n        keta += 1\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "15916": {"id": 15916, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    A = 20;B = 30\n    print(max(A - 2 * B, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "6376": {"id": 6376, "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        tmpa = bisect.bisect_left(A, b)\n        tmpc = N - bisect.bisect_right(C, b)\n        ans += tmpa*tmpc\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3124": {"id": 3124, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    s = \"35753\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        num = int(s[i:i+3])\n        if ans > abs(753 - num):\n            ans = abs(753 - num)\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3234": {"id": 3234, "code": "def q1():\n    A = 12;B = 4\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "15004": {"id": 15004, "code": "n = 3;p = 0\na = [1, 1, 1]\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\ng = 0\nk=0\nfor i in a:\n    if i%2:\n        k+=1\n    else:\n        g+=1\nif p == 0:\n    x = 2**g - 1\n    y = 0\n    for i in range(2,k+1,2):\n        y += cmb(k,i)\n    ans = y*x + x + y +1\n    print(ans)\nelse:\n    x = 2**g-1\n    y = 0\n    for i in range(1,k+1,2):\n        y += cmb(k,i)\n    print(y*x+y)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]}, "14140": {"id": 14140, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    f, p = 0, 0\n    ans = 0\n    for a in A:\n        if f == 1:\n            if a > p:\n                f = 2\n            elif a < p:\n                f = 3\n        elif f == 2:\n            if a < p:\n                ans += 1\n                f = 1\n        elif f == 3:\n            if a > p:\n                ans += 1\n                f = 1\n        elif f == 0:\n            f = 1\n        p = a\n    else:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "18909": {"id": 18909, "code": "import sys\ndef input(): return \"5\".rstrip()\ndef main():\n    n = 5\n    if n%2==1:\n        print(0)\n    else:\n        m=n//2\n        ans=0\n        for i in range(1,30):\n            ans+=m//(5**i)\n        print(ans)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "8963": {"id": 8963, "code": "def main():\n    n = 5\n    a_lst1 = [3, 2, 2, 4, 1]\n    a_lst2 = [1, 2, 2, 2, 1]\n    candies_lst = []\n    tmp = 1\n    while tmp <= n:\n        a1_tmp = a_lst1[:tmp]\n        a2_tmp = a_lst2[tmp-1:]\n        a1 = sum(a1_tmp)\n        a2 = sum(a2_tmp)\n        tmp += 1\n        candies = a1 + a2\n        candies_lst.append(candies)\n    maximum = max(candies_lst)\n    print(maximum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "2593": {"id": 2593, "code": "def main():\n    N = {1, 4, 9, 7}\n    print(\"YES\" if N == {1, 4, 7, 9} else \"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "6526": {"id": 6526, "code": "def main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    from bisect import bisect\n    ans = []\n    ans2 = []\n    for a in A:\n        b = bisect(B, a)\n        ans.append(N-b)\n    for b in B:\n        c = bisect(C, b)\n        ans2.append(N-c)\n    from itertools import accumulate\n    ans2 = list(accumulate([0] + ans2[::-1]))\n    answer = 0\n    for a in ans:\n        answer += ans2[a]\n    print(answer)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3873": {"id": 3873, "code": "def resolve():\n    x = 64145;y = 123;z = 456\n    x=x-z\n    print(x//(y+z))\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "11159": {"id": 11159, "code": "def main(S):\n    N = len(S)\n    if S == S[::-1] and S[:(N - 1) // 2] == S[:(N - 1) // 2][::-1] and S[(N + 1) // 2:] == S[(N + 1) // 2:][::-1]:\n        return True\n    else:\n        return False\nS = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nif main(S) == True:\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "694": {"id": 694, "code": "def calc(k):\n    cur = 0\n    for i in range(1, 10 ** 7):\n        cur *= 10\n        cur += 7\n        cur %= k\n        if cur == 0:\n            return i\n    return -1\nk = 101\nprint(calc(k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "10257": {"id": 10257, "code": "def solve():\n    N = 6\n    S = \")))())\"\n    l,r = 0,0\n    state = 'r'\n    for i in range(N):\n        if i == 0 and S[i] == ')': state = 'l'\n        if i > 0  and S[i-1] == ')' and S[i] == '(':\n            state = 'r' \n        if S[i] == '(':\n            if state == 'l':\n                if l > 0:\n                    l -= 1\n                else:\n                    r += 1\n            elif state == 'r':\n                r += 1\n        elif S[i] == ')':\n            if state == 'r':\n                if r > 0:\n                    r -= 1\n                else:\n                    l += 1\n            elif state == 'l':\n                l += 1\n    print('('*l+S+')'*r)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "10240": {"id": 10240, "code": "def main():\n    n = 8\n    s = \"))))((((\"\n    l, r = 0, 0\n    for i in s:\n        if i == \")\":\n            if l:\n                l -= 1\n            else:\n                r += 1\n        else:\n            l += 1\n    print(r * \"(\" + s + \")\" * l)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">"]}, "16480": {"id": 16480, "code": "import sys\ndef solve():\n    input = sys.stdin.readline\n    N = 5\n    A = [6, 9, 4, 2, 11]\n    A.sort()\n    L = A[N-1]\n    ans = -1\n    for a in A[:N-1]:\n        if abs(L/2 - a) < abs(L/2 - ans): ans = a\n    print(L, ans)\n    return 0\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "12054": {"id": 12054, "code": "def mainFunc():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    ans = '1' if m1 != m2 else '0'\n    print(ans)\nmainFunc()", "coverage": [">", ">", ">", ">", ">", ">"]}, "10766": {"id": 10766, "code": "S = \"level\"\ndef is_kaibun(s):\n    return s[:len(s)//2] == s[:(len(s)-1)//2:-1]\nflg = is_kaibun(S) and is_kaibun(S[:len(S)//2]) and is_kaibun(S[:len(S)//2:-1])\nprint('Yes' if flg else 'No')", "coverage": [">", ">", ">", ">", ">"]}, "4030": {"id": 4030, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    time1 = H1*60 + M1\n    time2 = H2*60 + M2\n    time = time2-time1\n    ans = time-K\n    return ans\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "17048": {"id": 17048, "code": "def main():\n    a = \"D\";b = \"D\"\n    if a == 'H':\n        if b == 'H':\n            ans = 'H'\n        else:\n            ans = 'D'\n    else:\n        if b == 'H':\n            ans = 'D'\n        else:\n            ans = 'H'\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "748": {"id": 748, "code": "def main():\n    K = 2\n    work = 7\n    answer = -1\n    for i in range(1, K+1):\n        i_mod = work % K\n        if i_mod == 0 :\n            answer = i\n            break\n        work = i_mod * 10 + 7\n    print(answer)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "11666": {"id": 11666, "code": "def cantwaitforholiday(s):\n    days = {\"SUN\": 7, \"MON\": 6, \"TUE\": 5, \"WED\": 4, \"THU\": 3, \"FRI\": 2, \"SAT\": 1}\n    return days[s]\ndef main():\n    s = \"SAT\"\n    print(cantwaitforholiday(s))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "14003": {"id": 14003, "code": "def solve():\n  ans = 1\n  N = 6\n  A = [1, 2, 3, 2, 2, 1]\n  ud = 0\n  for i in range(N-1):\n    a = A[i+1]-A[i]\n    if a*ud<0:\n      ans += 1\n      ud = 0\n    elif ud==0:\n      ud = a\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "17491": {"id": 17491, "code": "import sys\ndef LI2(): return list(map(int,\"0112\".rstrip()))  \nS = LI2()\na = 10*S[0]+S[1]\nb = 10*S[2]+S[3]\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif not 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nelse:\n    print('MMYY')", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]}, "1322": {"id": 1322, "code": "import sys\ndef input(): return \"112\".strip()\ndef resolve():\n    n = 112\n    print(-(-n // 111)*111)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "15844": {"id": 15844, "code": "def main():\n    x = 13;y = 3;z = 1\n    x -= y + z * 2\n    ans = 0\n    if x < 0:\n        print(ans)\n    while x >= 0:\n        ans += 1\n        x -= y + z\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "5409": {"id": 5409, "code": "def main():\n n = 100\n print((n + 1) // 2)\nmain()", "coverage": [">", ">", ">", ">"]}, "19380": {"id": 19380, "code": "def Multiple(n):\n    return n if n % 2 == 0 else n * 2\ndef main():\n    n = 999999999\n    print(Multiple(n))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "10436": {"id": 10436, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    a = 8;b = 12;k = 2\n    List = [x for x in range(1, min(a,b)+1)]\n    List.sort(reverse=True)\n    cnt = 0\n    for y in List:\n        if a % y == 0 and b % y == 0:\n            cnt += 1\n            if cnt == k:\n                print(y)\n                break\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14977": {"id": 14977, "code": "import collections, math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 2;P = 0\nA = [1, 3]\nfor i in range(N):\n    A[i] = A[i] % 2\nc = collections.Counter(A)\nzero = c[0]\none = c[1]\nans = 0\nif P == 0:\n    for i in range(0, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nelse:\n    for i in range(1, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "10734": {"id": 10734, "code": "def is_kaibun(string):\n    isk = True\n    length = len(string)\n    for i in range(length // 2):\n        if string[i] != string[length - 1 - i]:\n            isk = False\n            break\n    return isk\ns = \"level\"\nlen_s = len(s)\nif is_kaibun(s[0:(len_s // 2)]) and is_kaibun(s):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12622": {"id": 12622, "code": "import math\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 8;b = 12;k = 2\ntmp = math.gcd(a,b)\nans = make_divisors(tmp)\nprint(ans[-k])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "15313": {"id": 15313, "code": "import math\ndef main():\n  x = 13;y = 3;z = 1\n  print(int((x-z)/(y+z)))\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "2817": {"id": 2817, "code": "def main():\n    s = \"1111111111\"\n    print(min(abs(int(s[i:i+3]) - 753) for i in range(len(s)-3+1)))\nmain()", "coverage": [">", ">", ">", ">"]}, "133": {"id": 133, "code": "import sys\ndef main():\n    input = sys.stdin.readline\n    s = \"xyz\"\n    K = 4\n    def c(x): return ord(x) - ord('a')\n    def d(x): return chr(x + ord('a'))\n    ans = []\n    i = 0\n    while i < (len(s) - 1):\n        to_a = (26 - c(s[i])) % 26\n        if to_a <= K:\n            ans.append('a')\n            K -= to_a\n        else:\n            ans.append(s[i])\n        i += 1\n    if K > 0:\n        ans.append(d((c(s[-1]) + K) % 26))\n    else:\n        ans.append(s[i])\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "4513": {"id": 4513, "code": "def main():\n    s = \"internationalization\"\n    print(f'{s[0]}{len(s) - 2}{s[-1]}')\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3186": {"id": 3186, "code": "def resolve():\n    s = \"1234567876\"\n    a = 753\n    for i in range(len(s)-2):\n        b = abs(int(s[i:i+3]) - 753)\n        if b < a:\n            a = b\n    print(a)\nresolve()    ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "11394": {"id": 11394, "code": "import sys\ndef main():\n    S = \"SAT\"\n    if S == \"SUN\":\n        print(7)\n    elif S == \"MON\":\n        print(6)\n    elif S ==\"TUE\":\n        print(5)\n    elif S ==\"WED\":\n        print(4)\n    elif S ==\"THU\":\n        print(3)\n    elif S ==\"FRI\":\n        print(2)\n    else:\n        print(1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]}, "10135": {"id": 10135, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\ndef read():\n    N = 8\n    S = \"))))((((\"\n    return N, S\ndef solve(N, S):\n    rank = 0\n    q = deque()\n    for s in S:\n        if rank == 0:\n            if s == \")\":\n                q.appendleft(\"(\")\n                q.append(\")\")\n            else:\n                q.append(\"(\")\n                rank += 1\n        else:\n            if s == \")\":\n                q.append(\")\")\n                rank -= 1\n            else:\n                q.append(\"(\")\n                rank += 1\n    while rank > 0:\n        q.append(\")\")\n        rank -= 1\n    return \"\".join(q)\nif __name__ == '__main__':\n    inputs = read()\n    print(solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13096": {"id": 13096, "code": "def main():\n    x = 5\n    if x == 3 or x == 5 or x == 7:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "19458": {"id": 19458, "code": "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\ndef ngcd(a):\n    res = a[0]\n    for i in range(len(a)):\n        if res != 1:\n            res = gcd(a[i], res)\n    return res\ndef lcm(a,b):\n    return a * b // gcd(a, b)\ndef nlcm(a):\n    res = a[0]\n    for i in range(len(a)):\n        res = lcm(res, a[i])\n    return res\nn = 3\nprint(lcm(n, 2))", "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "10723": {"id": 10723, "code": "def check(string):\n    if string == string[::-1]:\n        return True\n    else:\n        return False\nS = \"atcoder\"\nn = len(S)\nS1 = S[:(n-1)//2]\nS2 = S[(n+1)//2:]\nif check(S) and check(S1) and check(S2):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "12361": {"id": 12361, "code": "s = \"level\"\nn = len(s)\ndef judge_palindrome(s):\n    if s == s[::-1]:\n        return True\n    else:\n        return False\nif judge_palindrome(s) and judge_palindrome(s[:(n - 1) // 2]) and judge_palindrome(s[(n + 3) // 2 - 1:]):\n    ans = 'Yes'\nelse:\n    ans = 'No'\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "1638": {"id": 1638, "code": "def main():\n    n = 10;a = 7;b = 5\n    print(min(a, b), max(a + b - n, 0))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "714": {"id": 714, "code": "K = 101\ndef check(k):\n    aaa = 0\n    prev = 7%k\n    for i in range(0,k):\n        aaa+=1\n        if prev == 0:\n            return(aaa)\n        prev = (prev*10+7)%k\n    return(-1)\nprint(check(K))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "9731": {"id": 9731, "code": "def resolve():\n    N = 6\n    S = \")))())\"\n    left, right, cnt = 0,0,0\n    for s in S:\n        if s == \"(\":\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt < 0:\n            right += 1\n            cnt = 0\n    if cnt>0:\n        left = cnt\n    ans = \"(\"*right + S + \")\"*left\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "9939": {"id": 9939, "code": "def abc064_d():\n  _ = int(\"3\")\n  s = \"())\"\n  srev = s[::-1]\n  op, cl = 0, 0\n  f, r = '', ''\n  for c in srev:\n    if c == '(': op += 1\n    else: cl += 1\n    if op > cl:\n      r += ')'\n      cl += 1\n  else:\n    f += '(' * (cl - op)\n  ans = f + s + r\n  print(ans)\nabc064_d()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "14633": {"id": 14633, "code": "from math import factorial\ndef comb(n, r):\n    return factorial(n) // (factorial(n-r) * factorial(r))\nn = 2;p = 0\narr = [1, 3]\nodd = 0\neven = 0\nfor a in arr:\n    if a % 2 == 1:\n        odd += 1\n    else:\n        even += 1\nans = 2 ** even\ntmp = 0\nfor i in range(p, odd+1, 2):\n    tmp += comb(odd, i)\nans *= tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "5818": {"id": 5818, "code": "import math\ndef get_input() -> int:\n    N = 5\n    return N\ndef main(N: int) -> None:\n    result = math.ceil(N/2)\n    print(result)\nif __name__ == \"__main__\":\n    N = 5\n    main(N)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "1069": {"id": 1069, "code": "import sys\nfrom functools import lru_cache\ndef input(): return \"112\".strip()\ndef main():\n    n = 112\n    for i in range(1, 10):\n        if n <= 111 * i:\n            print(111 * i)\n            return \nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "9668": {"id": 9668, "code": "def main():\n    n = 8\n    S = \"))))((((\"\n    a, b = 0, 0\n    aa = 0\n    m = 0\n    for s in S:\n        if aa > 0 and s == ')':\n            m += 1\n            aa -= 1\n        if s == '(':\n            a += 1\n            aa += 1\n        else:\n            b += 1\n    print(''.join(['(' * (b - m), S, ')' * (a - m)]))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "10733": {"id": 10733, "code": "def is_kaibun(string):\n    isk = True\n    length = len(string)\n    for i in range(length // 2):\n        if string[i] != string[length - 1 - i]:\n            isk = False\n            break\n    return isk\ns = \"akasaka\"\nlen_s = len(s)\nif is_kaibun(s[0:(len_s // 2)]) and is_kaibun(s):\n    print('Yes')\nelse:\n    print('No')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!"]}, "18816": {"id": 18816, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H = 2\n    W = 100\n    N = 200\n    ans = N // max(H, W)\n    if N % max(H, W) > 0:\n        ans += 1\n    return ans\nif __name__ == \"__main__\":\n    print(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "6054": {"id": 6054, "code": "def main():\n    N = 100\n    print(int((N + 2 - 1) / 2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "10406": {"id": 10406, "code": "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndef main():\n    a = 1;b = 1;k = 1\n    from math import gcd\n    y = make_divisors(gcd(a,b))\n    print(y[-k])\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "806": {"id": 806, "code": "def resolve():\n    K = 101\n    N = 7\n    c = 1\n    for i in range(10**6):\n        if N % K == 0:\n            print(c)\n            break\n        else:\n            N = N * 10 + 7\n            N %= K\n            c += 1\n    else:\n        print(-1)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">"]}, "10840": {"id": 10840, "code": "def is_palindrome(text):\n    l = len(text)\n    for i in range(l // 2 if l % 2 == 0 else (l + 1) // 2):\n        if text[i] != text[l - 1 - i]:\n            return False\n    return True\ns = \"akasaka\"\nq1 = is_palindrome(text=s)\nq2 = is_palindrome(text=s[0:(len(s) - 1) // 2])\nq3 = is_palindrome(text=s[(len(s) + 3) // 2 - 1:len(s)])\nprint(\"Yes\" if q1 and q2 and q3 else \"No\")", "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "18704": {"id": 18704, "code": "def main():\n    h = 14\n    w = 12\n    n = 112\n    a = max(h, w)\n    print((n + a - 1) // a)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "1630": {"id": 1630, "code": "import sys\ndef r(n, a, b):\n    both_max = min(a, b)\n    if 0 < a + b - n:\n        both_min = a + b - n\n    else:\n        both_min = 0\n    print(both_max, both_min)\ndef main():\n    input = sys.stdin.readline\n    n = 100;a = 100;b = 100\n    r(n, a, b)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "11181": {"id": 11181, "code": "def main():\n    s = \"akasaka\"\n    s1 = s[:int((len(s)-1)/2)]\n    s2 = s[int((len(s)+3)/2-1):]\n    rs = s[::-1]\n    rs1 = s1[::-1]\n    rs2 = s2[::-1]\n    if s1 == rs1 and s2 == rs2 and s == rs:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "4227": {"id": 4227, "code": "import sys\ndef input(): return \"10 0 12 0 120\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\nH1, M1, H2, M2, K = mapint()\nif M2>=M1:\n    minutes = (H2-H1)*60\n    minutes += M2-M1\nelse:\n    minutes = (H2-H1-1)*60\n    minutes += M2-M1+60\nprint(max(0, minutes-K))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "4696": {"id": 4696, "code": "def reducestr(s) : \n  return s[0] + str(len(s[1 : len(s) - 1])) + s[-1]\ns = \"internationalization\"\nprint(reducestr(s))", "coverage": [">", ">", ">", ">"]}, "14922": {"id": 14922, "code": "from math import factorial\ndef combinations_count(n, r):\n    return factorial(n) // (factorial(n - r) * factorial(r))\nN = 2;P = 0\nA = [1, 3]\nmodA = [i % 2 for i in A]\nodd = modA.count(1)\neven = modA.count(0)\neven_count = 1\nfor i in range(1, even+1):\n    even_count += combinations_count(even, i)\nif P == 0:\n    odd_count = 0\n    for i in range(0,odd+1,2):\n        odd_count += combinations_count(odd, i)\n    print(even_count * odd_count)\nelse:\n    odd_count = 0\n    for i in range(1,odd+1,2):\n        odd_count += combinations_count(odd, i)\n    print(even_count * odd_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!"]}}