{
  "2548": {
    "id": 2548,
    "code": "if {1,9,7,4}==set(map(int,\"1 2 9 1\".split())):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", "!", "!", ">"]
  },
  "5776": {
    "id": 5776,
    "code": "N = \"5\"\nN = int(N)\nans = (N+1) // 2\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "15820": {
    "id": 15820,
    "code": "a = 64146;b = 123;c = 456\nm = a % (b+c)\nans = a // (b+c)\nif m >= c:\n    print(ans)\nelse:\n    print(ans-1)",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "11439": {
    "id": 11439,
    "code": "l = ['SUN','MON','TUE','WED','THU','FRI','SAT']\ns = \"SUN\"\nif s in l:\n    print(7-l.index(s))\nelse:\n    pass",
    "coverage": [">", ">", ">", ">", "!", ">"]
  },
  "19364": {
    "id": 19364,
    "code": "n = 3\nprint(n*2 if n%2>0 else n)",
    "coverage": [">", ">"]
  },
  "9197": {
    "id": 9197,
    "code": "date = ['2017', '01', '31']\ndate[0] = '2018'\nprint('/'.join(date))",
    "coverage": [">", ">", ">"]
  },
  "1970": {
    "id": 1970,
    "code": "n = 10;a = 7;b = 5\nnmax = min(a, b)\nnmin = max(a + b - n, 0)\nprint(nmax, nmin, sep = \" \")",
    "coverage": [">", ">", ">", ">"]
  },
  "15353": {
    "id": 15353,
    "code": "X = 64146;Y = 123;Z = 456\nprint((X-Z)//(Z+Y))",
    "coverage": [">", ">"]
  },
  "14782": {
    "id": 14782,
    "code": "N = 3;P = 0\nA = [1, 1, 1]\nC = {0:0,1:0}\nfor i in range(N):\n    if A[i]%2==0:\n        C[0] += 1\n    else:\n        C[1] += 1\nif P==0:\n    if C[1]==0:\n        n = 2**C[0]\n    else:\n        n = 2**C[0]*2**(C[1]-1)\nelse:\n    if C[1]==0:\n        n = 0\n    else:\n        n = 2**C[0]*2**(C[1]-1)\nprint(n)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "150": {
    "id": 150,
    "code": "import string\nS = \"xyz\"\nK = 4\nLEN = len(S)\nans = ''\nfor pos, s in enumerate(S, 1):\n    idx = string.ascii_lowercase.find(s)\n    if pos < LEN:\n        if idx > 0 and 26-idx <= K:\n            ans += 'a'\n            K -= (26 - idx)\n        else:\n            ans += s\n    else:\n        ans += string.ascii_lowercase[(idx + K)%26]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "15865": {
    "id": 15865,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 12;b = 3;c = 1\nprint((a-c)//(b+c))",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "14409": {
    "id": 14409,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif n<=2:\n    print(1)\nelse:\n    status=\"U\"\n    for i in range(n):\n        if a[i+1]-a[i]<0:\n            status=\"D\"\n            break\n        elif a[i+1]-a[i]>0:\n            status=\"U\"\n            break\n    cnt=1\n    reset_flag=False\n    for i in range(n-1):\n        if reset_flag:\n            if a[i+1]-a[i]>0:\n                status=\"U\"\n                reset_flag=False\n            elif a[i+1]-a[i]<0:\n                status=\"D\"\n                reset_flag=False\n            else:\n                continue\n        elif status==\"D\" and a[i+1]-a[i]>0:\n            cnt+=1\n            reset_flag=True\n        elif status==\"U\" and a[i+1]-a[i]<0:\n            cnt+=1\n            reset_flag=True\n    print(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9604": {
    "id": 9604,
    "code": "S = \"2017/01/07\"\ns1 = \"2018\"\ns2 = S[4:]\ns = s1 + s2\nprint(s)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "14152": {
    "id": 14152,
    "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nflg = -1\nfor i in range(1, n):\n    if a[i-1] == a[i]:\n        continue\n    elif a[i-1] < a[i]:\n        if flg == 1 or flg == -1:\n            flg = 1\n            continue\n        else:\n            ans += 1\n            flg = -1\n    else:\n        if flg == 0 or flg == -1:\n            flg = 0\n            continue\n        else:\n            ans += 1\n            flg = -1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "7890": {
    "id": 7890,
    "code": "n = 4;k = 3\nA = [2, 3, 1, 4]\nimport math\nans = math.ceil(((n-1)/(k-1)))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "5277": {
    "id": 5277,
    "code": "s = {'9', '4', '1', '7'}\nans = {'1', '9', '7', '4'}\nprint('YES' if s==ans else 'NO')",
    "coverage": [">", ">", ">"]
  },
  "8512": {
    "id": 8512,
    "code": "N = 7\nl1 = [3, 3, 4, 5, 4, 5, 3]\nl2 = [5, 3, 4, 4, 2, 3, 2]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2518": {
    "id": 2518,
    "code": "N1 = 1;N2 = 4;N3 = 7;N4 = 9\nprint(\"YES\" if N1==1 and N2==4 and N3==7 and N4==9 else \"NO\")",
    "coverage": [">", ">"]
  },
  "10377": {
    "id": 10377,
    "code": "A = 1;B = 1;K = 1\nwari = []\ncount = 0\nfor i in range(1,A+B):\n    if A%i==0 and B%i==0:\n        wari.append(i)\nprint(wari[len(wari)-K])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "9221": {
    "id": 9221,
    "code": "S = \"2017/01/31\"\nS_array=S.split('/')\nprint('2018/'+S_array[1]+'/'+S_array[2])",
    "coverage": [">", ">", ">"]
  },
  "17120": {
    "id": 17120,
    "code": "a = \"D\";b = \"D\"\nprint(\"H\" if a==b else \"D\")",
    "coverage": [">", ">"]
  },
  "12343": {
    "id": 12343,
    "code": "s = \"atcoder\"\nn = len(s)\nn1 = (n-1)//2\nn2 = (n+1)//2\nif s == s[::-1]:\n    if s[:n1] == s[n2:]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]
  },
  "17205": {
    "id": 17205,
    "code": "a = \"H H\"\nprint([\"D\",\"H\"][a[0]==a[2]])",
    "coverage": [">", ">"]
  },
  "9383": {
    "id": 9383,
    "code": "s = \"2017/01/31\"\na=s[4:]\nprint(\"2018\"+a)",
    "coverage": [">", ">", ">"]
  },
  "17291": {
    "id": 17291,
    "code": "s = \"D D\"\nd = {'H H': 'H', 'H D': 'D', 'D H': 'D', 'D D': 'H'}\nprint(d[s])",
    "coverage": [">", ">", ">"]
  },
  "18321": {
    "id": 18321,
    "code": "H = 14\nW = 12\nN = 112\nK=max(H,W)\nprint(-(-N//K))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "11964": {
    "id": 11964,
    "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint('1' if d2 == 1 else '0')",
    "coverage": [">", ">", ">"]
  },
  "19309": {
    "id": 19309,
    "code": "N = 3\nprint(2 * N if (N % 2 != 0) else N)",
    "coverage": [">", ">"]
  },
  "4550": {
    "id": 4550,
    "code": "s = \"smiles\"\nl=len(s)\nprint(s[0]+str(l-2)+s[-1])",
    "coverage": [">", ">", ">"]
  },
  "10266": {
    "id": 10266,
    "code": "n = 6\ns = \")))())\"\nstock_left = 0\nnum_new_l = 0\nfor i in range(n):\n    if s[i] == '(':\n        stock_left += 1\n    else:\n        if stock_left > 0:\n            stock_left -= 1\n        else:\n            num_new_l += 1\nstock_right = 0\nnum_new_r = 0\nfor i in range(-1,-n-1,-1):\n    if s[i] == ')':\n        stock_right += 1\n    else:\n        if stock_right > 0:\n            stock_right -= 1\n        else:\n            num_new_r += 1\nnew_l = '(' * num_new_l\nnew_r = ')' * num_new_r\nprint(new_l + s + new_r)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "16041": {
    "id": 16041,
    "code": "A = 20;B = 15\nprint([A-2*B,0][A<=2*B])",
    "coverage": [">", ">"]
  },
  "752": {
    "id": 752,
    "code": "k = 101\nstart = 7 % k\nans = start\ncon = 1\nif k % 2 == 0 or k % 5 == 0:\n  print(\"-1\")\n  exit()\nwhile True:\n  if ans == 0:\n    print(con)\n    break\n  else:\n    con += 1\n    ans = ans * 10 + 7\n    ans = ans % k\n    if ans == start:\n      print(\"-1\")\n      break",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "8372": {
    "id": 8372,
    "code": "n = 5\nlst1 = [3, 2, 2, 4, 1]\nlst2 = [1, 2, 2, 2, 1]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1411": {
    "id": 1411,
    "code": "n = 750\nx = (n - 1) // 111 + 1\nprint(x * 100 + x * 10 + x)",
    "coverage": [">", ">", ">"]
  },
  "4439": {
    "id": 4439,
    "code": "S = \"smiles\"\nc=len(S)\nprint(S[0]+str(c-2)+S[-1])",
    "coverage": [">", ">", ">"]
  },
  "14948": {
    "id": 14948,
    "code": "import math\nN = 2;P = 0\nA = [1, 3]\ndiv = 0\nfor a in A:\n  if a % 2 == 1:\n    div += 1\nans = 0\nmlt = 2 ** (N-div)\nif P == 0:\n  for i in range(0, div+1, 2):\n    cmb = math.factorial(div) // (math.factorial(div-i) * math.factorial(i))\n    ans += cmb * mlt\nelse:\n  for i in range(1, div+1, 2):\n    cmb = math.factorial(div) // (math.factorial(div-i) * math.factorial(i))\n    ans += cmb * mlt\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "12113": {
    "id": 12113,
    "code": "a = 11;b = 16\nc = 11;d = 17\nif d == 1:\n  print(1)\nelse:\n  print(0)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "7251": {
    "id": 7251,
    "code": "health = 10;attack = 3\ndamage = [4, 5, 6]\nif health <= sum(damage):\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "10887": {
    "id": 10887,
    "code": "s = \"level\"\nn = len(s)\ncen1 = int((n-1)/2)\ncen2 = int((n+3)/2)\nif s == s[::-1] and s[:cen1] == s[cen1-1::-1] and s[cen2-1:n] == s[n:cen2-2:-1]:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "7308": {
    "id": 7308,
    "code": "import sys\nH = 211;N = 5\ndata = [31, 41, 59, 26, 53]\nDATA = sorted(data, reverse=True)\ncount = 0\nfor i in range(N):\n  H = H - DATA[i]\n  if H <= 0:\n    print(\"Yes\")\n    sys.exit()\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]
  },
  "2343": {
    "id": 2343,
    "code": "from math import factorial\nN = 0;M = 3\nif N <= 1:\n    combN = 0\nelse:\n    combN = factorial(N) // (factorial(N - 2) * factorial(2))\nif M <= 1:\n    combM = 0\nelse:\n    combM = factorial(M) // (factorial(M - 2) * factorial(2))\nprint(combN + combM)",
    "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]
  },
  "9915": {
    "id": 9915,
    "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nsurplus_left, surplus_right = 0, 0\nright_count, left_count = 0, 0\nfor i in range(n - 1, -1, -1):\n    if s[i] == \"(\":\n        if left_count > 0:\n            left_count -= 1\n        else:\n            surplus_left += 1\n    else:\n        left_count += 1\nfor i in range(n):\n    if s[i] == \")\":\n        if right_count > 0:\n            right_count -= 1\n        else:\n            surplus_right += 1\n    else:\n        right_count += 1\nprint(\"(\" * surplus_right + \"\".join(s) + \")\" * surplus_left)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "9302": {
    "id": 9302,
    "code": "a = \"2017\";b = \"01\";c = \"07\"\nn = int(a)\nn += 1\nprint(\"{}/{}/{}\".format(n,b,c))",
    "coverage": [">", ">", ">", ">"]
  },
  "8278": {
    "id": 8278,
    "code": "n = 4;k = 3\na = [2, 3, 1, 4]\np = min(a)\na += [p]\nans,i,temp = 0,0,0\nwhile i<n:\n  if a[i]==p:\n    m = -(-(i-temp)//(k-1))\n    ans += m\n    temp += m*(k-1)+1\n    i = temp\n  else:\n    i += 1\nans += -(-(n-temp)//(k-1))\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "17660": {
    "id": 17660,
    "code": "S = \"1700\"\nL = int(S[:2])\nR = int(S[2:])\nif 1<=L<=12 and 1<=R<=12:\n  print(\"AMBIGUOUS\")\nelif 1<=L<=12:\n  print(\"MMYY\")\nelif 1<=R<=12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "10202": {
    "id": 10202,
    "code": "n = 3\ns = \"())\"\nl = 0\nr = 0\nfor si in s:\n  if si == \"(\":\n    r += 1\n  else:\n    if r == 0:\n      l += 1\n    else:\n      r -= 1\nans = \"\"\nfor _ in range(l):\n  ans += \"(\"\nans += s\nfor _ in range(r):\n  ans += \")\"\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "14239": {
    "id": 14239,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nf = 0\nfor i in range(1, n):\n    if a[i-1] < a[i]:\n        ff = 1\n    elif a[i-1] > a[i]:\n        ff = -1\n    else:\n        ff = 0\n    if f and ff and f != ff:\n        cnt += 1\n        f = 0\n    elif not f:\n        f = ff\nprint(cnt + 1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14548": {
    "id": 14548,
    "code": "N = 3;P = 0\nA = [1, 1, 1]\nif all(a % 2 == 0 for a in A):\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\nelse:\n    print(2**(N-1))",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]
  },
  "13091": {
    "id": 13091,
    "code": "if \"6\" in \"357\":\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", "!", "!", ">"]
  },
  "7278": {
    "id": 7278,
    "code": "H = 211;N = 5\nf = [31, 41, 59, 26, 53]\nif sum(f)>=H:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "6402": {
    "id": 6402,
    "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor b in B:\n    ia = min(bisect.bisect_left(A,b),N-1)\n    ic = min(bisect.bisect_right(C,b),N-1)\n    a = ia if A[ia]>=b else ia+1\n    c = N-ic-1 if C[ic]<=b else N-ic\n    ans += a*c\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13882": {
    "id": 13882,
    "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnow = False\ncount = 1\nfor i in range(N-1):\n    if A[i] < A[i+1]:\n        if now == 1:\n            pass\n        elif now == -1:\n            count += 1\n            now = False\n        else:\n            now = 1\n    elif A[i] > A[i+1]:\n        if now == 1:\n            count += 1\n            now = False\n        elif now == -1:\n            pass\n        else:\n            now = -1\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "16613": {
    "id": 16613,
    "code": "a = \"D\";b = \"D\"\nif a=='H' and b=='H'or a=='D' and b=='D':\n    print('H')\nelse:\n    print('D')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "8868": {
    "id": 8868,
    "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1830": {
    "id": 1830,
    "code": "N = 100;A = 100;B = 100\nli = [A, B]\nif sum(li)<=N:\n  a = 0\nelse:\n  a = sum(li)-N\nprint(min(li),a)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "9648": {
    "id": 9648,
    "code": "n = 6\ns = \")))())\"\ncnt=0\nans=str()\nfor i in range(n):\n    if s[i]==\"(\":\n        cnt+=1\n        ans+=\"(\"\n    elif s[i]==\")\":\n        if cnt>0:\n            cnt-=1\n            ans+=\")\"\n        else:\n            ans=ans[::-1]\n            ans+=\"(\"\n            ans=ans[::-1]\n            ans+=\")\"\n            cnt=0\nif cnt>0:\n    while cnt>0:\n        ans+=\")\"\n        cnt-=1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "11211": {
    "id": 11211,
    "code": "S = \"SUN\"\nH = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nk = H.index(S)\nprint(7-k)",
    "coverage": [">", ">", ">", ">"]
  },
  "12708": {
    "id": 12708,
    "code": "x = 5\nr = {3, 5, 7}\nif x in r:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "2774": {
    "id": 2774,
    "code": "s = \"35753\"\nm = 1000\nfor i in range(len(s) - 2):\n\tif abs(int(s[i:i+3]) - 753) <=m:\n\t\tm = abs( int(s[i:i+3]) -753)\nprint(m)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "7274": {
    "id": 7274,
    "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nif h<=sum(a):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "19255": {
    "id": 19255,
    "code": "n = 12\ni = 10\nans = 0\nwhile  i <= n:\n    ans += (n // i)\n    i *= 5\nprint(ans if n & 1 == 0 else 0)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "2556": {
    "id": 2556,
    "code": "from sys import exit, stdin\nN = {1, 2, 9}\nif N == set([1,9,7,4]):\n    print('YES')\nelse:\n    print('NO')",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "18506": {
    "id": 18506,
    "code": "h = 3\nw = 7\nn = 10\nfor i in range(min(h,w)):\n    n = n - max(h,w)\n    if n <= 0:\n        print(i + 1)\n        break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11429": {
    "id": 11429,
    "code": "week = ('SUN','MON','TUE','WED','THU','FRI','SAT')\nprint(7 - week.index(\"SUN\"))",
    "coverage": [">", ">"]
  },
  "3556": {
    "id": 3556,
    "code": "A = 12;B = 4\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "7114": {
    "id": 7114,
    "code": "h = 211;n = 5\nprint('Yes' if sum(map(int, \"31 41 59 26 53\".split()))>=h else 'No' )",
    "coverage": [">", ">"]
  },
  "7773": {
    "id": 7773,
    "code": "k = 3;n = 3\na = \"1 2 3\"\ni=0\nwhile True:\n    if k<=n+(n-1)*i:print(i+1);break\n    i+=1",
    "coverage": [">", ">", ">", ">", ">", "!"]
  },
  "19116": {
    "id": 19116,
    "code": "N = 12\nif N % 2 == 1:\n  print(0)\nelse:\n  rlt = 0\n  i = 10\n  while N // i > 0:\n    rlt += N // i\n    i *= 5\n  print(rlt)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "11209": {
    "id": 11209,
    "code": "S = \"SUN\"\nif S == \"SUN\":\n\tprint(\"7\")\nelif S == \"MON\":\n\tprint(\"6\")\nelif S == \"TUE\":\n\tprint(\"5\")\nelif S == \"WED\":\n\tprint(\"4\")\nelif S == \"THU\":\n\tprint(\"3\")\nelif S == \"FRI\":\n\tprint(\"2\")\nelif S == \"SAT\":\n\tprint(\"1\")",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "11451": {
    "id": 11451,
    "code": "day = ['','SAT','FRI','THU','WED','TUE','MON','SUN']\ns = \"SUN\"\nfor i in range(8):\n    if s==day[i]:\n        break\nprint(i)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "16725": {
    "id": 16725,
    "code": "a = \"H\";b = \"H\"\nx= (a==\"H\")\ny=(b==\"H\")\nif x and y or not x and not y:\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "17432": {
    "id": 17432,
    "code": "S = \"1700\"\nY=int(S[:2])\nM=int(S[2:])\nif Y==0 or Y>12:\n    if M==0 or M>12:\n        print(\"NA\")\n    else:\n        print(\"YYMM\")\nelse:\n    if M==0 or M>12:\n        print(\"MMYY\")\n    else:\n        print(\"AMBIGUOUS\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "2052": {
    "id": 2052,
    "code": "N = 10;A = 7;B = 5\nif N > A+B:\n  mini = 0\nelse:\n  mini = A+B-N\nprint(str(min(A, B)) + \" \" + str(mini))",
    "coverage": [">", ">", "!", "!", ">", ">"]
  },
  "14056": {
    "id": 14056,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nf = 0\nfor i in range(n):\n    if f == 0:\n        f = 1\n    elif f == 1:\n        if a[i] > a[i - 1]:\n            f = 2\n        elif a[i] < a[i - 1]:\n            f = 3\n    elif f == 2:\n        if a[i] < a[i - 1]:\n            ans += 1\n            f = 1\n    elif f == 3:\n        if a[i] > a[i - 1]:\n            ans += 1\n            f = 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1212": {
    "id": 1212,
    "code": "N = 112\nif N < 111:\n  print(111)\nelse:\n  for i in range(1,10):\n    if N <= 111*i:\n      ans = 111*i\n      break\n  print(ans)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">"]
  },
  "15056": {
    "id": 15056,
    "code": "N = 1;P = 1\nodd = 0\neven = N-odd\nif odd == 0:\n    if P == 0:\n        print(2**even)\n    else:  \n        print(0)\nelse:\n    print(2**even * (2**odd//2))",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", "!"]
  },
  "4762": {
    "id": 4762,
    "code": "s = \"internationalization\"\nl = len(s) - 2\nprint(s[0], l, s[l + 1], sep = \"\")",
    "coverage": [">", ">", ">"]
  },
  "2581": {
    "id": 2581,
    "code": "n = {1, 4, 9, 7}\nprint((\"NO\",\"YES\")[len(set([1,9,7,4])-n)==0])",
    "coverage": [">", ">"]
  },
  "19081": {
    "id": 19081,
    "code": "n = 12\nans = 0\nif n % 2 == 1:\n    ans = 0\nelse:\n    ans += n//10\n    n = n//10\n    while n > 1:\n        ans += n//5\n        n = n//5\nprint(ans)",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]
  },
  "1585": {
    "id": 1585,
    "code": "N = 100;A = 100;B = 100\nC = A + B - N\nif C < 0:\n    C = 0\nprint(min(A, B), C)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "15605": {
    "id": 15605,
    "code": "X = 64145;Y = 123;Z = 456\nprint((X-Z)//(Y+Z))",
    "coverage": [">", ">"]
  },
  "12846": {
    "id": 12846,
    "code": "idade = 5\nif 1 <= idade <= 9:\n    if idade == 3 :\n        print(\"YES\")\n    elif idade == 5 :\n        print(\"YES\")\n    elif idade == 7 :\n        print(\"YES\")\n    else :\n        print(\"NO\")",
    "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]
  },
  "5580": {
    "id": 5580,
    "code": "import sys\nsys.setrecursionlimit(10**6)\nreadline = sys.stdin.readline\nn = 100\nprint(n//2+n%2)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "5038": {
    "id": 5038,
    "code": "s = \"internationalization\"\nN=len(s)-2\nprint(s[0]+str(N)+s[-1])",
    "coverage": [">", ">", ">"]
  },
  "14574": {
    "id": 14574,
    "code": "n = 1;p = 1\nlis = [50]\nodd = [i for i in lis if i % 2==1]\neven = [i for i in lis if i % 2 == 0]\nif len(odd) == 0:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    odd_m = len(odd)\n    even_m = len(even)\n    t1 = 2**even_m\n    t2 = 2**(odd_m-1)\n    print(t1*t2)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "18496": {
    "id": 18496,
    "code": "H = 2\nW = 100\nN = 200\nx = H if H>W else W\nx2 = 0 if N%x==0 else 1\nprint(N//x + x2)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "2335": {
    "id": 2335,
    "code": "N = 4;M = 3\nprint(int(N*max(N-1, 0)/2) + int(M*max(M-1, 0)/2))",
    "coverage": [">", ">"]
  },
  "2813": {
    "id": 2813,
    "code": "n = \"35753\"\ncount = 1000\nfor i in range(len(n)-2):\n    count = min(count, abs(753 - int(n[i:i+3])))\nprint(count)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "16262": {
    "id": 16262,
    "code": "N = 2\nA = [0, 100]\nn = A[-1]\nk = A[0]\nfor i in range(1,N-1):\n    j = A[i]\n    if k<=n//2 and j<=n//2:\n        k = max(k,j)\n    elif k<=n//2 and j>n//2:\n        if k<n-j:\n            k = j\n    elif k>n//2 and j<=n//2:\n        if n-k<j:\n            k = j\n    elif k>n//2 and j>n//2:\n        if n-k<n-j:\n            k = j\nprint(n,k)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "5939": {
    "id": 5939,
    "code": "N = 2\nprint(int(N/2) + N%2)",
    "coverage": [">", ">"]
  },
  "11062": {
    "id": 11062,
    "code": "s = \"atcoder\"\nn = len(s)\nz = 'Yes'\nfor i in range(n//2):\n    if s[i] != s[-1-i]:\n        z = 'No'\nif z == 'Yes':\n    for h in range(len(s[:(n-1)//2])):\n        if s[:(n-1)//2][h] != s[:(n-1)//2][-1-h]:\n            z = 'No'\n            break\nif z == 'Yes':\n    for j in range(len(s[((n+3)//2)-1:])):\n        if s[((n+3)//2)-1:][j] != s[((n+3)//2)-1:][-1-j]:\n            z = 'No'\n            break\nprint(z)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "3668": {
    "id": 3668,
    "code": "A = 20;B = 30\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)",
    "coverage": [">", ">", ">"]
  },
  "5199": {
    "id": 5199,
    "code": "s = ['x', 'y', 'z']\nx=int(len(s))\nprint(s[0],x-2,s[x-1],sep=\"\")",
    "coverage": [">", ">", ">"]
  },
  "8560": {
    "id": 8560,
    "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16835": {
    "id": 16835,
    "code": "A = \"D\";B = \"D\"\nif A == B:\n    print(\"H\")\nelse:\n    print(\"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "3100": {
    "id": 3100,
    "code": "s = \"1234567876\"\nans = 10**8\nfor i in range(len(s)-2):\n  ans = min(ans, abs(753-int(s[i:i+3])))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "7601": {
    "id": 7601,
    "code": "H = 10;N = 3\nA = [4, 5, 6]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "19072": {
    "id": 19072,
    "code": "import sys\ninput = sys.stdin.readline\nn = 12;x = 1;res = 0\nif n & 1: print(0)\nelse:\n    n //= 2\n    while x < n:\n        x *= 5\n        res += n // x\n    print(res)",
    "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]
  },
  "6522": {
    "id": 6522,
    "code": "from bisect import bisect_right, bisect_left\nn = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a_id = bisect_left(A, b)\n    c_id = bisect_right(C, b)\n    ans += a_id * (len(C) - c_id)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12475": {
    "id": 12475,
    "code": "s1 = \"akasaka\"\nn1 = len(s1)\ns2 = s1[:(n1-1)//2]\nn2 = len(s2)\ns3 = s1[-(n1-1)//2:]\nn3 = len(s3)\nf1, f2, f3 = True, True, True\nfor i in range((n1-1)//2):\n    if s1[i] != s1[-i-1]:\n        f1 = False\n        break\nfor i in range(n2//2):\n    if s2[i] != s2[-i-1]:\n        f2 = False\n        break\nfor i in range(n3//2):\n    if s3[i] != s3[-i-1]:\n        f3 = False\n        break\nif f1 and f2 and f3:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "15767": {
    "id": 15767,
    "code": "X = 12;Y = 3;Z = 1\na=(X-Z)//(Y+Z)\nprint(a)",
    "coverage": [">", ">", ">"]
  },
  "3890": {
    "id": 3890,
    "code": "X = 64145;Y = 123;Z = 456\nprint(1+(X-Y-2*Z)//(Y+Z))",
    "coverage": [">", ">"]
  },
  "14206": {
    "id": 14206,
    "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc=1\nd=0\nfor i in range(n-1):\n  e=d+A[i+1]-A[i]\n  if (d<e and d<0) or (d>e and d>0):\n    c+=1\n    e=0\n  d=e\nprint(c)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4867": {
    "id": 4867,
    "code": "S = \"internationalization\"\nl=len(S)-2\nA=S[0]\nB=S[-1]\nprint(A+str(l)+B)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "8961": {
    "id": 8961,
    "code": "n = 7\nl1 = [3, 3, 4, 5, 4, 5, 3]\nl2 = [5, 3, 4, 4, 2, 3, 2]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "1100": {
    "id": 1100,
    "code": "n = ['1', '1', '1']\nif n[1]<n[2]:n[1]=str(int(n[1])+1)\nif n[0]<n[1]:n[0]=str(int(n[0])+1)\nprint(n[0]*3)",
    "coverage": [">", ">", ">", ">"]
  },
  "14915": {
    "id": 14915,
    "code": "n = 2;p = 0\na = [1, 3]\neven=0\nodd=0\nfor i in a:\n    if i%2==0:\n        even+=1\n    else:\n        odd+=1\nimport math\nans=2**even\nif p==0:\n    m=odd//2\n    t=1\n    for i in range(1,m+1):\n        i*=2\n        t+=math.factorial(odd)/math.factorial(i)/math.factorial(odd-i)\nelse:\n    m=(odd+1)//2\n    t=0\n    for i in range(1,m+1):\n        i=2*i-1\n        t+=math.factorial(odd)/math.factorial(i)/math.factorial(odd-i)\nans*=t\nprint(int(ans))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "9004": {
    "id": 9004,
    "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nprint(\":(\") if e - a > k else print(\"Yay!\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "17408": {
    "id": 17408,
    "code": "S = \"1700\"\nif (int(S[:2])>12 or int(S[:2])==0) and (int(S[2:])>12 or int(S[2:])==0):\n    print('NA')\nelif (int(S[:2])<=12 and int(S[:2])!=0) and (int(S[2:])>12 or int(S[2:])==0):\n    print('MMYY')\nelif (int(S[2:])<=12 and int(S[2:])!=0) and (int(S[:2])>12 or int(S[:2])==0):\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "17304": {
    "id": 17304,
    "code": "a = \"H\";b = \"H\"\nh = 'H'\nd = 'D'\nresult = h\nif a == h:\n    if b == d:\n        result = d\nelse:\n    if b == h:\n        result = d\n    else:\n        result = h\nprint(result)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "605": {
    "id": 605,
    "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nN=len(S)\nfor i in range(N):\n  k=(ord('z')-ord(S[i])+1)%26\n  if K>=k:\n    S[i]='a'\n    K-=k\nS[-1]=chr(ord(S[-1])+K%26)\nprint(''.join(S))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11591": {
    "id": 11591,
    "code": "x = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI',  'SAT', 'SUN']\ny = 0\nif (y == 0):\n      print(7)\nelse:\n      print(7-y)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "2507": {
    "id": 2507,
    "code": "n = {'9', '4', '1', '7'}\na = {\"1\", \"9\", \"7\", \"4\"}\nprint(\"YES\" if n == a else \"NO\")",
    "coverage": [">", ">", ">"]
  },
  "15185": {
    "id": 15185,
    "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\nx = 13;y = 3;z = 1\nx-= 2*z\nans = x//(y+z)\nif x%(y+z)>=y:\n    ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16178": {
    "id": 16178,
    "code": "N = 2\nA = [100, 0]\nA_max = max(A)\nA.remove(A_max)\nX = [abs(a-(A_max//2)) for a in A]\nX_min_id = X.index(min(X))\nprint(A_max,A[X_min_id])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "6125": {
    "id": 6125,
    "code": "import bisect\na = 3\nb = [1, 1, 1]\nb.sort()\nc = [2, 2, 2]\nd = [3, 3, 3]\nd.sort()\nans = 0\nfor i in range(a):\n    ans += bisect.bisect_left(b, c[i]) * (a - bisect.bisect_right(d, c[i]))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5030": {
    "id": 5030,
    "code": "word = ['s', 'm', 'i', 'l', 'e', 's']\nrep_word = []\nnum_abb = len(word) - 2\nrep_word.append(word[0])\nrep_word.append(str(num_abb))\nrep_word.append(word[-1])\nprint(''.join(rep_word))",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "11330": {
    "id": 11330,
    "code": "S = \"SAT\"\nif S == 'MON':\n    print(6)\nelif S == 'TUE':\n    print(5)\nelif S == 'WED':\n    print(4)\nelif S == 'THU':\n    print(3)\nelif S == 'FRI':\n    print(2)\nelif S == 'SAT':\n    print(1)\nelse:print(7)",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!"
    ]
  },
  "8611": {
    "id": 8611,
    "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "11415": {
    "id": 11415,
    "code": "S = \"SUN\"\nif S == \"SUN\":\n    print(7)\nelif S == \"MON\":\n    print(6)\nelif S == \"TUE\":\n    print(5)\nelif S == \"WED\":\n    print(4)\nelif S == \"THU\":\n    print(3)\nelif S == \"FRI\":\n    print(2)\nelif S == \"SAT\":\n    print(1)\nelse:\n    print(\"error\")",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "18256": {
    "id": 18256,
    "code": "import math\nh = 2\nw = 100\nn = 200\nans = math.ceil(n/max(h,w))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "14348": {
    "id": 14348,
    "code": "N = 9\nL = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans1 = 1\nflag = ''\nfor i in range(1, N):\n  if flag == '':\n    if L[i] < L[i-1]:\n      flag = 'minus'\n    elif L[i] > L[i-1]:\n      flag = 'plus'\n    else:\n      flag = ''\n  if flag == 'plus':\n    if L[i] < L[i-1]:\n      flag = ''\n      ans1 += 1\n  elif flag == 'minus':\n    if L[i] > L[i-1]:\n      flag = ''\n      ans1 += 1\nprint(ans1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "9701": {
    "id": 9701,
    "code": "n = 3\ns = \"())\"\na=[1 if i=='(' else -1 for i in s]\ne=[0]\nfor i in range(n):\n    e.append(e[i]+a[i])\ns=-min(e)*'('+s\ns+=(s.count('(')-s.count(')'))*')'\nprint(s)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7075": {
    "id": 7075,
    "code": "MM = ['10', '3']\nH = int(MM[0])\nN = int(MM[1])\nAA = ['4', '5', '6']\ntotal = 0\nfor i in AA:\n  total += int(i)\nif total >= H:\n  print('Yes')\nelse:\n  print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "4765": {
    "id": 4765,
    "code": "s = \"internationalization\"\ncount = 0\nfor i in s:\n    count +=1\nprint(\"{}{}{}\".format(s[0], count-2, s[-1]))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "7617": {
    "id": 7617,
    "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nH = 10;N = 3\nA = [4, 5, 6]\nif H-sum(A)<=0:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "9468": {
    "id": 9468,
    "code": "S = \"2017/01/07\"\nZ = S.replace('2017', '2018')\nprint (Z)",
    "coverage": [">", ">", ">"]
  },
  "1624": {
    "id": 1624,
    "code": "x = 100;a = 100;b = 100\nma  = min(a,b)\nmi = max(0,a+b-x)\nprint(ma,mi)",
    "coverage": [">", ">", ">", ">"]
  },
  "18663": {
    "id": 18663,
    "code": "H = 14\nW = 12\nN = 112\nprint(int((N+max(H,W)-1)/max(H,W)))",
    "coverage": [">", ">", ">", ">"]
  },
  "12965": {
    "id": 12965,
    "code": "X = 6\nif X==7 or X==5 or X==3:print('YES')\nelse:print('NO')",
    "coverage": [">", ">", ">"]
  },
  "14270": {
    "id": 14270,
    "code": "num = 9\nseq = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = None\nincrease = None\ncount = 0\nprev = seq[0]\nfor x in seq[1:]:\n    if increase is True:\n        if x >= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == prev:\n            pass\n        elif x > prev:\n            increase = True\n        else:\n            increase = False\n    prev = x\ncount += 1\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "9778": {
    "id": 9778,
    "code": "n = 3\ns = ['(', ')', ')']\nans = \"\"\nl = 0\nfor i in range(n):\n    ans += s[i]\n    if s[i] == \")\":\n        if l == 0:\n            ans = \"(\" + ans\n        else:\n            l -= 1\n    else:\n        l += 1\nans += (\")\"*l)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "18419": {
    "id": 18419,
    "code": "import math\nh = 3\nw = 7\nn = 10\nprint(math.ceil(n/max(h,w)))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10130": {
    "id": 10130,
    "code": "n = 3\ns = \"())\"\nt = s\nwhile \"()\" in t:\n    t = t.replace(\"()\", \"\")\na = t.count(\")\"); b = t.count(\"(\")\nprint(\"(\" * a + s + \")\" * b)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1595": {
    "id": 1595,
    "code": "N = 10;A = 3;B = 5\nif N < A+B:\n  print(min(A,B),A+B-N)\nelse:\n  print(min(A,B),0)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "15411": {
    "id": 15411,
    "code": "import math\nx = 12;y = 3;z = 1\nt = (x-z)/(y+z)\nprint(math.floor(t))",
    "coverage": [">", ">", ">", ">"]
  },
  "1053": {
    "id": 1053,
    "code": "N = 750\nnow=111\nwhile now<N:\n    now+=111\nprint(now)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "18431": {
    "id": 18431,
    "code": "h = 3\nw = 7\nn = 10\nh, w = max(h, w), min(h, w)\nblack_tile = 0\nfor i in range(w):\n    black_tile += h\n    if black_tile >= n: break\nprint(i + 1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18309": {
    "id": 18309,
    "code": "h = 14\nw = 12\nn = 112\nans = n // max(h,w) if n % max(h,w) == 0 else n // max(h,w) + 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "18088": {
    "id": 18088,
    "code": "s = \"1700\"\nif int(s[:2])<=12 and int(s[:2])>0:\n    if int(s[2:4])<=12 and int(s[2:4])>0:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelif int(s[2:4])<=12 and int(s[2:4])>0:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")",
    "coverage": [">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]
  },
  "16293": {
    "id": 16293,
    "code": "N = 2\na = [100, 0]\na.sort(reverse=True)\nst_n = a[0]\nst_r = a[1]\nm = st_r*(st_n-st_r)\nfor r in range(2,N):\n    cn = a[r]*(st_n-a[r])\n    if m < cn:\n        st_r = a[r]\n        m = cn\nprint(st_n,st_r)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "15077": {
    "id": 15077,
    "code": "from math import factorial\nn = 3;p = 0\na = [1, 1, 1]\na1=[]\na0=[]\nfor i in a:\n    if i%2==1:\n        a1.append(i)\n    else:\n        a0.append(i)\na1c=len(a1)\na0c=len(a0)\nans1=0\nfor i in range(a0c+1):\n    ans1+=factorial(a0c) / factorial(i) / factorial(a0c - i)\nans2=0\nif p==1:\n    for i in range(1,a1c+1,2):\n        ans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\nelse:\n    for i in range(0,a1c+1,2):\n        ans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\nprint(int(ans2*ans1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "10857": {
    "id": 10857,
    "code": "s = \"akasaka\"\nn = len(s)\nfor i in range(n//2):\n    if s[i]!=s[n-i-1] :\n        print(\"No\")\n        exit()\nn1 = (n-1)//2\nfor i in range(n1//2):\n    if s[i]!=s[n1-i-1] :\n        print(\"No\")\n        exit()\nn2 = (n+3)//2\nfor i in range(n-n2):\n    if s[i]!=s[n-i-1] :\n        print(\"No\")\n        exit()\nprint(\"Yes\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "9439": {
    "id": 9439,
    "code": "li = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nli[3] = '8'\nprint(*li, sep='')",
    "coverage": [">", ">", ">"]
  },
  "3352": {
    "id": 3352,
    "code": "A = 12;B = 4\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "2543": {
    "id": 2543,
    "code": "N = {'9', '4', '1', '7'}\nif '1' in N and '9' in N and '7' in N and '4' in N:\n    print('YES')\nelse:\n    print('NO')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "7776": {
    "id": 7776,
    "code": "N = 3;K = 3\nA = [1, 2, 3]\ni=A.index(1)+1\nif i<=K or i>=N-K:\n    ans=(N-K)//(K-1)+1 if (N-K)%(K-1)==0 else (N-K)//(K-1)+2\nelse:\n    for a in range(K):\n        if (i-a)%(K-1)==0 and (N-(i+(K-a)))%(K-1)==0:\n            b=0\n        else:\n            b=1\n    front=i//(K-1)\n    back=(N-(i+K))//(K-1)\n    ans=front+back+1+b\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "5338": {
    "id": 5338,
    "code": "import math\nprint((int)(math.ceil((int)(\"5\")/2)))",
    "coverage": [">", ">"]
  },
  "12951": {
    "id": 12951,
    "code": "d = 6\nprint(\"YES\" if d==3 or d==5 or d==7 else \"NO\")",
    "coverage": [">", ">"]
  },
  "10182": {
    "id": 10182,
    "code": "n = 6\nsl = [')', ')', ')', '(', ')', ')']\nmax_k = 0\nnow = 0\nfor s in sl:\n    if s == \"(\":\n        now += 1\n    else:\n        now -= 1\n    max_k = min(now, max_k)\nprint(\"(\" * (-max_k) + \"\".join(sl) + max(now-max_k, 0) * \")\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]
  },
  "18591": {
    "id": 18591,
    "code": "h = 14\nw = 12\nn = 112\nif h >= w:\n  print(-(-n//h))\nelif w > h:\n  print(-(-n//w))",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "13923": {
    "id": 13923,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans=1\nif n==1:\n    print(ans)\n    exit()\nc=0\nfor i in range(n):\n    if i!=n-1:\n        if c==1:\n            if a[i+1]<a[i]:\n                ans+=1\n                c=0\n                continue\n        elif c==2:\n            if a[i+1]>a[i]:\n                ans+=1\n                c=0\n                continue\n        if a[i+1]>a[i]:\n            c=1\n        elif a[i+1]<a[i]:\n            c=2\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "17326": {
    "id": 17326,
    "code": "a = \"D\";b = \"H\"\nif a == \"H\" and b == \"H\":\n  print(\"H\")\nelif a == \"D\" and b == \"D\":\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", "!", ">", "!", "!", ">"]
  },
  "8410": {
    "id": 8410,
    "code": "import itertools\nN = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncsA1 = list(itertools.accumulate(A1))\ncsA2 = list(itertools.accumulate(A2))\nans = A1[0] + csA2[-1]\nfor i in range(N-1):\n    tmp = csA1[i] + (csA2[-1] - csA2[i]) + A2[i]\n    ans = max(ans,tmp)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18121": {
    "id": 18121,
    "code": "S = \"1700\"\nif (int(S[:2]) == 0 and (int(S[2:]) >= 13 or int(S[2:]) == 0)) or   (int(S[2:]) == 0 and (int(S[:2]) >= 13 or int(S[:2]) == 0)) or   (int(S[2:]) >= 13 and int(S[:2]) >= 13):\n    print('NA')\nelif (int(S[:2]) >= 13 and int(S[2:]) < 13) or     (int(S[:2]) == 0 and int(S[2:]) < 13):\n    print('YYMM')\nelif (int(S[2:]) >= 13 and int(S[:2]) < 13) or     (int(S[2:]) == 0 and int(S[:2]) < 13):\n    print('MMYY')\nelse:\n    print('AMBIGUOUS')",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "12895": {
    "id": 12895,
    "code": "x = 6\nY = set([7,5,3])\nif x in Y:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "5671": {
    "id": 5671,
    "code": "n = 5\nans=divmod(n,2)\nA=ans[0]+ans[1]\nprint(A)",
    "coverage": [">", ">", ">", ">"]
  },
  "3364": {
    "id": 3364,
    "code": "a = 12;b = 4\nprint(max(0,a-2*b))",
    "coverage": [">", ">"]
  },
  "4036": {
    "id": 4036,
    "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\na = 60*h2 + m2\nb = 60*h1 + m1\nprint(a-b-k)",
    "coverage": [">", ">", ">", ">"]
  },
  "38": {
    "id": 38,
    "code": "S = ['a']\nL = len(S)\nK = 25\nidx = 0\nwhile K > 0:\n    if S[idx] == \"a\" and idx < L-1:\n        idx += 1\n        continue\n    k = 123 - ord(S[idx])\n    if k > K:\n        if idx < L-1:\n            idx += 1\n        else:\n            t = chr(ord(S[idx])+(K%26))\n            S[idx] = t\n            K = 0\n    else:\n        K -= k\n        S[idx] = \"a\"\n        if idx < L-1:\n            idx += 1\nprint(\"\".join(S))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "17114": {
    "id": 17114,
    "code": "a = \"D\";b = \"D\"\nif a == \"H\" and b == \"H\" or a == \"D\" and b == \"D\":\n    print(\"H\")\nelse:\n    print(\"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "6947": {
    "id": 6947,
    "code": "H = 10;N = 3\nA = [4, 5, 6]\nif sum(A) < H:\n    print(\"No\")\nelse:\n    print(\"Yes\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "8082": {
    "id": 8082,
    "code": "N = 3;K = 3\nA = [1, 2, 3]\npos = A.index(1)\ncount = 0\nnum_forward = pos  \nnum_backward = N - pos - 1  \nrest = num_forward % -(K - 1)\nnum_backward += rest\nwhile num_forward > 0:  \n    num_forward -= K - 1\n    count += 1\nwhile num_backward > 0:  \n    num_backward -= K - 1\n    count += 1\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "965": {
    "id": 965,
    "code": "N = \"111\"\nprint(str(int(N[0]) + 1) * 3 if int(N[0] * 3) < int(N) else N[0] * 3)",
    "coverage": [">", ">"]
  },
  "12129": {
    "id": 12129,
    "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(1 if m1!=m2 else 0)",
    "coverage": [">", ">", ">"]
  },
  "4276": {
    "id": 4276,
    "code": "h = 10;m = 0;hh = 12;mm = 0;k = 120\nx = hh*60-h*60+mm-m\nprint(x-k)",
    "coverage": [">", ">", ">"]
  },
  "17773": {
    "id": 17773,
    "code": "S = \"1700\"\na=int(S[:2])\nb=int(S[2:])\nif 0<a<=12 and b==0 or 0<a<=12 and b>12:\n  print(\"MMYY\")\nelif 0<a<=12 and 0<b<=12:\n  print(\"AMBIGUOUS\")\nelif 0<b<=12 and a==0 or 0<b<=12 and a>12:\n  print(\"YYMM\")\nelse:\n  print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "3644": {
    "id": 3644,
    "code": "a = 12;b = 4\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "17095": {
    "id": 17095,
    "code": "a = \"D\";b = \"H\"\nif a==\"H\":\n  print(b)\nelse:\n  if b==\"H\":\n    print(\"D\")\n  else:\n    print(\"H\")",
    "coverage": [">", ">", "!", "!", ">", ">", "!", "!"]
  },
  "6079": {
    "id": 6079,
    "code": "x = 5\ny = int(x / 2)\nz = x % 2\nif z == 0:\n    print(y)\nelse:\n    print(y + 1)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "18830": {
    "id": 18830,
    "code": "h = 14\nw = 12\nn = 112\nr = max(h,w)\ncount = 0\nx = 0\nwhile x < n:\n    count += 1\n    x += r\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8219": {
    "id": 8219,
    "code": "N = 3;K = 3\nA = [1, 2, 3]\nprint(((N-1)+(K-2))//(K-1))",
    "coverage": [">", ">", ">"]
  },
  "8804": {
    "id": 8804,
    "code": "n = 5\ncandy_map = []\ncandy_map.append(list(map(int, \"3 2 2 4 1\".split())))\ncandy_map.append(list(map(int, \"1 2 2 2 1\".split())))\nans = 0\nfor i in range(n):\n    upper = sum(candy_map[0][:i])\n    lower = sum(candy_map[1][i+1:])\n    Sum = upper + lower + candy_map[0][i] + candy_map[1][i]\n    ans = max(ans, Sum)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "15731": {
    "id": 15731,
    "code": "x = 12;y = 3;z = 1\nx -= z\nprint(x // (y + z))",
    "coverage": [">", ">", ">"]
  },
  "7391": {
    "id": 7391,
    "code": "h = 10;n = 3\nprint(\"Yes\" if sum(map(int, \"4 5 6\".split())) >= h else \"No\")",
    "coverage": [">", ">"]
  },
  "7412": {
    "id": 7412,
    "code": "h = 20;n = 3\na = [4, 5, 6]\nif sum(a) >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "18135": {
    "id": 18135,
    "code": "s = \"0112\"\nhead = s[:2]\ntail = s[2:]\nresult = ['MMYY', 'YYMM', 'AMBIGUOUS', 'NA']\njudge = [0, 0]\nmonths = [f'{m:02}' for m in range(1, 13)]\nif head in months:\n    judge[0] += 1\nif tail in months:\n    judge[1] += 1\nif sum(judge) == 2:\n    print(result[2])\nelif sum(judge) == 0:\n    print(result[3])\nelse:\n    print(result[judge.index(1)])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "8998": {
    "id": 8998,
    "code": "import itertools\nif __name__ == \"__main__\":\n    a = 1\n    b = 2\n    c = 4\n    d = 8\n    e = 9\n    k = 15\n    l_an = [a, b, c, d, e]\n    ret = \"Yay!\"\n    for i in list(itertools.combinations(l_an, 2)):\n        if i[1] - i[0] > k:\n            ret = \":(\"\n            break\n    print(ret)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "3510": {
    "id": 3510,
    "code": "A = 20;B = 30\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "12804": {
    "id": 12804,
    "code": "x = \"5\"\nprint('YES' if x in '357' else 'NO')",
    "coverage": [">", ">"]
  },
  "2295": {
    "id": 2295,
    "code": "N = 100;A = 100;B = 100\nma = min(A,B)\nmi = max(0,(A+B)-N)\nprint(\"{} {}\".format(ma,mi))",
    "coverage": [">", ">", ">", ">"]
  },
  "16847": {
    "id": 16847,
    "code": "a = \"D\";b = \"D\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n    print('H')\nelse:\n    print('D')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "4799": {
    "id": 4799,
    "code": "s = \"smiles\"\nnum = len(s)\nnumS = str(num - 2)\nprint(s[0] + numS + s[-1])",
    "coverage": [">", ">", ">", ">"]
  },
  "11540": {
    "id": 11540,
    "code": "from sys import stdin\nimport sys\nimport math\nfrom functools import reduce\nimport functools\nimport itertools\nfrom collections import deque,Counter,defaultdict\nfrom operator import mul\nimport copy\nimport heapq\nsys.setrecursionlimit(10**6)\nINF =  float(\"inf\")\nimport bisect\nS = \"SUN\"\nif S == \"SUN\":\n    print(7)\nelif S == \"MON\":\n    print(6)\nelif S == \"TUE\":\n    print(5)\nelif S == \"WED\":\n    print(4)\nelif S == \"THU\":\n    print(3)\nelif S == \"FRI\":\n    print(2)\nelif S == \"SAT\":\n    print(1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "1182": {
    "id": 1182,
    "code": "n = 111\nwhile True:\n  n = str(n)\n  if n[0] == n[1] == n[2]:\n    break\n  n = int(n) + 1\nprint(n)",
    "coverage": [">", ">", ">", ">", ">", "!", ">"]
  },
  "6974": {
    "id": 6974,
    "code": "import sys\ninput = sys.stdin.readline\nH = 211;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if sum(A)>=H else 'No')",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "15708": {
    "id": 15708,
    "code": "import math\nX = 100000;Y = 1;Z = 1\nans=0\nans=math.floor((X-Z)/(Y+Z))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "7438": {
    "id": 7438,
    "code": "H = 211;N = 5\nspecial_move = [31, 41, 59, 26, 53]\nif H <= sum(special_move):\n    result = 'Yes'\nelse:\n    result = 'No'\nprint(result)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "14545": {
    "id": 14545,
    "code": "n = 3;p = 0\na = [1, 1, 1]\nfor i in range(n):a[i]%=2\no=a.count(1)\nz=n-o\nif o==0:\n  if p==0:print(2**z)\n  else:print(0)\nelse:\n  print(2**(n-1))",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]
  },
  "15321": {
    "id": 15321,
    "code": "x = 64146;y = 123;z = 456\nprint((x - 1 * z) // (y + z))",
    "coverage": [">", ">"]
  },
  "1583": {
    "id": 1583,
    "code": "N = 10;A = 3;B = 5\nC = A + B - N\nif C < 0:\n    C = 0\nprint(min(A, B), C)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "14950": {
    "id": 14950,
    "code": "import math\nN = 3;P = 0\nA = [1, 1, 1]\ndiv = 0\nfor a in A:\n  if a % 2 == 1:\n    div += 1\nans = 0\nmlt = 2 ** (N-div)\nif P == 0:\n  for i in range(0, div+1, 2):\n    cmb = math.factorial(div) // (math.factorial(div-i) * math.factorial(i))\n    ans += cmb * mlt\nelse:\n  for i in range(1, div+1, 2):\n    cmb = math.factorial(div) // (math.factorial(div-i) * math.factorial(i))\n    ans += cmb * mlt\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "14375": {
    "id": 14375,
    "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nlast = 0\nans = 1\nfor i in range(N - 1):\n    diff = A[i] - A[i + 1]\n    if last == 0:\n        if diff > 0:\n            last = 1\n        elif diff < 0:\n            last = -1\n    elif last * diff < 0:\n        ans += 1\n        last = 0\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16160": {
    "id": 16160,
    "code": "n = 5\nA = [6, 9, 4, 2, 11]\nmaxA = max(A)\nabs_min = 10**9\nA.remove(maxA)\nfor a in A:\n  if abs_min > abs(maxA/2 - a):\n    abs_min = abs(maxA/2 - a)\n    r = a\nprint(maxA, r)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2790": {
    "id": 2790,
    "code": "s = \"1111111111\"\nminDiff = abs(int(s[:3]) - 753)\nfor i in range(1, len(s) - 2):\n    minDiff = min(minDiff, abs(int(s[i:i+3]) - 753))\nprint(minDiff)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "5251": {
    "id": 5251,
    "code": "s = \"internationalization\"\nprint(f\"{s[0]}{len(s)-2}{s[-1]}\")",
    "coverage": [">", ">"]
  },
  "538": {
    "id": 538,
    "code": "import itertools\ns = \"xyz\"\nK = 4\nalp = list('abcdefghijklmnopqrstuvwxyz')\nindex_list = [alp.index(s[i]) for i in range(len(s))]\ncnt_list = []\nfor j in index_list:\n    if j > 0:\n        cnt_list.append(26-j)\n    else:\n        cnt_list.append(0)\ns_list = list(s)\nif sum(cnt_list) <= K:\n    num = (K - sum(cnt_list)) % 26\n    l = \"a\" * (len(s)-1) + alp[num]\n    print(l)\nelse:\n    i = 0\n    for i in range(len(s)):\n        if i == len(s)-1:\n            if K >= cnt_list[i]:\n                num = (K - cnt_list[i]) % 26\n                s_list[i] = alp[num]\n            else:\n                s_list[i] = alp[K-cnt_list[i]]\n        elif K >= cnt_list[i]:\n            K -= cnt_list[i]\n            s_list[i] = 'a'\n        else:\n            pass\n    ans = ''.join(s_list)\n    print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "803": {
    "id": 803,
    "code": "x=7\nans=1\nk = 101\nif k%2==0 or k%5==0:\n  print(-1)\nelse:\n  for i in range(1,k):\n    if x%k==0:\n      break\n    x=(x*10+7)%k\n    ans+=1\n  print(ans)",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "8890": {
    "id": 8890,
    "code": "n = 1\na = [2]\nb = [3]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))",
    "coverage": [">", ">", ">", ">"]
  },
  "11712": {
    "id": 11712,
    "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\ns = \"SAT\"\nd = {\"SUN\": 7, \"MON\": 6, \"TUE\": 5,\"WED\": 4, \"THU\": 3,\"FRI\":2,\"SAT\":1}\nprint(d[s])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "18668": {
    "id": 18668,
    "code": "H = 3\nW = 7\nN = 10\nprint(min(-(-N//H), -(-N//W)))",
    "coverage": [">", ">", ">", ">"]
  },
  "12948": {
    "id": 12948,
    "code": "n = 5\nprint([\"NO\",\"YES\"][n in {3,5,7}])",
    "coverage": [">", ">"]
  },
  "17176": {
    "id": 17176,
    "code": "ab = \"H H\"\nif ab.count(\"D\")==1:\n    print(\"D\")\nelse:\n    print(\"H\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "18601": {
    "id": 18601,
    "code": "import math\nH = 2\nW = 100\nN = 200\nif H >= W:\n    print(math.ceil(N / H))\nelse:\n    print(math.ceil(N / W))",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "2805": {
    "id": 2805,
    "code": "S = \"1111111111\"\nmin_val=10**9\nfor i in range(len(S)-2):\n  temp=abs(753-int(S[i:(i+3)]))\n  min_val=min(min_val,temp)\nprint(min_val)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "4948": {
    "id": 4948,
    "code": "s = \"internationalization\"\nsin = s[1:-1]\nprint(s[0]+str(len(sin))+s[-1])",
    "coverage": [">", ">", ">"]
  },
  "10614": {
    "id": 10614,
    "code": "a = 100;b = 50;k = 4\nMin=min(a,b)\nl=[]\nfor i in range(Min,0,-1):\n  if a%i==0 and b%i==0:\n    l.append(i)\nprint(l[k-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "8625": {
    "id": 8625,
    "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor x in range(N):\n    C = A[0:x+1] + B[x:N]\n    n = sum(C)\n    ans = max(ans, n)\nprint(ans) ",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7202": {
    "id": 7202,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\nprint('Yes' if sum(A) >= H else 'No')",
    "coverage": [">", ">", ">"]
  },
  "18038": {
    "id": 18038,
    "code": "s = \"1700\"\nmae = int(s[:2])\nusiro = int(s[2:])\nym = 0\nmy = 0\nif (1 <= usiro <= 12): ym = 1\nif (1 <= mae <= 12): my = 1\nif (ym and my): print(\"AMBIGUOUS\")\nelif (ym): print(\"YYMM\")\nelif (my): print(\"MMYY\")\nelse: print(\"NA\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6203": {
    "id": 6203,
    "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nans=0\nfor i in range(n):\n  d=bisect.bisect_left(a,b[i])\n  e=bisect.bisect_right(c,b[i])\n  ans+=d*(n-e)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7512": {
    "id": 7512,
    "code": "H = 211;N = 5\nattack = [31, 41, 59, 26, 53]\ntotal = sum(attack)\nif H - total <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "19308": {
    "id": 19308,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nN = 999999999\nprint(2 * N if N % 2 == 1 else N)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "8234": {
    "id": 8234,
    "code": "import sys,math\ninput = sys.stdin.readline\nN = 3;K = 3\nA = [1, 2, 3]\nprint(1+math.ceil((N-K)/(K-1)))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "3493": {
    "id": 3493,
    "code": "a = 12;b = 4\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "1403": {
    "id": 1403,
    "code": "N = \"111\"\nmax_digit = N[0]\nmin_tmp = ''\nmax_tmp = ''\nfor i in range(len(N)):\n    min_tmp += max_digit\n    max_tmp += str(int(max_digit) + 1)\nif  int(min_tmp) >= int(N):\n    print(min_tmp)\nelse:\n    print(max_tmp)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "18485": {
    "id": 18485,
    "code": "H = 3\nW = 7\nN = 10\na = max(H,W)\nif N%a == 0:\n    print(N//a)\nelse:\n    print(N//a+1)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "7642": {
    "id": 7642,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\nsum=0\nfor i in range(len(A)):\n    sum+=A[i]\nif H<=sum :\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "3002": {
    "id": 3002,
    "code": "S = \"1111111111\"\nN = len(S)\na = int(S[:2])\nans = 753\nfor i in range(2, N):\n  a = 10 * a + int(S[i])\n  a %= 1000\n  ans = min( ans, abs(753-a) )\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8262": {
    "id": 8262,
    "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nimport bisect\nn = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nix=a.index(1)\ni=math.ceil((n-k)/(k-1))+1\nprint(i)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10": {
    "id": 10,
    "code": "s = ['x', 'y', 'z']\nk = 4\nfor i in range(len(s)):\n  if ord(\"z\")<ord(s[i])+k and s[i]!=\"a\":\n    k =k-(ord(\"z\")-ord(s[i])+1)\n    s[i]=\"a\"\n  if i==len(s)-1 and 0<k:\n    k=k%26\n    s[i]=chr(ord(s[i])+k)\nprint(\"\".join(s))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "11071": {
    "id": 11071,
    "code": "s = \"level\"\nn = len(s)\nl1 = int((n-1)/2)\nl2 = int((n+3)/2)\nif s == s[::-1] and s[:l1] == s[l2-1:n] :   \n    print('Yes')\nelse :\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "16623": {
    "id": 16623,
    "code": "a = \"H\";b = \"H\"\nprint(b if a=='H' else ('H' if b==\"D\" else 'D'))",
    "coverage": [">", ">"]
  },
  "6334": {
    "id": 6334,
    "code": "from bisect import bisect_right, bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nlc = len(C)\nans = 0\nfor b in B:\n    a = bisect_left(A, b)\n    c = len(C) - bisect_right(C, b)\n    ans += a * c\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "6720": {
    "id": 6720,
    "code": "h = 20;n = 3\nlist_a = [4, 5, 6]\nif h <= sum(list_a): print(\"Yes\")\nelse: print(\"No\")",
    "coverage": [">", ">", ">", ">"]
  },
  "13887": {
    "id": 13887,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nif n == 1 or n == 2:\n  ans = 1\nelse:\n  b = [a[0], a[1]]\n  if a[1] - a[0] > 0:\n    f = '+'\n  elif a[1] - a[0] < 0:\n    f = '-'\n  elif a[1] - a[0] == 0:\n    f = ''\n  for i in range(2, n):\n    if f == '+' and a[i] - b[-1] >= 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '+' and a[i] - b[-1] < 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '-' and a[i] - b[-1] <= 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '-' and a[i] - b[-1] > 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '' and a[i] - b[-1] > 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '' and a[i] - b[-1] < 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '' and a[i] - b[-1] == 0:\n      b.append(a[i])\n      f = ''\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "6679": {
    "id": 6679,
    "code": "h = 10;n = 3\na = [4, 5, 6]\na_sum = sum(a)\nif h <= a_sum:\n  print('Yes')\nelse:\n  print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "14087": {
    "id": 14087,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nup = 0\ndown = 0\ni=0\nwhile (i+1)<n:\n    if up == down:\n        if a[i+1] > a[i]:\n            up += 1\n            down = 0\n        elif a[i+1] < a[i]:\n            up = 0\n            down += 1\n        else:\n            up += 1\n            down += 1\n    elif up == 0 and down !=0:\n        if a[i+1] <= a[i]:\n            down += 1\n        else:\n            ans += 1\n            down = 0\n    elif down == 0 and up!= 0:\n        if a[i+1] >= a[i]:\n            up += 1\n        else:\n            ans += 1\n            up = 0\n    i += 1\nprint(ans+1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "19054": {
    "id": 19054,
    "code": "n = 5\nif n%2!=0:\n    print(0)\nelse:\n    ans=n//10\n    n=n//10\n    i=1\n    while(1):\n        ans+=n//(5**i)\n        if n//(5**i)==0:\n            break\n        i+=1\n    print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "6489": {
    "id": 6489,
    "code": "import sys\nimport bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfor i in range(N):\n    mid = B[i]\n    top = bisect.bisect_left(A, mid)\n    down = bisect.bisect_right(C, mid)\n    ans += top * (N - down)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11242": {
    "id": 11242,
    "code": "S = \"SAT\"\nif S == ('SUN'):\n    print(7)\nelif S == ('MON'):\n    print(6)\nelif S == ('TUE'):\n    print(5)\nelif S == ('WED'):\n    print(4)\nelif S == ('THU'):\n    print(3)\nelif S == ('FRI'):\n    print(2)\nelif S == ('SAT'):\n    print(1)\nelse:\n    print('\u5165\u529b\u306b\u8aa4\u308a\u304c\u3042\u308a\u307e\u3059\u3002SUN,MON,TUE,WED,THU,FRI,SAT\u306e\u3044\u305a\u308c\u304b\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002')",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "17920": {
    "id": 17920,
    "code": "S = \"0112\"\nif int(S[:2]) == 0 and 0 < int(S[2:]) <= 12:\n  print(\"YYMM\")\nelif int(S[2:]) == 0 and 0 < int(S[:2]) <= 12:\n  print(\"MMYY\")\nelif int(S[:2]) == 0 or int(S[2:]) == 0 or (int(S[:2]) > 12 and int(S[2:]) > 12):\n  print(\"NA\")\nelif int(S[:2]) > 12 and int(S[2:]) <= 12:\n  print(\"YYMM\")\nelif int(S[:2]) <= 12 and int(S[2:]) > 12:\n  print(\"MMYY\")\nelse:\n  print(\"AMBIGUOUS\")",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "11857": {
    "id": 11857,
    "code": "n = 11;m = 30\nx = 12;y = 1\nif n!=x:\n    print(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "4667": {
    "id": 4667,
    "code": "inpuStr = \"smiles\"\nprint(f'{inpuStr[0]}{len(inpuStr[0:-2])}{inpuStr[-1]}')",
    "coverage": [">", ">"]
  },
  "18654": {
    "id": 18654,
    "code": "import math\nH = 14\nW = 12\nl = max([H, W])\nN = 112\nprint(math.ceil(N/l))",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "19087": {
    "id": 19087,
    "code": "n = 12\nans=0\nif n%2==1:\n  print(ans)\nelse:\n  i=10\n  while n>i-1:\n    ans+=n//i\n    i*=5\n  print(ans)",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]
  },
  "15740": {
    "id": 15740,
    "code": "X = 64146;Y = 123;Z = 456\nans = X//(Y+Z)\nif X%(Y+Z) >= Z:\n    print(ans)\nelse:\n    print(ans-1)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "1254": {
    "id": 1254,
    "code": "N = \"750\"\nif int(N) > int(N[0]*3):\n    print(str((int(N[0])+1))*3)\nelse:\n    print(N[0]*3)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "16357": {
    "id": 16357,
    "code": "N = 2\nA = [100, 0]\nA.sort()\nn = A[-1]\nr_=n/2\na_before=''\nfor a in A[:-1]:\n    if a >= r_:\n        break\n    a_before = a\nif abs(r_-a) >= abs(r_-a_before):\n    r = a_before\nelse:\n    r = a\nprint(n,r)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "11243": {
    "id": 11243,
    "code": "S = \"SUN\"\nif S == ('SUN'):\n    print(7)\nelif S == ('MON'):\n    print(6)\nelif S == ('TUE'):\n    print(5)\nelif S == ('WED'):\n    print(4)\nelif S == ('THU'):\n    print(3)\nelif S == ('FRI'):\n    print(2)\nelif S == ('SAT'):\n    print(1)\nelse:\n    print('\u5165\u529b\u306b\u8aa4\u308a\u304c\u3042\u308a\u307e\u3059\u3002SUN,MON,TUE,WED,THU,FRI,SAT\u306e\u3044\u305a\u308c\u304b\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002')",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "7030": {
    "id": 7030,
    "code": "h = 211;n = 5\na = map(int, \"31 41 59 26 53\".split())\nprint('Yes' if h <= sum(a) else 'No')",
    "coverage": [">", ">", ">"]
  },
  "4136": {
    "id": 4136,
    "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nS = H1*60+M1\nG = H2*60+M2\np = G-S\nif p-K < 0:\n  print (0)\nelse:\n  print (p-K)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "9541": {
    "id": 9541,
    "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3]='8'\nprint(''.join(s))",
    "coverage": [">", ">", ">"]
  },
  "5741": {
    "id": 5741,
    "code": "n = 2\nif n % 2 == 0:\n    b = n // 2\nelse:\n    b = n // 2 + 1\nprint(b)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "18869": {
    "id": 18869,
    "code": "N = 12\nans = 0\nif N % 2 == 1:\n  print(0)\n  exit()\nwhile N:\n  N //= 5\n  ans += N // 2\nprint(ans)",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "5963": {
    "id": 5963,
    "code": "N = 2\nprint(max(N//2, (N+1)//2))",
    "coverage": [">", ">"]
  },
  "18344": {
    "id": 18344,
    "code": "import math\nh = 3\nw = 7\nn = 10\nif h < w:\n    a = w\nelse:\n    a = h\nprint(math.ceil(n/a))",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "17568": {
    "id": 17568,
    "code": "S = 1905\na = S // 100\nb = S % 100\nif 0 < a < 13 :\n  if 0 < b < 13:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if 0 < b < 13:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "10288": {
    "id": 10288,
    "code": "n = 8\ns = \"))))((((\"\ns_ = s\nwhile s_.count('()'):\n    s_ = s_.replace('()', '')\nl = s_.count(')')\nr = len(s_) - l\nans = '(' * l + s + ')' * r\nprint(ans)",
    "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">"]
  },
  "2962": {
    "id": 2962,
    "code": "S = \"35753\"\nm = 0\nfor i in range(len(S)):\n    if i == 0:\n        m = abs(int(S[i: i + 3]) - 753)\n    elif i == len(S) - 2:\n        break\n    else:\n        m = min(m, abs(int(S[i: i + 3]) - 753))\nprint(m)    ",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]
  },
  "17287": {
    "id": 17287,
    "code": "a = \"D\";b = \"H\"\nif a == 'H' and b == 'H':\n  print('H')\nelif a == 'D' and b == 'D':\n  print('H')\nelse:\n  print('D')",
    "coverage": [">", ">", "!", ">", "!", "!", ">"]
  },
  "19476": {
    "id": 19476,
    "code": "s = 3\nprint(s if s%2 == 0 else s*2)",
    "coverage": [">", ">"]
  },
  "12242": {
    "id": 12242,
    "code": "a = \"atcoder\"\nb=len(a)\nc=(b-1)/2\nd=(b+1)/2\nif a[:int(c)]==a[int(d):]:\n\tprint(\"Yes\")\nelse:\n  \tprint(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14684": {
    "id": 14684,
    "code": "n = 1;p = 1\neven_count = 1\nodd_count = n - even_count\nif odd_count == 0:\n  print(0 if p == 1 else 2 ** even_count)\nelse:\n  print((2 ** even_count) * (2 ** (odd_count - 1)))",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "19162": {
    "id": 19162,
    "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\nn = 12\nif n & 1:\n    print(0)\n    exit()\nans = 0\nn //= 2\nwhile n:\n    ans += n // 5\n    n //= 5\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12724": {
    "id": 12724,
    "code": "n = 5\nflag = False\nif n == 7:\n    flag = True\nif n == 5:\n    flag = True\nif n == 3:\n    flag = True\nif( flag ):\n    print('YES')\nelse:\n    print('NO') ",
    "coverage": [">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!"]
  },
  "16238": {
    "id": 16238,
    "code": "n = 5\nlst = [6, 9, 4, 2, 11]\nm = max(lst)\nr = m//2\nk = float('inf')\nfor i in range(n):\n  if lst[i] != m and abs(r-lst[i]) < abs(r-k):\n    k = lst[i]\nprint(m, k)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16668": {
    "id": 16668,
    "code": "a = \"H\";b = \"H\"\nif a==\"H\":\n  print(b)\nelse:\n  print([\"H\",\"D\"][b==\"H\"])",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "1508": {
    "id": 1508,
    "code": "n = 750\nans = 111\nwhile ans < n:\n    ans += 111\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "19042": {
    "id": 19042,
    "code": "n = 5\nans = 0\ndeno = 10\nif n % 2 == 1:\n    pass\nelse:\n    while n//deno > 0:\n        ans += n//deno\n        deno *= 5\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "4686": {
    "id": 4686,
    "code": "s = \"xyz\"\nprint(f'{s[0]}{len(s) - 2}{s[-1]}')",
    "coverage": [">", ">"]
  },
  "17971": {
    "id": 17971,
    "code": "S = \"0112\"\nif int(S[0]+S[1])>0 and int(S[0]+S[1])<13:\n  if int(S[2]+S[3])>0 and int(S[2]+S[3])<13:\n    print(\"AMBIGUOUS\")\n  else:\n    print(\"MMYY\")\nelse:\n  if int(S[2]+S[3])>0 and int(S[2]+S[3])<13:\n    print(\"YYMM\")\n  else:\n    print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "3343": {
    "id": 3343,
    "code": "a = \"12\";b = \"4\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)",
    "coverage": [">", ">", ">", ">", ">", "!", ">"]
  },
  "17467": {
    "id": 17467,
    "code": "S = \"0112\"\ns1,s2=int(S[:2]),int(S[2:])\nif 1<=s1<=12 and 1<=s2<=12:print('AMBIGUOUS')\nelif 1<=s1<=12:print('MMYY')\nelif 1<=s2<=12:print('YYMM')\nelse:print('NA')",
    "coverage": [">", ">", ">", "!", "!", "!"]
  },
  "18938": {
    "id": 18938,
    "code": "import math\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nimport bisect\nn = 12\na=5\nans=0\nif n%2==1:\n  print(0)\n  exit()\nwhile True:\n    if a>n:\n        break\n    ans+=(n//a)//2\n    a*=5\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18352": {
    "id": 18352,
    "code": "H = 2\nW = 100\nN = 200\ncnt=wcnt=hcnt=0\nwhile N>0:\n    a = max(H-hcnt, W-wcnt)\n    N -= a\n    cnt+=1\n    if a==W:\n        H-=1\n        hcnt+=1\n    elif a==H:\n        W-=1\n        wcnt+=1\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "4086": {
    "id": 4086,
    "code": "sh = 10;sm = 0;eh = 15;em = 0;t = 30\nprint((eh-sh)*60+em-sm-t)",
    "coverage": [">", ">"]
  },
  "4072": {
    "id": 4072,
    "code": "h = 10;m = 0;a = 15;b = 0;k = 30\nh_to_min = h * 60\na_to_min = a * 60\nre1 = a_to_min - h_to_min\nre2 = b - m\nre = re1 + re2\nprint(re-k)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "15540": {
    "id": 15540,
    "code": "A = 12;B = 3;C = 1\nans = 0\nif B + C * 2 > A:\n    print(ans)\n    exit()\nA -= B + C * 2\nans += 1\nwhile A // (B+C) >= 1:\n    A -= B + C \n    ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "1968": {
    "id": 1968,
    "code": "N = 100;A = 100;B = 100\nprint(min(A,B),max(A+B-N,0))",
    "coverage": [">", ">"]
  },
  "12891": {
    "id": 12891,
    "code": "sinchi = [7, 5, 3]\nano = 6\nif ano in sinchi:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "15596": {
    "id": 15596,
    "code": "X = 13;Y = 3;Z = 1\nprint(X//(Y+Z) if (X%(Y+Z))>=Z else (X//(Y+Z))-1)",
    "coverage": [">", ">"]
  },
  "733": {
    "id": 733,
    "code": "n = 2\nx = 7\nans = 1\nfor i in range(3*n):\n  if x%n==0:\n    break\n  ans+=1\n  x= x*10 + 7\n  x=x%n\nif ans < 3*n:\n  print(ans)\nelse:\n  print(-1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "5639": {
    "id": 5639,
    "code": "N = 2\npage = int((N - 1 + 2) / 2)\nprint(page)",
    "coverage": [">", ">", ">"]
  },
  "17115": {
    "id": 17115,
    "code": "a = \"H\";b = \"H\"\nif a == 'H':\n\tprint(b)\nelse:\n\tprint(\"H\" if b == 'D' else \"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "11304": {
    "id": 11304,
    "code": "s = \"SAT\"\nif s==\"SUN\":print(7)\nelif s==\"MON\":print(6)\nelif s==\"TUE\":print(5)\nelif s==\"WED\":print(4)\nelif s==\"THU\":print(3)\nelif s==\"FRI\":print(2)\nelif s==\"SAT\":print(1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9782": {
    "id": 9782,
    "code": "N = 6\nS = \")))())\"\nl = 0\ncnt = 0\nfor c in S:\n    if c == \"(\":\n        cnt += 1\n    else:\n        if cnt == 0:\n            l += 1\n        else:\n            cnt -= 1\nans = \"(\"*l + S + \")\"*cnt\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "12513": {
    "id": 12513,
    "code": "A = 8;B = 12;K = 2\ncount = 0\nfor i in range(1,max(A,B)+1)[::-1]:\n  if A%i==0 and B%i==0:\n    count += 1\n    if count == K:\n      break\nprint(i)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6142": {
    "id": 6142,
    "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt = 0\nfor j in range(n):\n    ai = bisect.bisect_left(a,b[j])\n    ci = n-bisect.bisect_right(c,b[j])\n    cnt += ai*ci\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "466": {
    "id": 466,
    "code": "s = \"codefestival\";k = 100\nans = []\na = ord('z') + 1\nfor i in s:\n    if a - ord(i) <= k and i != 'a':\n        k -= a - ord(i)\n        ans.append(ord('a'))\n    else:\n        ans.append(ord(i))\nans[-1] += k % 26\nif ans[-1] >= a:\n    ans[-1] -= 26\nprint(*map(chr, ans), sep='')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "14464": {
    "id": 14464,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nprev = A[0]\nisUp = True\nisDown = True\nans = 0\nfor a in A[1:]:\n  if prev == a:\n    pass\n  elif prev < a:\n    isDown = False\n    if not isUp:\n      isUp = True\n      isDown = True\n      ans += 1\n  elif a < prev:\n    isUp = False\n    if not isDown:\n      isUp = True\n      isDown = True\n      ans += 1\n  prev = a\nprint(ans+1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10452": {
    "id": 10452,
    "code": "import math\na = 100;b = 50;c = 4\nd=math.gcd(a,b)\nfor i in range(d,0,-1):\n  if d%i==0:\n    c-=1\n    if c==0:\n      print(i)\n      break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4629": {
    "id": 4629,
    "code": "s = \"xyz\"\nz=str(len(s)-2)\nprint(str(s[0])+z+str(s[-1]))",
    "coverage": [">", ">", ">"]
  },
  "4531": {
    "id": 4531,
    "code": "l = \"internationalization\"\nprint(l[0]+str(len(l)-2)+l[-1])",
    "coverage": [">", ">"]
  },
  "3512": {
    "id": 3512,
    "code": "import sys\nA = 20;B = 15\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "4606": {
    "id": 4606,
    "code": "s = \"internationalization\"\nprint(f\"{s[0]}{len(s[1:-1])}{s[-1]}\")",
    "coverage": [">", ">"]
  },
  "7330": {
    "id": 7330,
    "code": "h = 20;n = 3\nal = [4, 5, 6]\nprint(['No','Yes'][sum(al)>=h])",
    "coverage": [">", ">", ">"]
  },
  "12507": {
    "id": 12507,
    "code": "A = 1;B = 1;K = 1\nI = []\nif A < B:\n    C = A\nelse:\n    C = B\nfor i in range(1, C+1):\n    if (A % i == 0) & (B % i == 0):\n        I.append(i)\nprint(I[-K])",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]
  },
  "16902": {
    "id": 16902,
    "code": "lst = ['H', 'H']\na = lst[0]\nb = lst[1]\nif a == 'H': \n   if b == 'H': \n      print('H')\n   elif b == 'D': \n      print('D')\nelif a == 'D': \n   if b == 'H': \n      print('D')\n   elif b == 'D': \n      print('H')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "7962": {
    "id": 7962,
    "code": "n = 3;k = 3\nar = [1, 2, 3]\nfrom math import ceil\npos=ar.index(1)\na=n-1-pos\nb=pos\na1=(a//(k-1))\na2=b//(k-1)\nc=ceil((n-1-((a1+a2)*(k-1)))/(k-1))\nprint(a1+a2+c)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12124": {
    "id": 12124,
    "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nif d1 == 31:\n    print(\"1\")\nelif d1 == 30 and d2 == 1:\n    print(\"1\")\nelif d1 == 28 and m1 == 2:\n    print(\"1\")\nelse:\n    print(\"0\")",
    "coverage": [">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]
  },
  "4240": {
    "id": 4240,
    "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nA = (H1 * 60) + M1\nB = (H2 * 60) + M2\nC = B - A\nprint(C-K)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "480": {
    "id": 480,
    "code": "s = \"codefestival\"\nk = 100\nres=[]\nfor i in range(len(s)):\n    num = ord(s[i])-97\n    if i==len(s)-1:\n        res.append(chr((num+k)%26+97))\n    elif s[i] == \"a\":\n        res.append(\"a\")\n    elif 26 - num <= k:\n        res.append(\"a\")\n        k-=26-num\n    else:\n        res.append(s[i])\nprint(\"\".join(res))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "9789": {
    "id": 9789,
    "code": "from collections import deque\nN = 8\nclosings = [')', ')', ')', ')', '(', '(', '(', '(']\nr_cnt = l_cnt = 0\nfor closing in closings:\n  if closing == ')':\n    if l_cnt > 0:\n      l_cnt -= 1\n    else:\n      r_cnt += 1\n  else:\n    l_cnt += 1\nanswer = ['(' for _ in range(r_cnt)] + closings + [')' for _ in range(l_cnt)] \nprint(''.join(answer))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "15151": {
    "id": 15151,
    "code": "n = 3;p = 0\nA = [1, 1, 1]\no = 0\nfor a in A:\n\tif a % 2:\n\t\to += 1\ne = n - o\nif o == 0 and p == 1:\n\tprint(0)\nelse:\n\tprint(2**e * 2**max(0, o - 1))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "15517": {
    "id": 15517,
    "code": "x = 13;y = 3;z = 1\nans = x // (y+z)\nif x < ans * (y+z) + z:\n    ans -= 1\nprint(ans)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "1240": {
    "id": 1240,
    "code": "for i in range(int(\"111\"),1000):\n  if i%111==0:\n    print(i)\n    break",
    "coverage": [">", ">", ">", ">"]
  },
  "275": {
    "id": 275,
    "code": "s = \"a\"\nk = 25\nn=len(s)\nnum=[0]*n\nfor i in range(n):\n    if s[i]!=\"a\":\n        num[i]=123-ord(s[i])\nif sum(num)>=k:\n    ans=\"\"\n    for i in range(n-1):\n        if k>=num[i]:\n            k-=num[i]\n            ans+=\"a\"\n        else:\n            ans+=s[i]\n    if k>=num[-1]:\n        ans+=\"a\"\n    else:\n        ans+=chr(97+((ord(s[-1])-97+k)%26))\nelse:\n    k-=sum(num)\n    ans=\"a\"*(n-1)\n    ans+=chr(97+(k%26))\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18683": {
    "id": 18683,
    "code": "h = 3\nw = 7\nn = 10\nlines = 0\nact = 0\nif h <= w:\n    lines = h\n    act = w\nelse:\n    lines = w\n    act = h\ndraw = 0 \nfor i in range(lines):\n    if n <= (i + 1) * act:\n        print(i + 1)\n        break",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3623": {
    "id": 3623,
    "code": "a = 12;b = 4\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "13926": {
    "id": 13926,
    "code": "n = 6\nans = 1\na, b = False, False\nx = [1, 2, 3, 2, 2, 1]\nfor i in range(1, n):\n    if x[i] > x[i - 1]:\n        a = True\n    if x[i] < x[i - 1]:\n        b = True\n    if a and b:\n        a, b = False, False\n        ans += 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13704": {
    "id": 13704,
    "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nif H1 == H2:\n    ans = M2 - M1\nelse:\n    ans = (H2 - H1) * 60\n    ans += M2 - M1\nans -= K\nprint(ans)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "9158": {
    "id": 9158,
    "code": "wrong_date = \"2017/01/07\"\nexact_date = wrong_date.replace('7', '8', 1)\nprint(exact_date)",
    "coverage": [">", ">", ">"]
  },
  "4157": {
    "id": 4157,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nans=0\nif m1>m2: ans=(h2-h1-1)*60+60-m1+m2\nelse: ans=(h2-h1)*60+m2-m1\nprint(ans-k)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "4633": {
    "id": 4633,
    "code": "s = \"internationalization\"\ns1 = s[0]\ns2 = s[-1]\nl = len(s[1:-1])\nprint(s1+str(l)+s2)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "18363": {
    "id": 18363,
    "code": "h = 14\nw = 12\nn = 112\ncount = 0\nif h < w:\n  a = w\n  b = h\nelse:\n  a = h\n  b = w\nx = int(n/a)\nif n%a != 0:\n  x += 1\nprint(x)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "16514": {
    "id": 16514,
    "code": "n = 2\na = [100, 0]\na.sort()\nma = a[-1]\nmn = float(\"inf\")\nmni = -1\nfor i in range(n-1):\n  if abs(2*a[i]-ma) < mn:\n    mn = abs(2*a[i]-ma)\n    mni = i\nprint(ma,a[mni])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7947": {
    "id": 7947,
    "code": "n = 3;k = 3\na = [1, 2, 3]\nif n == k:\n    cnt = 1\nelse:\n    cnt = (n - 2) // (k-1) + 1\nprint(cnt)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "17098": {
    "id": 17098,
    "code": "li = ['D', 'H']\nif li==[\"H\",\"H\"] or li==[\"D\",\"D\"]:\n    print(\"H\")\nelse:\n    print(\"D\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "446": {
    "id": 446,
    "code": "z=ord('z')\na=ord('a')\nss = \"codefestival\"\ns=list(ss)\nk = 100\nl=len(s)\nfor i in range(l):\n    if (z-ord(s[i])+1<=k)and(s[i]!='a'):\n        k-=z-ord(s[i])+1\n        s[i]='a'\nif k>0:\n    last=(ord(s[-1])+k-a)%26+a\n    s[-1]=chr(last)\nans=''.join(s)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "4745": {
    "id": 4745,
    "code": "s = \"smiles\"\ns=list(s)\nresult=str(s[0])+str(len(s)-2)+str(s[len(s)-1])\nprint(result)",
    "coverage": [">", ">", ">", ">"]
  },
  "10643": {
    "id": 10643,
    "code": "A = 100;B = 50;K = 4\nS=set()\nfor i in range(1,min(A+1,B+1)):\n    if A%i==0 and B%i==0:\n        S.add(i)\nprint(sorted(S)[::-1][K-1])",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "16394": {
    "id": 16394,
    "code": "n = 5\nA = [6, 9, 4, 2, 11]\nx = max(A)\nA.pop(A.index(max(A)))\nans = A[0]\nABS = abs(x//2-A[0])\nfor a in A[1:]:\n    if ABS > abs(x//2-a):\n        ans = a\n        ABS = abs(x//2-a)\nprint(x,ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "13826": {
    "id": 13826,
    "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=0\nup = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        if up == -1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=1\n    elif a[i] > a[i+1]:\n        if up == 1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=-1\nans+=1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "8221": {
    "id": 8221,
    "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nans = 0 - -(n - 1)//(k - 1)\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "13673": {
    "id": 13673,
    "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;s = 30\nm = 60 * (h2 - h1) + (m2 - m1)\nprint(m - s)",
    "coverage": [">", ">", ">"]
  },
  "15287": {
    "id": 15287,
    "code": "x = 13;y = 3;z = 1\nans = 1\ncapa = 0\nwhile True:\n    capa = ans * y + ans * z + z\n    if capa > x:\n        break\n    ans += 1\nprint(ans-1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "19124": {
    "id": 19124,
    "code": "N = 5\nans = 0\nif N % 2 == 1:\n    pass\nelse:\n    two = 0\n    five = 0\n    tmp = 2\n    while tmp <= N:\n        two += N // tmp\n        tmp *= 2\n    tmp = 10\n    while tmp <= N:\n        five += N // tmp\n        tmp *= 5\n    ans = min(two, five)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "19131": {
    "id": 19131,
    "code": "N = 5\nif N%2==1:\n  print(0)\nelse:\n  divide=2\n  count=0\n  while divide<N:\n    divide*=5\n    count+=N//divide\n  print(count)  ",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "4278": {
    "id": 4278,
    "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nT = (H2 - H1) * 60 + (M2 - M1)\nprint(T - K)",
    "coverage": [">", ">", ">"]
  },
  "12435": {
    "id": 12435,
    "code": "s = \"level\"\nn = len(s)\nl = s[:((n-1)//2)]\nr = s[((n+3)//2) -1:]\nif s == s[::-1] and l == l[::-1] and r == r[::-1]:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "9142": {
    "id": 9142,
    "code": "s = \"2017/01/07\"\nS=\"2018\"\nS+=s[4:]\nprint(S)",
    "coverage": [">", ">", ">", ">"]
  },
  "1280": {
    "id": 1280,
    "code": "n = 112\nwhile True:\n    if n%111==0:\n        print(n)\n        break\n    n+=1",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "4261": {
    "id": 4261,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh_m = (h2 - h1)*60\nm = m2 - m1\ntz = h_m + m\nprint(tz-k)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "17121": {
    "id": 17121,
    "code": "S = \"0 0\"\nS = S.replace('D','1')\nS_list = list(map(int,S.split()))\nif  S_list[0] ^ S_list[1] == 0 :\n    result = \"H\"\nelse:\n    result = \"D\"\nprint(result)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "18180": {
    "id": 18180,
    "code": "s = \"0112\"\ns1 = int(s[:2])\ns2 = int(s[2:])\nif 1 <= s1 <= 12 and 1 <= s2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= s1 <= 12:\n    print('MMYY')\nelif 1 <= s2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "19336": {
    "id": 19336,
    "code": "N = 999999999\nprint(N+N%2*N)",
    "coverage": [">", ">"]
  },
  "820": {
    "id": 820,
    "code": "K = 101\nt = 7\nfor i in range(K):\n    if t % K == 0:\n        print(i + 1)\n        break\n    t = (t * 10 + 7) % K\nelse:\n    print(-1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "9044": {
    "id": 9044,
    "code": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\na = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nli = [a,b,c,d,e]\nans = False\nfor i in range(5):\n    for j in range(i + 1, 5):\n        if li[j] - li[i] > k:\n            ans = True\n            break\nif ans:\n    print(\":(\")\nelse:\n    print(\"Yay!\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "5452": {
    "id": 5452,
    "code": "x = 5\nif x % 2 == 0:\n    print(x // 2)\nelse:\n    print(x // 2 + 1)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "17954": {
    "id": 17954,
    "code": "S = \"1700\"\npre = int(S[:2])\nsur = int(S[2:])\nif pre <= 12 and pre > 0 and sur <= 12 and sur > 0:\n    print('AMBIGUOUS')\nelif pre <= 12 and pre > 0:\n    print('MMYY')\nelif sur <= 12 and sur > 0:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "19388": {
    "id": 19388,
    "code": "n = 3\nprint(n+n%2*n)",
    "coverage": [">", ">"]
  },
  "11573": {
    "id": 11573,
    "code": "S = \"SAT\"\nif S=='SUN':\n    print(int(7-0))\nelif S=='MON':\n    print(int(7-1))\nelif S=='TUE':\n    print(int(7-2))\nelif S=='WED':\n    print(int(7-3))\nelif S=='THU':\n    print(int(7-4))\nelif S=='FRI':\n    print(int(7-5))\nelif S=='SAT':\n    print(int(7-6))",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "8513": {
    "id": 8513,
    "code": "N = 1\nl1 = [2]\nl2 = [3]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "15862": {
    "id": 15862,
    "code": "X = 13;Y = 3;Z = 1\np=1;t=Y+2*Z\nwhile t<X:\n  t=t+Y+Z\n  if t>X:\n    break\n  p=p+1\nprint(p)",
    "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]
  },
  "1934": {
    "id": 1934,
    "code": "N = 10;A = 7;B = 5\nboth = min(A, B)\nnone = 0 if A+B-N<0 else A+B-N\nprint(both, none)",
    "coverage": [">", ">", ">", ">"]
  },
  "15555": {
    "id": 15555,
    "code": "x = 100000;y = 1;z = 1\nx -= z\ny += z\nprint(x // y)",
    "coverage": [">", ">", ">", ">"]
  },
  "3345": {
    "id": 3345,
    "code": "a = \"20\";b = \"30\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "11215": {
    "id": 11215,
    "code": "S = \"SUN\"\nif S == 'SUN':\n    a = 0\nelif S == 'MON':\n    a = 1\nelif S == 'TUE':\n    a = 2\nelif S == 'WED':\n    a = 3\nelif S == 'THU':\n    a = 4\nelif S == 'FRI':\n    a = 5\nelif S == 'SAT':\n    a = 6\nanswer = 7 - a\nprint(answer)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "12692": {
    "id": 12692,
    "code": "a = 5\nb = [3,5,7]\nprint(\"YES\" if a in b else \"NO\")",
    "coverage": [">", ">", ">"]
  },
  "8265": {
    "id": 8265,
    "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans = 1\nn -= k\nk -= 1\nif n % k == 0:\n    ans += n // k\nelse:\n    ans += n // k + 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "15684": {
    "id": 15684,
    "code": "import sys\ninput = sys.stdin.readline\nX = 13;Y = 3;Z = 1\nans = 0\nX -= Z\nans += (X // (Y + Z))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10177": {
    "id": 10177,
    "code": "N = 8\nS = \"))))((((\"\nL, R = 0, 0\ncnt = 0\nfor s in S:\n    if s == '(':\n        cnt += 1\n    else:\n        if cnt > 0:\n            cnt -= 1\n        else:\n            L += 1\nR = cnt\nprint(L * '(' + S + R * ')')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "16560": {
    "id": 16560,
    "code": "a = \"H\";b = \"H\"\nif a ==\"H\":\n  print(\"H\") if b ==\"H\" else print(\"D\")\nelse:\n  print(\"D\") if b ==\"H\" else print(\"H\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "10376": {
    "id": 10376,
    "code": "A = 8;B = 12;K = 2\nwari = []\ncount = 0\nfor i in range(1,A+B):\n    if A%i==0 and B%i==0:\n        wari.append(i)\nprint(wari[len(wari)-K])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "8384": {
    "id": 8384,
    "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "5167": {
    "id": 5167,
    "code": "l = \"internationalization\"\nprint(l[0]+str(len(l)-2)+l[-1])",
    "coverage": [">", ">"]
  },
  "1159": {
    "id": 1159,
    "code": "n = 112\nfor i in range(111, 1000, 111):\n    if i >= n:\n        print(i)\n        break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "11525": {
    "id": 11525,
    "code": "a = \"SAT\"\nif a == \"SUN\":\n    print(\"7\")\nelif a == \"MON\":\n    print(\"6\")\nelif a == \"TUE\":\n    print(\"5\")\nelif a == \"WED\":\n    print(\"4\")\nelif a == \"THU\":\n    print(\"3\")\nelif a == (\"FRI\"):\n    print(\"2\")\nelse:\n    print(\"1\")",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "11203": {
    "id": 11203,
    "code": "S = \"SUN\"\ndays=['MON','TUE','WED','THU','FRI','SAT','SUN']\ncnt =days.index('SUN')-days.index(S)\nif cnt==0:\n  print(7)\nelse:\n  print(cnt)",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "18314": {
    "id": 18314,
    "code": "h = 3\nw = 7\nprint((int(\"10\")-1)//max(h,w)+1)",
    "coverage": [">", ">", ">"]
  },
  "17799": {
    "id": 17799,
    "code": "S = \"0112\"\nleft = int(S[:2])\nright = int(S[2:])\nyear_flag = [0, 0]\nif left > 12 or left == 0:\n    year_flag[0] += 1\nif right > 12 or right == 0:\n    year_flag[1] += 1\nif sum(year_flag) == 2:\n    print('NA')\nelif sum(year_flag) == 0:\n    print('AMBIGUOUS')\nelif year_flag[0] == 1:\n    print('YYMM')\nelse:\n    print('MMYY')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "14225": {
    "id": 14225,
    "code": "import sys\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nstate = -1\nfor i in range(1, N):\n    if state == -1:\n        if A[i] < A[i-1]:\n            state = 0\n        elif A[i] > A[i-1]:\n            state = 1\n    elif (state == 0 and A[i] > A[i-1]) or (state == 1 and A[i] < A[i-1]):\n        ans += 1\n        state = -1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7978": {
    "id": 7978,
    "code": "import math,sys\nN = 4;K = 3\nwindow = K - 1\nA = [2, 3, 1, 4]\nl = K\ncount = 1\nif l >= N:\n  print(count)\n  sys.exit()\nwhile l < N:\n  l += K - 1\n  count += 1\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10665": {
    "id": 10665,
    "code": "a = 1;b = 1;k = 1\nans = 0\ncounter = 0\nfor i in range(min(a, b), 0, -1):\n    if a % i == 0 and b % i == 0:\n        counter += 1\n        if counter == k:\n            ans = i\n            break\nprint(i)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2887": {
    "id": 2887,
    "code": "S = \"1234567876\"\nans = 754\nfor i in range(len(S)-2):\n  ans = min(ans,abs(753-int(S[i:i+3])))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "12412": {
    "id": 12412,
    "code": "S = \"akasaka\"\nT=S[:(len(S)-1)//2]\nU=S[(len(S)+3)//2-1:]\nif S==S[::-1]:\n    if T==T[::-1]:\n        if U==U[::-1]:\n            print('Yes')\n        else:print('No')\n    else:print('No')\nelse:print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!"]
  },
  "7052": {
    "id": 7052,
    "code": "h = 20;m = 3\nA = 15\nif h <= A:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "7824": {
    "id": 7824,
    "code": "import math\nN = 8;K = 3\nL = [7, 3, 1, 8, 4, 6, 2, 5]\nprint(math.ceil((N-1)/(K-1)))",
    "coverage": [">", ">", ">", ">"]
  },
  "7134": {
    "id": 7134,
    "code": "H = 211;N = 5\na = [31, 41, 59, 26, 53]\nsum = 0\nfor i in range(N):\n    sum += a[i]\nif sum >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "681": {
    "id": 681,
    "code": "k = 101\nx = 7%k\ncnt = 0\nif k%2 ==0:\n    print('-1')\nelse:\n    while True:\n        cnt += 1\n        if x == 0:\n            print(cnt)\n            break\n        elif cnt == k:\n            print('-1')\n            break\n        else:\n            x = (x*10+7)%k",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "16641": {
    "id": 16641,
    "code": "A = \"H\";B = \"H\"\nif A==B:\n    print('H')\nelse:\n    print('D')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "2848": {
    "id": 2848,
    "code": "S = \"1234567876\"\nS += '0'\nnum_len = 999\nfor i in range(len(S)-3):\n    X = int(S[i:i+3])\n    num_len = min(num_len, abs(753-X))\nprint(num_len)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10352": {
    "id": 10352,
    "code": "a = 8;b = 12;k = 2\nc = 0\ni = max(a,b)\nwhile i > 0:\n    if a % i == 0:\n        if b % i == 0:\n            c += 1\n    if c == k:\n        print(i)\n        break\n    i -= 1",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "14425": {
    "id": 14425,
    "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nb = [0] + a\nc = [(i-j)//abs(i-j) for i, j in zip(a, b) if i != j]\ndel c[0]\nif c:\n  mae=c[0]\n  d=iter(c)\n  for x in d:\n    if x != mae:\n      cnt += 1\n      try:\n        mae = d.__next__()\n      except StopIteration:\n        break\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9492": {
    "id": 9492,
    "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\ns[3]='8'\nprint(\"\".join(s))",
    "coverage": [">", ">", ">"]
  },
  "1384": {
    "id": 1384,
    "code": "a = 112\nfor i in range(10):\n  if i * 111 >= a:\n    print(i * 111)\n    break\n  else:\n    continue",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "11347": {
    "id": 11347,
    "code": "S = \"SUN\"\nday = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\nprint(7 - day.index(S))",
    "coverage": [">", ">", ">"]
  },
  "8830": {
    "id": 8830,
    "code": "NN = 7\nAA1 = [3, 3, 4, 5, 4, 5, 3]\nAA2 = [5, 3, 4, 4, 2, 3, 2]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2181": {
    "id": 2181,
    "code": "Moji = \"100 100 100\"\nListNAB=Moji.split() \nN=int(ListNAB[0])\nA=int(ListNAB[1])\nB=int(ListNAB[2])\nif A>=B:\n  nmax=B\nelif A<B:\n  nmax=A\nif N>A+B:\n  nmin=0\nif N<=(A+B):\n    nmin=A+B-N\nprint(str(nmax)+\" \"+str(nmin))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "14952": {
    "id": 14952,
    "code": "n = 1;p = 1\na = [50]\nodd = [i for i in a if i % 2 == 1]\neven = [i for i in a if i % 2 == 0]\necnt = pow(2, len(even))\nocnt = pow(2, max(len(odd)-1,0))\nprint(0 if (len(odd) == 0 and p == 1) else ecnt * ocnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "12382": {
    "id": 12382,
    "code": "S = \"akasaka\"\nflag = True\nN = len(S)\nfor i in range(N // 2):\n    if S[i] != S[-1 * i-1]:\n        flag = False\nfor i in range((N-1)//2-1):\n    if S[i] != S[(N-1)//2-1-i]:\n        flag = False\nfor i in range((N+3)//2,N-1):\n    if S[i] != S[-1 * i-1]:\n        flag = False\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "10097": {
    "id": 10097,
    "code": "n = 3\ns = \"())\"\ncountr, countl = 0, 0\nfor i in range(n-1, -1, -1):\n    if s[i] == ')': countr += 1\n    elif countr > 0: countr -= 1\ns = '('*countr+s\nn = len(s)\nfor i in range(n):\n    if s[i] == '(': countl += 1\n    elif countl > 0: countl -= 1\ns += ')'*countl\nprint(s)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16109": {
    "id": 16109,
    "code": "a = 20;b = 30\nif a<=(b*2):\n    print(0)\nelse:\n    print(a-(b*2))",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "5821": {
    "id": 5821,
    "code": "n = 5\nprint([n//2+1,n//2][n%2==0])",
    "coverage": [">", ">"]
  },
  "5013": {
    "id": 5013,
    "code": "x = \"x\";y = ['y'];z = \"z\"\nprint(x+str(len(y))+z)",
    "coverage": [">", ">"]
  },
  "7584": {
    "id": 7584,
    "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nprint(\"No\" if sum(a)<h else \"Yes\")",
    "coverage": [">", ">", ">"]
  },
  "5689": {
    "id": 5689,
    "code": "import math\nN = 5\nprint (math.ceil(N/2))",
    "coverage": [">", ">", ">"]
  },
  "13229": {
    "id": 13229,
    "code": "s = \"happy,newyear,enjoy\"\nfor i in range(len(s)):\n    if s[i]==\",\":\n        s=s[:i]+\" \"+s[i+1:]\nprint(s)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "18788": {
    "id": 18788,
    "code": "h = 14\nw = 12\nn = 112\nans = 0\nmax = max(h, w)\nwhile n > 0:\n  n -= max\n  ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9511": {
    "id": 9511,
    "code": "N = \"2017/01/31\"\nN = N.replace(\"2017\",\"2018\")\nprint(N)",
    "coverage": [">", ">", ">"]
  },
  "697": {
    "id": 697,
    "code": "K = 101\ncnt=1\nNum=7%K\nwhile cnt<=K:\n  if K%2==0:\n    print('-1')\n    break\n  if Num%K==0:\n    print(cnt)\n    break\n  else:\n    Num = (10*Num + 7)%K\n    cnt+=1\nelse:\n  print('-1')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "12719": {
    "id": 12719,
    "code": "X = \"6\"\nprint('YES' if X in '753' else 'NO')",
    "coverage": [">", ">"]
  },
  "16842": {
    "id": 16842,
    "code": "a = ['H', 'H']\nif a[0]==a[1]:\n    print(\"H\")\nelse :\n    print(\"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17040": {
    "id": 17040,
    "code": "a = \"H\";b = \"H\"\nstrings=\"H\",\"D\"\nif a==b:\n    print(\"H\")\nelse:\n    print(\"D\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "15446": {
    "id": 15446,
    "code": "X = 64146;Y = 123;Z = 456\nans = (((X-Z)//(Y+Z)))\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "3484": {
    "id": 3484,
    "code": "A = 12;B = 4\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)",
    "coverage": [">", ">", ">"]
  },
  "9184": {
    "id": 9184,
    "code": "s = \"2017/01/07\"\nans = s[:3] + \"8\" + s[4:]\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "6045": {
    "id": 6045,
    "code": "n = 100\nans = (n+2-1)//2\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "8339": {
    "id": 8339,
    "code": "N = 1\nAU = [2]\nAD = [3]\nAUS = [AU[0]]\nADS = [AD[-1]]\nfor i in range(1, N):\n  AUS.append(AUS[-1] + AU[i])\n  ADS.append(ADS[-1] + AD[-1-i])\nADS.reverse()\nans = 0\nfor i in range(N):\n  temp = AUS[i]+ADS[i]\n  ans = max(ans, temp)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "284": {
    "id": 284,
    "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nn = len(s)\nk = 100\nfor i in range(n):\n    if k > 0 and i == n-1:\n        x = ord(s[i])-ord(\"a\")\n        s[i] = chr((k+x)%26+ord(\"a\"))\n        break\n    if s[i] == \"a\":\n        continue\n    x = ord(s[i])-ord(\"a\")\n    if k >= 26-x:\n        s[i] = \"a\"\n        k -= 26-x\nprint(*s,sep=\"\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16397": {
    "id": 16397,
    "code": "import bisect\nn = 2\na = [100, 0]\na.sort()\nm = a[-1] / 2\ni = bisect.bisect_left(a[:-1], m)\nif i == n-1:\n    i -= 1\nelif i > 0 and abs(a[i-1]-m) < abs(a[i]-m):\n    i -= 1\nprint(a[-1], a[i])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "10057": {
    "id": 10057,
    "code": "N = 3\nS = \"())\"\noS = S\nS = list(S)\ncnt = 0\nwhile True:\n    p_cnt = cnt\n    for i in range(len(S) - 1):\n        if S[i] == \"(\" and S[i + 1] == \")\":\n            S.pop(i + 1)\n            S.pop(i)\n            cnt += 1\n            break\n    if cnt == p_cnt:\n        break\ncnt_open = 0\ncnt_close = 0\nfor s in S:\n    if s == \"(\":\n        cnt_open += 1\n    else:\n        cnt_close += 1\nans = (\"(\" * cnt_close) + oS + (\")\" * cnt_open)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "17851": {
    "id": 17851,
    "code": "s = \"0112\"\na=0<int(s[:2])<13\nb=0<int(s[-2:])<13\nif a and b:\n    print('AMBIGUOUS')\nelif b:\n    print('YYMM')\nelif a:\n    print('MMYY')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "3853": {
    "id": 3853,
    "code": "x = 12;y = 3;z = 1\nx -= z\ny += z\nprint(x//y)",
    "coverage": [">", ">", ">", ">"]
  },
  "3467": {
    "id": 3467,
    "code": "a = 20;b = 15\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)",
    "coverage": [">", ">", "!", ">", ">", "!", "!"]
  },
  "5488": {
    "id": 5488,
    "code": "import math\npages = 5\nprint(math.ceil(pages/2))",
    "coverage": [">", ">", ">"]
  },
  "9152": {
    "id": 9152,
    "code": "S = \"2017/01/07\"\nans = S.replace('2017','2018') \nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "18334": {
    "id": 18334,
    "code": "a = 2\nb = 100\nn = 200\nt = max(a, b)\nprint((n + t - 1) // t)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9760": {
    "id": 9760,
    "code": "N = 3\nS = \"())\"\nx=0\nm=0\nfor i in range(N):\n    if S[i]=='(':\n        x+=1\n    else:\n        x-=1\n        m=min(x,m)\na=-m\nb=x-m\nprint('('*a+S+')'*b)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14327": {
    "id": 14327,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup=0\ndown=0\ncnt=0\nfor i in range(n-1):\n    if up==1:\n        if a[i]>a[i+1]:\n            up=0\n            cnt+=1\n    elif down==1:\n        if a[i]<a[i+1]:\n            down=0\n            cnt+=1\n    else:\n        if a[i]<a[i+1]:\n            up=1\n        elif a[i]>a[i+1]:\n            down=1\nelse:\n    cnt+=1\n    print(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "9774": {
    "id": 9774,
    "code": "S = \"))))((((\";l = \"(\";r = \")\"\nt=S\nwhile t.count(l+r):\n t=t.replace(l+r,'')\nprint(l*t.count(r)+S+r*t.count(l))",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "9636": {
    "id": 9636,
    "code": "n = 3\ns = \"())\"\na=0\nx=\"\"\ny=\"\"\nfor i in range(n):\n    if s[i]==\"(\":\n        a+=1\n    else:\n        a-=1\nif a>0:\n    s=s+\")\"*a\nelif a<0:\n    s=\"(\"*abs(a)+s\nt=0\nwhile t==0:\n    b=0\n    for i in range(len(s)):\n        if s[i]==\"(\":\n            b+=1\n        else:\n            b-=1\n        if b<0:\n            s=\"(\"+s+\")\"\n            break\n    if b==0:\n        break\nprint(s)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "18719": {
    "id": 18719,
    "code": "H = 14\nW = 12\nN = 112\nk=max(H, W)\ncnt=0\nwhile k*cnt<N:\n    cnt+=1\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "17814": {
    "id": 17814,
    "code": "S = \"1905\"\nAS = S[:2]\nBS = S[2:]\nif 1<=int(AS)<=12 and 1<=int(BS)<=12:\n    print('AMBIGUOUS')\nelif 1<=int(AS)<=12:\n    print('MMYY')\nelif 1<=int(BS)<=12:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]
  },
  "1477": {
    "id": 1477,
    "code": "import bisect\nN = 111\nA = [111, 222, 333, 444, 555, 666, 777, 888, 999]\nprint(A[bisect.bisect_left(A, N)])",
    "coverage": [">", ">", ">", ">"]
  },
  "11876": {
    "id": 11876,
    "code": "M1 = \"11\";D1 = \"16\"\nM2 = \"11\";D2 = \"17\"\nM1 = int(M1)\nM2 = int(M2)\nif M1!=M2:\n  print('1')\nelse:\n  print('0')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "3466": {
    "id": 3466,
    "code": "a = 12;b = 4\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)",
    "coverage": [">", ">", "!", ">", "!", "!", ">"]
  },
  "12026": {
    "id": 12026,
    "code": "md1 = [11, 30]\nmd2 = [12, 1]\nprint(1 if md1[0]!=md2[0] else 0)",
    "coverage": [">", ">", ">"]
  },
  "17103": {
    "id": 17103,
    "code": "a = \"H\";b = \"H\"\nif a == b:\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "10832": {
    "id": 10832,
    "code": "s = \"atcoder\"\nif s==s[::-1]:\n  if s[:(len(s)-1)//2] == s[:(len(s)-1)//2:-1]:\n    ss=s[(len(s)+3)//2-1:len(s)]\n    if ss ==  ss[::-1]:\n      print('Yes')\n    else:\n      print('No')\n  else:\n    print('No')\nelse:\n  print('No')",
    "coverage": [">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]
  },
  "13583": {
    "id": 13583,
    "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(',',' '))",
    "coverage": [">", ">"]
  },
  "5608": {
    "id": 5608,
    "code": "n = 5\nprint(int(n/2)+int(n%2))",
    "coverage": [">", ">"]
  },
  "7549": {
    "id": 7549,
    "code": "h = 10;n = 3\na = [4, 5, 6]\nprint(\"Yes\" if sum(a)>=h else \"No\")",
    "coverage": [">", ">", ">"]
  },
  "6835": {
    "id": 6835,
    "code": "H = 210;N = 5\na = [31, 41, 59, 26, 53]\nif sum(a) >= H:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "6302": {
    "id": 6302,
    "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\ncnt=0\nfor x in b:\n     a_=bisect.bisect_left(a,x)\n     c_=n-bisect.bisect_right(c,x)\n     cnt+=a_*c_\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3061": {
    "id": 3061,
    "code": "S = \"1234567876\"\nans = 10**4\nfor i in range(len(S) - 2):\n    a = abs(int(S[i: i + 3]) - 753)\n    if a < ans:\n        ans = a\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "13422": {
    "id": 13422,
    "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\", \" \"))",
    "coverage": [">", ">"]
  },
  "1855": {
    "id": 1855,
    "code": "N = 10;A = 3;B = 5\nif A < B:\n    print(A)\nelse:\n    print(B)\nif ((A + B) - N) >= 0:\n    print((A + B) - N)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">"]
  },
  "4618": {
    "id": 4618,
    "code": "s = \"internationalization\"\nprint('{}{}{}'.format(s[0],len(s[1:-1]),s[-1]))",
    "coverage": [">", ">"]
  },
  "8688": {
    "id": 8688,
    "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5273": {
    "id": 5273,
    "code": "mylist = {'9', '4', '1', '7'}\nif '1' in mylist and '9' in mylist and '7' in mylist and '4' in mylist:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "13283": {
    "id": 13283,
    "code": "S = \"happy,newyear,enjoy\"\nres1 = S[0:5]\nres2 = S[6:13]\nres3 = S[14:19]\nprint(res1,res2,res3)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10982": {
    "id": 10982,
    "code": "S = \"akasaka\"\nN = len(S)\nif S==S[::-1] and S[:N//2]==S[:N//2][::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "10906": {
    "id": 10906,
    "code": "s = \"atcoder\"\nn = len(s)\ns1 = s[0:(n-1)//2]\ns2 = s[(n+3)//2-1:n+1]\nif s == s[::-1]:\n    if s1 == s1[::-1]:\n        if s2 == s2[::-1]:\n            print(\"Yes\")\n            exit()\nprint(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "10121": {
    "id": 10121,
    "code": "n = 3\ns = \"())\"\nresult=\"\"\ncnt=0\nfor ss in s:\n    if ss ==\")\":\n        if cnt>0:\n            result+=ss\n            cnt-=1\n        else:\n            result=\"(\"+result+ss\n    else:\n        result+=ss\n        cnt+=1\nL=result.count(\"(\")\nR=result.count(\")\")\nresult+=\")\"*(L-R)\nprint(result)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8475": {
    "id": 8475,
    "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nl = []\nfor i in range(n):\n  x = sum(a1[:i+1]) + sum(a2[i:])\n  l.append(x)\nprint(max(l))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16687": {
    "id": 16687,
    "code": "a = \"D\";b = \"H\"\nprint(\"H\" if a == b else \"D\")",
    "coverage": [">", ">"]
  },
  "16551": {
    "id": 16551,
    "code": "a = \"H\";b = \"H\"\nprint('H' if a == b else 'D')",
    "coverage": [">", ">"]
  },
  "15286": {
    "id": 15286,
    "code": "x = 64145;y = 123;z = 456\nans=int(x/(y+z))\nif x-ans*(y+z)>=z:\n    print(ans)\nelse:\n    print(ans-1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "9474": {
    "id": 9474,
    "code": "s = ['2017', '01', '07']\nprint(\"2018/\"+s[1]+\"/\"+s[2])",
    "coverage": [">", ">"]
  },
  "19406": {
    "id": 19406,
    "code": "n = 3\nif(n%2==1):n*=2\nprint(n)",
    "coverage": [">", ">", ">"]
  },
  "16675": {
    "id": 16675,
    "code": "a = \"D\";b = \"H\"\nprint('H' if a == 'H' and b == 'H' or a == 'D' and b == 'D' else 'D')",
    "coverage": [">", ">"]
  },
  "1110": {
    "id": 1110,
    "code": "N = 111\ni = N // 111\nif N%111 != 0:\n    i += 1\nprint(i*111)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "3925": {
    "id": 3925,
    "code": "X = 64146;Y = 123;Z = 456\nprint(int((X-Z)/(Z+Y)))",
    "coverage": [">", ">"]
  },
  "7237": {
    "id": 7237,
    "code": "h = 210;n = 5\nl = [31, 41, 59, 26, 53]\nprint(\"Yes\" if h <= sum(l) else \"No\")",
    "coverage": [">", ">", ">"]
  },
  "15298": {
    "id": 15298,
    "code": "X = 13;Y = 3;Z = 1\nprint(int((X-Z)/(Y+Z)))",
    "coverage": [">", ">"]
  },
  "8269": {
    "id": 8269,
    "code": "n = 4;k = 3\nl = [2, 3, 1, 4]\nimport math\nres=math.ceil((n-1)/(k-1))\nprint(res)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "15667": {
    "id": 15667,
    "code": "X = 64146;Y = 123;Z = 456\na = Y+Z\nX=X-Z\nres = X//a\nprint(res)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "17216": {
    "id": 17216,
    "code": "a = \"D\";b = \"D\"\nif a == 'H' and b == 'H':\n  print('H')\nelif a == 'H' and b == 'D':\n  print('D')\nelif a == 'D' and b == 'H':\n  print('D')\nelse:\n  print('H')",
    "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "19316": {
    "id": 19316,
    "code": "n = 10\nprint(n) if n%2 ==0 else print(n*2)",
    "coverage": [">", ">"]
  },
  "9147": {
    "id": 9147,
    "code": "s = \"2017/01/31\"\ny, m, d = s.split(\"/\")\nprint(\"2018/\" + m + \"/\" + d)",
    "coverage": [">", ">", ">"]
  },
  "14051": {
    "id": 14051,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nindex = 1\nans = 0\nwhile index < n:\n    ans += 1\n    if a[index-1] < a[index]:\n        flag = True\n    elif a[index-1] > a[index]:\n        flag = False\n    else:\n        flag3 = True\n        for i in range(index,n):\n            if a[index] != a[i]:\n                flag3 = False\n                if a[index] < a[i]:\n                    flag = True\n                    break\n                else:\n                    flag = False\n                    break\n        if flag3:\n            break\n    flag2 = True\n    for i in range(index,n):\n        if flag and a[i] < a[i-1]:\n            index = i+1\n            flag2 = False\n            break\n        elif a[i] > a[i-1] and flag == False:\n            index = i+1\n            flag2 = False\n            break\n    if flag2:\n        break\nif index == n:\n    ans += 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "1349": {
    "id": 1349,
    "code": "n = 112\na=[111,222,333,444,555,666,777,888,999]\np=0\nwhile a[p]<n:\n    p+=1\nprint(a[p])",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "9663": {
    "id": 9663,
    "code": "N = 3\nS = \"())\"\nfront_not_close = 0\nend_not_close = 0\nfor s in list(S):\n    if s == '(':\n        front_not_close += 1\n    else:\n        if front_not_close > 0:\n            front_not_close -= 1\n        else:\n            end_not_close += 1\nfor i in range(end_not_close):\n    S = '(' + S\nfor i in range(front_not_close):\n    S = S + ')'\nprint(S)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "13808": {
    "id": 13808,
    "code": "from collections import deque\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)<=1:\n    pass\n  else:\n    if not (v >= tmp[-1] >= tmp[-2] >= tmp[0] or v <= tmp[-1] <= tmp[-2] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nif tmp:\n  cnt+=1\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10465": {
    "id": 10465,
    "code": "a = 100;b = 50;k = 4\nans_list = []\nif a > b:\n    a, b = b, a\nfor i in range(a, 0, -1):\n    if a % i == 0 and b % i == 0:\n        ans_list.append(i)\n        if len(ans_list) == k:\n            print(i)\n            break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5335": {
    "id": 5335,
    "code": "n = 5\nif n % 2 == 0:\n    print(round(n / 2))\nelse:\n    print(round((n + 1)/2))",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "17725": {
    "id": 17725,
    "code": "s = \"0112\"\na=int(s[0:2])\nb=int(s[2:4])\nif 0<a<13:\n  if 0<b<13:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if 0<b<13:\n    print('YYMM')\n  else:\n    print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "1164": {
    "id": 1164,
    "code": "n = 111\nfor x in range(0, 1000, 111):\n    if x >= n:\n        print(x)\n        break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10712": {
    "id": 10712,
    "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nif s == list(reversed(s)) and s[:len(s)//2] == list(reversed(s[:len(s)//2])):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "12034": {
    "id": 12034,
    "code": "a = 11;b = 30\nc = 12;d = 1\nprint(c-a)",
    "coverage": [">", ">", ">"]
  },
  "16937": {
    "id": 16937,
    "code": "tmp = ['D', 'D']\nprint(\"H\") if tmp[0] == tmp[1] else print(\"D\")",
    "coverage": [">", ">"]
  },
  "4906": {
    "id": 4906,
    "code": "S = \"internationalization\"\nT = len(S)-2\nprint(S[0]+ str(T) + S[-1])",
    "coverage": [">", ">", ">"]
  },
  "10156": {
    "id": 10156,
    "code": "from collections import deque\nn = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nd = deque(s)\nl, r = 0, 0\nfor i in range(n):\n    if l == r and s[i] == \")\":\n        d.appendleft(\"(\")\n    elif s[i] == \")\":\n        r += 1\n    else:\n        l += 1\ns = \"\".join(list(d))\nprint(s + \")\" * max(0, l - r))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "5994": {
    "id": 5994,
    "code": "n = 100\nif n%2 == 0 :\n    ans = n//2\n    print(ans)\nelse :\n    ans = n//2 + 1\n    print(ans)",
    "coverage": [">", ">", ">", ">", "!", "!", "!"]
  },
  "14446": {
    "id": 14446,
    "code": "n = 7\na_l = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnum = 1\nflag = -1 \nfor i in range(1,n):\n    if a_l[i] > a_l[i-1]:\n        new_flag = 0\n    elif a_l[i] < a_l[i-1]:\n        new_flag = 1\n    else:\n        continue\n    if new_flag != flag:\n        if flag == -1:\n            flag = new_flag\n        else:\n            flag = -1\n            num += 1\nprint(max(num,1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "359": {
    "id": 359,
    "code": "S = ['a']\nk = 25\nalp = \"abcdefghijklmnopqrstuvwxyza\"\nto_a = {alp[i]: 26 - i for i in range(1, len(alp))}\nfor i, s in enumerate(S):\n    if to_a[s] > k:\n        continue\n    else:\n        S[i] = \"a\"\n        k -= to_a[s]\n    if k == 0:\n        break\nk %= 26\ni = alp.index(S[-1]) + k\nS[-1] = alp[i]\nans = \"\".join(S)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8630": {
    "id": 8630,
    "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nx = 0\nC = []\nD = []\nif N == 1:\n    print(A[0] + B[0])\n    exit()\nfor i in range(N):\n    C = A[0:i]\n    D = B[i - 1:N]\n    x = sum(C) + sum(D)\n    ans = max(ans, x)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9250": {
    "id": 9250,
    "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3] = '8'\nprint(''.join(S))",
    "coverage": [">", ">", ">"]
  },
  "13363": {
    "id": 13363,
    "code": "icase=0\nif icase==0:\n    s = \"abcde,fghihgf,edcba\"\n    ss=s[0:5]+\" \"+s[6:13]+\" \"+s[14:19]\n    print(ss)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "18880": {
    "id": 18880,
    "code": "n = 12\ncnt = 0\nx = len(str(n))\nif n % 2 == 1:\n  print(0)\n  exit()\nelse:\n  for i in range(1,26):\n    cnt += n//((5**i)* 2)\nprint(cnt)",
    "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]
  },
  "7020": {
    "id": 7020,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\nif H > sum(A):\n    print('No')\nelse:\n    print('Yes')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "10342": {
    "id": 10342,
    "code": "a = 1;b = 1;k = 1\nN=[]\nfor i in range(1,min(a,b)+1):\n    if (a%i==0 and b%i==0):\n            N.append(i)\nN.reverse()\nprint(N[k-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "8848": {
    "id": 8848,
    "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3771": {
    "id": 3771,
    "code": "x = 64146;y = 123;z = 456\nx-=z\nprint(int(x/(y+z)))",
    "coverage": [">", ">", ">"]
  },
  "9399": {
    "id": 9399,
    "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nS[3] = '8'\nprint(\"\".join(S))",
    "coverage": [">", ">", ">"]
  },
  "4464": {
    "id": 4464,
    "code": "s = \"xyz\"\nprint(s[0], len(s[1:-1]), s[-1], sep='')",
    "coverage": [">", ">"]
  },
  "8086": {
    "id": 8086,
    "code": "n = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nAmin = A.index(1)\nleft = len(A[:Amin])\nright = len(A[Amin:])\nans = 0\nif left <= right:\n    ans += left // (k-1)\n    right += left % (k-1)\n    ans += ((right-1) + (k-2)) // (k-1)\nelse:\n    ans += (right-1) // (k-1)\n    left += right % (k-1)\n    ans += (left + (k-2)) // (k-1)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "9854": {
    "id": 9854,
    "code": "n = 8\nS = \"))))((((\"\nleftstack = 0\nremrights = 0\nfor s in S:\n    if s == '(':\n        leftstack += 1\n    else:\n        if leftstack > 0:\n            leftstack -= 1\n        else:\n            remrights += 1\nprint('('*remrights + S + ')'*leftstack)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "4196": {
    "id": 4196,
    "code": "import sys\ninput = \"<function <lambda>>\"\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nm = 60 - m1\nh1 += 1\nm += (h2 - h1)*60 + m2\nprint(max(0, m - k))",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "16740": {
    "id": 16740,
    "code": "a = \"H\";b = \"H\"\nif a == b: print(\"H\")\nelse: print(\"D\")  ",
    "coverage": [">", ">", "!"]
  },
  "7515": {
    "id": 7515,
    "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nanswer = sum(A)\nif answer >= H:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "1875": {
    "id": 1875,
    "code": "Sample = 100;NumOfPaperA = 100;NumOfPaperB = 100\nMaximumNumberOfBothReader = min(NumOfPaperA, NumOfPaperB)\nMinimumNumberOfBothReader = max(NumOfPaperA + NumOfPaperB - Sample, 0)\nprint(str(MaximumNumberOfBothReader) + ' ' + str(MinimumNumberOfBothReader))",
    "coverage": [">", ">", ">", ">"]
  },
  "5543": {
    "id": 5543,
    "code": "import sys\nN = 3\nans = N // 2\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "10047": {
    "id": 10047,
    "code": "n = \"8\"\ns = \"))))((((\"\nss = s\nfor i in range(50):\n  s = s.replace('()','')\nl = s.count(')')\nr = s.count('(')\nprint('('*l+ss+')'*r)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "835": {
    "id": 835,
    "code": "K = 101\nif K % 2 == 0 or K % 5 == 0:\n  print(-1)\nelse:\n  if K % 7 == 0:\n    L = 9 * K // 7\n  else:\n    L = 9 * K\n  a = 10 % L\n  check = False\n  for i in range(L):\n    a %= L\n    if a == 1:\n      print(i + 1)\n      check = True\n      break\n    a *= 10\n  if not check:\n    print(-1)",
    "coverage": [
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!"
    ]
  },
  "13335": {
    "id": 13335,
    "code": "s = \"haiku,atcoder,tasks\"\ns=s.replace(',',' ')\nprint(s)",
    "coverage": [">", ">", ">"]
  },
  "13501": {
    "id": 13501,
    "code": "x = \"abcde\";y = \"fghihgf\";z = \"edcba\"\nprint(x,y,z)",
    "coverage": [">", ">"]
  },
  "4546": {
    "id": 4546,
    "code": "w = \"internationalization\"\nprint(w[0] + str(len(w)-2) + w[-1])",
    "coverage": [">", ">"]
  },
  "8707": {
    "id": 8707,
    "code": "from itertools import accumulate\nN = 7\nA1 = [0, 3, 6, 10, 15, 19, 24, 27]\nA2 = [0, 5, 8, 12, 16, 18, 21, 23]\nans = 0\nfor i in range(1, N + 1):\n    cur = A1[i - 1]\n    if i < N:\n        cur += A2[N] - A2[i]\n    ans = max(ans, cur + A1[i] - A1[i - 1] + A2[i] - A2[i - 1])\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10566": {
    "id": 10566,
    "code": "import math\nA = 1;B = 1;K = 1\ngcd_of_AB = math.gcd(A,B)\nl = []\nfor i in range(1,gcd_of_AB+1):\n    if gcd_of_AB % i == 0:\n        l.append(i)\nprint(l[len(l)-K])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16701": {
    "id": 16701,
    "code": "a = \"H\";b = \"H\"\nif a == b:\n    print('H')\nelse:\n    print('D')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17738": {
    "id": 17738,
    "code": "from sys import exit\nS = \"1700\"\nif 0 < int(S[0:2]) < 13:\n    if 0 < int(S[2:]) < 13:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 0 < int(S[2:]) < 13:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]
  },
  "8148": {
    "id": 8148,
    "code": "import math\nn = 3;k = 3\nan = [1, 2, 3]\nn = n-k\nans = math.ceil(n/(k-1)) + 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "5219": {
    "id": 5219,
    "code": "s = \"smiles\"\nprint(s[0]+str(len(s)-2)+s[len(s)-1])",
    "coverage": [">", ">"]
  },
  "12180": {
    "id": 12180,
    "code": "L = [11, 30]\nK = [12, 1]\nif L[0]==K[0]:\n\tprint(0)\nelse:\n\tprint(1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "10447": {
    "id": 10447,
    "code": "A = 100;B = 50;K = 4\nprint([n for n in range(1,min(A,B)+1) if A%n==B%n==0][-K])",
    "coverage": [">", ">"]
  },
  "19229": {
    "id": 19229,
    "code": "N = 5\nif N % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    div = 10\n    for _ in range(100):\n        ans += N // div\n        div *= 5\n    print(ans)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "16390": {
    "id": 16390,
    "code": "from bisect import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\ni = bisect(a, (a[-1]+1) // 2)\nif a[i] - a[-1] / 2 < a[-1] / 2 - a[i-1]:\n    print(a[-1], a[i])\nelse:\n    print(a[-1], a[i-1])",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "11970": {
    "id": 11970,
    "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif m1 !=m2:\n  print(1)\nelif m1==m2:\n  print(0)",
    "coverage": [">", ">", ">", "!", ">", ">"]
  },
  "15454": {
    "id": 15454,
    "code": "x = 64145;y = 123;z = 456\nrm = x % (y+z)\na = -1 if rm < z else 0\nprint(x // (y + z) + a)",
    "coverage": [">", ">", ">", ">"]
  },
  "18095": {
    "id": 18095,
    "code": "s = 1905\na, b = s // 100, s % 100\nx = \"YY\" if a == 0 or a > 12 else \"MM\"\ny = \"YY\" if b == 0 or b > 12 else \"MM\"\nprint(x + y if x != y else \"NA\" if x == \"YY\" else \"AMBIGUOUS\")",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "382": {
    "id": 382,
    "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\ni=0\nwhile i<len(s):\n    if i==len(s)-1:\n        s[i]=chr(97+(ord(s[i])-97+K)%26)\n        break\n    if K<abs(123-ord(s[i]))%26:\n        i+=1\n    elif K>=abs(123-ord(s[i]))%26:\n        sub=abs(123-ord(s[i]))%26\n        s[i]=\"a\"\n        K-=sub\n        i+=1\nprint(\"\".join(s))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3410": {
    "id": 3410,
    "code": "A = 20;B = 15\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "9688": {
    "id": 9688,
    "code": "n = 8\ns = \"))))((((\"\ncnt, L = 0, 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt < 0:\n        L = min(L, cnt)\nans = '('*abs(L) + s\nR = ans.count('(') - ans.count(')')\nans += ')'*R\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11895": {
    "id": 11895,
    "code": "m1 = \"11\";d1 = \"30\"\nm2 = \"12\";d2 = \"1\"\nif m1==m2:\n  print(0)\nelse:\n  print(1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "11048": {
    "id": 11048,
    "code": "s = \"level\"\nn=len(s)\nx=n//2\na=s[0:x]\nb=s[x+1:]\nif a==b:print('Yes')\nelse:print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "7149": {
    "id": 7149,
    "code": "a = 10;b = 3\nc = [4, 5, 6]\nif sum(c) >= a:\n    print('Yes')\nif sum(c) < a:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!"]
  },
  "551": {
    "id": 551,
    "code": "s = \"xyz\"\nk = 4\nans = \"\"\nfor i in range(len(s)-1):\n    cost = ord(\"z\")+1-ord(s[i])\n    if s[i] == \"a\" or k < cost:\n        ans += s[i]\n    else:\n        ans += \"a\"\n        k -= cost\nc = s[-1]\nk %= 26\nfor _ in range(k):\n    if c == \"z\": c = \"a\"\n    else: c = chr(ord(c)+1)\nans += c\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "14176": {
    "id": 14176,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nis_up=False\nis_even=True\npre_a=a[0]\ncnt=1\nfor aa in a:\n  if is_even and pre_a != aa:\n    is_even=False\n    is_up=pre_a < aa\n  if not is_even:\n    if (is_up and pre_a > aa) or (not is_up and pre_a < aa):\n      is_even=True\n      cnt+=1\n  pre_a=aa\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18760": {
    "id": 18760,
    "code": "h = 3\nw = 7\nn = 10\ncnt = 0\nans = 0\nwhile ans < n:\n    if h < w:\n        ans += w\n        h -= 1\n    else:\n        ans += h\n        w -= 1\n    cnt += 1\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "16664": {
    "id": 16664,
    "code": "deck = [\"H\",\"D\"]\na = \"D\";b = \"D\"\nif deck.index(a) == 0:\n  print(b)\nelif deck.index(b) == 0:\n  print(deck[1])\nelse:\n  print(deck[0])",
    "coverage": [">", ">", ">", "!", ">", "!", "!", ">"]
  },
  "7232": {
    "id": 7232,
    "code": "h = 20;n = 3\nl = [4, 5, 6]\nans=0\ncount=0\nfor i in range(0,n):\n    ans+=l[i]\n    if(ans==h or ans>h):\n        count+=1\n    else:\n        count+=0\nif(count>0):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "19053": {
    "id": 19053,
    "code": "n = 12\nif n%2!=0:\n    print(0)\nelse:\n    ans=n//10\n    n=n//10\n    i=1\n    while(1):\n        ans+=n//(5**i)\n        if n//(5**i)==0:\n            break\n        i+=1\n    print(ans)",
    "coverage": [
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "8194": {
    "id": 8194,
    "code": "from math import ceil\nn = 4;k = 3\na_list = [2, 3, 1, 4]\nprint(ceil((n - 1) / (k - 1)))",
    "coverage": [">", ">", ">", ">"]
  },
  "4185": {
    "id": 4185,
    "code": "HM = [10, 0, 12, 0, 120]\nhours = HM[2]-HM[0]\nminutes = HM[3]-HM[1]\nK = HM[4]\ntotalTimes = hours*60+minutes\nprint(totalTimes-K)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "837": {
    "id": 837,
    "code": "k = 2\nans = 0\nai = 0\nfor i in range(k+2):\n    ai = ((ai * 10) + 7) % k\n    if ai == 0:\n        ans = i + 1\n        print(ans)\n        exit()\nans = -1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]
  },
  "11738": {
    "id": 11738,
    "code": "m = 11;d = 16\nprint(1 if int(\"11 17\".split()[1])-d!=1 else 0)",
    "coverage": [">", ">"]
  },
  "17849": {
    "id": 17849,
    "code": "S = \"1700\"\nl=len(S)\nY=0\nM=0\nfor i in range(l):\n    if i==3:\n        if int(S[i-1])==0 and 1<=int(S[i])<=9:\n            Y=1\n        elif int(S[i-1])==1 and 0<=int(S[i])<=2:\n            Y=1\nfor i in range(l):\n    if i==1:\n        if int(S[i-1])==0 and 1<=int(S[i])<=9:\n            M=1\n        elif int(S[i-1])==1 and 0<=int(S[i])<=2:\n            M=1\nif Y==1 and M==1:\n    print('AMBIGUOUS')\nelif Y==1 and M==0:\n    print('YYMM')\nelif Y==0 and M==1:\n    print('MMYY')\nelif Y==0 and M==0:\n    print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "1769": {
    "id": 1769,
    "code": "N = 10;A = 3;B = 5\nM = None\nm = None\nif A + B <= N:\n    M = min(A, B)\n    m = 0\nelse:\n    M = min(A, B)\n    m = A + B - N\nprint(M, m)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]
  },
  "6554": {
    "id": 6554,
    "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left,bisect_right\nans = 0\nfor i in range(n):\n    pos_a = bisect_left(a,b[i])\n    pos_c = bisect_right(c,b[i])\n    ans += pos_a*(n-pos_c)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9544": {
    "id": 9544,
    "code": "date = \"2017/01/07\"\nprint(date.replace('2017', '2018'))",
    "coverage": [">", ">"]
  },
  "18050": {
    "id": 18050,
    "code": "S = \"0112\"\nyear = int(S[0] + S[1])\nmonth = int(S[2] + S[3])\nif year <= 12 and year >= 1 and month >= 1 and month <= 12:\n    print('AMBIGUOUS')\nelif year >= 0 and year <= 99 and month >= 1 and month <= 12:\n    print('YYMM')\nelif year >= 1 and year <= 12 and month >= 0 and month <= 99:\n    print('MMYY')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "3889": {
    "id": 3889,
    "code": "X = 64146;Y = 123;Z = 456\nprint(1+(X-Y-2*Z)//(Y+Z))",
    "coverage": [">", ">"]
  },
  "1372": {
    "id": 1372,
    "code": "n = 112\nwhile True:\n    s = str(n)\n    if s[0] == s[1] and s[0] == s[2]:\n        print(n)\n        break\n    n += 1",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "6441": {
    "id": 6441,
    "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nnumpattern = 0\nfor i in range(N):\n    numsmallerA = bisect.bisect_left(A,B[i])\n    numbiggerC = N - bisect.bisect_right(C,B[i])\n    numpattern += numsmallerA * numbiggerC\nprint(numpattern)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18940": {
    "id": 18940,
    "code": "N = 5\nif N % 2 != 0:\n    print(0)\nelse:\n    fives = 0\n    power = 0\n    while (5 ** (power+1)) <= N:  \n        power += 1\n    for i in range(1, power+1):\n        fives += N // (5 ** i) // 2\n    print(int(fives))",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]
  },
  "700": {
    "id": 700,
    "code": "K = 101\na = 0\ncount = -1\nfor i in range(K):\n    a = (7 + a*10) % K\n    if a  == 0:\n        count=i+1\n        break\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "15633": {
    "id": 15633,
    "code": "x = 64146;y = 123;z = 456\nnum = x-z\nans = 0\nans += num // (y+z)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "5365": {
    "id": 5365,
    "code": "n = 5\nans = int(n/2) + n%2\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "9409": {
    "id": 9409,
    "code": "s = \"2017/01/31\"\nss = s[:3] + '8' + s[4:]\nprint(ss)",
    "coverage": [">", ">", ">"]
  },
  "17953": {
    "id": 17953,
    "code": "S = \"0112\"\npre = int(S[:2])\nsur = int(S[2:])\nif pre <= 12 and pre > 0 and sur <= 12 and sur > 0:\n    print('AMBIGUOUS')\nelif pre <= 12 and pre > 0:\n    print('MMYY')\nelif sur <= 12 and sur > 0:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "7585": {
    "id": 7585,
    "code": "H = 10;N = 3\nlist_A = [4, 5, 6]\nsum_list_A = sum(list_A)\nif sum_list_A >= H:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "8192": {
    "id": 8192,
    "code": "n = 3;k = 3\nnums = [1, 2, 3]\ncount = 0\nwhile n > 0:\n    if n > k:\n        n -= k-1\n    else:\n        n -= k\n    count += 1\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "19107": {
    "id": 19107,
    "code": "from math import ceil, log\nn = 5\nif n%2==1:\n    print(0)\nelse:\n    print(sum([n//(2*pow(5,i)) for i in range(1,ceil(log(n+1,5)))]))",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "5892": {
    "id": 5892,
    "code": "N = 100\nprint(int(N / 2)) if N % 2 == 0 else print(N // 2 + 1)",
    "coverage": [">", ">"]
  },
  "16211": {
    "id": 16211,
    "code": "n = 5\nli = [6, 9, 4, 2, 11]\nma = max(li)\nli.remove(ma)\ndiff = []\nfor l in li:\n    diff.append(abs(ma/2-l))\nmi = min(diff)\nind = diff.index(mi)\nprint(ma,li[ind])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9894": {
    "id": 9894,
    "code": "n = 6\ns = \")))())\"\nc = 0\nfrom collections import deque\nres = deque([])\nfor i in range(n):\n    if s[i] =='(':\n        c += 1\n    else:\n        c -= 1\n    if c < 0:\n        res.appendleft('(')\n        c = 0\n    res.append(s[i])\nif c > 0:\n    res.append(')'*c)\nprint(''.join(list(res)))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "16110": {
    "id": 16110,
    "code": "a = 12;b = 4\nif a-2*b>=0:\n    print(a-2*b)\nelse:\n    print(\"0\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "324": {
    "id": 324,
    "code": "s = [97]\nk = 25\nfor i in range(len(s)):\n    if s[i] == 97: continue\n    if 123 - s[i] <= k:\n        k -= 123 - s[i]\n        s[i] = 97\n        if k == 0:\n            break\nif k != 0:\n    s[-1] = s[-1] + k % 26\nprint(\"\".join([chr(i) for i in s]))",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]
  },
  "13706": {
    "id": 13706,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ntotal = (h2-h1)*60\nif m1 <= m2:\n    total += (m2-m1)\nelse:\n    if m2 == 0:\n        total += 60-m1\n        total -= 60\n    else:\n        total -= (m1-m2)\nans = total - k\nprint(ans)",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]
  },
  "11672": {
    "id": 11672,
    "code": "s = \"SAT\"\ncon=['','SAT','FRI','THU','WED','TUE','MON','SUN']\nprint(con.index(s))",
    "coverage": [">", ">", ">"]
  },
  "16419": {
    "id": 16419,
    "code": "n = 2\na = [100, 0]\na.sort()\nm = a[-1]\nbr = m/2\ntmp = m\nfor i in range(n):\n    if tmp > abs(a[i]-br):\n        r = a[i]\n        tmp = abs(a[i]-br)\nprint(m,r)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "1224": {
    "id": 1224,
    "code": "a = \"111\"\nzyun= len(a)*9+int(a[0])\nzoro=0\nz = zyun//9\naf= zyun%9\nif af==0:\n    if int(a)<=int(str(9)*(z-1)):\n        print(int(str(9)*(z-1)))\n    else:\n            print(str(1)*(z))\nelse :\n    if int(a)<=int(str(af)*(z)):\n        print(int(str(af)*(z)))\n    else:\n        print(int(str(af+1)*(z)))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "12591": {
    "id": 12591,
    "code": "a = 1;b = 1;k = 1\nl = []\nfor i in range(1, min(a, b)+1):\n    if a % i == 0 and b % i == 0:\n        l.append(i)\nprint(sorted(l, reverse=True)[k-1])",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "13241": {
    "id": 13241,
    "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1 , s2 , s3)",
    "coverage": [">", ">"]
  },
  "10396": {
    "id": 10396,
    "code": "A = 100;B = 50;K = 4\nlim = min(A,B)\ncount = 0\nfor i in range(lim,0,-1):\n  if A%i == 0 and B%i == 0:\n    count += 1\n    if count == K:\n      print(i)\n      break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "397": {
    "id": 397,
    "code": "s = \"codefestival\"\nk = 100\nans=''\nfor i in range(len(s)-1):\n  if s[i]=='a':\n    ans+='a'\n  else:\n    if k>=123-ord(s[i]):\n      k-=(123-ord(s[i]))\n      ans+='a'\n    else:\n      ans+=s[i]\nans+=chr((ord(s[-1])-97+k)%26+97)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "3856": {
    "id": 3856,
    "code": "x = 64145;y = 123;z = 456\nx -= z\ny += z\nprint(x//y)",
    "coverage": [">", ">", ">", ">"]
  },
  "751": {
    "id": 751,
    "code": "k = 2\ns = 7\nnum = 1\nres = True\nif k == 2:\n    print(-1)\nelse:\n    for i in range(k):\n        s %= k\n        if s == 0:\n            res = False\n            print(num)\n            break\n        num += 1\n        s *= 10\n        s += 7\n    if res:\n        print(-1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "3138": {
    "id": 3138,
    "code": "S = \"1234567876\"\nn=len(S)\nans = 1e8\nfor i in range(n-2):\n    m = int(S[i] + S[i+1] + S[i+2])\n    d = abs(m-753)\n    if d < ans:\n        ans = d\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8332": {
    "id": 8332,
    "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "15648": {
    "id": 15648,
    "code": "X = 12;Y = 3;Z = 1\nans = X//(Y+Z) - 1\nif ans*(Y+Z)+(Y+Z+Z) <= X: ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "19495": {
    "id": 19495,
    "code": "n = 3\ncontador = 0\nres = 0\nwhile(True):\n    contador += n\n    if contador % 2 == 0 and contador % n == 0:\n        res = contador\n        break;\nprint(res,'\\n')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3691": {
    "id": 3691,
    "code": "A = 20;B = 15\nC = A - B * 2\nprint(0 if C < 0 else C)",
    "coverage": [">", ">", ">"]
  },
  "16916": {
    "id": 16916,
    "code": "a = \"D\";b = \"D\"\nif a == b:\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17": {
    "id": 17,
    "code": "s = \"a\"\nk = 25\nans = \"\"\nfor i in s:\n    if k >= (123 - ord(i)) % 26:\n        k -= (123 - ord(i)) % 26\n        ans += \"a\"\n    else:\n        ans += i\nprint(ans[:-1] + chr((ord(ans[-1]) - 97 + k) % 26 + 97))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "2435": {
    "id": 2435,
    "code": "N = 4;M = 3\na = N*(N-1)\nb = M*(M-1)\nprint(int((a+b)/2))",
    "coverage": [">", ">", ">", ">"]
  },
  "7731": {
    "id": 7731,
    "code": "n = 3;k = 3\na = [1, 2, 3]\nfinal=min(a)\nans=0\nflag=-1\ncheck=0\nfor v in a:\n    if flag==-1 and v!=final:\n        flag=2\n        ans+=1\n        check=0\n        if flag==k:\n            flag=-1\n    elif flag>=0:\n        if check==0 and v==final:\n            flag-=1\n            check=1\n        flag+=1\n        if flag==k:\n            flag=-1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "15831": {
    "id": 15831,
    "code": "x = 64145;y = 123;z = 456\nres = (x - z) // (y + z)\nprint(res)",
    "coverage": [">", ">", ">"]
  },
  "3972": {
    "id": 3972,
    "code": "X = 64146;Y = 123;Z = 456\ntemp = X-Z\nans = temp//(Y+Z)\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "9490": {
    "id": 9490,
    "code": "S = \"2017/01/07\"\nSn = S.replace('2017','2018')\nprint(Sn)",
    "coverage": [">", ">", ">"]
  },
  "2814": {
    "id": 2814,
    "code": "n = \"1111111111\"\ncount = 1000\nfor i in range(len(n)-2):\n    count = min(count, abs(753 - int(n[i:i+3])))\nprint(count)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "5403": {
    "id": 5403,
    "code": "N = 100\nq, r = divmod(N, 2)\nprint(q + r)",
    "coverage": [">", ">", ">"]
  },
  "9758": {
    "id": 9758,
    "code": "n = 6\ns = \")))())\"\ni = 0\nmi = 0\nfor c in s:\n    if c=='(':\n        i += 1\n    else:\n        i -= 1\n    mi = min(mi, i)\nans = '('*(-mi) + s + ')'*(i-mi)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]
  },
  "65": {
    "id": 65,
    "code": "S = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nfor i in range(len(S)):\n    if S[i] == 'a':\n        continue\n    d = ord('z') - ord(S[i]) + 1\n    if K >= d:\n        S[i] = 'a'\n        K -= d\nif K > 0:\n    j = ord(S[-1]) + K % 26\n    S[-1] = chr(j)\nprint(''.join(S))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1800": {
    "id": 1800,
    "code": "n = 10;a = 7;b = 5\nmax = 0\nmin = 0\nif a > b:\n  max = b\n  min = b - (n - a)\nelse:\n  max = a\n  min = a - (n - b)\nif min < 0:\n  min = 0\nprint('{} {}'.format(max, min))",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]
  },
  "9693": {
    "id": 9693,
    "code": "n = \"6\"\ns = \")))())\"\nl = \"(\"\nr = \")\"\nadd_right, add_left = 0, 0\nfor c in s:\n    if c == l:\n        add_right += 1\n    else:\n        if add_right:\n            add_right -= 1\n        else:\n            add_left += 1\nprint(l * add_left + s + r * add_right)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "12016": {
    "id": 12016,
    "code": "M = 11;D = 30\nN = 12;A = 1\nif N>M:\n    print('1')\nelse:\n    print('0')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "8935": {
    "id": 8935,
    "code": "n = 7\nal = [3, 3, 4, 5, 4, 5, 3]\nbl = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    tmp = sum(al[0:i+1]) + sum(bl[i:])\n    if ans < tmp:\n        ans = tmp\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9072": {
    "id": 9072,
    "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\nl = []\nl.append(a)\nl.append(b)\nl.append(c)\nl.append(d)\nl.append(e)\nans = 0\nfor i in range(5):\n    for j in range(i+1,5):\n        if l[j] - l[i] > k :\n            ans += 1\nif ans == 0 :\n    print(\"Yay!\")\nelse :\n    print(\":(\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "13974": {
    "id": 13974,
    "code": "N = 6\na = [1, 2, 3, 2, 2, 1]\nup = -1\nans = 1\nfor i in range(1, N):\n    if up == 0 and a[i] - a[i-1] > 0:\n        up = -1\n        ans += 1\n    elif up == 1 and a[i] - a[i-1] < 0:\n        up = -1\n        ans += 1\n    elif up == -1 and a[i] - a[i-1] > 0:\n        up = 1\n    elif up == -1 and a[i] - a[i-1] < 0:\n        up = 0\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9148": {
    "id": 9148,
    "code": "import sys\nS = \"2017/01/07\"\nprint(\"2018\" + S[4:])",
    "coverage": [">", ">", ">"]
  },
  "19320": {
    "id": 19320,
    "code": "N = 3\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2*N)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "13375": {
    "id": 13375,
    "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a + ' ' + b + ' ' + c)",
    "coverage": [">", ">"]
  },
  "9509": {
    "id": 9509,
    "code": "s = \"2017/01/31\"\nprint('2018'+s[4:])",
    "coverage": [">", ">"]
  },
  "4651": {
    "id": 4651,
    "code": "s = \"internationalization\"\na = len(s) -2\nm = list(s)\nprint(str(m[0]) + str(a) + str(m[-1]))",
    "coverage": [">", ">", ">", ">"]
  },
  "6110": {
    "id": 6110,
    "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\nans=0\nind=[0]\nfor i in range(n):\n  ind.append(n-bisect.bisect_right(c,b[i])+ind[i])\nfor i in a:\n  b_ind=bisect.bisect_right(b,i)\n  ans+=ind[n]-ind[b_ind]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2080": {
    "id": 2080,
    "code": "n = 10;a = 3;b = 5\nand_=min(a,b)\nor_=max(0, a+b-n)\nprint(and_, or_)",
    "coverage": [">", ">", ">", ">"]
  },
  "11412": {
    "id": 11412,
    "code": "week = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']\nS = \"SAT\"\nprint(6 - week.index(S)) if week.index(S) != 6 else print(7)",
    "coverage": [">", ">", ">"]
  },
  "4042": {
    "id": 4042,
    "code": "H = ['10', '0', '15', '0', '30']\nsdy =0\nif int(H[2]) >= int(H[0]):\n  sdy = int(H[2])*60 +int(H[3])-int(H[0])*60 -int(H[1]) - int(H[4])\nelse:\n  H[2] = (int(H[2])+24)\n  sdy = int(H[2])*60 +int(H[3])-int(H[0])*60 -int(H[1]) - int(H[4])\nif int(sdy) < 0:\n  sdy = 0\nprint(sdy)",
    "coverage": [">", ">", ">", ">", "!", "!", "!", ">", "!", ">"]
  },
  "3103": {
    "id": 3103,
    "code": "S = \"1234567876\"\nnumbs=len(S)\nnin=10**3\nfor i in range(numbs-2):\n    nin=min(nin,abs(753-int(S[i:i+3])))\nprint(nin)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "5704": {
    "id": 5704,
    "code": "n = 5\nx = n // 2\ny = n % 2\nprint(x + y)",
    "coverage": [">", ">", ">", ">"]
  },
  "13024": {
    "id": 13024,
    "code": "if __name__ == '__main__':\n  x = 5\n  if (x == 3) or (x == 5) or (x == 7):\n    print(\"YES\")\n  else:\n    print(\"NO\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "804": {
    "id": 804,
    "code": "x=7\nans=1\nk = 2\nif k%2==0 or k%5==0:\n  print(-1)\nelse:\n  for i in range(1,k):\n    if x%k==0:\n      break\n    x=(x*10+7)%k\n    ans+=1\n  print(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "12331": {
    "id": 12331,
    "code": "S = \"atcoder\"\nN=len(S)\ns=''.join(list(reversed(S)))\nT=S[0:int((N-1)/2)]\nNT=len(T)\nt=''.join(list(reversed(T)))\nU=S[int((N+1)/2):N]\nNU=len(U)\nu=''.join(list(reversed(U)))\nif S[0:int((N-1)/2)] == s[0:int((N-1)/2)] and T == t and U == u:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "12321": {
    "id": 12321,
    "code": "s = \"level\"\nn = len(s)\nc = 0\nfor i in range(int((n - 1)/2)):\n  if (s[i] != s[n - 1 - i]):\n    c = 1\nx = int((n - 1)/2)\nfor i in range(x):\n  if (s[i] != s[x - 1 - i]):\n    c = 1\nif (c == 1):\n  print(\"No\")\nelse:\n  print(\"Yes\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "16048": {
    "id": 16048,
    "code": "a = \"20\";b = \"30\"\na = int(a)\nb = int(b)\nif a <= b:\n    print(\"0\")\nelif a <= b*2:\n    print(\"0\")\nelse:\n    print(a-b*2)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]
  },
  "4488": {
    "id": 4488,
    "code": "s = \"xyz\"\nprint(s[0],len(s)-2,s[len(s)-1], sep=\"\")",
    "coverage": [">", ">"]
  },
  "1099": {
    "id": 1099,
    "code": "import sys\nN = 750\nnum =[111,222,333,444,555,666,777,888,999]\nfor i in range(8):\n    if N <= num[0]:\n        ans =111\n        break\n    elif  num[i] < N <= num[i+1]:\n        ans =num[i+1] \nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "8538": {
    "id": 8538,
    "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandies = [sum(A1[:i+1] + A2[i:]) for i in range(N)]\nprint(max(candies))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "13377": {
    "id": 13377,
    "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(',', ' '))",
    "coverage": [">", ">"]
  },
  "11037": {
    "id": 11037,
    "code": "s = \"atcoder\"\ncount=0\nn=int(len(s))\nt1=s[:int((n-1)/2)]\nt2=s[int((n+3)/2-1):]\nresult='No'\nif s==s[::-1]:\n    if t1==t1[::-1]:\n        if t2==t2[::-1]:\n            result='Yes'\nprint(result)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]
  },
  "1058": {
    "id": 1058,
    "code": "N = 750\nfor i in range(N,1000):\n    S = str(i)\n    if S[0] == S[1] and S[1] == S[2]:\n        out = i\n        break\nprint(out)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "6263": {
    "id": 6263,
    "code": "import bisect\nN = 6\nAs = [2, 3, 6, 14, 53, 159]\nBs = [6, 9, 58, 79, 84, 323]\nCs = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor b in Bs:\n    a_b = bisect.bisect_left(As,b)\n    b_c = N - bisect.bisect_right(Cs, b)\n    cnt += a_b * b_c\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4463": {
    "id": 4463,
    "code": "s = \"smiles\"\nprint(s[0], len(s[1:-1]), s[-1], sep='')",
    "coverage": [">", ">"]
  },
  "19420": {
    "id": 19420,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nn = 10\nprint(2*n if n % 2 else n)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "5728": {
    "id": 5728,
    "code": "import math\nN = 5\nif N % 2 ==0:\n    print(math.floor(N/2))\nelse:\n    print(math.floor(N/2)+1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "7725": {
    "id": 7725,
    "code": "from math import ceil\na = 3;b = 3\nc = \"1 2 3\"\nprint(ceil((a-1)/(b-1)))",
    "coverage": [">", ">", ">", ">"]
  },
  "7326": {
    "id": 7326,
    "code": "H = 20;N = 3\ndata = [4, 5, 6]\nsum = sum(data)\nif H - sum > 0:\n    print('No')\nelse:\n    print('Yes')",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "8590": {
    "id": 8590,
    "code": "n = 1\na1 = [2]\na2 = [3]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5454": {
    "id": 5454,
    "code": "x = 100\nif x % 2 == 0:\n    print(x // 2)\nelse:\n    print(x // 2 + 1)",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "9887": {
    "id": 9887,
    "code": "n = 3\ns = \"())\"\np = 0\nq = 0\nfor i in range(n):\n    if s[i] == \")\":\n        if q == 0:\n            p += 1\n        else:\n            q -= 1\n    else:\n        q += 1\nprint(\"(\"*p+s+\")\"*q)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "14055": {
    "id": 14055,
    "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nf = 0\nfor i in range(n):\n    if f == 0:\n        f = 1\n    elif f == 1:\n        if a[i] > a[i - 1]:\n            f = 2\n        elif a[i] < a[i - 1]:\n            f = 3\n    elif f == 2:\n        if a[i] < a[i - 1]:\n            ans += 1\n            f = 1\n    elif f == 3:\n        if a[i] > a[i - 1]:\n            ans += 1\n            f = 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "19443": {
    "id": 19443,
    "code": "N = 10\nif N == 1:\n    print(2)\n    exit()\nans = N if N % 2 == 0 else 2 * N\nprint(ans)",
    "coverage": [">", ">", "!", "!", ">", ">"]
  },
  "10916": {
    "id": 10916,
    "code": "S = \"atcoder\"\nN = len(S)\nS1 = S[0:(N-1)//2]\nS2 = S[(N+3)//2-1:]\nprint('Yes' if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1] else 'No')",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2055": {
    "id": 2055,
    "code": "n = 10;a = 7;b = 5\nmax_ans = min(a,b)\nmin_ans = max(0, (a + b) - n)\nprint(max_ans, min_ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "15797": {
    "id": 15797,
    "code": "X = 12;Y = 3;Z = 1\nfor i in range(1,10**5):\n    if Y*i + Z*(i+1) > X:\n        print(i-1)\n        break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2310": {
    "id": 2310,
    "code": "N = 100;A = 100;B = 100\n_max = min(A,B)\n_min = min(A,B) - (N - max(A,B))\nif _min < 0:\n    _min = 0\nprint(_max,_min)",
    "coverage": [">", ">", ">", ">", "!", ">"]
  },
  "3307": {
    "id": 3307,
    "code": "a = 12;b = 4\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")",
    "coverage": [">", ">", ">", "!"]
  },
  "16939": {
    "id": 16939,
    "code": "a = \"D\";b = \"H\"\nif b == 'D':\n    if a == 'H':\n        a = 'D'\n    else:\n        a = 'H'\nelif a == b == 'D':\n    a = 'H'\nprint(a)",
    "coverage": [">", ">", "!", "!", "!", "!", ">", "!", ">"]
  },
  "17987": {
    "id": 17987,
    "code": "S = \"1700\"\nf = int(S[:2])\nb = int(S[2:])\nif (not 0 < f <= 12) and 0 < b <= 12:\n    print('YYMM')\nelif (not 0 < b <= 12) and 0 < f <= 12:\n    print('MMYY')\nelif 0 < f <= 12 and 0 < b <= 12:\n    print('AMBIGUOUS')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "15340": {
    "id": 15340,
    "code": "X_all = 13;Y_hito = 3;Z_interval = 1\nsyou = X_all // (Y_hito + Z_interval)\nif (syou * (Y_hito + Z_interval) + Z_interval <= X_all):\n    ans = syou\nelse:\n    ans = syou - 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "9426": {
    "id": 9426,
    "code": "S = \"2017/01/07\"\nS = \"2018\" + S[4:]\nprint(S)",
    "coverage": [">", ">", ">"]
  },
  "1486": {
    "id": 1486,
    "code": "N = 111\nif N % 111 == 0:\n  print(N)\nelse:\n  for i in range(110):\n    N += 1\n    if N % 111 == 0:\n      break\n  print(N)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "11725": {
    "id": 11725,
    "code": "d={'SUN':7,'MON':6,'TUE':5,'WED':4,'THU':3,'FRI':2,'SAT':1}\nprint(d[\"SUN\"])",
    "coverage": [">", ">"]
  },
  "4676": {
    "id": 4676,
    "code": "s = \"smiles\"\nprint(f'{s[0]}{len(s[1:-1])}{s[-1]}')",
    "coverage": [">", ">"]
  },
  "19382": {
    "id": 19382,
    "code": "import math\na = 10\nprint(a*2//math.gcd(a, 2))",
    "coverage": [">", ">", ">"]
  },
  "8642": {
    "id": 8642,
    "code": "n = 4\nal = [1, 1, 1, 1]\nbl = [1, 1, 1, 1]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12916": {
    "id": 12916,
    "code": "x = 5\nif (x == 3) or (x == 5) or (x == 7):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "7912": {
    "id": 7912,
    "code": "from math import ceil\nN = 3;K = 3\nA = [1, 2, 3]\nif N == K:\n    print(1)\nelif (N-1)%(K-1) == 0:\n    print((N-1)//(K-1))\nelif K == 2:\n    print(N-1)\nelse:\n    ans = ceil(N/(K-1))\n    print(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "15755": {
    "id": 15755,
    "code": "X = 12;Y = 3;Z = 1\nN = ((X - Z ) // (Y + Z))\nprint(N)",
    "coverage": [">", ">", ">"]
  },
  "1030": {
    "id": 1030,
    "code": "n = 750\ndiv_n = -(-n // 111)\nprint(111 * div_n)",
    "coverage": [">", ">", ">"]
  },
  "4217": {
    "id": 4217,
    "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ns = H1*60 + M1\ne = H2*60 + M2\nprint(e - K - s)",
    "coverage": [">", ">", ">", ">"]
  },
  "3166": {
    "id": 3166,
    "code": "s = \"35753\"\nans = 999\nfor i in range(0, len(s) - 2):\n    if ans > abs(int(s[i:i + 3]) - 753):\n        ans = abs(int(s[i:i + 3]) - 753)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "591": {
    "id": 591,
    "code": "S = \"xyz\"\nK = 4\nans = ''\nfor s in S:\n    to_a_cost = (26 - (ord(s) - 97)) % 26\n    if to_a_cost <= K:\n        ans += 'a'\n        K -= to_a_cost\n    else:\n        ans += s\nif K:\n    K %= 26\n    ans = ans[:-1] + chr(97 + (((ord(ans[-1]) - 97) + K) % 26))\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "6237": {
    "id": 6237,
    "code": "import bisect\nn = 3\nas_ = [1, 1, 1]\nbs_ = [2, 2, 2]\ncs_ = [3, 3, 3]\nas_.sort()\nbs_.sort()\ncs_.sort()\nans = 0\nfor b in bs_:\n  ans += bisect.bisect_left(as_, b) * (n-bisect.bisect_right(cs_, b))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8600": {
    "id": 8600,
    "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans=[0]*n\nfor i in range(n):\n  ans[i] += sum(A1[:i+1])+sum(A2[i:])\nprint(max(ans))",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "18962": {
    "id": 18962,
    "code": "N = 5\nif N % 2 == 1:\n    print(0)\nelse:\n    ans = 0\n    ind = 1\n    while True:\n        m = 5**ind\n        if m > N:\n            break\n        r = N//m\n        r //= 2\n        ans += r\n        ind += 1\n    print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "15400": {
    "id": 15400,
    "code": "x = 100000;y = 1;z = 1\nans = 0\nx -= z\nans += x // (y + z)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "7823": {
    "id": 7823,
    "code": "import math\nN = 3;K = 3\nL = [1, 2, 3]\nprint(math.ceil((N-1)/(K-1)))",
    "coverage": [">", ">", ">", ">"]
  },
  "1971": {
    "id": 1971,
    "code": "n = 100;a = 100;b = 100\nnmax = min(a, b)\nnmin = max(a + b - n, 0)\nprint(nmax, nmin, sep = \" \")",
    "coverage": [">", ">", ">", ">"]
  },
  "9534": {
    "id": 9534,
    "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3] = '8'\nprint(\"\".join(S))",
    "coverage": [">", ">", ">"]
  },
  "13896": {
    "id": 13896,
    "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\n    quit()\nA.append(A[N-1])\nans = 1\nlast = A[0]\ns = 0\nfor i in range(N-1):\n    if not(A[s] <= A[i] <= A[i+1]) and not(A[s] >= A[i] >= A[i+1]):\n        s = i + 1\n        ans += 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1705": {
    "id": 1705,
    "code": "a = 100;b = 100;c = 100\nprint(min(b, c), max((b+c) - a, 0))",
    "coverage": [">", ">"]
  },
  "18476": {
    "id": 18476,
    "code": "h = 3\nw = 7\nn = 10\na = max(h,w)\nprint(-(-n//a))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "14159": {
    "id": 14159,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\ni = 0\nwhile n > i:\n    ans += 1\n    while n > i + 1 and a[i] == a[i+1]:\n        i += 1\n    if n == i + 1:\n        break\n    if a[i] < a[i+1]:\n        while n > i + 1 and a[i] <= a[i+1]:\n            i += 1\n    else:\n        while n > i + 1 and a[i] >= a[i+1]:\n            i += 1\n    i += 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2372": {
    "id": 2372,
    "code": "n = 13;m = 3\nans = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "17897": {
    "id": 17897,
    "code": "s = \"1700\"\ns1, s2 = s[:2],s[2:]\nif s1>'12' and s2>'12':\n    print('NA')\nelif s1<='12' and s2<='12':\n    if s1 == '00' and s2!='00':\n        print('YYMM')\n    elif s2 == '00' and s1!='00':\n        print('MMYY')\n    elif s1 =='00' and s2 =='00':\n        print('NA')\n    else :\n        print('AMBIGUOUS')\nelif s1<='12' and s2>'12':\n    print('NA' if s1 == '00' else 'MMYY')   \nelif s2<='12' and s1>'12':\n    print('NA' if s2 == '00' else 'YYMM')\nelse:\n    print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "8495": {
    "id": 8495,
    "code": "N = 1\narray1 = [2]\narray2 = [3]\nma = 0\nfor i in range(N):\n    candy = sum(array1[:i+1])+sum(array2[i:])\n    ma = max(ma,candy)\nprint(ma)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7142": {
    "id": 7142,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\nfor i in range(N) :\n    H = H - A[i]\nif H > 0 :\n    print(\"No\")\nelse :\n    print(\"Yes\")",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "11174": {
    "id": 11174,
    "code": "s = \"atcoder\"\nn = len(s)\nt = s[:(n - 1) // 2]\nu = s[(n + 1) // 2:]\nprint(\"YNeos\"[any([s != s[::-1], t != t[::-1], u != u[::-1]])::2])",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "16520": {
    "id": 16520,
    "code": "n = 2\nA = [100, 0]\nmx = A[0]; A = A[1:]\nmn = A[0]\nfor a in A[1:]:\n    if abs(mn-mx/2) > abs(a-mx/2):\n        mn = a\n    else:\n        break\nprint(mx, mn)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "14317": {
    "id": 14317,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nsa = 0\nfor i in range(1, n):\n    new = a[i] - a[i-1]\n    if new * sa < 0:\n        cnt += 1\n        sa = 0\n        continue\n    if new != 0:\n        sa = new\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7850": {
    "id": 7850,
    "code": "n = 3;k = 3\nxs = [1, 2, 3]\ni0 = xs.index(min(xs))\nprint(1 + min([ (i + k - 2) // (k - 1) + (n - i - 2) // (k - 1)\n  for i in range(max(i0 - k + 1, 0), min(i0, n - k) + 1) ]))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2505": {
    "id": 2505,
    "code": "N = {0, 9, 4, 8}\nif {1, 9, 7, 4} == N:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "11932": {
    "id": 11932,
    "code": "a = 11;b = 16\nc = 11;d = 17\nif a != c:\n    print(1)\nelse:\n    print(\"0\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "12493": {
    "id": 12493,
    "code": "a = 100;b = 50;k = 4\nm = min(a,b)\nans = []\nfor i in range(1,m+1):\n    if a%i==0 and b%i==0:\n        ans.append(i)\nprint(ans[-k])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10390": {
    "id": 10390,
    "code": "A = 8;B = 12;K = 2\nif A > B:\n    num = A\n    A = B\n    B = num\nflag = 0\ncount = 0\nel = []\nfor i in range(1,A+1):\n    if A % i == 0 and B % i == 0:\n        el.append(i)\nprint(el[-K])",
    "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12230": {
    "id": 12230,
    "code": "S = \"atcoder\"\nN = len(S)//2\nprint('Yes' if S[:N] == S[-N:] else 'No')",
    "coverage": [">", ">", ">"]
  },
  "3661": {
    "id": 3661,
    "code": "x = 20;y = 15\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17965": {
    "id": 17965,
    "code": "S = \"0112\"\nf = int(S[:2])\nl = int(S[2:])\nif f==0 or f>12:\n  if l==0 or l>12:\n    print(\"NA\")\n  else:\n    print(\"YYMM\")\nelse:\n  if l==0 or l>12:\n    print(\"MMYY\")\n  else:\n    print(\"AMBIGUOUS\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "18195": {
    "id": 18195,
    "code": "from collections import defaultdict\nn = 6\nL_dict, R_dict = defaultdict(int), defaultdict(int)\ni = 0\nfor ipt in \"5 2 4 2 8 8\".split():\n    L_dict[i + int(ipt)] += 1\n    R_dict[i - int(ipt)] += 1\n    i += 1\ncnt = 0\nfor Lk, Lv in L_dict.items():\n    try:\n        cnt += R_dict[Lk] * Lv\n    except KeyError:\n        pass\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "206": {
    "id": 206,
    "code": "S = \"codefestival\"\nN = len(S)\nK = 100\nT = []\nfor i in range(N):\n    s = ord(S[i]) - 97\n    a = (26-s) % 26\n    if a <= K:\n        K -= a\n        T.append(\"a\")\n    else:\n        T.append(S[i])\nT[-1] = chr((ord(T[-1]) - 97 + K) % 26 + 97)\nprint(\"\".join(T))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "15150": {
    "id": 15150,
    "code": "n = 1;p = 1\nA = [50]\no = 0\nfor a in A:\n\tif a % 2:\n\t\to += 1\ne = n - o\nif o == 0 and p == 1:\n\tprint(0)\nelse:\n\tprint(2**e * 2**max(0, o - 1))",
    "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!"]
  },
  "12808": {
    "id": 12808,
    "code": "if \"5\" in '753':\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", ">", "!", "!"]
  },
  "13441": {
    "id": 13441,
    "code": "s1 = \"abcde\";s2 = \"fghihgf\";s3 = \"edcba\"\nprint(s1, s2, s3)",
    "coverage": [">", ">"]
  },
  "2502": {
    "id": 2502,
    "code": "N = {1, 4, 9, 7}\nif {1, 9, 7, 4} == N:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "13244": {
    "id": 13244,
    "code": "S = \"happy,newyear,enjoy\"\nS=S.replace(\",\",\" \")\nprint(S)",
    "coverage": [">", ">", ">"]
  },
  "7687": {
    "id": 7687,
    "code": "H = 210;N = 5\nList = [31, 41, 59, 26, 53]\nList.sort(reverse=True)\nk = 0\nres = \"No\"\nfor i in range(N):\n  k += List[i]\n  if k >= H:\n    res = \"Yes\"\n    break\nprint(res)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7209": {
    "id": 7209,
    "code": "x = 10;y = 3\nz = map(int, \"4 5 6\".split())\nif sum(z) >= x:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "12633": {
    "id": 12633,
    "code": "x = 6\nans = \"YES\" if (x == 3 or x == 5 or x == 7) else \"NO\"\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "11495": {
    "id": 11495,
    "code": "weekday = \"SUN\"\nlist = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nnext = 7 - list.index(weekday)\nprint(next)",
    "coverage": [">", ">", ">", ">"]
  },
  "10426": {
    "id": 10426,
    "code": "a = 1;b = 1;k = 1\nm=max(a,b)\ni=0\nwhile i<k:\n    if a%m==0 and b%m==0:\n        i+=1\n    m-=1\nprint(m+1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10966": {
    "id": 10966,
    "code": "s = \"akasaka\"\nif s != s[::-1]:\n    print('No')\n    exit()\nn = len(s)\ns1 = s[:((n-1)//2)]\ns2 = s[((n+3)//2)-1:n]\nif s1 != s1[::-1] and s2 != s2[::-1]:\n    print('No')\n    exit()\nprint('Yes')",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]
  },
  "12757": {
    "id": 12757,
    "code": "x = \"6\"\nprint(\"YES\" if x in \"357\" else \"NO\")",
    "coverage": [">", ">"]
  },
  "17161": {
    "id": 17161,
    "code": "a = \"H\";b = \"H\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "19014": {
    "id": 19014,
    "code": "N = 12\nif N & 1:\n    print(0)\n    exit()\nN //= 2\ncnt = 0\nwhile N:\n    cnt += N//5\n    N //= 5\nprint(cnt)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "18356": {
    "id": 18356,
    "code": "h = 3\nw = 7\nn = 10\nc = n // max(h,w)\nif(n % max(h,w) != 0):c+=1\nprint(c)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "16764": {
    "id": 16764,
    "code": "S = ['H', 'H']\nif S[0]==S[1]:\n    print('H')\nelse:\n    print('D')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "8584": {
    "id": 8584,
    "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6035": {
    "id": 6035,
    "code": "import sys\nimport math\ninput = sys.stdin.readline\nn = 2\nprint(math.ceil(n/2))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "938": {
    "id": 938,
    "code": "K = 2\nif K % 7 == 0:\n    K //= 7\nL = 9 * K\nans = -1\nr = 10\nfor i in range(L):\n    r %= L\n    if r == 1:\n        ans = i + 1\n        break\n    else:\n        r = 10 * r\nprint(ans)",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "8654": {
    "id": 8654,
    "code": "N = 1\nA_1 = [2]\nA_2 = [3]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9441": {
    "id": 9441,
    "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[0:4]=[\"2\",\"0\",\"1\",\"8\"]\nprint(\"\".join(s))",
    "coverage": [">", ">", ">"]
  },
  "15345": {
    "id": 15345,
    "code": "import sys\ninput = sys.stdin.readline\nx = 13;y = 3;z = 1\nprint((x-z)//(y+z))",
    "coverage": [">", ">", ">", ">"]
  },
  "3946": {
    "id": 3946,
    "code": "x = 12;y = 3;z = 1\nx -= z\nr = x // (y + z)\nprint(r)",
    "coverage": [">", ">", ">", ">"]
  },
  "6335": {
    "id": 6335,
    "code": "from bisect import bisect_right, bisect_left\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nlc = len(C)\nans = 0\nfor b in B:\n    a = bisect_left(A, b)\n    c = len(C) - bisect_right(C, b)\n    ans += a * c\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9327": {
    "id": 9327,
    "code": "date = \"2017/01/31\"\ndate_changed = date[:3] + '8' + date[4:]\nprint(date_changed)",
    "coverage": [">", ">", ">"]
  },
  "5757": {
    "id": 5757,
    "code": "n = 100\nans = n // 2\nif n % 2 == 0:\n  print(ans)\nelse:\n  print(ans + 1)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "3663": {
    "id": 3663,
    "code": "w = 12;c = 4\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "15429": {
    "id": 15429,
    "code": "x = 64146;y = 123;z = 456\nans = x // (y + z)\nif x - (ans * (y + z)) < z:\n    ans -= 1\nprint(ans)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "17527": {
    "id": 17527,
    "code": "S = 112\nS1, S2 = S // 100, S % 100\nYYMM = (1 <= S2 and S2 <= 12)\nMMYY = (1 <= S1 and S1 <= 12)\nif YYMM and MMYY:\n    print(\"AMBIGUOUS\")\nelif YYMM:\n    print(\"YYMM\")\nelif MMYY:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "19185": {
    "id": 19185,
    "code": "n = 5\nif n%2==1:\n  print(0)\nelse:\n  ans = 0\n  div = 10\n  pt = 1\n  while div<=n:\n    ans += n//div\n    div *=5\n  print(ans)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!"]
  },
  "1112": {
    "id": 1112,
    "code": "N = 750\ni = N // 111\nif N%111 != 0:\n    i += 1\nprint(i*111)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "6352": {
    "id": 6352,
    "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfor i in range(N):\n    idxa=bisect_left(A,B[i])\n    idxc=bisect_right(C,B[i])\n    ans+=idxa*(N-idxc)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "6097": {
    "id": 6097,
    "code": "n = 5\nprint(int(n/2) if n%2==0 else int(n/2)+1)",
    "coverage": [">", ">"]
  },
  "3899": {
    "id": 3899,
    "code": "x = 64146;y = 123;z = 456\nx -= 2*z\nans = 1\nx -= y\nans += x//(y+z)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "1521": {
    "id": 1521,
    "code": "n = \"750\"\nif int(n[0]*len(n)) >= int(n):\n    print(n[0]*len(n))\nelse:\n    print(str(int(n[0])+1)*len(n))",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "6772": {
    "id": 6772,
    "code": "h = 211;n = 5\na = [31, 41, 59, 26, 53]\nsum_a = sum(a)\nif sum_a < h:\n    print('No')\nelse:\n    print('Yes')",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "12132": {
    "id": 12132,
    "code": "a = \"11\";b = \"30\"\nc = \"12\";d = \"1\"\nb=int(b)\nd=int(d)\nif d-b==1:\n    print(\"0\")\nelse:\n    print(\"1\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "1702": {
    "id": 1702,
    "code": "n = 100.0;a = 100.0;b = 100.0\nprint(int(min(a,b)), int(max(a+b-n, 0)))",
    "coverage": [">", ">"]
  },
  "3007": {
    "id": 3007,
    "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    t = abs(int(S[i:i+3])- 753)\n    if t < ans:\n        ans = t\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "13380": {
    "id": 13380,
    "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5],s[6:13],s[14:20])",
    "coverage": [">", ">"]
  },
  "13414": {
    "id": 13414,
    "code": "data = \"abcde,fghihgf,edcba\"\nx = data.replace(\",\",\" \")\nprint(x)",
    "coverage": [">", ">", ">"]
  },
  "16518": {
    "id": 16518,
    "code": "N = 2\nA = [100, 0]\nA.sort()\nncand = A[-1]\nccand = A[0]\nnhalf = ncand // 2\ndiff = abs(nhalf - ccand)\nfor i in range(1, N-1):\n    d = abs(nhalf - A[i])\n    if diff >= d:\n        ccand = A[i]\n        diff = d\nprint(ncand, ccand)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "18624": {
    "id": 18624,
    "code": "h = 14\nw = 12\nn = 112\nma = max(h, w)\nprint(n // ma) if n // ma == n / ma else print(n // ma + 1)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2972": {
    "id": 2972,
    "code": "s = \"1111111111\"\nans = 999\nfor i in range(len(s) - 2):\n    x = int(s[i:i + 3])\n    diff = abs(753 - x)\n    ans = min(diff, ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10838": {
    "id": 10838,
    "code": "s = \"level\"\nif s[:]==s[::-1]:\n    a=s[:((len(s)-1)//2)]\n    if a[:]==a[::-1]:\n        b=s[((len(s)+2)//2):]\n        if b[:]==b[::-1]:\n            print(\"Yes\")\n            exit()\nprint(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "17106": {
    "id": 17106,
    "code": "a = \"H\";b = \"H\"\nd={\"D\":False,\"H\":True}\nprint(\"D\" if d[a] ^ d[b] else \"H\")",
    "coverage": [">", ">", ">"]
  },
  "17937": {
    "id": 17937,
    "code": "s = \"1905\"\nl = int(s[0]) * 10 + int(s[1])\nr = int(s[2]) * 10 + int(s[3])\nres = \"NA\"\nif l == 0:\n    if 1 <= r <= 12:\n        res = \"YYMM\"\n    else:\n        res = \"NA\"\nelif 1 <= l <= 12:\n    if 1 <= r <= 12:\n        res =\"AMBIGUOUS\"\n    else:\n        res = \"MMYY\"\nelse:\n    if 1 <= r <= 12:\n        res = \"YYMM\"\n    else:\n        res = \"NA\"\nprint(res)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "1956": {
    "id": 1956,
    "code": "N = 100;A = 100;B = 100\nsmax = min(A,B)\nsmin = max(A+B-N,0)\nprint(smax,smin)",
    "coverage": [">", ">", ">", ">"]
  },
  "3575": {
    "id": 3575,
    "code": "from sys import stdin\na = 20;b = 15\nprint(a - 2*b if a-2*b > 0 else 0)",
    "coverage": [">", ">", ">"]
  },
  "653": {
    "id": 653,
    "code": "K = 101\nnana=7\nkou=1\nif K % 2 == 0 or K % 5 == 0:\n    print(-1)\nelse:\n    for i in range(1,K):\n        if nana % K == 0:\n            break\n        nana = (nana * 10 + 7) % K\n        kou +=1\n    print(kou)",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "17104": {
    "id": 17104,
    "code": "a = \"D\";b = \"H\"\nif a == b:\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "7620": {
    "id": 7620,
    "code": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nH = 211;N = 5\nA = [31, 41, 59, 26, 53]\nif H-sum(A)<=0:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14284": {
    "id": 14284,
    "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nres = 0\nwhile  i < N:\n    while i+1 < N and A[i] == A[i+1]: i += 1\n    if i+1 < N and A[i] <= A[i+1]:\n        while i+1 < N and A[i] <= A[i+1]: i += 1\n    elif i+1 < N and A[i] >= A[i+1]:\n        while i+1 < N and A[i] >= A[i+1]: i += 1\n    res += 1\n    i += 1\nprint(res)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "9461": {
    "id": 9461,
    "code": "s1 = \"2017\";s2 = \"01\";s3 = \"31\"\ns = '2018' + '/' + s2 + '/' + s3\nprint(s)",
    "coverage": [">", ">", ">"]
  },
  "11223": {
    "id": 11223,
    "code": "days = [\"DAYS\",\"SAT\",\"FRI\",\"THU\",\"WED\",\"TUE\",\"MON\",\"SUN\"]\ns = \"SUN\"\nfor i in days:\n    if i == s:\n        print(days.index(i))\n        break",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "2923": {
    "id": 2923,
    "code": "s = \"35753\"\nans = 753\nfor i in range(len(s) - 2):\n  x = int(s[i:i+3])\n  if abs(753 - x) < ans:\n    ans = abs(753-x)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1980": {
    "id": 1980,
    "code": "n = 10;a = 7;b = 5\ns=min(a,b)\nt=max(a,b)\nif s+t<=n:\n    u=0\nelse:\n    u=s+t-n\nprint(str(s)+' '+str(u))",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "13005": {
    "id": 13005,
    "code": "koman = 6\nif koman==7 or koman==5 or koman==3:\n    print(\"YES\")\nelse :\n    print(\"NO\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "10027": {
    "id": 10027,
    "code": "n = \"8\"\ncnt = 0\nS = \"))))((((\"\nm = 0\nfor s in S:\n    if s == \"(\":\n        cnt += 1\n    else:\n        cnt -= 1\n    m = min(m, cnt)\nleft = -min(0, m)\nright = abs(cnt - m)\nprint(\"(\" * left + S + \")\" * right)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2669": {
    "id": 2669,
    "code": "n = {1, 4, 9, 7}\nif {1, 9, 7, 4} == n:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "5144": {
    "id": 5144,
    "code": "s = \"smiles\"\nn=len(s)\nw=str(len(s)-2)\nprint(s[0]+w+s[-1])",
    "coverage": [">", ">", ">", ">"]
  },
  "1995": {
    "id": 1995,
    "code": "n = 10;a = 7;b = 5\nx=min(a,b)\nif a+b<=n:\n    y=0\nelse:\n    y=a+b-n\nprint(x,y)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "16256": {
    "id": 16256,
    "code": "n = 2\na = [100, 0]\na.sort(reverse=True)\nc = a[0]\nch = -(-a[0]//2)\nminD = 10**9\nx = -1\nfor i in range(n):\n    dif = abs(a[i]-ch)\n    if minD>=dif:\n        minD=dif\n        x = a[i]\nprint(c,x)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12264": {
    "id": 12264,
    "code": "s = \"atcoder\"\ns1 = s[:len(s) // 2]\ns2 = s[:len(s) // 2:-1]\ns3 = s[len(s) // 2 + 1:]\nif s1 == s2 == s3:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "8854": {
    "id": 8854,
    "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12025": {
    "id": 12025,
    "code": "md1 = [11, 16]\nmd2 = [11, 17]\nprint(1 if md1[0]!=md2[0] else 0)",
    "coverage": [">", ">", ">"]
  },
  "6588": {
    "id": 6588,
    "code": "from bisect import bisect_right\nn = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nb.sort()\nc.sort()\nans = 0\nbcb_cum = [0] * (n+1)\nfor i in range(n):\n    bcb_cum[i+1] = bcb_cum[i] + n - bisect_right(c, b[i])\nfor x in a:\n    l = bisect_right(b, x)\n    ans += bcb_cum[n] - bcb_cum[l]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "17933": {
    "id": 17933,
    "code": "s = \"1700\"\nif 0 < int(s[:2]) <= 12 and 0 < int(s[2:]) <= 12:\n  print('AMBIGUOUS')\nelif 0 < int(s[:2]) <= 12 and int(s[2:]) >= 0:\n  print('MMYY')\nelif 0 < int(s[2:]) <= 12 and int(s[:2]) >= 0:\n  print('YYMM')\nelse:\n  print('NA')",
    "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "6742": {
    "id": 6742,
    "code": "a = 20;b = 3\nx = [4, 5, 6]\nprint('Yes') if a <= sum(x) else print('No')",
    "coverage": [">", ">", ">"]
  },
  "5448": {
    "id": 5448,
    "code": "import math\nprint(math.ceil(int(\"100\")/2))",
    "coverage": [">", ">"]
  },
  "6368": {
    "id": 6368,
    "code": "from bisect import bisect_left\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nd=[0]\ne=[]\nfor i in range(n):\n    d.append(bisect_left(a,b[i])+d[-1])\n    e.append(bisect_left(b,c[i]))\nans=0\nfor i in e:\n    ans+=d[i]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "15493": {
    "id": 15493,
    "code": "x = 13;y = 3;z = 1\nans = x // (y + z)\nif x - ans*(y + z) < z:\n    ans = max(0, ans-1)\nprint(ans)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "15102": {
    "id": 15102,
    "code": "n = 2;p = 0\na = [1, 3]\na1 = []\na2 = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        a2.append(a[i])\n    else:\n        a1.append(a[i])\nif len(a2) == n:\n    if p == 0:\n        print(2**n)\n    else:\n        print(0)\nelse:\n    print(2**(n-1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "6458": {
    "id": 6458,
    "code": "from collections import defaultdict\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nad = defaultdict(lambda: -1)\ni, j = 0, 0\nwhile i < N and j < N:\n    if A[i] < B[j]:\n        ad[i] = j\n        i += 1\n    else:\n        j += 1\nbd = defaultdict(lambda: -1)\ni, j = 0, 0\nwhile i < N and j < N:\n    if B[i] < C[j]:\n        bd[i] = j\n        i += 1\n    else:\n        j += 1\ncsum = [0] * N\nfor i in range(N):\n    if bd[i] >= 0:\n        csum[i] = N-bd[i]\nbsum = [0]* N\ncnt = 0\nfor i in range(N):\n    cnt += csum[N-1-i]\n    bsum[N-1-i] = cnt\nans = 0\nfor i in range(N):\n    if ad[i] >= 0:\n        ans += bsum[ad[i]]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12277": {
    "id": 12277,
    "code": "s = ['a', 'k', 'a', 's', 'a', 'k', 'a']\nn = len(s)\nif (\n    s[: (n - 1) // 2] == s[: (n - 1) // 2][::-1]\n    and s[(n + 1) // 2 :] == s[(n + 1) // 2 :][::-1]\n    and s == s[::-1]\n):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", "!", ">", ">", ">", "!", ">", "!", "!"]
  },
  "13526": {
    "id": 13526,
    "code": "A = \"happy\";B = \"newyear\";C = \"enjoy\"\nprint(A, B, C)",
    "coverage": [">", ">"]
  },
  "339": {
    "id": 339,
    "code": "s = \"a\"\nk = 25\nn = len(s)\na = []\nfor i in range(n):\n    a.append(ord(s[i])-ord('a'))\nfor i in range(n):\n    need = (26 - a[i])%26\n    if(k>=need):\n        a[i]=0\n        k-=need\nk %= 26\nfor ii in range(n):\n    i = n-1-ii\n    rem = 25 - a[i]\n    if(rem<=k):\n        a[i]+=rem\n        k-=rem\n    else:\n        a[i]+=k\n        k=0\n        break\nans = [' ' for i in range(n)]\nfor i in range(n):        \n    ans[i] = chr(a[i]+ord('a'))\nprint(''.join(map(str,ans)))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2539": {
    "id": 2539,
    "code": "n = map(int, \"1 9 7 4\".split())\nbeginning = set([1, 9, 7, 4])\nprint('YES' if beginning == set(n) else 'NO')",
    "coverage": [">", ">", ">"]
  },
  "3637": {
    "id": 3637,
    "code": "A = 20;B = 30\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "17822": {
    "id": 17822,
    "code": "S = \"1700\"\nl, r = int(S[:2]), int(S[2:])\nif 0<l<13 and 0<r<13:\n    print(\"AMBIGUOUS\")\nelif 0<l<13:\n    print(\"MMYY\")\nelif 0<r<13:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")",
    "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "13865": {
    "id": 13865,
    "code": "n = 7\na_l = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nis_plus = None\nsub = []\nfor i in a_l:\n    if len(sub) == 0:\n        sub.append(i)\n        continue\n    if i == sub[-1]:\n        sub.append(i)\n        continue\n    if is_plus is None:\n        if sub[-1] > i:\n            is_plus = False\n        else:\n            is_plus = True\n        sub.append(i)\n    elif is_plus is True:\n        if sub[-1] > i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\n    else:\n        if sub[-1] < i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\nprint(ans) ",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "12460": {
    "id": 12460,
    "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nn=len(s)\nif list(s[::-1])==list(s[:]) and list(s[(n-1)//2-1::-1])==list(s[:(n-1)//2]) and list(s[:(n+3)//2-2:-1])==list(s[(n+3)//2-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "6462": {
    "id": 6462,
    "code": "import bisect\nN = 2\nA = (1, 5)\nB = (2, 4)\nC = (3, 6)\nres = 0\nfor i in range(N):\n\tres += bisect.bisect_left(A, B[i])*(N - bisect.bisect_right(C, B[i]))\nprint(res)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6501": {
    "id": 6501,
    "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA=sorted(A)\nB=sorted(B)\nC=sorted(C)\nA2=[0]*N\ns=0\ni=0\nn=A[s]\nwhile True:\n  if B[i]>n:\n    A2[i]+=1\n    s+=1\n    if s==N:\n      break\n    n=A[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  A2[i]=A2[i-1]+A2[i]\nB2=[0]*N\ns=0\ni=0\nn=B[s]\nwhile True:\n  if C[i]>n:\n    B2[i]+=A2[s]\n    s+=1\n    if s==N:\n      break\n    n=B[s]\n  else:\n    i+=1\n  if i==N:\n    break\nfor i in range(1,N):\n  B2[i]=B2[i-1]+B2[i]\nprint(sum(B2))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "2323": {
    "id": 2323,
    "code": "n = 10;a = 3;b = 5\nprint(\"{} {}\".format((min(a,b)),(max(0,(a+b)-n))))",
    "coverage": [">", ">"]
  },
  "4934": {
    "id": 4934,
    "code": "list_S = \"smiles\"\nnum = len(list_S)-2\nnum = str(num)\nf = list_S[0]\nl = list_S[-1]\nans = [f, num, l]\nprint(\"\".join(ans))",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "9946": {
    "id": 9946,
    "code": "N = 6\nS = \")))())\"\ni=0\nhidari=str()\nmigi=str()\na=0\nwhile i<N:\n  if S[i]==\")\":\n    hidari+=\"(\"\n    i+=1\n  else:\n    break\nwhile i<N:\n  if S[i]==\"(\":\n    a+=1\n  else:\n    a-=1\n  i+=1\nif a<0:\n  hidari+=abs(a)*\"(\"\nelif a>0:\n  migi+=a*\")\"\ns=hidari+S+migi\ni=0\nhidari=str()\nmigi=str()\na=0\nwhile i<N:\n  if S[i]==\")\":\n    hidari+=\"(\"\n    i+=1\n  else:\n    break\nwhile i<N:\n  if S[i]==\"(\":\n    if a<0:\n      a=0\n    a+=1\n    mina=0\n  else:\n    a-=1\n    if a<0:\n      if mina>a:\n        hidari+=\"(\"\n  i+=1\nif a>0:\n  migi+=a*\")\"\nt=hidari+S+migi\nif len(s)==len(t):\n  print(s)\nelif len(s)>len(t):\n  print(s)\nelse:\n  print(t)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "3296": {
    "id": 3296,
    "code": "a = 20;b = 30\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "8015": {
    "id": 8015,
    "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nif (N-1)%(K-1) == 0:\n  print((N-1)//(K-1))\nelse:\n  print((N-1)//(K-1)+1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "1081": {
    "id": 1081,
    "code": "x = 112\nfor i in range(x, 1000):\n  if i // 100 == i % 10 and i // 100 == (i // 10) % 10:\n    break\nprint(i)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "11516": {
    "id": 11516,
    "code": "l = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ns = \"SUN\"\nfor i, day in enumerate(l):\n    if day == s:\n        if i == 0:\n            print(7)\n        else:\n            print(7-i)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "8273": {
    "id": 8273,
    "code": "import math\nn = 3;k = 3\na = [1, 2, 3]\nb=math.ceil((n-1)/(k-1))\nprint(b)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "1472": {
    "id": 1472,
    "code": "from math import ceil\nn = 112\nif n%111 == 0:\n    print(n)\nelse:\n    print(111*ceil(n/111))",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "11761": {
    "id": 11761,
    "code": "a = [11, 30]\nb = [12, 1]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "2154": {
    "id": 2154,
    "code": "n = 100;a = 100;b = 100\nmin_num = min(a,b)\nmax_num = max(a+b-n,0)\nprint(min_num, max_num)",
    "coverage": [">", ">", ">", ">"]
  },
  "1519": {
    "id": 1519,
    "code": "n = \"111\"\nif int(n[0]*len(n)) >= int(n):\n    print(n[0]*len(n))\nelse:\n    print(str(int(n[0])+1)*len(n))",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17498": {
    "id": 17498,
    "code": "x = \"1700\"\na, b = int(x[0:2]), int(x[2:4])\nflag = 0\nans = [\"AMBIGUOUS\", \"YYMM\", \"MMYY\", \"NA\"]\nif (a >= 1 and a <= 12) and (b >= 1 and b <= 12):\n    flag = 0\nelif (a == 0 and b > 12) or (b == 0 and a > 12) or (b > 12 and a > 12) or (b == 0 and a == 0):\n    flag = 3\nelif ((a > 0 and a <= 12) and (b >= 13)) or (b == 0 and (a >= 1 and a <= 12)):\n    flag = 2\nelif ((a >= 13) and (b > 0 and b <= 12)) or (a == 0 and (b >= 1 and b <= 12)):\n    flag = 1\nprint(ans[flag])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "16344": {
    "id": 16344,
    "code": "n = 5\na = [2, 4, 6, 9, 11]\nai=a[-1]\naa=ai/2\nans=float(\"inf\")\nfor i in range(n-1):\n    tmp=abs(a[i]-aa)\n    if tmp<ans:\n        ans=tmp\n        aj=a[i]\nprint(ai,aj)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "15534": {
    "id": 15534,
    "code": "x = 100000;y = 1;z = 1\nans = int(x/(y+z))\nif x%(y+z) < z:\n    ans -= 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2731": {
    "id": 2731,
    "code": "n = {0, 9, 4, 8}\nprint('YNEOS'[n!={1,9,7,4}::2])",
    "coverage": [">", ">"]
  },
  "596": {
    "id": 596,
    "code": "s = \"codefestival\"\nk = 100\nnum=[(123-ord(s[i]))%26 for i in range(len(s))]\nans=\"\"\nfor i in range(len(s)-1):\n    if num[i]<=k:\n        ans+=\"a\"\n        k-=num[i]\n    else:\n        ans+=s[i]\nk%=26\nif num[-1]<=k:\n    ans+=chr(97+k-num[-1])\nelse:\n    ans+=chr(ord(s[-1])+k)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "15018": {
    "id": 15018,
    "code": "n = 2;p = 0\na = [1, 3]\nodds = sum(i%2 for i in a)\nif odds>0:\n    print(2**(n-1))\nelif p==0:\n    print(2**(n))\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!"]
  },
  "8399": {
    "id": 8399,
    "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8876": {
    "id": 8876,
    "code": "n = 1\nA1 = (2,)\nA2 = (3,)\nfrom itertools import accumulate\nA1S = [0] + list(accumulate(A1))\nA2S = [0] + list(accumulate(A2))\nma = 0\nfor i in range(1, n+1):\n    ma = max(ma, A1S[i] + A2S[-1] - A2S[i-1])\nprint(ma)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "19182": {
    "id": 19182,
    "code": "N = 5\nN1 = N // 10\nif N % 2 == 1:\n    print(0)\nelse:\n    counter = 0\n    div = 10\n    while True:\n        num = N // div\n        if num == 0:\n            break\n        counter += num\n        div *= 5\n    print(counter)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "15418": {
    "id": 15418,
    "code": "x = 12;y = 3;z = 1\nfor i in range(x,0,-1):\n    if i*y+(i+1)*z<=x:\n        print(i)\n        break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10076": {
    "id": 10076,
    "code": "N = 6\ns = \")))())\"\nkeep = 0\nans = ''\nfor i in range(N):\n    if s[i] == '(':\n        ans += '('\n        keep += 1\n    else:\n        if keep > 0:\n            ans += ')'\n            keep -= 1\n        else:\n            ans = ('(' + ans + ')')\nprint(ans + ')' * keep)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "18345": {
    "id": 18345,
    "code": "import math\nh = 14\nw = 12\nn = 112\nif h < w:\n    a = w\nelse:\n    a = h\nprint(math.ceil(n/a))",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "18016": {
    "id": 18016,
    "code": "S = \"0112\"\nF = int(S[:2])\nB = int(S[2:])\nif F == 0 and B == 0:\n    print('NA')\nelif (F == 0 and B > 12) or (B == 0 and F > 12):\n    print('NA')\nelif F == 0:\n    print('YYMM')\nelif B == 0:\n    print('MMYY')\nelif (F <= 12 and B <= 12):\n    print('AMBIGUOUS')\nelif F > 12 and B <= 12:\n    print('YYMM')\nelif F <= 12 and B > 12:\n    print('MMYY')\nelse:\n    print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "12063": {
    "id": 12063,
    "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "7018": {
    "id": 7018,
    "code": "h = 211;n = 5\nsum = 0\nfor i in list(map(int, \"31 41 59 26 53\".split())):\n    sum += i\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14398": {
    "id": 14398,
    "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnow = A[0]\nkind = 0\nans = 0\nfor i in range(1,N):\n    if kind == 0:\n        if now < A[i]:\n            kind = 1\n        elif now > A[i]:\n            kind = 2\n    elif kind == 1: \n        if now > A[i]:\n            ans += 1\n            kind = 0\n    else: \n        if now < A[i]:\n            ans += 1\n            kind = 0\n    now = A[i]\nprint(ans+1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "16704": {
    "id": 16704,
    "code": "a = \"H\";b = \"H\"\nd={'H':0, 'D':1}\nprint(['H','D'][d[a]^d[b]])",
    "coverage": [">", ">", ">"]
  },
  "3827": {
    "id": 3827,
    "code": "x = 64146;y = 123;z = 456\nans=1\nx-=(y+2*z)\nprint(ans+x//(y+z))",
    "coverage": [">", ">", ">", ">"]
  },
  "7303": {
    "id": 7303,
    "code": "a = [10, 3]\nb = [4, 5, 6]\nif a[0]<= sum(b):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "10773": {
    "id": 10773,
    "code": "S = \"level\"\nN = len(S)\nS1 = S[0:(N-1)//2]\nS2 = S[(N+3)//2-1:N]\nprint(\"Yes\" if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1] else \"No\")",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9777": {
    "id": 9777,
    "code": "n = 8\ns = \"))))((((\"\nR, L = 0, 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        R += 1\n    else:\n        if R:\n            R -= 1\n        else:\n            L += 1\nprint('('*L + s + ')'*R)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]
  },
  "2806": {
    "id": 2806,
    "code": "s = \"1234567876\"\nm=1000\nfor i in range(len(s)-2):\n    tmp=s[i:i+3]\n    if abs(753-int(tmp))<m:\n        m=abs(753-int(tmp))\nprint(m)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1572": {
    "id": 1572,
    "code": "n = 111\nprint(((n+110)//111)*111)",
    "coverage": [">", ">"]
  },
  "9249": {
    "id": 9249,
    "code": "D = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\nD[3] = 8\nmap = map(str,D)\nprint(''.join(map))",
    "coverage": [">", ">", ">", ">"]
  },
  "2304": {
    "id": 2304,
    "code": "n = 100;a = 100;b = 100\nprint(min(a,b),(0 if n>=a+b else (a+b)-n))",
    "coverage": [">", ">"]
  },
  "6766": {
    "id": 6766,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\nsum_A = sum(A)\nif H <= sum_A:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "17175": {
    "id": 17175,
    "code": "a = \"D\";b = \"D\"\nif a==b:\n  print('H')\nelse:\n  print('D')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "13409": {
    "id": 13409,
    "code": "Haiku = \"happy newyear enjoy\"\nprint(Haiku)",
    "coverage": [">", ">"]
  },
  "19132": {
    "id": 19132,
    "code": "n = 12\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    t = 10\n    while n >= t:\n        ans += n//t\n        t *= 5\n    print(ans)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "10168": {
    "id": 10168,
    "code": "n = 8\ns = \"))))((((\"\nm = 0\nnow = 0\nfor i in s:\n    if i == ')':\n        now += 1\n        if m < now:\n            m = now\n    else:\n        now -= 1\nprint('('*m + s + ')'*(m + 2*s.count('(') - len(s)))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]
  },
  "4221": {
    "id": 4221,
    "code": "ip = [10, 0, 12, 0, 120]\nh = ip[2] - ip[0]\nm = ip[3] - ip[1]\ntotal = (h * 60) + m - ip[4]\nif total >= 0:\n    print(str(total))\nelse:\n    print(str(0))",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "6065": {
    "id": 6065,
    "code": "n = 2\ns=n//2\na=n%2\nif a==1:\n  print(s+1)\nelse:\n  print(s)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "10229": {
    "id": 10229,
    "code": "n = 3\ns = \"())\"\na = \"\"\nstack = []\nfor i in range(len(s)):\n    if s[i] == \"(\":\n        stack.append(\"(\")\n        a += \"(\"\n    elif s[i] == \")\" and len(stack) == 0:\n        stack.append(\")\")\n        a += \")\"\n    elif s[i] == \")\" and stack[-1] == \")\":\n        stack.append(\")\")\n        a += \")\"\n    else:  \n        stack.pop(-1)\n        a += \")\"\nwhile len(stack) > 0:\n    if stack[len(stack) - 1] == \")\":\n        e = len(stack) - 1\n        s = e\n        while s - 1 >= 0 and stack[s - 1] == \")\":\n            s -= 1\n        a = \"(\" * (e - s + 1) + a\n        stack = stack[:s]\n    elif stack[len(stack) - 1] == \"(\":\n        e = len(stack) - 1\n        s = e\n        while s - 1 >= 0 and stack[s - 1] == \"(\":\n            s -= 1\n        a = a + \")\" * (e - s + 1)\n        stack = stack[:s]\nprint(a)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "15263": {
    "id": 15263,
    "code": "X = 13;Y = 3;Z = 1\nans = X - Z\nYZ = Y + Z\nprint(ans // YZ)",
    "coverage": [">", ">", ">", ">"]
  },
  "3615": {
    "id": 3615,
    "code": "a = \"20\";b = \"15\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "18399": {
    "id": 18399,
    "code": "h = 14\nw = 12\nn = 112\nans = 0\nwhile True:\n    if h >= w:\n        n = n - h\n    else:\n        n = n - w\n    ans = ans + 1\n    if n <= 0:\n        break\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8188": {
    "id": 8188,
    "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nprint((N+K-3)//(K-1))",
    "coverage": [">", ">", ">"]
  },
  "14262": {
    "id": 14262,
    "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndp = (1, 1)\nfor i in range(1, N):\n    if A[i] > A[i-1]:\n        dp = min(dp)+1, min(dp[0]+1, dp[1])\n    elif A[i] == A[i-1]:\n        pass\n    else:\n        dp = min(dp[0], dp[1]+1), min(dp)+1\nprint(min(dp))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "15549": {
    "id": 15549,
    "code": "x = 12;y = 3;z = 1\nyz = y + z\nx -= z\nprint(x // yz)",
    "coverage": [">", ">", ">", ">"]
  },
  "7630": {
    "id": 7630,
    "code": "h = 20;n = 3\nl = [4, 5, 6]\nif sum(l)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "916": {
    "id": 916,
    "code": "k = 101\na=7%k\nfor i in range(k+1):\n  if a==0:\n    print(i+1)\n    break\n  a=(a*10+7)%k\nelse:\n  print(-1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "16545": {
    "id": 16545,
    "code": "a = \"H\";b = \"H\"\nans = 'H' if a == b else 'D'\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "2146": {
    "id": 2146,
    "code": "N = 10;A = 3;B = 5\na = min(A,B)\nb = max(0,A+B-N)\nprint(a,b)",
    "coverage": [">", ">", ">", ">"]
  },
  "1051": {
    "id": 1051,
    "code": "N = 111\nnow=111\nwhile now<N:\n    now+=111\nprint(now)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "15538": {
    "id": 15538,
    "code": "x = 12;y = 3;z = 1\nans = 0\nfor i in range(x):\n    if y*i+z*(i+1) <= x:\n        ans=max(ans, i)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "2597": {
    "id": 2597,
    "code": "N1 = 1;N2 = 9;N3 = 7;N4 = 4\nN1, N2, N3, N4 = sorted([N1, N2, N3, N4])\nif [N1, N2, N3, N4] == [1, 4, 7, 9]:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "9301": {
    "id": 9301,
    "code": "s = \"2017/01/31\"\nprint(s[:3]+'8'+s[4:])",
    "coverage": [">", ">"]
  },
  "4637": {
    "id": 4637,
    "code": "S = \"smiles\"\nprint(*[S[0],len(S)-2,S[-1]],sep='')",
    "coverage": [">", ">"]
  },
  "10291": {
    "id": 10291,
    "code": "N = 8\nS = \"))))((((\"\nS1 = S\ncur = 0\nfor i in range(len(S)):\n    if S[i]==\"(\":\n        cur += 1\n    else:\n        cur -= 1\n    if cur<0:\n        S1 = \"(\"+S1\n        cur += 1\nS1 = S1+\")\"*cur\nprint(S1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18774": {
    "id": 18774,
    "code": "h = 2\nw = 100\nn = 200\ntotal = h*w\nkesu = max(h, w)\nif n%kesu==0:\n    print(n//kesu)\nelse:\n    print(n // kesu + 1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "18460": {
    "id": 18460,
    "code": "h = 2\nw = 100\nn = 200\nv = max(h,w)\ncnt = (n-1)//v + 1\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "4854": {
    "id": 4854,
    "code": "a = \"xyz\"\nprint(a[0] + str(len(a) - 2) + a[-1])",
    "coverage": [">", ">"]
  },
  "8842": {
    "id": 8842,
    "code": "n = 7\nup = [3, 3, 4, 5, 4, 5, 3]\ndw = [5, 3, 4, 4, 2, 3, 2]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7292": {
    "id": 7292,
    "code": "import random\nH = 20;N = 3\nA = ['4', '5', '6']\nfor i in range(N):\n    A[i] = int(A[i])\nif (1 <= H, H <= 10 ** 9) and (1 <= N, N <= 10 ** 5):\n    for j in range(len(A)):\n        H -= A[j]\n    if H <= 0:\n        print('Yes')\n    if H > 0:\n        print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]
  },
  "12178": {
    "id": 12178,
    "code": "_ =  \"11 30\"\nd2 = 1\nif d2 == 1:\n  print(1)\nelse:\n  print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "11899": {
    "id": 11899,
    "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint(['0','1'][m1<m2])",
    "coverage": [">", ">", ">"]
  },
  "15595": {
    "id": 15595,
    "code": "X = 64145;Y = 123;Z = 456\nX -= Z\nprint(X // (Y + Z))",
    "coverage": [">", ">", ">"]
  },
  "12060": {
    "id": 12060,
    "code": "m1 = 11;d1 = 30\nm2 = 12;d2 = 1\nprint((m1<m2 and d1>d2)+0)",
    "coverage": [">", ">", ">"]
  },
  "9822": {
    "id": 9822,
    "code": "n = 3\ns = \"())\"\nstack = []\ncntLeft = 0\ncntRight = 0\nfor ss in s:\n    if ss == '(':\n        stack.append('(')\n    else:\n        if len(stack) > 0:\n            stack.pop()\n        else:\n            cntLeft += 1\ncntRight = len(stack)\nans = ''\nfor i in range(cntLeft):\n    ans += '('\nans += s\nfor i in range(cntRight):\n    ans += ')'\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "9188": {
    "id": 9188,
    "code": "y = \"2017/01/07\"\nprint(y.replace(\"2017\", \"2018\"))",
    "coverage": [">", ">"]
  },
  "19130": {
    "id": 19130,
    "code": "N = 12\nif N%2==1:\n  print(0)\nelse:\n  divide=2\n  count=0\n  while divide<N:\n    divide*=5\n    count+=N//divide\n  print(count)  ",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "7371": {
    "id": 7371,
    "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\na.sort(reverse=True)\ntemp = 0\nans = \"No\"\nfor i in a:\n    temp += i \n    if temp>=h:\n        ans = \"Yes\"\n        break\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8215": {
    "id": 8215,
    "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nN -= K\nK -= 1\nans = 1\nans += (N-1)//K + 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "8558": {
    "id": 8558,
    "code": "N = 1\nA = [2]\nB = [3]\name_A = [0] * N\name_B = [0] * N\nfor i in range(N):\n  if i == 0:\n    ame_A[i] += A[i]\n    continue\n  ame_A[i] += ame_A[i-1] + A[i]\nfor i in range(N-1,-1,-1):\n  if i == N - 1:\n    ame_B[i] += B[i]\n    continue\n  ame_B[i] += ame_B[i+1] + B[i]\nans = 0\nfor j in range(N):\n  cnt = ame_A[j] + ame_B[j]\n  ans = max(ans, cnt)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8795": {
    "id": 8795,
    "code": "n = 4\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5057": {
    "id": 5057,
    "code": "s = \"smiles\"\nt = 0\nfor i in range(1,len(s)-1):\n    t += 1\nprint(s[0] + str(t) + s[len(s)-1])",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10241": {
    "id": 10241,
    "code": "N = 3\nS = \"())\"\nstack= []\nans=\"\"\nL=0\nR=0\nfor i in range(N):\n  if S[i]==\"(\":\n    stack.append(S[i])\n  else:\n    if len(stack)>0:\n      stack.pop()\n    else:\n      L += 1\nR=len(stack)\nans = L * \"(\" + S + R * \")\"\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "17310": {
    "id": 17310,
    "code": "a = \"H\";b = \"H\"\nif (a==\"H\")&(b==\"H\"):\n    print(\"H\")\nelif (a==\"D\")&(b==\"H\"):\n    print(\"D\")\nelif (a==\"D\")&(b==\"D\"):\n    print(\"H\")\nelse:\n    print(\"D\")",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "11196": {
    "id": 11196,
    "code": "S = \"level\"\nN = len(S)\nsList = [str(s) for s in S]\nisPalindrome = 1\nstr1 = ''\nstr2 = ''\nstr3 = ''\nstr4 = ''\nfor i in range(N):\n  if (sList[i] != sList[N - 1 - i]):\n    isPalindrome = 0\nif isPalindrome == 1:\n  for i in range(int((N - 1) / 2)):\n    str1 += sList[i]\n    str2 += sList[int((N - 1) / 2 - 1 - i)]\n    str3 += sList[int((N + 3) / 2 - 1 + i)]\n    str4 += sList[N - 1 - i]\n    if str1 != str2:\n      isPalindrome = 0\n    if str3 != str4:\n      isPalindrome = 0\nif isPalindrome == 0:\n  print('No')\nelse:\n  print('Yes')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "4495": {
    "id": 4495,
    "code": "string = \"internationalization\"\nstring_length = len(string)\nprint(string[0] + \"%d\" % (string_length - 2) + string[string_length - 1])",
    "coverage": [">", ">", ">"]
  },
  "10657": {
    "id": 10657,
    "code": "a = 8;b = 12;k = 2\ncnt = 0\nnum = min(a, b) + 1\nwhile cnt < k:\n    num -= 1\n    if a % num == 0 and b % num == 0:\n        cnt += 1\nprint(num)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18615": {
    "id": 18615,
    "code": "row = 14\ncolmun = 12\ntop = 112\nlow, high = 0,0\nif row <= colmun:\n  low, high = row, colmun\nelse:\n  low, high = colmun, row\nfor n in range(low):\n  if (n + 1) * high >= top:\n    print(n + 1)\n    break",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]
  },
  "7203": {
    "id": 7203,
    "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\nprint('Yes' if sum(A) >= H else 'No')",
    "coverage": [">", ">", ">"]
  },
  "6000": {
    "id": 6000,
    "code": "from sys import stdin\nN = 100\nif N%2==1:\n    print(N//2+1)\nelse:\n    print(N//2)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "16934": {
    "id": 16934,
    "code": "a = \"D\";b = \"D\"\nprint(\"H\" if a == \"H\" and b ==\"H\" or a == \"D\" and b == \"D\" else \"D\")",
    "coverage": [">", ">"]
  },
  "6841": {
    "id": 6841,
    "code": "H = 10;N = 3\nlists = [4, 5, 6]\nlists.sort()\nSAM = sum(lists)\nif SAM>=H:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "9759": {
    "id": 9759,
    "code": "n = 8\ns = \"))))((((\"\ni = 0\nmi = 0\nfor c in s:\n    if c=='(':\n        i += 1\n    else:\n        i -= 1\n    mi = min(mi, i)\nans = '('*(-mi) + s + ')'*(i-mi)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]
  },
  "15930": {
    "id": 15930,
    "code": "A = 20;B = 15\nX = A-B*2\nif X < 0:\n  print (0)\nelse:\n  print (X)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "16244": {
    "id": 16244,
    "code": "import sys\ninput = sys.stdin.readline\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nl = [ai for ai in a[:-1]]\nl.sort(key=lambda x: abs(a[-1]/2-x))\nprint(a[-1], l[0])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3206": {
    "id": 3206,
    "code": "s = \"1111111111\"\nn=len(s)\nans=100000\nfor i in range(n-2):\n  t=str(s[i])+str(s[i+1])+str(s[i+2])\n  x=abs(753-int(t))\n  ans=min(ans,x)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12651": {
    "id": 12651,
    "code": "x = 6\nans =\"NO\"\nif 2<x<8 and x%2==1:\n    ans =\"YES\"\nprint(ans)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "18455": {
    "id": 18455,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nimport math\nh = 3\nw = 7\nn = 10\nans = min(math.ceil(n / h), math.ceil(n / w))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6961": {
    "id": 6961,
    "code": "N = 210;M = 5\nA = [31, 41, 59, 26, 53]\nif N - sum(A) <= 0:\n    result = \"Yes\"\nelse:\n    result = \"No\"\nprint(result)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "6856": {
    "id": 6856,
    "code": "h = 211;n = 5\nlst = [31, 41, 59, 26, 53]\nif sum(lst) < h:\n  print('No')\nelse:\n  print('Yes')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "9889": {
    "id": 9889,
    "code": "n = 8\ns = \"))))((((\"\np = 0\nq = 0\nfor i in range(n):\n    if s[i] == \")\":\n        if q == 0:\n            p += 1\n        else:\n            q -= 1\n    else:\n        q += 1\nprint(\"(\"*p+s+\")\"*q)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "1298": {
    "id": 1298,
    "code": "N = [1, 1, 1]\nif N[1] < N[0]:\n  print(N[0] * 111)\nelif N[1] > N[0]:\n  print((N[0]+1) * 111)\nelse:\n  if N[2] <= N[0]:\n    print(N[0] * 111)\n  else:\n    print((N[0]+1) * 111)",
    "coverage": [">", ">", "!", ">", "!", "!", ">", ">", "!", "!"]
  },
  "15920": {
    "id": 15920,
    "code": "A = 12;B = 4\nif A <= B*2:\n    print(0)\nelif A > B*2:\n    print(A-B*2)",
    "coverage": [">", ">", "!", ">", ">"]
  },
  "9819": {
    "id": 9819,
    "code": "N = 3\nS = \"())\"\nn_left=0\nn_right=0\nfor a in S:\n    if a==\")\":\n        if n_left==0:\n            n_right+=1\n        else:\n            n_left-=1\n    else:\n        n_left+=1\nprint((n_right*\"(\")+S+(n_left*\")\"))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "5445": {
    "id": 5445,
    "code": "n = 100\nif n%2 == 0:\n    print(n//2)\nif n%2 != 0:\n    print(n//2+1)",
    "coverage": [">", ">", ">", ">", "!"]
  },
  "2937": {
    "id": 2937,
    "code": "s = \"1234567876\"\nans=1000\nfor i in range(len(s)-2):\n    n=''\n    n+=s[i]\n    n+=s[i+1]\n    n+=s[i+2]\n    n=int(n)\n    ans=min(abs(n-753),ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7569": {
    "id": 7569,
    "code": "a = 10;b = 3\nlis = [4, 5, 6]\nc = sum(lis)\nprint(\"No\" if a > c else \"Yes\")",
    "coverage": [">", ">", ">", ">"]
  },
  "12099": {
    "id": 12099,
    "code": "m = ['11', '16']\nM = ['11', '17']\nif int(M[0]) - int(m[0]) == 1:\n  print('1')\nelse:\n  print('0')",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "15194": {
    "id": 15194,
    "code": "X = 100000;Y = 1;Z = 1\nresult = X // (Y + Z) - 1\nwhile X >= (result + 1) * Y + (result + 2) * Z:\n    result += 1\nprint(result)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "17233": {
    "id": 17233,
    "code": "a = \"D\";b = \"H\"\nif(a==\"H\"):\n    if(b==\"H\"):\n        print(\"H\")\n    elif(b==\"D\"):\n        print(\"D\")\nelif(a==\"D\"):\n    if(b==\"H\"):\n        print(\"D\")\n    elif(b==\"D\"):\n        print(\"H\")",
    "coverage": [">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!"]
  },
  "17850": {
    "id": 17850,
    "code": "s = \"1905\"\na=0<int(s[:2])<13\nb=0<int(s[-2:])<13\nif a and b:\n    print('AMBIGUOUS')\nelif b:\n    print('YYMM')\nelif a:\n    print('MMYY')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]
  },
  "5614": {
    "id": 5614,
    "code": "N = 5\nA = N / 2\nA = int(A)\nB = (N + 1) / 2\nB = int(B)\nif N % 2 == 0:\n  print(A)\nelse:\n  print(B)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "17609": {
    "id": 17609,
    "code": "s = \"1700\"\na = int(s[:2])\nb = int(s[2:])\nif 0 < a and a<13:\n    if 0<b and b<13:\n        print('AMBIGUOUS')\n    else:\n        print('MMYY')\nelif 0<b and b<13:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">"]
  },
  "1276": {
    "id": 1276,
    "code": "n = 111\nk=n//100\nnex=111*k\nif nex>=n:\n    print(nex)\nelse:\n    print(nex+111)",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "5824": {
    "id": 5824,
    "code": "n = 5\na = n//2 if n%2==0 else (n//2)+1\nprint(a)",
    "coverage": [">", ">", ">"]
  },
  "16805": {
    "id": 16805,
    "code": "A = \"D\";B = \"D\"\nif A==\"H\" and B==\"H\":\n  print(\"H\")\nelif A==\"H\" and B==\"D\":\n  print(\"D\")\nelif A==\"D\" and B==\"H\":\n  print(\"D\")\nelse:\n  print(\"H\")",
    "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "10052": {
    "id": 10052,
    "code": "N = 6\nS = \")))())\"\nstack = []\nfor c in S:\n    if len(stack) > 0:\n        last = stack[-1]\n        if last == '(' and c == ')':\n            stack = stack[:-1]\n            continue\n    stack.append(c)\nleft = stack.count(')')\nright = stack.count('(')\nprint(left * '(' + S + right * ')')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "4298": {
    "id": 4298,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh = h2 -h1\nm = m2 - m1\nprint(h*60+m-k)",
    "coverage": [">", ">", ">", ">"]
  },
  "3832": {
    "id": 3832,
    "code": "x = 12;y = 3;z = 1\ncnt = 1\nx -= y + 2*z\nwhile x >= y + z:\n    cnt += 1\n    x -= y + z\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "7057": {
    "id": 7057,
    "code": "H = 210;N = 5\ndata = [31, 41, 59, 26, 53]\nif H <= sum(data):\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "14959": {
    "id": 14959,
    "code": "import math\nn = 1;p = 1\na = [50]\nzero_count = 0\none_count = 0\nfor num in a:\n    if num % 2 == 0:\n        zero_count += 1\n    else:\n        one_count += 1\ncoef = 2 ** zero_count\nans = 0\nfor i in range(one_count + 1):\n    if i % 2 != p:\n        continue\n    ans += math.factorial(one_count) // math.factorial(one_count - i) // math.factorial(i)\nprint(ans * coef)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "9653": {
    "id": 9653,
    "code": "n = 3\ns = \"())\"\nstack=0\nneedleft=0\nneedright=0\nfor c in s:\n    if c=='(':\n        needright+=1\n    else:\n        if needright>0:\n            needright-=1\n        else:\n            needleft+=1\ns='('*needleft+s\ns+=')'*needright\nprint(s)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1625": {
    "id": 1625,
    "code": "n = 10;a = 3;b = 5\nboth = min(a,b)\nany = max(0, (a+b) - n)\nprint(both, any)",
    "coverage": [">", ">", ">", ">"]
  },
  "11458": {
    "id": 11458,
    "code": "d = dict(zip( ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'], '6543217'))\ns = \"SAT\"\nprint(d[s])",
    "coverage": [">", ">", ">"]
  },
  "17507": {
    "id": 17507,
    "code": "S = \"1700\"\nans='None'\nif 1<=int(S[:2]) <=12 and 1<=int(S[2:])<=12:\n    ans='AMBIGUOUS'\nelif 1<=int(S[:2])<=12:\n    ans='MMYY'\nelif 1<=int(S[2:])<=12:\n    ans='YYMM'\nelse:\n    ans='NA'\nprint(ans)",
    "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">"]
  },
  "188": {
    "id": 188,
    "code": "s = \"xyz\"\nk = 4\nans = ''\nfor i,v in enumerate(s):\n    if (ord('a') - ord(v))%26 <= k:\n        k -= (ord('a') - ord(v))%26\n        ans += 'a'\n    else:\n        ans += v\nk %= 26\nlast = chr(ord('a')+(ord(ans[-1])-ord('a')+k)%26)\nprint(ans[:-1]+last)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]
  },
  "12220": {
    "id": 12220,
    "code": "N = \"level\"\nlenN = len(N)\nfN =N[0:(lenN - 1)//2]\nlN =N[(lenN + 3)//2-1:]\nprint((\"No\",\"Yes\")[(0,1)[fN == fN[-1::-1]]*(0,1)[lN == lN[-1::-1]]*(0,1)[lN == fN]])",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "12296": {
    "id": 12296,
    "code": "s = \"level\"\nn = len(s)\ns_ = s[:(n-1)//2]\nif s == s[::-1] and s_ == s_[::-1]:\n  print('Yes')\nelse:\n  print('No')",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "3970": {
    "id": 3970,
    "code": "X = 12;Y = 3;Z = 1\ntemp = X-Z\nans = temp//(Y+Z)\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "4865": {
    "id": 4865,
    "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\nans = []\nans.append(s[0])\nans.append(str((len(s)-2)))\nans.append(s[-1])\nprint(\"\".join(ans))",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "7720": {
    "id": 7720,
    "code": "n = 8;k = 3\nA = (7, 3, 1, 8, 4, 6, 2, 5)\ncount = -(-(n - 1) // (k-1))\nprint(count)",
    "coverage": [">", ">", ">", ">"]
  },
  "7794": {
    "id": 7794,
    "code": "import math\nN = 3;K = 3\nA = [1, 2, 3]\nprint(math.ceil((N-1)/(K-1)))",
    "coverage": [">", ">", ">", ">"]
  },
  "907": {
    "id": 907,
    "code": "import sys\nk = 2\na = dict()\ncnt = 0\nbase = 0\nwhile True:\n    cnt += 1\n    base = (base*10+7)%k\n    if base == 0:\n        break\n    if base in a:\n        cnt = -1\n        break\n    else:\n        a[base] = 1\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "4024": {
    "id": 4024,
    "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nx = abs(a - c) * 60 - b + d - e\nif x < 0:\n    print(0)\nelse:\n    print(x)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "3709": {
    "id": 3709,
    "code": "A = 20;B = 15\nprint(max(A-2*B,0))",
    "coverage": [">", ">"]
  },
  "11882": {
    "id": 11882,
    "code": "a = \"11 16\"\nb = \"11 17\"\nmonth_a = int(a.split(\" \")[0])\nmonth_b = int(b.split(\" \")[0])\nif month_a != month_b:\n\tval = 1\nelse:\n\tval = 0\nprint(val)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "3957": {
    "id": 3957,
    "code": "X = 100000;Y = 1;Z = 1\nif (X-2*Z)%(Y+Z) >= Y:\n    print((X-2*Z)//(Y+Z)+1)\nelse:\n    print((X-2*Z)//(Y+Z))",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "11514": {
    "id": 11514,
    "code": "n = \"SUN\"\ndic = {\"SUN\":7,\n       \"MON\":6,\n       \"TUE\":5,\n       \"WED\":4,\n       \"THU\":3,\n       \"FRI\":2,\n       \"SAT\":1}\nprint(dic[str(n)])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2579": {
    "id": 2579,
    "code": "n = {0, 9, 4, 8}\nif n == {1, 4, 7, 9}:\n\tprint('YES')\nelse:\n\tprint('NO')",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "7653": {
    "id": 7653,
    "code": "h = 10;n = 3\nA = [4, 5, 6]\nfor a in A:\n  h -= a\nprint(\"Yes\" if h <= 0 else \"No\")",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "17142": {
    "id": 17142,
    "code": "a = \"D\";b = \"D\"\nprint('H' if a == b == 'H' or a == b == 'D' else 'D')",
    "coverage": [">", ">"]
  },
  "3874": {
    "id": 3874,
    "code": "X = 13;Y = 3;Z = 1\nX -= 2 * Z\nX -= Y\nans = 0\nif 0 <= X:\n    ans = 1 + X // (Y + Z)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "18052": {
    "id": 18052,
    "code": "S = \"1905\"\nf = int(S[:2])\ns = int(S[2:])\nif 1 <= f <= 12 and 1 <= s <= 12:\n    print('AMBIGUOUS')\nelif 1 <= f <= 12:\n    print('MMYY')\nelif 1 <= s <= 12:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]
  },
  "1591": {
    "id": 1591,
    "code": "n = 100;a = 100;b = 100\nprint(f'{min(a,b)} {max(0,a+b-n)}')",
    "coverage": [">", ">"]
  },
  "8879": {
    "id": 8879,
    "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "8859": {
    "id": 8859,
    "code": "n = 1\na1 = [2]\na2 = [3]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "17292": {
    "id": 17292,
    "code": "a = \"H\";b = \"H\"\nret = \"\"\nif a == \"H\":\n  ret = b\nelse:\n  if b == \"H\":\n    ret = \"D\"\n  else:\n    ret = \"H\"\nprint(ret)",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]
  },
  "2179": {
    "id": 2179,
    "code": "Moji = \"10 3 5\"\nListNAB=Moji.split() \nN=int(ListNAB[0])\nA=int(ListNAB[1])\nB=int(ListNAB[2])\nif A>=B:\n  nmax=B\nelif A<B:\n  nmax=A\nif N>A+B:\n  nmin=0\nif N<=(A+B):\n    nmin=A+B-N\nprint(str(nmax)+\" \"+str(nmin))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "7832": {
    "id": 7832,
    "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nnum=min(a)\nif a[0]==num:\n    n-=1\nif a[-1]==num:\n    n-=1\nn-=1\nk-=1\nprint(-1*(n//-k))",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", ">"]
  },
  "10250": {
    "id": 10250,
    "code": "n = 3\ns = \"())\"\nans = s\nwhile s.count(\"()\")>0:\n    s = s.replace(\"()\", \"\")\ncnt_l = s.count(\")\")\ncnt_r = s.count(\"(\")\nans = cnt_l * \"(\" + ans\nans += cnt_r * \")\"\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "13205": {
    "id": 13205,
    "code": "s = \"happy\";t = \"newyear\";u = \"enjoy\"\nprint(s+\" \"+t+\" \"+u)",
    "coverage": [">", ">"]
  },
  "2253": {
    "id": 2253,
    "code": "N = 100;A = 100;B = 100\nprint(min(A,B),0 if min(A,B)-N+max(A,B) < 0 else min(A,B)-N+max(A,B))",
    "coverage": [">", ">"]
  },
  "17463": {
    "id": 17463,
    "code": "s = ['1', '9', '0', '5']\na = int(s[0]+s[1])\nb = int(s[2]+s[3])\nif  1<=a<=12 and 1<=b<=12:\n  print('AMBIGUOUS')\nelif (a>12 or a==0) and 1<=b<=12:\n  print('YYMM')\nelif (b>12 or b==0) and 1<=a<=12:\n  print('MMYY')\nelif (a>12 or a==0) and (b>12 or b==0):\n  print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!"]
  },
  "6172": {
    "id": 6172,
    "code": "N = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncur_l = 0\ncur_r = 0\np = 0\nfor cur_mid in B:\n    while cur_l < len(A):\n        if A[cur_l] >= cur_mid:\n            break\n        cur_l += 1\n    while cur_r < len(C):\n        if cur_mid < C[cur_r]:\n            break\n        cur_r += 1\n    p += cur_l * (len(C) - cur_r)\nprint(p)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "14196": {
    "id": 14196,
    "code": "from collections import deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)>=2:\n    if not (v >= tmp[-1] >= tmp[0] or v <= tmp[-1] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nprint(cnt+1 if tmp else cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16182": {
    "id": 16182,
    "code": "N = 2\nA = [0, 100]\ni = A.pop()\nj = None\nbest = float('inf')\nfor a in A:\n    v = abs(a - i / 2)\n    if v < best:\n        best = v\n        j = a\nprint(i, j)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18380": {
    "id": 18380,
    "code": "H = 3\nW = 7\nN = 10\nans = 0\nm = max([H, W])\nwhile N > 0:\n    N -= m\n    ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "72": {
    "id": 72,
    "code": "s = \"xyz\"\nK = 4\nans = []\nfor ch in s:\n    v = ord(\"a\") + 26 - ord(ch)\n    if ch != \"a\" and v <= K:\n        K -= v\n        ans.append(\"a\")\n    else:\n        ans.append(ch)\nif K > 0:\n    ans[-1] = chr(ord(ans[-1]) + K % 26)\nprint(\"\".join(ans))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "4800": {
    "id": 4800,
    "code": "s = \"xyz\"\nnum = len(s)\nnumS = str(num - 2)\nprint(s[0] + numS + s[-1])",
    "coverage": [">", ">", ">", ">"]
  },
  "13028": {
    "id": 13028,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nN = 5\nprint('YES' if N==7 or N==5 or N==3 else 'NO')",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "15650": {
    "id": 15650,
    "code": "X = 64146;Y = 123;Z = 456\nans = X//(Y+Z) - 1\nif ans*(Y+Z)+(Y+Z+Z) <= X: ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "989": {
    "id": 989,
    "code": "n = 111\na = [str(i+1)*3 for i in range(9)]\nfor i in a:\n    if n<=int(i):\n        print(int(i))\n        break",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "15000": {
    "id": 15000,
    "code": "n = 3;p = 0\na = [1, 1, 1]\nif all(i%2==0for i in a):print(0 if p%2else 2**n)\nelse:print(2**(n-1))",
    "coverage": [">", ">", ">", ">"]
  },
  "11622": {
    "id": 11622,
    "code": "days = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ncurrent_day = \"SAT\"\ni = 0\nwhile True:\n    if days[i] == current_day:\n        break\n    i += 1\nprint(7 - i)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "64": {
    "id": 64,
    "code": "S = ['a']\nK = 25\nfor i in range(len(S)):\n    if S[i] == 'a':\n        continue\n    d = ord('z') - ord(S[i]) + 1\n    if K >= d:\n        S[i] = 'a'\n        K -= d\nif K > 0:\n    j = ord(S[-1]) + K % 26\n    S[-1] = chr(j)\nprint(''.join(S))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "323": {
    "id": 323,
    "code": "s = [120, 121, 122]\nk = 4\nfor i in range(len(s)):\n    if s[i] == 97: continue\n    if 123 - s[i] <= k:\n        k -= 123 - s[i]\n        s[i] = 97\n        if k == 0:\n            break\nif k != 0:\n    s[-1] = s[-1] + k % 26\nprint(\"\".join([chr(i) for i in s]))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "13824": {
    "id": 13824,
    "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n    elif(flag == 1 and A[i] < cur):\n        flag = -1\n        ans += 1\n    elif(flag == 0 and A[i] > cur):\n        flag = -1\n        ans += 1\n    cur = A[i]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13884": {
    "id": 13884,
    "code": "import sys\ninput = \"<function <lambda>>\"\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\na_ = []\nfor i in a:\n    if not a_:\n        a_.append(i)\n    elif i != a_[-1]:\n        a_.append(i)\ncnt = 0\nflag = 0\nfor i in range(len(a_) - 1):\n    if flag == 0:\n        if a_[i + 1] - a_[i] > 0:\n            flag = 1\n        else:\n            flag = -1\n        continue\n    if flag == 1 and a_[i + 1] - a_[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a_[i + 1] - a_[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18694": {
    "id": 18694,
    "code": "h = 3\nw = 7\nn = 10\nans = 0\ni = 0\nm = max(h,w)\nwhile True:\n    ans +=1\n    i += m\n    if i >= n:\n        print(ans)\n        break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2048": {
    "id": 2048,
    "code": "n = 10;a = 3;b = 5\nans_max = min(a, b)\nans_min = max(0, a + b - n)\nprint(\"{} {}\".format(ans_max, ans_min))",
    "coverage": [">", ">", ">", ">"]
  },
  "290": {
    "id": 290,
    "code": "s = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nK = 100\nfor i in range(len(s)):\n    if i==len(s)-1:\n        K=K%26\n        x=ord(s[i])\n        for j in range(K):\n            x+=1\n            if x==123:\n                x=97\n        s[i]=chr(x)\n    else:\n        if K<=0 or s[i]=='a':\n            continue\n        dif=123-ord(s[i])\n        if dif<=K:\n            s[i]='a'\n            K-=dif\nprint(''.join(s))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9038": {
    "id": 9038,
    "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nprint('Yay!' if max(b-a, c-a, d-a, e-a, c-b, d-b, e-b, d-c, e-c, e-d) <= k else ':(')",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1896": {
    "id": 1896,
    "code": "n = 100;a = 100;b = 100\nif a+b-n > 0:\n  result = a +b-n\nelse:\n  result = 0\nprint(min(a,b),result)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "6325": {
    "id": 6325,
    "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nab = [0 for i in range(n)]\nans = 0\nfor i in range(n):\n  ab[i] = ab[i-1] + bisect.bisect_left(a, b[i])\nfor i in range(n):\n  tmp = bisect.bisect_left(b, c[i])\n  if tmp != 0:\n  \tans += ab[tmp-1] \nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12608": {
    "id": 12608,
    "code": "a = 100;b = 50;k = 4\nx=min(a,b)\nl=[]\nfor i in range(1,x+1):\n    if a%i==0 and b%i==0:\n        l.append(i)\ny=len(l)\nprint(l[y-k])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "313": {
    "id": 313,
    "code": "s = ['a']\nK = 25\nzp1 = 1+ord('z')\nfor i in range(len(s)):\n    si = s[i]\n    cost = (zp1-ord(si))%26\n    if cost <= K:\n        K -= cost\n        s[i] = 'a'\ns[-1] = chr(ord('a') + (K + ord(s[-1]) - ord('a')) % 26)\nprint(''.join(s))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12870": {
    "id": 12870,
    "code": "x = \"5\"\nprint(\"YES\" if x in \"753\" else \"NO\")",
    "coverage": [">", ">"]
  },
  "3805": {
    "id": 3805,
    "code": "x = 64146;y = 123;z = 456\nw=y+z\nprint(x//w if x%w>=z else x//w-1)",
    "coverage": [">", ">", ">"]
  },
  "10439": {
    "id": 10439,
    "code": "A = 100;B = 50;K = 4\nans = []\nfor i in range(1, min(A, B) + 1):\n    if A % i == 0 and B % i == 0:\n        ans.append(i)\nans.sort(reverse=True)\nprint(ans[K-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "6790": {
    "id": 6790,
    "code": "h = 20;n = 3\nA = [4, 5, 6]\nA.sort(reverse=True)\nmax_point = sum(A[:n])\nans = 'Yes'\nif max_point < h:\n    ans = 'No'\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9996": {
    "id": 9996,
    "code": "n = 8\ns = \"))))((((\"\nss = s\nfor i in range(1+n//2):\n    ss = ss.replace(\"()\",\"\")\nsta = ss.count(\"(\")\nend = ss.count(\")\")\nprint(\"(\"*end + s + \")\"*sta)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3250": {
    "id": 3250,
    "code": "a = 20;b = 15\nprint((a-b*2)*(a>b*2)or 0)",
    "coverage": [">", ">"]
  },
  "4509": {
    "id": 4509,
    "code": "S = \"xyz\"\nn = str(len(S)-2)\nprint(S[0] + n + S[-1])",
    "coverage": [">", ">", ">"]
  },
  "1514": {
    "id": 1514,
    "code": "n = 111\nfor i in range(100,1000):\n    if i >= n and i%100//10 == i%10 == i//100:\n        print(i)\n        break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "1176": {
    "id": 1176,
    "code": "x = \"111\"\nif int(x[0])>int(x[1]):\n  print (x[0]*3)\nelif int(x[0])==int(x[1]):\n  if int(x[0])>=int(x[2]):\n    print (x[0]*3)\n  else:\n    print (str(int(x[0])+1)*3)\nelse:\n  print (str(int(x[0])+1)*3)",
    "coverage": [">", ">", "!", ">", ">", ">", "!", "!", "!", "!"]
  },
  "10253": {
    "id": 10253,
    "code": "N = 3\nS = \"())\"\nleft = ''\nright = ''\nskip_idx = []\nfor idx, s in enumerate(S):\n    if idx in skip_idx:\n        continue\n    if s == ')':\n        left += '('\n    else:\n        skip_flag = 0\n        for n in range(idx+1, N):\n            if n in skip_idx:\n                continue\n            if S[n] == ')':\n                skip_idx.append(n)\n                skip_flag = 1\n                break\n        if not skip_flag:\n            right += ')'\nprint(left+S+right)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "9566": {
    "id": 9566,
    "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3] = '8'\na = ''.join(S)\nprint(a)",
    "coverage": [">", ">", ">", ">"]
  },
  "19469": {
    "id": 19469,
    "code": "n = 999999999\nif n%2==0:\n  print(n)\nif n%2==1:\n  print(n*2)",
    "coverage": [">", ">", "!", ">", ">"]
  },
  "15522": {
    "id": 15522,
    "code": "x = 13;y = 3;z = 1\nprint(x//(y+z) if x%(y+z)>=z else x//(y+z)-1)",
    "coverage": [">", ">"]
  },
  "17163": {
    "id": 17163,
    "code": "a = \"D\";b = \"D\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "7708": {
    "id": 7708,
    "code": "n = 8;k = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nA.sort()\nk -= 1\ncnt = -(-(n-1)//k)\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "13944": {
    "id": 13944,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nmode = 0\nprev = A[0]\nfor i in A:\n    check = i - prev\n    if check == 0:\n        pass\n    elif check > 0:\n        if mode >= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    else:\n        if mode <= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    prev = i\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "104": {
    "id": 104,
    "code": "s = ['x', 'y', 'z']\nk = 4\nfor i, c in enumerate(s):\n    t = (ord(\"z\") - ord(c) + 1) % 26\n    if k >= t:\n        s[i] = \"a\"\n        k -= t\nt = k % 26\ns[-1] = chr(ord(s[-1]) + t)\nprint(\"\".join(s))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5684": {
    "id": 5684,
    "code": "from math import ceil\nprint(ceil(int(\"2\")/2))",
    "coverage": [">", ">"]
  },
  "9321": {
    "id": 9321,
    "code": "S = \"2017/01/31\"\nS=S.replace(\"7\",\"8\",1)\nprint(S)",
    "coverage": [">", ">", ">"]
  },
  "18579": {
    "id": 18579,
    "code": "h = 14\nw = 12\nn = 112\nm = max(h, w)\nprint(n // m + 1) if n % m else print(n // m)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9748": {
    "id": 9748,
    "code": "icase=0\nif icase==0:\n    n = 3\n    s=\"())\"\nelif icase==1:\n    n=3\n    s=\"())\"\nelif icase==2:\n    n=6\n    s=\")))())\"\nelif icase==3:\n    n=8\n    s=\"))))((((\"\nl=[]\nr=[]\nsim=s[0]\nif sim==\"(\":\n    lidx=0\n    l.append(1)\n    ridx=-1\nelif sim==\")\":\n    lidx=0\n    l.append(0)\n    ridx=0\n    r.append(1)\nfor i in range(1,len(s)):\n    if s[i]==\"(\" and s[i-1]==\"(\":\n        l[lidx]+=1\n    elif s[i]==\"(\" and s[i-1]==\")\":\n        lidx+=1\n        l.append(1)\n    elif s[i]==\")\" and s[i-1]==\")\":\n        r[ridx]+=1\n    elif s[i]==\")\" and s[i-1]==\"(\":\n        ridx+=1\n        r.append(1)\nll=sum(l)\nrr=sum(r)\nds=ll-rr\nif len(l)>len(r):\n    r.append(0)\nxmin=0\nx=0\nfor i in range(len(l)):\n    x=x+l[i]-r[i]\n    xmin=min(x,xmin)\nstrs=\"(\"*(-xmin) + s + \")\"*(ds-xmin)\nprint(strs)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18560": {
    "id": 18560,
    "code": "from sys import stdin\nH = 3\nW = 7\nN = 10\nprint((N-1)//max(H, W) + 1)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "12843": {
    "id": 12843,
    "code": "x = 6\na = [3, 5, 7]\nprint('YES' if x in a else 'NO')",
    "coverage": [">", ">", ">"]
  },
  "971": {
    "id": 971,
    "code": "n = 111\nwhile len(set(str(n)))!=1:\n\tn+=1\nprint(n)",
    "coverage": [">", ">", "!", ">"]
  },
  "9639": {
    "id": 9639,
    "code": "N = 6\nS = \")))())\"\nL = S.count('(')\nR = S.count(')')\nif L > R:\n    S = S + (')' * (L - R))\nif R > L:\n    S = ('(' * (R - L)) + S\nd = 0\nmx = 0\nfor s in S:\n    if s == ')':\n        d += 1\n    else:\n        d -= 1\n    mx = max(mx, d)\nS = '(' * mx + S + ')' * mx\nprint(S)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18083": {
    "id": 18083,
    "code": "s = \"0112\"\nif 0 < int(s[:2]) <= 12 and 0 < int(s[2:]) <= 12:\n    print('AMBIGUOUS')\nelif 0 < int(s[:2]) <= 12 and int(s[2:]) >= 12:\n    print('MMYY')\nelif 0 < int(s[:2]) < 12 and int(s[2:]) == 0:\n    print('MMYY')\nelif int(s[:2]) >= 12 > 0 and 0 < int(s[2:]) <= 12:\n    print('YYMM')\nelif int(s[:2]) == 0 and 0 < int(s[2:]) <= 12:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "11777": {
    "id": 11777,
    "code": "_ = list(map(int, \"11 30\".split()))\nn = 1\nif n == 1:\n    print(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "15456": {
    "id": 15456,
    "code": "x = 12;y = 3;z = 1\nprint((x-z)//(y+z))",
    "coverage": [">", ">"]
  },
  "10811": {
    "id": 10811,
    "code": "import sys\nS = \"akasaka\"\nN=len(S)\nif S!=S[::-1]:\n  print(\"No\")\n  sys.exit(0)\ncheck=S[0:int((N-1)/2)]\nif check!=check[::-1]:\n  print(\"No\")\n  sys.exit(0)\ncheck=S[int((N+3)/2)-1:N]\nif check!=check[::-1]:\n  print(\"No\")\n  sys.exit(0)\nprint(\"Yes\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "16846": {
    "id": 16846,
    "code": "a = \"D\";b = \"H\"\nif (a == 'H' and b == 'H') or (a == 'D' and b == 'D'):\n    print('H')\nelse:\n    print('D')",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "7085": {
    "id": 7085,
    "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\nflag = False\nfor a in A:\n  h -= a\n  if h<=0:\n    flag = True\n    break\nprint(\"Yes\" if flag else \"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4364": {
    "id": 4364,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nawake = 60*h2+m2 - (60*h1+m1) - k\nprint(awake)",
    "coverage": [">", ">", ">"]
  },
  "11425": {
    "id": 11425,
    "code": "S = \"SUN\"\nweek = {'SUN': 0, 'MON': 1, 'TUE': 2, 'WED': 3,\n        'THU': 4, 'FRI': 5, 'SAT': 6}\nif S == 'SUN':\n    print(7)\nelse:\n    print(7 - week[S])",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "18901": {
    "id": 18901,
    "code": "n = 12\nif n<2:\n    print(0)\nelse:\n    ans=0\n    if n%2==1:\n        print(0)\n    else:\n        ans+=n//10\n        for i in range(100):\n            ans+=n//(10*(5**(i+1)))\n        print(ans)",
    "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "8352": {
    "id": 8352,
    "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "5188": {
    "id": 5188,
    "code": "a = \"internationalization\"\nf=a[0]\nl=a[-1]\nle=len(a)-2\nprint(f+str(le)+l)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "7704": {
    "id": 7704,
    "code": "import sys\nimport math\nN = 3;K = 3\nA = [1, 2, 3]\nprint(math.ceil((N-1)/(K-1)))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "6838": {
    "id": 6838,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\nprint(\"Yes\" if(sum(A) >= H) else \"No\")",
    "coverage": [">", ">", ">"]
  },
  "16714": {
    "id": 16714,
    "code": "a = \"D\";b = \"H\"\nif a==\"H\" and b==\"H\":\n  print(\"H\")\nelif a==\"D\" and b==\"D\":\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", "!", ">", "!", "!", ">"]
  },
  "61": {
    "id": 61,
    "code": "s = \"a\"\nn=len(s)\nk = 25\nans=[]\nfor i in range(n):\n    if i==n-1:\n        ans.append(chr(((ord(s[i])-97+k)%26)+97))\n    else:\n        if s[i]==\"a\":\n            ans.append(\"a\")\n        else:\n            if 26-(ord(s[i])-97)<=k:\n                ans.append(\"a\")\n                k-=(26-(ord(s[i])-97))\n            else:\n                ans.append(s[i])\nprint(\"\".join(ans))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "11542": {
    "id": 11542,
    "code": "S = \"SUN\"\nif S == 'SUN':\n    print('7')\nelif S == 'MON':\n    print('6')\nelif S == 'TUE':\n    print('5')\nelif S == 'WED':\n    print('4')\nelif S == 'THU':\n    print('3')\nelif S == 'FRI':\n    print('2')\nelif S == 'SAT':\n    print('1')\nelse:\n    print('Error')",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "11780": {
    "id": 11780,
    "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nprint(1 if m2 == m1 % 12 + 1 and d2 == 1 else 0)",
    "coverage": [">", ">", ">"]
  },
  "13715": {
    "id": 13715,
    "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nprint((c-a)*60+(d-b)-k)",
    "coverage": [">", ">"]
  },
  "7869": {
    "id": 7869,
    "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nif (n-1)%(k-1)==0:\n     print((n-1)//(k-1))\nelse:\n    print((n-1)//(k-1)+1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "7765": {
    "id": 7765,
    "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\nprint((N+K-3)//(K-1))",
    "coverage": [">", ">", ">"]
  },
  "7346": {
    "id": 7346,
    "code": "monster_hp = 20;quantity_of_skills = 3\nskills = map(int, \"4 5 6\".split())\nskills_list = list(skills)\ntotal_damages = 0\nfor i in skills_list:\n    total_damages += i\nif monster_hp <= total_damages:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "3875": {
    "id": 3875,
    "code": "X = 12;Y = 3;Z = 1\nX -= 2 * Z\nX -= Y\nans = 0\nif 0 <= X:\n    ans = 1 + X // (Y + Z)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "13434": {
    "id": 13434,
    "code": "l = \"haiku\";m = \"atcoder\";r = \"tasks\"\nprint(l, m, r)",
    "coverage": [">", ">"]
  },
  "10201": {
    "id": 10201,
    "code": "n = 8\ns = [')', ')', ')', ')', '(', '(', '(', '(']\nl_ins = 0\nl = 0\nr = 0\nfor i in range(n):\n    if s[i] == \"(\":\n        l += 1\n    else:\n        r += 1\n    l_ins = max(l_ins, r-l)\nr_ins = 0\nl = 0\nr = 0\nfor i in range(n-1, -1, -1):\n    if s[i] == \"(\":\n        l += 1\n    else:\n        r += 1\n    r_ins = max(r_ins, l-r)\nar = [\"(\"]*l_ins + s + [\")\"]*r_ins\nprint(\"\".join(ar))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7105": {
    "id": 7105,
    "code": "n = 210;d = 5\ns = [31, 41, 59, 26, 53]\nv=0\nfor i in s:\n    v+=int(i)\nif v>=n:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "9589": {
    "id": 9589,
    "code": "s = \"2017/01/31\"\nprint(s.replace(s[0:4], '2018'))",
    "coverage": [">", ">"]
  },
  "11207": {
    "id": 11207,
    "code": "week_dict = {\n    'MON': 1,\n    'TUE': 2,\n    'WED': 3,\n    'THU': 4,\n    'FRI': 5,\n    'SAT': 6,\n    'SUN': 7\n}\nday_of_week = \"SUN\"\nif day_of_week == 'SUN':\n    print(week_dict[day_of_week])\nelse:\n    days_left_to_sunday = 7 - week_dict[day_of_week]\n    print(days_left_to_sunday)",
    "coverage": [
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!"
    ]
  },
  "1938": {
    "id": 1938,
    "code": "N = 100;A = 100;B = 100\nmaxN,minN = 0,0\nif N >= A + B:\n  minN = 0\n  maxN = min([A,B])\nelse:\n  minN = A + B - N\n  maxN = min([A,B])\nprint('{} {}'.format(maxN,minN))",
    "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">"]
  },
  "2261": {
    "id": 2261,
    "code": "n = 10;a = 7;b = 5\nprint(min(a,b), a+b-n if a+b-n > 0 else 0)",
    "coverage": [">", ">"]
  },
  "19083": {
    "id": 19083,
    "code": "import math\nn = 12\nans = 0\ni = 1\nif n % 2 == 0:\n    tmp = 5 ** i * 2\n    while tmp <= n:\n        tmp = 5 ** i * 2\n        ans += n //tmp\n        i += 1\n    print(ans)\nelse:\n    print(0)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "12468": {
    "id": 12468,
    "code": "S = \"level\"\nrS=S[::-1]\nle=len(S)\ncent=int((le+1)/2)\nS1=S[0:cent-1]\nS2=S[cent:]\nrS1=S1[::-1]\nrS2=S2[::-1]\nif S==rS and S1==rS1 and S2==rS2:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "848": {
    "id": 848,
    "code": "k = 2\nx=0\nfor i in range(k):\n  x*=10\n  x+=7\n  if x%k==0:\n    print(i+1)\n    exit()\n  x%=k\nprint(-1)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "13534": {
    "id": 13534,
    "code": "n = \"abcde,fghihgf,edcba\"\nfor i in n:\n    if i==\",\":\n        n=n.replace(\",\",\" \")\nprint(n)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "16478": {
    "id": 16478,
    "code": "import bisect\nn = \"5\"\na = [2, 4, 6, 9, 11]\nm=a[-1]\nq=bisect.bisect_right(a,m/2)\np=q-1\nif abs(m/2-a[p])>abs(m/2-a[q]):print(m,a[q])\nelse:print(m,a[p])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!"]
  },
  "15258": {
    "id": 15258,
    "code": "x = 100000;y = 1;z = 1\nprint((x - z) // (y + z))",
    "coverage": [">", ">"]
  },
  "12302": {
    "id": 12302,
    "code": "s = \"level\"\np =\"Yes\"\nfor i in range(len(s)//2):\n  if s[i] != s[len(s) -1 -i]:\n    p = \"No\"\nfor i in range(len(s)//2):\n  if s[i] != s[len(s)//2 -1 -i]:\n    p = \"No\"\nprint(p)",
    "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">"]
  },
  "17730": {
    "id": 17730,
    "code": "s = \"1905\"\na= s[0:2]\nb= s[2:4]\na = int(a)\nb= int(b)\nif a == 0 or b == 0:\n  if b!= 0 and b<13:\n    print('YYMM')\n  elif a!= 0 and a<13:\n    print('MMYY')\n  else:\n    print('NA')\nelif a<13 or b<13:\n  if a>12:\n    print('YYMM')\n  elif b>12:\n    print('MMYY')\n  else:\n    print('AMBIGUOUS')\nelse:\n  print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "6781": {
    "id": 6781,
    "code": "H = 10;N = 3\nA = [4, 5, 6]\nTotal_attack = sum(A)\nif H - Total_attack <= 0:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "2649": {
    "id": 2649,
    "code": "a = \"1 9 7 4\"\nnum1 = a.count(\"1\")\nnum9 = a.count(\"9\")\nnum7 = a.count(\"7\")\nnum4 = a.count(\"4\")\nif num1 == 1 and num9 == 1 and num7 == 1 and num4 == 1:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "14926": {
    "id": 14926,
    "code": "from math import factorial\nn = 1;p = 1\na = [50]\ncnt = [0,0]\nfor i in a:\n    cnt[i%2] += 1\nans = 0\nwhile True:\n    if p > cnt[1]:\n        break\n    ans += factorial(cnt[1]) // factorial(p) // factorial(cnt[1] - p)\n    p += 2\nprint(ans * 2 ** cnt[0])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "1565": {
    "id": 1565,
    "code": "n = 112\nli = [int(str(i)*3) for i in range(10)]\nimport bisect\nx = bisect.bisect_left(li,n)\nprint(li[x])",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2661": {
    "id": 2661,
    "code": "if sorted(list(map(int,\"1 9 7 4\".split())))==[1,4,7,9]:\n  print('YES')\nelse:\n  print('NO')",
    "coverage": [">", ">", "!", "!"]
  },
  "17409": {
    "id": 17409,
    "code": "s = \"1905\"\nif 1<=int(s[:2])<=12 and 1<=int(s[2:4])<=12:print(\"AMBIGUOUS\")\nelif 1<=int(s[:2])<13:print(\"MMYY\")\nelif 1<=int(s[2:4])<13:print(\"YYMM\")\nelse :print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!"]
  },
  "6575": {
    "id": 6575,
    "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\ncnt = 0\nfor bb in b:\n    anum = bisect.bisect_left(a, bb)\n    cnum = n - bisect.bisect_right(c, bb)\n    cnt += (anum * cnum)\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "15186": {
    "id": 15186,
    "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\nx = 12;y = 3;z = 1\nx-= 2*z\nans = x//(y+z)\nif x%(y+z)>=y:\n    ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "7388": {
    "id": 7388,
    "code": "a = 20;b = 3\nl = [4, 5, 6]\nfor i in range(b):\n  a-=l[i]\nprint(\"Yes\" if a<=0 else\"No\")",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "18426": {
    "id": 18426,
    "code": "h = 14\nw = 12\nn = 112\nk = max(h, w)\nprint((n + k - 1) // k)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "5539": {
    "id": 5539,
    "code": "import math\ns = 5\nprint(math.ceil(s/2))",
    "coverage": [">", ">", ">"]
  },
  "14452": {
    "id": 14452,
    "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\nif n<=2:\n  print(1)\n  exit()\ncnt=0\nif l[0]>l[1]:\n  ans=\"low\"\nelif l[0]<l[1]:\n  ans=\"high\"\nelse:\n  ans=\"even\"\nfor i in range(2,n):\n  if l[i-1]>l[i] and (ans==\"low\" or ans==\"even\"):\n    ans=\"low\"\n  elif l[i-1]<l[i] and (ans==\"high\" or ans==\"even\"):\n    ans=\"high\"\n  elif l[i-1]==l[i]:\n    continue\n  else:\n    cnt+=1\n    ans=\"even\"\nprint(cnt+1)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "10126": {
    "id": 10126,
    "code": "from collections import deque\nN = 8\nS = \"))))((((\"\ns = deque(S)\nans = []\nr, l, cnt = 0, 0, 0\nwhile s:\n    q = s.popleft()\n    if q == ')':\n        cnt -= 1\n        if cnt < 0:\n            l += 1\n            cnt += 1\n    else:\n        cnt += 1\nif cnt > 0: r += cnt\nprint('('*l + S + ')'*r)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "16863": {
    "id": 16863,
    "code": "x = \"H\";y = \"H\"\nif x == 'H':\n    print(y)\nelif x == 'D':\n    print('H' if y=='D' else 'D')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17827": {
    "id": 17827,
    "code": "s = \"0112\"\ns1 = int(s[0]+s[1])\ns2 = int(s[2]+s[3])\nL=[]\nfor i in range(1, 13):\n    L.append(i)\nif s1 not in L and s2 not in L:\n    print('NA')\nelif s1 in L and s2 not in L:\n    print('MMYY')\nelif s1 not in L and s2 in L:\n    print('YYMM')\nelse:\n    print('AMBIGUOUS')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "12319": {
    "id": 12319,
    "code": "S = \"atcoder\"\nN = len(S)\nS_list=[]\nfor i in S:\n    S_list.append(i)   \nrS_list = list(reversed(S_list))\nsecond_list = S_list[:(int((N-1)/2))]\nrsecond_list = list(reversed(second_list))\nthird_list = S_list[(int(((N+3)-1)/2)):N]\nrthird_list = list(reversed(third_list))\nif S_list == rS_list:\n    if second_list == rsecond_list:\n        if third_list == rthird_list:\n            print('Yes')       \n    else:\n            print('No')   \nelse:\n            print('No')    ",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "15973": {
    "id": 15973,
    "code": "A = \"20\";B = \"30\"\n(A,B)=(int(A),int(B))\nAns=A-(2*B)\nif Ans<=0:\n  Ans=0\nprint(Ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "962": {
    "id": 962,
    "code": "n = 111\nif n%111==0:\n    print(n)\nelse:\n    x=n//111\n    print((x+1)*111)",
    "coverage": [">", ">", ">", "!", "!", "!"]
  },
  "17531": {
    "id": 17531,
    "code": "s = 1700\ns1=s//100\ns2=s-s1*100\nif 0<s1<=12 and 0<s2<=12:\n    print(\"AMBIGUOUS\")\nelif (s1>12 or s1==0) and 0<s2<=12:\n    print(\"YYMM\")\nelif 0<s1<=12 and (s2>12 or s2==0):\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "3036": {
    "id": 3036,
    "code": "s = \"1234567876\"\nans = abs(753 - int(s[0: 3]))\nfor i in range(1, len(s) - 2):\n    num = int(s[i: i + 3])\n    ans = min(ans, abs(753 - num))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "15623": {
    "id": 15623,
    "code": "x = 13;y = 3;z = 1\nx -= z\nc = 0\nwhile x-(y+z)>=0:\n    x -= y+z\n    c += 1\nprint(c)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "6317": {
    "id": 6317,
    "code": "import bisect\nn = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nL = [0] * n\nfor i in range(n):\n    a = bisect.bisect_left(A, B[i])\n    L[i] = a\ncum = [0] * (n + 1)\nfor i in range(n):\n    cum[i+1] = cum[i] + L[i]\nfor i in range(n):\n    b = bisect.bisect_left(B, C[i])\n    ans += cum[b]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "15076": {
    "id": 15076,
    "code": "from math import factorial\nn = 1;p = 1\na = [50]\na1=[]\na0=[]\nfor i in a:\n    if i%2==1:\n        a1.append(i)\n    else:\n        a0.append(i)\na1c=len(a1)\na0c=len(a0)\nans1=0\nfor i in range(a0c+1):\n    ans1+=factorial(a0c) / factorial(i) / factorial(a0c - i)\nans2=0\nif p==1:\n    for i in range(1,a1c+1,2):\n        ans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\nelse:\n    for i in range(0,a1c+1,2):\n        ans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\nprint(int(ans2*ans1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "2501": {
    "id": 2501,
    "code": "s = {'9', '4', '0', '8'}\na = {'1','9','7','4'}\ns = s&a\nif len(s) == 4:\n  print('YES')\nelse:\n  print('NO')",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "15742": {
    "id": 15742,
    "code": "x = 13;y = 3;z = 1\nans = 0\nfor i in range(10**5):\n    if i*y + (i+1)*z <= x:\n        pass\n    else:\n        break\nprint(i-1)",
    "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]
  },
  "11945": {
    "id": 11945,
    "code": "m1 = [11, 30]\nm2 = [12, 1]\nif m1[0]!=m2[0]:\n  print(1)\nelse:\n  print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "3292": {
    "id": 3292,
    "code": "a = 20;b = 15\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)",
    "coverage": [">", ">", ">", "!", ">"]
  },
  "7635": {
    "id": 7635,
    "code": "H = 210;N = 5\nA = [31, 41, 59, 26, 53]\ns=0\nflg=True\nfor i in range(N):\n  s+=A[i]\n  if s>=H:\n    print('Yes')\n    flg=False\n    break\nif flg:\n\tprint('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!"]
  },
  "2836": {
    "id": 2836,
    "code": "S = \"1234567876\"\nN = len(S)\nans = 1000\nfor i in range(N-2):\n    ans = min(ans, abs(753-(int(S[i])*100+int(S[i+1])*10+int(S[i+2]))))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "16485": {
    "id": 16485,
    "code": "from bisect import bisect\nn = 2\nlst = [0, 100]\nm=lst[-1]\nindex=bisect(lst,m/2)\nif m!=lst[index]:\n    q=lst[index]\n    if 0<=index-1:\n        p=lst[index-1]\n        if abs(m/2-p)>=abs(m/2-q):\n            print(m,q)\n        else:\n            print(m,p)\n    else:\n        print(m,q)\nelse:\n    print(m,lst[index-1])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "16947": {
    "id": 16947,
    "code": "a = \"H\";b = \"H\"\nhd = \"HD\"\nif a == \"H\":\n    print(b)\nelse:\n    print(hd[hd.index(b) - 1])",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "13145": {
    "id": 13145,
    "code": "if int(\"6\") in [7, 5, 3]: print(\"YES\")\nelse: print(\"NO\")",
    "coverage": [">", ">"]
  },
  "6998": {
    "id": 6998,
    "code": "H = 211;N = 5\nl = [31, 41, 59, 26, 53]\ntotal=0\nfor k in range(N):\n  total+=l[k]\nif total>=H:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "4736": {
    "id": 4736,
    "code": "char = \"smiles\"\nlength = len(char)\nprint('{}{}{}'.format(char[0], length-2, char[-1]))",
    "coverage": [">", ">", ">"]
  },
  "18594": {
    "id": 18594,
    "code": "h = 14\nw = 12\nn = 112\ns = max(h,w)\nprint((n+s-1)//s)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10768": {
    "id": 10768,
    "code": "S = \"akasaka\"\nN=len(S)\nl=(N-1)//2\nfor i in range(l):\n  if S[i]!=S[N-1-i]:\n    print('No')\n    exit()\nL=S[:l]\nfor i in range(l):\n  if S[i]!=S[l-1-i]:\n    print('No')\n    exit()\nprint('Yes')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "7126": {
    "id": 7126,
    "code": "import math\nh = 211;n = 5\nsum = 0\nli = [31, 41, 59, 26, 53]\nfor val in li:\n    sum += val\nif sum >= h:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "10936": {
    "id": 10936,
    "code": "s = ['l', 'e', 'v', 'e', 'l']\nb = 0\nif len(s)%2==1:\n    for a in range(int((len(s)-1)/2)):\n        if s[a]!=s[len(s)-a-1] and b==0:\n            b = 1\nelse:\n    b = 1\nif b == 0:\n    for c in range(int((len(s)-1)/4+1)):\n        if s[c]==s[int((len(s)-1)/2-c-1)]==s[int((len(s)+1)/2+c)]==s[len(s)-c-1] and b==0:\n            b = 0\n        else:\n            b = 1\nif b == 0:\n    print(\"Yes\")\nelif b == 1:\n    print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "5478": {
    "id": 5478,
    "code": "N = 100\na = (N + 2 - 1) // 2\nprint(a)",
    "coverage": [">", ">", ">"]
  },
  "873": {
    "id": 873,
    "code": "import sys\nk = 2\nif k%7==0:\n    k//=7\nk*=9\na=10%k\nfor i in range(k):\n    a=a%k\n    if a==1:\n        print(i+1)\n        sys.exit()\n    a*=10\nprint(-1)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "7007": {
    "id": 7007,
    "code": "h = 10;n = 3\na = [4, 5, 6]\nx = 0\nfor i in range(n):\n    x = x + a[i]\nprint(\"Yes\" if x >= h else \"No\")",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "10551": {
    "id": 10551,
    "code": "abk = [8, 12, 2]\na = abk[0]\nb = abk[1]\nk = abk[2]\nanss = []\nfor i in range(1,min(a,b)+1):\n  if a%i==0 and b%i==0:\n    anss.append(i)\nanss.sort(reverse=True)\nprint(anss[k-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "14220": {
    "id": 14220,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzougen = 2\nans = 0\nfor i in range(1,n):\n    if i == n-1:\n        if zougen == 2:\n            ans += 1\n        elif zougen == 0:\n            if a[i]-a[i-1]<0:\n                ans += 2\n            else:\n                ans += 1\n        else:\n            if a[i]-a[i-1] > 0:\n                ans += 2\n            else:\n                ans += 1\n    elif zougen == 2:\n        if a[i]-a[i-1]>0:\n            zougen = 0\n        elif a[i]-a[i-1]<0:\n            zougen = 1\n        else:\n            zougen = 2\n    elif zougen == 0:\n        if a[i]-a[i-1]<0:\n            zougen = 2\n            ans += 1\n    elif zougen == 1:\n        if a[i]-a[i-1]>0:\n            zougen = 2\n            ans += 1\nif n == 1:\n    ans = 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "18622": {
    "id": 18622,
    "code": "h = 2\nw = 100\nn = 200\nprint((n//(-(max(h,w))))*(-1))",
    "coverage": [">", ">", ">", ">"]
  },
  "1184": {
    "id": 1184,
    "code": "n = 750\nwhile True:\n  n = str(n)\n  if n[0] == n[1] == n[2]:\n    break\n  n = int(n) + 1\nprint(n)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "7810": {
    "id": 7810,
    "code": "n = 8;k = 3\na = [7, 3, 1, 8, 4, 6, 2, 5]\nans=1\nn-=k\nk-=1\nans+=(n+k-1)//k\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "8886": {
    "id": 8886,
    "code": "n = 1\na1 = [2]\na2 = [3]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8140": {
    "id": 8140,
    "code": "n = 8;k = 3\nA = \"7 3 1 8 4 6 2 5\"\nans = 1 + -(-(n-k)//(k-1))\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "15927": {
    "id": 15927,
    "code": "a = 20;b = 15\nc=b*2\nif(c>a):\n    c=a\nprint(a-c)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "4821": {
    "id": 4821,
    "code": "s = \"xyz\"\nf = s[0]\ne = s[-1]\nprint(f + str(len(s)-2) + e)",
    "coverage": [">", ">", ">", ">"]
  },
  "395": {
    "id": 395,
    "code": "s = \"xyz\"\nk = 4\nans=''\nfor i in range(len(s)-1):\n  if s[i]=='a':\n    ans+='a'\n  else:\n    if k>=123-ord(s[i]):\n      k-=(123-ord(s[i]))\n      ans+='a'\n    else:\n      ans+=s[i]\nans+=chr((ord(s[-1])-97+k)%26+97)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "1787": {
    "id": 1787,
    "code": "N = 10;A = 3;B = 5\nmaximum = min([A, B])\nif A+B >= N:\n    minimum = (A+B) - N\nelse:\n    minimum = 0\nprint(maximum, minimum)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "1098": {
    "id": 1098,
    "code": "import sys\nN = 112\nnum =[111,222,333,444,555,666,777,888,999]\nfor i in range(8):\n    if N <= num[0]:\n        ans =111\n        break\n    elif  num[i] < N <= num[i+1]:\n        ans =num[i+1] \nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "6632": {
    "id": 6632,
    "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\ncount = 0\nA.sort()\nC.sort()\nfor i in B:\n    t = bisect.bisect_left(A,i)\n    s = N - bisect.bisect_right(C,i)\n    count += t*s\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5415": {
    "id": 5415,
    "code": "n = 100\nif n%2==0:print(n//2)\nelse:print(n//2+1)",
    "coverage": [">", ">", "!"]
  },
  "9261": {
    "id": 9261,
    "code": "a = \"2017\";b = \"01\";c = \"31\"\na = '2018'\nprint(a + '/' + b + '/' + c)",
    "coverage": [">", ">", ">"]
  },
  "14142": {
    "id": 14142,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nstate = -1\nres = 1\nfor i in range(1, n):\n    if state == -1:\n        if a[i] < a[i-1]:\n            state = 0\n        elif a[i] > a[i-1]:\n            state = 1\n    elif (state == 0 and a[i] > a[i-1]) or (state == 1 and a[i] < a[i-1]):\n        res += 1\n        state = -1\nprint(res)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7493": {
    "id": 7493,
    "code": "h = 10;n = 3\nxlist = [4, 5, 6]\nif sum(xlist)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "10063": {
    "id": 10063,
    "code": "n = 6\ns = \")))())\"\na=0\nb=0\nfor i in range(n):\n    if s[i]=='(':\n        a+=1\n    else:\n        if a==0:\n            b+=1\n        else:\n            a-=1\nprint('('*b+s+')'*a)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "4693": {
    "id": 4693,
    "code": "S = \"internationalization\"\nprint(S[0] + str(len(S) - 2) + S[-1])",
    "coverage": [">", ">"]
  },
  "2278": {
    "id": 2278,
    "code": "n = 10;a = 3;b = 5\nmx = min(a,b)\nif a+b > n:\n  mi = a+b -n\nelse:\n  mi = 0\nprint(mx,mi)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "9650": {
    "id": 9650,
    "code": "n = 3\ns = \"())\"\nl, r = 0, 0\nfor i in s:\n    if i == \"(\":\n        r += 1\n    elif r > 0 and i == \")\":\n        r -= 1\n    else:\n        l += 1\nprint(\"(\" * l + s + \")\" * r)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]
  },
  "4272": {
    "id": 4272,
    "code": "x = [10, 0, 12, 0, 120]\nh1 = x[0]\nm1 = x[1]\nh2 = x[2]\nm2 = x[3]\ns = x[4]\nh = (h2-h1)*60\nm = m2-m1\nprint((h+m)-s)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "19095": {
    "id": 19095,
    "code": "n = 5\nans=0\nif n%2==0:\n    n=n//2\n    i=1\n    while 5**i<=n:\n        ans+=n//(5**i)\n        i+=1\nprint(ans)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", ">"]
  },
  "10772": {
    "id": 10772,
    "code": "S = \"akasaka\"\nN = len(S)\nS1 = S[0:(N-1)//2]\nS2 = S[(N+3)//2-1:N]\nprint(\"Yes\" if S == S[::-1] and S1 == S1[::-1] and S2 == S2[::-1] else \"No\")",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2068": {
    "id": 2068,
    "code": "B = 100;A = 100;N = 100\nprint(B,max(A+B-N,0))",
    "coverage": [">", ">"]
  },
  "3866": {
    "id": 3866,
    "code": "A = 100000;B = 1;C = 1\nprint((A-C)//(B+C))",
    "coverage": [">", ">"]
  },
  "6626": {
    "id": 6626,
    "code": "import bisect\nn = 6\na = [2, 3, 6, 14, 53, 159]\nb = [6, 9, 58, 79, 84, 323]\nc = [2, 50, 79, 288, 383, 2643]\nsum = 0\nfor i in range(len(b)):\n    ai = bisect.bisect_left(a, b[i])\n    ci = bisect.bisect_right(c, b[i])\n    sum += ai * (n - ci)\nprint(sum)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9980": {
    "id": 9980,
    "code": "n = 3\ns = \"())\"\nnow=0\nrec=0\nfor i in s:\n    now+=(-1)**(i==\")\")\n    rec=min(now,rec)\nf,t=\"\",\"\"\nif rec<0:\n    f=\"(\"*-rec\n    now-=rec\nif now>0:\n    t=\")\"*now\nprint(f+s+t)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "3983": {
    "id": 3983,
    "code": "x = 64146;y = 123;z = 456\nx -= z\nans = x // (y+z)\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "6844": {
    "id": 6844,
    "code": "H = 211;N = 5\nlists = [31, 41, 59, 26, 53]\nlists.sort()\nSAM = sum(lists)\nif SAM>=H:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "9043": {
    "id": 9043,
    "code": "a = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\ns = list(sorted([a, b, c, d, e]))\nd_min = s[0]\nd_max = s[-1]\nif d_max - d_min > k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "4327": {
    "id": 4327,
    "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif m1 <= m2:\n    h = h2 - h1\n    m = m2 - m1\nelse:\n    h = h2 - h1 - 1\n    m = m2 - m1 + 60\nm += 60 * h\nprint(m - k)",
    "coverage": [">", ">", ">", ">", "!", "!", "!", ">", ">"]
  },
  "7589": {
    "id": 7589,
    "code": "H = 10;N = 3\nA = [4, 5, 6]\nprint('Yes' if H - sum(A) <= 0 else 'No')",
    "coverage": [">", ">", ">"]
  },
  "9317": {
    "id": 9317,
    "code": "s = \"2017/01/31\"\ns_2 = s[4:10]\nprint('2018' + s_2)",
    "coverage": [">", ">", ">"]
  },
  "14353": {
    "id": 14353,
    "code": "import sys\ninput = sys.stdin.buffer.readline\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nd = 0\nans = 1\nfor i in range(1, N):\n    if A[i - 1] < A[i]:\n        if d < 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = 1\n    elif A[i - 1] > A[i]:\n        if d > 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = -1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11510": {
    "id": 11510,
    "code": "days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]\ni = 6\nprint(7 - i if i < 7 else 7)",
    "coverage": [">", ">", ">"]
  },
  "6123": {
    "id": 6123,
    "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nad=sorted(a)\nbd=sorted(b)\ncd=sorted(c)\ncount=0\nfor i in range(n):\n  al=bisect.bisect_left(ad,bd[i])\n  cl=bisect.bisect_right(cd,bd[i])\n  sum=al * ( n - cl )\n  count=count+( al * ( n - cl ) )\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9062": {
    "id": 9062,
    "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nprint(':(' if e - a > k else 'Yay!')",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "15647": {
    "id": 15647,
    "code": "X = 13;Y = 3;Z = 1\nans = X//(Y+Z) - 1\nif ans*(Y+Z)+(Y+Z+Z) <= X: ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "1807": {
    "id": 1807,
    "code": "import math\nimport itertools\nimport sys\nimport copy\nN = 100;A = 100;B = 100\nmaxN = min(A, B)\nminN = max(A+B-N, 0)\nprint (str(maxN) + \" \" + str(minN))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "1126": {
    "id": 1126,
    "code": "n = ['1', '1', '2']\nN = [int(n[i]) for i in range(len(n))]\nif N[0] == max(N):\n  print(max(N) * 100 + max(N)*10 + max(N))\nelse:\n  m = N[0]+1\n  print(m * 100 + m * 10 + m)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "17924": {
    "id": 17924,
    "code": "s = \"1700\"\nflg1 = 1 <= int(s[:2]) <= 12\nflg2 = 1 <= int(s[2:]) <= 12\nl = [\"NA\", \"YYMM\", \"MMYY\", \"AMBIGUOUS\"]\nprint(l[(flg1 << 1) + flg2])",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "15089": {
    "id": 15089,
    "code": "import itertools\nimport math\nfrom math import factorial\nN = 3;P = 0\nAs = [1, 1, 1]\nodd = 0\neven = 0\nfor A in As:\n    if(A % 2 == 0):\n        even += 1\n    else:\n        odd += 1\neven_combi = 0\nfor i in range(even+1):\n    even_combi += math.factorial(even) // math.factorial(i) // math.factorial(even-i)\nodd_combi = 0\nif(P == 0):\n    for i in range(0,odd + 1,2):\n        odd_combi += math.factorial(odd) // math.factorial(i) // math.factorial(odd-i)\nelse:\n    for i in range(1, odd + 1 , 2):\n        odd_combi += math.factorial(odd) // math.factorial(i) // math.factorial(odd-(i))\nprint(odd_combi*even_combi)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "5003": {
    "id": 5003,
    "code": "S = \"smiles\"\ns_num=len(S)-2\nprint(S[0]+str(s_num)+S[-1])",
    "coverage": [">", ">", ">"]
  },
  "9689": {
    "id": 9689,
    "code": "N = 3\nS = ['(', ')', ')']\nc = 0\nl = []\nfor i in S:\n    if i == \"(\":\n        c += 1\n    else:\n        c -= 1\n    l.append(c)\nm = min(l)\nif m < 0:\n    for i in range(N):\n        l[i] += (-m)\n    M = l[-1]\n    ans = [\"(\"] *(-m) + S + [\")\"] *M\nelse:\n    M = l[-1]\n    ans = S + [\")\"] *M\noutput = \"\".join(ans)\nprint(output)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "13925": {
    "id": 13925,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nif n==1:\n    print(ans)\n    exit()\nc=0\nfor i in range(n):\n    if i!=n-1:\n        if c==1:\n            if a[i+1]<a[i]:\n                ans+=1\n                c=0\n                continue\n        elif c==2:\n            if a[i+1]>a[i]:\n                ans+=1\n                c=0\n                continue\n        if a[i+1]>a[i]:\n            c=1\n        elif a[i+1]<a[i]:\n            c=2\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1195": {
    "id": 1195,
    "code": "n = 112\na = 111\nwhile a < n:\n    a += 111\nprint(a)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "15009": {
    "id": 15009,
    "code": "n = 1;p = 1\na = [50]\nb = [0]*n\nfor i in range(n):\n    b[i]=a[i]%2\nans=2**(n-1)\nif p==1 and sum(b)==0:\n    ans = 0\nif p==0 and sum(b)==0:\n    ans *= 2\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "11616": {
    "id": 11616,
    "code": "S = \"SAT\"\nif S == 'MON':\n    print(\"6\")\nelif S == 'TUE':\n    print(\"5\")\nelif S == 'WED':\n    print(\"4\")\nelif S == 'THU':\n    print(\"3\")\nelif S == 'FRI':\n    print(\"2\")\nelif S == 'SAT':\n    print(\"1\")\nelif S == 'SUN':\n    print(\"7\")",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "14557": {
    "id": 14557,
    "code": "n = 1;p = 1\na = [50]\ncnt = [0, 0]\nfor i in a:\n    cnt[i % 2] += 1\nif cnt[1] == 0:\n    print(0 if p == 1 else 2 ** n)\nelse:\n    print(2**(n-1))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "794": {
    "id": 794,
    "code": "K = 101\nsevens = 7 % K\ncount = 1\nwhile(sevens % K !=0):\n  sevens = sevens * (10 % K) + (7 % K)\n  sevens = sevens % K\n  count += 1\n  if count > K:\n    count = -1\n    break\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "5975": {
    "id": 5975,
    "code": "a = 2\nif(a%2 == 1):\n  print((a+1)//2)\nif(a%2 == 0):\n  print(a//2)",
    "coverage": [">", ">", "!", ">", ">"]
  },
  "14868": {
    "id": 14868,
    "code": "N = 1;P = 1\nA = [50]\nf=0\nfor i in range(N):\n  if A[i]%2==1:\n    f=1\nif f==0:\n  if P==0:\n    print(2**N)\n  else:\n    print(0)\nelse:\n  print(2**(N-1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!"
    ]
  },
  "14164": {
    "id": 14164,
    "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\ntmp = 0\nfor i in range(1, n):\n    if (A[i] - A[i-1]) * tmp < 0:\n        ans += 1\n        tmp = 0\n    elif A[i] - A[i-1] != 0:\n        tmp = A[i] - A[i-1]\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8324": {
    "id": 8324,
    "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nC = [0] * N \nC[0] = A[0] + sum(B)\nfor i in range(1,N):\n    C[i] = C[i-1]+A[i]-B[i-1]\nprint(max(C))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12140": {
    "id": 12140,
    "code": "M1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif M1 != M2:\n    print(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "1382": {
    "id": 1382,
    "code": "n = 750\nif n % 111 == 0:\n    print(n)\n    quit()\nprint((n//111+1)*111)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "14266": {
    "id": 14266,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nincrease = True\nequal = True\nstart = True\ncount = 1\nfor i, a in enumerate(A):\n    if i > 0:\n        if equal:\n            if a > A[i-1]:\n                increase = True\n                equal = False\n            elif a < A[i-1]:\n                increase = False\n                equal = False\n        else:\n            if increase:\n                if a < A[i-1]:\n                    count += 1\n                    equal = True\n            else:\n                if a > A[i-1]:\n                    count += 1\n                    equal = True\n                    start = True\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "6655": {
    "id": 6655,
    "code": "import bisect\nn = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nC.sort()\nans = 0\nfor b in B:\n    ans += (bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b)))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18895": {
    "id": 18895,
    "code": "import sys\nfrom math import factorial\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nN = 12\nif N % 2:\n    print(0)\n    sys.exit()\ndiv = 10\ncount = 0\nwhile N // div:\n    count += N // div\n    div *= 5\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12801": {
    "id": 12801,
    "code": "X = 6\nans = \"YES\" if X == 7 or X == 5 or X == 3 else \"NO\"\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "11867": {
    "id": 11867,
    "code": "from collections import Counter, defaultdict\na = 11;b = 30\nc = 12;d = 1\nprint(\"1\" if c == a+1 else \"0\")",
    "coverage": [">", ">", ">", ">"]
  },
  "14387": {
    "id": 14387,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 1\nans = 1\nchange = [False,False]\nwhile i<n:\n    if change == [True,True]:\n        ans += 1\n        change = [False,False]\n    elif a[i]>a[i-1]:\n        change[0] = True\n        i += 1\n    elif a[i]<a[i-1]:\n        change[1] = True\n        i += 1\n    else:\n        i += 1\nif i==n and change==[True,True]:\n    ans += 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      ">"
    ]
  },
  "18037": {
    "id": 18037,
    "code": "s = \"0112\"\nmae = int(s[:2])\nusiro = int(s[2:])\nym = 0\nmy = 0\nif (1 <= usiro <= 12): ym = 1\nif (1 <= mae <= 12): my = 1\nif (ym and my): print(\"AMBIGUOUS\")\nelif (ym): print(\"YYMM\")\nelif (my): print(\"MMYY\")\nelse: print(\"NA\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!"]
  },
  "2572": {
    "id": 2572,
    "code": "print('YES' if set(list(map(int,\n                            \"1 7 9 4\".split()))) == set([1, 9, 7, 4]) else 'NO')",
    "coverage": [">", ">"]
  },
  "5414": {
    "id": 5414,
    "code": "n = 2\nif n%2==0:print(n//2)\nelse:print(n//2+1)",
    "coverage": [">", ">", "!"]
  },
  "13945": {
    "id": 13945,
    "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nmode = 0\nprev = A[0]\nfor i in A:\n    check = i - prev\n    if check == 0:\n        pass\n    elif check > 0:\n        if mode >= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    else:\n        if mode <= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    prev = i\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13080": {
    "id": 13080,
    "code": "X = \"5\"\nprint('YES' if X == '7' or X == '5' or X == '3' in X else 'NO') ",
    "coverage": [">", ">"]
  },
  "14423": {
    "id": 14423,
    "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstatus = 0 \ncnt = 1\nfor i in range(1,N):\n    if A[i-1] < A[i]: \n        if status == 0 or status == 1:\n            status = 1\n        else:\n            status = 0\n            cnt += 1\n    elif A[i-1] > A[i]:\n        if status == 0 or status == 2:\n            status = 2\n        else:\n            status = 0\n            cnt += 1\n    else:\n        continue\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "1284": {
    "id": 1284,
    "code": "a = 750\na+=110\na//=111\na*=111\nprint(a)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "8206": {
    "id": 8206,
    "code": "from bisect import bisect_left\nn = 4;k = 3\na = [2, 3, 1, 4]\npos = bisect_left(a, 1)\nprint((pos + k - 2) // (k - 1) + (n - pos + k - 3) // (k - 1))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "12857": {
    "id": 12857,
    "code": "X = \"6\"\nprint('YES' if X in '357' else 'NO')",
    "coverage": [">", ">"]
  },
  "10524": {
    "id": 10524,
    "code": "split = ['8', '12', '2']\na = int(split[0])\nb = int(split[1])\nc = int(split[2])\nnums = []\ncheck = a if a < b else b\nfor i in range(1, check + 1, 1):\n    if a % i == 0 and b % i == 0:\n        nums.append(i)\nprint(nums[-c])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4625": {
    "id": 4625,
    "code": "head = \"s\";body = ['m', 'i', 'l', 'e'];tail = \"s\"\nprint(''.join(map(str, (head, len(body), tail))))",
    "coverage": [">", ">"]
  },
  "9528": {
    "id": 9528,
    "code": "S = ['2', '0', '1', '7', '/', '0', '1', '/', '0', '7']\nS[3] = '8'\nS = \"\".join(S)\nprint(S)",
    "coverage": [">", ">", ">", ">"]
  },
  "2834": {
    "id": 2834,
    "code": "S = \"35753\"\nans = 99999\nans_s = 99999\nfor i in range(0,len(S)-2):\n    s = int(S[i:i+3])\n    ans = min(ans,abs(s-753))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "15178": {
    "id": 15178,
    "code": "x = 64146;y = 123;z = 456\nx-=z\nprint((x-x%(y+z))//(y+z))",
    "coverage": [">", ">", ">"]
  },
  "13104": {
    "id": 13104,
    "code": "X = 5\nprint('YES' if X == 3 or X == 5 or X == 7 else 'NO')",
    "coverage": [">", ">"]
  },
  "16426": {
    "id": 16426,
    "code": "N = 2\nA = [100, 0]\nA.sort()\nm = A[-1]\nx = m / 2\nans = A[0]\nfor i in range(1, N-1):\n    if abs(ans - x) > abs(A[i] - x):\n        ans = A[i]\nprint(m, ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "3505": {
    "id": 3505,
    "code": "if __name__ == '__main__':\n    a = 12;b = 4\n    print(max(0, a - b * 2))",
    "coverage": [">", ">", ">"]
  },
  "11103": {
    "id": 11103,
    "code": "S = \"atcoder\"\nL=(len(S)-1)//2\nans='Yes'\nif S[:L]!=S[-L:]:\n    ans='No'\nfor n in range(L):\n    m=L-1-n\n    if S[n]!=S[m]:\n        ans='No'\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9186": {
    "id": 9186,
    "code": "S = \"2017/01/07\"\nanswer = S.replace(\"2017\", \"2018\")\nprint(answer)",
    "coverage": [">", ">", ">"]
  },
  "11054": {
    "id": 11054,
    "code": "s = \"akasaka\"\nn=len(s)//2\nif s[:n]==s[n+1:]:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "4089": {
    "id": 4089,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nt1, t2 = h1*60+m1, h2*60+m2\nif t1 > t2:\n    t2 += 60*24\nans = t2-t1-k\nprint(ans)",
    "coverage": [">", ">", ">", "!", ">", ">"]
  },
  "3638": {
    "id": 3638,
    "code": "A = 12;B = 4\nprint(max([0, A-2*B]))",
    "coverage": [">", ">"]
  },
  "17914": {
    "id": 17914,
    "code": "S = \"0112\"\nif 0 < int(S[:2]) < 13 and 0 < int(S[2:]) < 13:\n    print('AMBIGUOUS')\nelif 0 < int(S[:2]) < 13:\n    print('MMYY')\nelif 0 < int(S[2:]) < 13:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "19483": {
    "id": 19483,
    "code": "x = 999999999\nif x%2:\n  print(x*2)\nelse:\n  print(x)",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "4483": {
    "id": 4483,
    "code": "a = \"internationalization\"\nprint(a[0] + str(len(a[1:-1])) + a[-1])",
    "coverage": [">", ">"]
  },
  "13168": {
    "id": 13168,
    "code": "S = \"abcde,fghihgf,edcba\"\nans=S.replace(\",\" , \" \")\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "18716": {
    "id": 18716,
    "code": "from sys import stdin\nH = 14\nW = 12\nN = 112\nif N%(max(H,W))==0:\n    print(N//(max(H,W)))\nelse:\n    print(N//(max(H,W))+1)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "11500": {
    "id": 11500,
    "code": "s = \"SAT\"\nw = ['SAT', 'FRI', 'THU', 'WED', 'TUE', 'MON', 'SUN']\nprint(w.index(s)+1)",
    "coverage": [">", ">", ">"]
  },
  "17742": {
    "id": 17742,
    "code": "s = \"1905\"\nn1 = int(s[0:2])\nn2 = int(s[2:4])\nif 1 <= n1 <= 12:\n  if 1 <= n2 <= 12:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelif 1 <= n2 <= 12:\n  print('YYMM')\nelse:\n  print('NA')",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!"]
  },
  "9192": {
    "id": 9192,
    "code": "a = \"2017\";b = \"01\";c = \"07\"\nprint(int(a)+1,b,c,sep=(\"/\"))",
    "coverage": [">", ">"]
  },
  "14276": {
    "id": 14276,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n<=2:\n    print(1)\n    exit(0)\nflg=0\ncnt=0\ntmp=[]\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        tmp.append(1)\n    elif a[i]==a[i-1]:\n        tmp.append(0)\n    else:\n        tmp.append(-1)\nflg=0\nswi=0\nfor j in range(len(tmp)):\n    if swi==1:\n        flg=tmp[j]\n        swi=0\n        continue\n    if flg==0:\n        flg=tmp[j]\n    elif flg==1:\n        if tmp[j]==-1:\n            cnt+=1\n            flg=-1\n            swi=1\n    elif flg==-1:\n        if tmp[j]==1:\n            cnt+=1\n            flg=1\n            swi=1\nprint(cnt+1)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14630": {
    "id": 14630,
    "code": "from collections import Counter\nN = 2;P = 0\nA = [1, 3]\nn0 = 0\nn1 = 0\nfor i, a in enumerate(A):\n    b = a % 2\n    A[i] = b\n    if b == 0:\n        n0 += 1\n    else:\n        n1 += 1\nC1 = [1]\nfor i in range(n1):\n    C1.append(C1[-1] * (n1-i)//(i+1))\nans = 0\nfor i in range(0, 51, 2):\n    if i + P > n1:\n        break\n    ans += C1[i+P] * (2**(n0))\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8477": {
    "id": 8477,
    "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nl = []\nfor i in range(n):\n  x = sum(a1[:i+1]) + sum(a2[i:])\n  l.append(x)\nprint(max(l))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6914": {
    "id": 6914,
    "code": "h = 211;n = 5\nif h <= sum(list(map(int, \"31 41 59 26 53\".split()))):\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "10920": {
    "id": 10920,
    "code": "s = \"akasaka\"\nn = len(s)\nprint('Yes' if s==s[::-1] and s[:(n-1)//2]==s[:(n-1)//2][::-1] and s[(n+1)//2:] == s[(n+1)//2:][::-1] else 'No')",
    "coverage": [">", ">", ">"]
  },
  "2276": {
    "id": 2276,
    "code": "n = 10;a = 7;b = 5\nmaxa = min(a,b)\nmina = abs(min(0, n-(a+b)))\nprint(maxa,mina)",
    "coverage": [">", ">", ">", ">"]
  },
  "18245": {
    "id": 18245,
    "code": "a = 3\nb = 7\nc = 10\nif a<b:\n  a,b=b,a\nif c%a==0:\n  print(c//a)\nelse:\n  print(c//a+1)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "4863": {
    "id": 4863,
    "code": "s = ['x', 'y', 'z']\nnum = len(s[1:len(s)-2]) + 1\nprint(s[0] + str(num) + s[len(s)-1])",
    "coverage": [">", ">", ">"]
  },
  "17187": {
    "id": 17187,
    "code": "print({\n 'H H': 'H',\n   'H D': 'D',\n   'D H': 'D',\n   'D D': 'H',\n}[\"D D\"])",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "13606": {
    "id": 13606,
    "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(',',' '))",
    "coverage": [">", ">"]
  },
  "8144": {
    "id": 8144,
    "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nans = 0\ni = 0\nwhile True:\n    if i*(K-1) >= N-1:\n        break\n    ans += 1\n    i += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7313": {
    "id": 7313,
    "code": "h = 10;n = 3\nA = [4, 5, 6]\nfor i in range(n):\n  h-= A[i]\nif h>0:\n  print(\"No\")\nelse:\n  print(\"Yes\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "11357": {
    "id": 11357,
    "code": "S = \"SUN\"\nWeek=['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(7):\n  if S==Week[i]:\n    today=i\nprint(7-today)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "8424": {
    "id": 8424,
    "code": "N = 1\nA1 = [2]\nA2 = [3]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "8315": {
    "id": 8315,
    "code": "n, k = map(int, \"3 3\".split())\nprint((n-2)//(k-1) + 1)",
    "coverage": [">", ">"]
  },
  "1016": {
    "id": 1016,
    "code": "s = \"750\"\nif int(s[0])<int(s[1]):\n    print(111*(int(s[0])+1))\nelif int(s[0])==int(s[1])<int(s[2]):\n    print(111*(int(s[0])+1))\nelse:\n    print(111*int(s[0]))",
    "coverage": [">", ">", "!", ">", "!", "!", ">"]
  },
  "15624": {
    "id": 15624,
    "code": "x = 12;y = 3;z = 1\nx -= z\nc = 0\nwhile x-(y+z)>=0:\n    x -= y+z\n    c += 1\nprint(c)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "12971": {
    "id": 12971,
    "code": "X = 6\nif X in [7,5,3]:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "14399": {
    "id": 14399,
    "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnow = A[0]\nkind = 0\nans = 0\nfor i in range(1,N):\n    if kind == 0:\n        if now < A[i]:\n            kind = 1\n        elif now > A[i]:\n            kind = 2\n    elif kind == 1: \n        if now > A[i]:\n            ans += 1\n            kind = 0\n    else: \n        if now < A[i]:\n            ans += 1\n            kind = 0\n    now = A[i]\nprint(ans+1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12834": {
    "id": 12834,
    "code": "y = \"5\"\nprint(\"YES\" if y in \"753\" else \"NO\")",
    "coverage": [">", ">"]
  },
  "3985": {
    "id": 3985,
    "code": "x = 13;y = 3;z = 1\nif x < y+z*2:\n    print(0)\nelse:\n    ans = (x-(y+z*2))//(y+z)+1\n    print(ans)",
    "coverage": [">", ">", "!", "!", ">", ">"]
  },
  "587": {
    "id": 587,
    "code": "S = \"codefestival\"\nK = 100\nc2i=lambda c: ord(c)-ord(\"a\")\ni2c=lambda i: chr(i+ord(\"a\"))\nA=list(map(c2i, S))\nfor i in range(len(A)):\n    if A[i] and 26-A[i]<=K:\n        K-=26-A[i]\n        A[i]=0\nA[-1]+=K\nA[-1]%=26\nprint(\"\".join(map(i2c,A)))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "280": {
    "id": 280,
    "code": "s = \"a\"\nk = 25\nl = \"abcdefghijklmnopqrstuvwxyz\"\nans = \"\"\nfor i in range(len(s) - 1):\n    num = (26 - l.index(s[i])) % 26\n    if k >= num:\n        ans += \"a\"\n        k -= num\n    else:\n        ans += s[i]\nans += l[(l.index(s[-1]) + k) % 26]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "13560": {
    "id": 13560,
    "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1,s2,s3)",
    "coverage": [">", ">"]
  },
  "19516": {
    "id": 19516,
    "code": "a = 3\ni=1\nif a%2==0 and a%a==0:\n  print(a)\nelse:\n print(a*2)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "5688": {
    "id": 5688,
    "code": "from math import ceil\nN = 100\nprint(ceil(N/2))",
    "coverage": [">", ">", ">"]
  },
  "11633": {
    "id": 11633,
    "code": "A = \"SUN\"\nS = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i in range(7):\n  if A == S[i]:\n    print(7-i)\n    break\n  i+=1",
    "coverage": [">", ">", ">", ">", ">", ">", "!"]
  },
  "15860": {
    "id": 15860,
    "code": "x = 13;y = 3;z = 1\nans = 0\nnow = z\nwhile True:\n    now += y + z\n    ans += 1\n    if now + y + z > x:\n        break\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3799": {
    "id": 3799,
    "code": "import sys\nsys.setrecursionlimit(10**6)\nx = 100000;y = 1;z = 1\nprint((x-z)//(y+z))",
    "coverage": [">", ">", ">", ">"]
  },
  "7181": {
    "id": 7181,
    "code": "h = 10;a = 3\nwa = [4, 5, 6]\nif sum(wa)>=h:\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "16451": {
    "id": 16451,
    "code": "from bisect import bisect_left\nn = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\nam = A[-1]\namin = 0\nans = 0\nfor a in A[:-1]:\n  if min(a, am-a) > amin:\n    amin = min(a,am-a)\n    ans = a\nprint(am , ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11811": {
    "id": 11811,
    "code": "import sys\ninput = sys.stdin.readline\nM1 = 11;D1 = 30\nM2 = 12;D2 = 1\nif D2 == 1:\n    print(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "3014": {
    "id": 3014,
    "code": "s = \"1111111111\"\nn = len(s)\nans = 1000\nfor i in range(n-2):\n  c = int(s[i])*100+int(s[i+1])*10+int(s[i+2])\n  ans = min(ans,abs(753-c))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "9326": {
    "id": 9326,
    "code": "date = \"2017/01/07\"\ndate_changed = date[:3] + '8' + date[4:]\nprint(date_changed)",
    "coverage": [">", ">", ">"]
  },
  "9928": {
    "id": 9928,
    "code": "from collections import deque\nn = 6\ns=deque(\")))())\")\nleft=0\nright=0\nfor i in range(n):\n  if s[i]==\"(\":\n    left+=1\n  else:\n    if left>0:\n      left-=1\n    else:\n      right+=1\nfor _ in range(left):\n    s.append(\")\")\nfor _ in range(right):\n    s.appendleft(\"(\")\nprint(\"\".join(s))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "6508": {
    "id": 6508,
    "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nans = 0\nfor b in B:\n    a = bisect.bisect_left(A, b) \n    c = N - bisect.bisect_right(C, b) \n    ans += a * c  \nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "15569": {
    "id": 15569,
    "code": "x = 100000;y = 1;z = 1\nX = x - 2*z\nn = X//(y+z)\nif X - (y+z)*n >= y:\n  print(n+1)\nelse:\n  print(n)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "4281": {
    "id": 4281,
    "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif h1>h2:\n    h2+=24\np=(h2-h1)*60+(m2-m1)\nprint(p-k)",
    "coverage": [">", ">", "!", ">", ">"]
  },
  "10348": {
    "id": 10348,
    "code": "A = \"1\";B = \"1\";C = \"1\"\nA, B, C = [int(A), int(B), int(C)]\nL=[]\nfor i in range(min(A,B)):\n    if A%(i+1) == 0 and B%(i+1) == 0:\n        L.append(i+1)\nprint(L[len(L)-C])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "19456": {
    "id": 19456,
    "code": "import math\nN = 10\nprint(2*N//math.gcd(2,N))",
    "coverage": [">", ">", ">"]
  },
  "7257": {
    "id": 7257,
    "code": "h = 210;n = 5\nA = [31, 41, 59, 26, 53]\nattack = sum(A)\nif h > attack:\n    print('No')\nelse:\n    print('Yes')",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "15182": {
    "id": 15182,
    "code": "a = 100000;b = 1;c = 1\na-=c\nb+=c\nprint(a//b)",
    "coverage": [">", ">", ">", ">"]
  },
  "14746": {
    "id": 14746,
    "code": "N = 3;P = 0\na_ls = [1, 1, 1]\ndp = [[0,0] for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(1,N+1):\n    next = (a_ls[i-1])%2\n    if next == 0:\n        dp[i][0] += 2 * dp[i-1][0]\n        dp[i][1] += 2 * dp[i-1][1]\n    else:\n        dp[i][0] += dp[i-1][0] + dp[i-1][1]\n        dp[i][1] += dp[i-1][0] + dp[i-1][1]\nprint(dp[-1][P])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "4923": {
    "id": 4923,
    "code": "letter = ['x', 'y', 'z']\nans = letter[0] + str(len(letter)-2) + letter[-1]\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "10513": {
    "id": 10513,
    "code": "a = 100;b = 50;k = 4\nans = [i for i in range(min(a, b), 0, -1) if a%i==0 and b%i==0]\nprint(ans[k-1])",
    "coverage": [">", ">", ">"]
  },
  "2859": {
    "id": 2859,
    "code": "S = \"1111111111\"\nnum = \"\"\nl = len(S)\ndis = float(\"inf\") \nfor i in range(l-2):\n    num = S[i:i+3]\n    if abs(753-int(num)) < dis:\n        dis = abs(753-int(num))\nprint(dis)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6924": {
    "id": 6924,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\na=0\nfor i in A:\n    a+=i\nif a>=H:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "4200": {
    "id": 4200,
    "code": "a = [10, 0, 15, 0, 30]\nprint((a[2]*60+a[3])-(a[0]*60+a[1])-a[4])",
    "coverage": [">", ">"]
  },
  "4764": {
    "id": 4764,
    "code": "s = \"xyz\"\nl = len(s) - 2\nprint(s[0], l, s[l + 1], sep = \"\")",
    "coverage": [">", ">", ">"]
  },
  "18087": {
    "id": 18087,
    "code": "s = \"0112\"\nif int(s[:2])<=12 and int(s[:2])>0:\n    if int(s[2:4])<=12 and int(s[2:4])>0:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelif int(s[2:4])<=12 and int(s[2:4])>0:\n    print(\"YYMM\")\nelse:\n    print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "7820": {
    "id": 7820,
    "code": "n = 3;k = 3\na = [1, 2, 3]\ncount = 1\nn = n-k\nwhile n > 0:\n    n -= k-1\n    count += 1\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "6732": {
    "id": 6732,
    "code": "from sys import exit\nh = 211;n = 5\na = [31, 41, 59, 26, 53]\nfor i in range(n):\n    h -= a[i]\n    if h <= 0:\n        print(\"Yes\")\n        exit()\nprint(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "5720": {
    "id": 5720,
    "code": "import sys\nN = 2\nif not ( 1 <= N <= 100 ): sys.exit()\nprint(N//2) if N % 2 == 0 else print(N//2 + 1)",
    "coverage": [">", ">", ">", ">"]
  },
  "13801": {
    "id": 13801,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup, down = 0, 0\nans = 0\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        up += 1\n    if a[i-1] > a[i]:\n        down += 1\n    if up * down > 0:\n        ans += 1\n        up = 0\n        down = 0\nprint(ans + 1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14517": {
    "id": 14517,
    "code": "n = 2;p = 0\na = [1, 3]\nflg_lst = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        flg_lst.append(True)\n    else:\n        flg_lst.append(False)\nif False in flg_lst:\n    print(2 ** (n - 1))\nelse:\n    if p == 0:\n        print(2 ** n)\n    else:\n        print(0)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "10480": {
    "id": 10480,
    "code": "a = 8;b = 12;k = 2\nfor i in reversed(range(1,min(a,b)+1)):\n  if a%i==0 and b%i==0 :\n    k=k-1\n  if k==0:\n    print(i)\n    break",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "13922": {
    "id": 13922,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstate = 100\ncount = 1\ntmp = a[0]\nfor i in a:\n  if i == tmp:\n    pass\n  elif i > tmp:\n    if state == 1:\n      pass\n    elif state == 0:\n      count += 1\n      state = 100\n    else:\n      state = 1\n  else:\n    if state == 0:\n      pass\n    elif state == 1:\n      count += 1\n      state = 100\n    else:\n      state = 0\n  tmp = i\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "17777": {
    "id": 17777,
    "code": "S = \"1905\"\nans = 'NA'\nL = int(S[ : 2])\nR = int(S[2 :])\nif 13 > L > 0 and 13 > R > 0:\n    ans = 'AMBIGUOUS'\nelif 13 > R > 0:\n    ans = 'YYMM'\nelif  13 > L > 0:\n    ans = 'MMYY'\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]
  },
  "19071": {
    "id": 19071,
    "code": "n = 5\nans=0\nif n%2==0:\n  st=10\n  d=1\n  while st<=n:\n    ans+=(n//st)\n    st*=5\n  print(ans)\nelse:\n  print(ans)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]
  },
  "1001": {
    "id": 1001,
    "code": "N = 112\nif N <= 111:\n    print(111)\nelif N <= 222:\n    print(222)\nelif N <= 333:\n    print(333)\nelif N <= 444:\n    print(444)\nelif N <= 555:\n    print(555)\nelif N <= 666:\n    print(666)\nelif N <= 777:\n    print(777)\nelif N <= 888:\n    print(888)\nelif N <= 999:\n    print(999)\nelse:\n    print(1111)",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "10215": {
    "id": 10215,
    "code": "N = 6\nS = \")))())\"\ndiff = [0] * (N + 1)\nfor i in range(N):\n    if S[i] == \"(\":\n        diff[i + 1] = diff[i] + 1\n    else:\n        diff[i + 1] = diff[i] - 1\nmin_diff = min(diff)\nprint(\"(\" * -min_diff + S + \")\" * (diff[N] - min_diff))",
    "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]
  },
  "8010": {
    "id": 8010,
    "code": "import math\nn = 3;k = 3\na = [1, 2, 3]\nans = 0\nans = math.ceil((n-1)/(k-1))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "2286": {
    "id": 2286,
    "code": "n = 100;a = 100;b = 100\nprint(min(a, b), max(0, a + b - n))",
    "coverage": [">", ">"]
  },
  "5609": {
    "id": 5609,
    "code": "n = 2\nprint(int(n/2)+int(n%2))",
    "coverage": [">", ">"]
  },
  "7647": {
    "id": 7647,
    "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nfor i in range(n):\n    h -= a[i]\nprint(\"Yes\" if h <=0 else \"No\")",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "16224": {
    "id": 16224,
    "code": "from bisect import bisect_left\nN = 2\na = [100, 0]\na.sort()\nx = a[-1]\ni = bisect_left(a, x/2, hi=N-2)\nfor j in [i-1, i, i+1]:\n    if 0 <= j < N and abs(a[j]-x/2) < abs(a[i]-x/2):\n        i = j\nprint(x, a[i])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "17733": {
    "id": 17733,
    "code": "s = \"1905\"\na1 = int(s[:2])\na2 = int(s[2:])\nif a1 in range(1, 13):\n  if a2 in range(1, 13): print(\"AMBIGUOUS\")\n  else: print(\"MMYY\")\nelse:\n  if a2 in range(1, 13): print(\"YYMM\")\n  else: print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!", "!", "!", ">", "!"]
  },
  "19165": {
    "id": 19165,
    "code": "import math\nN = 12\nif N % 2 == 1:\n    print(0)\nelse:\n    i = 10\n    ans = 0\n    while(True):\n        a = math.floor(N // i)\n        if a < 1:\n            break\n        ans += a\n        i *= 5\n    print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2021": {
    "id": 2021,
    "code": "N = 10;A = 3;B = 5\nma = str(min(A,B))\nif A+B-N > 0:\n    mi = str(A + B - N)\nelse:\n    mi = str(0)\nprint(ma+' '+mi)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "13224": {
    "id": 13224,
    "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5] + \" \" + s[6:13] + \" \" + s[14:])",
    "coverage": [">", ">"]
  },
  "19243": {
    "id": 19243,
    "code": "n = 5\nif n%2 == 1:\n    print(0)\nelse:\n    ans = 0\n    while n >= 5:\n        ans += (n//5)//2\n        n //= 5\n    print(ans)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "5938": {
    "id": 5938,
    "code": "N = 5\nprint(int(N/2) + N%2)",
    "coverage": [">", ">"]
  },
  "6004": {
    "id": 6004,
    "code": "N = 5\nif(N%2==0):\n  print(N//2)\nelse:\n  print((N+1)//2)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "16062": {
    "id": 16062,
    "code": "a = 20;b = 15\nif a>=2*b:\n  print(int(a-2*b))\nelse:\n  print('0')",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "3608": {
    "id": 3608,
    "code": "a = 12;b = 4\nif b*2>=a: print(0)\nelse: print(a-2*b)",
    "coverage": [">", ">", ">"]
  },
  "17779": {
    "id": 17779,
    "code": "S = \"1700\"\nans = 'NA'\nL = int(S[ : 2])\nR = int(S[2 :])\nif 13 > L > 0 and 13 > R > 0:\n    ans = 'AMBIGUOUS'\nelif 13 > R > 0:\n    ans = 'YYMM'\nelif  13 > L > 0:\n    ans = 'MMYY'\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]
  },
  "757": {
    "id": 757,
    "code": "K = 101\nres=1\nx=0\nfor i in range(K):\n    x+=7*res\n    x%=K\n    if x%K==0:\n        print(i+1)\n        break\n    res*=10\n    res%=K\nelse:\n    print(-1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "17584": {
    "id": 17584,
    "code": "s = \"0112\"\nbef = s[:2]\naft = s[2:]\nif 1 <= int(bef) <= 12:\n    if 1 <= int(aft) <= 12:\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"MMYY\")\nelse:\n    if 1 <= int(aft) <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "18385": {
    "id": 18385,
    "code": "H = 2\nW = 100\nN = 200\nlonger = H\nif longer < W:\n    longer = W\nprint(((N-1)//longer)+1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "5275": {
    "id": 5275,
    "code": "mylist = {'9', '4', '0', '8'}\nif '1' in mylist and '9' in mylist and '7' in mylist and '4' in mylist:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "19285": {
    "id": 19285,
    "code": "N = 5\nans = 0\nif N%2 == 0:\n  five = 10\n  while N//five > 0:\n    ans += N//five\n    five *= 5\nprint(ans)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "3936": {
    "id": 3936,
    "code": "x = 13;y = 3;z = 1\nif x < y:\n    print(0)\nelse:\n    l = z\n    i = 0\n    while l + (z+y) <= x:\n        l += (z+y)\n        i += 1\n    print(i)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "8367": {
    "id": 8367,
    "code": "n = 1\nA1 = [2]\nA2 = [3]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4446": {
    "id": 4446,
    "code": "from sys import stdin\ns = \"xyz\"\nprint(\"%s%d%s\" % (s[:1], len(s)-2, s[-1]))",
    "coverage": [">", ">", ">"]
  },
  "5307": {
    "id": 5307,
    "code": "n = 100\nans=(n+1)//2\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "4143": {
    "id": 4143,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;K = 120\nif (h2 - h1)*60 + (m2-m1) < K:\n    print('{}'.format(0))\nelse:\n    print('{}'.format((h2 - h1)*60 + (m2-m1) - K))",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "1044": {
    "id": 1044,
    "code": "N = 750\nfor i in range(N,1000):\n    moji = str(i)\n    if (moji[0] == moji[1]) and (moji[1] == moji[2]):\n        break\nprint(i)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "3284": {
    "id": 3284,
    "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 30\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "11605": {
    "id": 11605,
    "code": "D = \"SUN\"\nW = ['SUN','MON','TUE','WED','THU','FRI','SAT'] \nprint(7 - W.index(D))",
    "coverage": [">", ">", ">"]
  },
  "3849": {
    "id": 3849,
    "code": "X = 64145;Y = 123;Z = 456\nX = X - Z\nY = Y + Z\nprint(X//Y)",
    "coverage": [">", ">", ">", ">"]
  },
  "2364": {
    "id": 2364,
    "code": "a = 2;b = 1\nc = a * (a-1)/2\nd = b*(b-1)/2\nres = int(c+d)\nprint(res)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "14716": {
    "id": 14716,
    "code": "N = 45;P = 1\nAlist = [17, 55, 85, 55, 74, 20, 90, 67, 40, 70, 39, 89, 91, 50, 16, 24, 14, 43, 24, 66, 25, 9, 89, 71, 41, 16, 53, 13, 61, 15, 85, 72, 62, 67, 42, 26, 36, 66, 4, 87, 59, 91, 4, 25, 26]\nguuki = [A%2 for A in Alist]\nodd = guuki.count(1)\neven = guuki.count(0)\nif odd == 0:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\nelse:\n    print(2**(N-1))",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]
  },
  "15769": {
    "id": 15769,
    "code": "X = 64146;Y = 123;Z = 456\na=(X-Z)//(Y+Z)\nprint(a)",
    "coverage": [">", ">", ">"]
  },
  "1581": {
    "id": 1581,
    "code": "n = 112\nans = 0\nwhile n > ans:\n    ans += 111\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "1404": {
    "id": 1404,
    "code": "N = \"112\"\nmax_digit = N[0]\nmin_tmp = ''\nmax_tmp = ''\nfor i in range(len(N)):\n    min_tmp += max_digit\n    max_tmp += str(int(max_digit) + 1)\nif  int(min_tmp) >= int(N):\n    print(min_tmp)\nelse:\n    print(max_tmp)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "6385": {
    "id": 6385,
    "code": "n = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nimport bisect\nans=0\nfor i in range(n):\n  b=B[i]\n  ans+=bisect.bisect_left(A,b)*(n-bisect.bisect_right(C,b))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11278": {
    "id": 11278,
    "code": "S = \"SAT\"\nyoubi = ['MON','TUE','WED','THU','FRI','SAT','SUN']\nprint(7 if S == 'SUN' else 6-youbi.index(S))",
    "coverage": [">", ">", ">"]
  },
  "6531": {
    "id": 6531,
    "code": "n = 2\na_list = [1, 5]\nb_list = [2, 4]\nc_list = [3, 6]\na_list.sort()\nb_list.sort()\nc_list.sort()\nn_b = []\ncurrent = 0\nfor i in range(n):\n    a = a_list[i]\n    while current <= n-1 and b_list[current] <= a:\n        current += 1\n    n_b.append(n-current)\nn_c = []\ncurrent = 0\nfor i in range(n):\n    b = b_list[i]\n    while current <= n-1 and c_list[current] <= b:\n        current += 1\n    n_c.append(n-current)\ncum_nc = [0]*n\ncum_nc[0] = n_c[n-1]\nfor i in range(1, n):\n    cum_nc[i] = cum_nc[i-1] + n_c[n-1-i]\nans = 0\nfor i in n_b:\n    if i > 0:\n        ans += cum_nc[i-1]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "6316": {
    "id": 6316,
    "code": "import bisect\nimport math\nimport sys\nn = 6\nans=0\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\na.sort()\nb.sort()\nc.sort()\nfor i in b:\n    aa=bisect.bisect_left(a,i)\n    cc=len(c)-bisect.bisect_right(c,i)\n    ans+=aa*cc\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3193": {
    "id": 3193,
    "code": "s = \"35753\"\nd = 1001001\nfor i in range(len(s) - 1):\n    x = int(s[i : i + 3])\n    tmp = abs(x - 753)\n    if tmp < d:\n        d = tmp\nprint(d)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10010": {
    "id": 10010,
    "code": "N = 6\nS = \")))())\"\nneed_left = 0\npointer = 0\nfor i in range(len(S)):\n    if S[i] == '(':\n        pointer += 1\n    else:\n        if pointer == 0:\n            need_left += 1\n        else:\n            pointer -= 1\nneed_right = pointer\nres = \"(\" * need_left + S + \")\" * need_right\nprint(res)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12306": {
    "id": 12306,
    "code": "s = \"level\"\nn = len(s)\ns1 = s[:(n - 1) // 2]\ns2 = s[(n + 1) // 2:]\nif s == s[::-1] and s1 == s1[::-1] and s2 == s2[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "16003": {
    "id": 16003,
    "code": "A = 20;B = 30\nX=A-2*B\nif X>=1:\n    print(X)\nelse:\n    print(\"0\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "11282": {
    "id": 11282,
    "code": "s = \"SAT\"\nls = {\"MON\": 0, \"TUE\": 1, \"WED\": 2, \"THU\": 3, \"FRI\": 4, \"SAT\": 5, \"SUN\": -1}\nprint(6-ls[s])",
    "coverage": [">", ">", ">"]
  },
  "7671": {
    "id": 7671,
    "code": "hp = 210;n = 5\narr = [31, 41, 59, 26, 53]\nif sum(arr) >= hp: print(\"Yes\")\nelse: print(\"No\")",
    "coverage": [">", ">", ">", "!"]
  },
  "5103": {
    "id": 5103,
    "code": "S = \"xyz\"\nstart=S[0]\nend=S[len(S)-1]\nnum=len(S)-2\nprint(\"{}{}{}\".format(start,num,end))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9267": {
    "id": 9267,
    "code": "S = \"2017/01/31\"\nprint(S.replace('2017', '2018'))",
    "coverage": [">", ">"]
  },
  "6022": {
    "id": 6022,
    "code": "N = 5\nans = N // 2 + min(1, N % 2)\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "5215": {
    "id": 5215,
    "code": "input_ = \"internationalization\"\nss = input_[0]\nsc = input_[1:-1]\nse = input_[-1]\nprint(ss + str(len(sc)) + se)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "11884": {
    "id": 11884,
    "code": "lst = [11, 16]\nlst2 = [11, 17]\nif lst2[1] == 1:\n    print(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "3924": {
    "id": 3924,
    "code": "X = 100000;Y = 1;Z = 1\nprint(int((X-Z)/(Z+Y)))",
    "coverage": [">", ">"]
  },
  "14082": {
    "id": 14082,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nstate = \"\"\nfor i in range(N-1):\n    if A[i] > A[i+1] and state == \"\":\n        state = \"minus\"\n    elif A[i] > A[i+1] and state == \"plus\":\n        state = \"\"\n        count += 1\n    elif A[i] > A[i+1] and state == \"minus\":\n        continue\n    elif A[i] < A[i+1] and state == \"\":\n        state = \"plus\"\n    elif A[i] < A[i+1] and state == \"minus\":\n        state = \"\"\n        count += 1\n    elif A[i] < A[i+1] and state == \"plus\":\n        continue\n    else:\n        continue\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "341": {
    "id": 341,
    "code": "S = \"a\"\nK = 25\nA = [\" \" for _ in range(len(S))]\nzan = K\nfor i in range(len(S)):\n  n = (ord('z') - ord(S[i]) + 1) % 26 \n  if zan >= n:\n    zan -= n\n    A[i] = 'a'\n  else:\n    A[i] = S[i]\nif zan > 0:\n  A[-1] = chr((ord(A[-1]) - ord('a') + zan)%26 + ord('a'))\nprint(\"\".join(A))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "8282": {
    "id": 8282,
    "code": "N = 3;K = 3\nA = [1, 2, 3]\ndivide_number = K - 1\nother_number = N - 1\nanswer = 0\nanswer = other_number // divide_number\nif other_number % divide_number != 0:\n    answer += 1\nprint(answer)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "4452": {
    "id": 4452,
    "code": "n = \"xyz\"\nm = len(n)\nprint('{}{}{}'.format(n[0],m-2,n[-1]))",
    "coverage": [">", ">", ">"]
  },
  "2207": {
    "id": 2207,
    "code": "n1 = 10;n2 = 7;n3 = 5\nx = min(n2,n3)\nif n2+n3<=10:\n    y=0\nelse:\n    y = max(n2+n3-n1,0)\nprint(x,y)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "7306": {
    "id": 7306,
    "code": "a = [211, 5]\nb = [31, 41, 59, 26, 53]\nif a[0]<= sum(b):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "18955": {
    "id": 18955,
    "code": "import math\nN = 5\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    digN = round( math.log(N , 5) )\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]
  },
  "9926": {
    "id": 9926,
    "code": "N = 8\nS = \"))))((((\"\nd = [0] * (N + 1)\nfor i in range(N):\n    d[i + 1] = d[i] + int(S[i] == \"(\") - int(S[i] == \")\")\na = d[-1]\nb = min(d)\nprint(\"(\" * -b + S + \")\" * (a - b))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16620": {
    "id": 16620,
    "code": "a = \"H\";b = \"H\"\nif len(set((a,b))) == 1:\n    ans = \"H\"\nelse:\n    ans = \"D\"\nprint(ans)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "16122": {
    "id": 16122,
    "code": "a = 12;b = 4\nif a <= b or a - (b * 2) <= 0:\n    print(\"0\")\nelse:\n    print(a - (b * 2))",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "10784": {
    "id": 10784,
    "code": "s = \"akasaka\"\na = s[:len(s)//2]\nb = s[len(s)//2+1:]\nprint('Yes' if s == s[::-1] and a == a[::-1] and b == b[::-1] else 'No')",
    "coverage": [">", ">", ">", ">"]
  },
  "14987": {
    "id": 14987,
    "code": "N = 3;P = 0\nA = [1, 1, 1]\nodd_cnt = 0\nfor a in A:\n    if a % 2 != 0:\n        odd_cnt += 1\nif odd_cnt == 0:\n    if P == 0:\n        print(2**N)\n    else:\n        print(0)\n    exit(0)\nprint(2**(N-1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "5132": {
    "id": 5132,
    "code": "s = ['s', 'm', 'i', 'l', 'e', 's']\ny=str(len(s)-2)\nprint(s[0]+y+s[-1])",
    "coverage": [">", ">", ">"]
  },
  "4158": {
    "id": 4158,
    "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nhour = (h2 - h1) * 60\nminutes = m2 - m1\nprint(hour + minutes - k)",
    "coverage": [">", ">", ">", ">"]
  },
  "5152": {
    "id": 5152,
    "code": "dx = [0, 0, 1, -1, 1, -1, -1, 1]\ndy = [1, -1, 0, 0, 1, -1, 1, -1]\ns = \"internationalization\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2656": {
    "id": 2656,
    "code": "n = \"1 7 9 4\"\nif n.count('1') == 1 and n.count('9') == 1 and n.count('7') == 1 and n.count('4') == 1:\n    print('YES')\nelse:\n    print('NO')",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "9614": {
    "id": 9614,
    "code": "import sys\nsys.setrecursionlimit(10**6)\ninput = \"<function <lambda>>\"\ns = \"2017/01/07\"\nprint(s.replace(\"2017/\",\"2018/\"))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "1017": {
    "id": 1017,
    "code": "N = 111\nS = str(N)\nx = int(S[0])\ny = int(S[1])\nz = int(S[2])\nif x > y:\n    ans = x*100+x*10+x\nelif x < y:\n    x += 1\n    ans = x*100+x*10+x\nelse:\n    if x > z:\n        ans = x*100+x*10+x\n    elif x < z:\n        x += 1\n        ans = x*100+x*10+x\n    else:\n        ans = N\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "6434": {
    "id": 6434,
    "code": "from bisect import bisect_left\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    ans += bisect_left(A, b) * (N - bisect_left(C, b + 1))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6397": {
    "id": 6397,
    "code": "import bisect\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nBC = {}\nfor i in range(N):\n  rank = N - bisect.bisect_right(C, B[i])\n  BC[B[i]] = rank\nBCS = [0 for _ in range(N)]\nBCS[N-1] = BC[B[N-1]]\nfor i in range(N-2,-1,-1):\n  BCS[i] =  BCS[i+1] + BC[B[i]]\nans = 0\nfor i in range(N):\n  rank = bisect.bisect_right(B, A[i])\n  if rank < N:\n    ans += BCS[rank]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14027": {
    "id": 14027,
    "code": "n = 9\nli = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nx = 0 \ni = 0 \nans = 0\nif n == 1:\n    print(1)\n    exit()\nwhile True:\n    if x == 0:\n        if li[i] < li[i+1]:\n            x = 1\n        elif li[i] > li[i+1]:\n            x = -1\n        else:\n            x = 0\n    if x == 1:\n        if li[i] > li[i+1]:\n            ans += 1\n            x = 0\n    if x == -1:\n        if li[i] < li[i+1]:\n            ans += 1\n            x = 0\n    i += 1\n    if i == n-1:\n        break\nprint(ans+1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5615": {
    "id": 5615,
    "code": "N = 2\nA = N / 2\nA = int(A)\nB = (N + 1) / 2\nB = int(B)\nif N % 2 == 0:\n  print(A)\nelse:\n  print(B)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "3766": {
    "id": 3766,
    "code": "x = 13;y = 3;z = 1\ni = 1\nwhile(y+z*2+(z+y)*i <= x):\n    i += 1\nprint(i)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "18828": {
    "id": 18828,
    "code": "import sys\nH = 2\nW = 100\nN = 200\nprint((N - 1) // max(H, W) + 1)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "4992": {
    "id": 4992,
    "code": "s = \"xyz\"\nans = s[0] + str(len(s) - 2) + s[-1]\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "15420": {
    "id": 15420,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\nX = 12;Y = 3;Z = 1\nprint((X-Z) // (Y + Z))",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "216": {
    "id": 216,
    "code": "s = \"a\"\nK = 25\ns = list(s)\nfor i in range(len(s)):\n    if s[i] != 'a':\n        dist = ord('z') - ord(s[i]) + 1\n        if dist <= K:\n            K -= dist\n            s[i] = 'a'\ntemp = K % 26\ns[-1] = chr(ord(s[-1]) + temp)\nprint(''.join(s))",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]
  },
  "18578": {
    "id": 18578,
    "code": "h = 3\nw = 7\nn = 10\nm = max(h, w)\nprint(n // m + 1) if n % m else print(n // m)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "3994": {
    "id": 3994,
    "code": "a = 64145;b = 123;c = 456\na -= c\nprint(a//(b+c))",
    "coverage": [">", ">", ">"]
  },
  "14179": {
    "id": 14179,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nc=1\ng=0\nfor i in range(n-1):\n  if (g==1 and a[i+1]<a[i]) or (g==-1 and a[i+1]>a[i]) :\n    c+=1\n    g=0\n  elif g==0:\n    if a[i+1]>a[i]:\n      g=1\n    elif a[i+1]<a[i]:\n      g=-1\nprint(c)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16523": {
    "id": 16523,
    "code": "n = 5\na = [2, 4, 6, 9, 11]\nan = a[-1]\na = a[:n - 1]\nres = 10 ** 9\nans = 0\nif an % 2 == 0:\n    mid_l = an // 2\n    mid_r = an // 2\nelse:\n    mid_l = an // 2\n    mid_r = (an + 1) // 2\nfor i in range(n - 1):\n    if a[i] <= mid_l:\n        if mid_l - a[i] < res:\n            ans = a[i]\n            res = mid_l - a[i]\n    elif mid_r <= a[i]:\n        if a[i] - mid_r < res:\n            ans = a[i]\n            res = mid_r - a[i]\nprint(an, ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7348": {
    "id": 7348,
    "code": "monster_hp = 211;quantity_of_skills = 5\nskills = map(int, \"31 41 59 26 53\".split())\nskills_list = list(skills)\ntotal_damages = 0\nfor i in skills_list:\n    total_damages += i\nif monster_hp <= total_damages:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14267": {
    "id": 14267,
    "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nincrease = True\nequal = True\nstart = True\ncount = 1\nfor i, a in enumerate(A):\n    if i > 0:\n        if equal:\n            if a > A[i-1]:\n                increase = True\n                equal = False\n            elif a < A[i-1]:\n                increase = False\n                equal = False\n        else:\n            if increase:\n                if a < A[i-1]:\n                    count += 1\n                    equal = True\n            else:\n                if a > A[i-1]:\n                    count += 1\n                    equal = True\n                    start = True\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "10073": {
    "id": 10073,
    "code": "n = 6\ns = [')', ')', ')', '(', ')', ')']\nstack = []\nfor i in range(n):\n    if s[i] == \"(\":\n        stack.append(\"(\")\n    elif len(stack) == 0 or stack[-1] == \")\":\n        stack.append(\")\")\n    else:\n        stack.pop()\nstack = sorted(stack, reverse=True)\nidx = 0\nwhile idx < len(stack):\n    if stack[idx] == \"(\":\n        break\n    else:\n        print(\"(\", end=\"\")\n    idx+=1\nfor ch in s:\n    print(ch, end=\"\")\nfor i in range(idx, len(stack)):\n    print(\")\", end=\"\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!"
    ]
  },
  "734": {
    "id": 734,
    "code": "K = 2\nextra = 7 % K\nseen = set()\nans = 1\nwhile extra not in seen:\n    if extra == 0:\n        print(ans)\n        exit()\n    seen.add(extra)\n    extra = (extra*10 + 7) % K\n    ans += 1\nprint(-1)    ",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "2868": {
    "id": 2868,
    "code": "s = \"1111111111\"\nans = 999\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    ans = min(ans, abs(num-753))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "8341": {
    "id": 8341,
    "code": "n = 4\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(A[0][:i + 1]) + sum(A[1][i:]))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "16823": {
    "id": 16823,
    "code": "ab = \"D D\"\nprint(eval('\"H\" if {} ab[2] == \"H\" else \"D\"'.format(\"not\" if ab[0] == \"D\" else \"\")))",
    "coverage": [">", ">"]
  },
  "13701": {
    "id": 13701,
    "code": "a = 10;b = 0;c = 15;d = 0;K = 30\nprint(max(0,(60*c+d - 60*a-b)-K))",
    "coverage": [">", ">"]
  },
  "4207": {
    "id": 4207,
    "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nr = (H2*60+M2)-(H1*60+M1)-K\nprint(r)",
    "coverage": [">", ">", ">"]
  },
  "12722": {
    "id": 12722,
    "code": "X = 5\nif (X==7)|(X==5)|(X==3):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "15061": {
    "id": 15061,
    "code": "n = 3;p = 0\na = [1, 1, 1]\na_new=[]\nfor i in range(n):\n    a_new.append(a[i]%2)\neven=a_new.count(0)\nodd=a_new.count(1)\nif odd==0 and p==0:\n    print(2**n)\nelif odd==0 and p==1:\n    print(0)\nelse:\n    print(2**(n-1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "14009": {
    "id": 14009,
    "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt, t = 0, 0\nfor i in range(1,n):\n    if a[i] == a[i - 1] and t == 0:\n        continue\n    elif a[i] >= a[i - 1] and t >= 0:\n        t = 1\n    elif a[i] <= a[i - 1] and t <= 0:\n        t = -1\n    else:\n        cnt += 1\n        t = 0\nelse:\n    cnt += 1\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "3381": {
    "id": 3381,
    "code": "a = 20;b = 30\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "8517": {
    "id": 8517,
    "code": "N = 1\nU = [2]\nD = [3]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "5921": {
    "id": 5921,
    "code": "N = 2\na = 0\nb = 0\nif N % 2 == 0:\n    a = N // 2\n    print(a)\nelse:\n    b = N // 2 + 1\n    print(b)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!"]
  },
  "3597": {
    "id": 3597,
    "code": "A = 20;B = 15\nprint(A-min(A,B*2))",
    "coverage": [">", ">"]
  },
  "12438": {
    "id": 12438,
    "code": "S = \"level\"\nS2 = S[:(len(S)-1)//2]\nS3 = S[(len(S)+3)//2-1:]\nprint(\"Yes\" if S == S[::-1] and S2 == S2[::-1] and S3 == S3[::-1] else \"No\")",
    "coverage": [">", ">", ">", ">"]
  },
  "6596": {
    "id": 6596,
    "code": "import bisect\nN = 6\na = [3, 14, 159, 2, 6, 53]\nb = [58, 9, 79, 323, 84, 6]\nc = [2643, 383, 2, 79, 50, 288]\nsorted_a = sorted(a)\nsorted_c = sorted(c)\nans = 0\nfor each_b in b:\n    ai = bisect.bisect_left(sorted_a, each_b)\n    ci = bisect.bisect_right(sorted_c, each_b)\n    ans += ai * (len(c)-ci)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9994": {
    "id": 9994,
    "code": "n = 3\ns = \"())\"\nss = s\nfor i in range(1+n//2):\n    ss = ss.replace(\"()\",\"\")\nsta = ss.count(\"(\")\nend = ss.count(\")\")\nprint(\"(\"*end + s + \")\"*sta)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3388": {
    "id": 3388,
    "code": "a = 12;b = 4\nx=a-(b+b)\nprint(x if x>=0 else 0)",
    "coverage": [">", ">", ">"]
  },
  "7083": {
    "id": 7083,
    "code": "h = 10;n = 3\nA = [4, 5, 6]\nflag = False\nfor a in A:\n  h -= a\n  if h<=0:\n    flag = True\n    break\nprint(\"Yes\" if flag else \"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11471": {
    "id": 11471,
    "code": "s = \"SUN\"\nc=0\nw=[\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n  if(s==w[i]):\n    break\n  else:\n    c+=1\nprint(7-i)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "5078": {
    "id": 5078,
    "code": "S = \"smiles\"\nprint('{}{}{}'.format(S[0], len(S)-2, S[-1]))",
    "coverage": [">", ">"]
  },
  "12198": {
    "id": 12198,
    "code": "_, d = \"12 1\".split()\nprint('1' if d == '1' else '0')",
    "coverage": [">", ">"]
  },
  "5557": {
    "id": 5557,
    "code": "N = 5\nprint(int((N/2))+(N%2))",
    "coverage": [">", ">"]
  },
  "853": {
    "id": 853,
    "code": "k = 101\na=0\ncnt=-1\nfor i in range(1,k+1):\n  a=(10*a+7)%k\n  if a==0:\n    cnt=i\n    break\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9608": {
    "id": 9608,
    "code": "s = \"2017/01/07\"\ns_right = s[4:]\nprint('2018' + s_right)",
    "coverage": [">", ">", ">"]
  },
  "4578": {
    "id": 4578,
    "code": "arg = \"xyz\"\nprint(arg[0]+str(len(arg)-2)+arg[-1])",
    "coverage": [">", ">"]
  },
  "17943": {
    "id": 17943,
    "code": "s = \"1905\"\na = 1<= int(s[:2]) <=12\nb = 1<= int(s[2:]) <=12\nif a and b:\n    print(\"AMBIGUOUS\")\nelif a:\n    print('MMYY')\nelif b:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]
  },
  "8987": {
    "id": 8987,
    "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nm=min(a,b,c,d,e)\nM=max(a,b,c,d,e)\nif M-m<=k:\n  print(\"Yay!\")\nelse:\n  print(\":(\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "9833": {
    "id": 9833,
    "code": "t=s=\"))))((((\"\nt = \"))))((((\";s = \"))))((((\"\nprint(\"(\"*s.count(\")\")+t+\")\"*s.count(\"(\"))",
    "coverage": [">", ">", ">"]
  },
  "2942": {
    "id": 2942,
    "code": "s = \"1111111111\"\nans = float(\"inf\")\nfor i in range(len(s)-2):\n    num = int(s[i:i+3])\n    if abs(753-num) < ans:\n        ans = abs(753-num)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "3601": {
    "id": 3601,
    "code": "A = 20;B = 30\nval = A-B*2\nprint(max(0,val))",
    "coverage": [">", ">", ">"]
  },
  "4967": {
    "id": 4967,
    "code": "s = \"smiles\"\ns_length = len(s)\ns_first = s[0]\ns_last = s[-1]\nanswer = s_first + str(len(s)-2) + s_last\nprint(answer)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "8909": {
    "id": 8909,
    "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3586": {
    "id": 3586,
    "code": "a = 12;b = 4\nans = a-b*2\nif ans<=0:\n    print(0);exit()\nelse:\n    print(ans)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "10337": {
    "id": 10337,
    "code": "from math import gcd\na = 1;b = 1;k = 1\ng = gcd(a, b)\nfor i in range(g, 0, -1):\n    if g % i == 0:\n        k -= 1\n        if k == 0:\n            print(i)\n            break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10563": {
    "id": 10563,
    "code": "import sys\nA = 1;B = 1;K = 1\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( 1 <= K ): sys.exit()\nif A < B: \n    A, B = B, A\nwhile A%B != 0:\n    A,B = B,A%B\ncount = 0\nfor I in range(B,0,-1):\n    if B % I == 0:\n        count += 1\n    if count == K:\n        print(I)\n        break",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11904": {
    "id": 11904,
    "code": "m = 11\nn = 11\nprint(int(m!=n))",
    "coverage": [">", ">", ">"]
  },
  "1132": {
    "id": 1132,
    "code": "n = \"112\"\na = n[0] * 3\nb = str(int(n[0])+1) * 3\nprint(a if a >= n else b)",
    "coverage": [">", ">", ">", ">"]
  },
  "8039": {
    "id": 8039,
    "code": "n = 8;k = 3\naaa = [7, 3, 1, 8, 4, 6, 2, 5]\ncnt = 1\nb = n - k\nwhile b > 0:\n    b -= k - 1\n    cnt += 1\nprint(cnt)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10585": {
    "id": 10585,
    "code": "a = 1;b = 1;k = 1\nCD = []\nfor i in range(a, 0, -1):\n    if a % i == 0 and b % i == 0:\n        CD.append(i)\nprint(CD[k - 1])",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "7752": {
    "id": 7752,
    "code": "N = 3;K = 3\nA = [1, 2, 3]\nnum=0\nwhile num*K-(num-1)<N:\n    num+=1\nprint(num)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "1946": {
    "id": 1946,
    "code": "n = 10;a = 7;b = 5\nmax=min(a,b)\nif n>a+b:\n  min=0\nelse:\n  min=a+b-n\nprint(int(max),int(min))",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "9331": {
    "id": 9331,
    "code": "S = \"2017/01/31\"\nprint(\"2018\"+S[4:])",
    "coverage": [">", ">"]
  },
  "11684": {
    "id": 11684,
    "code": "s = \"SAT\"\nif s == 'SAT':\n    print(1)\nelif s == 'FRI':\n    print(2)\nelif s == 'THU':\n    print(3)\nelif s == 'WED':\n    print(4)\nelif s == 'TUE':\n    print(5)\nelif s == 'MON':\n    print(6)\nelif s == 'SUN':\n    print(7)\nelse:\n    exit()",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "5077": {
    "id": 5077,
    "code": "S = \"internationalization\"\nprint('{}{}{}'.format(S[0], len(S)-2, S[-1]))",
    "coverage": [">", ">"]
  },
  "11349": {
    "id": 11349,
    "code": "s = \"SUN\"\nif \"SUN\" in s:\n    print(\"7\")\nelif \"MON\" in s:\n    print(\"6\")\nelif \"TUE\" in s:\n    print(\"5\")\nelif \"WED\" in s:\n    print(\"4\")\nelif \"THU\" in s:\n    print(\"3\")\nelif \"FRI\" in s:\n    print(\"2\")\nelse:\n    print(\"1\")",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "11906": {
    "id": 11906,
    "code": "import sys\ninput = sys.stdin.readline\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\nif d2 == 1:\n    print(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14940": {
    "id": 14940,
    "code": "n = 3;p = 0\na = [1, 1, 1]\nfrom math import factorial\no=0;e=0\nfor i in a:\n    if i%2==0:e+=1\n    else:o+=1\nif p==0:\n    odds=0\n    for i in range(0,o+1,2):\n        odds+=factorial(o)//factorial(i)//factorial(o-i)\nelse:\n    odds=0\n    for i in range(1,o+1,2):\n        odds+=factorial(o)//factorial(i)//factorial(o-i)\nprint(odds*2**e)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "3838": {
    "id": 3838,
    "code": "X = 64146;Y = 123;Z = 456\nL = X -2*Z\nP = L // (Y+Z)\nif L - P*(Y+Z) >= Y:\n  print(P+1)\nelse:\n  print(P)",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "9560": {
    "id": 9560,
    "code": "s = \"2017/01/07\"\ns = s.replace('2017','2018')\nprint(s)",
    "coverage": [">", ">", ">"]
  },
  "10425": {
    "id": 10425,
    "code": "a = 8;b = 12;k = 2\nm=max(a,b)\ni=0\nwhile i<k:\n    if a%m==0 and b%m==0:\n        i+=1\n    m-=1\nprint(m+1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4994": {
    "id": 4994,
    "code": "n = \"smiles\"\nprint(n[0] + str(len(n)-2) + n[-1])",
    "coverage": [">", ">"]
  },
  "2809": {
    "id": 2809,
    "code": "s = \"1234567876\"\nn = len(s)\nans = 10000\nfor i in range(n-2):\n    sbstr = s[i:i+3]\n    val = abs(753 - int(sbstr))\n    if val < ans:\n        ans = val\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10104": {
    "id": 10104,
    "code": "n = 6\na = \")))())\"\ncr = 0\ncl = 0\nans = a\nfor i in range(n):\n  if a[i] == \"(\":\n    cl += 1\n  elif a[i] == \")\":\n    cr += 1\n  if cl == 0 and cr != 0:\n    ans = \"(\" + ans\n    cr -= 1\n  if cl != 0 and cr != 0:\n    if cr >= cl:\n      cl, cr = 0,cr-cl\n    else:\n      cl, cr = cl-cr,0\nif cl != 0:\n  for i in range(cl):\n    ans = ans+\")\"\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "17889": {
    "id": 17889,
    "code": "S = \"1905\"\nn1 = int(S[:2])\nn2 = int(S[2:])\nif 1 <= n1 <= 12 and 1 <= n2 <= 12:\n    print('AMBIGUOUS')\nelif 1 <= n1 <= 12 and (not 1 <= n2 <= 12):\n    print('MMYY')\nelif (not 1 <= n1 <= 12) and 1 <= n2 <= 12:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", "!", "!"]
  },
  "16075": {
    "id": 16075,
    "code": "A = 20;B = 30\nans = A - B*2\nif ans <= 0:\n    print(0)\nelse:\n    print(ans)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "19166": {
    "id": 19166,
    "code": "import math\nN = 5\nif N % 2 == 1:\n    print(0)\nelse:\n    i = 10\n    ans = 0\n    while(True):\n        a = math.floor(N // i)\n        if a < 1:\n            break\n        ans += a\n        i *= 5\n    print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "16722": {
    "id": 16722,
    "code": "A = \"H\";B = \"H\"\nif A == 'H' and B == 'H':\n  print('H')\nelif A == 'H' and B == 'D':\n  print('D')\nelif A == 'D' and B == 'H':\n  print('D')\nelse:\n  print('H')",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "4150": {
    "id": 4150,
    "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nimport math\ntime1=H1*60+M1\ntime2=H2*60+M2\na=time2-K\nif a<=0:\n    print(0)\n    exit()\nif time1<=a:\n    print(a-time1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!"]
  },
  "6339": {
    "id": 6339,
    "code": "from bisect import bisect_left\nfrom bisect import bisect_right\nN = 3\nA = [1, 1, 1]\nA.sort()\nB = [2, 2, 2]\nC = [3, 3, 3]\nC.sort()\nX = [bisect_left(A ,B[i]) for i in range(N)]\nY = [N - bisect_right(C ,B[i]) for i in range(N)]\ntotal = 0\nfor x,y in zip(X, Y):\n    total += x * y\nprint(total)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7867": {
    "id": 7867,
    "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nif (n-1)%(k-1)==0:\n     print((n-1)//(k-1))\nelse:\n    print((n-1)//(k-1)+1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "15285": {
    "id": 15285,
    "code": "x = 64146;y = 123;z = 456\nans=int(x/(y+z))\nif x-ans*(y+z)>=z:\n    print(ans)\nelse:\n    print(ans-1)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "14833": {
    "id": 14833,
    "code": "from math import factorial\nn = 1;p = 1\nA = [50]\na,b=0,0\nfor i in A:\n    if i%2==0:a +=1\n    else:b +=1\ncnt=0 if p==1 else 1\nfor i in range(p,b+1,2):\n    if i==0:continue\n    cnt +=factorial(b)//(factorial(i)*factorial(b-i))\nprint(cnt*(2**a))",
    "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]
  },
  "5009": {
    "id": 5009,
    "code": "code = \"smiles\"\nfirst_code = code[0]\nlast_code = code[len(code)-1]\nprint(first_code + str(len(code)-2) +last_code)",
    "coverage": [">", ">", ">", ">"]
  },
  "15886": {
    "id": 15886,
    "code": "x = 64146;y = 123;z = 456\nr, q = divmod(x, y + z)\nif q >= z:\n    print(r)\nelse:\n    print(r - 1)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "13252": {
    "id": 13252,
    "code": "s1 = \"abcde\";s2 = \"fghihgf\";s3 = \"edcba\"\nprint(s1,s2,s3)",
    "coverage": [">", ">"]
  },
  "17726": {
    "id": 17726,
    "code": "s = \"1700\"\na=int(s[0:2])\nb=int(s[2:4])\nif 0<a<13:\n  if 0<b<13:\n    print('AMBIGUOUS')\n  else:\n    print('MMYY')\nelse:\n  if 0<b<13:\n    print('YYMM')\n  else:\n    print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "1490": {
    "id": 1490,
    "code": "N = 112\nfor i in range(N, N + 111):\n    if str(i).count(str(i)[0]) == 3:\n        print(i)\n        break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "12097": {
    "id": 12097,
    "code": "a = [11, 16]\nb = [11, 17]\nif a[0] == b[0]:\n  print(0)\nelse:\n  print(1)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "5729": {
    "id": 5729,
    "code": "import math\nN = 2\nif N % 2 ==0:\n    print(math.floor(N/2))\nelse:\n    print(math.floor(N/2)+1)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "4170": {
    "id": 4170,
    "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nprint(c * 60 + d - a * 60 - b - e)",
    "coverage": [">", ">"]
  },
  "6204": {
    "id": 6204,
    "code": "import bisect\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nue = []\nfor i in range(n):\n    ue.append(bisect.bisect_left(a,b[i]))\nsita = []\nfor i in range(n):\n    sita.append(n - bisect.bisect_right(c,b[i]))\nans = 0\nfor i in range(n):\n    ans += ue[i]*sita[i]\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16049": {
    "id": 16049,
    "code": "X = 12;Y = 4\nif X>=2*Y:\n    print(X-2*Y)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "5474": {
    "id": 5474,
    "code": "i = 2\nimport math\nprint(math.ceil(i/2))",
    "coverage": [">", ">", ">"]
  },
  "677": {
    "id": 677,
    "code": "k = 2\na = 7%k\nif a == 0:\n    print(1)\n    exit()\nfor i in range(1,k+1):\n    a = (10*a + 7)%k\n    if a == 0:\n        print(i+1)\n        exit()\nprint(-1)",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]
  },
  "2729": {
    "id": 2729,
    "code": "n = {1, 4, 9, 7}\nprint('YNEOS'[n!={1,9,7,4}::2])",
    "coverage": [">", ">"]
  },
  "16151": {
    "id": 16151,
    "code": "n = 2\na = [100, 0]\nsorted_a = sorted(a)\na_max = sorted_a[-1]\ndif = []\nfor i,ai in enumerate(sorted_a[:n-1]):\n    dif.append((i,abs(ai-(a_max/2))))\nmin_i = sorted(dif, key=lambda x:x[1])[0][0]\ndif_min = sorted_a[min_i]\nprint(a_max, dif_min)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "636": {
    "id": 636,
    "code": "K = 101\nans = -1\ntmp = 0\nfor i in range(1, K + 1):\n    tmp = (tmp*10%K + 7) % K\n    if tmp == 0:\n        ans = i\n        break\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4044": {
    "id": 4044,
    "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nHM1=H1*60+M1\nHM2=H2*60+M2\nprint(max(HM2-HM1-K,0))",
    "coverage": [">", ">", ">", ">"]
  },
  "6804": {
    "id": 6804,
    "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\nans = 'Yes' if H<=sum(A) else 'No'\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "6450": {
    "id": 6450,
    "code": "import sys\nimport bisect\ninput = sys.stdin.readline\nnum=0\nn = 2\ntop = [1, 5]\nmid = [2, 4]\nund = [3, 6]\ntop.sort()\nmid.sort()\nund.sort()\nfor i in mid:\n    a=bisect.bisect_left(top,i)\n    c=n-bisect.bisect_right(und,i)\n    num+=a*c\nprint(num)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11911": {
    "id": 11911,
    "code": "M = 11;D = 30\nm = 12;d = 1\nif M + 1 == m:\n  print(1)\nelse:\n  print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "6358": {
    "id": 6358,
    "code": "import bisect\nn = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\nans = 0\nfor i in b:\n    ans += bisect.bisect_left(a, i) * (n - bisect.bisect(c, i))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6842": {
    "id": 6842,
    "code": "H = 20;N = 3\nlists = [4, 5, 6]\nlists.sort()\nSAM = sum(lists)\nif SAM>=H:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "5136": {
    "id": 5136,
    "code": "s = ['x', 'y', 'z']\nc = int(len(s)) - 2\nprint(s[0] + str(c) + s[-1])",
    "coverage": [">", ">", ">"]
  },
  "12753": {
    "id": 12753,
    "code": "X = 6\nif X in (3, 5, 7):\n    print('YES')\nelse:\n    print('NO')",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "11104": {
    "id": 11104,
    "code": "S = \"akasaka\"\nif len(S) % 4 == 1:\n    m = len(S) // 4\n    for i in range(m):\n        if (S[i] != S[2 * m - i - 1] or\n            S[2 * m - i - 1] != S[2 * m + 1 + i] or\n            S[2 * m + 1 + i] != S[4 * m - i]):\n            print('No')\n            exit()    \nelse:\n    m = len(S) // 4 + 1\n    for i in range(m - 1):\n        if (S[i] != S[2 * m - i - 2] or\n            S[2 * m - i - 2] != S[2 * m + i] or\n            S[2 * m + i] != S[4 * m - i - 2]):\n            print('No')\n            exit()\n    if S[m - 1] != S[3 * m - 1]:\n        print('No')\n        exit()\nprint('Yes')",
    "coverage": [
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "8557": {
    "id": 8557,
    "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\name_A = [0] * N\name_B = [0] * N\nfor i in range(N):\n  if i == 0:\n    ame_A[i] += A[i]\n    continue\n  ame_A[i] += ame_A[i-1] + A[i]\nfor i in range(N-1,-1,-1):\n  if i == N - 1:\n    ame_B[i] += B[i]\n    continue\n  ame_B[i] += ame_B[i+1] + B[i]\nans = 0\nfor j in range(N):\n  cnt = ame_A[j] + ame_B[j]\n  ans = max(ans, cnt)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "304": {
    "id": 304,
    "code": "s = \"xyz\"\nK = 4\nans=''\nfor c in s:\n    if c!='a' and ord('z')+1-ord(c)<=K:\n        ans+='a'\n        K-=ord('z')+1-ord(c)\n    else:\n        ans+=c\nif K>0:\n    ans=ans[:-1]+chr(ord(ans[-1])+K%26)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]
  },
  "14403": {
    "id": 14403,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nlist = []\nsim=0\nfor i in range(N-1):\n  if A[i]<A[i+1]:\n    list.append(1)\n  if A[i]>A[i+1]:\n    list.append(0)\n  if A[i]==A[i+1]:\n    sim+=1\ni = 0\ncount = 0\nwhile i<N-2-sim:\n  if list[i] != list[i+1]:\n    count += 1\n    i+=1\n  i+=1\nprint(count + 1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13143": {
    "id": 13143,
    "code": "n = 6\nprint(\"YES\" if any((n == 3,n == 5,n == 7)) else \"NO\")",
    "coverage": [">", ">"]
  },
  "6288": {
    "id": 6288,
    "code": "import bisect\nN = 3\nA = [1, 1, 1]\nB = [2, 2, 2]\nC = [3, 3, 3]\nA.sort()\nC.sort()\nLC = len(C)\nans = 0\nfor b in B:\n    na = bisect.bisect_left(A, b)\n    nc = LC - bisect.bisect_right(C, b)\n    ans += na * nc\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11010": {
    "id": 11010,
    "code": "import sys\ns = \"atcoder\"\ns2 = s[:(len(s) - 1) // 2]\ns3 = s[(len(s) + 3) // 2 - 1 :]\nif s == s[::-1]:\n    if s2 == s2[::-1]:\n        if s3 == s3[::-1]:\n            print(\"Yes\")\n            sys.exit()\nprint(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]
  },
  "635": {
    "id": 635,
    "code": "k = 2\nif k%2 == 0 or k%5 == 0:\n    print(-1)\nelse:\n    ans = -1\n    a = 7\n    if k == 7 or k==1:\n        print(1)\n    else:\n        for i in range(2,10**7):\n            a = (10*a + 7)%k\n            if a==0:\n                ans =i\n                break\n        print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "15705": {
    "id": 15705,
    "code": "X = 12;Y = 3;Z = 1\nout = 0\nnow = 0\nif X>=Y+Z+Z:\n    out += 1\n    now += Y+Z+Z\n    while X>=now+Y+Z:\n        now += Y+Z\n        out += 1\n    print(out)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4107": {
    "id": 4107,
    "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nT1 = 60 * H1 + M1\nT2 = 60 * H2 + M2\nprint(T2 - K - T1)",
    "coverage": [">", ">", ">", ">"]
  },
  "7050": {
    "id": 7050,
    "code": "str = \"211 5\"\nstr2 = \"31 41 59 26 53\"\nnums  = str.split()\nnums2  = str2.split()\nif len(nums2) != int(nums[1]):\n    print(\"error\")\nelse:\n   totalDamege = 0\n   for num in nums2:\n       totalDamege += int(num)\n   if int(nums[0]) <= totalDamege:\n       print(\"Yes\")\n   else:\n       print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "2064": {
    "id": 2064,
    "code": "a = 10;b = 7;c = 5\nt = min(b, c)\nif b+c < a:\n    s = 0\nelse:\n    s = b + c - a\nprint(t, s)",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "16529": {
    "id": 16529,
    "code": "n = 5\na = [6, 9, 4, 2, 11]\nmax_a = max(a)\na.remove(max_a)\nda = [abs(ai - max_a/2) for ai in a]\nmed_i = da.index(min(da))\nprint(max_a, a[med_i])",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "2719": {
    "id": 2719,
    "code": "k = \"4 9 0 8\"\nif (\"1\" in k) & (\"9\" in k) & (\"7\" in k) & (\"4\" in k):\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "8482": {
    "id": 8482,
    "code": "import sys\ninput = sys.stdin.readline\nN = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5604": {
    "id": 5604,
    "code": "import math\nn = 100\nif n % 2 == 0:\n    print(int(n / 2))\nelif n % 2 == 1:\n    print(math.ceil(n / 2))",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "15739": {
    "id": 15739,
    "code": "X = 100000;Y = 1;Z = 1\nans = X//(Y+Z)\nif X%(Y+Z) >= Z:\n    print(ans)\nelse:\n    print(ans-1)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "3200": {
    "id": 3200,
    "code": "S = \"1111111111\"\nmini=1000\nfor i in range(0,len(S)-2):\n  i1=int(S[i])\n  i2=int(S[i+1])\n  i3=int(S[i+2])\n  x=i1*100+i2*10+i3\n  if abs(x-753)<mini:\n    mini=abs(x-753)\nprint(mini)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18572": {
    "id": 18572,
    "code": "import math\nA = 3\nB = 7\nN = 10\nif A> B:\n    print(math.ceil(N/A))\nelse:\n    print(math.ceil(N/B))    ",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "18247": {
    "id": 18247,
    "code": "a = 2\nb = 100\nc = 200\nif a<b:\n  a,b=b,a\nif c%a==0:\n  print(c//a)\nelse:\n  print(c//a+1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "17563": {
    "id": 17563,
    "code": "S = \"0112\"\nF = S[:2]\nL = S[2:]\nif F == \"00\" or int(F)>12:\n    if L == \"00\" or int(L) > 12:\n        ans = \"NA\"\n    else:\n        ans = \"YYMM\"\nelif int(F) <= 12:\n    if int(L) >= 1 and int(L) <=12:\n        ans = \"AMBIGUOUS\"\n    else:\n        ans = \"MMYY\"    \nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "7031": {
    "id": 7031,
    "code": "H = 10;N = 3\ni = map(int,\"4 5 6\".split())\nif sum(i) >= H :\n    print(\"Yes\")\nelse :\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "18062": {
    "id": 18062,
    "code": "S = \"0112\"\nformer = int(S[:2])\nlatter = int(S[2:])\nif((former >= 13 or former == 0) and 1 <= latter <= 12):\n    print(\"YYMM\")\nif((latter >= 13 or latter == 0) and 1 <= former <= 12):\n    print(\"MMYY\")\nif(1 <= former <= 12 and 1 <= latter <= 12):\n    print(\"AMBIGUOUS\")\nif((former >= 13 or former == 0) and (latter >= 13 or latter == 0)):\n    print(\"NA\")",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!"]
  },
  "2654": {
    "id": 2654,
    "code": "a = {1, 2, 9}\nif a=={1,9,7,4}:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "4419": {
    "id": 4419,
    "code": "text = \"xyz\"\nprint(text[0] + str(len(text)-2) + text[-1])",
    "coverage": [">", ">"]
  },
  "1775": {
    "id": 1775,
    "code": "n = 10;a = 3;b = 5\nif n>(a+b):\n    print(\"{} {}\".format(min([a,b]), 0))\nelse:\n    print(\"{} {}\".format(min([a,b]), abs(n-(a+b))))",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "11457": {
    "id": 11457,
    "code": "s = \"SUN\"\nweek = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nn = week.index(s)\nprint(7-n)",
    "coverage": [">", ">", ">", ">"]
  },
  "6908": {
    "id": 6908,
    "code": "h = 20;n = 3\na = [4, 5, 6]\nresult = sum(a)\nif h - result <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "13628": {
    "id": 13628,
    "code": "S = \"happy,newyear,enjoy\"\nprint(S[:5] + \" \" + S[6:13] + \" \" + S[14:])",
    "coverage": [">", ">"]
  },
  "14329": {
    "id": 14329,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup=0\ndown=0\ncnt=0\nfor i in range(n-1):\n    if up==1:\n        if a[i]>a[i+1]:\n            up=0\n            cnt+=1\n    elif down==1:\n        if a[i]<a[i+1]:\n            down=0\n            cnt+=1\n    else:\n        if a[i]<a[i+1]:\n            up=1\n        elif a[i]>a[i+1]:\n            down=1\nelse:\n    cnt+=1\n    print(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "1878": {
    "id": 1878,
    "code": "N = 100;A = 100;B = 100\nif A < B:\n  x = A\nelse:\n  x = B\nif A+B-N < 0:\n  y = 0\nelse:\n  y = A+B-N\nprint (x,y)",
    "coverage": [">", ">", "!", "!", ">", ">", "!", "!", ">", ">"]
  },
  "11484": {
    "id": 11484,
    "code": "s = \"SAT\"\nweek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\ntoday = week.index(s)\na = 7 - today\nprint(a)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "13792": {
    "id": 13792,
    "code": "n = 6\nL = [1, 2, 3, 2, 2, 1]\ncnt = 1\nstate = None\ni = 1\nwhile i < n:\n    if state is None:\n        if L[i] > L[i - 1]:\n            state = 'up'\n        elif L[i] < L[i - 1]:\n            state = 'down'\n        i += 1\n    else:\n        if state == 'up':\n            while L[i] >= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\n        else:\n            while L[i] <= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "4389": {
    "id": 4389,
    "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nmin1 = h1*60+m1\nmin2 = h2*60+m2\nans = min2-min1-k\nans = max(0,ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "8225": {
    "id": 8225,
    "code": "listlen = 3;rensuu = 3\nlistnum = [1, 2, 3]\ncount = 0\ncount += (listlen - 1) // (rensuu - 1)\ncount += 1 if (listlen - 1) % (rensuu - 1) > 0 else 0\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "13001": {
    "id": 13001,
    "code": "X = 6\nprint(['NO', 'YES'][[7, 5, 3].count(X)])",
    "coverage": [">", ">"]
  },
  "18832": {
    "id": 18832,
    "code": "H = 3\nW = 7\nN = 10\nq, mod = divmod(N, max(H, W))\nprint(q if mod == 0 else q + 1)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "13790": {
    "id": 13790,
    "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;K = 120\nh = h2-(h1+1)\nm = m2+60-m1\nm += 60*h\nm -= K\nprint(m)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "4884": {
    "id": 4884,
    "code": "s = \"xyz\"\nans = s[0] + str(len(s)-2) + s[-1]\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "7990": {
    "id": 7990,
    "code": "n = 3;k = 3\na = [1, 2, 3]\nprint((n-1)//(k-1)+((n-1)%(k-1)>0))",
    "coverage": [">", ">", ">"]
  },
  "18925": {
    "id": 18925,
    "code": "n = 5\nif n%2==1:\n    print(0)\nelse:\n    ans=0\n    i=10\n    while (n//i !=0):\n        ans+=(n//i)\n        i*=5\n    print(ans)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "16452": {
    "id": 16452,
    "code": "from bisect import bisect_left\nn = 2\nA = [100, 0]\nA.sort()\nam = A[-1]\namin = 0\nans = 0\nfor a in A[:-1]:\n  if min(a, am-a) > amin:\n    amin = min(a,am-a)\n    ans = a\nprint(am , ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "667": {
    "id": 667,
    "code": "K = 2\nverbose = False\npath = set()\na = 0\nstep = 0\nwhile True:\n    step += 1\n    a = (a*10 + 7) % K\n    if verbose: print (step, ':', a)\n    if a == 0:\n        print (step)\n        break\n    if a in path:\n        print ('-1')\n        break\n    path.add(a)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "17489": {
    "id": 17489,
    "code": "S = \"1700\"\nx=int(S[:2])\ny=int(S[2:])\nif 0<x<13 and 0<y<13:print(\"AMBIGUOUS\")\nelif 0<x<13:print(\"MMYY\")\nelif 0<y<13:print(\"YYMM\")\nelse:print(\"NA\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "12160": {
    "id": 12160,
    "code": "targetDay = ['11', '30']\nnextDay = ['12', '1']\nif targetDay[0] != nextDay[0]:\n\tprint(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "8040": {
    "id": 8040,
    "code": "n = 4;k = 3\nlst = [2, 3, 1, 4]\nn -= 1\nk -= 1\nprint(-(-n // k))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9593": {
    "id": 9593,
    "code": "s = \"2017/01/31\"\nss = s.replace(\"7\",\"8\",1)\nprint(ss)",
    "coverage": [">", ">", ">"]
  },
  "7735": {
    "id": 7735,
    "code": "N = 8;K = 3\nList = [7, 3, 1, 8, 4, 6, 2, 5]\nk=K-1\nn = (N-1)/k\nnn = int(n)\nif n-nn > 0:\n  nn = nn+1\nprint(nn)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6194": {
    "id": 6194,
    "code": "N = 6\nA = [3, 14, 159, 2, 6, 53]\nB = [58, 9, 79, 323, 84, 6]\nC = [2643, 383, 2, 79, 50, 288]\nA.sort()\nB.sort()\nC.sort()\nans = 0\nfrom bisect import bisect_left, bisect_right\nfor b in B:\n    ac = bisect_left(A,b)\n    cc = N - bisect_right(C,b)\n    ans += ac * cc\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "19322": {
    "id": 19322,
    "code": "N = 999999999\nif N % 2 == 0 :\n    print(N)\nelse :\n    print(2*N)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "15145": {
    "id": 15145,
    "code": "N = 3;P = 0\nA = [1, 1, 1]\nA = sorted(A,reverse = False)\ndp = [[0]*2 for _ in range(N+1)]\ndp[0] = [1,0]\nfor v in range(1,N+1):\n    if A[v-1]%2 == 0:\n        dp[v][0] = dp[v-1][0]*2\n        dp[v][1] = dp[v-1][1]*2\n    else:\n        dp[v][0] = dp[v-1][1] + dp[v-1][0]\n        dp[v][1] = dp[v-1][0] + dp[v-1][1]\nprint(dp[N][P])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "7634": {
    "id": 7634,
    "code": "H = 20;N = 3\nA = [4, 5, 6]\ns=0\nflg=True\nfor i in range(N):\n  s+=A[i]\n  if s>=H:\n    print('Yes')\n    flg=False\n    break\nif flg:\n\tprint('No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]
  },
  "16280": {
    "id": 16280,
    "code": "n = 2\na = [100, 0]\na.sort()\nai = max(a)\ndiff = ai\nold = diff\nfor x in a[:-1]:\n    tmp = abs(x-ai/2)\n    if tmp <= diff:\n        aj = x\n        diff = tmp\n    if diff == old:\n        break\n    else:\n        old = diff\nprint(ai,aj)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "2454": {
    "id": 2454,
    "code": "a = \"1\";b = \"7\";c = \"9\";d = \"4\"\ns = set()\ns.add(a)\ns.add(b)\ns.add(c)\ns.add(d)\nif s == {\"1\",\"9\",\"7\",\"4\"}:\n  print(\"YES\")\nelse:\n  print(\"NO\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "1034": {
    "id": 1034,
    "code": "n = 111\na = -(-n//111)\nif a == 10:\n    print(1111)\nelse:\n    print(a*111)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "18371": {
    "id": 18371,
    "code": "import math\nh = 3\nw = 7\nn = 10\na = n / max(h, w)\na = math.ceil(a)\nprint(a)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "2895": {
    "id": 2895,
    "code": "S = \"1111111111\"\nans = 753\nfor i in range(len(S)-2):\n  ans = min(ans, abs(753-int(S[i:i+3])))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9033": {
    "id": 9033,
    "code": "import itertools\na = 15\nb = 18\nc = 26\nd = 35\ne = 36\nk = 18\ncombs = itertools.combinations([a, b, c, d, e], 2)\ncan_connects = [abs(x[0] - x[1]) <= k for x in combs]\nif all(can_connects):\n    print('Yay!')\nelse:\n    print(':(')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "5529": {
    "id": 5529,
    "code": "x = 100\nprint(int(x/2)+ 1 if x % 2 != 0 else int(x/2))",
    "coverage": [">", ">"]
  },
  "3573": {
    "id": 3573,
    "code": "A = 20;B = 30\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)",
    "coverage": [">", ">", "!", "!", ">", ">"]
  },
  "9638": {
    "id": 9638,
    "code": "N = 3\nS = \"())\"\nL = S.count('(')\nR = S.count(')')\nif L > R:\n    S = S + (')' * (L - R))\nif R > L:\n    S = ('(' * (R - L)) + S\nd = 0\nmx = 0\nfor s in S:\n    if s == ')':\n        d += 1\n    else:\n        d -= 1\n    mx = max(mx, d)\nS = '(' * mx + S + ')' * mx\nprint(S)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12433": {
    "id": 12433,
    "code": "s = ['a', 't', 'c', 'o', 'd', 'e', 'r']\nl = len(s)\nt = s[::-1]\nif s == t and (s[:(l-1)//2] == t[(l+1)//2:]) and (s[(l+1)//2:] == t[:(l-1)//2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "12717": {
    "id": 12717,
    "code": "x = 6\nprint('YES' if x==3 or x==5 or x==7 else 'NO')",
    "coverage": [">", ">"]
  },
  "15109": {
    "id": 15109,
    "code": "n = 1;p = 1\nA = [50]\nf = 0\nfor a in A:\n    if a%2:\n        f = 1\n        break\nif f:\n    ans = 2**(n-1)\nelse:\n    if p:\n        ans = 0\n    else:\n        ans = 2**n\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "11586": {
    "id": 11586,
    "code": "S = \"SAT\"\nyoubi =['MON','TUE','WED','THU','FRI','SAT','SUN']\nnissu = 6-youbi.index(S)\nif nissu == 0:\n    nissu = 7\nprint(nissu)",
    "coverage": [">", ">", ">", ">", "!", ">"]
  },
  "14763": {
    "id": 14763,
    "code": "n = 1;p = 1\nA = [50]\ncnt = 0\nfor a in A:\n    if a%2==0: cnt += 1\nif n == cnt:\n    if p == 0: ans = 2**n\n    else: ans = 0\nelse: ans = 2**(n-1)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "432": {
    "id": 432,
    "code": "s = \"a\"\nk = 25\nv = list(s)\nn = len(s)\na = [0 for i in range(n)]\nfor i in range(n):\n  a[i] = (123 - ord(s[i]))%26\n  if k == 0:\n    break\n  if k >= a[i]:\n    v[i] = 'a'\n    k -= a[i]\nif k > 0:\n  k %= 26\n  v[n-1] = chr(ord(v[n-1])+k)\nprint (''.join(v))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "767": {
    "id": 767,
    "code": "k = 2\na = 7%k\nflag = False\nfor i in range(k):\n    if a == 0:\n        flag = True\n        ans = i+1\n        break\n    a = (10*a+7)%k\nif flag:\n    print(ans)\nelse:\n    print(-1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "12228": {
    "id": 12228,
    "code": "S = \"akasaka\"\nN = len(S)//2\nprint('Yes' if S[:N] == S[-N:] else 'No')",
    "coverage": [">", ">", ">"]
  },
  "9382": {
    "id": 9382,
    "code": "s = \"2017/01/07\"\na=s[4:]\nprint(\"2018\"+a)",
    "coverage": [">", ">", ">"]
  },
  "6840": {
    "id": 6840,
    "code": "H = 211;N = 5\nA = [26, 31, 41, 53, 59]\nprint(\"Yes\" if(sum(A) >= H) else \"No\")",
    "coverage": [">", ">", ">"]
  },
  "6049": {
    "id": 6049,
    "code": "n = 5\nprint(int(n/2)+n%2)",
    "coverage": [">", ">"]
  },
  "1086": {
    "id": 1086,
    "code": "a = 112\nn=[i*111 for i in range(1,10)]\nif a in n:\n    print(a)\n    exit()\nn.append(a)\nn=sorted(n)\nprint(n[n.index(a)+1])",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "4891": {
    "id": 4891,
    "code": "S = \"internationalization\"\nS = list(S)\nn = len(S)\nprint(S[0] + str(n-2) + S[n-1])",
    "coverage": [">", ">", ">", ">"]
  },
  "5487": {
    "id": 5487,
    "code": "n = 100\nif n%2==0:\n    x=int(n/2)\nelse:\n    x=int(n/2)+1\nprint(x)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "11685": {
    "id": 11685,
    "code": "s = \"SUN\"\nif s == 'SAT':\n    print(1)\nelif s == 'FRI':\n    print(2)\nelif s == 'THU':\n    print(3)\nelif s == 'WED':\n    print(4)\nelif s == 'TUE':\n    print(5)\nelif s == 'MON':\n    print(6)\nelif s == 'SUN':\n    print(7)\nelse:\n    exit()",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "8483": {
    "id": 8483,
    "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5333": {
    "id": 5333,
    "code": "n = 2\nans = n // 2\nif n % 2 != 0: ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "5476": {
    "id": 5476,
    "code": "N = 5\na = (N + 2 - 1) // 2\nprint(a)",
    "coverage": [">", ">", ">"]
  },
  "1191": {
    "id": 1191,
    "code": "n = 111\nif n%111==0: print(n)\nelse: print(n+111-(n%111))",
    "coverage": [">", ">", "!"]
  },
  "6623": {
    "id": 6623,
    "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\nb.sort()\nc.sort()\ni,j,k=0,0,0\nm1=[]\nwhile k<n and i<n:\n  if b[i]>a[k]:\n    j+=1\n    k+=1\n  else:\n    m1.append(j)\n    i+=1\nfor t in range(len(m1),len(b)):\n  m1.append(j)\ni,j,k=0,0,0\nm2=[]\nwhile k<n and i<n:\n  if c[i]>b[k]:\n    j+=m1[k]\n    k+=1\n  else:\n    m2.append(j)\n    i+=1\nfor t in range(len(m2),len(c)):\n  m2.append(j)\nprint(sum(m2))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "1765": {
    "id": 1765,
    "code": "if __name__ == '__main__':\n    N = 100;A = 100;B = 100\n    print(min(A, B), max(A+B - N, 0))",
    "coverage": [">", ">", ">"]
  },
  "5190": {
    "id": 5190,
    "code": "a = \"xyz\"\nf=a[0]\nl=a[-1]\nle=len(a)-2\nprint(f+str(le)+l)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10956": {
    "id": 10956,
    "code": "s = \"akasaka\"\nn=len(s)\nn1=(n-1)//2\nn2=(n+3)//2\ns1=s[:n1]\ns2=s[n2-1:]\nfor i in range(1,n1+1):\n    if s[i-1]!=s[-i]:\n        print('No')\n        exit()\nfor i in range(1,n1//2+1):\n    if s1[i-1]!=s1[-i]:\n        print('No')\n        exit()\nprint('Yes')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "3624": {
    "id": 3624,
    "code": "a = 20;b = 15\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "16945": {
    "id": 16945,
    "code": "a = \"D\";b = \"H\"\nif a == b:\n    ans = \"H\"\nelse:\n    ans = \"D\"\nprint(ans)",
    "coverage": [">", ">", "!", "!", ">", ">"]
  },
  "11715": {
    "id": 11715,
    "code": "s = \"SUN\"\ndl = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nfor i in range(7):\n  if s == dl[i]:\n    print(7-i)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "6894": {
    "id": 6894,
    "code": "H = 211;N = 5\nA = [59, 53, 41, 31, 26]\nprint(\"Yes\") if H - sum(A) <= 0 else print(\"No\")",
    "coverage": [">", ">", ">"]
  },
  "5888": {
    "id": 5888,
    "code": "a = 2\nif a/2==int(a/2):\n    print(int(a/2))\nelse:\n    print(int(a/2)+1)",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17294": {
    "id": 17294,
    "code": "a = \"D\";b = \"D\"\nret = \"\"\nif a == \"H\":\n  ret = b\nelse:\n  if b == \"H\":\n    ret = \"D\"\n  else:\n    ret = \"H\"\nprint(ret)",
    "coverage": [">", ">", ">", "!", "!", ">", "!", "!", ">", ">"]
  },
  "5950": {
    "id": 5950,
    "code": "n = 5\nif (n%2 == 1):\n  n = n + 1\nprint(int(n/2))",
    "coverage": [">", ">", ">", ">"]
  },
  "6743": {
    "id": 6743,
    "code": "a = 210;b = 5\nx = [31, 41, 59, 26, 53]\nprint('Yes') if a <= sum(x) else print('No')",
    "coverage": [">", ">", ">"]
  },
  "16466": {
    "id": 16466,
    "code": "n = 5\na = [2, 4, 6, 9, 11]\nai, aj = a[-1], a[-2]\nfor i in a[:-1]:\n    if abs(ai - 2 * aj) > abs(ai - 2 * i):\n        aj = i\nprint(ai, aj)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "9723": {
    "id": 9723,
    "code": "N = 8\nS = \"))))((((\"\nSL = [0]\nfor i in range(N):\n    if S[i] == '(':\n        SL.append(SL[i] + 1)\n    else:\n        SL.append(SL[i] - 1)\nmi = min(SL)\nla = SL[-1]\nif mi < 0:\n    S = '(' * ((-1)*mi) + S\n    la -= mi\nif la >= 0:\n    S += ')' * la\nelse:\n    p = (-1)*la\n    S = '(' * p + S\nprint(S)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "13819": {
    "id": 13819,
    "code": "n = 6\nal = [1, 2, 3, 2, 2, 1]\nif n == 1:\n    print(1)\n    exit()\nif al[1] > al[0]:\n    now = 'U'\nelif al[1] < al[0]:\n    now = 'D'\nelse:\n    now = 'E'\ncnt = 1\nfor i in range(2, n):\n    if now == 'U':\n        if al[i] > al[i-1] or al[i] == 'E':\n            now = 'U'\n        elif al[i] < al[i-1]:\n            cnt += 1\n            i += 1\n            now = 'E'\n    elif now == 'D':\n        if al[i] < al[i-1] or al[i] == 'E':\n            now = 'D'\n        elif al[i] > al[i-1]:\n            cnt += 1\n            now = 'E'\n    elif now == 'E':\n        if al[i] == al[i - 1]:\n            now = 'E'\n        elif al[i] > al[i - 1]:\n            now = 'U'\n        elif al[i] < al[i - 1]:\n            now = 'D'\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "11592": {
    "id": 11592,
    "code": "s = \"SAT\"\nif s=='SUN':\n    print('7')\nelif s=='MON':\n    print('6')\nelif s=='TUE':\n    print('5')\nelif s=='WED':\n    print('4')\nelif s=='THU':\n    print('3')\nelif s=='FRI':\n    print('2')\nelse:\n    print('1')",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "3950": {
    "id": 3950,
    "code": "x = 13;y = 3;z = 1\nX = x -z\nans = X // (y+z)\nprint(ans)",
    "coverage": [">", ">", ">", ">"]
  },
  "14019": {
    "id": 14019,
    "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nd = 0\nfor i in range(1,n):\n    diff = A[i] - A[i-1]\n    if not d:\n        d = diff\n    elif d*diff < 0:\n        d = 0\n        ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5386": {
    "id": 5386,
    "code": "import math\nx = \"5\"\npage = (int(x)+1) // 2\nprint(page)",
    "coverage": [">", ">", ">", ">"]
  },
  "11788": {
    "id": 11788,
    "code": "x = [11, 16]\ny = [11, 17]\nif x[0] != y[0]:\n    print(1)\nelse:\n    print(0)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "686": {
    "id": 686,
    "code": "k = 101\nif k % 2 == 0 or k % 5 == 0:\n    print(-1)\nelse:\n    exc = 0\n    for i in range(1, 10 ** 8):\n        exc = exc * 10 + 7\n        exc = exc % k\n        if exc % k == 0:\n            ans = i\n            break\n    print(ans)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "13312": {
    "id": 13312,
    "code": "s = \"abcde,fghihgf,edcba\"\nA = s[:5]\nB = s[6:13]\nC = s[14:]\nstr = A + \" \" + B + \" \" + C\nprint(str)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "18133": {
    "id": 18133,
    "code": "S = \"1700\"\nANS = {0:'NA', 1:'YYMM', 2:'MMYY', 3:'AMBIGUOUS'}\nans = 0\nif '00' <= S[:2] <= '99' and '01' <= S[2:] <= '12':\n    ans += 1\nif '00' <= S[2:] <= '99' and '01' <= S[:2] <= '12':\n    ans += 2\nprint(ANS[ans])",
    "coverage": [">", ">", ">", ">", "!", ">", "!", ">"]
  },
  "16904": {
    "id": 16904,
    "code": "lst = ['D', 'D']\na = lst[0]\nb = lst[1]\nif a == 'H': \n   if b == 'H': \n      print('H')\n   elif b == 'D': \n      print('D')\nelif a == 'D': \n   if b == 'H': \n      print('D')\n   elif b == 'D': \n      print('H')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "2366": {
    "id": 2366,
    "code": "a = 1;b = 1\nc = a * (a-1)/2\nd = b*(b-1)/2\nres = int(c+d)\nprint(res)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "7370": {
    "id": 7370,
    "code": "h = 20;n = 3\na = [4, 5, 6]\na.sort(reverse=True)\ntemp = 0\nans = \"No\"\nfor i in a:\n    temp += i \n    if temp>=h:\n        ans = \"Yes\"\n        break\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "16712": {
    "id": 16712,
    "code": "input1 = ['D', 'D']\na = input1[0]\nb = input1[1]\nif a == \"H\":\n  if b == \"H\":\n    print(\"H\")\n  else:\n    print(\"D\")\nelse:\n  if b == \"H\":\n    print(\"D\")\n  else:\n    print(\"H\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "1810": {
    "id": 1810,
    "code": "a = 100;b = 100;c = 100\nans_max = min(b,c)\nans_min = min(b,c)-(a-max(b,c))\nif ans_min < 0:\n  ans_min = 0\nprint(ans_max,ans_min)",
    "coverage": [">", ">", ">", ">", "!", ">"]
  },
  "16580": {
    "id": 16580,
    "code": "a = \"D\";b = \"D\"\nprint(\"H\" if (a == b) else \"D\")",
    "coverage": [">", ">"]
  },
  "122": {
    "id": 122,
    "code": "s = [97]\nk = 25\nfor i in range(len(s)-1):\n  if s[i] == ord(\"a\"): continue\n  t = ord(\"z\")+1-s[i]\n  if k >= t:\n    s[i] = 97\n    k -= t\nif k > 0:\n  k %= 26\n  s[-1] += k\n  if s[-1] > ord(\"z\"):\n    s[-1] -= 26\nprint(\"\".join(list(map(chr, s))))",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "6619": {
    "id": 6619,
    "code": "N = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nA.sort()\nB.sort()\nC.sort()\nans=0\nfrom bisect import bisect_left,bisect_right\nfor i in B:\n   ans+=(bisect_left(A,i))*(N-bisect_right(C,i))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "4645": {
    "id": 4645,
    "code": "S = \"internationalization\"\ns_between_len = len(S) - 2\na = S[:1] + str(s_between_len) + S[-1]\nprint(a)",
    "coverage": [">", ">", ">", ">"]
  },
  "17153": {
    "id": 17153,
    "code": "a = \"D\";b = \"H\"\nprint(\"H\") if a==b else print(\"D\")",
    "coverage": [">", ">"]
  },
  "921": {
    "id": 921,
    "code": "import sys\nK = 101\nif K%2==0 or K%5==0:\n    print(-1)\n    sys.exit()\nmod=7%K\nif mod==0:\n    print(1)\n    sys.exit()\ni=1\nwhile True:\n    mod=(10*mod+7)%K\n    i+=1\n    mod=mod%K\n    if mod==0:\n        print(i)\n        break",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2566": {
    "id": 2566,
    "code": "import sys\nN1 = \"1\";N2 = \"7\";N3 = \"9\";N4 = \"4\"\ntmp = N1 + N2 + N3 + N4\nfor i in '1974':\n    if tmp.count(i) != 1:\n        print('NO')\n        sys.exit()\nprint('YES')",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "19264": {
    "id": 19264,
    "code": "n = 12\ncnt = 0\nx = len(str(n))\nif n % 2 == 1:\n  print(0)\nelse:\n  for i in range(1,26):\n    cnt += n//((5**i)* 2)\n  print(cnt)",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "4103": {
    "id": 4103,
    "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nstart = 60 * H1 + M1\nend = 60 * H2 + M2\nprint((end - K) - start)",
    "coverage": [">", ">", ">", ">"]
  },
  "10758": {
    "id": 10758,
    "code": "s = \"akasaka\"\nn=len(s)\na=s[0:(n-1)//2]\nb=s[(n+3)//2-1:n]\nc=a[::-1]\nd=b[::-1]\nsr=s[::-1]\nfor i in range(n):\n    if s[i]==sr[i]:\n        pass\n    else:\n        print(\"No\")\n        exit()\nfor i in range(len(a)):\n    if a[i]==c[i]:\n        pass\n    else:\n        print(\"No\")\n        exit()\nfor i in range(len(b)):\n    if b[i]==d[i]:\n        pass\n    else:\n        print(\"No\")\n        exit()\nprint(\"Yes\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "2384": {
    "id": 2384,
    "code": "n = 2;m = 1\ntot = n * (n - 1) // 2 + m * (m - 1) // 2\nprint(tot)",
    "coverage": [">", ">", ">"]
  },
  "1398": {
    "id": 1398,
    "code": "n = 112\nif int(str(n)[0]*3) >= n:\n    print(str(n)[0]*3)\nelse:\n    print((int(str(n)[0]) + 1)*111)",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "6614": {
    "id": 6614,
    "code": "from bisect import bisect_left, bisect_right\nN = 2\nA = [1, 5]\nB = [2, 4]\nC = [3, 6]\nans = 0\nfor b in B:\n    a_upperbound = bisect_left(A, b)\n    c_lowerbound = bisect_right(C, b)\n    ans += a_upperbound * (N - c_lowerbound)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16396": {
    "id": 16396,
    "code": "import bisect\nn = 5\na = [6, 9, 4, 2, 11]\na.sort()\nm = a[-1] / 2\ni = bisect.bisect_left(a[:-1], m)\nif i == n-1:\n    i -= 1\nelif i > 0 and abs(a[i-1]-m) < abs(a[i]-m):\n    i -= 1\nprint(a[-1], a[i])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]
  },
  "6080": {
    "id": 6080,
    "code": "x = 2\ny = int(x / 2)\nz = x % 2\nif z == 0:\n    print(y)\nelse:\n    print(y + 1)",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "13251": {
    "id": 13251,
    "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1,s2,s3)",
    "coverage": [">", ">"]
  },
  "17008": {
    "id": 17008,
    "code": "a = \"D\";b = \"H\"\nprint(['D','H'][a==b])",
    "coverage": [">", ">"]
  },
  "10584": {
    "id": 10584,
    "code": "a = 8;b = 12;k = 2\nCD = []\nfor i in range(a, 0, -1):\n    if a % i == 0 and b % i == 0:\n        CD.append(i)\nprint(CD[k - 1])",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "6929": {
    "id": 6929,
    "code": "h = 210;n = 5\na=map(int,\"31 41 59 26 53\".split())\ns=sum(a)\nif s>=h:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "4682": {
    "id": 4682,
    "code": "S = ['s', 'm', 'i', 'l', 'e', 's']\nZ = len(S) - 2\nZ = str(Z)\nprint(S[0] + Z + S[-1])",
    "coverage": [">", ">", ">", ">"]
  },
  "976": {
    "id": 976,
    "code": "n = \"750\"\nif int(n) <= int(n[0]*3):\n    print(int(n[0]*3))\nelse:\n    print(int(str(int(n[0])+1)*3))",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "17194": {
    "id": 17194,
    "code": "a = \"D\";b = \"H\"\nif a==\"H\":\n  print(b)\n  exit()\nelse:\n  if b==\"H\":\n    print(\"D\")\n  else:\n    print(\"H\")",
    "coverage": [">", ">", "!", "!", "!", ">", ">", "!", "!"]
  },
  "6698": {
    "id": 6698,
    "code": "h = 211;a = 5\narr = [31, 41, 59, 26, 53]\nfor i in arr:\n    h-=i\nprint(\"Yes\" if h<=0 else \"No\")",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "7955": {
    "id": 7955,
    "code": "n = 4;k = 3\na = [2, 3, 1, 4]\nn-=k\nk-=1\ncount=1\nif n<=0:\n  pass\nelse:\n  while n>0:\n    n-=k\n    count+=1\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "3024": {
    "id": 3024,
    "code": "S = \"1234567876\"\nL = len(S)\nres = float(\"inf\")\nfor i in range(L-2):\n    res = min(abs(int(S[i:i+3]) - 753), res)\nprint(res)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "318": {
    "id": 318,
    "code": "from string import ascii_lowercase\ns = \"xyz\"\nk = 4\nd = {c: (26 - i) % 26 for i, c in enumerate(ascii_lowercase)}\nret = ''\nfor c in s[:-1]:\n    if d[c] <= k:\n        k -= d[c]\n        ret += 'a'\n    else:\n        ret += c\nk %= 26\nidx = (ascii_lowercase.index(s[-1]) + k) % 26\nc = ascii_lowercase[idx]\nret += c\nprint(ret)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2273": {
    "id": 2273,
    "code": "N = 10;A = 7;B = 5\nM = min(A,B)\nm = A + B - N\nif m < 0:\n    m = 0\nprint(M,m)",
    "coverage": [">", ">", ">", ">", "!", ">"]
  },
  "5870": {
    "id": 5870,
    "code": "from sys import stdin\nN = \"2\"\nN = int(N)\nprint(N//2 + N%2)",
    "coverage": [">", ">", ">", ">"]
  },
  "2059": {
    "id": 2059,
    "code": "n = 100;a = 100;b = 100\nl = []\nl.append(min(a,b))\nif n >= a + b:\n    l.append(0)\nelse:\n    l.append(a + b - n)\nprint(l[0],l[1])",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "3486": {
    "id": 3486,
    "code": "A = 20;B = 30\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)",
    "coverage": [">", ">", ">"]
  },
  "18797": {
    "id": 18797,
    "code": "H = 14\nW = 12\nN = 112\nn = max(H, W)\nans = 1\nwhile True:\n    if n >= N:\n        break\n    n += max(H, W)\n    ans += 1\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7341": {
    "id": 7341,
    "code": "n = 10;m = 3\nli = [4, 5, 6]\nif n>sum(li):\n    print(\"No\")\nelse:\n    print(\"Yes\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "9285": {
    "id": 9285,
    "code": "S = \"2017/01/31\"\nans = ''\nfor i in range(len(S)):\n    if i == 3:\n        ans += '8'\n    else:\n        ans += S[i]\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]
  },
  "63": {
    "id": 63,
    "code": "S = ['x', 'y', 'z']\nK = 4\nfor i in range(len(S)):\n    if S[i] == 'a':\n        continue\n    d = ord('z') - ord(S[i]) + 1\n    if K >= d:\n        S[i] = 'a'\n        K -= d\nif K > 0:\n    j = ord(S[-1]) + K % 26\n    S[-1] = chr(j)\nprint(''.join(S))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "15892": {
    "id": 15892,
    "code": "a = 64145;b = 123;c = 456\nn=a//(b+c)\nm=a-n*(b+c)\nif m//c==1:\n    print(n)\nelse:\n    print(n-1)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "4025": {
    "id": 4025,
    "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nx = abs(a - c) * 60 - b + d - e\nif x < 0:\n    print(0)\nelse:\n    print(x)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "15967": {
    "id": 15967,
    "code": "a = 20;b = 30\nif a >= (b * 2):\n    print(a - (b * 2))\nelif a < (b * 2):\n    print(0)",
    "coverage": [">", ">", "!", ">", ">"]
  },
  "15266": {
    "id": 15266,
    "code": "X = 64146;Y = 123;Z = 456\nans = X - Z\nYZ = Y + Z\nprint(ans // YZ)",
    "coverage": [">", ">", ">", ">"]
  },
  "11641": {
    "id": 11641,
    "code": "s = \"SUN\"\nweek = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nidx = week.index(s)\nprint(7-idx)",
    "coverage": [">", ">", ">", ">"]
  },
  "15873": {
    "id": 15873,
    "code": "x = 64145;y = 123;z = 456\ntmp=x//(y+z)\nif tmp*(y+z)+z>x:\n    tmp-=1\nprint(tmp)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "6028": {
    "id": 6028,
    "code": "n = 5\ndiv = -(-n // 2)\nprint(div)",
    "coverage": [">", ">", ">"]
  },
  "14432": {
    "id": 14432,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncnt = 1\ntop = True\nfor i in range(1,N):\n    if A[i] == A[i-1]:\n        continue\n    if top == True:\n        inc = (A[i]>A[i-1])\n        top = False\n        continue\n    flag = (A[i]>A[i-1])\n    if inc != flag:\n        cnt += 1\n        top = True\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3231": {
    "id": 3231,
    "code": "icase=0\nif icase==0:\n    a = 12;b = 4\n    print(max(a-2*b,0))",
    "coverage": [">", ">", ">", ">"]
  },
  "2249": {
    "id": 2249,
    "code": "N = 10;A = 7;B = 5\nprint(\"%d %d\" % (min(A, B), max((A+B)-N, 0)))",
    "coverage": [">", ">"]
  },
  "18735": {
    "id": 18735,
    "code": "h = 2\nw = 100\nn = 200\nm = max(w,h)\nif n > n //m * m:\n    ans = n // m + 1\nelse:\n    ans = n // m\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "17348": {
    "id": 17348,
    "code": "a = \"D\";b = \"D\"\nif (a=='H' and b=='H'):\n    print('H')\nelif (a=='H' and b=='D'):\n    print('D')\nelif (a=='D' and b=='H'):\n    print('D')\nelse:\n    print('H')",
    "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "8979": {
    "id": 8979,
    "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nx=max(a,b,c,d,e)\ny=min(a,b,c,d,e)\nif x-y>k:\n    print(':(')\nelse:\n    print('Yay!')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "2173": {
    "id": 2173,
    "code": "n = 10;a = 3;b = 5\nprint(min(a, b),0 if (a + b) <= n else abs(b - (n - a)))",
    "coverage": [">", ">"]
  },
  "11892": {
    "id": 11892,
    "code": "a = []\nb = []\na = ['11', '16']\nb = ['11', '17']\nif a[0] == b[0]:\n  print(\"0\")\nelse:\n  print(\"1\")",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "13324": {
    "id": 13324,
    "code": "f = \"abcde\";s = \"fghihgf\";ff = \"edcba\"\nprint(f, s, ff)",
    "coverage": [">", ">"]
  },
  "5726": {
    "id": 5726,
    "code": "N = 2\nif N%2 == 0:\n    n = N/2\nelse:\n    n = (N+1)/2\nprint(round(n))",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "18752": {
    "id": 18752,
    "code": "import math\nH = 14\nW = 12\nN = 112\nBig = W if W > H else H\nprint(math.ceil(N / Big))",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "608": {
    "id": 608,
    "code": "s = \"codefestival\"\nk = 100\nn = len(s)\nans = []\nfor i in range(n):\n    t = (ord('z') - ord(s[i]) + 1) % 26\n    if k - t >= 0:\n        ans.append('a')\n        k -= t\n    else:\n        ans.append(s[i])\nif k > 0:\n    k %= 26\n    ans[-1] = chr(ord(ans[-1]) + k)\nprint(''.join(ans))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16559": {
    "id": 16559,
    "code": "a = \"D\";b = \"D\"\nif a=='H': print(b)\nelif b=='H': print(a)\nelse:print('H')",
    "coverage": [">", ">", ">", ">"]
  },
  "14759": {
    "id": 14759,
    "code": "n = 2;m = 0\nn -= 1\ndat = [1, 3]\niseven = True\nfor i in range(len(dat)):\n    if dat[i] %2 == 1:\n        iseven = False\nif iseven:\n    if m == 0:\n        print(2**(n+1))\n    else:\n        print(0)\nelse:\n    if n == 0:\n        print(0)\n    else:\n        print(pow(2, n))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "3161": {
    "id": 3161,
    "code": "S = \"1111111111\"\nans = abs(753 - int(S[:3]))\nfor i in range(1, len(S)-1):\n    tmp = int(S[i:i+3])\n    ans = min(abs(753-tmp), ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "5723": {
    "id": 5723,
    "code": "a = 2\nprint(a//2+a%2)",
    "coverage": [">", ">"]
  },
  "16455": {
    "id": 16455,
    "code": "n = 2\nA = [0, 100]\ndiff = float(\"inf\")\nans = 0\nfor a in A[:-1]:\n    d = abs(a - A[-1] / 2)\n    if d < diff:\n        ans = a\n        diff = d\nprint(A[-1], ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "1244": {
    "id": 1244,
    "code": "n = 112\nfor i in range(1,10):\n  if 100*i+10*i+i>=n:\n    print(100*i+10*i+i)\n    break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "6904": {
    "id": 6904,
    "code": "h = 20;n = 3\nAi = [4, 5, 6]\nprint('Yes' if h <= sum(Ai) else 'No')",
    "coverage": [">", ">", ">"]
  },
  "7196": {
    "id": 7196,
    "code": "v = 211;n = 5\narr = [26, 31, 41, 53, 59]\nprint(\"Yes\") if sum(arr[-n:]) >= v else print(\"No\")",
    "coverage": [">", ">", ">"]
  },
  "19221": {
    "id": 19221,
    "code": "n = 12\nif n%2: print(0)\nelse:\n    s=0\n    x=10\n    while n//x:\n        s+=n//x\n        x*=5\n    print(s)",
    "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">"]
  },
  "17648": {
    "id": 17648,
    "code": "S = ['1', '7', '0', '0']\nS1 = S[0] + S[1]\nS2 = S[2] + S[3]\nS1 = int(S1)\nS2 = int(S2)\nif 1 <= S1 <= 12 and 1 <= S2 <= 12:\n  print('AMBIGUOUS')\nelif (1 > S1 or S1 > 12) and 1 <= S2 <= 12:\n  print('YYMM')\nelif (1 > S2 or S2 > 12) and 1 <= S1 <= 12:\n  print('MMYY')\nelse:\n  print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "19227": {
    "id": 19227,
    "code": "n = 5\nif n%2:\n  print(0)\nelse:\n  c=0\n  n//=2\n  while n:\n    n//=5\n    c+=n\n  print(c)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "11383": {
    "id": 11383,
    "code": "s = \"SUN\"\nw = {'SUN': 7, 'MON': 6, 'TUE': 5, 'WED': 4, 'THU': 3, 'FRI': 2, 'SAT': 1}\nprint(w[s])",
    "coverage": [">", ">", ">"]
  },
  "18533": {
    "id": 18533,
    "code": "import math\nh = 3\nw = 7\nn = 10\nprint(min(math.ceil(n / w), math.ceil(n / h)))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "4271": {
    "id": 4271,
    "code": "x = [10, 0, 15, 0, 30]\nh1 = x[0]\nm1 = x[1]\nh2 = x[2]\nm2 = x[3]\ns = x[4]\nh = (h2-h1)*60\nm = m2-m1\nprint((h+m)-s)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18805": {
    "id": 18805,
    "code": "import math\nh = 3\nw = 7\nn = 10\nif h > w:\n    print(math.ceil(n / h))\nelse:\n    print(math.ceil(n / w))",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "15711": {
    "id": 15711,
    "code": "X = 13;Y = 3;Z = 1\ni = 0\nwidth = Z\nwhile True :\n    width += Y + Z\n    i += 1\n    if X < width:\n        break\nprint(i - 1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11399": {
    "id": 11399,
    "code": "s = \"SUN\"\nls = ['SUN','MON','TUE','WED','THU','FRI','SAT']\nfor i, x in enumerate(ls):\n  if s == x:\n    print(7-i)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "12954": {
    "id": 12954,
    "code": "x = 5\nif x == 7 or x == 5 or x == 3: print(\"YES\")\nelse: print(\"NO\")",
    "coverage": [">", ">", "!"]
  },
  "18746": {
    "id": 18746,
    "code": "H = 14\nW = 12\nN = 112\na=0\ncount=0\nif H>W:\n    for i in range(W):\n        a+=H\n        count+=1\n        if a>=N:\n            break\nelse:\n    for i in range(H):\n        a+=W\n        count+=1\n        if a>=N:\n            break\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "3306": {
    "id": 3306,
    "code": "import sys\ninput = \"<function <lambda>>\"\na = 20;b = 30\nprint(max(0, a - 2*b))",
    "coverage": [">", ">", ">", ">"]
  },
  "13489": {
    "id": 13489,
    "code": "s = \"abcde,fghihgf,edcba\"\nprint(*s.split(','))",
    "coverage": [">", ">"]
  },
  "4959": {
    "id": 4959,
    "code": "w = \"xyz\"\nl = len(w) -2\nprint(w[0] + str(l) + w[-1])",
    "coverage": [">", ">", ">"]
  },
  "16311": {
    "id": 16311,
    "code": "n = 5\na = [6, 9, 4, 2, 11]\na.sort()\nlarge = max(a)\na.remove(large)\nmin_list = [0, large/2]\nfor i in a:\n    if abs(i - large/2) < min_list[1]:\n        min_list = [i, abs(i - large/2)]\nprint(large, min_list[0])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6618": {
    "id": 6618,
    "code": "n = 3\na = [1, 1, 1]\nb = [2, 2, 2]\nc = [3, 3, 3]\na.sort()\na.reverse()\nb.sort()\nb.reverse()\nc.sort()\nc.reverse()\nc.append(0)\ni=0\nl=[]\nfor j in b:\n  while c[i]>j:\n    i+=1\n  l.append(i)\nb.append(0)\ns=0\ncnt=0\ni=0\nfor j in a:\n  while b[i]>j:\n    s+=l[i]\n    i+=1\n  cnt+=s\nprint(cnt)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7575": {
    "id": 7575,
    "code": "H = 210;N = 5\nprint(\"NYoe s\"[H<=sum(map(int,\"31 41 59 26 53\".split()))::2])",
    "coverage": [">", ">"]
  },
  "19216": {
    "id": 19216,
    "code": "N = 12\nk = 10\nans = 0\nif N % 2 != 0:\n    ans = 0\nelse:\n    while k <= N:\n        ans += N // k\n        k *= 5\nprint(ans)",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "9749": {
    "id": 9749,
    "code": "icase=0\nif icase==0:\n    n = 6\n    s=\")))())\"\nelif icase==1:\n    n=3\n    s=\"())\"\nelif icase==2:\n    n=6\n    s=\")))())\"\nelif icase==3:\n    n=8\n    s=\"))))((((\"\nl=[]\nr=[]\nsim=s[0]\nif sim==\"(\":\n    lidx=0\n    l.append(1)\n    ridx=-1\nelif sim==\")\":\n    lidx=0\n    l.append(0)\n    ridx=0\n    r.append(1)\nfor i in range(1,len(s)):\n    if s[i]==\"(\" and s[i-1]==\"(\":\n        l[lidx]+=1\n    elif s[i]==\"(\" and s[i-1]==\")\":\n        lidx+=1\n        l.append(1)\n    elif s[i]==\")\" and s[i-1]==\")\":\n        r[ridx]+=1\n    elif s[i]==\")\" and s[i-1]==\"(\":\n        ridx+=1\n        r.append(1)\nll=sum(l)\nrr=sum(r)\nds=ll-rr\nif len(l)>len(r):\n    r.append(0)\nxmin=0\nx=0\nfor i in range(len(l)):\n    x=x+l[i]-r[i]\n    xmin=min(x,xmin)\nstrs=\"(\"*(-xmin) + s + \")\"*(ds-xmin)\nprint(strs)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18589": {
    "id": 18589,
    "code": "h = 2\nw = 100\nn = 200\ncount1 = 0\ncount2 = 0\nif h > w:\n  while w > 0:\n    count1 += h\n    if count1 >= n:\n      count2 += 1\n      break\n    else:\n      count2 += 1\n      w -= 1\nelse:\n  while h > 0:\n    count1 += w\n    if count1 >= n:\n      count2 += 1\n      break\n    else:\n      count2 += 1\n      h -= 1\nprint(count2)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "3590": {
    "id": 3590,
    "code": "a = 12;b = 4\nc=a-2*b\nprint(c if c>=0 else 0 )",
    "coverage": [">", ">", ">"]
  },
  "2083": {
    "id": 2083,
    "code": "n = 10;a = 3;b = 5\nhigh=min(a,b)\nlow=max(0,a+b-n)\nprint(high,low)",
    "coverage": [">", ">", ">", ">"]
  },
  "2367": {
    "id": 2367,
    "code": "a = 13;b = 3\nc = a * (a-1)/2\nd = b*(b-1)/2\nres = int(c+d)\nprint(res)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "17449": {
    "id": 17449,
    "code": "n = 112\nd2 = n % 100\nu2 = n // 100\nif 1 <= d2 <= 12 and 1 <= u2 <= 12:\n    print(\"AMBIGUOUS \")\nelif 1 <= d2 <= 12:\n    print(\"YYMM\")\nelif 1 <= u2 <= 12:\n    print(\"MMYY\")\nelse:\n    print(\"NA\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!"]
  },
  "8763": {
    "id": 8763,
    "code": "from itertools import accumulate\nN = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12056": {
    "id": 12056,
    "code": "A = 11;B = 30\nC = 12;D = 1\nif C - A == 1:\n\tprint(1)\nelse:\n\tprint(0)",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "16990": {
    "id": 16990,
    "code": "a = ['D', 'H']\nif (a[0] == 'H' and a[1] == 'H') or (a[0] == 'D' and a[1] == 'D'):\n    print('H')\nelse:\n    print('D')",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "8394": {
    "id": 8394,
    "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nini = a1[0]+sum(a2)\nans = ini\nfor i in range(1, n):\n    s = ini - a2[i-1] + a1[i]\n    if s >= ans:\n        ans = s\n    ini = s\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "1497": {
    "id": 1497,
    "code": "import math\nprint(math.ceil(int(\"111\")/111)*111)",
    "coverage": [">", ">"]
  },
  "8904": {
    "id": 8904,
    "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "1552": {
    "id": 1552,
    "code": "n = 111\nfor i in range(1,10):\n    if int(str(i)*3) >= n:\n        print(str(i)*3)\n        break",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10754": {
    "id": 10754,
    "code": "S = \"akasaka\"\nN = len(S)\nSf = S[0:(N-1)//2]\nNSf = len(Sf)\nSb = S[(N+3)//2 -1:N+1]\nNSb = len(Sb)\nans = 0\nfor i in range(N//2):\n    if S[i:i+1] != S[N-1-i:N-i]:\n        ans = 1\nfor i in range(NSf//2):\n    if Sf[i:i+1] != Sf[NSf-1-i:NSf-i]:\n        ans = 1\nfor i in range(NSb//2):\n    if Sb[i:i+1] != Sb[NSb-1-i:NSb-i]:\n        ans = 1\nprint('Yes') if ans == 0 else print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "16570": {
    "id": 16570,
    "code": "a = \"D\";b = \"H\"\nif (a == \"H\" and b == \"H\") or (a == \"D\" and b == \"D\"):\n  print(\"H\")\nelse:\n  print(\"D\")",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "623": {
    "id": 623,
    "code": "S = \"codefestival\"\nK = 100\nlenS=len(S)\nfor i in range(lenS-1):\n    ordS_i=ord(S[i])\n    if (ord(\"a\")-ordS_i)%26<=K:\n        K-=(ord(\"a\")-ordS_i)%26\n        S=S[:i]+\"a\"+S[i+1:]\nordS_i=ord(S[lenS-1])\nmoda=(ordS_i-ord(\"a\")+K)%26\nS=S[:lenS-1]+chr(ord(\"a\")+moda)\nprint(S)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "13698": {
    "id": 13698,
    "code": "line_data = \"10 0 12 0 120\"\nH1, M1, H2, M2, K = map(lambda x: int(x), line_data.split(' '))   \nminiutes = (H2 - H1) * 60 + (M2 - M1)                             \nprint(miniutes - K)                                               ",
    "coverage": [">", ">", ">", ">"]
  },
  "1650": {
    "id": 1650,
    "code": "n = 10;a = 7;b = 5\nif(a+b <= n):\n    print(str(min(a,b)) + \" 0\")\nelse:\n    print(str(min(a,b)) + \" \" + str(abs(a+b-n)))",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "492": {
    "id": 492,
    "code": "s = \"a\"\nk = 25\nalpha=list('abcdefghijklmnopqrstuvwxyz')\nans=[]\nfor i in range(len(s)):\n    ki= 26-alpha.index(s[i]) if s[i]!='a' else 0\n    if(i==len(s)-1):\n        kn=k+alpha.index(s[i])\n        kn=kn%26\n        ans.append(alpha[kn])\n    elif(ki<=k):\n        ans.append('a')\n        k-=ki\n    else:\n        ans.append(s[i])\nprint(''.join(ans))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "3547": {
    "id": 3547,
    "code": "A = 12;B = 4\nprint(A - 2*B if A > 2*B else 0)",
    "coverage": [">", ">"]
  },
  "8912": {
    "id": 8912,
    "code": "n = 1\na1 = [2]\na2 = [3]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1958": {
    "id": 1958,
    "code": "N = 10;A = 7;B = 5\nmaximum=min(A,B)\nif N>A+B:\n    minimum=0\nelse:\n    minimum=A+B-N\nprint(str(maximum)+' '+str(minimum))",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "14813": {
    "id": 14813,
    "code": "from math import factorial\nn = 3;p = 0\na = [1, 1, 1]\neven=[]\nodd=[]\nfor i in a:\n    if i%2==0:\n        even.append(i)\n    else:\n        odd.append(i)\nev=len(even)\nod=len(odd)\nodd_sum=0\nfor i in range(od+1):\n    if i%2==p and i<=od:\n        odd_sum+=(factorial(od)//(factorial(od-i)*factorial(i)))\nprint(odd_sum*(2**ev))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2189": {
    "id": 2189,
    "code": "N = 10;A = 7;B = 5\nans1 = min(A, B)\nans2 = max(A + B - N, 0)\nprint(ans1, ans2)",
    "coverage": [">", ">", ">", ">"]
  },
  "15288": {
    "id": 15288,
    "code": "x = 12;y = 3;z = 1\nans = 1\ncapa = 0\nwhile True:\n    capa = ans * y + ans * z + z\n    if capa > x:\n        break\n    ans += 1\nprint(ans-1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "208": {
    "id": 208,
    "code": "li_s = ['a']\nk = 25\nz = ord('z')\nans = ''\nfor i in range(len(li_s)):\n    if i < len(li_s) - 1 and li_s[i] == 'a':\n        ans += 'a'\n    elif i < len(li_s)-1 and k-(z-ord(li_s[i])+1) >= 0:\n        k -= z-ord(li_s[i])+1\n        ans = ans + 'a'\n    elif i < len(li_s)-1:\n        ans = ans + li_s[i]\n    elif i == len(li_s) - 1:\n        p = ord(li_s[i])  + k\n        p %= 26\n        p += 78\n        if 97 <= p:\n            ans = ans + chr(p)\n        else:\n            ans = ans + chr(p+26)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "4484": {
    "id": 4484,
    "code": "a = \"smiles\"\nprint(a[0] + str(len(a[1:-1])) + a[-1])",
    "coverage": [">", ">"]
  },
  "3130": {
    "id": 3130,
    "code": "S = \"35753\"\nans = 999\nfor i in range(len(S)-2):\n    num = int(S[i:i+3])\n    if abs(num - 753) < ans:\n        ans = abs(num-753)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "13995": {
    "id": 13995,
    "code": "import sys\ninput = sys.stdin.readline\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 0\nstate = 0\nfor i in range(N-1):\n    if A[i+1]-A[i]>0:\n        if state==2:\n            ans += 1\n            state = 0\n        elif state==0:\n            state = 1\n    elif A[i+1]-A[i]<0:\n        if state==1:\n            ans += 1\n            state = 0\n        else:\n            state = 2\nans += 1\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "3083": {
    "id": 3083,
    "code": "s = \"35753\"\na = 10000\nfor i in range(len(s) - 1):\n    a = min(a, abs(753 - int(s[i:i+3])))\nprint(a)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9517": {
    "id": 9517,
    "code": "s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\ns[3] = '8'\nprint(*s,sep='')",
    "coverage": [">", ">", ">"]
  },
  "707": {
    "id": 707,
    "code": "K = 101\nfirst_mod = 7 % K\nold_mod = now_mod = first_mod\ncnt = 1\nif first_mod == 0:\n    print(1)\nelse:\n    flg = False\n    for i in range(2,K+1):\n        now_mod = ((old_mod * 10) + 7) % K\n        cnt += 1\n        old_mod = now_mod\n        if now_mod == 0:\n            flg = True\n            break\n        if now_mod == first_mod:\n            break\n    if flg:\n        print(cnt)\n    else:\n        print(-1)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "17792": {
    "id": 17792,
    "code": "s = \"1905\"\na = s[:2]\nb = s[2:]\nb1 = 0\na1 = 0\nif b[0] == '0': b1 = int(b[1])\nelse: b1 = int(b)\nif a[0] == '0': a1 = int(a[1])\nelse: a1 = int(a)\nif (b1>=1 and b1<=12) and (a1>=1 and a1<=12): print(\"AMBIGUOUS\")\nelif b1>=1 and b1<=12: print(\"YYMM\")\nelif a1>=1 and a1<=12: print(\"MMYY\")\nelse: print(\"NA\") ",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "1021": {
    "id": 1021,
    "code": "n = 750\nfor i in range(n,1000):\n    a = str(i)\n    if a[0] == a[1] and a[0] == a[2]:\n        print(i)\n        break",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "18886": {
    "id": 18886,
    "code": "N = 5\nif N%2==1:\n    print(0)\nelse:\n    i = 10\n    count = 0\n    while i <= N:\n        count += N//i\n        i = i*5\n    print(count)",
    "coverage": [">", ">", ">", "!", "!", "!", "!", "!", "!", "!"]
  },
  "13862": {
    "id": 13862,
    "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nflag = 0\nfor i in range(len(a)-1):\n    if flag == 1:\n        if a[i] > a[i+1]:\n            flag = 0\n            count += 1\n    elif flag == -1:\n        if a[i] < a[i+1]:\n            flag = 0\n            count += 1\n    else:\n        if i == len(a)-1:\n            count+1\n        elif a[i] < a[i+1]:\n            flag = 1\n        elif a[i] > a[i+1]:\n            flag = -1\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "7627": {
    "id": 7627,
    "code": "h = 210;n = 5\na = [31, 41, 59, 26, 53]\nprint('Yes' if sum(a) >= h else 'No')",
    "coverage": [">", ">", ">"]
  },
  "16982": {
    "id": 16982,
    "code": "a = \"D\";b = \"D\"\nif a == 'H':\n    print('H') if b == 'H' else print('D')\nelse:\n    print('H') if b == 'D' else print('D')",
    "coverage": [">", ">", "!", "!", ">"]
  },
  "12673": {
    "id": 12673,
    "code": "x = 6\nif x == 7:\n    print('YES')\nelif x == 5:\n    print('YES')\nelif x == 3:\n    print('YES')\nelse:\n    print('NO')",
    "coverage": [">", ">", "!", ">", "!", ">", "!", "!", ">"]
  },
  "14445": {
    "id": 14445,
    "code": "n = 9\na_l = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnum = 1\nflag = -1 \nfor i in range(1,n):\n    if a_l[i] > a_l[i-1]:\n        new_flag = 0\n    elif a_l[i] < a_l[i-1]:\n        new_flag = 1\n    else:\n        continue\n    if new_flag != flag:\n        if flag == -1:\n            flag = new_flag\n        else:\n            flag = -1\n            num += 1\nprint(max(num,1))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "11646": {
    "id": 11646,
    "code": "s = \"SAT\"\nl=[ \"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\nind=l.index(s)\nif ind==0:\n  print(7)\nelse:\n  print(7-ind)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "12006": {
    "id": 12006,
    "code": "m1 = 11;d1 = 16\nm2 = 11;d2 = 17\nans = 1\nif m1 == m2:\n  ans = 0\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "2787": {
    "id": 2787,
    "code": "S = \"1111111111\"\nans = 1000\nfor i in range(len(S)-2):\n    x = int(S[i:i+3])\n    dif = abs(753 - x)\n    ans = min(dif, ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10320": {
    "id": 10320,
    "code": "import math\nnum1 = 100;num2 = 50;target = 4\nnumber = math.gcd(num1, num2)\ntable = []\nfor j in range(1, number+1):\n    if number % j == 0:\n        table.append(j)\nlist.sort(table, reverse=True)\nprint(table[target-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2245": {
    "id": 2245,
    "code": "N = 10;A = 3;B = 5\nMAX = min(A, B)\nMIN = max(0,A+B-N)\nprint(MAX,MIN)",
    "coverage": [">", ">", ">", ">"]
  },
  "14453": {
    "id": 14453,
    "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n<=2:\n  print(1)\n  exit()\ncnt=0\nif l[0]>l[1]:\n  ans=\"low\"\nelif l[0]<l[1]:\n  ans=\"high\"\nelse:\n  ans=\"even\"\nfor i in range(2,n):\n  if l[i-1]>l[i] and (ans==\"low\" or ans==\"even\"):\n    ans=\"low\"\n  elif l[i-1]<l[i] and (ans==\"high\" or ans==\"even\"):\n    ans=\"high\"\n  elif l[i-1]==l[i]:\n    continue\n  else:\n    cnt+=1\n    ans=\"even\"\nprint(cnt+1)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "18493": {
    "id": 18493,
    "code": "h = 2\nw = 100\nn = 200\nans = 0 - -n//(max(h, w))\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2269": {
    "id": 2269,
    "code": "n = 10;a = 3;b = 5\nans1 = min(a, b)\nans2 = max(a + b - n, 0)\nans = ' '.join([str(ans1), str(ans2)]) \nprint(ans)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2873": {
    "id": 2873,
    "code": "s = \"35753\"\ns_size = len(s)\nans = float('inf')\nfor i in range(s_size-2):\n    ans = min(abs(753-int(s[i]+s[i+1]+s[i+2])), ans)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "6757": {
    "id": 6757,
    "code": "HP = 10;N = 3\nATK = [4, 5, 6]\nprint('Yes' if sum(ATK) >= HP else 'No')",
    "coverage": [">", ">", ">"]
  },
  "1207": {
    "id": 1207,
    "code": "n = 750;i = 1\nwhile n>111*i:\n    i+=1\nprint(111*i)",
    "coverage": [">", ">", ">", ">"]
  },
  "5570": {
    "id": 5570,
    "code": "n = 2\nprint((n+1)//2)",
    "coverage": [">", ">"]
  },
  "7879": {
    "id": 7879,
    "code": "N = 4;K = 3\nA = [2, 3, 1, 4]\nb=min(A)\np=0\nfor i in range(N):\n  if A[i]!=b:\n    p+=1\nif p%(K-1)==0:\n  print(p//(K-1))\nelse:\n  print(p//(K-1)+1)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14449": {
    "id": 14449,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nk = 1\nx = y = 0\nc = A[0]\nfor i in A[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18084": {
    "id": 18084,
    "code": "s = \"1700\"\nif 0 < int(s[:2]) <= 12 and 0 < int(s[2:]) <= 12:\n    print('AMBIGUOUS')\nelif 0 < int(s[:2]) <= 12 and int(s[2:]) >= 12:\n    print('MMYY')\nelif 0 < int(s[:2]) < 12 and int(s[2:]) == 0:\n    print('MMYY')\nelif int(s[:2]) >= 12 > 0 and 0 < int(s[2:]) <= 12:\n    print('YYMM')\nelif int(s[:2]) == 0 and 0 < int(s[2:]) <= 12:\n    print('YYMM')\nelse:\n    print('NA')",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "10807": {
    "id": 10807,
    "code": "s = \"atcoder\"\nprint(\"Yes\" if s == s[::-1] and s[:len(s)//2] == s[len(s)//2-1::-1] else \"No\")",
    "coverage": [">", ">"]
  },
  "14334": {
    "id": 14334,
    "code": "num = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nk = 1\nx = y = 0\nc = a[0]\nfor i in a[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16790": {
    "id": 16790,
    "code": "a = \"D\";b = \"D\"\nif a == \"H\":\n    if b == \"H\":\n        print(\"H\")\n    else:\n        print(\"D\")\nelse:\n    if b == \"H\":\n        print(\"D\")\n    else:\n        print(\"H\")",
    "coverage": [">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">"]
  },
  "18207": {
    "id": 18207,
    "code": "H = 3\nW = 7\nN = 10\nanswer = 0\nif H >= W:\n    answer = N // H\n    if N % H != 0:\n        answer += 1\nelse:\n    answer = N // W\n    if N % W != 0:\n        answer += 1\nprint(answer)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14234": {
    "id": 14234,
    "code": "n = 9\nnum_list = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif len(num_list)==1:\n  print(1)\nelse:\n  res = 1\n  flag = None\n  pre = num_list[0]\n  for i in num_list[1:]:\n    if pre > i and not flag:\n      flag = 'down'\n    elif pre < i and not flag:\n      flag = 'up'\n    elif (pre > i and flag=='up') or (pre < i and flag=='down'):\n      res += 1\n      flag = None\n    pre = i\n  print(res)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12406": {
    "id": 12406,
    "code": "S = \"akasaka\"\nN=len(S)\nif S==S[::-1] and S[0:(N-1)//2]==S[(N-1)//2-1::-1] and S[(N+3)//2-1:]==S[-1:(N+3)//2-2:-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "8981": {
    "id": 8981,
    "code": "a = 1\nb = 2\nc = 4\nd = 8\ne = 9\nk = 15\nif e - a <= k:\n    print(\"Yay!\")\nelse:\n    print(\":(\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]
  },
  "15923": {
    "id": 15923,
    "code": "A = 12;B = 4\nif A - 2 * B >= 0:\n  print(A - 2 * B)\nelse:\n  print(0)",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "14458": {
    "id": 14458,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nfor a in A:\n  right, right2 = i, i\n  while right+1 < N and A[right] <= A[right+1]: right += 1\n  while right2+1 < N and A[right2] >= A[right2+1]: right2 += 1\n  i = max(right, right2) + 1\n  ans += 1\n  if i >= N: break\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18406": {
    "id": 18406,
    "code": "H = 2\nW = 100\nN = 200\nhi = max(H, W)\nprint((N+hi-1)//hi)",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9122": {
    "id": 9122,
    "code": "s = \"2017/01/07\"\na = int(s[0])*1000+int(s[1])*100+int(s[2])*10+int(s[3])+1\nb = s[4]+s[5]+s[6]+s[7]+s[8]+s[9] \nprint(str(a)+b)",
    "coverage": [">", ">", ">", ">"]
  },
  "1579": {
    "id": 1579,
    "code": "n = 750\nif 111*(n//100)>=n:\n    print(111*(n//100))\nelse:\n    print(111*(n//100 + 1))",
    "coverage": [">", ">", ">", "!", "!"]
  },
  "1901": {
    "id": 1901,
    "code": "n = 10;a = 7;b = 5\nmax_ = min(a, b)\nif max(n, a+b) == a+b:\n    min_ = a + b - n\nelse:\n    min_ = 0\nprint(max_, min_)",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "12647": {
    "id": 12647,
    "code": "import sys\ninput = \"<function <lambda>>\"\nX = 6\nif X == 7 or X == 5 or X == 3:\n    print('YES')\nelse:\n    print('NO') ",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "6498": {
    "id": 6498,
    "code": "n = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\na.sort()\nb.sort()\nc.sort()\nfrom bisect import bisect_left\nfrom bisect import bisect_right\ncount = 0\nfor bi in range(n):\n  c_right = bisect_right(c, b[bi])\n  a_left = bisect_left(a, b[bi])\n  count += (n-c_right) * a_left\nprint(count)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12553": {
    "id": 12553,
    "code": "A = 100;B = 50;K = 4\ncount = 0\nimport math\nR = []\nfor i in range(1,int(math.sqrt(A))+1+1):\n    if A%i == 0:\n        R.append(i)\n        if not i == A//i:\n            R.append(A//i)\nR.sort(reverse=True)\nfor r in R:\n    if B%r==0:\n        count+=1\n        if count == K:\n            print(r)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1847": {
    "id": 1847,
    "code": "N = 10;A = 7;B = 5\nmaxab = min([A , B])\nminab = max([A + B - N , 0] )\nprint(str(maxab) + \" \" + str(minab))",
    "coverage": [">", ">", ">", ">"]
  },
  "11311": {
    "id": 11311,
    "code": "import sys\ninput = sys.stdin.readline\ns = \"SUN\"\nif s == \"MON\": print(6)\nelif s == \"SAT\": print(1)\nelif s == \"FRI\": print(2)\nelif s == \"THU\": print(3)\nelif s == \"WED\": print(4)\nelif s == \"TUE\": print(5)\nelse:\n    print(7)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "10350": {
    "id": 10350,
    "code": "import math\na = 100;b = 50;k = 4\ncnt=0\nfor i in range(math.gcd(a,b),0,-1):\n    if a%i==0 and b%i==0:\n        cnt+=1\n    if cnt==k:\n        print(i)\n        break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11955": {
    "id": 11955,
    "code": "m_1 = 11;d_1 = 30\nm_2 = 12;d_2 = 1\nmonth = 12\nif (m_1 % month + 1) == m_2 and d_2 == 1:\n    print(\"1\")\nelse:\n    print(\"0\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "4112": {
    "id": 4112,
    "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nans=(h2-h1)*60+(m2-m1)-k\nprint(ans)",
    "coverage": [">", ">", ">"]
  },
  "16086": {
    "id": 16086,
    "code": "a = 12;b = 4\ni = a - b * 2\nif i <= 0:\n    print('0')\nelse:\n    print(i)",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "10728": {
    "id": 10728,
    "code": "s = \"level\"\nn = len(s)\nflag = 1\nfor i in range(int(n/2)):\n    if s[i] != s[n-i-1]:\n        flag = 0\n        break\nn2 = int((n-1)/2)\nif flag == 1:\n    for i in range(int(n2/2)):\n        if s[i] != s[n2-i-1]:\n            flag = 0\n            break\nif flag == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "182": {
    "id": 182,
    "code": "s = \"a\"\nk = 25\nans=\"\"\nfor i in s[:-1]:\n    if i==\"a\":\n        ans+=i\n        continue\n    if k>=123-ord(i):\n        k-=123-ord(i)\n        ans+=\"a\"\n    else:\n        ans+=i\ni=s[-1]\nans+=chr((ord(i)+k-97)%26+97)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "12011": {
    "id": 12011,
    "code": "a = [11, 16]\nb = [11, 17]\nif a[0]!=b[0]:\n    print('1')\nelse:\n    print('0')",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "7369": {
    "id": 7369,
    "code": "h = 10;n = 3\na = [4, 5, 6]\na.sort(reverse=True)\ntemp = 0\nans = \"No\"\nfor i in a:\n    temp += i \n    if temp>=h:\n        ans = \"Yes\"\n        break\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "13636": {
    "id": 13636,
    "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c,sep=\" \")",
    "coverage": [">", ">"]
  },
  "5220": {
    "id": 5220,
    "code": "s = \"xyz\"\nprint(s[0]+str(len(s)-2)+s[len(s)-1])",
    "coverage": [">", ">"]
  },
  "7657": {
    "id": 7657,
    "code": "h = 10;n = 3\na = [4, 5, 6]\ns = sum(a)\nif h <= s:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!"]
  },
  "12339": {
    "id": 12339,
    "code": "S = \"level\"\nN = len(S)\nif S == S[::-1]:\n  if S[:(N-1)//2] == S [(N+1)//2:]:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!"]
  },
  "8297": {
    "id": 8297,
    "code": "n = 3;k = 3\na = [1, 2, 3]\nans = k\ncount = 1\nwhile ans < n:\n    ans += k-1\n    count += 1\nprint(count)",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "7382": {
    "id": 7382,
    "code": "h = 20;n = 3\ndamage = [4, 5, 6]\nif h - sum(damage) <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">"]
  },
  "17573": {
    "id": 17573,
    "code": "s = ['1', '7', '0', '0']\nS=[]\nfor i in range(len(s)):\n    S.append(int(s[i]))\nif 1<=S[2]*10+S[3] and S[2]*10+S[3]<=12:\n    if 1<=S[0]*10+S[1] and S[0]*10+S[1]<=12:\n        print('AMBIGUOUS')\n    else:\n        print('YYMM')\nelse:\n    if 1<=S[0]*10+S[1] and S[0]*10+S[1]<=12:\n        print('MMYY')\n    else:\n        print('NA')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "2312": {
    "id": 2312,
    "code": "N = 10;A = 7;B = 5\nResMax = min(A, B)\nResMin = max(0, A+B-N)\nprint(ResMax, ResMin)",
    "coverage": [">", ">", ">", ">"]
  },
  "2903": {
    "id": 2903,
    "code": "S = \"35753\"\nS_len = len(S)\nans = 1000\nfor i in range(S_len - 2):\n    t = int(S[i:i + 3])\n    t_abs = abs(t - 753)\n    ans = min(ans, t_abs)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "15216": {
    "id": 15216,
    "code": "x = 64145;y = 123;z = 456\nn = (x - z) / (y + z)\nprint(int(n))",
    "coverage": [">", ">", ">"]
  },
  "6715": {
    "id": 6715,
    "code": "h = 10;n = 3\na = [4, 5, 6]\nif h <= sum(a):\n  print('Yes')\nelse:\n  print('No')",
    "coverage": [">", ">", ">", ">", "!", "!"]
  },
  "16216": {
    "id": 16216,
    "code": "n = 2\na = [100, 0]\nx = max(a)\ny = float(\"inf\")\nfor ai in a:\n    if abs(x / 2 - ai) < abs(x / 2 - y) and ai < x:\n        y = ai\nprint(x, y)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "3157": {
    "id": 3157,
    "code": "S = \"35753\"\nans = 1000\nfor i in range(len(S)-2):\n    num = 100*int(S[i]) + 10*int(S[i+1]) + int(S[i+2])\n    if ans > abs(753-num):\n        ans = abs(753-num)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10147": {
    "id": 10147,
    "code": "from collections import deque\nN = 8\nS = \"))))((((\"\nque = deque(S)\nl = r = 0\nfor s in S:\n    if s == '(':\n        l += 1\n    else:\n        r += 1\n    if l < r:\n        que.appendleft('(')\n        l += 1\nelse:\n    ans = \"\".join(que)\n    if r < l:\n        ans = ans + \")\" * (l - r)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10209": {
    "id": 10209,
    "code": "n = 6\ns = \")))())\"\nstack_len = 0\nans = \"\"\nstreak = 0\nfor i in s:\n    if i == \")\":\n        if stack_len:\n            stack_len -= 1\n            ans += \")\"\n        else:\n            ans = \"(\" + ans + \")\"\n    else:\n        ans += \"(\"\n        stack_len += 1\nans += \")\" * stack_len\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5764": {
    "id": 5764,
    "code": "def main():\n    N = 5\n    print(-(-N // 2))\nmain()",
    "coverage": [">", ">", ">", ">"]
  },
  "7928": {
    "id": 7928,
    "code": "import sys\ndef resolve():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    res = 0\n    covered = 0\n    while True:\n        if covered >= N:\n            break\n        if res == 0:\n            covered = K\n        else:\n            covered += K - 1\n        res += 1\n    print(res)\nif '__main__' == __name__:\n    resolve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3031": {
    "id": 3031,
    "code": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\nS = \"35753\"\nsa = float('inf')\nfor i in range(len(S)-2):\n    if abs(int(S[i:i+3]) - 753) < sa:\n        sa = abs(int(S[i:i+3]) - 753)\nprint(sa)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5780": {
    "id": 5780,
    "code": "def main():\n    n = 2\n    if n % 2 == 1:\n        print(n // 2 + 1)\n    else:\n        print(n // 2)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "12992": {
    "id": 12992,
    "code": "def resolve():\n    N = 5\n    print(\"YES\" if N in [7, 5, 3] else \"NO\")\nif '__main__' == __name__:\n    resolve()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "16408": {
    "id": 16408,
    "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    n = 5\n    a = [6, 9, 4, 2, 11]\n    a.sort()\n    a_max=a[-1]\n    b_max=-1\n    for i in range(n-1):\n        if b_max<min(a[i],a_max-a[i]):\n            b_max=a[i]\n    print(a_max,b_max)\nif __name__==\"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "6026": {
    "id": 6026,
    "code": "def duplex_printing(all_pages):\n    all_papers = (all_pages + 1) // 2\n    return all_papers\nN = 2\nresult = duplex_printing(N)\nprint(result)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "11182": {
    "id": 11182,
    "code": "def main():\n    s = \"level\"\n    s1 = s[:int((len(s)-1)/2)]\n    s2 = s[int((len(s)+3)/2-1):]\n    rs = s[::-1]\n    rs1 = s1[::-1]\n    rs2 = s2[::-1]\n    if s1 == rs1 and s2 == rs2 and s == rs:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\nmain()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "13869": {
    "id": 13869,
    "code": "def main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    idx = 0\n    ans = 0\n    for i in range(len(A)):\n        if idx + 1 > len(A) - 1 :\n            break\n        m = \"\"\n        if A[idx] < A[idx + 1]:\n            m = \"+\"\n        elif A[idx] > A[idx + 1]:\n            m = \"-\"\n        else:\n            find = False\n            for j in range(idx, len(A)-1):\n                if A[j] < A[j + 1]:\n                    m = \"+\"\n                    find = True\n                    idx = j\n                    break\n                elif A[j] > A[j + 1]:\n                    m = \"-\"\n                    find = True\n                    idx = j\n                    break\n            if find == False:\n                print(ans + 1)\n                exit()\n        for j in range(idx, len(A) - 1):\n            if m == \"+\":\n                if A[j] <= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n            elif m == \"-\":\n                if A[j] >= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n    print(ans + 1)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "14537": {
    "id": 14537,
    "code": "import math\nN = 2;P = 0\nA = [1, 3]\nB = [a % 2 for a in A]\ncount_0 = B.count(0)\ncount_1 = B.count(1)\ndef comb_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nx = y = 0\nif count_0 == 0:\n    x = 1\nelse:\n    if P == 1 and count_1 == 0:\n        x = 0\n    else:\n        for i in range(count_0 + 1):\n            x += comb_count(count_0, i)\nif count_1 == 0:\n    y = 1\nelse:\n    if P == 0:\n        for i in range(0, count_1 + 1, 2):\n            y += comb_count(count_1, i)\n    else:\n        for i in range(1, count_1 + 1, 2):\n            y += comb_count(count_1, i)\nprint(x * y)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "16372": {
    "id": 16372,
    "code": "import sys\nimport bisect\nreadline = sys.stdin.readline\ndef main():\n    n = 2\n    a = [100, 0]\n    a.sort()\n    if len(a) == 2:\n        a.sort(reverse=True)\n        print(*a)\n        return\n    amax = a.pop()\n    mid = amax//2\n    mididx = bisect.bisect_left(a, mid)\n    am1 = a[mididx]; am2 = a[mididx-1]\n    if abs(am1-mid) <= abs(am2-mid):\n        am = am1\n    else:\n        am = am2\n    print(amax, am)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "13": {
    "id": 13,
    "code": "def main():\n    S = ['x', 'y', 'z']\n    K = 4\n    k = K\n    for i,c in enumerate(S):\n        distance = (ord('z') + 1 - ord(c))%26\n        if distance <= k:\n            k -= distance\n            S[i] = 'a'\n    S[-1] = chr((ord(S[-1]) - ord('a') + k) % 26 + ord('a'))\n    print(''.join(S))\nmain()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11022": {
    "id": 11022,
    "code": "def is_palindrome(s):\n    res = s == s[::-1]\n    return res\nS = \"atcoder\"\nN = len(S)\nans = ['No', 'Yes'][is_palindrome(S) & is_palindrome(S[:((N-1)//2)]) & is_palindrome(S[((N+1)//2):])]\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "14831": {
    "id": 14831,
    "code": "n = 3;p = 0\na = [1, 1, 1]\nk=0\ng=0\nfor i in range(n):\n    if a[i]%2==0:\n        g+=1\n    else:\n        k+=1\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nnumg=0\nnumk=0\nif p==0:\n    for i in range(k//2+1):\n        numk+=cmb(k,i*2)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)\nelse:\n    for i in range((k+1)//2):\n        numk+=cmb(k,i*2+1)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "17514": {
    "id": 17514,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"1905\"\n    if 1 <= int(S[:2]) <= 12:\n        is_MMYY = True\n    else:\n        is_MMYY = False\n    if 1 <= int(S[2:]) <= 12:\n        is_YYMM = True\n    else:\n        is_YYMM = False\n    if is_MMYY and is_YYMM:\n        ans = \"AMBIGUOUS\"\n    elif is_MMYY:\n        ans = \"MMYY\"\n    elif is_YYMM:\n        ans = \"YYMM\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "3452": {
    "id": 3452,
    "code": "def main():\n a = 20;b = 15\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "10896": {
    "id": 10896,
    "code": "S = \"level\"\nN=len(S)\nM=(N-1)//2\ndef iskaibun(T):\n    K=len(T)\n    for i in range(K):\n        if T[i]==T[-i-1]:\n            pass\n        else:\n            return False\n    return True\nif iskaibun(S) and iskaibun(S[:M]) and iskaibun(S[M+1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "15220": {
    "id": 15220,
    "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\ndef main():\n    x = 64146;y = 123;z = 456\n    print((x-z)//(y+z))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "14707": {
    "id": 14707,
    "code": "def f(n, p, a):\n    odd = sum(i % 2 for i in a)\n    if odd == 0:\n        if p == 0:\n            return 2**n\n        elif p == 1:\n            return 0\n    else:\n        return 2**(n-1)\nn = 1;p = 1\na = [50]\nprint(f(n, p, a))",
    "coverage": [">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]
  },
  "13184": {
    "id": 13184,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"happy,newyear,enjoy\"\n    S = S.replace(\",\", \" \")\n    print(S)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9007": {
    "id": 9007,
    "code": "def main():\n    a = 15\n    b = 18\n    c = 26\n    d = 35\n    e = 36\n    k = 18\n    if abs(a-b)>k or abs(a-c)>k or abs(a-d)>k or abs(a-e)>k or abs(b-c)>k or abs(b-d)>k or abs(b-e)>k or abs(c-d)>k or abs(c-e)>k or abs(d-e)>k:\n        print(\":(\")\n    else:\n        print(\"Yay!\")\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "10858": {
    "id": 10858,
    "code": "def main():\n    s = \"akasaka\"\n    n = len(s)\n    for i in range(n//2):\n        if s[i] != s[n-1-i]:\n            print(\"No\")\n            return\n    s1 = s[:(n-1)//2]\n    s2 = s[(n+3)//2-1:]\n    n1 = len(s1)\n    for i in range(n//4):\n        if s1[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n        if s2[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n    print(\"Yes\")\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "17515": {
    "id": 17515,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"0112\"\n    if 1 <= int(S[:2]) <= 12:\n        is_MMYY = True\n    else:\n        is_MMYY = False\n    if 1 <= int(S[2:]) <= 12:\n        is_YYMM = True\n    else:\n        is_YYMM = False\n    if is_MMYY and is_YYMM:\n        ans = \"AMBIGUOUS\"\n    elif is_MMYY:\n        ans = \"MMYY\"\n    elif is_YYMM:\n        ans = \"YYMM\"\n    else:\n        ans = \"NA\"\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "6582": {
    "id": 6582,
    "code": "import math\nimport copy\nimport sys\nimport bisect\ninput = sys.stdin.readline\ndef main():\n    n = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    c.sort()\n    ans=0\n    for x in b:\n        ans += bisect.bisect_left(a, x) * (n - bisect.bisect_right(c, x))\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3870": {
    "id": 3870,
    "code": "def resolve():\n    x = 12;y = 3;z = 1\n    x=x-z\n    print(x//(y+z))\nresolve()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "14979": {
    "id": 14979,
    "code": "import collections, math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nfor i in range(N):\n    A[i] = A[i] % 2\nc = collections.Counter(A)\nzero = c[0]\none = c[1]\nans = 0\nif P == 0:\n    for i in range(0, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nelse:\n    for i in range(1, one + 1, 2):\n        ans += (2 ** zero) * (combinations_count(one, i) )\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "11990": {
    "id": 11990,
    "code": "def main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if d2 == 1:\n        print(1)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "10019": {
    "id": 10019,
    "code": "def main():\n    n = 8\n    s = \"))))((((\"\n    l, r, c = 0, 0, 0\n    for a in s:\n        if a == '(':\n            c += 1\n        elif c:\n            c -= 1\n        else:\n            l += 1\n    r = c\n    print(\"(\"*l + s + \")\"*r)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18897": {
    "id": 18897,
    "code": "def resolve():\n  N = 12\n  if N%2:\n    print(0)\n    return True\n  multiplier = 10\n  result = 0\n  while multiplier <= N:\n    result += N // multiplier\n    multiplier *= 5\n  print(result)\nif __name__ == \"__main__\":\n  resolve()",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13910": {
    "id": 13910,
    "code": "def check(a,b):\n  if a<b:\n    return 'up'\n  if a>b:\n    return 'down'\n  return ''\ndef solve():\n  ans = 1\n  N = 9\n  A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  ud = ''\n  for i in range(N-1):\n    a = check(A[i],A[i+1])\n    if ud=='' or ud==a:\n      ud = a\n      continue\n    if a=='':\n      continue\n    ans += 1\n    ud = ''\n  return ans\nprint(solve())",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10458": {
    "id": 10458,
    "code": "def divisors(n):\n    i = 1\n    table = set()\n    while i * i <= n:\n        if not n % i:\n            table.add(i)\n            table.add(n//i)\n        i += 1\n    return table\nA = 8;B = 12;K = 2\nres = divisors(A) & divisors(B)\nres = list(res)\nres.sort()\nprint(res[-K])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8321": {
    "id": 8321,
    "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10583": {
    "id": 10583,
    "code": "A = 1;B = 1;K = 1\ndef ans120(A:int, B:int, K:int):\n    l=sorted([A,B])\n    ans_list=[]\n    for i in range(1,l[1]+1):\n        if A%i==0 and B%i==0:\n            ans_list.append(i)\n    return ans_list[-K]\nprint(ans120(A,B,K))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12742": {
    "id": 12742,
    "code": "def solve():\n    x = 5\n    if x == 7 or x == 5 or x == 3:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    solve()",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "376": {
    "id": 376,
    "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\n    s = \"codefestival\"\n    k = 100\n    r = \"\"\n    for se in s:\n        if se == 'a':\n            r += 'a'\n        else:\n            if 123 - ord(se) <= k:\n                r += 'a'\n                k -= (123 - ord(se))\n            else:\n                r += se\n    if k:\n        k = k % 26\n        lastc = chr(k + ord(r[-1]))\n        r = r[:-1] + lastc\n    print(r)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12310": {
    "id": 12310,
    "code": "S = \"atcoder\"\nsize=len(S)\ndef palin(S,size):\n    for i  in range (size//2):\n        if S[i]!=S[-1-i]:\n            return False\n    return True\nif palin(S,size) == True:\n    L=S[:size//2]\n    R=S[size//2+2:]\n    if palin(L,size//2) & palin(L,size//2):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "4075": {
    "id": 4075,
    "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    t1 = 60*H1 + M1\n    t2 = 60*H2 + M2\n    d = 0\n    if t1 <= t2:\n        d = t2 - t1\n    else:\n        d = 60*24 - t1 + t2\n    print(max(0, d - K))\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "14127": {
    "id": 14127,
    "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ndef f():\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            state = 0\n            break\n        if A[i-1] > A[i]:\n            state = 1\n            break\n    else:\n        print(1)\n        return\n    cnt = 1\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            if state == 1:\n                state = 2\n                cnt += 1\n            else:\n                state = 0\n        if A[i-1] > A[i]:\n            if state == 0:\n                state = 2\n                cnt += 1\n            else:\n                state = 1\n    print(cnt)\nf()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "10891": {
    "id": 10891,
    "code": "def is_palindrome(s):\n    return s == s[::-1]\ndef main():\n    s = \"-atcoder\"\n    n = len(s) - 1\n    if (\n        is_palindrome(s[1:])\n        and is_palindrome(s[1 : (n - 1) // 2 + 1])\n        and is_palindrome(s[(n + 3) // 2 : n + 1])\n    ):\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "17383": {
    "id": 17383,
    "code": "def m(s):\n  return True if 1 <= int(s) <= 12 else False\ns = \"0112\"\nf = int(s[:2])\nl = int(s[2:])\nif m(f) and m(l):\n  print(\"AMBIGUOUS\")\nelif m(f):\n  print(\"MMYY\")\nelif m(l):\n  print(\"YYMM\")\nelse:\n  print(\"NA\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "9467": {
    "id": 9467,
    "code": "import sys\ndef LS2(): return list(\"2017/01/31\".rstrip())  \nS = LS2()\nS[3] = '8'\nprint(\"\".join(S))",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "9969": {
    "id": 9969,
    "code": "N = 6\nS = ')))())'\nN = int(\"6\")\nS = \")))())\"\ndef calculate(n, str):\n    finalStr = ''\n    while True:\n        point = 0\n        remainStr = ''\n        for i in range(len(str)):\n            if i > 0:\n                if (str[i-1] == '(') and (str[i] == ')'):\n                    point += 1\n                    continue\n            if i < (n - 1):\n                if (str[i] == '(') and (str[i+1] == ')'):\n                    point += 1\n                    continue\n            remainStr += str[i]\n        str = remainStr\n        n = len(str)\n        if point == 0:\n            finalStr = remainStr\n            return finalStr\n            break\nres = calculate(N, S)\nfor i in range(len(res)):\n    if res[i] == '(':\n        S = S + ')'\n    if res[i] == ')':\n        S = '(' + S\nprint(S)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "14932": {
    "id": 14932,
    "code": "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\ndef main():\n    N = 2;P = 0\n    A = [1, 3]\n    num1 = 0\n    num0 = 0\n    for i in range(N):\n        tmp = A[i]%2\n        if tmp == 0:\n            num0 += 1\n        else:\n            num1 += 1\n    ans2 = 0\n    for i in range(num0+1):\n        ans2 += comb(num0,i)\n    if P == 1:\n        syo = num1//2\n        amari = num1%2\n        tmp = syo + amari\n        i = 1\n        ans = 0\n        for j in range(tmp):\n            ans += comb(num1,i)\n            i += 2\n        ans = ans*ans2\n        return ans\n    else:\n        syo = num1//2\n        tmp = syo+1\n        i = 0\n        ans = 0\n        for j in range(tmp):\n            if i == 0:\n                ans += 1\n                i += 2\n            else:\n                ans += comb(num1,i)\n                i += 2\n        ans = ans*ans2\n        return ans\nprint(main())",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16493": {
    "id": 16493,
    "code": "import bisect\nN = 5\nARR = [6, 9, 4, 2, 11]\nN = 2\nARR = [100, 0]\nN = 5\nARR = [6, 9, 4, 2, 11]\ndef calculate(n, arr):\n    arr = sorted(arr)\n    mid = arr[n - 1] / 2\n    a1 = bisect.bisect_left(arr, mid)\n    s1 = abs(arr[a1 - 1] - (arr[n - 1] / 2))\n    s2 = abs(arr[a1] - (arr[n - 1] / 2))\n    if s1 > s2:\n        return arr[n - 1],arr[a1]\n    else:\n        return arr[n-1],arr[a1-1]\nn, a = calculate(N, ARR)\nprint(n, a)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "16974": {
    "id": 16974,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    a = \"H\";b = \"H\"\n    if a == \"H\":\n        print(\"H\" if b == \"H\" else \"D\")\n    else:\n        print(\"D\" if b == \"H\" else \"H\")\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "11132": {
    "id": 11132,
    "code": "S = \"atcoder\"\nN = len(S)\ndef isp(s):\n  n = len(s)\n  for i in range(n // 2):\n    if s[i] != s[n - 1 - i]:\n      return False\n  return True\nif isp(S) and isp(S[0:(N - 1) // 2]):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">"]
  },
  "10300": {
    "id": 10300,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 8\n    S = \"))))((((\"\n    L = 0\n    R = 0\n    for s in S:\n        if s == \"(\":\n            R += 1\n        else:\n            if R > 0:\n                R -= 1\n            else:\n                L += 1\n    ans = \"\".join([\"(\" * L, S, \")\" * R])\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12348": {
    "id": 12348,
    "code": "def is_kaibun(string):\n    for i in range((len(string)//2)+1):\n        if string[i] != string[len(string)-i-1]:\n            return False\n    else:\n        return True\nS = \"akasaka\"\nif is_kaibun(S) and is_kaibun(S[0:(len(S)-1)//2]) and is_kaibun(S[((len(S)+3)//2)-1:len(S)]):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!"]
  },
  "18721": {
    "id": 18721,
    "code": "def solve():\n  H = 3\n  W = 7\n  N = 10\n  ans = -(-N//max(H,W))\n  return ans\nprint(solve())",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1204": {
    "id": 1204,
    "code": "import sys\nimport math\nimport itertools\ndef input():\n    return \"750\".rstrip()\ndef main():\n    N = 750\n    d,m = divmod(N-1,111)\n    print((d+1)*111)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]
  },
  "240": {
    "id": 240,
    "code": "import sys\nfrom string import ascii_lowercase as AL\ninput = sys.stdin.readline\ndef main():\n    S = \"a\"\n    K = 25\n    N = len(S)\n    T = [s for s in S]\n    for i in range(N):\n        if T[i] == \"a\":\n            continue\n        idx = AL.index(T[i])\n        if 26 - idx <= K:\n            K -= (26 - idx)\n            T[i] = \"a\"\n    _, r = divmod(K, 26)\n    T[-1] = AL[AL.index(T[-1]) + r]\n    ans = \"\".join(T)\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "15035": {
    "id": 15035,
    "code": "from collections import Counter\nfrom functools import reduce\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(lambda x, y: x * y, range(n, n - r, -1), 1)\n    denom = reduce(lambda x, y: x * y, range(1, r + 1), 1)\n    return numer // denom\nN = 1;P = 1\nA = Counter(map(lambda x: int(x) % 2, \"50\".split()))\ne = A.get(0, 0)\no = A.get(1, 0)\nans = 2 ** e\nif P:\n    if o == 0:\n        print(0)\n    else:\n        ans *= sum(ncr(o, i) for i in range(1, o + 1) if i % 2)\n        print(ans)\nelse:\n    ans *= sum(ncr(o, i) for i in range(o + 1) if i % 2 == 0)\n    print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "6231": {
    "id": 6231,
    "code": "def main():\n  n = 2\n  la = [1, 5]\n  lb = [2, 4]\n  lc = [3, 6]\n  la.sort(), lb.sort(), lc.sort()\n  i = 0\n  ab = []\n  for b in lb:\n    while i < n and la[i] < b:\n      i += 1\n    ab.append(i)\n  i = 0\n  bc = []\n  for c in lc:\n    while i < n and lb[i] < c:\n      i += 1\n    bc.append(i)\n  ans = 0\n  cs = [0]\n  for x in ab:\n    cs.append(cs[-1] + x)\n  for y in bc:\n    ans += cs[y]\n  print(ans)\nif __name__=='__main__':\n  main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12602": {
    "id": 12602,
    "code": "a = 100;b = 50;k = 4\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na_y = set(make_divisors(a))\nb_y = set(make_divisors(b))\ny = list(a_y & b_y)\ny.sort(reverse=True)\nprint(y[k-1])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "4841": {
    "id": 4841,
    "code": "def resolve():\n    S = \"smiles\"\n    cnt = len(S[1:-1])\n    print(\"{}{}{}\".format(S[0], cnt, S[-1]))\nif '__main__' == __name__:\n    resolve()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "7673": {
    "id": 7673,
    "code": "H = 10;N = 3\nA = [4, 5, 6]\ndef answer(H: int, N: int, A: list) -> str:\n    damage = 0                          \n    for i in range(0, N):               \n        damage += int(A[i])             \n        i += 1                          \n    if damage < H:\n        return 'No'\n    else:\n        return 'Yes'\nprint(answer(H, N, A))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "2359": {
    "id": 2359,
    "code": "import math\ndef combi(n,r):\n  ans = math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n  return ans\nN = 2;M = 1\nans = 0\nif N > 1:\n  ans += combi(N,2)\nif M > 1:\n  ans += combi(M,2)\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "10086": {
    "id": 10086,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 6\n    S = \")))())\"\n    ans = \"\"\n    n_left = 0\n    n_right = 0\n    for s in S:\n        if s == \"(\":\n            n_left += 1\n        else:\n            if n_left > 0:\n                n_left -= 1\n            else:\n                n_right += 1\n    ans = \"\".join((\"(\" * n_right, S, \")\" * n_left))\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8322": {
    "id": 8322,
    "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "15126": {
    "id": 15126,
    "code": "import math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nn = 2;p = 0\na = [1, 1]\nz=a.count(0)\no=a.count(1)\nonum=0\nif p:\n  i=1\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nelse:\n  i=0\n  while i<=o:\n    onum+=combinations_count(o, i)\n    i+=2\nprint((2**z)*onum)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10169": {
    "id": 10169,
    "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    N = 3\n    S = \"())\"\n    right=0\n    left=0\n    for i in range(N):\n        if S[i]=='(':\n            right+=1\n        else:\n            if right:\n                right-=1\n            else:\n                left+=1\n    print(left*'('+S+right*')')\nif __name__=='__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1231": {
    "id": 1231,
    "code": "import sys\ndef input(): return \"750\".strip()\ndef resolve():\n    def main():\n        n = 750\n        x=999-n\n        if str(n)[0]==str(n)[1]==str(n)[2]:\n            return n\n        for i in range(x+1):\n            n+=1\n            if str(n)[0]==str(n)[1]==str(n)[2]:\n                return n\n    print(main())\nresolve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "17909": {
    "id": 17909,
    "code": "def main():\n    s = \"1700\"\n    if (int(s[:2]) > 12 or int(s[:2]) == 0)and (int(s[2:4]) >= 1 and int(s[2:4]) <= 12) :\n        print(\"YYMM\")\n    elif (int(s[2:4]) > 12 or int(s[2:4]) == 0) and (int(s[:2]) >=1 and int(s[:2]) <=12) :\n        print(\"MMYY\")\n    elif (int(s[:2]) >= 1 and int(s[:2])) <= 12 and (int(s[2:4]) >=1 and int(s[2:4]) <= 12) :\n        print(\"AMBIGUOUS\")\n    else:\n        print(\"NA\")\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", "!", ">", "!", ">", "!", "!", ">", ">", ">"]
  },
  "10190": {
    "id": 10190,
    "code": "def cin():  return list(map(int,\"3\".split()))\nN = cin()[0]\nS = \"())\"\ntmp = S[::]\nfor i in range(100): tmp = tmp.replace(\"()\", \"\")\ncnt1 = 0\ncnt2 = 0\nfor i in range(len(tmp)):\n    if tmp[i] == '(': cnt1 += 1\n    else: cnt2 += 1\nans = S[::]\nans = \"(\" * cnt2 + S + ')' * cnt1;\nprint(ans);",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3497": {
    "id": 3497,
    "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 20;b = 15\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "3531": {
    "id": 3531,
    "code": "def resolve():\n    A = 20;B = 30\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "16469": {
    "id": 16469,
    "code": "import bisect\nimport sys\ndef main(args):\n    n = 2\n    A = [100, 0]\n    A.sort()\n    ans = [max(A), 0]\n    ind = bisect.bisect_left(A ,ans[0]//2)\n    if A[ind] == ans[0]//2:\n        ans[1] = ans[0]//2\n    else:\n        r1 = min(A[ind],ans[0]-A[ind])\n        r2 = min(A[ind-1],ans[0]-A[ind-1])\n        if r1 > r2:\n            ans[1] = A[ind]\n        else:\n            ans[1] = A[ind-1]\n    print(*ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3858": {
    "id": 3858,
    "code": "def main():\n    X = 12;Y = 3;Z = 1\n    print((X - Z) // (Y + Z))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10432": {
    "id": 10432,
    "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 1;b = 1;k = 1\n    cnt = 0\n    for i in range(min(a,b), 0, -1):\n        if a%i==0 and b%i==0:\n            cnt += 1\n        if cnt == k:\n            print(i)\n            return\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11095": {
    "id": 11095,
    "code": "s = \"akasaka\"\nn=len(s)\ns1=s[:(n-1)//2]\ns2=s[(n+3)//2-1:]\ndef check(s):\n  i=0\n  j=len(s)-1\n  while j>i:\n    if s[j]!=s[i]:\n      return False\n    j-=1\n    i+=1\n  return True\nif check(s) and check(s1) and check(s2):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "8069": {
    "id": 8069,
    "code": "import sys\ndef main():\n    N = 4;K = 3\n    a = [2, 3, 1, 4]\n    answer = 0\n    for i in range(N):\n        if K + (i-1)*(K-1) >= N:\n            answer = i\n            break\n    print(answer)\n    return\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1711": {
    "id": 1711,
    "code": "def main():\n    N = 100;A = 100;B = 100\n    max_v = min(A, B)\n    min_v = max(0, A+B-N)\n    print(\" \".join(map(str, [max_v, min_v])))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10895": {
    "id": 10895,
    "code": "S = \"akasaka\"\nN=len(S)\nM=(N-1)//2\ndef iskaibun(T):\n    K=len(T)\n    for i in range(K):\n        if T[i]==T[-i-1]:\n            pass\n        else:\n            return False\n    return True\nif iskaibun(S) and iskaibun(S[:M]) and iskaibun(S[M+1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "11179": {
    "id": 11179,
    "code": "def main():\n    S = ['l', 'e', 'v', 'e', 'l']\n    N = len(S)\n    if S != list(reversed(S)):\n        print(\"No\")\n    elif S[:int((N-1)/2)] != list(reversed(S[:int((N-1)/2)])):\n        print(\"No\")\n    elif S[int((N+3)/2) - 1:] != list(reversed(S[int((N+3)/2) - 1:])):\n        print(\"No\")\n    else:\n        print(\"Yes\")\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "19400": {
    "id": 19400,
    "code": "n = 3\ndef getmdc(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef mmc2(x):\n    return x * 2 // getmdc(x, 2)\nprint(mmc2(n))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10405": {
    "id": 10405,
    "code": "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndef main():\n    a = 100;b = 50;k = 4\n    from math import gcd\n    y = make_divisors(gcd(a,b))\n    print(y[-k])\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12703": {
    "id": 12703,
    "code": "def ya(boo):\n  if boo:\n    print(\"Yes\")\n  else:\n    print(\"No\")\ndef yay(boo):\n  if boo:\n    print(\"YES\")\n  else:\n    print(\"NO\")\nyay(\"6\" in \"753\")",
    "coverage": [">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">"]
  },
  "9351": {
    "id": 9351,
    "code": "def main():\n   s = ['2', '0', '1', '7', '/', '0', '1', '/', '3', '1']\n   s[:4] = ['2','0','1','8']\n   print(''.join(s))\nmain()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "14640": {
    "id": 14640,
    "code": "def ncr(n, r):\n    if n < r: return 0\n    r = min(r, n - r)\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + i + 1 for i in range(r)]\n    denominator = [i + 1 for i in range(r)]\n    for p in range(2, r + 1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p - 1, r, p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= numerator[k]\n    return int(result)\nn = 1;p = 1\na = [50]\ndic = {'odd': 0, 'even': 0}\nfor i in a:\n    if i % 2 == 0:\n        dic['even'] += 1\n    else:\n        dic['odd'] += 1\neven = 0\nodd = 0\nfor i in range(dic['even'] + 1):\n    even += ncr(dic['even'], i)\nif p == 0:\n    for i in range(0, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nelse:\n    for i in range(1, dic['odd'] + 1, 2):\n        odd += ncr(dic['odd'], i)\nprint(odd * even)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      "!",
      ">"
    ]
  },
  "3747": {
    "id": 3747,
    "code": "def resolve():\n    x = 13;y = 3;z = 1\n    x -= z\n    count = 0\n    while True:\n        x = x-(y+z)\n        if x >= 0:\n            count += 1\n        else:\n            break\n    print(count)\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]
  },
  "16153": {
    "id": 16153,
    "code": "def getval():\n    n = 2\n    a = [100, 0]\n    return n,a\ndef main(n,a):\n    a.sort()\n    c = a[n-1]\n    R = c/2\n    r = 0\n    for i in a:\n        if abs(R-i)<abs(R-r):\n            r = i \n    print(\"{x} {y}\".format(x=c,y=r))\nif __name__==\"__main__\":\n    n,a = getval()\n    main(n,a)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8024": {
    "id": 8024,
    "code": "def waru(a,b):\n  if a%b==0:\n    return a//b\n  else:\n    return (a//b)+1\nN = 4;K = 3\nL = [2, 3, 1, 4]\nmina=min(L)\nind=list()\nR=[0]*N\nfor i in range(N):\n  if L[i]==mina:\n    ind.append(i)\n    R[i]+=1\nfor i in range(1,N):\n  R[i]=R[i-1]+R[i]\ns=ind[0]\na=waru(s,K-1)\nb=(a*(K-1))-s\nsusumi=b+s+1\nwhile True:\n  if susumi>=N:\n    print(a)\n    break\n  if R[min(susumi+K,N-1)]-R[susumi]>0:\n    susumi+=K\n    a+=1\n  else:\n    susumi+=K-1\n    a+=1",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "15012": {
    "id": 15012,
    "code": "import math\nn = 1;p = 1\nls = [50]\nlo = []\nle = []\ndef combinations_count(n, r): \n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor i in ls:\n    if i % 2 == 0:\n        le.append(i)\n    else:\n        lo.append(i)\nx = len(lo)\ny = len(le)\nif p == 0:\n    a = 1\n    if x != 0:\n        if x % 2 == 0:\n            r = x\n        else:\n            r = x - 1\n        a = 0\n        for j in range(0,r+1,2):\n            a += combinations_count(x, j)\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)\nelse:\n    if x != 0:\n        if x % 2 == 0:\n            r = x - 1\n        else:\n            r = x\n        a = 0\n        for j in range(1,r+1,2):\n            a += combinations_count(x, j)\n    else:\n        a = 0\n    b = 1\n    if y != 0:\n        b = 0\n        for k in range(y+1):\n            b += combinations_count(y, k)\n    print(a*b)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16601": {
    "id": 16601,
    "code": "def main():\n    a = \"D\";b = \"D\"\n    if a == 'H':\n        if b == 'H':\n            print('H')\n        else:\n            print('D')\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "15304": {
    "id": 15304,
    "code": "def main():\n    X = 12;Y = 3;Z = 1\n    print((X-Z)//(Y+Z))\nmain()",
    "coverage": [">", ">", ">", ">"]
  },
  "15542": {
    "id": 15542,
    "code": "def ABC_78_B():\n    X = 12;Y = 3;Z = 1\n    sum=0\n    N=0\n    while sum<= X:\n        sum = Y*N+Z*(N+1)\n        N+=1  \n    print(N-2)\nif __name__ == '__main__':\n    ABC_78_B()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "19194": {
    "id": 19194,
    "code": "import sys\ndef solve(N):\n    if N % 2:\n        return 0\n    ans, d = 0, 10\n    while True:\n        q = N // d\n        ans += q\n        if q == 0:\n            return ans\n        d *= 5\ndef main(args):\n    N = 12\n    ans = solve(N)\n    print(ans)\nif __name__ == '__main__':\n    main(sys.argv[1:])",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13306": {
    "id": 13306,
    "code": "import sys\ns = \"abcde,fghihgf,edcba\"\ndef main():\n    t = s.replace(',', ' ')\n    print(t)\nif __name__ ==  '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "13469": {
    "id": 13469,
    "code": "def resolve():\n    s = \"happy,newyear,enjoy\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()",
    "coverage": [">", ">", ">", ">"]
  },
  "4896": {
    "id": 4896,
    "code": "def resolve():\n    n = \"xyz\"\n    i = len(n) -2\n    print(n[0] + str(i) + n[-1])\nresolve()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "14645": {
    "id": 14645,
    "code": "def m():\n    N = 2;P = 0\n    A = [1, 3]\n    Even = [a for a in A if a % 2 == 0]\n    Odd = [a for a in A if a % 2 == 1]\n    if P == 1 and len(Odd) == 0:\n        return 0\n    if len(Odd) == 0:\n        return pow(2, len(Even))\n    else:\n        return pow(2, N-1)\nprint(m())",
    "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">"]
  },
  "15316": {
    "id": 15316,
    "code": "import math\ndef main():\n  x = 64146;y = 123;z = 456\n  print(int((x-z)/(y+z)))\nmain()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10695": {
    "id": 10695,
    "code": "s = \"level\"\nn = len(s)\ndef palindrome(s):\n    ret = True\n    for i in range(len(s)//2):\n        if s[i] != s[-i-1]:\n            ret = False\n            break\n    return ret\ncheck_1 = palindrome(s)\ncheck_2 = palindrome(s[:(n)//2])\ncheck_3 = palindrome(s[(n+2)//2:])\nif check_1 and check_2 and check_3:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "7871": {
    "id": 7871,
    "code": "import math\ndef main():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    index_one = A.index(1)\n    min_cnt = N\n    for left_index in range(index_one - (K - 1), index_one + 1):\n        right_index = left_index + (K - 1)\n        if left_index < 0 or right_index > N - 1:\n            continue\n        cnt = 1 + math.ceil(left_index / (K - 1)) + math.ceil((N - 1 - right_index) / (K - 1))\n        min_cnt = min([min_cnt, cnt])\n    print(min_cnt)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "410": {
    "id": 410,
    "code": "def main():\n    s = ['x', 'y', 'z']\n    k = 4\n    i=0\n    while k>=0 and i<len(s)-1:\n        if s[i]!='a' and k>=123-ord(s[i]):\n            k-=123-ord(s[i])\n            s[i]=\"a\"\n        i+=1\n    if i==len(s)-1:\n        s[-1]=chr(97+(k-(123-ord(s[i])))%26)\n    print(\"\".join(s))\nif __name__==\"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "15208": {
    "id": 15208,
    "code": "X = 12;Y = 3;Z = 1\ndef is_ok(key):\n    if key * Y + (key + 1) * Z <= X:\n        return True\n    else:\n        return False\ndef binary_search():\n    ok = 0\n    ng = 3000001\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if is_ok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\nprint(binary_search())",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "13851": {
    "id": 13851,
    "code": "def nyu():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    return N,A\ndef kansu(LN,LA):\n    highflg = False\n    lowflg = False\n    count = 1\n    for n in range(LN-1):\n        if LA[n] == LA[n+1]:\n            continue\n        elif LA[n] < LA[n+1]:\n            highflg = True\n            if lowflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n        else:\n            lowflg = True\n            if highflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n    print(count)\nN,A = nyu()\nkansu(N,A)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12053": {
    "id": 12053,
    "code": "def mainFunc():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    ans = '1' if m1 != m2 else '0'\n    print(ans)\nmainFunc()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "4895": {
    "id": 4895,
    "code": "def resolve():\n    n = \"smiles\"\n    i = len(n) -2\n    print(n[0] + str(i) + n[-1])\nresolve()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "17492": {
    "id": 17492,
    "code": "import sys\ndef LI2(): return list(map(int,\"1700\".rstrip()))  \nS = LI2()\na = 10*S[0]+S[1]\nb = 10*S[2]+S[3]\nif 1 <= a <= 12 and 1 <= b <= 12:\n    print('AMBIGUOUS')\nelif not 1 <= a <= 12:\n    if 1 <= b <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nelse:\n    print('MMYY')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      "!",
      "!"
    ]
  },
  "15136": {
    "id": 15136,
    "code": "from math import factorial as fa\ndef comb(n, r):\n    return fa(n)//(fa(n-r)*fa(r))\nn = 1;p = 1\nA = [0]\neven = A.count(0)\nodd = A.count(1)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i)\nprint(ans*pow(2,even))",
    "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">"]
  },
  "1707": {
    "id": 1707,
    "code": "import sys\ndef main():\n    raw = ['10', '7', '5']\n    n = int(raw[0])\n    a = int(raw[1])\n    b = int(raw[2])\n    def get_max():\n        return min(a, b)\n    def get_min():\n        return max(a + b - n, 0)\n    print(\"{} {}\".format(get_max(), get_min()))\nif __name__ == \"__main__\":\n    argv = sys.argv[1:]\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5470": {
    "id": 5470,
    "code": "def A():\n    n = 5\n    print(-(-n//2))\nA()",
    "coverage": [">", ">", ">", ">"]
  },
  "4774": {
    "id": 4774,
    "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nimport itertools\nINF = float('inf')\nfrom heapq import heapify, heappop, heappush\ndef main():\n    S = \"internationalization\"\n    print(S[0] + str(len(S)-2) +S[-1])\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16415": {
    "id": 16415,
    "code": "def main():\n  n = 2\n  a = [100, 0]\n  a = sorted(a)\n  a_i = a[-1]\n  a_j = 0\n  dist = a_i\n  for i in range(len(a)-1):\n    if abs(a_i/2-a[i]) < dist:\n      a_j = a[i]\n      dist = abs(a_i/2-a[i])\n  print(a_i, a_j)\nif __name__ == \"__main__\":\n  main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11978": {
    "id": 11978,
    "code": "def main():\n    m1 = 11;d1 = 16\n    m2 = 11;d2 = 17\n    if m1 != m2:\n        print('1')\n    else:\n        print('0')\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "15027": {
    "id": 15027,
    "code": "import collections\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = 3;P = 0\nA = [1, 1, 1]\nH = [i%2 for i in A]\nB = collections.Counter(H)[1]\nans = 0\nfor i in range(1,B//2+1):\n    ans += combinations_count(B, 2*i)\nC = (ans+1) * (2**(len(A)-B))\nprint(C if P == 0 else 2**N - C)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "6558": {
    "id": 6558,
    "code": "def main():\n    N = 6\n    a = [3, 14, 159, 2, 6, 53]\n    b = [58, 9, 79, 323, 84, 6]\n    c = [2643, 383, 2, 79, 50, 288]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11667": {
    "id": 11667,
    "code": "def cantwaitforholiday(s):\n    days = {\"SUN\": 7, \"MON\": 6, \"TUE\": 5, \"WED\": 4, \"THU\": 3, \"FRI\": 2, \"SAT\": 1}\n    return days[s]\ndef main():\n    s = \"SUN\"\n    print(cantwaitforholiday(s))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "2928": {
    "id": 2928,
    "code": "def main():\n    s = \"1234567876\"\n    n = len(s)\n    min_diff = 1000\n    for i in range(n - 2):\n        diff = abs(int(s[i: i+3]) - 753)\n        if diff < min_diff:\n            min_diff = diff\n    print(min_diff)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "6089": {
    "id": 6089,
    "code": "def main():\n    n = 2\n    print((n+1)//2)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "2951": {
    "id": 2951,
    "code": "import sys\ndef input():\n    return \"1111111111\".rstrip()\ndef main():\n    S = \"1111111111\"\n    prime =753\n    ans =1000\n    for i in range(len(S)-2):\n        ans =min(ans, abs(prime-int(S[i:i+3])))\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "12996": {
    "id": 12996,
    "code": "def main():\n  n = 5\n  ans = 0\n  count = 0\n  lis = []\n  if n == 7 or n == 5 or n == 3:\n    print(\"YES\")\n  else:\n    print(\"NO\")\nif __name__ == '__main__':\n  main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "13708": {
    "id": 13708,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    h = H2 - H1\n    m = M2 - M1\n    print(max(0, h * 60 + m - K))\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8361": {
    "id": 8361,
    "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 4\n  U = [1, 1, 1, 1]\n  L = [1, 1, 1, 1]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14817": {
    "id": 14817,
    "code": "from functools import lru_cache\n@lru_cache(maxsize=None)\ndef kaijou(n):\n    if n <= 1:\n        return 1\n    return kaijou(n-1)*n\nn = 2;p = 0\neven = 0\nodd = 0\nans = 0\nfor i in map(int,\"1 3\".split()):\n    if i % 2 == 0:\n        even += 1\n    else:\n        odd += 1\nif p == 0:\n    eveng = 0\n    for j in range(0,odd+1,2):\n        if j > odd:\n            break\n        eveng += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*eveng)\nelse:\n    oddg = 0\n    for j in range(1,odd+1,2):\n        if j > odd:\n            break\n        oddg += kaijou(odd)/kaijou(odd-j)/kaijou(j)\n    ans = int((2**even)*oddg)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "14463": {
    "id": 14463,
    "code": "def solve():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 0\n    cur = []\n    flag = None\n    for a in A:\n        if not cur:\n            cur.append(a)\n            continue\n        elif cur[-1] == a:\n            cur.append(a)\n        elif flag is None:\n            if cur[-1] > a:\n                flag = False\n            elif cur[-1] < a:\n                flag = True\n            cur.append(a)\n            continue\n        elif flag:  \n            if cur[-1] > a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n        elif not flag:  \n            if cur[-1] < a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n    if cur:\n        ans += 1\n    print(ans)\nsolve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16055": {
    "id": 16055,
    "code": "def main():\n    a = 12;b = 4\n    ans = a - 2*b\n    ans = 0 if ans < 0 else ans \n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "2243": {
    "id": 2243,
    "code": "def resolve():\n    N = 10;A = 7;B = 5\n    print(min(A, B), max(0, A+B-N))\nresolve()",
    "coverage": [">", ">", ">", ">"]
  },
  "10802": {
    "id": 10802,
    "code": "def kaibun(moji):\n    n = len(moji)\n    for i in range(0,int(n/2)):\n        if s[i]!=s[n-1-i]:\n            return False\n    return True\ns = \"akasaka\"\nn = len(s)\nmoji1 = int((n - 1) / 2)\nmoji2 = int((n + 3) / 2)\nif kaibun(s) and kaibun(s[:moji1]) and kaibun(s[moji2-1:]):\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "6990": {
    "id": 6990,
    "code": "H = 211;N = 5\nA = [31, 41, 59, 26, 53]\ndef battle(a,n):\n  ans = 0\n  for i in range(n):\n    ans += a[i]\n  return ans\nif H <= battle(A,N):\n  print(\"Yes\")\nelse:\n  print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14802": {
    "id": 14802,
    "code": "import sys\nimport math\nN = 2;P = 0\nA = map(int, \"1 3\".strip().split())\ndef nCr(n, r):\n    return math.factorial(n) // math.factorial(n - r) // math.factorial(r)\nevens = 0\nodds = 0\nfor a_i in A:\n    if a_i % 2 == 0:\n        evens += 1\n    else:\n        odds += 1\nif P == 0:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(0, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nelse:\n    ans = 2**(evens)\n    tmp = 0\n    for i in range(1, odds+1, 2):\n        tmp += nCr(odds, i)\n    ans *= tmp\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "5383": {
    "id": 5383,
    "code": "import sys\nfrom math import ceil\ndef main():\n    input = sys.stdin.buffer.readline\n    n = 5\n    print(ceil(n / 2))\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7710": {
    "id": 7710,
    "code": "def resolve():\n    import math\n    N = 3;K = 3\n    A = [1, 2, 3]\n    print(math.ceil((N-1)/(K-1)))\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "5904": {
    "id": 5904,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 100\n    return (N//2) + N % 2\nif __name__ == \"__main__\":\n    print(main())",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "15836": {
    "id": 15836,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    X = 100000;Y = 1;Z = 1\n    ans = (X - Z) // (Y + Z)\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "17788": {
    "id": 17788,
    "code": "def main():\n    S = \"1700\"\n    v1 = int(S[:2])\n    v2 = int(S[2:])\n    if 1 <= v1 <= 12 and 1 <= v2 <= 12:\n        print(\"AMBIGUOUS\")\n    elif 1 <= v1 <= 12 and (v2 >= 13 or v2 == 0):\n        print(\"MMYY\")\n    elif (v1 >= 13 or v1 == 0) and 1 <= v2 <= 12:\n        print(\"YYMM\")\n    else:\n        print(\"NA\")\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "3716": {
    "id": 3716,
    "code": "def main():\n    A = 20;B = 30\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "12473": {
    "id": 12473,
    "code": "def isPalindrome(st):\n    l = len(st)\n    c = l//2\n    if l%2 == 1:\n        return st[:c] == st[c+1:][::-1]\n    else:\n        return st[:c] == st[c:][::-1]\nS = \"level\"\nN = len(S)\nif isPalindrome(S) and isPalindrome(S[:(N-1)//2]) and isPalindrome(S[(N+3)//2 - 1:]):\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "7186": {
    "id": 7186,
    "code": "def answer(h: int, n: int, a: []) -> str:\n    return 'Yes' if h <= sum(a) else 'No'\ndef main():\n    h = 20;n = 3\n    a = map(int, \"4 5 6\".split())\n    print(answer(h, n, a))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8518": {
    "id": 8518,
    "code": "def main():\n    n = 5\n    a1lis = [3, 2, 2, 4, 1]\n    a2lis = [1, 2, 2, 2, 1]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12010": {
    "id": 12010,
    "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    m1 = 11;d1 = 30\n    m2 = 12;d2 = 1\n    print(1 if d2 == 1 else 0)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18144": {
    "id": 18144,
    "code": "def main():\n    S = \"0112\"\n    listS = [int(S[:2]), int(S[2:])]\n    if 1 <= listS[0] <= 12 and 1 <= listS[1] <= 12:\n        ans = 'AMBIGUOUS'\n    elif 1 <= listS[0] <= 12:\n        ans = 'MMYY'\n    elif 1 <= listS[1] <= 12:\n        ans = 'YYMM'\n    else:\n        ans = 'NA'\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "15028": {
    "id": 15028,
    "code": "def fact(n):\n  a = 1\n  for i in range(2, n+1):\n    a *= i\n  return a\ndef comb(n, r):\n  return fact(n) // fact(r) // fact(n-r)\nn = 2;p = 0\na = [1, 3]\nzero = 0\none = 0\nfor i in a:\n  if i % 2 == 0:\n    zero += 1\n  else:\n    one += 1\nif p == 0:\n  ans = 2 ** zero\n  c = 0\n  for i in range(0, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)\nelse:\n  ans = 2 ** zero\n  c = 0\n  for i in range(1, one+1, 2):\n    c += comb(one, i)\n  ans *= c\n  print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "10171": {
    "id": 10171,
    "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    N = 8\n    S = \"))))((((\"\n    right=0\n    left=0\n    for i in range(N):\n        if S[i]=='(':\n            right+=1\n        else:\n            if right:\n                right-=1\n            else:\n                left+=1\n    print(left*'('+S+right*')')\nif __name__=='__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10926": {
    "id": 10926,
    "code": "def palin(x):\n    if x == x[::-1]: return True\n    return False\na = \"akasaka\"\nn = len(a)\nif palin(a) and palin(a[:int((n-1)/2)]) and palin(a[int((n+3)/2)-1:]):\n    print(\"Yes\")\nelse: print(\"No\")",
    "coverage": [">", ">", "!", ">", ">", ">", ">", "!"]
  },
  "1840": {
    "id": 1840,
    "code": "import sys\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nint1 = lambda x: int(x) - 1\ndef main():\n    n = 10;a = 3;b = 5\n    mx=min(a,b)\n    mn=max(a+b-n,0)\n    print(mx,mn)\nmain()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "7121": {
    "id": 7121,
    "code": "H = 210;N = 5\nspecial_move = ['31', '41', '59', '26', '53']\ndef answer(H: int, N: int, special_move: list) -> str:\n    damage = 0\n    for i in range(0, N):\n        damage += int(special_move[i])\n    if damage >= H:\n        return 'Yes'\n    else:\n        return 'No'\nprint(answer(H, N, special_move))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "11090": {
    "id": 11090,
    "code": "s = \"level\"\ndef is_palinedrome(st):\n    for i in range(len(st)//2):\n        if st[i] != st[-(i+1)]:\n            return False\n    return True\ns_pali = is_palinedrome(s)\nsub_pali_left = is_palinedrome(s[:len(s)//2])\nsub_pali_right = is_palinedrome(s[len(s)//2+1:])\nif s_pali and sub_pali_left and sub_pali_right:\n    print('Yes')\nelse:\n    print('No')",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "1914": {
    "id": 1914,
    "code": "import sys\ninput = sys.stdin.readline\ndef mi(): return map(int, \"100 100 100\".split())\nN, A, B = mi()\nans = [0,0]\nans[0] = min(A,B)\nans[1] = max(A+B-N,0)\nprint(ans[0], ans[1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "17790": {
    "id": 17790,
    "code": "def solve():\n    s = \"0112\"\n    front = int(s[:2])\n    back = int(s[2:])\n    if 1 <= front <= 12 and 1 <= back <= 12:\n        print('AMBIGUOUS')\n    elif 1 <= front <= 12:\n        print('MMYY')\n    elif 1 <= back <= 12:\n        print('YYMM')\n    else:\n        print('NA')\nif __name__ == '__main__':\n    solve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "2361": {
    "id": 2361,
    "code": "import math\ndef combi(n,r):\n  ans = math.factorial(n) // (math.factorial(n-r) * math.factorial(r))\n  return ans\nN = 1;M = 1\nans = 0\nif N > 1:\n  ans += combi(N,2)\nif M > 1:\n  ans += combi(M,2)\nprint(ans)",
    "coverage": [">", ">", "!", "!", ">", ">", ">", "!", ">", "!", ">"]
  },
  "10061": {
    "id": 10061,
    "code": "N = 6\nS = \")))())\"\nans1=0\nmaxans=0\ndef split(word): \n    return [char for char in word]  \ndef convert(s): \n    new = \"\" \n    for x in s: \n        new += x  \n    return new \nfor i in range(N):\n  if S[i]=='(':\n    ans1-=1\n  else:\n    ans1+=1\n    if ans1>maxans:\n      maxans=ans1\nans2=0\nminans=0\nfor i in range(N):\n  if S[N-1-i]==')':\n    ans2-=1\n  else:\n    ans2+=1\n    if ans2>minans:\n      minans=ans2\nr=split(S)\nfor i in range(minans):\n  r.append(')')\nr.reverse()\nfor i in range(maxans):\n  r.append('(')\nr.reverse()\nprint(convert(r))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3935": {
    "id": 3935,
    "code": "def resolve():\n    X = 12;Y = 3;Z = 1\n    ans = 0\n    while ans*Y+(ans+1)*Z <= X:\n        ans += 1\n    print(ans-1)\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "9035": {
    "id": 9035,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadline_s = sys.stdin.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    a = 15\n    b = 18\n    c = 26\n    d = 35\n    e = 36\n    k = 18\n    if abs(a - e) <= k:\n        ans = 'Yay!'\n    else:\n        ans = ':('\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14638": {
    "id": 14638,
    "code": "import random as rng\nimport itertools as it\nimport collections as col\nimport heapq as hq\nimport sys\nimport copy as cp\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\ndef dump_impl(*objects):\n    print(*objects, file=sys.stderr)\ndef dump_dummy(*objects):\n    pass\ndump = dump_impl if \"DEBUG\" in sys.argv else dump_dummy\ndef odd(n): return n & 1\ndef even(n): return not odd(n)\ndef comb(n, m):\n    r = 1\n    for i in range(1, n+1):\n        r *= i\n    for i in range(1, m+1):\n        r //= i\n    for i in range(1, n-m+1):\n        r //= i\n    return r\nN = 3;P = 0\nA = [1, 1, 1]\ncnt0 = len([a for a in A if a == 0])\ncnt1 = len([a for a in A if a == 1])\nans = 0\nif odd(P):\n    for i in range(cnt1 + 1):\n        if odd(i):\n            ans += comb(cnt1, i)\nelse:\n    for i in range(cnt1 + 1):\n        if even(i):\n            ans += comb(cnt1, i)\nans *= pow(2, cnt0)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13351": {
    "id": 13351,
    "code": "def resolve():\n  s = \"abcde,fghihgf,edcba\"\n  print(s.replace(',', ' '))\n  return\nif __name__ == \"__main__\":\n  resolve()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "1972": {
    "id": 1972,
    "code": "import sys\ndef input():\n    return \"100 100 100\"[:-1]\ndef main():\n    N = 100;A = 100;B = 10\n    MaxAns = min(A, B)\n    MinAns = 0\n    if N >= A + B:\n        pass\n    else:\n        MinAns = -(N - A - B)\n    print(MaxAns, MinAns)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11180": {
    "id": 11180,
    "code": "def main():\n    S = ['a', 't', 'c', 'o', 'd', 'e', 'r']\n    N = len(S)\n    if S != list(reversed(S)):\n        print(\"No\")\n    elif S[:int((N-1)/2)] != list(reversed(S[:int((N-1)/2)])):\n        print(\"No\")\n    elif S[int((N+3)/2) - 1:] != list(reversed(S[int((N+3)/2) - 1:])):\n        print(\"No\")\n    else:\n        print(\"Yes\")\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "8347": {
    "id": 8347,
    "code": "def main():\n    n = 1\n    A1 = [2]\n    A2 = [3]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "8608": {
    "id": 8608,
    "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 7\n    a1 = chain(tuple([0]), tuple(map(int, \"3 3 4 5 4 5 3\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"5 3 4 4 2 3 2\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "17062": {
    "id": 17062,
    "code": "def another(s):\n  if s == 'D':\n    return 'H'\n  else:\n    return 'D'\na = \"D\";b = \"H\"\nif a == 'H':\n  print(b)\nelse:\n  print(another(b))",
    "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]
  },
  "10667": {
    "id": 10667,
    "code": "def gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\na = 1;b = 1;k = 1\nr = gcd(a,b)\ne = []\nfor i in range(1,r+1):\n    if r%i == 0:\n        e.append(i)\nprint(e[len(e)-k])",
    "coverage": [">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "15976": {
    "id": 15976,
    "code": "import sys\ninput = sys.stdin.buffer.readline\nsys.setrecursionlimit(10**6)\nINF = float(\"inf\")\ndef main():\n    A = 20;B = 30\n    print(max(0, A-B*2))\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10678": {
    "id": 10678,
    "code": "def resolve():\n    A = 8;B = 12;K = 2\n    cnt = 0\n    i = max(A, B)\n    while True:\n        if A%i==0 and B%i==0:\n            cnt += 1\n            if cnt == K:\n                break\n        i -= 1\n    print(i)\nif '__main__' == __name__:\n    resolve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "6494": {
    "id": 6494,
    "code": "def resolve():\n    import bisect\n    n = 6\n    a = [2, 3, 6, 14, 53, 159]\n    b = [6, 9, 58, 79, 84, 323]\n    c = [2, 50, 79, 288, 383, 2643]\n    ans = 0\n    for i in range(n):\n        btest = b[i]\n        aind = bisect.bisect_left(a,btest)\n        cind = bisect.bisect_right(c, btest)\n        ans += aind * (len(c)-cind)\n    print(ans)\nresolve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16610": {
    "id": 16610,
    "code": "def main():\n    a = \"D\";b = \"D\"\n    ans = ''\n    if a == 'H':\n        ans = b\n    else:\n        ans = 'H' if b == 'D' else 'D'\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]
  },
  "11422": {
    "id": 11422,
    "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    s = \"SAT\"\n    ans = 0\n    if s == 'SUN':\n        ans = 7\n    elif s == 'MON':\n        ans = 6\n    elif s == 'TUE':\n        ans = 5\n    elif s == 'WED':\n        ans = 4\n    elif s == 'THU':\n        ans = 3\n    elif s == 'FRI':\n        ans = 2\n    elif s == 'SAT':\n        ans = 1\n    print(ans)\nif __name__ == '__main__':\n    solve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "630": {
    "id": 630,
    "code": "def resolve():\n    k = 2\n    x = 7 % k\n    for i in range(1, k + 1):\n        if x == 0:\n            print(i)\n            return\n        x = (x * 10 + 7) % k\n    print(-1)\nresolve()",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "196": {
    "id": 196,
    "code": "from string import ascii_lowercase\ns = \"a\"\nk = 25\ndef main(s, k):\n    alp = ascii_lowercase\n    num = {char: i for i, char in enumerate(alp)}\n    ns = [num[char] for char in s]\n    for i in range(len(ns)):\n        v = ns[i]\n        if v != 0 and 26 - v <= k:\n            ns[i] = 0\n            k -= 26 - v\n    ns[-1] = (ns[-1] + k) % 26\n    return ''.join(alp[n] for n in ns)\nprint(main(s, k))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "6329": {
    "id": 6329,
    "code": "def main():\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    A.sort()\n    B.sort()\n    C.sort()\n    Bdic = [0]*N\n    from bisect import bisect\n    from itertools import accumulate\n    for i, b in enumerate(B):\n        idx = bisect(C, b)\n        Bdic[i] = N - idx\n    Bacc = list(accumulate([b for b in Bdic + [0]][::-1]))[::-1]\n    ans = 0\n    for i, a in enumerate(A):\n        idx = bisect(B, a)\n        ans += (Bacc[idx])\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14124": {
    "id": 14124,
    "code": "def main():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11157": {
    "id": 11157,
    "code": "s = \"level\"\nn=len(s)\ns1=s[:(n-1)//2]\ns2=s[n+3//2:]\ndef ispalindrome(str):\n    if str==str[::-1]:\n        s1=s[:(n-1)//2]\n        if s1==s1[::-1]:\n            s2=s[n+3//2:]\n            if s2==s2[::-1]:\n                return 'Yes'\n            return 'No'\n        return 'No'\n    else:\n        return 'No'\nprint(ispalindrome(s))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "2871": {
    "id": 2871,
    "code": "def solve():\n    N = \"1111111111\"\n    target = 753\n    ans = 1000\n    for i in range(len(N)-2):\n        ans = min(ans, abs(753-int(N[i:i+3])))\n    print(ans)\nif __name__ == '__main__':\n    solve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "14514": {
    "id": 14514,
    "code": "def comb(n,k):\n    res = 1\n    for i in range(1,k+1):\n        res *= (n+1-i)\n        res //= i\n    return res\nn = 2;p = 0\na = [1, 3]\na = [ai % 2 for ai in a]\nodd, even = a.count(1), a.count(0)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i) * pow(2, even)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2008": {
    "id": 2008,
    "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"100 100 100\".strip()\ndef resolve():\n    n = 100;a = 100;b = 100\n    l=min(a,b)\n    if n>a+b:\n        r=0\n    else:\n        r=a+b-n\n    print(l,r)\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "18790": {
    "id": 18790,
    "code": "def main():\n    H = 3\n    W = 7\n    N = 10\n    ans = -(-N//max(H, W))\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "14613": {
    "id": 14613,
    "code": "import math\nN = 3;P = 0\nA = [1, 1, 1]\nremainders = [a%2 for a in A]\nodd = remainders.count(1)\neven = remainders.count(0)\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nans = 0\nfor n in range(N+1):\n  for p in range(P,n+1,2):\n    if odd >= p and even >= n-p:\n      ans += combinations_count(odd,p) * combinations_count(even,n-p)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10859": {
    "id": 10859,
    "code": "def main():\n    s = \"level\"\n    n = len(s)\n    for i in range(n//2):\n        if s[i] != s[n-1-i]:\n            print(\"No\")\n            return\n    s1 = s[:(n-1)//2]\n    s2 = s[(n+3)//2-1:]\n    n1 = len(s1)\n    for i in range(n//4):\n        if s1[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n        if s2[i] != s[n1-1-i]:\n            print(\"No\")\n            return\n    print(\"Yes\")\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "10589": {
    "id": 10589,
    "code": "A = 8;B = 12;K = 2\ndef divisor(n): \n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\nprint(sorted(list(set(divisor(A)) & set(divisor(B))), reverse=True)[K-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "1628": {
    "id": 1628,
    "code": "import sys\ndef r(n, a, b):\n    both_max = min(a, b)\n    if 0 < a + b - n:\n        both_min = a + b - n\n    else:\n        both_min = 0\n    print(both_max, both_min)\ndef main():\n    input = sys.stdin.readline\n    n = 10;a = 3;b = 5\n    r(n, a, b)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11406": {
    "id": 11406,
    "code": "def main():\n    S = \"SAT\"\n    lst = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"]\n    ans = 6 - lst.index(S)\n    if ans == 0:\n        ans = 7\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">"]
  },
  "11806": {
    "id": 11806,
    "code": "def main():\n    today = ['11', '16']\n    tomo = ['11', '17']\n    if today[0] == tomo[0]:\n        print(0)\n    else:\n        print(1)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "14792": {
    "id": 14792,
    "code": "N = 3;P = 0\nA = [1, 1, 1]\ndef comb(n, k):\n  ret = 1\n  for i in range(1, k+1):\n    ret = ret * (n+1-i) // i\n  return ret\nEven = 0\nOdd = 0\nfor a in A:\n  if a % 2 == 0:\n    Even += 1\n  else:\n    Odd += 1\nans = 0\nwhile P <= Odd:\n  ans += comb(Odd, P)\n  P += 2\nprint(ans * 2 ** Even)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12423": {
    "id": 12423,
    "code": "s = \"atcoder\"\nn = len(s)\ndef func():\n    if n == 3 and s[0] == s[2]:\n        return\"Yes\"\n    else:\n        a = 0\n        for i in range(n//2):\n            if s[i] == s[n - 1 - i]:\n                a += 1\n                if a == n//2:\n                    b = 0\n                    for j in range((n-1)//4):\n                        if s[j] == s[(n-1)//2 - 1 - j]:\n                            b += 1\n                            if b == (n-1)//4:\n                                c = 0\n                                for k in range((n - (n+3)//2 + 1)//2):\n                                    if s[(n+3)//2 - 1 + k] == s[n - 1 - k]:\n                                        c += 1\n                                        if c == (n - (n+3)//2 + 1)//2:\n                                            return \"Yes\"\n                        else:\n                            return \"No\"\n            else:\n                return \"No\"\nprint(func())",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "12541": {
    "id": 12541,
    "code": "from math import gcd\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\na = 8;b = 12;k = 2\nx = gcd(a, b)\nl = make_divisors(x)\nprint(l[-k])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "17714": {
    "id": 17714,
    "code": "YYMM = False\nMMYY = False\nf = \"1700\"\nh1 = f[0] + f[1]\nh2 = f[2] + f[3]\nif 1 <= int(h2) <= 12:\n  YYMM = True\nif 1 <= int(h1) <= 12:\n  MMYY = True\ndef ret(c1,c2):\n  if c1 and c2:\n    return \"AMBIGUOUS\"\n  elif c1:\n    return \"YYMM\"\n  elif c2:\n    return \"MMYY\"\n  else:\n    return \"NA\"\nprint(ret(YYMM,MMYY))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "16421": {
    "id": 16421,
    "code": "def main():\n    n = 2\n    a = [0, 100]\n    t = a[-1]\n    s = t/2\n    z = a[0]\n    for i in range(1,n-1):\n        if abs(a[i]-s)<abs(z-s):\n            z = a[i]\n    print(t,z)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "16230": {
    "id": 16230,
    "code": "def binary_search(A, target):\n  left = 0 \n  right = len(A)\n  while(3 <= right - left):\n    index = (left + right) // 2\n    if(A[index] < target):\n      left = index\n    else:\n      right = index + 1\n  return left\nN = 5\nA = [6, 9, 4, 2, 11]\nA.sort()\ntarget = A[N - 1] / 2\nif(target <= A[0]): ai = A[0]\nelif(A[N - 2] <= target): ai = A[N - 2]\nelse:\n  index = binary_search(A[:N - 1], target)\n  ai = A[index] if(abs(A[index] - target) < abs(A[index + 1] - target)) else A[index + 1]\nprint(A[N - 1], ai)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "9034": {
    "id": 9034,
    "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadline_s = sys.stdin.readline\nreadlines = sys.stdin.buffer.readlines\ndef main():\n    a = 1\n    b = 2\n    c = 4\n    d = 8\n    e = 9\n    k = 15\n    if abs(a - e) <= k:\n        ans = 'Yay!'\n    else:\n        ans = ':('\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "14738": {
    "id": 14738,
    "code": "import math\nfrom itertools import combinations_with_replacement\nn = 2;p = 0\nA = [1, 3]\nodd = []\neven = []\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nfor a in A:\n    if a % 2 == 0:\n        even.append(a)\n    else:\n        odd.append(a)\neven_count = []\nfor i in range(len(even)+1):\n    even_count.append(combinations_count(len(even), i))\nodd_odd_count = []\nodd_even_count = []\nfor i in range(len(odd)+1):\n    cnt = combinations_count(len(odd), i)\n    if i % 2 == 1:\n        odd_odd_count.append(cnt)\n    else:\n        odd_even_count.append(cnt)\nans = 0\nif p == 0:\n    for i in even_count:\n        for j in odd_even_count:\n            ans += i*j\nelse:\n    for i in even_count:\n        for j in odd_odd_count:\n            ans += i*j\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "10810": {
    "id": 10810,
    "code": "def is_p(s):\n    return s == s[::-1]\ns = \"atcoder\"\nl = (len(s) - 1)//2\nr = l + 1\nprint('Yes' if is_p(s) and is_p(s[:l]) and is_p(s[r:]) else 'No')",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "10547": {
    "id": 10547,
    "code": "def make_divisors(n: int):\n    lower_divs = []\n    upper_divs = []\n    i = 1\n    while i**2 <= n:\n        if n % i == 0:\n            lower_divs.append(i)\n            if i != n // i:\n                upper_divs.append(n//i)\n        i += 1\n    return lower_divs+upper_divs[::-1]\ndef main():\n    A = 1;B = 1;K = 1\n    div_A = set(make_divisors(A))\n    div_B = set(make_divisors(B))\n    common = div_A.intersection(div_B)\n    return sorted(list(common))[-K]\nif __name__ == \"__main__\":\n    print(main())",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "11143": {
    "id": 11143,
    "code": "def main():\n    S = \"level\"\n    L = len(S)\n    def check(s):\n        return s == s[::-1]\n    cond = check(S)\n    cond = cond and check(S[:L // 2])\n    cond = cond and check(S[(L + 1) // 2:])\n    print('Yes' if cond else 'No')\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "5949": {
    "id": 5949,
    "code": "def main():\n    N = 100\n    if N%2 == 1:\n      print(int((N+1)/2))\n    else:\n      print(int(N/2))\nmain()",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "18263": {
    "id": 18263,
    "code": "def main(h: int, w: int, n: int):\n    m = max(h, w)\n    if n % m == 0:\n        print(n // m)\n    else:\n        print((n // m) + 1)\nif __name__ == \"__main__\":\n    h = 3\n    w = 7\n    n = 10\n    main(h, w, n)",
    "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]
  },
  "6824": {
    "id": 6824,
    "code": "def main():\n    H = 211;N = 5\n    A = [31, 41, 59, 26, 53]\n    s = sum(A)\n    if H > s:\n        print('No')\n    else:\n        print('Yes')\nmain()",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "12674": {
    "id": 12674,
    "code": "def YN(P):\n    if P:\n        print(\"YES\")\n    else:\n        print(\"NO\")\ndef yn(P):\n    if P:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nx = 5\nYN(x==3 or x==5 or x==7)",
    "coverage": [">", ">", ">", "!", "!", ">", "!", "!", "!", "!", ">", ">"]
  },
  "13471": {
    "id": 13471,
    "code": "def resolve():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()",
    "coverage": [">", ">", ">", ">"]
  },
  "2816": {
    "id": 2816,
    "code": "def main():\n    s = \"35753\"\n    print(min(abs(int(s[i:i+3]) - 753) for i in range(len(s)-3+1)))\nmain()",
    "coverage": [">", ">", ">", ">"]
  },
  "135": {
    "id": 135,
    "code": "import sys\ndef main():\n    input = sys.stdin.readline\n    s = \"codefestival\"\n    K = 100\n    def c(x): return ord(x) - ord('a')\n    def d(x): return chr(x + ord('a'))\n    ans = []\n    i = 0\n    while i < (len(s) - 1):\n        to_a = (26 - c(s[i])) % 26\n        if to_a <= K:\n            ans.append('a')\n            K -= to_a\n        else:\n            ans.append(s[i])\n        i += 1\n    if K > 0:\n        ans.append(d((c(s[-1]) + K) % 26))\n    else:\n        ans.append(s[i])\n    print(''.join(ans))\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "14125": {
    "id": 14125,
    "code": "def main():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "574": {
    "id": 574,
    "code": "def ord_until_a(char):\n    if char == 'a':\n        return 0\n    return ord('a') + 26 - ord(char)\nS = \"a\"\nK = 25\nans = []\nfor s in S:\n    diff = ord_until_a(s)\n    if K >= diff:\n        ans.append('a')\n        K -= diff\n    else:\n        ans.append(s)\nif K > 0:\n    K %= 26\n    last = ord(ans[-1]) + K\n    if last > ord('z'):\n        last -= 26\n    ans[-1] = chr(last)\nprint(''.join(ans))",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "14718": {
    "id": 14718,
    "code": "def cmb(n, r):\n    if n - r < r: r = n - r\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] /= pivot\n                denominator[k] /= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\nn = 1;p = 1\na = [50]\neven=0\nodd=0\nfor i in a:\n    if i%2 == 0:\n        even+=1\n    else:\n        odd+=1\nans = 0\nif p == 0:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    ans += 1<<even\n    i = 2\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)\nelse:\n    evens = 0\n    i = 1\n    while(i <= even):\n        evens += cmb(even, i)\n        i+=1\n    i = 1\n    while(i <= odd):\n        ans += cmb(odd, i) + cmb(odd, i)*evens\n        i+=2\n    print(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "9479": {
    "id": 9479,
    "code": "def ABC_85_A():\n    S = \"2017/01/31\"\n    S = list(S)\n    S[3] = '8'\n    S = ''.join(S)\n    print(S)\nif __name__ == '__main__':\n    ABC_85_A()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "14635": {
    "id": 14635,
    "code": "from math import factorial\ndef comb(n, r):\n    return factorial(n) // (factorial(n-r) * factorial(r))\nn = 3;p = 0\narr = [1, 1, 1]\nodd = 0\neven = 0\nfor a in arr:\n    if a % 2 == 1:\n        odd += 1\n    else:\n        even += 1\nans = 2 ** even\ntmp = 0\nfor i in range(p, odd+1, 2):\n    tmp += comb(odd, i)\nans *= tmp\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "15776": {
    "id": 15776,
    "code": "import sys\nimport math\nimport bisect\ndef solve(x, y, z):\n    max_val = 0\n    for i in range(10 ** 18):\n        if y * i + z * (i + 1) <= x:\n            max_val = i\n        else:\n            break\n    return max_val\ndef main():\n    x = 12;y = 3;z = 1\n    print(solve(x, y, z))\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10828": {
    "id": 10828,
    "code": "S = \"level\"\nN=len(S)\ndef rule1():\n  return S==S[::-1]\ndef rule2():\n  s = S[:(N-1)//2]\n  return s==s[::-1]\ndef rule3():\n  s = S[(N+3)//2-1:]\n  return s==s[::-1]  \nprint ('Yes' if rule1() and rule2() and rule3() else 'No')",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "14513": {
    "id": 14513,
    "code": "def main():\n    n = 3;p = 0\n    a = [1, 1, 1]\n    D = {0:0, 1:0}\n    for i in range(n):\n        D[a[i]%2]+=1\n    ans = 0\n    nCr = {}\n    def cmb(n, r):\n        if r == 0 or r == n: return 1\n        if r == 1: return n\n        if (n,r) in nCr: return nCr[(n,r)]\n        nCr[(n,r)] = cmb(n-1,r) + cmb(n-1,r-1)\n        return nCr[(n,r)]\n    if p==0:\n        for i in range(D[1]//2+1):\n            ans += cmb(D[1],2*i)\n    else:\n        for i in range(D[1]//2):\n            ans += cmb(D[1],2*i+1)\n    print(ans * pow(2,D[0]))\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "6453": {
    "id": 6453,
    "code": "import sys\ninput=sys.stdin.readline\nn = 2\na = [1, 5]\nb = [2, 4]\nc = [3, 6]\nans=0\ndef ab_check(list_count,i):\n    ok=-1\n    ng=n\n    B=b[i]\n    while ng-ok>1:\n        mid=(ok+ng)//2\n        if list_count[mid]<B:\n            ok=mid\n        else:\n            ng=mid\n    return ok+1\ndef bc_check(list_count,i):\n    ok=n\n    ng=-1\n    B=b[i]\n    while ok-ng>1:\n        mid=(ok+ng)//2\n        if list_count[mid]>B:\n            ok=mid\n        else:\n            ng=mid\n    return n-ok\nfor i in range(n):\n    ans+=ab_check(a,i)*bc_check(c,i)\nprint(ans)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "10537": {
    "id": 10537,
    "code": "import math\nA = 1;B = 1;K = 1\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\ndivisors = make_divisors(math.gcd(A, B))\ndivisors.sort(reverse=True)\nprint(divisors[K-1])",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14406": {
    "id": 14406,
    "code": "import sys\nsys.setrecursionlimit(1000000)\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 0\ndef main(i, A):\n  global N\n  global ans\n  if A[i] == A[i+1]:\n    if i == N-2:\n      ans += 1\n      return ans\n    else:\n      return main(i+1, A)\n  elif A[i] < A[i+1]:\n    while i < N-1:\n      if A[i] <= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\n  else:\n    while i < N-1:\n      if A[i] >= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\nif N == 1:\n  print(1)\nelse:\n  print(main(0, A))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "656": {
    "id": 656,
    "code": "def main():\n    K = 2\n    cnt = 1\n    a = 7%K\n    s = {a}\n    for i in range(K):\n        if a%K == 0:\n            print(cnt)\n            return\n        a = a*10 + 7\n        a = a % K\n        if a in s:\n            print(-1)\n            return\n        s.add(a)\n        cnt += 1\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "14829": {
    "id": 14829,
    "code": "n = 2;p = 0\na = [1, 3]\nk=0\ng=0\nfor i in range(n):\n    if a[i]%2==0:\n        g+=1\n    else:\n        k+=1\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\nnumg=0\nnumk=0\nif p==0:\n    for i in range(k//2+1):\n        numk+=cmb(k,i*2)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)\nelse:\n    for i in range((k+1)//2):\n        numk+=cmb(k,i*2+1)\n    for i in range(g+1):\n        numg+=cmb(g,i)\n    print(numk*numg)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!"
    ]
  },
  "4806": {
    "id": 4806,
    "code": "import sys\ndef input(): return \"xyz\".strip()\ndef resolve():\n    s = \"xyz\"\n    print(s[0]+str(len(s)-2)+s[-1])\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "14319": {
    "id": 14319,
    "code": "from itertools import tee\ndef pairwise(iterable):\n    a, b = tee(iterable)\n    next(b, None)\n    return zip(a, b)\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncut = 0\nprevious = None\nis_increase = False\nis_decrease = False\nfor a in A:\n    if previous is None:\n        previous = a\n    elif not (is_increase or is_decrease):\n        if previous < a:\n            is_increase = True\n        elif previous > a:\n            is_decrease = True\n        previous = a\n    elif is_increase and a < previous:\n        cut += 1\n        is_increase = False\n    elif is_decrease and a > previous:\n        cut += 1\n        is_decrease = False\n    previous = a\nprint(cut + 1)",
    "coverage": [
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "15576": {
    "id": 15576,
    "code": "def answer(x: int, y: int, z: int) -> int:\n    return (x - z) // (y + z)\ndef main():\n    x = 13;y = 3;z = 1\n    print(answer(x, y, z))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "19376": {
    "id": 19376,
    "code": "def main():\n    n = 10\n    print(n) if n%2==0 else print(n*2)     \nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "3693": {
    "id": 3693,
    "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 12;b = 4\nprint(curtain(a,b))",
    "coverage": [">", ">", "!", "!", ">", ">", ">"]
  },
  "2927": {
    "id": 2927,
    "code": "def main():\n    s = \"1111111111\"\n    ans = 1000\n    for i in range(len(s) - 2):\n        ans = min(ans, abs(753 - int(s[i:i + 3])))\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "17309": {
    "id": 17309,
    "code": "def main():\n    a = \"D\";b = \"D\"\n    liar = False\n    if  a == \"H\" and b == \"H\" :\n        liar = False\n    elif a == \"H\" and b == \"D\" :\n        liar = True\n    elif a == \"D\" and b == \"H\" :\n        liar = True\n    elif a == \"D\" and b == \"D\" :\n        liar = False\n    if liar:\n        print(\"D\")\n    else:\n        print(\"H\")\nmain()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "11498": {
    "id": 11498,
    "code": "def resolve():\n    S = \"SAT\"\n    week = [ \"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\" ]\n    print(7-week.index(S))\nif '__main__' == __name__:\n    resolve()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "1337": {
    "id": 1337,
    "code": "def main():\n    s = 112\n    for n in range(111, 1000, 111):\n        if s <= n:\n            print(n)\n            return\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "939": {
    "id": 939,
    "code": "k = 101\ndef test_case(k):\n    ans,cnt = 7,1\n    if k % 2 == 0 or k % 5 == 0:\n        return -1\n    if k == 1 or k == 7:\n        return 1\n    while (1):\n        ans = (ans * 10 + 7) % k\n        cnt += 1\n        if ans == 0:\n            return cnt\nprint(test_case(k))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "228": {
    "id": 228,
    "code": "def str_rotate(S,k): \n    if k >= 26:\n        k = k%26\n    if ord(S) + k > 123:\n        S = chr(ord(S)+k-97)\n    else:\n        S = chr(ord(S)+k)\n    return S\ns = ['a']\nk = 25\nfor i in range(len(s)):\n    if k == 0:\n        break\n    if s[i] == \"a\":\n        pass\n    elif 123 - ord(s[i]) <= k:\n        k -= 123 - ord(s[i])\n        s[i] = \"a\"\n    else:\n        pass\ns[-1] = str_rotate(s[-1],k)\nprint(\"\".join(s))",
    "coverage": [
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "14539": {
    "id": 14539,
    "code": "import math\nN = 3;P = 0\nA = [1, 1, 1]\nB = [a % 2 for a in A]\ncount_0 = B.count(0)\ncount_1 = B.count(1)\ndef comb_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nx = y = 0\nif count_0 == 0:\n    x = 1\nelse:\n    if P == 1 and count_1 == 0:\n        x = 0\n    else:\n        for i in range(count_0 + 1):\n            x += comb_count(count_0, i)\nif count_1 == 0:\n    y = 1\nelse:\n    if P == 0:\n        for i in range(0, count_1 + 1, 2):\n            y += comb_count(count_1, i)\n    else:\n        for i in range(1, count_1 + 1, 2):\n            y += comb_count(count_1, i)\nprint(x * y)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">"
    ]
  },
  "16449": {
    "id": 16449,
    "code": "import bisect\ndef main():\n    N = 5\n    A = [2, 4, 6, 9, 11]\n    r = A[-1]//2\n    B = A[:-1]\n    x = bisect.bisect_left(B, r)\n    if x == 0:\n        return A[-1], B[x]\n    elif x == N-1:\n        return A[-1], B[x-1]\n    else:\n        if abs(B[x]-r) <= abs(B[x-1]-r): return A[-1], B[x]\n        else: return A[-1], B[x-1]\nif __name__ == '__main__':\n    print(*main())",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "6431": {
    "id": 6431,
    "code": "from bisect import bisect_right\nfrom itertools import accumulate\ndef main():\n    N = 3\n    A = [1, 1, 1]\n    B = [2, 2, 2]\n    C = [3, 3, 3]\n    A.sort()\n    B.sort()\n    C.sort()\n    B_count = [0] * N\n    for i in range(N):\n        index = bisect_right(C,B[i])\n        if index < N:\n            B_count[i] = N - index\n    D = [0] + list(accumulate(B_count))\n    ans = 0\n    for a in A:\n        index = bisect_right(B,a)\n        ans += D[N] - D[index]\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "14301": {
    "id": 14301,
    "code": "def main():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    res = 1\n    inc = 0\n    dec = 0\n    for i in range(n - 1):\n        if A[i] < A[i+1]:\n            inc += 1\n        elif A[i] > A[i+1]:\n            dec += 1\n        if inc and dec:\n            res += 1\n            inc, dec = 0, 0\n    print(res)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "9847": {
    "id": 9847,
    "code": "import sys\nreadline = sys.stdin.readline\ndef main():\n    N = 6\n    S = \")))())\"\n    res = S[:]\n    pls_left = 0\n    pls_right = 0\n    for s in S:\n        if s == '(':\n            pls_right += 1\n        else:\n            if pls_right == 0:\n                pls_left += 1\n            else:\n                pls_right -= 1\n    res = '(' * pls_left + S + ')' * pls_right\n    print(res)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "2394": {
    "id": 2394,
    "code": "def main():\n    N = 2;M = 1\n    ans = N*(N-1)//2 + M*(M-1)//2\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "8021": {
    "id": 8021,
    "code": "def main():\n    N = 4;K = 3\n    A = [2, 3, 1, 4]\n    print((N + K - 3) // ~-K)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "16531": {
    "id": 16531,
    "code": "def main():\n    N = 5\n    A = [6, 9, 4, 2, 11]\n    A.sort()\n    aj = A.pop()\n    A.sort(key=lambda x: abs(aj / 2 - x))\n    print(aj, A[0]) \nmain()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "13470": {
    "id": 13470,
    "code": "def resolve():\n    s = \"haiku,atcoder,tasks\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()",
    "coverage": [">", ">", ">", ">"]
  },
  "6556": {
    "id": 6556,
    "code": "def main():\n    N = 2\n    a = [1, 5]\n    b = [2, 4]\n    c = [3, 6]\n    a.sort()\n    b.sort()\n    c.sort()\n    ans = 0\n    ai = 0  \n    ci = 0  \n    for mid in b:\n        while ai < N and a[ai] < mid:\n            ai += 1\n        while ci < N and c[ci] <= mid:\n            ci += 1\n        ans += ai * (N - ci)\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "16816": {
    "id": 16816,
    "code": "def main():\n  string = ['D', 'H']\n  if string[0]=='H':\n    print(string[1])\n  else:\n    if string[1]=='H':\n      print('D')\n    else:\n      print('H')\nmain()",
    "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]
  },
  "17091": {
    "id": 17091,
    "code": "import sys\nsys.setrecursionlimit(12345678)\nimport itertools\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport bisect\nfrom heapq import heappush, heappop\ndef main():\n    a = \"H\";b = \"H\"\n    if a == 'H':\n        print(b)\n    else:\n        if b == 'H':\n            print('D')\n        else:\n            print('H')\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "12594": {
    "id": 12594,
    "code": "def solve(a,b,k):\n    l = []\n    for i in range(min(a,b)):\n        if a % (i+1) == 0 and b % (i+1) == 0:\n            l.append(i+1)\n    return(l[-k])\ndef main():\n    A = 1;B = 1;K = 1\n    print(solve(A,B,K))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10401": {
    "id": 10401,
    "code": "def check(a,b):\n  d=[]\n  for i in range(1,min(a,b)+1):\n    if a%i==0 and b%i==0:\n      d.append(i)\n  return d[::-1]\na = 8;b = 12;k = 2\nprint(check(a,b)[k-1])",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "11098": {
    "id": 11098,
    "code": "s = \"akasaka\"\ndef kaibun(w):\n    for i in range(len(w)):\n        if w[i]!=w[len(w)-1-i]:\n            return False\n    return True\nn=len(s)\nprint(\"Yes\") if all([kaibun(s) , kaibun(s[:(n-1)//2]) , kaibun(s[(n+3)//2-1:])]) else print(\"No\")",
    "coverage": [">", ">", ">", ">", "!", ">", ">", ">"]
  },
  "8932": {
    "id": 8932,
    "code": "def solve():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "18997": {
    "id": 18997,
    "code": "def resolve():\n    N = \"12\"\n    res = 0\n    if int(str(N)[-1]) % 2 == 0:\n        i = 0\n        N=int(N)\n        while int(N) >= 2*5**i:\n            i += 1\n            res += N//(2*5**i)\n    print(res)\nif __name__ == \"__main__\":\n    resolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "9110": {
    "id": 9110,
    "code": "def main():\n    print(\"2017/01/07\".replace('2017','2018'))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">"]
  },
  "16286": {
    "id": 16286,
    "code": "import math\nn = 2\na = [100, 0]\na.sort()\ndef comb(n, r):\n    return math.factorial(n) // math.factorial(n - r)\nmaxi = 0\ni = -1\nkey = a[i] // 2\nfor j in range(n):\n    if a[j] > key:\n        break\nif abs(a[j-1] - key) >= abs(a[j] - key) and j < n-1:\n    ans = [a[i], a[j]]\nelse:\n    ans = [a[i], a[j-1]]\nprint(\"{} {}\". format(ans[0], ans[1]))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "11764": {
    "id": 11764,
    "code": "import heapq\nfrom sys import stdin\ninput = stdin.readline\nm1 = 11;d1 = 16\nm2 = 11;d2 = 17\ndef main():\n    if m1 ==12:\n        if m2 == 1 and d2 ==1 :\n            print(1)\n        else:\n            print(0)\n    else:\n        if m2 ==m1+1 and d2 ==1:\n            print(1)\n        else:\n            print(0)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "4099": {
    "id": 4099,
    "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    if M2 >= M1:\n        diff = (H2-H1)*60 + M2-M1\n    else:\n        diff = (H2-H1)*60 + 60-M1+M2 -60\n    if diff <= 0:\n        print(0)\n    else:\n        print(diff - K)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]
  },
  "4455": {
    "id": 4455,
    "code": "def resolve():\n    s = \"xyz\"\n    print(\"{}{}{}\".format(s[0],len(s)-2,s[-1]))\nresolve()",
    "coverage": [">", ">", ">", ">"]
  },
  "2115": {
    "id": 2115,
    "code": "def solve():\n    N = 100;A = 100;B = 100\n    max_both = B if A > B else A\n    min_both = (A + B) - N if (A + B) > N else 0\n    print(max_both, min_both)\nif __name__ == '__main__':\n    solve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "1377": {
    "id": 1377,
    "code": "import sys\nimport math\nsys.setrecursionlimit(500000)\nINF = float('inf')\ndef main():\n    n = 111\n    for i in range(n, 1000):\n        flag = True\n        for j, c in enumerate(str(i)):\n            if j == 0:\n                continue\n            else:\n                if c != str(i)[0]:\n                    flag = False\n                    break\n        if flag:\n            return i\nif __name__ == '__main__':\n    print(main())",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "12276": {
    "id": 12276,
    "code": "string = \"atcoder\"\npalindrome=False\npalin1=False\ndef palin(string):\n    palindrome=False\n    if string==string[::-1]:\n        palindrome=True\n    return palindrome\npalindrome=palin(string)\nif palin(string[int((len(string)-1)/2)])==True and palindrome==True:\n    palin1=True\nif palin(string[int((len(string)+3)/2)-1:len(string)])==True and palin1==True:\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "1467": {
    "id": 1467,
    "code": "def main():\n    n = \"750\"\n    if n[0] == '0':\n        print('111')\n    elif n[0] < n[1] or n[0] < n[2]:\n        print((int(n[0]) + 1) * 111)\n    else:\n        print(int(n[0]) * 111)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]
  },
  "13365": {
    "id": 13365,
    "code": "def resolve():\n    a = \"haiku\";b = \"atcoder\";c = \"tasks\"\n    print(a,b,c)\nresolve()",
    "coverage": [">", ">", ">", ">"]
  },
  "8816": {
    "id": 8816,
    "code": "def main():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5918": {
    "id": 5918,
    "code": "def solve(n):\n    return (n+1)//2\nn = 2\nprint(solve(n))",
    "coverage": [">", ">", ">", ">"]
  },
  "19167": {
    "id": 19167,
    "code": "def main():\n    n = 12\n    if n%2==1:\n        print(0)\n    else:\n        ans = 0\n        waru = 10\n        while n>=waru:\n            ans += n//waru\n            waru = waru*5\n        print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "4236": {
    "id": 4236,
    "code": "def main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    x = 60 * h1 + m1\n    y = 60 * h2 + m2 - k\n    print(max(0, y - x))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "18204": {
    "id": 18204,
    "code": "def main():\n    H = 3\n    W = 7\n    N = 10\n    print((N-1)//max(H,W) + 1)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "10238": {
    "id": 10238,
    "code": "def main():\n    n = 3\n    s = \"())\"\n    l, r = 0, 0\n    for i in s:\n        if i == \")\":\n            if l:\n                l -= 1\n            else:\n                r += 1\n        else:\n            l += 1\n    print(r * \"(\" + s + \")\" * l)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "3533": {
    "id": 3533,
    "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "19220": {
    "id": 19220,
    "code": "import sys\nread = sys.stdin.read\ndef main():\n    n = 12\n    if n <= 9 or n % 2 == 1:\n        print(0)\n        sys.exit()\n    n5 = 5\n    r = 0\n    while n >= n5 * 2:\n        r += n // (n5 * 2)\n        n5 *= 5\n    print(r)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13118": {
    "id": 13118,
    "code": "def main():\n    x = 5\n    if x in [3, 5, 7]:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "12858": {
    "id": 12858,
    "code": "def resolve():\n    x = \"5\"\n    if x in '753':\n        print('YES')\n    else:\n        print('NO')\nresolve()",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "138": {
    "id": 138,
    "code": "import sys\nsys.setrecursionlimit(10**7)\nalphabets = \"abcdefghijklmnopqrstuvwxyz\"\na = {c:i for i, c in enumerate(alphabets)}\ns = ['c', 'o', 'd', 'e', 'f', 'e', 's', 't', 'i', 'v', 'a', 'l']\nn = len(s)\nk = 100\ndef f(k, i):\n    if i == n - 1:\n        k_ = k % 26\n        c = s[i]\n        shifted = (k_ + a[c]) % 26\n        return alphabets[shifted]\n    c = s[i]\n    diff = 26 - a[c]\n    if c != \"a\" and diff <= k:\n        return \"a\" + f(k-diff, i+1)\n    else:\n        return c + f(k, i+1)\nprint(f(k, 0))",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">"
    ]
  },
  "3048": {
    "id": 3048,
    "code": "def resolve():\n    S = \"1111111111\"\n    res = 99999\n    num = len(S)\n    for i in range(num-1):\n        res = min(res, abs(int(S[i:i+3]) - 753))\n    print(res)\nif __name__ == \"__main__\":\n    resolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "10343": {
    "id": 10343,
    "code": "def solve():\n    A = 8;B = 12;K = 2\n    common_div = []\n    for i in range(1, min(A, B)+1):\n        if(A % i == 0 and B % i == 0):\n            common_div.append(i)\n    common_div.sort(reverse=True)\n    print(common_div[K-1])\nif __name__ == \"__main__\":\n    solve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "1751": {
    "id": 1751,
    "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    n = 10;a = 3;b = 5\n    print(min(a,b), max(0, a+b-n))\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "18913": {
    "id": 18913,
    "code": "import sys\nsysread = sys.stdin.buffer.readline\nread = sys.stdin.buffer.read\nfrom heapq import heappop, heappush\nsys.setrecursionlimit(10**7)\ndef run():\n    N = 5\n    if N % 2:\n        print(0)\n    else:\n        ans = 0\n        div = 10\n        while True:\n            val = N // div\n            ans += val\n            if not val:break\n            div *= 5\n        print(ans)\nif __name__ == \"__main__\":\n    run()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "12919": {
    "id": 12919,
    "code": "X = 6\ndef age(X):\n if X==3 or X==5 or X==7:\n   return 'YES'\n else:\n   return 'NO'\nprint(age(X))",
    "coverage": [">", ">", ">", "!", "!", ">", ">"]
  },
  "19093": {
    "id": 19093,
    "code": "from sys import stdin\nfrom sys import exit\ndef main():\n    readline=stdin.readline\n    n = 12\n    if n%2==1:\n        print(0)\n        exit()\n    n//=2\n    ans=0\n    x=5\n    while n//x>=1:\n        ans+=n//x\n        x*=5\n    print(ans)\nif __name__==\"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "5207": {
    "id": 5207,
    "code": "def resolve():\n    s = \"smiles\"\n    print('{}{}{}'.format(s[0],len(s)-2,s[-1]))\nresolve()",
    "coverage": [">", ">", ">", ">"]
  },
  "11327": {
    "id": 11327,
    "code": "def main():\n    S = \"SUN\"\n    week = ['SUN','MON','TUE','WED','THU','FRI','SAT']\n    print(7-week.index(S))\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "2316": {
    "id": 2316,
    "code": "import sys\ndef input(): return \"100 100 100\".rstrip()\ndef main():\n    n = 100;a = 100;b = 100\n    print(min(a,b),max(0,a+b-n))\nif __name__=='__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "346": {
    "id": 346,
    "code": "class common_function():\n    def __init__(self):\n        self.sletter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n        self.bletter = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\ndef main():\n    common = common_function()\n    s = ['a']\n    K = 25\n    t = [0]\n    for i in range(len(common.sletter)-1, 0, -1):\n        t.append(i)\n    u = []\n    for i in range(len(s)):\n        u.append(t[common.sletter.index(s[i])])\n    ans = ''\n    for i in range(len(s)-1):\n        if u[i] <= K:\n            ans += 'a'\n            K -= u[i]\n        else:\n            ans += s[i]\n    K = K%26\n    if u[len(s)-1] <= K:\n        K -= u[len(s)-1]\n        ans += common.sletter[K]\n    else:\n        ans += common.sletter[common.sletter.index(s[len(s)-1])+K]\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "10724": {
    "id": 10724,
    "code": "S = \"akasaka\"\nN = len(S)\ndef is_palindrome(s):\n    return s == ''.join(list(reversed(s)))\nans = 'Yes' if is_palindrome(S) and is_palindrome(S[:(N-1)//2]) and is_palindrome(S[(N+1)//2:]) else 'No'\nprint(ans)",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "18331": {
    "id": 18331,
    "code": "def resolve():\n    a = 2\n    b = 100\n    c = 200\n    d = max(a, b)\n    print(((c-1)//d)+1)\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "8565": {
    "id": 8565,
    "code": "def resolve():\n    n = 7\n    a_1 = [3, 3, 4, 5, 4, 5, 3]\n    a_2 = [5, 3, 4, 4, 2, 3, 2]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "16629": {
    "id": 16629,
    "code": "def actual(a, b):\n    if a == b:\n        return 'H'\n    return 'D'\na = \"H\";b = \"H\"\nprint(actual(a, b))",
    "coverage": [">", ">", ">", "!", ">", ">"]
  },
  "5906": {
    "id": 5906,
    "code": "def main():\n  num = 2\n  if num%2==0:\n    print(int(num/2))\n  else:\n    print(int(num/2)+1)\nmain()",
    "coverage": [">", ">", ">", ">", "!", "!", ">"]
  },
  "15137": {
    "id": 15137,
    "code": "from math import factorial as fa\ndef comb(n, r):\n    return fa(n)//(fa(n-r)*fa(r))\nn = 3;p = 0\nA = [1, 1, 1]\neven = A.count(0)\nodd = A.count(1)\nans = 0\nfor i in range(p,odd+1,2):\n    ans += comb(odd, i)\nprint(ans*pow(2,even))",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "18779": {
    "id": 18779,
    "code": "def resolve():\n    import math\n    H = 14\n    W = 12\n    N = 112\n    print(math.ceil(N/max(H, W)))\nresolve()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "12446": {
    "id": 12446,
    "code": "from sys  import stdin,stdout\nimport bisect\nimport math\ndef st():\n    return list(stdin.readline().strip())\ndef inp():\n    return int(stdin.readline())\ndef li():\n    return list(map(int,stdin.readline().split()))\ndef mp():\n    return map(int,stdin.readline().split())\ndef pr(n):\n    stdout.write(str(n)+\"\\n\")\ndef soe(limit):\n    l=[1]*(limit+1)\n    prime=[]\n    for i in range(2,limit+1):\n        if l[i]:\n            for j in range(i*i,limit+1,i):\n                l[j]=0\n    for i in range(2,limit+1):\n        if l[i]:\n            prime.append(i)\n    return prime\ndef segsoe(low,high):\n    limit=int(high**0.5)+1\n    prime=soe(limit)\n    n=high-low+1\n    l=[0]*(n+1)\n    for i in range(len(prime)):\n        lowlimit=(low//prime[i])*prime[i]\n        if lowlimit<low:\n            lowlimit+=prime[i]\n        if lowlimit==prime[i]:\n            lowlimit+=prime[i]\n        for j in range(lowlimit,high+1,prime[i]):\n            l[j-low]=1\n    for i in range(low,high+1):\n        if not l[i-low]:\n            if i!=1:\n                print(i)\ndef power(a,n):\n    r=1\n    while n:\n        if n&1:\n            r=(r*a)\n        a*=a\n        n=n>>1\n    return r\ndef solve():\n    s = \"akasaka\"\n    n=len(s)\n    a=s[:(n-1)//2]\n    b=a[::-1]\n    c=s[(n+3)//2 -1 :]\n    d=c[::-1]\n    if s==s[::-1] and a==b and c==d:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nfor _ in range(1):\n    solve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "13332": {
    "id": 13332,
    "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    ans = s.replace(\",\", \" \")\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "11178": {
    "id": 11178,
    "code": "def main():\n    S = ['a', 'k', 'a', 's', 'a', 'k', 'a']\n    N = len(S)\n    if S != list(reversed(S)):\n        print(\"No\")\n    elif S[:int((N-1)/2)] != list(reversed(S[:int((N-1)/2)])):\n        print(\"No\")\n    elif S[int((N+3)/2) - 1:] != list(reversed(S[int((N+3)/2) - 1:])):\n        print(\"No\")\n    else:\n        print(\"Yes\")\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "17586": {
    "id": 17586,
    "code": "def YY(x):\n    if 1<=x and x<=12:\n        return True\n    else:\n        return False\nS = \"1905\"\nA=int(S[0:2])\nB=int(S[2:4])\nif YY(A) and YY(B):\n    print(\"AMBIGUOUS\")\nelif YY(A):\n    print(\"MMYY\")\nelif YY(B):\n    print(\"YYMM\")\nelse:\n    print(\"NA\")",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      ">",
      "!",
      ">",
      ">",
      "!",
      "!"
    ]
  },
  "15003": {
    "id": 15003,
    "code": "n = 1;p = 1\na = [50]\nfrom operator import mul\nfrom functools import reduce\ndef cmb(n,r):\n    r = min(n-r,r)\n    if r == 0: return 1\n    over = reduce(mul, range(n, n - r, -1))\n    under = reduce(mul, range(1,r + 1))\n    return over // under\ng = 0\nk=0\nfor i in a:\n    if i%2:\n        k+=1\n    else:\n        g+=1\nif p == 0:\n    x = 2**g - 1\n    y = 0\n    for i in range(2,k+1,2):\n        y += cmb(k,i)\n    ans = y*x + x + y +1\n    print(ans)\nelse:\n    x = 2**g-1\n    y = 0\n    for i in range(1,k+1,2):\n        y += cmb(k,i)\n    print(y*x+y)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">"
    ]
  },
  "6785": {
    "id": 6785,
    "code": "mod = 1e9+7\ndef add(a, b):\n    c = a + b\n    if c >= mod:\n        c -= mod\n    return c\ndef main():\n    H = 10;N = 3\n    s = 15\n    if s >= H:\n        print('Yes')\n    else:\n        print('No')\nmain()",
    "coverage": [
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "12942": {
    "id": 12942,
    "code": "import sys\ndef input(): return \"5\".strip()\ndef main():\n    X = 5\n    if X == 7 or X == 5 or X == 3:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nif __name__ == \"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "15118": {
    "id": 15118,
    "code": "N = 1;P = 1\nA = [50]\nimport math\ndef combinations_count(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\ndef calc(n):\n    ans = 0\n    for r in range(n-n%2, -1, -2):\n        ans += combinations_count(n, r)\n    return ans\ngusu = 0\nfor a in A:\n    if a%2 == 0:\n        gusu +=1\nkisu = N - gusu\np0 = 2**gusu*calc(kisu)\nif P == 0:\n    print(p0)\nelse:\n    print(2**N-p0)",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      ">"
    ]
  },
  "18210": {
    "id": 18210,
    "code": "import math\ndef main():\n    h = 3\n    w = 7\n    n = 10\n    if w >= h:\n        ans = math.ceil(n/w)\n    else:\n        ans = math.ceil(n/h)\n    print(ans)\nif __name__==\"__main__\":\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]
  },
  "6278": {
    "id": 6278,
    "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    from bisect import bisect_right\n    N = 2\n    A = [1, 5]\n    B = [2, 4]\n    C = [3, 6]\n    b_comb_accum = [0] * (N+1)\n    for i in range(N-1, -1, -1):\n        c_min_ind = bisect_right(C, B[i])\n        b_comb_accum[i] = b_comb_accum[i+1] + N - c_min_ind\n    ans = 0\n    for a in A:\n        b_min_ind = bisect_right(B, a)\n        ans += b_comb_accum[b_min_ind]\n    print(ans)\nif __name__ == '__main__':\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "13797": {
    "id": 13797,
    "code": "import sys\nreadline = sys.stdin.readline\nflagset = ['not increase', 'flat', 'not decrease']\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    cnt = 0\n    A0 = A[0]\n    flag = flagset[1]\n    for i in range(N-1):\n        Ai = A[i]\n        Ai1 = A[i+1]\n        if flag == 'flat':\n            if Ai < Ai1:\n                flag = 'not decrease'\n            elif Ai > Ai1:\n                flag = 'not increase'\n            elif Ai == Ai1:\n                flag = 'flat'\n            else:\n                cnt += 1\n        elif flag == 'not decrease':\n            if Ai <= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n        else:\n            if Ai >= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n    cnt += 1\n    print(cnt)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      ">",
      "!",
      ">",
      ">",
      "!",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">"
    ]
  },
  "1297": {
    "id": 1297,
    "code": "def actual(n):\n    is_zorome = lambda num: len(set(str(num))) == 1\n    for i in range(100, 1000):\n        if i >= n and is_zorome(i):\n            return i\nn = 111\nprint(actual(n))",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "13724": {
    "id": 13724,
    "code": "def resolve():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    T = h2*60 + m2 - (h1*60 + m1)\n    print(T-k)\nresolve()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "5416": {
    "id": 5416,
    "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 5\n    print(N//2+1) if N % 2 else print(N//2)\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">"]
  },
  "7918": {
    "id": 7918,
    "code": "import sys\nreadline = sys.stdin.readline\nimport math\ndef main():\n    N = 3;K = 3\n    A = [1, 2, 3]\n    print(math.ceil((N-1)/(K-1)))\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "17047": {
    "id": 17047,
    "code": "def main():\n    a = \"D\";b = \"H\"\n    if a == 'H':\n        if b == 'H':\n            ans = 'H'\n        else:\n            ans = 'D'\n    else:\n        if b == 'H':\n            ans = 'D'\n        else:\n            ans = 'H'\n    print(ans)\nif __name__ == \"__main__\":\n    main()",
    "coverage": [
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">",
      "!",
      "!",
      ">",
      ">",
      ">"
    ]
  },
  "10853": {
    "id": 10853,
    "code": "s = \"atcoder\"\nn = len(s)\ndef f(s):\n    return s == s[::-1]\nif f(s) and f(s[:(n-1)//2]) and f(s[(n+3)//2-1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
    "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]
  },
  "2760": {
    "id": 2760,
    "code": "def main():\n    N = {'9', '4', '1', '7'}\n    if set(['1', '9', '7', '4']) == N:\n        print('YES')\n    else:\n        print('NO')\nif __name__ == '__main__':\n    main()",
    "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]
  },
  "5369": {
    "id": 5369,
    "code": "def solve():\n    n = 2\n    ans = (n + 1) //2\n    print(ans)\nif __name__ == '__main__':\n    solve()",
    "coverage": [">", ">", ">", ">", ">", ">"]
  },
  "680": {
    "id": 680,
    "code": "from sys import stdin\ninput = stdin.readline\nimport math\ndef solve():\n    k = 2\n    if k % 2 == 0 or k % 5 == 0:\n        print(-1)\n        return\n    cnt = 1\n    cur = 7\n    while True:\n        r = cur % k\n        if r == 0:\n            print(cnt)\n            break\n        cur = r * 10 + 7\n        cnt += 1\nif __name__ == '__main__':\n    solve()",
    "coverage": [
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      ">",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      "!",
      ">",
      ">"
    ]
  },
  "13531": {
    "id": 13531,
    "code": "s = \"abcde,fghihgf,edcba\"\ndef main():\n  print(s.replace(',',' '))\nif __name__ == '__main__':\n  main()",
    "coverage": [">", ">", ">", ">", ">"]
  },
  "10455": {
    "id": 10455,
    "code": "def gcd(a,b):\n    if b==0: return a\n    return gcd(b,a%b)\na = 1;b = 1;k = 1\ng=gcd(a,b)\ncnt=0\nfor i in range(g,0,-1):\n    if g%i==0: cnt+=1\n    if cnt==k:\n        print(i)\n        break",
    "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]
  },
  "8268": {
    "id": 8268,
    "code": "N = 8;K = 3\nA = [7, 3, 1, 8, 4, 6, 2, 5]\ndef solve(N,K,A):\n    ans = -(-(N-1)//(K-1))\n    return ans\nprint(solve(N,K,A))",
    "coverage": [">", ">", ">", ">", ">", ">"]
  }
}
