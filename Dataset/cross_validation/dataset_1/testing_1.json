{"13163": {"id": 13163, "code": "def main():\n    print(*\"happy,newyear,enjoy\".split(\",\"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">"]}, "13164": {"id": 13164, "code": "def main():\n    print(*\"haiku,atcoder,tasks\".split(\",\"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">"]}, "13165": {"id": 13165, "code": "def main():\n    print(*\"abcde,fghihgf,edcba\".split(\",\"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">"]}, "13166": {"id": 13166, "code": "S = \"happy,newyear,enjoy\"\nans=S.replace(\",\" , \" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "13167": {"id": 13167, "code": "S = \"haiku,atcoder,tasks\"\nans=S.replace(\",\" , \" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "13168": {"id": 13168, "code": "S = \"abcde,fghihgf,edcba\"\nans=S.replace(\",\" , \" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "13169": {"id": 13169, "code": "s = \"happy,newyear,enjoy\"\ns = s[:5] + \" \" + s[6:13] + \" \" + s[14:]\nprint(s)", "coverage": [">", ">", ">"]}, "13170": {"id": 13170, "code": "s = \"haiku,atcoder,tasks\"\ns = s[:5] + \" \" + s[6:13] + \" \" + s[14:]\nprint(s)", "coverage": [">", ">", ">"]}, "13171": {"id": 13171, "code": "s = \"abcde,fghihgf,edcba\"\ns = s[:5] + \" \" + s[6:13] + \" \" + s[14:]\nprint(s)", "coverage": [">", ">", ">"]}, "13172": {"id": 13172, "code": "s = \"happy,newyear,enjoy\"\ndef Main(s):\n    s = s.replace(',', ' ')\n    return s\nprint(Main(s))", "coverage": [">", ">", ">", ">", ">"]}, "13173": {"id": 13173, "code": "s = \"haiku,atcoder,tasks\"\ndef Main(s):\n    s = s.replace(',', ' ')\n    return s\nprint(Main(s))", "coverage": [">", ">", ">", ">", ">"]}, "13174": {"id": 13174, "code": "s = \"abcde,fghihgf,edcba\"\ndef Main(s):\n    s = s.replace(',', ' ')\n    return s\nprint(Main(s))", "coverage": [">", ">", ">", ">", ">"]}, "13175": {"id": 13175, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13176": {"id": 13176, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13177": {"id": 13177, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13178": {"id": 13178, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13179": {"id": 13179, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13180": {"id": 13180, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13181": {"id": 13181, "code": "A = \"happy\";B = \"newyear\";C = \"enjoy\"\nprint(A + ' ' + B + ' ' + C)", "coverage": [">", ">"]}, "13182": {"id": 13182, "code": "A = \"haiku\";B = \"atcoder\";C = \"tasks\"\nprint(A + ' ' + B + ' ' + C)", "coverage": [">", ">"]}, "13183": {"id": 13183, "code": "A = \"abcde\";B = \"fghihgf\";C = \"edcba\"\nprint(A + ' ' + B + ' ' + C)", "coverage": [">", ">"]}, "13184": {"id": 13184, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"happy,newyear,enjoy\"\n    S = S.replace(\",\", \" \")\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13185": {"id": 13185, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"haiku,atcoder,tasks\"\n    S = S.replace(\",\", \" \")\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13186": {"id": 13186, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    S = \"abcde,fghihgf,edcba\"\n    S = S.replace(\",\", \" \")\n    print(S)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13187": {"id": 13187, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a + \" \" + b + \" \" + c)", "coverage": [">", ">"]}, "13188": {"id": 13188, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a + \" \" + b + \" \" + c)", "coverage": [">", ">"]}, "13189": {"id": 13189, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a + \" \" + b + \" \" + c)", "coverage": [">", ">"]}, "13193": {"id": 13193, "code": "S = \"happy,newyear,enjoy\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13194": {"id": 13194, "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13195": {"id": 13195, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13196": {"id": 13196, "code": "s_in = \"happy,newyear,enjoy\"\ns_out = s_in.replace(\",\", \" \", 2)\nprint(s_out)", "coverage": [">", ">", ">"]}, "13197": {"id": 13197, "code": "s_in = \"haiku,atcoder,tasks\"\ns_out = s_in.replace(\",\", \" \", 2)\nprint(s_out)", "coverage": [">", ">", ">"]}, "13198": {"id": 13198, "code": "s_in = \"abcde,fghihgf,edcba\"\ns_out = s_in.replace(\",\", \" \", 2)\nprint(s_out)", "coverage": [">", ">", ">"]}, "13199": {"id": 13199, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c,sep=' ')", "coverage": [">", ">"]}, "13200": {"id": 13200, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c,sep=' ')", "coverage": [">", ">"]}, "13201": {"id": 13201, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c,sep=' ')", "coverage": [">", ">"]}, "13202": {"id": 13202, "code": "s = \"happy,newyear,enjoy\"\nans=s.replace(\",\",\" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "13203": {"id": 13203, "code": "s = \"haiku,atcoder,tasks\"\nans=s.replace(\",\",\" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "13204": {"id": 13204, "code": "s = \"abcde,fghihgf,edcba\"\nans=s.replace(\",\",\" \")\nprint(ans)", "coverage": [">", ">", ">"]}, "13205": {"id": 13205, "code": "s = \"happy\";t = \"newyear\";u = \"enjoy\"\nprint(s+\" \"+t+\" \"+u)", "coverage": [">", ">"]}, "13206": {"id": 13206, "code": "s = \"haiku\";t = \"atcoder\";u = \"tasks\"\nprint(s+\" \"+t+\" \"+u)", "coverage": [">", ">"]}, "13207": {"id": 13207, "code": "s = \"abcde\";t = \"fghihgf\";u = \"edcba\"\nprint(s+\" \"+t+\" \"+u)", "coverage": [">", ">"]}, "13208": {"id": 13208, "code": "S = \"happy,newyear,enjoy\"\nprint(S[0:5],S[6:13],S[14:19])", "coverage": [">", ">"]}, "13209": {"id": 13209, "code": "S = \"haiku,atcoder,tasks\"\nprint(S[0:5],S[6:13],S[14:19])", "coverage": [">", ">"]}, "13210": {"id": 13210, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S[0:5],S[6:13],S[14:19])", "coverage": [">", ">"]}, "13214": {"id": 13214, "code": "def main():\n    stdIn = \"happy,newyear,enjoy\"\n    stdOut = solve(stdIn)\n    print(stdOut)\ndef solve(stdIn):\n    return stdIn.replace(',',' ')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13215": {"id": 13215, "code": "def main():\n    stdIn = \"haiku,atcoder,tasks\"\n    stdOut = solve(stdIn)\n    print(stdOut)\ndef solve(stdIn):\n    return stdIn.replace(',',' ')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13216": {"id": 13216, "code": "def main():\n    stdIn = \"abcde,fghihgf,edcba\"\n    stdOut = solve(stdIn)\n    print(stdOut)\ndef solve(stdIn):\n    return stdIn.replace(',',' ')\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "13223": {"id": 13223, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5] + \" \" + s[6:13] + \" \" + s[14:])", "coverage": [">", ">"]}, "13224": {"id": 13224, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5] + \" \" + s[6:13] + \" \" + s[14:])", "coverage": [">", ">"]}, "13225": {"id": 13225, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5] + \" \" + s[6:13] + \" \" + s[14:])", "coverage": [">", ">"]}, "13226": {"id": 13226, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0] + s[1] + s[2] + s[3] + s[4] + \" \" + s[6] + s[7] + s[8] + s[9] + s[10] + s[11] + s[12] + \" \" + s[14] + s[15] + s[16] + s[17] + s[18])", "coverage": [">", ">"]}, "13227": {"id": 13227, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0] + s[1] + s[2] + s[3] + s[4] + \" \" + s[6] + s[7] + s[8] + s[9] + s[10] + s[11] + s[12] + \" \" + s[14] + s[15] + s[16] + s[17] + s[18])", "coverage": [">", ">"]}, "13228": {"id": 13228, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0] + s[1] + s[2] + s[3] + s[4] + \" \" + s[6] + s[7] + s[8] + s[9] + s[10] + s[11] + s[12] + \" \" + s[14] + s[15] + s[16] + s[17] + s[18])", "coverage": [">", ">"]}, "13229": {"id": 13229, "code": "s = \"happy,newyear,enjoy\"\nfor i in range(len(s)):\n    if s[i]==\",\":\n        s=s[:i]+\" \"+s[i+1:]\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "13230": {"id": 13230, "code": "s = \"haiku,atcoder,tasks\"\nfor i in range(len(s)):\n    if s[i]==\",\":\n        s=s[:i]+\" \"+s[i+1:]\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "13231": {"id": 13231, "code": "s = \"abcde,fghihgf,edcba\"\nfor i in range(len(s)):\n    if s[i]==\",\":\n        s=s[:i]+\" \"+s[i+1:]\nprint(s)", "coverage": [">", ">", ">", ">", ">"]}, "13232": {"id": 13232, "code": "import sys\ninput = sys.stdin.readline\nS = \"happy,newyear,enjoy\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">", ">", ">"]}, "13233": {"id": 13233, "code": "import sys\ninput = sys.stdin.readline\nS = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">", ">", ">"]}, "13234": {"id": 13234, "code": "import sys\ninput = sys.stdin.readline\nS = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">", ">", ">"]}, "13235": {"id": 13235, "code": "s = \"happy,newyear,enjoy\"\nnew_s = s.replace(',',' ')\nprint(new_s)", "coverage": [">", ">", ">"]}, "13236": {"id": 13236, "code": "s = \"haiku,atcoder,tasks\"\nnew_s = s.replace(',',' ')\nprint(new_s)", "coverage": [">", ">", ">"]}, "13237": {"id": 13237, "code": "s = \"abcde,fghihgf,edcba\"\nnew_s = s.replace(',',' ')\nprint(new_s)", "coverage": [">", ">", ">"]}, "13238": {"id": 13238, "code": "def resolve():\n    s = \"happy,newyear,enjoy\"\n    print(s[:5],s[6:13],s[14:])\nresolve()", "coverage": [">", ">", ">", ">"]}, "13239": {"id": 13239, "code": "def resolve():\n    s = \"haiku,atcoder,tasks\"\n    print(s[:5],s[6:13],s[14:])\nresolve()", "coverage": [">", ">", ">", ">"]}, "13240": {"id": 13240, "code": "def resolve():\n    s = \"abcde,fghihgf,edcba\"\n    print(s[:5],s[6:13],s[14:])\nresolve()", "coverage": [">", ">", ">", ">"]}, "13241": {"id": 13241, "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1 , s2 , s3)", "coverage": [">", ">"]}, "13242": {"id": 13242, "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1 , s2 , s3)", "coverage": [">", ">"]}, "13243": {"id": 13243, "code": "s1 = \"abcde\";s2 = \"fghihgf\";s3 = \"edcba\"\nprint(s1 , s2 , s3)", "coverage": [">", ">"]}, "13244": {"id": 13244, "code": "S = \"happy,newyear,enjoy\"\nS=S.replace(\",\",\" \")\nprint(S)", "coverage": [">", ">", ">"]}, "13245": {"id": 13245, "code": "S = \"haiku,atcoder,tasks\"\nS=S.replace(\",\",\" \")\nprint(S)", "coverage": [">", ">", ">"]}, "13246": {"id": 13246, "code": "S = \"abcde,fghihgf,edcba\"\nS=S.replace(\",\",\" \")\nprint(S)", "coverage": [">", ">", ">"]}, "13247": {"id": 13247, "code": "a = \"happy,newyear,enjoy\"\nb = a.replace(',', ' ')\nprint(b)", "coverage": [">", ">", ">"]}, "13248": {"id": 13248, "code": "a = \"haiku,atcoder,tasks\"\nb = a.replace(',', ' ')\nprint(b)", "coverage": [">", ">", ">"]}, "13249": {"id": 13249, "code": "a = \"abcde,fghihgf,edcba\"\nb = a.replace(',', ' ')\nprint(b)", "coverage": [">", ">", ">"]}, "13250": {"id": 13250, "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "13251": {"id": 13251, "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "13252": {"id": 13252, "code": "s1 = \"abcde\";s2 = \"fghihgf\";s3 = \"edcba\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "13253": {"id": 13253, "code": "nim = \"happy,newyear,enjoy\"\nreplace_report = nim.replace(',', ' ')\nprint(replace_report)", "coverage": [">", ">", ">"]}, "13254": {"id": 13254, "code": "nim = \"haiku,atcoder,tasks\"\nreplace_report = nim.replace(',', ' ')\nprint(replace_report)", "coverage": [">", ">", ">"]}, "13255": {"id": 13255, "code": "nim = \"abcde,fghihgf,edcba\"\nreplace_report = nim.replace(',', ' ')\nprint(replace_report)", "coverage": [">", ">", ">"]}, "13256": {"id": 13256, "code": "s = \"happy,newyear,enjoy\"\ns = s.replace(\",\", \" \", 3)\nprint(s)", "coverage": [">", ">", ">"]}, "13257": {"id": 13257, "code": "s = \"haiku,atcoder,tasks\"\ns = s.replace(\",\", \" \", 3)\nprint(s)", "coverage": [">", ">", ">"]}, "13258": {"id": 13258, "code": "s = \"abcde,fghihgf,edcba\"\ns = s.replace(\",\", \" \", 3)\nprint(s)", "coverage": [">", ">", ">"]}, "13259": {"id": 13259, "code": "def actual(s):\n    return s.replace(',', ' ')\ns = \"happy,newyear,enjoy\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "13260": {"id": 13260, "code": "def actual(s):\n    return s.replace(',', ' ')\ns = \"haiku,atcoder,tasks\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "13261": {"id": 13261, "code": "def actual(s):\n    return s.replace(',', ' ')\ns = \"abcde,fghihgf,edcba\"\nprint(actual(s))", "coverage": [">", ">", ">", ">"]}, "13265": {"id": 13265, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13266": {"id": 13266, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13267": {"id": 13267, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13268": {"id": 13268, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13269": {"id": 13269, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13270": {"id": 13270, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13271": {"id": 13271, "code": "a = \"happy,newyear,enjoy\"\nb = a.replace(\",\", \" \")\nprint(b)", "coverage": [">", ">", ">"]}, "13272": {"id": 13272, "code": "a = \"haiku,atcoder,tasks\"\nb = a.replace(\",\", \" \")\nprint(b)", "coverage": [">", ">", ">"]}, "13273": {"id": 13273, "code": "a = \"abcde,fghihgf,edcba\"\nb = a.replace(\",\", \" \")\nprint(b)", "coverage": [">", ">", ">"]}, "13274": {"id": 13274, "code": "S = \"happy,newyear,enjoy\"\na = S.replace(',',' ')\nprint(a)", "coverage": [">", ">", ">"]}, "13275": {"id": 13275, "code": "S = \"haiku,atcoder,tasks\"\na = S.replace(',',' ')\nprint(a)", "coverage": [">", ">", ">"]}, "13276": {"id": 13276, "code": "S = \"abcde,fghihgf,edcba\"\na = S.replace(',',' ')\nprint(a)", "coverage": [">", ">", ">"]}, "13277": {"id": 13277, "code": "s = \"happy,newyear,enjoy\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">"]}, "13278": {"id": 13278, "code": "s = \"haiku,atcoder,tasks\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">"]}, "13279": {"id": 13279, "code": "s = \"abcde,fghihgf,edcba\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">"]}, "13280": {"id": 13280, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13281": {"id": 13281, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13282": {"id": 13282, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13283": {"id": 13283, "code": "S = \"happy,newyear,enjoy\"\nres1 = S[0:5]\nres2 = S[6:13]\nres3 = S[14:19]\nprint(res1,res2,res3)", "coverage": [">", ">", ">", ">", ">"]}, "13284": {"id": 13284, "code": "S = \"haiku,atcoder,tasks\"\nres1 = S[0:5]\nres2 = S[6:13]\nres3 = S[14:19]\nprint(res1,res2,res3)", "coverage": [">", ">", ">", ">", ">"]}, "13285": {"id": 13285, "code": "S = \"abcde,fghihgf,edcba\"\nres1 = S[0:5]\nres2 = S[6:13]\nres3 = S[14:19]\nprint(res1,res2,res3)", "coverage": [">", ">", ">", ">", ">"]}, "13286": {"id": 13286, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "13287": {"id": 13287, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "13288": {"id": 13288, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "13289": {"id": 13289, "code": "s = \"happy,newyear,enjoy\"\na = s[0:5]\nb = s[6:13]\nc = s[14:]\nprint(a, b, c)", "coverage": [">", ">", ">", ">", ">"]}, "13290": {"id": 13290, "code": "s = \"haiku,atcoder,tasks\"\na = s[0:5]\nb = s[6:13]\nc = s[14:]\nprint(a, b, c)", "coverage": [">", ">", ">", ">", ">"]}, "13291": {"id": 13291, "code": "s = \"abcde,fghihgf,edcba\"\na = s[0:5]\nb = s[6:13]\nc = s[14:]\nprint(a, b, c)", "coverage": [">", ">", ">", ">", ">"]}, "13292": {"id": 13292, "code": "happy = \"happy\";newyear = \"newyear\";enjoy = \"enjoy\"\nprint(happy,newyear,enjoy)", "coverage": [">", ">"]}, "13293": {"id": 13293, "code": "happy = \"haiku\";newyear = \"atcoder\";enjoy = \"tasks\"\nprint(happy,newyear,enjoy)", "coverage": [">", ">"]}, "13294": {"id": 13294, "code": "happy = \"abcde\";newyear = \"fghihgf\";enjoy = \"edcba\"\nprint(happy,newyear,enjoy)", "coverage": [">", ">"]}, "13295": {"id": 13295, "code": "string = \"happy,newyear,enjoy\"\nans = string.replace(',', ' ')\nprint(ans)", "coverage": [">", ">", ">"]}, "13296": {"id": 13296, "code": "string = \"haiku,atcoder,tasks\"\nans = string.replace(',', ' ')\nprint(ans)", "coverage": [">", ">", ">"]}, "13297": {"id": 13297, "code": "string = \"abcde,fghihgf,edcba\"\nans = string.replace(',', ' ')\nprint(ans)", "coverage": [">", ">", ">"]}, "13298": {"id": 13298, "code": "inp = \"happy,newyear,enjoy\"\nprint(inp.replace(',',' '))", "coverage": [">", ">"]}, "13299": {"id": 13299, "code": "inp = \"haiku,atcoder,tasks\"\nprint(inp.replace(',',' '))", "coverage": [">", ">"]}, "13300": {"id": 13300, "code": "inp = \"abcde,fghihgf,edcba\"\nprint(inp.replace(',',' '))", "coverage": [">", ">"]}, "13301": {"id": 13301, "code": "text = \"happy,newyear,enjoy\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13302": {"id": 13302, "code": "text = \"haiku,atcoder,tasks\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13303": {"id": 13303, "code": "text = \"abcde,fghihgf,edcba\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13304": {"id": 13304, "code": "import sys\ns = \"happy,newyear,enjoy\"\ndef main():\n    t = s.replace(',', ' ')\n    print(t)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13305": {"id": 13305, "code": "import sys\ns = \"haiku,atcoder,tasks\"\ndef main():\n    t = s.replace(',', ' ')\n    print(t)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13306": {"id": 13306, "code": "import sys\ns = \"abcde,fghihgf,edcba\"\ndef main():\n    t = s.replace(',', ' ')\n    print(t)\nif __name__ ==  '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13307": {"id": 13307, "code": "def main():\n    print(\"happy,newyear,enjoy\".replace(\",\", \" \"))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "13308": {"id": 13308, "code": "def main():\n    print(\"haiku,atcoder,tasks\".replace(\",\", \" \"))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "13309": {"id": 13309, "code": "def main():\n    print(\"abcde,fghihgf,edcba\".replace(\",\", \" \"))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "13310": {"id": 13310, "code": "s = \"happy,newyear,enjoy\"\nA = s[:5]\nB = s[6:13]\nC = s[14:]\nstr = A + \" \" + B + \" \" + C\nprint(str)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13311": {"id": 13311, "code": "s = \"haiku,atcoder,tasks\"\nA = s[:5]\nB = s[6:13]\nC = s[14:]\nstr = A + \" \" + B + \" \" + C\nprint(str)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13312": {"id": 13312, "code": "s = \"abcde,fghihgf,edcba\"\nA = s[:5]\nB = s[6:13]\nC = s[14:]\nstr = A + \" \" + B + \" \" + C\nprint(str)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13313": {"id": 13313, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "13314": {"id": 13314, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "13315": {"id": 13315, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5], s[6:13], s[14:19])", "coverage": [">", ">"]}, "13316": {"id": 13316, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    ans = s.replace(',', ' ')\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13317": {"id": 13317, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    ans = s.replace(',', ' ')\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13318": {"id": 13318, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    ans = s.replace(',', ' ')\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13322": {"id": 13322, "code": "f = \"happy\";s = \"newyear\";ff = \"enjoy\"\nprint(f, s, ff)", "coverage": [">", ">"]}, "13323": {"id": 13323, "code": "f = \"haiku\";s = \"atcoder\";ff = \"tasks\"\nprint(f, s, ff)", "coverage": [">", ">"]}, "13324": {"id": 13324, "code": "f = \"abcde\";s = \"fghihgf\";ff = \"edcba\"\nprint(f, s, ff)", "coverage": [">", ">"]}, "13328": {"id": 13328, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nprint(\"happy,newyear,enjoy\".replace(\",\", \" \"))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13329": {"id": 13329, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nprint(\"haiku,atcoder,tasks\".replace(\",\", \" \"))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13330": {"id": 13330, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nprint(\"abcde,fghihgf,edcba\".replace(\",\", \" \"))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13331": {"id": 13331, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    ans = s.replace(\",\", \" \")\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13332": {"id": 13332, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    ans = s.replace(\",\", \" \")\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13333": {"id": 13333, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    ans = s.replace(\",\", \" \")\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13334": {"id": 13334, "code": "s = \"happy,newyear,enjoy\"\ns=s.replace(',',' ')\nprint(s)", "coverage": [">", ">", ">"]}, "13335": {"id": 13335, "code": "s = \"haiku,atcoder,tasks\"\ns=s.replace(',',' ')\nprint(s)", "coverage": [">", ">", ">"]}, "13336": {"id": 13336, "code": "s = \"abcde,fghihgf,edcba\"\ns=s.replace(',',' ')\nprint(s)", "coverage": [">", ">", ">"]}, "13337": {"id": 13337, "code": "s = \"happy,newyear,enjoy\"\ns1 = s[0:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(\"{} {} {}\".format(s1,s2,s3))", "coverage": [">", ">", ">", ">", ">"]}, "13338": {"id": 13338, "code": "s = \"haiku,atcoder,tasks\"\ns1 = s[0:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(\"{} {} {}\".format(s1,s2,s3))", "coverage": [">", ">", ">", ">", ">"]}, "13339": {"id": 13339, "code": "s = \"abcde,fghihgf,edcba\"\ns1 = s[0:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(\"{} {} {}\".format(s1,s2,s3))", "coverage": [">", ">", ">", ">", ">"]}, "13340": {"id": 13340, "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "13341": {"id": 13341, "code": "a = \"haiku,atcoder,tasks\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "13342": {"id": 13342, "code": "a = \"abcde,fghihgf,edcba\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "13343": {"id": 13343, "code": "s = \"happy,newyear,enjoy\"\nprint(' '.join(s.split(',')))", "coverage": [">", ">"]}, "13344": {"id": 13344, "code": "s = \"haiku,atcoder,tasks\"\nprint(' '.join(s.split(',')))", "coverage": [">", ">"]}, "13345": {"id": 13345, "code": "s = \"abcde,fghihgf,edcba\"\nprint(' '.join(s.split(',')))", "coverage": [">", ">"]}, "13349": {"id": 13349, "code": "def resolve():\n  s = \"happy,newyear,enjoy\"\n  print(s.replace(',', ' '))\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13350": {"id": 13350, "code": "def resolve():\n  s = \"haiku,atcoder,tasks\"\n  print(s.replace(',', ' '))\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13351": {"id": 13351, "code": "def resolve():\n  s = \"abcde,fghihgf,edcba\"\n  print(s.replace(',', ' '))\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13355": {"id": 13355, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint('%s %s %s'%(a,b,c))", "coverage": [">", ">"]}, "13356": {"id": 13356, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint('%s %s %s'%(a,b,c))", "coverage": [">", ">"]}, "13357": {"id": 13357, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint('%s %s %s'%(a,b,c))", "coverage": [">", ">"]}, "13358": {"id": 13358, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    print(s.replace(\",\", \" \"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13359": {"id": 13359, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    print(s.replace(\",\", \" \"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13360": {"id": 13360, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.replace(\",\", \" \"))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13361": {"id": 13361, "code": "icase=0\nif icase==0:\n    s = \"happy,newyear,enjoy\"\n    ss=s[0:5]+\" \"+s[6:13]+\" \"+s[14:19]\n    print(ss)", "coverage": [">", ">", ">", ">", ">"]}, "13362": {"id": 13362, "code": "icase=0\nif icase==0:\n    s = \"haiku,atcoder,tasks\"\n    ss=s[0:5]+\" \"+s[6:13]+\" \"+s[14:19]\n    print(ss)", "coverage": [">", ">", ">", ">", ">"]}, "13363": {"id": 13363, "code": "icase=0\nif icase==0:\n    s = \"abcde,fghihgf,edcba\"\n    ss=s[0:5]+\" \"+s[6:13]+\" \"+s[14:19]\n    print(ss)", "coverage": [">", ">", ">", ">", ">"]}, "13364": {"id": 13364, "code": "def resolve():\n    a = \"happy\";b = \"newyear\";c = \"enjoy\"\n    print(a,b,c)\nresolve()", "coverage": [">", ">", ">", ">"]}, "13365": {"id": 13365, "code": "def resolve():\n    a = \"haiku\";b = \"atcoder\";c = \"tasks\"\n    print(a,b,c)\nresolve()", "coverage": [">", ">", ">", ">"]}, "13366": {"id": 13366, "code": "def resolve():\n    a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\n    print(a,b,c)\nresolve()", "coverage": [">", ">", ">", ">"]}, "13367": {"id": 13367, "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13368": {"id": 13368, "code": "a = \"haiku,atcoder,tasks\"\nprint(a.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13369": {"id": 13369, "code": "a = \"abcde,fghihgf,edcba\"\nprint(a.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13370": {"id": 13370, "code": "def main():\n str = \"happy,newyear,enjoy\"\n print(str.replace(',',' '))\nmain()", "coverage": [">", ">", ">", ">"]}, "13371": {"id": 13371, "code": "def main():\n str = \"haiku,atcoder,tasks\"\n print(str.replace(',',' '))\nmain()", "coverage": [">", ">", ">", ">"]}, "13372": {"id": 13372, "code": "def main():\n str = \"abcde,fghihgf,edcba\"\n print(str.replace(',',' '))\nmain()", "coverage": [">", ">", ">", ">"]}, "13373": {"id": 13373, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "13374": {"id": 13374, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "13375": {"id": 13375, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "13376": {"id": 13376, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "13377": {"id": 13377, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "13378": {"id": 13378, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "13379": {"id": 13379, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5],s[6:13],s[14:20])", "coverage": [">", ">"]}, "13380": {"id": 13380, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5],s[6:13],s[14:20])", "coverage": [">", ">"]}, "13381": {"id": 13381, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5],s[6:13],s[14:20])", "coverage": [">", ">"]}, "13382": {"id": 13382, "code": "s = \"happy,newyear,enjoy\"\nresult=''\nfor i in s:\n    if i==',':\n        result+=' '\n    else:\n        result+=i\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "13383": {"id": 13383, "code": "s = \"haiku,atcoder,tasks\"\nresult=''\nfor i in s:\n    if i==',':\n        result+=' '\n    else:\n        result+=i\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "13384": {"id": 13384, "code": "s = \"abcde,fghihgf,edcba\"\nresult=''\nfor i in s:\n    if i==',':\n        result+=' '\n    else:\n        result+=i\nprint(result)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "13385": {"id": 13385, "code": "s = \"happy,newyear,enjoy\"\nS = \"\"\nfor i in range(len(s)):\n    if s[i] == ',':\n        S += \" \"\n    else:\n        S += s[i]\nprint(S)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "13386": {"id": 13386, "code": "s = \"haiku,atcoder,tasks\"\nS = \"\"\nfor i in range(len(s)):\n    if s[i] == ',':\n        S += \" \"\n    else:\n        S += s[i]\nprint(S)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "13387": {"id": 13387, "code": "s = \"abcde,fghihgf,edcba\"\nS = \"\"\nfor i in range(len(s)):\n    if s[i] == ',':\n        S += \" \"\n    else:\n        S += s[i]\nprint(S)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "13388": {"id": 13388, "code": "s = \"happy,newyear,enjoy\"\nl=\" \".join(s.split(\",\"))\nprint(l)", "coverage": [">", ">", ">"]}, "13389": {"id": 13389, "code": "s = \"haiku,atcoder,tasks\"\nl=\" \".join(s.split(\",\"))\nprint(l)", "coverage": [">", ">", ">"]}, "13390": {"id": 13390, "code": "s = \"abcde,fghihgf,edcba\"\nl=\" \".join(s.split(\",\"))\nprint(l)", "coverage": [">", ">", ">"]}, "13391": {"id": 13391, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint('{} {} {}'.format(a, b, c))", "coverage": [">", ">"]}, "13392": {"id": 13392, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint('{} {} {}'.format(a, b, c))", "coverage": [">", ">"]}, "13393": {"id": 13393, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint('{} {} {}'.format(a, b, c))", "coverage": [">", ">"]}, "13397": {"id": 13397, "code": "x = \"happy,newyear,enjoy\"\nprint(x.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13398": {"id": 13398, "code": "x = \"haiku,atcoder,tasks\"\nprint(x.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13399": {"id": 13399, "code": "x = \"abcde,fghihgf,edcba\"\nprint(x.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13400": {"id": 13400, "code": "lst = \"happy,newyear,enjoy\"\nprint(lst.replace(',',' '))", "coverage": [">", ">"]}, "13401": {"id": 13401, "code": "lst = \"haiku,atcoder,tasks\"\nprint(lst.replace(',',' '))", "coverage": [">", ">"]}, "13402": {"id": 13402, "code": "lst = \"abcde,fghihgf,edcba\"\nprint(lst.replace(',',' '))", "coverage": [">", ">"]}, "13406": {"id": 13406, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(\" \".join([a,b,c]))", "coverage": [">", ">"]}, "13407": {"id": 13407, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(\" \".join([a,b,c]))", "coverage": [">", ">"]}, "13408": {"id": 13408, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(\" \".join([a,b,c]))", "coverage": [">", ">"]}, "13409": {"id": 13409, "code": "Haiku = \"happy newyear enjoy\"\nprint(Haiku)", "coverage": [">", ">"]}, "13410": {"id": 13410, "code": "Haiku = \"haiku atcoder tasks\"\nprint(Haiku)", "coverage": [">", ">"]}, "13411": {"id": 13411, "code": "Haiku = \"abcde fghihgf edcba\"\nprint(Haiku)", "coverage": [">", ">"]}, "13412": {"id": 13412, "code": "data = \"happy,newyear,enjoy\"\nx = data.replace(\",\",\" \")\nprint(x)", "coverage": [">", ">", ">"]}, "13413": {"id": 13413, "code": "data = \"haiku,atcoder,tasks\"\nx = data.replace(\",\",\" \")\nprint(x)", "coverage": [">", ">", ">"]}, "13414": {"id": 13414, "code": "data = \"abcde,fghihgf,edcba\"\nx = data.replace(\",\",\" \")\nprint(x)", "coverage": [">", ">", ">"]}, "13415": {"id": 13415, "code": "S = \"happy,newyear,enjoy\"\nprint(S[:5]+' '+S[6:13]+' '+S[14:])", "coverage": [">", ">"]}, "13416": {"id": 13416, "code": "S = \"haiku,atcoder,tasks\"\nprint(S[:5]+' '+S[6:13]+' '+S[14:])", "coverage": [">", ">"]}, "13417": {"id": 13417, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S[:5]+' '+S[6:13]+' '+S[14:])", "coverage": [">", ">"]}, "13418": {"id": 13418, "code": "s = \"happy,newyear,enjoy\"\ns = s.replace(\",\", \" \")\nprint(s)", "coverage": [">", ">", ">"]}, "13419": {"id": 13419, "code": "s = \"haiku,atcoder,tasks\"\ns = s.replace(\",\", \" \")\nprint(s)", "coverage": [">", ">", ">"]}, "13420": {"id": 13420, "code": "s = \"abcde,fghihgf,edcba\"\ns = s.replace(\",\", \" \")\nprint(s)", "coverage": [">", ">", ">"]}, "13421": {"id": 13421, "code": "S = \"happy,newyear,enjoy\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13422": {"id": 13422, "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13423": {"id": 13423, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13424": {"id": 13424, "code": "s = \"happy,newyear,enjoy\"\na=s[:5]\nb=s[6:13]\nc=s[14:]\nprint(a,b,c)", "coverage": [">", ">", ">", ">", ">"]}, "13425": {"id": 13425, "code": "s = \"haiku,atcoder,tasks\"\na=s[:5]\nb=s[6:13]\nc=s[14:]\nprint(a,b,c)", "coverage": [">", ">", ">", ">", ">"]}, "13426": {"id": 13426, "code": "s = \"abcde,fghihgf,edcba\"\na=s[:5]\nb=s[6:13]\nc=s[14:]\nprint(a,b,c)", "coverage": [">", ">", ">", ">", ">"]}, "13427": {"id": 13427, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    print(s.replace(',', ' '))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13428": {"id": 13428, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    print(s.replace(',', ' '))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13429": {"id": 13429, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.replace(',', ' '))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "13430": {"id": 13430, "code": "n = \"happy,newyear,enjoy\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13431": {"id": 13431, "code": "n = \"haiku,atcoder,tasks\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13432": {"id": 13432, "code": "n = \"abcde,fghihgf,edcba\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13433": {"id": 13433, "code": "l = \"happy\";m = \"newyear\";r = \"enjoy\"\nprint(l, m, r)", "coverage": [">", ">"]}, "13434": {"id": 13434, "code": "l = \"haiku\";m = \"atcoder\";r = \"tasks\"\nprint(l, m, r)", "coverage": [">", ">"]}, "13435": {"id": 13435, "code": "l = \"abcde\";m = \"fghihgf\";r = \"edcba\"\nprint(l, m, r)", "coverage": [">", ">"]}, "13439": {"id": 13439, "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1, s2, s3)", "coverage": [">", ">"]}, "13440": {"id": 13440, "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1, s2, s3)", "coverage": [">", ">"]}, "13441": {"id": 13441, "code": "s1 = \"abcde\";s2 = \"fghihgf\";s3 = \"edcba\"\nprint(s1, s2, s3)", "coverage": [">", ">"]}, "13442": {"id": 13442, "code": "from sys import stdin\ndef S(): return \"happy,newyear,enjoy\".rstrip()\ns = S()\nprint(s.replace(',',' '))", "coverage": [">", ">", ">", ">"]}, "13443": {"id": 13443, "code": "from sys import stdin\ndef S(): return \"haiku,atcoder,tasks\".rstrip()\ns = S()\nprint(s.replace(',',' '))", "coverage": [">", ">", ">", ">"]}, "13444": {"id": 13444, "code": "from sys import stdin\ndef S(): return \"abcde,fghihgf,edcba\".rstrip()\ns = S()\nprint(s.replace(',',' '))", "coverage": [">", ">", ">", ">"]}, "13445": {"id": 13445, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13446": {"id": 13446, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13447": {"id": 13447, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13448": {"id": 13448, "code": "import sys\ndef input(): return \"happy,newyear,enjoy\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\ns = \"happy,newyear,enjoy\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13449": {"id": 13449, "code": "import sys\ndef input(): return \"haiku,atcoder,tasks\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\ns = \"haiku,atcoder,tasks\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13450": {"id": 13450, "code": "import sys\ndef input(): return \"abcde,fghihgf,edcba\".strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\ns = \"abcde,fghihgf,edcba\"\ns = s.replace(',', ' ')\nprint(s)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13454": {"id": 13454, "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13455": {"id": 13455, "code": "a = \"haiku,atcoder,tasks\"\nprint(a.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13456": {"id": 13456, "code": "a = \"abcde,fghihgf,edcba\"\nprint(a.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13460": {"id": 13460, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13461": {"id": 13461, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13462": {"id": 13462, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13463": {"id": 13463, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13464": {"id": 13464, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13465": {"id": 13465, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13466": {"id": 13466, "code": "S = \"happy,newyear,enjoy\"\nx = S[:5]+\" \"+S[6:13]+\" \"+S[14:]\nprint(x)", "coverage": [">", ">", ">"]}, "13467": {"id": 13467, "code": "S = \"haiku,atcoder,tasks\"\nx = S[:5]+\" \"+S[6:13]+\" \"+S[14:]\nprint(x)", "coverage": [">", ">", ">"]}, "13468": {"id": 13468, "code": "S = \"abcde,fghihgf,edcba\"\nx = S[:5]+\" \"+S[6:13]+\" \"+S[14:]\nprint(x)", "coverage": [">", ">", ">"]}, "13469": {"id": 13469, "code": "def resolve():\n    s = \"happy,newyear,enjoy\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()", "coverage": [">", ">", ">", ">"]}, "13470": {"id": 13470, "code": "def resolve():\n    s = \"haiku,atcoder,tasks\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()", "coverage": [">", ">", ">", ">"]}, "13471": {"id": 13471, "code": "def resolve():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.translate(str.maketrans({\",\": \" \"})))\nresolve()", "coverage": [">", ">", ">", ">"]}, "13472": {"id": 13472, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5],s[6:13],s[14:21])", "coverage": [">", ">"]}, "13473": {"id": 13473, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5],s[6:13],s[14:21])", "coverage": [">", ">"]}, "13474": {"id": 13474, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5],s[6:13],s[14:21])", "coverage": [">", ">"]}, "13475": {"id": 13475, "code": "n = \"happy,newyear,enjoy\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13476": {"id": 13476, "code": "n = \"haiku,atcoder,tasks\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13477": {"id": 13477, "code": "n = \"abcde,fghihgf,edcba\"\nprint(n.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13478": {"id": 13478, "code": "s = \"happy,newyear,enjoy\"\nprint( s.replace(\",\", \" \") )", "coverage": [">", ">"]}, "13479": {"id": 13479, "code": "s = \"haiku,atcoder,tasks\"\nprint( s.replace(\",\", \" \") )", "coverage": [">", ">"]}, "13480": {"id": 13480, "code": "s = \"abcde,fghihgf,edcba\"\nprint( s.replace(\",\", \" \") )", "coverage": [">", ">"]}, "13481": {"id": 13481, "code": "t1 = \"happy\";t2 = \"newyear\";t3 = \"enjoy\"\nprint(t1,t2,t3)", "coverage": [">", ">"]}, "13482": {"id": 13482, "code": "t1 = \"haiku\";t2 = \"atcoder\";t3 = \"tasks\"\nprint(t1,t2,t3)", "coverage": [">", ">"]}, "13483": {"id": 13483, "code": "t1 = \"abcde\";t2 = \"fghihgf\";t3 = \"edcba\"\nprint(t1,t2,t3)", "coverage": [">", ">"]}, "13484": {"id": 13484, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "13485": {"id": 13485, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "13486": {"id": 13486, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(',', ' '))", "coverage": [">", ">"]}, "13487": {"id": 13487, "code": "s = \"happy,newyear,enjoy\"\nprint(*s.split(','))", "coverage": [">", ">"]}, "13488": {"id": 13488, "code": "s = \"haiku,atcoder,tasks\"\nprint(*s.split(','))", "coverage": [">", ">"]}, "13489": {"id": 13489, "code": "s = \"abcde,fghihgf,edcba\"\nprint(*s.split(','))", "coverage": [">", ">"]}, "13490": {"id": 13490, "code": "s = \"happy,newyear,enjoy\"\nprint (s[:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "13491": {"id": 13491, "code": "s = \"haiku,atcoder,tasks\"\nprint (s[:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "13492": {"id": 13492, "code": "s = \"abcde,fghihgf,edcba\"\nprint (s[:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "13496": {"id": 13496, "code": "s = \"happy,newyear,enjoy\"\ns1, s2, s3 = s.split(\",\")\nprint(s1, s2, s3)", "coverage": [">", ">", ">"]}, "13497": {"id": 13497, "code": "s = \"haiku,atcoder,tasks\"\ns1, s2, s3 = s.split(\",\")\nprint(s1, s2, s3)", "coverage": [">", ">", ">"]}, "13498": {"id": 13498, "code": "s = \"abcde,fghihgf,edcba\"\ns1, s2, s3 = s.split(\",\")\nprint(s1, s2, s3)", "coverage": [">", ">", ">"]}, "13499": {"id": 13499, "code": "x = \"happy\";y = \"newyear\";z = \"enjoy\"\nprint(x,y,z)", "coverage": [">", ">"]}, "13500": {"id": 13500, "code": "x = \"haiku\";y = \"atcoder\";z = \"tasks\"\nprint(x,y,z)", "coverage": [">", ">"]}, "13501": {"id": 13501, "code": "x = \"abcde\";y = \"fghihgf\";z = \"edcba\"\nprint(x,y,z)", "coverage": [">", ">"]}, "13505": {"id": 13505, "code": "def main():\n    s = \"happy,newyear,enjoy\"\n    s = s.replace(\",\", \" \")\n    print(s)\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "13506": {"id": 13506, "code": "def main():\n    s = \"haiku,atcoder,tasks\"\n    s = s.replace(\",\", \" \")\n    print(s)\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "13507": {"id": 13507, "code": "def main():\n    s = \"abcde,fghihgf,edcba\"\n    s = s.replace(\",\", \" \")\n    print(s)\nmain()", "coverage": [">", ">", ">", ">", ">"]}, "13508": {"id": 13508, "code": "sentence = \"happy,newyear,enjoy\"\nprint(sentence.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13509": {"id": 13509, "code": "sentence = \"haiku,atcoder,tasks\"\nprint(sentence.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13510": {"id": 13510, "code": "sentence = \"abcde,fghihgf,edcba\"\nprint(sentence.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13511": {"id": 13511, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5]+\" \"+s[6:13]+\" \"+s[14:])", "coverage": [">", ">"]}, "13512": {"id": 13512, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5]+\" \"+s[6:13]+\" \"+s[14:])", "coverage": [">", ">"]}, "13513": {"id": 13513, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5]+\" \"+s[6:13]+\" \"+s[14:])", "coverage": [">", ">"]}, "13517": {"id": 13517, "code": "s = \"happy,newyear,enjoy\"\nprint(s[:5]+' '+s[6:13]+' '+s[14:])", "coverage": [">", ">"]}, "13518": {"id": 13518, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[:5]+' '+s[6:13]+' '+s[14:])", "coverage": [">", ">"]}, "13519": {"id": 13519, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[:5]+' '+s[6:13]+' '+s[14:])", "coverage": [">", ">"]}, "13520": {"id": 13520, "code": "word = \"happy,newyear,enjoy\"\nnew_word = word.replace(',', ' ')\nprint(new_word)", "coverage": [">", ">", ">"]}, "13521": {"id": 13521, "code": "word = \"haiku,atcoder,tasks\"\nnew_word = word.replace(',', ' ')\nprint(new_word)", "coverage": [">", ">", ">"]}, "13522": {"id": 13522, "code": "word = \"abcde,fghihgf,edcba\"\nnew_word = word.replace(',', ' ')\nprint(new_word)", "coverage": [">", ">", ">"]}, "13523": {"id": 13523, "code": "d = \"happy,newyear,enjoy\"\nprint( d[:5] + \" \" + d[6:13] + \" \" +d[14:] )", "coverage": [">", ">"]}, "13524": {"id": 13524, "code": "d = \"haiku,atcoder,tasks\"\nprint( d[:5] + \" \" + d[6:13] + \" \" +d[14:] )", "coverage": [">", ">"]}, "13525": {"id": 13525, "code": "d = \"abcde,fghihgf,edcba\"\nprint( d[:5] + \" \" + d[6:13] + \" \" +d[14:] )", "coverage": [">", ">"]}, "13526": {"id": 13526, "code": "A = \"happy\";B = \"newyear\";C = \"enjoy\"\nprint(A, B, C)", "coverage": [">", ">"]}, "13527": {"id": 13527, "code": "A = \"haiku\";B = \"atcoder\";C = \"tasks\"\nprint(A, B, C)", "coverage": [">", ">"]}, "13528": {"id": 13528, "code": "A = \"abcde\";B = \"fghihgf\";C = \"edcba\"\nprint(A, B, C)", "coverage": [">", ">"]}, "13529": {"id": 13529, "code": "s = \"happy,newyear,enjoy\"\ndef main():\n  print(s.replace(',',' '))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">"]}, "13530": {"id": 13530, "code": "s = \"haiku,atcoder,tasks\"\ndef main():\n  print(s.replace(',',' '))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">"]}, "13531": {"id": 13531, "code": "s = \"abcde,fghihgf,edcba\"\ndef main():\n  print(s.replace(',',' '))\nif __name__ == '__main__':\n  main()", "coverage": [">", ">", ">", ">", ">"]}, "13532": {"id": 13532, "code": "n = \"happy,newyear,enjoy\"\nfor i in n:\n    if i==\",\":\n        n=n.replace(\",\",\" \")\nprint(n)", "coverage": [">", ">", ">", ">", ">"]}, "13533": {"id": 13533, "code": "n = \"haiku,atcoder,tasks\"\nfor i in n:\n    if i==\",\":\n        n=n.replace(\",\",\" \")\nprint(n)", "coverage": [">", ">", ">", ">", ">"]}, "13534": {"id": 13534, "code": "n = \"abcde,fghihgf,edcba\"\nfor i in n:\n    if i==\",\":\n        n=n.replace(\",\",\" \")\nprint(n)", "coverage": [">", ">", ">", ">", ">"]}, "13535": {"id": 13535, "code": "def solve():\n    print(\"happy,newyear,enjoy\".replace(',', ' '))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">"]}, "13536": {"id": 13536, "code": "def solve():\n    print(\"haiku,atcoder,tasks\".replace(',', ' '))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">"]}, "13537": {"id": 13537, "code": "def solve():\n    print(\"abcde,fghihgf,edcba\".replace(',', ' '))\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">"]}, "13538": {"id": 13538, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13539": {"id": 13539, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13540": {"id": 13540, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13541": {"id": 13541, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13542": {"id": 13542, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13543": {"id": 13543, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+\" \"+b+\" \"+c)", "coverage": [">", ">"]}, "13544": {"id": 13544, "code": "s = \"happy,newyear,enjoy\"\nprint(\" \".join(s.split(',')))", "coverage": [">", ">"]}, "13545": {"id": 13545, "code": "s = \"haiku,atcoder,tasks\"\nprint(\" \".join(s.split(',')))", "coverage": [">", ">"]}, "13546": {"id": 13546, "code": "s = \"abcde,fghihgf,edcba\"\nprint(\" \".join(s.split(',')))", "coverage": [">", ">"]}, "13547": {"id": 13547, "code": "s = \"happy,newyear,enjoy\"\ns1 = s[:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(s1 + ' ' + s2 + ' ' + s3)", "coverage": [">", ">", ">", ">", ">"]}, "13548": {"id": 13548, "code": "s = \"haiku,atcoder,tasks\"\ns1 = s[:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(s1 + ' ' + s2 + ' ' + s3)", "coverage": [">", ">", ">", ">", ">"]}, "13549": {"id": 13549, "code": "s = \"abcde,fghihgf,edcba\"\ns1 = s[:5]\ns2 = s[6:13]\ns3 = s[14:]\nprint(s1 + ' ' + s2 + ' ' + s3)", "coverage": [">", ">", ">", ">", ">"]}, "13550": {"id": 13550, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "13551": {"id": 13551, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "13552": {"id": 13552, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5]+' '+s[6:13]+' '+s[14:19])", "coverage": [">", ">"]}, "13553": {"id": 13553, "code": "S = \"happy,newyear,enjoy\"\nprint(S[0:5]+' '+S[6:13]+' '+S[14:19])", "coverage": [">", ">"]}, "13554": {"id": 13554, "code": "S = \"haiku,atcoder,tasks\"\nprint(S[0:5]+' '+S[6:13]+' '+S[14:19])", "coverage": [">", ">"]}, "13555": {"id": 13555, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S[0:5]+' '+S[6:13]+' '+S[14:19])", "coverage": [">", ">"]}, "13559": {"id": 13559, "code": "s1 = \"happy\";s2 = \"newyear\";s3 = \"enjoy\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "13560": {"id": 13560, "code": "s1 = \"haiku\";s2 = \"atcoder\";s3 = \"tasks\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "13561": {"id": 13561, "code": "s1 = \"abcde\";s2 = \"fghihgf\";s3 = \"edcba\"\nprint(s1,s2,s3)", "coverage": [">", ">"]}, "13565": {"id": 13565, "code": "s = \"happy,newyear,enjoy\"\nprint(s[0:5] + \" \" + s[6:13] + \" \" + s[14:19])", "coverage": [">", ">"]}, "13566": {"id": 13566, "code": "s = \"haiku,atcoder,tasks\"\nprint(s[0:5] + \" \" + s[6:13] + \" \" + s[14:19])", "coverage": [">", ">"]}, "13567": {"id": 13567, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s[0:5] + \" \" + s[6:13] + \" \" + s[14:19])", "coverage": [">", ">"]}, "13568": {"id": 13568, "code": "S = \"happy,newyear,enjoy\"\nS=S.replace(',',' ')\nprint(S)", "coverage": [">", ">", ">"]}, "13569": {"id": 13569, "code": "S = \"haiku,atcoder,tasks\"\nS=S.replace(',',' ')\nprint(S)", "coverage": [">", ">", ">"]}, "13570": {"id": 13570, "code": "S = \"abcde,fghihgf,edcba\"\nS=S.replace(',',' ')\nprint(S)", "coverage": [">", ">", ">"]}, "13577": {"id": 13577, "code": "Word1 = \"happy\";Word2 = \"newyear\";Word3 = \"enjoy\"\nprint(Word1 + ' ' + Word2 + ' ' + Word3)", "coverage": [">", ">"]}, "13578": {"id": 13578, "code": "Word1 = \"haiku\";Word2 = \"atcoder\";Word3 = \"tasks\"\nprint(Word1 + ' ' + Word2 + ' ' + Word3)", "coverage": [">", ">"]}, "13579": {"id": 13579, "code": "Word1 = \"abcde\";Word2 = \"fghihgf\";Word3 = \"edcba\"\nprint(Word1 + ' ' + Word2 + ' ' + Word3)", "coverage": [">", ">"]}, "13580": {"id": 13580, "code": "S = \"happy,newyear,enjoy\"\nprint(S.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13581": {"id": 13581, "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13582": {"id": 13582, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13583": {"id": 13583, "code": "a = \"happy,newyear,enjoy\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "13584": {"id": 13584, "code": "a = \"haiku,atcoder,tasks\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "13585": {"id": 13585, "code": "a = \"abcde,fghihgf,edcba\"\nprint(a.replace(',',' '))", "coverage": [">", ">"]}, "13589": {"id": 13589, "code": "def resolve():\n    s = \"happy,newyear,enjoy\"\n    print(s.replace(',',' '))\nresolve()", "coverage": [">", ">", ">", ">"]}, "13590": {"id": 13590, "code": "def resolve():\n    s = \"haiku,atcoder,tasks\"\n    print(s.replace(',',' '))\nresolve()", "coverage": [">", ">", ">", ">"]}, "13591": {"id": 13591, "code": "def resolve():\n    s = \"abcde,fghihgf,edcba\"\n    print(s.replace(',',' '))\nresolve()", "coverage": [">", ">", ">", ">"]}, "13592": {"id": 13592, "code": "x = \"happy\";y = \"newyear\";z = \"enjoy\"\nprint(x + ' ' + y + ' ' + z)", "coverage": [">", ">"]}, "13593": {"id": 13593, "code": "x = \"haiku\";y = \"atcoder\";z = \"tasks\"\nprint(x + ' ' + y + ' ' + z)", "coverage": [">", ">"]}, "13594": {"id": 13594, "code": "x = \"abcde\";y = \"fghihgf\";z = \"edcba\"\nprint(x + ' ' + y + ' ' + z)", "coverage": [">", ">"]}, "13598": {"id": 13598, "code": "str = \"happy,newyear,enjoy\"\nprint(str.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13599": {"id": 13599, "code": "str = \"haiku,atcoder,tasks\"\nprint(str.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13600": {"id": 13600, "code": "str = \"abcde,fghihgf,edcba\"\nprint(str.replace(\",\",\" \"))", "coverage": [">", ">"]}, "13601": {"id": 13601, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\ns=a+\" \"+b+\" \"+c\nprint(s)", "coverage": [">", ">", ">"]}, "13602": {"id": 13602, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\ns=a+\" \"+b+\" \"+c\nprint(s)", "coverage": [">", ">", ">"]}, "13603": {"id": 13603, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\ns=a+\" \"+b+\" \"+c\nprint(s)", "coverage": [">", ">", ">"]}, "13604": {"id": 13604, "code": "S = \"happy,newyear,enjoy\"\nprint(S.replace(',',' '))", "coverage": [">", ">"]}, "13605": {"id": 13605, "code": "S = \"haiku,atcoder,tasks\"\nprint(S.replace(',',' '))", "coverage": [">", ">"]}, "13606": {"id": 13606, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S.replace(',',' '))", "coverage": [">", ">"]}, "13607": {"id": 13607, "code": "def main():\n    print(\"happy,newyear,enjoy\".replace(',', ' '))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "13608": {"id": 13608, "code": "def main():\n    print(\"haiku,atcoder,tasks\".replace(',', ' '))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "13609": {"id": 13609, "code": "def main():\n    print(\"abcde,fghihgf,edcba\".replace(',', ' '))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">"]}, "13610": {"id": 13610, "code": "s = \"happy,newyear,enjoy\"\nprint(s.replace(',',' '))", "coverage": [">", ">"]}, "13611": {"id": 13611, "code": "s = \"haiku,atcoder,tasks\"\nprint(s.replace(',',' '))", "coverage": [">", ">"]}, "13612": {"id": 13612, "code": "s = \"abcde,fghihgf,edcba\"\nprint(s.replace(',',' '))", "coverage": [">", ">"]}, "13613": {"id": 13613, "code": "a = \"happy,newyear,enjoy\"\nA = a.replace(\",\",\" \")\nprint(A)", "coverage": [">", ">", ">"]}, "13614": {"id": 13614, "code": "a = \"haiku,atcoder,tasks\"\nA = a.replace(\",\",\" \")\nprint(A)", "coverage": [">", ">", ">"]}, "13615": {"id": 13615, "code": "a = \"abcde,fghihgf,edcba\"\nA = a.replace(\",\",\" \")\nprint(A)", "coverage": [">", ">", ">"]}, "13616": {"id": 13616, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13617": {"id": 13617, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13618": {"id": 13618, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a, b, c)", "coverage": [">", ">"]}, "13619": {"id": 13619, "code": "X = \"happy\";Y = \"newyear\";Z = \"enjoy\"\nprint(X,Y,Z)", "coverage": [">", ">"]}, "13620": {"id": 13620, "code": "X = \"haiku\";Y = \"atcoder\";Z = \"tasks\"\nprint(X,Y,Z)", "coverage": [">", ">"]}, "13621": {"id": 13621, "code": "X = \"abcde\";Y = \"fghihgf\";Z = \"edcba\"\nprint(X,Y,Z)", "coverage": [">", ">"]}, "13622": {"id": 13622, "code": "first = \"happy\";middle = \"newyear\";last = \"enjoy\"\nprint(first, middle, last)", "coverage": [">", ">"]}, "13623": {"id": 13623, "code": "first = \"haiku\";middle = \"atcoder\";last = \"tasks\"\nprint(first, middle, last)", "coverage": [">", ">"]}, "13624": {"id": 13624, "code": "first = \"abcde\";middle = \"fghihgf\";last = \"edcba\"\nprint(first, middle, last)", "coverage": [">", ">"]}, "13628": {"id": 13628, "code": "S = \"happy,newyear,enjoy\"\nprint(S[:5] + \" \" + S[6:13] + \" \" + S[14:])", "coverage": [">", ">"]}, "13629": {"id": 13629, "code": "S = \"haiku,atcoder,tasks\"\nprint(S[:5] + \" \" + S[6:13] + \" \" + S[14:])", "coverage": [">", ">"]}, "13630": {"id": 13630, "code": "S = \"abcde,fghihgf,edcba\"\nprint(S[:5] + \" \" + S[6:13] + \" \" + S[14:])", "coverage": [">", ">"]}, "13631": {"id": 13631, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "13632": {"id": 13632, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "13633": {"id": 13633, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a + ' ' + b + ' ' + c)", "coverage": [">", ">"]}, "13634": {"id": 13634, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c,sep=\" \")", "coverage": [">", ">"]}, "13635": {"id": 13635, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c,sep=\" \")", "coverage": [">", ">"]}, "13636": {"id": 13636, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c,sep=\" \")", "coverage": [">", ">"]}, "13637": {"id": 13637, "code": "s = \"happy\";t = \"newyear\";u = \"enjoy\"\nprint(\"{} {} {}\".format(s,t,u))", "coverage": [">", ">"]}, "13638": {"id": 13638, "code": "s = \"haiku\";t = \"atcoder\";u = \"tasks\"\nprint(\"{} {} {}\".format(s,t,u))", "coverage": [">", ">"]}, "13639": {"id": 13639, "code": "s = \"abcde\";t = \"fghihgf\";u = \"edcba\"\nprint(\"{} {} {}\".format(s,t,u))", "coverage": [">", ">"]}, "13640": {"id": 13640, "code": "a = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13641": {"id": 13641, "code": "a = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13642": {"id": 13642, "code": "a = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a,b,c)", "coverage": [">", ">"]}, "13643": {"id": 13643, "code": "A = \"happy\";B = \"newyear\";C = \"enjoy\"\nprint(A, B, C)", "coverage": [">", ">"]}, "13644": {"id": 13644, "code": "A = \"haiku\";B = \"atcoder\";C = \"tasks\"\nprint(A, B, C)", "coverage": [">", ">"]}, "13645": {"id": 13645, "code": "A = \"abcde\";B = \"fghihgf\";C = \"edcba\"\nprint(A, B, C)", "coverage": [">", ">"]}, "13646": {"id": 13646, "code": "text = \"happy,newyear,enjoy\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13647": {"id": 13647, "code": "text = \"haiku,atcoder,tasks\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13648": {"id": 13648, "code": "text = \"abcde,fghihgf,edcba\"\nprint(text.replace(\",\", \" \"))", "coverage": [">", ">"]}, "13649": {"id": 13649, "code": "x = \"happy\";y = \"newyear\";z = \"enjoy\"\nprint(x,y,z)", "coverage": [">", ">"]}, "13650": {"id": 13650, "code": "x = \"haiku\";y = \"atcoder\";z = \"tasks\"\nprint(x,y,z)", "coverage": [">", ">"]}, "13651": {"id": 13651, "code": "x = \"abcde\";y = \"fghihgf\";z = \"edcba\"\nprint(x,y,z)", "coverage": [">", ">"]}, "13652": {"id": 13652, "code": "import sys\nstdin=sys.stdin\nip=lambda: int(sp())\nlp = \"<function <lambda>>\"\nsp = \"<function <lambda>>\"\na = \"happy\";b = \"newyear\";c = \"enjoy\"\nprint(a+' '+b+' '+c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13653": {"id": 13653, "code": "import sys\nstdin=sys.stdin\nip=lambda: int(sp())\nlp = \"<function <lambda>>\"\nsp = \"<function <lambda>>\"\na = \"haiku\";b = \"atcoder\";c = \"tasks\"\nprint(a+' '+b+' '+c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13654": {"id": 13654, "code": "import sys\nstdin=sys.stdin\nip=lambda: int(sp())\nlp = \"<function <lambda>>\"\nsp = \"<function <lambda>>\"\na = \"abcde\";b = \"fghihgf\";c = \"edcba\"\nprint(a+' '+b+' '+c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13792": {"id": 13792, "code": "n = 6\nL = [1, 2, 3, 2, 2, 1]\ncnt = 1\nstate = None\ni = 1\nwhile i < n:\n    if state is None:\n        if L[i] > L[i - 1]:\n            state = 'up'\n        elif L[i] < L[i - 1]:\n            state = 'down'\n        i += 1\n    else:\n        if state == 'up':\n            while L[i] >= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\n        else:\n            while L[i] <= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13793": {"id": 13793, "code": "n = 9\nL = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nstate = None\ni = 1\nwhile i < n:\n    if state is None:\n        if L[i] > L[i - 1]:\n            state = 'up'\n        elif L[i] < L[i - 1]:\n            state = 'down'\n        i += 1\n    else:\n        if state == 'up':\n            while L[i] >= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\n        else:\n            while L[i] <= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13794": {"id": 13794, "code": "n = 7\nL = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nstate = None\ni = 1\nwhile i < n:\n    if state is None:\n        if L[i] > L[i - 1]:\n            state = 'up'\n        elif L[i] < L[i - 1]:\n            state = 'down'\n        i += 1\n    else:\n        if state == 'up':\n            while L[i] >= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\n        else:\n            while L[i] <= L[i - 1]:\n                i += 1\n                if i >= n - 1:\n                    print(cnt)\n                    exit()\n            cnt += 1\n            i += 1\n            state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "13795": {"id": 13795, "code": "import sys\nreadline = sys.stdin.readline\nflagset = ['not increase', 'flat', 'not decrease']\ndef main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    cnt = 0\n    A0 = A[0]\n    flag = flagset[1]\n    for i in range(N-1):\n        Ai = A[i]\n        Ai1 = A[i+1]\n        if flag == 'flat':\n            if Ai < Ai1:\n                flag = 'not decrease'\n            elif Ai > Ai1:\n                flag = 'not increase'\n            elif Ai == Ai1:\n                flag = 'flat'\n            else:\n                cnt += 1\n        elif flag == 'not decrease':\n            if Ai <= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n        else:\n            if Ai >= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n    cnt += 1\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "13796": {"id": 13796, "code": "import sys\nreadline = sys.stdin.readline\nflagset = ['not increase', 'flat', 'not decrease']\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    cnt = 0\n    A0 = A[0]\n    flag = flagset[1]\n    for i in range(N-1):\n        Ai = A[i]\n        Ai1 = A[i+1]\n        if flag == 'flat':\n            if Ai < Ai1:\n                flag = 'not decrease'\n            elif Ai > Ai1:\n                flag = 'not increase'\n            elif Ai == Ai1:\n                flag = 'flat'\n            else:\n                cnt += 1\n        elif flag == 'not decrease':\n            if Ai <= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n        else:\n            if Ai >= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n    cnt += 1\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "13797": {"id": 13797, "code": "import sys\nreadline = sys.stdin.readline\nflagset = ['not increase', 'flat', 'not decrease']\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    cnt = 0\n    A0 = A[0]\n    flag = flagset[1]\n    for i in range(N-1):\n        Ai = A[i]\n        Ai1 = A[i+1]\n        if flag == 'flat':\n            if Ai < Ai1:\n                flag = 'not decrease'\n            elif Ai > Ai1:\n                flag = 'not increase'\n            elif Ai == Ai1:\n                flag = 'flat'\n            else:\n                cnt += 1\n        elif flag == 'not decrease':\n            if Ai <= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n        else:\n            if Ai >= Ai1:\n                continue\n            else:\n                flag = 'flat'\n                cnt += 1\n    cnt += 1\n    print(cnt)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13798": {"id": 13798, "code": "import math\nimport sys\nn = 6\na = [1, 2, 3, 2, 2, 1]\nflag = \"Init\"\nans = 0\nfor i in range(1, n):\n    if flag == \"Init\":\n        if a[i - 1] == a[i]:\n            pass\n        elif a[i - 1] > a[i]:\n            flag = \"-\"\n        else:\n            flag = \"+\"\n    elif flag == \"-\":\n        if a[i - 1] < a[i]:\n            ans += 1\n            flag = \"Init\"\n    else:\n        if a[i - 1] > a[i]:\n            ans += 1\n            flag = \"Init\"\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "13799": {"id": 13799, "code": "import math\nimport sys\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = \"Init\"\nans = 0\nfor i in range(1, n):\n    if flag == \"Init\":\n        if a[i - 1] == a[i]:\n            pass\n        elif a[i - 1] > a[i]:\n            flag = \"-\"\n        else:\n            flag = \"+\"\n    elif flag == \"-\":\n        if a[i - 1] < a[i]:\n            ans += 1\n            flag = \"Init\"\n    else:\n        if a[i - 1] > a[i]:\n            ans += 1\n            flag = \"Init\"\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "13800": {"id": 13800, "code": "import math\nimport sys\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = \"Init\"\nans = 0\nfor i in range(1, n):\n    if flag == \"Init\":\n        if a[i - 1] == a[i]:\n            pass\n        elif a[i - 1] > a[i]:\n            flag = \"-\"\n        else:\n            flag = \"+\"\n    elif flag == \"-\":\n        if a[i - 1] < a[i]:\n            ans += 1\n            flag = \"Init\"\n    else:\n        if a[i - 1] > a[i]:\n            ans += 1\n            flag = \"Init\"\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13801": {"id": 13801, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup, down = 0, 0\nans = 0\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        up += 1\n    if a[i-1] > a[i]:\n        down += 1\n    if up * down > 0:\n        ans += 1\n        up = 0\n        down = 0\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13802": {"id": 13802, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup, down = 0, 0\nans = 0\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        up += 1\n    if a[i-1] > a[i]:\n        down += 1\n    if up * down > 0:\n        ans += 1\n        up = 0\n        down = 0\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13803": {"id": 13803, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup, down = 0, 0\nans = 0\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        up += 1\n    if a[i-1] > a[i]:\n        down += 1\n    if up * down > 0:\n        ans += 1\n        up = 0\n        down = 0\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13804": {"id": 13804, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(N-1):\n  if A[i+1]-A[i] > 0:\n    if flag == 1:\n      cnt +=0\n    elif flag == -1:\n      cnt +=1\n      flag = 0\n    elif flag ==0:\n      flag = 1\n  elif A[i+1]-A[i] < 0:\n    if flag == 1:\n      cnt +=1\n      flag =0\n    elif flag ==-1:\n      cnt +=0\n    elif flag ==0:\n      flag = -1\n  elif A[i+1]-A[i] == 0:\n    flag += 0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13805": {"id": 13805, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(N-1):\n  if A[i+1]-A[i] > 0:\n    if flag == 1:\n      cnt +=0\n    elif flag == -1:\n      cnt +=1\n      flag = 0\n    elif flag ==0:\n      flag = 1\n  elif A[i+1]-A[i] < 0:\n    if flag == 1:\n      cnt +=1\n      flag =0\n    elif flag ==-1:\n      cnt +=0\n    elif flag ==0:\n      flag = -1\n  elif A[i+1]-A[i] == 0:\n    flag += 0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "13806": {"id": 13806, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nflag = 0\nfor i in range(N-1):\n  if A[i+1]-A[i] > 0:\n    if flag == 1:\n      cnt +=0\n    elif flag == -1:\n      cnt +=1\n      flag = 0\n    elif flag ==0:\n      flag = 1\n  elif A[i+1]-A[i] < 0:\n    if flag == 1:\n      cnt +=1\n      flag =0\n    elif flag ==-1:\n      cnt +=0\n    elif flag ==0:\n      flag = -1\n  elif A[i+1]-A[i] == 0:\n    flag += 0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "13807": {"id": 13807, "code": "from collections import deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)<=1:\n    pass\n  else:\n    if not (v >= tmp[-1] >= tmp[-2] >= tmp[0] or v <= tmp[-1] <= tmp[-2] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nif tmp:\n  cnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13808": {"id": 13808, "code": "from collections import deque\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)<=1:\n    pass\n  else:\n    if not (v >= tmp[-1] >= tmp[-2] >= tmp[0] or v <= tmp[-1] <= tmp[-2] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nif tmp:\n  cnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13809": {"id": 13809, "code": "from collections import deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)<=1:\n    pass\n  else:\n    if not (v >= tmp[-1] >= tmp[-2] >= tmp[0] or v <= tmp[-1] <= tmp[-2] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nif tmp:\n  cnt+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13810": {"id": 13810, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\nleft = 0\nright = 1\ncou = 0\nf = 2\nwhile right!=n and right!=n+1:\n  if l[left]==l[right]:\n    left += 1\n    right += 1\n  elif l[left]<l[right]:\n    while right!=n and l[left]<=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left +=1\n    right += 1\n    f = 1\n  else:\n    while right!=n and l[left]>=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left += 1\n    right += 1\n    f = 0\nif f==2:\n  cou += 1\nelif f==1 and l[-2]>l[-1]:\n  cou += 1\nelif f==0 and l[-2]<l[-1]:\n  cou += 1\nprint(cou)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "13811": {"id": 13811, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nleft = 0\nright = 1\ncou = 0\nf = 2\nwhile right!=n and right!=n+1:\n  if l[left]==l[right]:\n    left += 1\n    right += 1\n  elif l[left]<l[right]:\n    while right!=n and l[left]<=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left +=1\n    right += 1\n    f = 1\n  else:\n    while right!=n and l[left]>=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left += 1\n    right += 1\n    f = 0\nif f==2:\n  cou += 1\nelif f==1 and l[-2]>l[-1]:\n  cou += 1\nelif f==0 and l[-2]<l[-1]:\n  cou += 1\nprint(cou)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", ">"]}, "13812": {"id": 13812, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nleft = 0\nright = 1\ncou = 0\nf = 2\nwhile right!=n and right!=n+1:\n  if l[left]==l[right]:\n    left += 1\n    right += 1\n  elif l[left]<l[right]:\n    while right!=n and l[left]<=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left +=1\n    right += 1\n    f = 1\n  else:\n    while right!=n and l[left]>=l[right]:\n      left += 1\n      right += 1\n    cou += 1\n    left += 1\n    right += 1\n    f = 0\nif f==2:\n  cou += 1\nelif f==1 and l[-2]>l[-1]:\n  cou += 1\nelif f==0 and l[-2]<l[-1]:\n  cou += 1\nprint(cou)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">"]}, "13813": {"id": 13813, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nn = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\nup = None\nprev = None\nfor v in a:\n    if prev == v:\n        continue\n    if prev is not None:\n        if up is None:\n            up = (prev <= v)\n        else:\n            if (prev <= v) != up:\n                ans += 1\n                up = None\n    prev = v\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13814": {"id": 13814, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nup = None\nprev = None\nfor v in a:\n    if prev == v:\n        continue\n    if prev is not None:\n        if up is None:\n            up = (prev <= v)\n        else:\n            if (prev <= v) != up:\n                ans += 1\n                up = None\n    prev = v\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13815": {"id": 13815, "code": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nup = None\nprev = None\nfor v in a:\n    if prev == v:\n        continue\n    if prev is not None:\n        if up is None:\n            up = (prev <= v)\n        else:\n            if (prev <= v) != up:\n                ans += 1\n                up = None\n    prev = v\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13816": {"id": 13816, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\ncount=0\ni=0\nwhile i < n:\n    j=i\n    while j < n-1 and A[j]<=A[j+1]:\n        j += 1\n    k=i\n    while k < n-1 and A[k]>=A[k+1]:\n        k += 1\n    count += 1\n    i = max(j,k)+1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13817": {"id": 13817, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount=0\ni=0\nwhile i < n:\n    j=i\n    while j < n-1 and A[j]<=A[j+1]:\n        j += 1\n    k=i\n    while k < n-1 and A[k]>=A[k+1]:\n        k += 1\n    count += 1\n    i = max(j,k)+1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13818": {"id": 13818, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount=0\ni=0\nwhile i < n:\n    j=i\n    while j < n-1 and A[j]<=A[j+1]:\n        j += 1\n    k=i\n    while k < n-1 and A[k]>=A[k+1]:\n        k += 1\n    count += 1\n    i = max(j,k)+1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13819": {"id": 13819, "code": "n = 6\nal = [1, 2, 3, 2, 2, 1]\nif n == 1:\n    print(1)\n    exit()\nif al[1] > al[0]:\n    now = 'U'\nelif al[1] < al[0]:\n    now = 'D'\nelse:\n    now = 'E'\ncnt = 1\nfor i in range(2, n):\n    if now == 'U':\n        if al[i] > al[i-1] or al[i] == 'E':\n            now = 'U'\n        elif al[i] < al[i-1]:\n            cnt += 1\n            i += 1\n            now = 'E'\n    elif now == 'D':\n        if al[i] < al[i-1] or al[i] == 'E':\n            now = 'D'\n        elif al[i] > al[i-1]:\n            cnt += 1\n            now = 'E'\n    elif now == 'E':\n        if al[i] == al[i - 1]:\n            now = 'E'\n        elif al[i] > al[i - 1]:\n            now = 'U'\n        elif al[i] < al[i - 1]:\n            now = 'D'\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13820": {"id": 13820, "code": "n = 9\nal = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n == 1:\n    print(1)\n    exit()\nif al[1] > al[0]:\n    now = 'U'\nelif al[1] < al[0]:\n    now = 'D'\nelse:\n    now = 'E'\ncnt = 1\nfor i in range(2, n):\n    if now == 'U':\n        if al[i] > al[i-1] or al[i] == 'E':\n            now = 'U'\n        elif al[i] < al[i-1]:\n            cnt += 1\n            i += 1\n            now = 'E'\n    elif now == 'D':\n        if al[i] < al[i-1] or al[i] == 'E':\n            now = 'D'\n        elif al[i] > al[i-1]:\n            cnt += 1\n            now = 'E'\n    elif now == 'E':\n        if al[i] == al[i - 1]:\n            now = 'E'\n        elif al[i] > al[i - 1]:\n            now = 'U'\n        elif al[i] < al[i - 1]:\n            now = 'D'\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">"]}, "13821": {"id": 13821, "code": "n = 7\nal = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n == 1:\n    print(1)\n    exit()\nif al[1] > al[0]:\n    now = 'U'\nelif al[1] < al[0]:\n    now = 'D'\nelse:\n    now = 'E'\ncnt = 1\nfor i in range(2, n):\n    if now == 'U':\n        if al[i] > al[i-1] or al[i] == 'E':\n            now = 'U'\n        elif al[i] < al[i-1]:\n            cnt += 1\n            i += 1\n            now = 'E'\n    elif now == 'D':\n        if al[i] < al[i-1] or al[i] == 'E':\n            now = 'D'\n        elif al[i] > al[i-1]:\n            cnt += 1\n            now = 'E'\n    elif now == 'E':\n        if al[i] == al[i - 1]:\n            now = 'E'\n        elif al[i] > al[i - 1]:\n            now = 'U'\n        elif al[i] < al[i - 1]:\n            now = 'D'\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13822": {"id": 13822, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n    elif(flag == 1 and A[i] < cur):\n        flag = -1\n        ans += 1\n    elif(flag == 0 and A[i] > cur):\n        flag = -1\n        ans += 1\n    cur = A[i]\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13823": {"id": 13823, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n    elif(flag == 1 and A[i] < cur):\n        flag = -1\n        ans += 1\n    elif(flag == 0 and A[i] > cur):\n        flag = -1\n        ans += 1\n    cur = A[i]\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "13824": {"id": 13824, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n    elif(flag == 1 and A[i] < cur):\n        flag = -1\n        ans += 1\n    elif(flag == 0 and A[i] > cur):\n        flag = -1\n        ans += 1\n    cur = A[i]\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13825": {"id": 13825, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 6\na = [1, 2, 3, 2, 2, 1]\nans=0\nup = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        if up == -1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=1\n    elif a[i] > a[i+1]:\n        if up == 1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=-1\nans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13826": {"id": 13826, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=0\nup = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        if up == -1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=1\n    elif a[i] > a[i+1]:\n        if up == 1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=-1\nans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13827": {"id": 13827, "code": "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=0\nup = 0\nfor i in range(n-1):\n    if a[i] < a[i+1]:\n        if up == -1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=1\n    elif a[i] > a[i+1]:\n        if up == 1:\n            ans+=1\n            up=0\n        elif up==0:\n            up=-1\nans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13828": {"id": 13828, "code": "n = 6\nnum_list = [1, 2, 3, 2, 2, 1]\nans = 1\ncnt_list = [0] * n\na = int()\nfor i in range(1,n):\n    if num_list[i-1] > num_list[i]:\n        cnt_list[i] = -1\n    if num_list[i-1] < num_list[i]:\n        cnt_list[i] = 1\nwhile 1 in cnt_list and -1 in cnt_list:\n    del cnt_list[:max(cnt_list.index(1),cnt_list.index(-1))]\n    cnt_list[0] = 0\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13829": {"id": 13829, "code": "n = 9\nnum_list = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncnt_list = [0] * n\na = int()\nfor i in range(1,n):\n    if num_list[i-1] > num_list[i]:\n        cnt_list[i] = -1\n    if num_list[i-1] < num_list[i]:\n        cnt_list[i] = 1\nwhile 1 in cnt_list and -1 in cnt_list:\n    del cnt_list[:max(cnt_list.index(1),cnt_list.index(-1))]\n    cnt_list[0] = 0\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13830": {"id": 13830, "code": "n = 7\nnum_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ncnt_list = [0] * n\na = int()\nfor i in range(1,n):\n    if num_list[i-1] > num_list[i]:\n        cnt_list[i] = -1\n    if num_list[i-1] < num_list[i]:\n        cnt_list[i] = 1\nwhile 1 in cnt_list and -1 in cnt_list:\n    del cnt_list[:max(cnt_list.index(1),cnt_list.index(-1))]\n    cnt_list[0] = 0\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13831": {"id": 13831, "code": "def main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    ans = 1\n    is_add = False\n    is_minus = False\n    tmp = A[0]\n    for a in A[1:]:\n        if tmp > a:\n            if is_add:\n                ans += 1\n                is_add = False\n            else:\n                is_minus = True\n        elif tmp < a:\n            if is_minus:\n                ans += 1\n                is_minus = False\n            else:\n                is_add = True\n        tmp = a\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13832": {"id": 13832, "code": "def main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 1\n    is_add = False\n    is_minus = False\n    tmp = A[0]\n    for a in A[1:]:\n        if tmp > a:\n            if is_add:\n                ans += 1\n                is_add = False\n            else:\n                is_minus = True\n        elif tmp < a:\n            if is_minus:\n                ans += 1\n                is_minus = False\n            else:\n                is_add = True\n        tmp = a\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13833": {"id": 13833, "code": "def main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 1\n    is_add = False\n    is_minus = False\n    tmp = A[0]\n    for a in A[1:]:\n        if tmp > a:\n            if is_add:\n                ans += 1\n                is_add = False\n            else:\n                is_minus = True\n        elif tmp < a:\n            if is_minus:\n                ans += 1\n                is_minus = False\n            else:\n                is_add = True\n        tmp = a\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13834": {"id": 13834, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nAd = [A[i] - A[i+1] for i in range(N-1)]\nans = 1\np = 0\nfor d in Ad:\n    if d * p < 0:\n        ans += 1\n        p = 0\n    elif d != 0:\n        p = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13835": {"id": 13835, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nAd = [A[i] - A[i+1] for i in range(N-1)]\nans = 1\np = 0\nfor d in Ad:\n    if d * p < 0:\n        ans += 1\n        p = 0\n    elif d != 0:\n        p = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13836": {"id": 13836, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nAd = [A[i] - A[i+1] for i in range(N-1)]\nans = 1\np = 0\nfor d in Ad:\n    if d * p < 0:\n        ans += 1\n        p = 0\n    elif d != 0:\n        p = d\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13837": {"id": 13837, "code": "n = 6\na_li = [1, 2, 3, 2, 2, 1]\nif n < 3:\n    print(1)\n    exit()\nans = 1\nflag = \"flat\"\nfor i in range(1,n):\n    if a_li[i-1] > a_li[i]:\n        if flag == \"up\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"down\"\n    elif a_li[i-1] < a_li[i]:\n        if flag == \"down\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"up\"\n    else:\n        if flag == \"flat\":\n            flag = \"flat\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">"]}, "13838": {"id": 13838, "code": "n = 9\na_li = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n < 3:\n    print(1)\n    exit()\nans = 1\nflag = \"flat\"\nfor i in range(1,n):\n    if a_li[i-1] > a_li[i]:\n        if flag == \"up\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"down\"\n    elif a_li[i-1] < a_li[i]:\n        if flag == \"down\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"up\"\n    else:\n        if flag == \"flat\":\n            flag = \"flat\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", "!", "!", ">"]}, "13839": {"id": 13839, "code": "n = 7\na_li = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n < 3:\n    print(1)\n    exit()\nans = 1\nflag = \"flat\"\nfor i in range(1,n):\n    if a_li[i-1] > a_li[i]:\n        if flag == \"up\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"down\"\n    elif a_li[i-1] < a_li[i]:\n        if flag == \"down\":\n            ans += 1\n            flag = \"flat\"\n            continue\n        flag = \"up\"\n    else:\n        if flag == \"flat\":\n            flag = \"flat\"\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "13840": {"id": 13840, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount=1\nsign=0\nfor i in range(N-1):\n    diff=A[i+1]-A[i]\n    if sign*diff<0:\n        count+=1\n        sign=0\n    elif sign==0:\n        sign=diff\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13841": {"id": 13841, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount=1\nsign=0\nfor i in range(N-1):\n    diff=A[i+1]-A[i]\n    if sign*diff<0:\n        count+=1\n        sign=0\n    elif sign==0:\n        sign=diff\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13842": {"id": 13842, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount=1\nsign=0\nfor i in range(N-1):\n    diff=A[i+1]-A[i]\n    if sign*diff<0:\n        count+=1\n        sign=0\n    elif sign==0:\n        sign=diff\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13843": {"id": 13843, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans=1;before=a[0];mode=0\nfor i,v in enumerate(a):\n    nmode=0\n    if before>v:\n        nmode=-1\n    elif before<v:\n        nmode=1\n    before=v\n    if mode*nmode==-1:\n        mode=0\n        ans+=1\n    elif mode==0:\n        mode=nmode\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13844": {"id": 13844, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1;before=a[0];mode=0\nfor i,v in enumerate(a):\n    nmode=0\n    if before>v:\n        nmode=-1\n    elif before<v:\n        nmode=1\n    before=v\n    if mode*nmode==-1:\n        mode=0\n        ans+=1\n    elif mode==0:\n        mode=nmode\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13845": {"id": 13845, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\nfirst = True\nincreasing = True\nfor i in range(1, n):\n    if (first):\n        if (a[i] > a[i-1]):\n            first = False\n            increasing = True\n        elif (a[i] < a[i-1]):\n            first = False\n            increasing = False\n    else:\n        if (a[i] > a[i-1]) and (increasing == False):\n            cnt += 1\n            first = True\n        elif (a[i] < a[i-1]) and (increasing == True):\n            cnt += 1\n            first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">"]}, "13846": {"id": 13846, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nfirst = True\nincreasing = True\nfor i in range(1, n):\n    if (first):\n        if (a[i] > a[i-1]):\n            first = False\n            increasing = True\n        elif (a[i] < a[i-1]):\n            first = False\n            increasing = False\n    else:\n        if (a[i] > a[i-1]) and (increasing == False):\n            cnt += 1\n            first = True\n        elif (a[i] < a[i-1]) and (increasing == True):\n            cnt += 1\n            first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "13847": {"id": 13847, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nfirst = True\nincreasing = True\nfor i in range(1, n):\n    if (first):\n        if (a[i] > a[i-1]):\n            first = False\n            increasing = True\n        elif (a[i] < a[i-1]):\n            first = False\n            increasing = False\n    else:\n        if (a[i] > a[i-1]) and (increasing == False):\n            cnt += 1\n            first = True\n        elif (a[i] < a[i-1]) and (increasing == True):\n            cnt += 1\n            first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13848": {"id": 13848, "code": "N = 6\nAs = [1, 2, 3, 2, 2, 1]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before == As[i]:\n        continue\n    elif before < As[i]:\n        if zoka == 0 or zoka == 1:\n            before = As[i]\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\n    else:\n        if zoka == 0 or zoka == 2:\n            before = As[i]\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13849": {"id": 13849, "code": "N = 9\nAs = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before == As[i]:\n        continue\n    elif before < As[i]:\n        if zoka == 0 or zoka == 1:\n            before = As[i]\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\n    else:\n        if zoka == 0 or zoka == 2:\n            before = As[i]\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", "!", ">", ">", ">", ">"]}, "13850": {"id": 13850, "code": "N = 7\nAs = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before == As[i]:\n        continue\n    elif before < As[i]:\n        if zoka == 0 or zoka == 1:\n            before = As[i]\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\n    else:\n        if zoka == 0 or zoka == 2:\n            before = As[i]\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n            before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13851": {"id": 13851, "code": "def nyu():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    return N,A\ndef kansu(LN,LA):\n    highflg = False\n    lowflg = False\n    count = 1\n    for n in range(LN-1):\n        if LA[n] == LA[n+1]:\n            continue\n        elif LA[n] < LA[n+1]:\n            highflg = True\n            if lowflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n        else:\n            lowflg = True\n            if highflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n    print(count)\nN,A = nyu()\nkansu(N,A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13852": {"id": 13852, "code": "def nyu():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    return N,A\ndef kansu(LN,LA):\n    highflg = False\n    lowflg = False\n    count = 1\n    for n in range(LN-1):\n        if LA[n] == LA[n+1]:\n            continue\n        elif LA[n] < LA[n+1]:\n            highflg = True\n            if lowflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n        else:\n            lowflg = True\n            if highflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n    print(count)\nN,A = nyu()\nkansu(N,A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13853": {"id": 13853, "code": "def nyu():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    return N,A\ndef kansu(LN,LA):\n    highflg = False\n    lowflg = False\n    count = 1\n    for n in range(LN-1):\n        if LA[n] == LA[n+1]:\n            continue\n        elif LA[n] < LA[n+1]:\n            highflg = True\n            if lowflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n        else:\n            lowflg = True\n            if highflg == True:\n                count += 1\n                lowflg = False\n                highflg = False\n    print(count)\nN,A = nyu()\nkansu(N,A)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13854": {"id": 13854, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nstate = None\ncnt = 1\nfor i in range(1, n):\n    if state == None:\n        if a[i] > a[i-1]:\n            state = 'up'\n        elif a[i] < a[i-1]:\n            state = 'down'\n        else:\n            continue\n    elif state == 'up' and a[i] < a[i-1]:\n        cnt += 1\n        state = None\n    elif state == 'down' and a[i] > a[i-1]:\n        cnt += 1\n        state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "13855": {"id": 13855, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstate = None\ncnt = 1\nfor i in range(1, n):\n    if state == None:\n        if a[i] > a[i-1]:\n            state = 'up'\n        elif a[i] < a[i-1]:\n            state = 'down'\n        else:\n            continue\n    elif state == 'up' and a[i] < a[i-1]:\n        cnt += 1\n        state = None\n    elif state == 'down' and a[i] > a[i-1]:\n        cnt += 1\n        state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "13856": {"id": 13856, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstate = None\ncnt = 1\nfor i in range(1, n):\n    if state == None:\n        if a[i] > a[i-1]:\n            state = 'up'\n        elif a[i] < a[i-1]:\n            state = 'down'\n        else:\n            continue\n    elif state == 'up' and a[i] < a[i-1]:\n        cnt += 1\n        state = None\n    elif state == 'down' and a[i] > a[i-1]:\n        cnt += 1\n        state = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13857": {"id": 13857, "code": "n = 6\nlis = [1, 2, 3, 2, 2, 1]\ncnt = 1\nflag = 0\nfor i in range(n-1):\n    if lis[i+1] - lis[i] >0:\n        if flag == 1:\n            pass\n        elif flag == -1:\n            flag = 0\n            cnt += 1\n        elif flag == 0:\n            flag = 1\n    elif lis[i+1] - lis[i] < 0:\n        if flag == 1:\n            flag = 0\n            cnt += 1\n        elif flag == -1:\n            pass\n        elif flag == 0:\n            flag = -1\n    elif lis[i+1] - lis[i] == 0:\n        pass\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13858": {"id": 13858, "code": "n = 9\nlis = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nflag = 0\nfor i in range(n-1):\n    if lis[i+1] - lis[i] >0:\n        if flag == 1:\n            pass\n        elif flag == -1:\n            flag = 0\n            cnt += 1\n        elif flag == 0:\n            flag = 1\n    elif lis[i+1] - lis[i] < 0:\n        if flag == 1:\n            flag = 0\n            cnt += 1\n        elif flag == -1:\n            pass\n        elif flag == 0:\n            flag = -1\n    elif lis[i+1] - lis[i] == 0:\n        pass\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "13859": {"id": 13859, "code": "n = 7\nlis = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nflag = 0\nfor i in range(n-1):\n    if lis[i+1] - lis[i] >0:\n        if flag == 1:\n            pass\n        elif flag == -1:\n            flag = 0\n            cnt += 1\n        elif flag == 0:\n            flag = 1\n    elif lis[i+1] - lis[i] < 0:\n        if flag == 1:\n            flag = 0\n            cnt += 1\n        elif flag == -1:\n            pass\n        elif flag == 0:\n            flag = -1\n    elif lis[i+1] - lis[i] == 0:\n        pass\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "13860": {"id": 13860, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncount = 1\nflag = 0\nfor i in range(len(a)-1):\n    if flag == 1:\n        if a[i] > a[i+1]:\n            flag = 0\n            count += 1\n    elif flag == -1:\n        if a[i] < a[i+1]:\n            flag = 0\n            count += 1\n    else:\n        if i == len(a)-1:\n            count+1\n        elif a[i] < a[i+1]:\n            flag = 1\n        elif a[i] > a[i+1]:\n            flag = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">", ">", ">", ">", ">"]}, "13861": {"id": 13861, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nflag = 0\nfor i in range(len(a)-1):\n    if flag == 1:\n        if a[i] > a[i+1]:\n            flag = 0\n            count += 1\n    elif flag == -1:\n        if a[i] < a[i+1]:\n            flag = 0\n            count += 1\n    else:\n        if i == len(a)-1:\n            count+1\n        elif a[i] < a[i+1]:\n            flag = 1\n        elif a[i] > a[i+1]:\n            flag = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", ">"]}, "13862": {"id": 13862, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nflag = 0\nfor i in range(len(a)-1):\n    if flag == 1:\n        if a[i] > a[i+1]:\n            flag = 0\n            count += 1\n    elif flag == -1:\n        if a[i] < a[i+1]:\n            flag = 0\n            count += 1\n    else:\n        if i == len(a)-1:\n            count+1\n        elif a[i] < a[i+1]:\n            flag = 1\n        elif a[i] > a[i+1]:\n            flag = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">"]}, "13863": {"id": 13863, "code": "n = 6\na_l = [1, 2, 3, 2, 2, 1]\nans = 1\nis_plus = None\nsub = []\nfor i in a_l:\n    if len(sub) == 0:\n        sub.append(i)\n        continue\n    if i == sub[-1]:\n        sub.append(i)\n        continue\n    if is_plus is None:\n        if sub[-1] > i:\n            is_plus = False\n        else:\n            is_plus = True\n        sub.append(i)\n    elif is_plus is True:\n        if sub[-1] > i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\n    else:\n        if sub[-1] < i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13864": {"id": 13864, "code": "n = 9\na_l = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nis_plus = None\nsub = []\nfor i in a_l:\n    if len(sub) == 0:\n        sub.append(i)\n        continue\n    if i == sub[-1]:\n        sub.append(i)\n        continue\n    if is_plus is None:\n        if sub[-1] > i:\n            is_plus = False\n        else:\n            is_plus = True\n        sub.append(i)\n    elif is_plus is True:\n        if sub[-1] > i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\n    else:\n        if sub[-1] < i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13865": {"id": 13865, "code": "n = 7\na_l = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nis_plus = None\nsub = []\nfor i in a_l:\n    if len(sub) == 0:\n        sub.append(i)\n        continue\n    if i == sub[-1]:\n        sub.append(i)\n        continue\n    if is_plus is None:\n        if sub[-1] > i:\n            is_plus = False\n        else:\n            is_plus = True\n        sub.append(i)\n    elif is_plus is True:\n        if sub[-1] > i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\n    else:\n        if sub[-1] < i:\n            sub = [i]\n            ans += 1\n            is_plus = None\n        else:\n            sub.append(i)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "13866": {"id": 13866, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncur = 0\ncnt = 0\nwhile cur<N:\n    cnt += 1\n    c = 0\n    cur1 = cur+1\n    for i in range(cur+1,N):\n        if A[i]>=A[i-1]:\n            cur1 = i+1\n        else:\n            cur1 = i\n            break\n    cur2 = cur+1\n    for i in range(cur+1,N):\n        if A[i]<=A[i-1]:\n            cur2 = i+1\n        else:\n            cur2 = i\n            break\n    cur = max(cur1,cur2)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13867": {"id": 13867, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncur = 0\ncnt = 0\nwhile cur<N:\n    cnt += 1\n    c = 0\n    cur1 = cur+1\n    for i in range(cur+1,N):\n        if A[i]>=A[i-1]:\n            cur1 = i+1\n        else:\n            cur1 = i\n            break\n    cur2 = cur+1\n    for i in range(cur+1,N):\n        if A[i]<=A[i-1]:\n            cur2 = i+1\n        else:\n            cur2 = i\n            break\n    cur = max(cur1,cur2)\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13868": {"id": 13868, "code": "def main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    idx = 0\n    ans = 0\n    for i in range(len(A)):\n        if idx + 1 > len(A) - 1 :\n            break\n        m = \"\"\n        if A[idx] < A[idx + 1]:\n            m = \"+\"\n        elif A[idx] > A[idx + 1]:\n            m = \"-\"\n        else:\n            find = False\n            for j in range(idx, len(A)-1):\n                if A[j] < A[j + 1]:\n                    m = \"+\"\n                    find = True\n                    idx = j\n                    break\n                elif A[j] > A[j + 1]:\n                    m = \"-\"\n                    find = True\n                    idx = j\n                    break\n            if find == False:\n                print(ans + 1)\n                exit()\n        for j in range(idx, len(A) - 1):\n            if m == \"+\":\n                if A[j] <= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n            elif m == \"-\":\n                if A[j] >= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n    print(ans + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "13869": {"id": 13869, "code": "def main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    idx = 0\n    ans = 0\n    for i in range(len(A)):\n        if idx + 1 > len(A) - 1 :\n            break\n        m = \"\"\n        if A[idx] < A[idx + 1]:\n            m = \"+\"\n        elif A[idx] > A[idx + 1]:\n            m = \"-\"\n        else:\n            find = False\n            for j in range(idx, len(A)-1):\n                if A[j] < A[j + 1]:\n                    m = \"+\"\n                    find = True\n                    idx = j\n                    break\n                elif A[j] > A[j + 1]:\n                    m = \"-\"\n                    find = True\n                    idx = j\n                    break\n            if find == False:\n                print(ans + 1)\n                exit()\n        for j in range(idx, len(A) - 1):\n            if m == \"+\":\n                if A[j] <= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n            elif m == \"-\":\n                if A[j] >= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n    print(ans + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "13870": {"id": 13870, "code": "def main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    idx = 0\n    ans = 0\n    for i in range(len(A)):\n        if idx + 1 > len(A) - 1 :\n            break\n        m = \"\"\n        if A[idx] < A[idx + 1]:\n            m = \"+\"\n        elif A[idx] > A[idx + 1]:\n            m = \"-\"\n        else:\n            find = False\n            for j in range(idx, len(A)-1):\n                if A[j] < A[j + 1]:\n                    m = \"+\"\n                    find = True\n                    idx = j\n                    break\n                elif A[j] > A[j + 1]:\n                    m = \"-\"\n                    find = True\n                    idx = j\n                    break\n            if find == False:\n                print(ans + 1)\n                exit()\n        for j in range(idx, len(A) - 1):\n            if m == \"+\":\n                if A[j] <= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n            elif m == \"-\":\n                if A[j] >= A[j + 1]:\n                    idx = j + 1\n                else:\n                    idx = j + 1\n                    ans += 1\n                    break\n    print(ans + 1)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "13871": {"id": 13871, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nsq = 0\na = A[0]\nfor i in range(1,n):\n    if sq == 0 and A[i] < a:\n        sq = -1\n    elif sq == 0 and A[i] > a:\n        sq = 1\n    elif (sq == 1 and A[i] < a) or (sq == -1 and A[i] > a):\n        ans += 1\n        sq = 0\n    a = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13872": {"id": 13872, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nsq = 0\na = A[0]\nfor i in range(1,n):\n    if sq == 0 and A[i] < a:\n        sq = -1\n    elif sq == 0 and A[i] > a:\n        sq = 1\n    elif (sq == 1 and A[i] < a) or (sq == -1 and A[i] > a):\n        ans += 1\n        sq = 0\n    a = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13873": {"id": 13873, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nsq = 0\na = A[0]\nfor i in range(1,n):\n    if sq == 0 and A[i] < a:\n        sq = -1\n    elif sq == 0 and A[i] > a:\n        sq = 1\n    elif (sq == 1 and A[i] < a) or (sq == -1 and A[i] > a):\n        ans += 1\n        sq = 0\n    a = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13874": {"id": 13874, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nres = 0\ni=0\nwhile(i<N):    \n    while(i+1 < N and A[i] == A[i+1]):\n        i+=1\n    if(i+1 < N and A[i] < A[i+1]):\n        while(i+1 < N and A[i] <= A[i+1]):\n            i+=1\n    elif(i+1 < N and A[i] > A[i+1]):\n        while(i+1 < N and A[i] >= A[i+1]):\n            i+=1\n    res+=1\n    i+=1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13875": {"id": 13875, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nres = 0\ni=0\nwhile(i<N):    \n    while(i+1 < N and A[i] == A[i+1]):\n        i+=1\n    if(i+1 < N and A[i] < A[i+1]):\n        while(i+1 < N and A[i] <= A[i+1]):\n            i+=1\n    elif(i+1 < N and A[i] > A[i+1]):\n        while(i+1 < N and A[i] >= A[i+1]):\n            i+=1\n    res+=1\n    i+=1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13876": {"id": 13876, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nres = 0\ni=0\nwhile(i<N):    \n    while(i+1 < N and A[i] == A[i+1]):\n        i+=1\n    if(i+1 < N and A[i] < A[i+1]):\n        while(i+1 < N and A[i] <= A[i+1]):\n            i+=1\n    elif(i+1 < N and A[i] > A[i+1]):\n        while(i+1 < N and A[i] >= A[i+1]):\n            i+=1\n    res+=1\n    i+=1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13877": {"id": 13877, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nb = []\nflg = 'hi'\nfor i in range(n-1):\n    if a[i] > a[i+1]:\n        if flg != 'pl':\n            flg = 'mi'\n        else:\n            b.append(i)\n            flg = 'hi'\n    elif a[i] < a[i+1]:\n        if flg != 'mi':\n            flg = 'pl'\n        else:\n            b.append(i)\n            flg = 'hi'\nprint(len(b)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "13878": {"id": 13878, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nb = []\nflg = 'hi'\nfor i in range(n-1):\n    if a[i] > a[i+1]:\n        if flg != 'pl':\n            flg = 'mi'\n        else:\n            b.append(i)\n            flg = 'hi'\n    elif a[i] < a[i+1]:\n        if flg != 'mi':\n            flg = 'pl'\n        else:\n            b.append(i)\n            flg = 'hi'\nprint(len(b)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "13879": {"id": 13879, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nb = []\nflg = 'hi'\nfor i in range(n-1):\n    if a[i] > a[i+1]:\n        if flg != 'pl':\n            flg = 'mi'\n        else:\n            b.append(i)\n            flg = 'hi'\n    elif a[i] < a[i+1]:\n        if flg != 'mi':\n            flg = 'pl'\n        else:\n            b.append(i)\n            flg = 'hi'\nprint(len(b)+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13880": {"id": 13880, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nnow = False\ncount = 1\nfor i in range(N-1):\n    if A[i] < A[i+1]:\n        if now == 1:\n            pass\n        elif now == -1:\n            count += 1\n            now = False\n        else:\n            now = 1\n    elif A[i] > A[i+1]:\n        if now == 1:\n            count += 1\n            now = False\n        elif now == -1:\n            pass\n        else:\n            now = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13881": {"id": 13881, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnow = False\ncount = 1\nfor i in range(N-1):\n    if A[i] < A[i+1]:\n        if now == 1:\n            pass\n        elif now == -1:\n            count += 1\n            now = False\n        else:\n            now = 1\n    elif A[i] > A[i+1]:\n        if now == 1:\n            count += 1\n            now = False\n        elif now == -1:\n            pass\n        else:\n            now = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13882": {"id": 13882, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnow = False\ncount = 1\nfor i in range(N-1):\n    if A[i] < A[i+1]:\n        if now == 1:\n            pass\n        elif now == -1:\n            count += 1\n            now = False\n        else:\n            now = 1\n    elif A[i] > A[i+1]:\n        if now == 1:\n            count += 1\n            now = False\n        elif now == -1:\n            pass\n        else:\n            now = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13883": {"id": 13883, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 6\na = [1, 2, 3, 2, 2, 1]\na_ = []\nfor i in a:\n    if not a_:\n        a_.append(i)\n    elif i != a_[-1]:\n        a_.append(i)\ncnt = 0\nflag = 0\nfor i in range(len(a_) - 1):\n    if flag == 0:\n        if a_[i + 1] - a_[i] > 0:\n            flag = 1\n        else:\n            flag = -1\n        continue\n    if flag == 1 and a_[i + 1] - a_[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a_[i + 1] - a_[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13884": {"id": 13884, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\na_ = []\nfor i in a:\n    if not a_:\n        a_.append(i)\n    elif i != a_[-1]:\n        a_.append(i)\ncnt = 0\nflag = 0\nfor i in range(len(a_) - 1):\n    if flag == 0:\n        if a_[i + 1] - a_[i] > 0:\n            flag = 1\n        else:\n            flag = -1\n        continue\n    if flag == 1 and a_[i + 1] - a_[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a_[i + 1] - a_[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13885": {"id": 13885, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nif n == 1 or n == 2:\n  ans = 1\nelse:\n  b = [a[0], a[1]]\n  if a[1] - a[0] > 0:\n    f = '+'\n  elif a[1] - a[0] < 0:\n    f = '-'\n  elif a[1] - a[0] == 0:\n    f = ''\n  for i in range(2, n):\n    if f == '+' and a[i] - b[-1] >= 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '+' and a[i] - b[-1] < 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '-' and a[i] - b[-1] <= 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '-' and a[i] - b[-1] > 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '' and a[i] - b[-1] > 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '' and a[i] - b[-1] < 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '' and a[i] - b[-1] == 0:\n      b.append(a[i])\n      f = ''\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13886": {"id": 13886, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nif n == 1 or n == 2:\n  ans = 1\nelse:\n  b = [a[0], a[1]]\n  if a[1] - a[0] > 0:\n    f = '+'\n  elif a[1] - a[0] < 0:\n    f = '-'\n  elif a[1] - a[0] == 0:\n    f = ''\n  for i in range(2, n):\n    if f == '+' and a[i] - b[-1] >= 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '+' and a[i] - b[-1] < 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '-' and a[i] - b[-1] <= 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '-' and a[i] - b[-1] > 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '' and a[i] - b[-1] > 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '' and a[i] - b[-1] < 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '' and a[i] - b[-1] == 0:\n      b.append(a[i])\n      f = ''\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">"]}, "13887": {"id": 13887, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nif n == 1 or n == 2:\n  ans = 1\nelse:\n  b = [a[0], a[1]]\n  if a[1] - a[0] > 0:\n    f = '+'\n  elif a[1] - a[0] < 0:\n    f = '-'\n  elif a[1] - a[0] == 0:\n    f = ''\n  for i in range(2, n):\n    if f == '+' and a[i] - b[-1] >= 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '+' and a[i] - b[-1] < 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '-' and a[i] - b[-1] <= 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '-' and a[i] - b[-1] > 0:\n      b = [a[i]]\n      f = ''\n      ans += 1\n    elif f == '' and a[i] - b[-1] > 0:\n      b.append(a[i])\n      f = '+'\n    elif f == '' and a[i] - b[-1] < 0:\n      b.append(a[i])\n      f = '-'\n    elif f == '' and a[i] - b[-1] == 0:\n      b.append(a[i])\n      f = ''\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "13888": {"id": 13888, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nzo=0 ; mi=0 ;ans=1\nfor i in range(n-1):\n    if zo==mi==0:\n        if A[i]==A[i+1]:\n            continue\n        elif A[i]>A[i+1]:\n            mi=1; continue\n        else:\n            zo=1;continue\n    if zo:\n        if A[i+1]<A[i]:\n            zo=0; ans+=1\n    if mi and A[i]<A[i+1]:\n        mi=0 ; ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "13889": {"id": 13889, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzo=0 ; mi=0 ;ans=1\nfor i in range(n-1):\n    if zo==mi==0:\n        if A[i]==A[i+1]:\n            continue\n        elif A[i]>A[i+1]:\n            mi=1; continue\n        else:\n            zo=1;continue\n    if zo:\n        if A[i+1]<A[i]:\n            zo=0; ans+=1\n    if mi and A[i]<A[i+1]:\n        mi=0 ; ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">"]}, "13890": {"id": 13890, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzo=0 ; mi=0 ;ans=1\nfor i in range(n-1):\n    if zo==mi==0:\n        if A[i]==A[i+1]:\n            continue\n        elif A[i]>A[i+1]:\n            mi=1; continue\n        else:\n            zo=1;continue\n    if zo:\n        if A[i+1]<A[i]:\n            zo=0; ans+=1\n    if mi and A[i]<A[i+1]:\n        mi=0 ; ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13891": {"id": 13891, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nbol = 0\ncnt = 1\nfor i in range(N-1):\n    if bol == 0:\n        if A[i] > A[i+1]:\n            bol = -1\n        elif A[i] < A[i+1]:\n            bol = 1\n    elif bol == 1:\n        if A[i] > A[i+1]:\n            cnt += 1\n            bol = 0\n    else:\n        if A[i] < A[i+1]:\n            cnt += 1\n            bol = 0\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13892": {"id": 13892, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nbol = 0\ncnt = 1\nfor i in range(N-1):\n    if bol == 0:\n        if A[i] > A[i+1]:\n            bol = -1\n        elif A[i] < A[i+1]:\n            bol = 1\n    elif bol == 1:\n        if A[i] > A[i+1]:\n            cnt += 1\n            bol = 0\n    else:\n        if A[i] < A[i+1]:\n            cnt += 1\n            bol = 0\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13893": {"id": 13893, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nbol = 0\ncnt = 1\nfor i in range(N-1):\n    if bol == 0:\n        if A[i] > A[i+1]:\n            bol = -1\n        elif A[i] < A[i+1]:\n            bol = 1\n    elif bol == 1:\n        if A[i] > A[i+1]:\n            cnt += 1\n            bol = 0\n    else:\n        if A[i] < A[i+1]:\n            cnt += 1\n            bol = 0\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13894": {"id": 13894, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\n    quit()\nA.append(A[N-1])\nans = 1\nlast = A[0]\ns = 0\nfor i in range(N-1):\n    if not(A[s] <= A[i] <= A[i+1]) and not(A[s] >= A[i] >= A[i+1]):\n        s = i + 1\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13895": {"id": 13895, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N == 1:\n    print(1)\n    quit()\nA.append(A[N-1])\nans = 1\nlast = A[0]\ns = 0\nfor i in range(N-1):\n    if not(A[s] <= A[i] <= A[i+1]) and not(A[s] >= A[i] >= A[i+1]):\n        s = i + 1\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13896": {"id": 13896, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\n    quit()\nA.append(A[N-1])\nans = 1\nlast = A[0]\ns = 0\nfor i in range(N-1):\n    if not(A[s] <= A[i] <= A[i+1]) and not(A[s] >= A[i] >= A[i+1]):\n        s = i + 1\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13897": {"id": 13897, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans=1\ntemp=0\nfor i in range(1,n):\n  if a[i-1]<a[i] and temp==0:\n    temp=1\n  elif a[i-1]>a[i] and temp==0:\n    temp=2\n  elif a[i-1]>a[i] and temp==1:\n    temp=0\n    ans=ans+1\n  elif a[i-1]<a[i] and temp==2:\n    temp=0\n    ans=ans+1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13898": {"id": 13898, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\ntemp=0\nfor i in range(1,n):\n  if a[i-1]<a[i] and temp==0:\n    temp=1\n  elif a[i-1]>a[i] and temp==0:\n    temp=2\n  elif a[i-1]>a[i] and temp==1:\n    temp=0\n    ans=ans+1\n  elif a[i-1]<a[i] and temp==2:\n    temp=0\n    ans=ans+1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "13899": {"id": 13899, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\ntemp=0\nfor i in range(1,n):\n  if a[i-1]<a[i] and temp==0:\n    temp=1\n  elif a[i-1]>a[i] and temp==0:\n    temp=2\n  elif a[i-1]>a[i] and temp==1:\n    temp=0\n    ans=ans+1\n  elif a[i-1]<a[i] and temp==2:\n    temp=0\n    ans=ans+1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13900": {"id": 13900, "code": "def main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    end = len(A)\n    judge = 0\n    ans = 0\n    i = 0\n    if end == 1:\n        return 1\n    while True:\n        if A[i] < A[i+1]:\n            ans += 1\n            while True:\n                i += 1\n                if i == end-1:\n                    return ans\n                elif A[i] <= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] > A[i+1]:\n            ans += 1\n            while True:\n                i = i+1\n                if i == end-1:\n                    return ans\n                elif A[i] >= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] == A[i+1]:\n            i += 1\n            if i == end-1:\n                ans += 1\n                return ans\n            else:\n                continue\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13901": {"id": 13901, "code": "def main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    end = len(A)\n    judge = 0\n    ans = 0\n    i = 0\n    if end == 1:\n        return 1\n    while True:\n        if A[i] < A[i+1]:\n            ans += 1\n            while True:\n                i += 1\n                if i == end-1:\n                    return ans\n                elif A[i] <= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] > A[i+1]:\n            ans += 1\n            while True:\n                i = i+1\n                if i == end-1:\n                    return ans\n                elif A[i] >= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] == A[i+1]:\n            i += 1\n            if i == end-1:\n                ans += 1\n                return ans\n            else:\n                continue\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13902": {"id": 13902, "code": "def main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    end = len(A)\n    judge = 0\n    ans = 0\n    i = 0\n    if end == 1:\n        return 1\n    while True:\n        if A[i] < A[i+1]:\n            ans += 1\n            while True:\n                i += 1\n                if i == end-1:\n                    return ans\n                elif A[i] <= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] > A[i+1]:\n            ans += 1\n            while True:\n                i = i+1\n                if i == end-1:\n                    return ans\n                elif A[i] >= A[i+1]:\n                    continue\n                else:\n                    i += 1\n                    if i == end-1:\n                        ans += 1\n                        return ans\n                    else:\n                        break\n        elif A[i] == A[i+1]:\n            i += 1\n            if i == end-1:\n                ans += 1\n                return ans\n            else:\n                continue\nprint(main())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "13903": {"id": 13903, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    status = \"undefined\"\n    ans = 1\n    for i in range(N - 1):\n        diff = A[i + 1] - A[i]\n        if status == \"undefined\":\n            if diff == 0:\n                pass\n            elif diff > 0:\n                status = \"increase\"\n            else:\n                status = \"decrease\"\n        elif status == \"increase\":\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                status = \"undefined\"\n        else:\n            if diff <= 0:\n                pass\n            else:\n                status = \"undefined\"\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "13904": {"id": 13904, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    status = \"undefined\"\n    ans = 1\n    for i in range(N - 1):\n        diff = A[i + 1] - A[i]\n        if status == \"undefined\":\n            if diff == 0:\n                pass\n            elif diff > 0:\n                status = \"increase\"\n            else:\n                status = \"decrease\"\n        elif status == \"increase\":\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                status = \"undefined\"\n        else:\n            if diff <= 0:\n                pass\n            else:\n                status = \"undefined\"\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "13905": {"id": 13905, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    status = \"undefined\"\n    ans = 1\n    for i in range(N - 1):\n        diff = A[i + 1] - A[i]\n        if status == \"undefined\":\n            if diff == 0:\n                pass\n            elif diff > 0:\n                status = \"increase\"\n            else:\n                status = \"decrease\"\n        elif status == \"increase\":\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                status = \"undefined\"\n        else:\n            if diff <= 0:\n                pass\n            else:\n                status = \"undefined\"\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "13906": {"id": 13906, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans=1\nvec=0\nfor i in range(N-1):\n  now=A[i+1]-A[i]\n  if vec*now<0:\n    ans+=1\n    vec=0\n  elif vec==0:\n    vec=now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13907": {"id": 13907, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nvec=0\nfor i in range(N-1):\n  now=A[i+1]-A[i]\n  if vec*now<0:\n    ans+=1\n    vec=0\n  elif vec==0:\n    vec=now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13908": {"id": 13908, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nvec=0\nfor i in range(N-1):\n  now=A[i+1]-A[i]\n  if vec*now<0:\n    ans+=1\n    vec=0\n  elif vec==0:\n    vec=now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13909": {"id": 13909, "code": "def check(a,b):\n  if a<b:\n    return 'up'\n  if a>b:\n    return 'down'\n  return ''\ndef solve():\n  ans = 1\n  N = 6\n  A = [1, 2, 3, 2, 2, 1]\n  ud = ''\n  for i in range(N-1):\n    a = check(A[i],A[i+1])\n    if ud=='' or ud==a:\n      ud = a\n      continue\n    if a=='':\n      continue\n    ans += 1\n    ud = ''\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13910": {"id": 13910, "code": "def check(a,b):\n  if a<b:\n    return 'up'\n  if a>b:\n    return 'down'\n  return ''\ndef solve():\n  ans = 1\n  N = 9\n  A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  ud = ''\n  for i in range(N-1):\n    a = check(A[i],A[i+1])\n    if ud=='' or ud==a:\n      ud = a\n      continue\n    if a=='':\n      continue\n    ans += 1\n    ud = ''\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13911": {"id": 13911, "code": "def check(a,b):\n  if a<b:\n    return 'up'\n  if a>b:\n    return 'down'\n  return ''\ndef solve():\n  ans = 1\n  N = 7\n  A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n  ud = ''\n  for i in range(N-1):\n    a = check(A[i],A[i+1])\n    if ud=='' or ud==a:\n      ud = a\n      continue\n    if a=='':\n      continue\n    ans += 1\n    ud = ''\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13912": {"id": 13912, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nflag=True\ns=False\ne=0\nc=1\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        continue\n    if a[i]>a[i-1]:\n        flag=True\n        e=i\n        break\n    elif a[i]<a[i-1]:\n        flag=False\n        e=i\n        break\nif e==n:\n    print(1)\n    exit()\nfor i in range(e+1,n):\n    if a[i]==a[i-1]:\n        continue\n    if s==True:\n        if a[i]>a[i-1]:\n            s=False\n            flag=True\n        else:\n            s=False\n            flag=False\n    elif a[i]>a[i-1] and flag==False:\n        c+=1\n        s=True\n    elif a[i]<a[i-1] and flag==True:\n        c+=1\n        s=True\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "13913": {"id": 13913, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=True\ns=False\ne=0\nc=1\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        continue\n    if a[i]>a[i-1]:\n        flag=True\n        e=i\n        break\n    elif a[i]<a[i-1]:\n        flag=False\n        e=i\n        break\nif e==n:\n    print(1)\n    exit()\nfor i in range(e+1,n):\n    if a[i]==a[i-1]:\n        continue\n    if s==True:\n        if a[i]>a[i-1]:\n            s=False\n            flag=True\n        else:\n            s=False\n            flag=False\n    elif a[i]>a[i-1] and flag==False:\n        c+=1\n        s=True\n    elif a[i]<a[i-1] and flag==True:\n        c+=1\n        s=True\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "13914": {"id": 13914, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=True\ns=False\ne=0\nc=1\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        continue\n    if a[i]>a[i-1]:\n        flag=True\n        e=i\n        break\n    elif a[i]<a[i-1]:\n        flag=False\n        e=i\n        break\nif e==n:\n    print(1)\n    exit()\nfor i in range(e+1,n):\n    if a[i]==a[i-1]:\n        continue\n    if s==True:\n        if a[i]>a[i-1]:\n            s=False\n            flag=True\n        else:\n            s=False\n            flag=False\n    elif a[i]>a[i-1] and flag==False:\n        c+=1\n        s=True\n    elif a[i]<a[i-1] and flag==True:\n        c+=1\n        s=True\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13915": {"id": 13915, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nwhile i < n:\n    i1 = i\n    last = a[i]\n    while i1 < n:\n        if last <= a[i1]:\n            last = a[i1]\n            i1 += 1\n        else: break\n    i2 = i\n    while i2 < n:\n        if last >= a[i2]:\n            last = a[i2]\n            i2 += 1\n        else: break\n    i = max(i1, i2)\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13916": {"id": 13916, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < n:\n    i1 = i\n    last = a[i]\n    while i1 < n:\n        if last <= a[i1]:\n            last = a[i1]\n            i1 += 1\n        else: break\n    i2 = i\n    while i2 < n:\n        if last >= a[i2]:\n            last = a[i2]\n            i2 += 1\n        else: break\n    i = max(i1, i2)\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13917": {"id": 13917, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif(n<3):\n    print(1)\n    exit()\nans = 1\nstate = 0\nnow = a[0]\nfor ai in a[1:]:\n    if(state==0):\n        if(now == ai):\n            state = 0\n        elif(now > ai):\n            state = -1\n        else:\n            state = 1\n    elif(state==1):\n        if(now > ai):\n            state = 0\n            ans += 1\n    else:\n        if(now < ai):\n            state = 0\n            ans += 1\n    now = ai\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13918": {"id": 13918, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif(n<3):\n    print(1)\n    exit()\nans = 1\nstate = 0\nnow = a[0]\nfor ai in a[1:]:\n    if(state==0):\n        if(now == ai):\n            state = 0\n        elif(now > ai):\n            state = -1\n        else:\n            state = 1\n    elif(state==1):\n        if(now > ai):\n            state = 0\n            ans += 1\n    else:\n        if(now < ai):\n            state = 0\n            ans += 1\n    now = ai\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13919": {"id": 13919, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif(n<3):\n    print(1)\n    exit()\nans = 1\nstate = 0\nnow = a[0]\nfor ai in a[1:]:\n    if(state==0):\n        if(now == ai):\n            state = 0\n        elif(now > ai):\n            state = -1\n        else:\n            state = 1\n    elif(state==1):\n        if(now > ai):\n            state = 0\n            ans += 1\n    else:\n        if(now < ai):\n            state = 0\n            ans += 1\n    now = ai\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13920": {"id": 13920, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nstate = 100\ncount = 1\ntmp = a[0]\nfor i in a:\n  if i == tmp:\n    pass\n  elif i > tmp:\n    if state == 1:\n      pass\n    elif state == 0:\n      count += 1\n      state = 100\n    else:\n      state = 1\n  else:\n    if state == 0:\n      pass\n    elif state == 1:\n      count += 1\n      state = 100\n    else:\n      state = 0\n  tmp = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">"]}, "13921": {"id": 13921, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstate = 100\ncount = 1\ntmp = a[0]\nfor i in a:\n  if i == tmp:\n    pass\n  elif i > tmp:\n    if state == 1:\n      pass\n    elif state == 0:\n      count += 1\n      state = 100\n    else:\n      state = 1\n  else:\n    if state == 0:\n      pass\n    elif state == 1:\n      count += 1\n      state = 100\n    else:\n      state = 0\n  tmp = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "13922": {"id": 13922, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstate = 100\ncount = 1\ntmp = a[0]\nfor i in a:\n  if i == tmp:\n    pass\n  elif i > tmp:\n    if state == 1:\n      pass\n    elif state == 0:\n      count += 1\n      state = 100\n    else:\n      state = 1\n  else:\n    if state == 0:\n      pass\n    elif state == 1:\n      count += 1\n      state = 100\n    else:\n      state = 0\n  tmp = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">"]}, "13923": {"id": 13923, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans=1\nif n==1:\n    print(ans)\n    exit()\nc=0\nfor i in range(n):\n    if i!=n-1:\n        if c==1:\n            if a[i+1]<a[i]:\n                ans+=1\n                c=0\n                continue\n        elif c==2:\n            if a[i+1]>a[i]:\n                ans+=1\n                c=0\n                continue\n        if a[i+1]>a[i]:\n            c=1\n        elif a[i+1]<a[i]:\n            c=2\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13924": {"id": 13924, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nif n==1:\n    print(ans)\n    exit()\nc=0\nfor i in range(n):\n    if i!=n-1:\n        if c==1:\n            if a[i+1]<a[i]:\n                ans+=1\n                c=0\n                continue\n        elif c==2:\n            if a[i+1]>a[i]:\n                ans+=1\n                c=0\n                continue\n        if a[i+1]>a[i]:\n            c=1\n        elif a[i+1]<a[i]:\n            c=2\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "13925": {"id": 13925, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nif n==1:\n    print(ans)\n    exit()\nc=0\nfor i in range(n):\n    if i!=n-1:\n        if c==1:\n            if a[i+1]<a[i]:\n                ans+=1\n                c=0\n                continue\n        elif c==2:\n            if a[i+1]>a[i]:\n                ans+=1\n                c=0\n                continue\n        if a[i+1]>a[i]:\n            c=1\n        elif a[i+1]<a[i]:\n            c=2\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13926": {"id": 13926, "code": "n = 6\nans = 1\na, b = False, False\nx = [1, 2, 3, 2, 2, 1]\nfor i in range(1, n):\n    if x[i] > x[i - 1]:\n        a = True\n    if x[i] < x[i - 1]:\n        b = True\n    if a and b:\n        a, b = False, False\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13927": {"id": 13927, "code": "n = 9\nans = 1\na, b = False, False\nx = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nfor i in range(1, n):\n    if x[i] > x[i - 1]:\n        a = True\n    if x[i] < x[i - 1]:\n        b = True\n    if a and b:\n        a, b = False, False\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13928": {"id": 13928, "code": "n = 7\nans = 1\na, b = False, False\nx = [1, 2, 3, 2, 1, 999999999, 1000000000]\nfor i in range(1, n):\n    if x[i] > x[i - 1]:\n        a = True\n    if x[i] < x[i - 1]:\n        b = True\n    if a and b:\n        a, b = False, False\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13929": {"id": 13929, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nu = False\nd = False\nfor i in range(1, n):\n    if u:\n        if a[i] < a[i - 1]:\n            u = False\n            ans += 1\n    elif d:\n        if a[i] > a[i - 1]:\n            d = False\n            ans += 1\n    else:\n        if a[i] > a[i - 1]:\n            u = True\n        elif a[i] < a[i - 1]:\n            d = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13930": {"id": 13930, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nu = False\nd = False\nfor i in range(1, n):\n    if u:\n        if a[i] < a[i - 1]:\n            u = False\n            ans += 1\n    elif d:\n        if a[i] > a[i - 1]:\n            d = False\n            ans += 1\n    else:\n        if a[i] > a[i - 1]:\n            u = True\n        elif a[i] < a[i - 1]:\n            d = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "13931": {"id": 13931, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nu = False\nd = False\nfor i in range(1, n):\n    if u:\n        if a[i] < a[i - 1]:\n            u = False\n            ans += 1\n    elif d:\n        if a[i] > a[i - 1]:\n            d = False\n            ans += 1\n    else:\n        if a[i] > a[i - 1]:\n            u = True\n        elif a[i] < a[i - 1]:\n            d = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13932": {"id": 13932, "code": "import sys\nN = 6\na = [1, 2, 3, 2, 2, 1]\nnum, cut = 0, 0\nif N == 1:\n    print(1)\n    sys.exit()\nfor i in range(N-1):\n    if a[i] == a[i+1]:\n        continue\n    if a[i] < a[i+1] and num == 0:\n        num  = 1\n        cut += 1\n    elif a[i] > a[i+1] and num == 0:\n        num = -1\n        cut += 1\n    elif num == 1 and a[i] > a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\n    elif num == -1 and a[i] < a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">"]}, "13933": {"id": 13933, "code": "import sys\nN = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnum, cut = 0, 0\nif N == 1:\n    print(1)\n    sys.exit()\nfor i in range(N-1):\n    if a[i] == a[i+1]:\n        continue\n    if a[i] < a[i+1] and num == 0:\n        num  = 1\n        cut += 1\n    elif a[i] > a[i+1] and num == 0:\n        num = -1\n        cut += 1\n    elif num == 1 and a[i] > a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\n    elif num == -1 and a[i] < a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13934": {"id": 13934, "code": "import sys\nN = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnum, cut = 0, 0\nif N == 1:\n    print(1)\n    sys.exit()\nfor i in range(N-1):\n    if a[i] == a[i+1]:\n        continue\n    if a[i] < a[i+1] and num == 0:\n        num  = 1\n        cut += 1\n    elif a[i] > a[i+1] and num == 0:\n        num = -1\n        cut += 1\n    elif num == 1 and a[i] > a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\n    elif num == -1 and a[i] < a[i+1]:\n        if i == N-2:\n            cut += 1\n        num = 0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "13935": {"id": 13935, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nup = dn = False\npre = A[0]\nfor a in A[1:]:\n    if pre < a:\n        up = True\n    elif pre > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13936": {"id": 13936, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nup = dn = False\npre = A[0]\nfor a in A[1:]:\n    if pre < a:\n        up = True\n    elif pre > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13937": {"id": 13937, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nup = dn = False\npre = A[0]\nfor a in A[1:]:\n    if pre < a:\n        up = True\n    elif pre > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13938": {"id": 13938, "code": "import sys\ninput = sys.stdin.readline\nimport copy\nN = 6\nA = [1, 2, 3, 2, 2, 1]\narr = []\nans = []\nstatus = 0\nfor i in range(N):\n  if status == 0:\n    if len(arr) > 0:\n      if A[i] > arr[-1]:\n        status = 1\n      elif A[i] < arr[-1]:\n        status = 2\n    arr.append(A[i])\n  elif status == 1 and A[i] >= arr[-1]:\n    arr.append(A[i])\n  elif status == 2 and A[i] <= arr[-1]:\n    arr.append(A[i])\n  else:\n    ans.append(copy.copy(arr))\n    arr = [A[i]]\n    status = 0\nif len(arr) > 0:\n  ans.append(arr)\nprint(len(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13939": {"id": 13939, "code": "import sys\ninput = sys.stdin.readline\nimport copy\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\narr = []\nans = []\nstatus = 0\nfor i in range(N):\n  if status == 0:\n    if len(arr) > 0:\n      if A[i] > arr[-1]:\n        status = 1\n      elif A[i] < arr[-1]:\n        status = 2\n    arr.append(A[i])\n  elif status == 1 and A[i] >= arr[-1]:\n    arr.append(A[i])\n  elif status == 2 and A[i] <= arr[-1]:\n    arr.append(A[i])\n  else:\n    ans.append(copy.copy(arr))\n    arr = [A[i]]\n    status = 0\nif len(arr) > 0:\n  ans.append(arr)\nprint(len(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13940": {"id": 13940, "code": "import sys\ninput = sys.stdin.readline\nimport copy\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\narr = []\nans = []\nstatus = 0\nfor i in range(N):\n  if status == 0:\n    if len(arr) > 0:\n      if A[i] > arr[-1]:\n        status = 1\n      elif A[i] < arr[-1]:\n        status = 2\n    arr.append(A[i])\n  elif status == 1 and A[i] >= arr[-1]:\n    arr.append(A[i])\n  elif status == 2 and A[i] <= arr[-1]:\n    arr.append(A[i])\n  else:\n    ans.append(copy.copy(arr))\n    arr = [A[i]]\n    status = 0\nif len(arr) > 0:\n  ans.append(arr)\nprint(len(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "13941": {"id": 13941, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\ntrend = '-'\npre = a[0]\nfor now in a:\n    if (trend=='<' and pre>now) or (trend=='>' and pre<now):\n        ans += 1\n        trend = '-'\n    else:\n        if pre<now:\n            trend = '<'\n        elif pre>now:\n            trend = '>'\n    pre = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "13942": {"id": 13942, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ntrend = '-'\npre = a[0]\nfor now in a:\n    if (trend=='<' and pre>now) or (trend=='>' and pre<now):\n        ans += 1\n        trend = '-'\n    else:\n        if pre<now:\n            trend = '<'\n        elif pre>now:\n            trend = '>'\n    pre = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "13943": {"id": 13943, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ntrend = '-'\npre = a[0]\nfor now in a:\n    if (trend=='<' and pre>now) or (trend=='>' and pre<now):\n        ans += 1\n        trend = '-'\n    else:\n        if pre<now:\n            trend = '<'\n        elif pre>now:\n            trend = '>'\n    pre = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "13944": {"id": 13944, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nmode = 0\nprev = A[0]\nfor i in A:\n    check = i - prev\n    if check == 0:\n        pass\n    elif check > 0:\n        if mode >= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    else:\n        if mode <= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "13945": {"id": 13945, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nmode = 0\nprev = A[0]\nfor i in A:\n    check = i - prev\n    if check == 0:\n        pass\n    elif check > 0:\n        if mode >= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    else:\n        if mode <= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "13946": {"id": 13946, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nmode = 0\nprev = A[0]\nfor i in A:\n    check = i - prev\n    if check == 0:\n        pass\n    elif check > 0:\n        if mode >= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    else:\n        if mode <= 0:\n            mode = check\n        else:\n            ans += 1\n            mode = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "13947": {"id": 13947, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nup = False\ndown = False\nprev = a.pop(0)\nfor i in a:\n    if (not up) and (not down):\n        if prev < i:\n            up = True\n        elif prev > i:\n            down = True\n    elif up:\n        if prev > i:\n            ans += 1\n            up = False\n    elif down:\n        if prev < i:\n            ans += 1\n            down = False\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13948": {"id": 13948, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nup = False\ndown = False\nprev = a.pop(0)\nfor i in a:\n    if (not up) and (not down):\n        if prev < i:\n            up = True\n        elif prev > i:\n            down = True\n    elif up:\n        if prev > i:\n            ans += 1\n            up = False\n    elif down:\n        if prev < i:\n            ans += 1\n            down = False\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13949": {"id": 13949, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nup = False\ndown = False\nprev = a.pop(0)\nfor i in a:\n    if (not up) and (not down):\n        if prev < i:\n            up = True\n        elif prev > i:\n            down = True\n    elif up:\n        if prev > i:\n            ans += 1\n            up = False\n    elif down:\n        if prev < i:\n            ans += 1\n            down = False\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13950": {"id": 13950, "code": "import sys\ndef main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    ans = 0\n    i = 0\n    while 1:\n        if i == N:\n            break\n        a = i\n        while a < N-1 and A[a] <= A[a+1]:\n            a += 1\n        b = i\n        while b < N-1 and A[b] >= A[b+1]:\n            b += 1\n        i = max(a,b) + 1\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13951": {"id": 13951, "code": "import sys\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 0\n    i = 0\n    while 1:\n        if i == N:\n            break\n        a = i\n        while a < N-1 and A[a] <= A[a+1]:\n            a += 1\n        b = i\n        while b < N-1 and A[b] >= A[b+1]:\n            b += 1\n        i = max(a,b) + 1\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13952": {"id": 13952, "code": "import sys\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 0\n    i = 0\n    while 1:\n        if i == N:\n            break\n        a = i\n        while a < N-1 and A[a] <= A[a+1]:\n            a += 1\n        b = i\n        while b < N-1 and A[b] >= A[b+1]:\n            b += 1\n        i = max(a,b) + 1\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13953": {"id": 13953, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nzougen = 4 \nans=1\nfor i in range(N-1):\n    if zougen==4:\n        if A[i]-A[i+1]<0:\n            zougen = 2\n        elif A[i]-A[i+1]>0:\n            zougen = 1\n        else:\n            zougen =0\n    if A[i]-A[i+1]<0:\n        if zougen == 1:\n            ans+=1\n            zougen=4\n        if zougen == 0:\n            zougen =2\n    if A[i]-A[i+1]>0:\n        if zougen == 2:\n            ans+=1\n            zougen=4\n        if zougen ==0:\n            zougen = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "13954": {"id": 13954, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzougen = 4 \nans=1\nfor i in range(N-1):\n    if zougen==4:\n        if A[i]-A[i+1]<0:\n            zougen = 2\n        elif A[i]-A[i+1]>0:\n            zougen = 1\n        else:\n            zougen =0\n    if A[i]-A[i+1]<0:\n        if zougen == 1:\n            ans+=1\n            zougen=4\n        if zougen == 0:\n            zougen =2\n    if A[i]-A[i+1]>0:\n        if zougen == 2:\n            ans+=1\n            zougen=4\n        if zougen ==0:\n            zougen = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "13955": {"id": 13955, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzougen = 4 \nans=1\nfor i in range(N-1):\n    if zougen==4:\n        if A[i]-A[i+1]<0:\n            zougen = 2\n        elif A[i]-A[i+1]>0:\n            zougen = 1\n        else:\n            zougen =0\n    if A[i]-A[i+1]<0:\n        if zougen == 1:\n            ans+=1\n            zougen=4\n        if zougen == 0:\n            zougen =2\n    if A[i]-A[i+1]>0:\n        if zougen == 2:\n            ans+=1\n            zougen=4\n        if zougen ==0:\n            zougen = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">"]}, "13956": {"id": 13956, "code": "def solve(): \n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    i = 0\n    result = 0\n    while i < N:\n        while i+1 < N and A[i] == A[i+1]:\n            i += 1\n        if i+1 < N and A[i] < A[i+1]:\n            while i+1 < N and A[i] <= A[i+1]:\n                i += 1\n        elif i+1 < N and A[i] > A[i+1]:\n            while i+1 < N and A[i] >= A[i+1]:\n                i += 1\n        result += 1\n        i += 1\n    print(result)    \nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13957": {"id": 13957, "code": "def solve(): \n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    i = 0\n    result = 0\n    while i < N:\n        while i+1 < N and A[i] == A[i+1]:\n            i += 1\n        if i+1 < N and A[i] < A[i+1]:\n            while i+1 < N and A[i] <= A[i+1]:\n                i += 1\n        elif i+1 < N and A[i] > A[i+1]:\n            while i+1 < N and A[i] >= A[i+1]:\n                i += 1\n        result += 1\n        i += 1\n    print(result)    \nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "13958": {"id": 13958, "code": "def solve(): \n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    i = 0\n    result = 0\n    while i < N:\n        while i+1 < N and A[i] == A[i+1]:\n            i += 1\n        if i+1 < N and A[i] < A[i+1]:\n            while i+1 < N and A[i] <= A[i+1]:\n                i += 1\n        elif i+1 < N and A[i] > A[i+1]:\n            while i+1 < N and A[i] >= A[i+1]:\n                i += 1\n        result += 1\n        i += 1\n    print(result)    \nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13959": {"id": 13959, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nsw = 0\ncount = 1\nfor i in range(n-1):\n    if sw == 1:\n        if a[i+1]<a[i]:\n            sw = 0\n            count += 1\n    elif sw == -1:\n        if a[i+1]>a[i]:\n            sw = 0\n            count += 1\n    else:\n        if a[i+1]>a[i]:\n            sw = 1\n        elif a[i]>a[i+1]:\n            sw = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "13960": {"id": 13960, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nsw = 0\ncount = 1\nfor i in range(n-1):\n    if sw == 1:\n        if a[i+1]<a[i]:\n            sw = 0\n            count += 1\n    elif sw == -1:\n        if a[i+1]>a[i]:\n            sw = 0\n            count += 1\n    else:\n        if a[i+1]>a[i]:\n            sw = 1\n        elif a[i]>a[i+1]:\n            sw = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "13961": {"id": 13961, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nsw = 0\ncount = 1\nfor i in range(n-1):\n    if sw == 1:\n        if a[i+1]<a[i]:\n            sw = 0\n            count += 1\n    elif sw == -1:\n        if a[i+1]>a[i]:\n            sw = 0\n            count += 1\n    else:\n        if a[i+1]>a[i]:\n            sw = 1\n        elif a[i]>a[i+1]:\n            sw = -1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13962": {"id": 13962, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N <= 2:\n    print(1)\n    exit()\nd = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n        d.append(1)\n    elif A[i+1] - A[i] < 0:\n        d.append(-1)\nflag = [True]*len(d)\nans = 1\nfor i in range(len(d)-1):\n    if flag[i]:\n        if d[i] == -d[i+1]:\n            ans += 1\n            flag[i+1] = False\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13963": {"id": 13963, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N <= 2:\n    print(1)\n    exit()\nd = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n        d.append(1)\n    elif A[i+1] - A[i] < 0:\n        d.append(-1)\nflag = [True]*len(d)\nans = 1\nfor i in range(len(d)-1):\n    if flag[i]:\n        if d[i] == -d[i+1]:\n            ans += 1\n            flag[i+1] = False\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13964": {"id": 13964, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N <= 2:\n    print(1)\n    exit()\nd = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n        d.append(1)\n    elif A[i+1] - A[i] < 0:\n        d.append(-1)\nflag = [True]*len(d)\nans = 1\nfor i in range(len(d)-1):\n    if flag[i]:\n        if d[i] == -d[i+1]:\n            ans += 1\n            flag[i+1] = False\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13965": {"id": 13965, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nb = A[0]\natt = ''\ncnt = 1\nfor a in A:\n    if a != b:\n        if att == '':\n            if a > b:\n                att = '+'\n            elif a < b:\n                att = '-'\n        elif att == '+':\n            if a < b:\n                cnt += 1\n                att = ''\n        elif att == '-':\n            if a > b:\n                cnt += 1\n                att = ''\n    b = a\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13966": {"id": 13966, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nb = A[0]\natt = ''\ncnt = 1\nfor a in A:\n    if a != b:\n        if att == '':\n            if a > b:\n                att = '+'\n            elif a < b:\n                att = '-'\n        elif att == '+':\n            if a < b:\n                cnt += 1\n                att = ''\n        elif att == '-':\n            if a > b:\n                cnt += 1\n                att = ''\n    b = a\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13967": {"id": 13967, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nb = A[0]\natt = ''\ncnt = 1\nfor a in A:\n    if a != b:\n        if att == '':\n            if a > b:\n                att = '+'\n            elif a < b:\n                att = '-'\n        elif att == '+':\n            if a < b:\n                cnt += 1\n                att = ''\n        elif att == '-':\n            if a > b:\n                cnt += 1\n                att = ''\n    b = a\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13968": {"id": 13968, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = n\nprev = a[0]\ntrend ='N'\nfor i in range(1, n):\n    if a[i] > prev:\n        if (trend == 'U' or trend == 'N'):\n            cnt -= 1\n            trend ='U'\n        else:\n            trend = 'N'\n    if a[i] < prev:\n        if (trend == 'D' or trend == 'N'):\n            cnt -= 1\n            trend = 'D'\n        else:\n            trend = 'N'\n    if a[i] == prev:\n        cnt -= 1\n    prev = a[i]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13969": {"id": 13969, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = n\nprev = a[0]\ntrend ='N'\nfor i in range(1, n):\n    if a[i] > prev:\n        if (trend == 'U' or trend == 'N'):\n            cnt -= 1\n            trend ='U'\n        else:\n            trend = 'N'\n    if a[i] < prev:\n        if (trend == 'D' or trend == 'N'):\n            cnt -= 1\n            trend = 'D'\n        else:\n            trend = 'N'\n    if a[i] == prev:\n        cnt -= 1\n    prev = a[i]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">"]}, "13970": {"id": 13970, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = n\nprev = a[0]\ntrend ='N'\nfor i in range(1, n):\n    if a[i] > prev:\n        if (trend == 'U' or trend == 'N'):\n            cnt -= 1\n            trend ='U'\n        else:\n            trend = 'N'\n    if a[i] < prev:\n        if (trend == 'D' or trend == 'N'):\n            cnt -= 1\n            trend = 'D'\n        else:\n            trend = 'N'\n    if a[i] == prev:\n        cnt -= 1\n    prev = a[i]\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "13971": {"id": 13971, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nwhile i < N:\n    j = i\n    while j < N-1 and A[j]<=A[j+1]:\n        j += 1\n    k = i\n    while k < N-1 and A[k]>=A[k+1]:\n        k += 1\n    ans += 1\n    i = max(j, k) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13972": {"id": 13972, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nans = 0\nwhile i < N:\n    j = i\n    while j < N-1 and A[j]<=A[j+1]:\n        j += 1\n    k = i\n    while k < N-1 and A[k]>=A[k+1]:\n        k += 1\n    ans += 1\n    i = max(j, k) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13973": {"id": 13973, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < N:\n    j = i\n    while j < N-1 and A[j]<=A[j+1]:\n        j += 1\n    k = i\n    while k < N-1 and A[k]>=A[k+1]:\n        k += 1\n    ans += 1\n    i = max(j, k) + 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13974": {"id": 13974, "code": "N = 6\na = [1, 2, 3, 2, 2, 1]\nup = -1\nans = 1\nfor i in range(1, N):\n    if up == 0 and a[i] - a[i-1] > 0:\n        up = -1\n        ans += 1\n    elif up == 1 and a[i] - a[i-1] < 0:\n        up = -1\n        ans += 1\n    elif up == -1 and a[i] - a[i-1] > 0:\n        up = 1\n    elif up == -1 and a[i] - a[i-1] < 0:\n        up = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13975": {"id": 13975, "code": "N = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = -1\nans = 1\nfor i in range(1, N):\n    if up == 0 and a[i] - a[i-1] > 0:\n        up = -1\n        ans += 1\n    elif up == 1 and a[i] - a[i-1] < 0:\n        up = -1\n        ans += 1\n    elif up == -1 and a[i] - a[i-1] > 0:\n        up = 1\n    elif up == -1 and a[i] - a[i-1] < 0:\n        up = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "13976": {"id": 13976, "code": "N = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup = -1\nans = 1\nfor i in range(1, N):\n    if up == 0 and a[i] - a[i-1] > 0:\n        up = -1\n        ans += 1\n    elif up == 1 and a[i] - a[i-1] < 0:\n        up = -1\n        ans += 1\n    elif up == -1 and a[i] - a[i-1] > 0:\n        up = 1\n    elif up == -1 and a[i] - a[i-1] < 0:\n        up = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13977": {"id": 13977, "code": "import sys\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    zogen = 0\n    ans = 0\n    for a, b in zip(A, A[1:]):\n        if zogen > 0 and b >= a:\n            continue\n        if zogen < 0 and b <= a:\n            continue\n        if zogen == 0:\n            zogen = b - a\n            continue\n        ans += 1\n        zogen = 0\n    print(ans + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13978": {"id": 13978, "code": "import sys\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    zogen = 0\n    ans = 0\n    for a, b in zip(A, A[1:]):\n        if zogen > 0 and b >= a:\n            continue\n        if zogen < 0 and b <= a:\n            continue\n        if zogen == 0:\n            zogen = b - a\n            continue\n        ans += 1\n        zogen = 0\n    print(ans + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13979": {"id": 13979, "code": "import sys\nsys.setrecursionlimit(10 ** 8)\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    zogen = 0\n    ans = 0\n    for a, b in zip(A, A[1:]):\n        if zogen > 0 and b >= a:\n            continue\n        if zogen < 0 and b <= a:\n            continue\n        if zogen == 0:\n            zogen = b - a\n            continue\n        ans += 1\n        zogen = 0\n    print(ans + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13980": {"id": 13980, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nA = A\nf = 0\nans = 1\nfor k in range(N-1):\n    if f == 0:\n        if A[k] > A[k+1]:\n            f = -1\n        elif A[k] < A[k+1]:\n            f = 1\n    elif f == 1:\n        if A[k] > A[k+1]:\n            ans += 1\n            f = 0\n    else:\n        if A[k] < A[k+1]:\n            ans += 1\n            f = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13981": {"id": 13981, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nA = A\nf = 0\nans = 1\nfor k in range(N-1):\n    if f == 0:\n        if A[k] > A[k+1]:\n            f = -1\n        elif A[k] < A[k+1]:\n            f = 1\n    elif f == 1:\n        if A[k] > A[k+1]:\n            ans += 1\n            f = 0\n    else:\n        if A[k] < A[k+1]:\n            ans += 1\n            f = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "13982": {"id": 13982, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nA = A\nf = 0\nans = 1\nfor k in range(N-1):\n    if f == 0:\n        if A[k] > A[k+1]:\n            f = -1\n        elif A[k] < A[k+1]:\n            f = 1\n    elif f == 1:\n        if A[k] > A[k+1]:\n            ans += 1\n            f = 0\n    else:\n        if A[k] < A[k+1]:\n            ans += 1\n            f = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "13983": {"id": 13983, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nc = 1; w = 0\nfor i in range(N-1):\n    if w == 0:\n        if A[i] < A[i+1]:\n            w = 1\n        elif A[i] > A[i+1]:\n            w = -1\n    elif (w > 0 and A[i] > A[i+1]) or (w < 0 and A[i] < A[i+1]):\n         w = 0\n         c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13984": {"id": 13984, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc = 1; w = 0\nfor i in range(N-1):\n    if w == 0:\n        if A[i] < A[i+1]:\n            w = 1\n        elif A[i] > A[i+1]:\n            w = -1\n    elif (w > 0 and A[i] > A[i+1]) or (w < 0 and A[i] < A[i+1]):\n         w = 0\n         c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "13985": {"id": 13985, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc = 1; w = 0\nfor i in range(N-1):\n    if w == 0:\n        if A[i] < A[i+1]:\n            w = 1\n        elif A[i] > A[i+1]:\n            w = -1\n    elif (w > 0 and A[i] > A[i+1]) or (w < 0 and A[i] < A[i+1]):\n         w = 0\n         c += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13986": {"id": 13986, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nprev = A[0]\nup = False\ndown = False\nfor a in A[1:]:\n    if prev < a:\n        if up:\n            count += 1\n            up = False\n        elif down:\n            pass\n        else: \n            down = True\n    elif prev > a:\n        if up:\n           pass\n        elif down:\n            count += 1\n            down = False\n        else: \n            up = True\n    else:\n        pass\n    prev = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "13987": {"id": 13987, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nprev = A[0]\nup = False\ndown = False\nfor a in A[1:]:\n    if prev < a:\n        if up:\n            count += 1\n            up = False\n        elif down:\n            pass\n        else: \n            down = True\n    elif prev > a:\n        if up:\n           pass\n        elif down:\n            count += 1\n            down = False\n        else: \n            up = True\n    else:\n        pass\n    prev = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "13988": {"id": 13988, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nprev = A[0]\nup = False\ndown = False\nfor a in A[1:]:\n    if prev < a:\n        if up:\n            count += 1\n            up = False\n        elif down:\n            pass\n        else: \n            down = True\n    elif prev > a:\n        if up:\n           pass\n        elif down:\n            count += 1\n            down = False\n        else: \n            up = True\n    else:\n        pass\n    prev = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">"]}, "13989": {"id": 13989, "code": "num = 6\nl = [1, 2, 3, 2, 2, 1]\ncount = 1\nvar = var2 = 0\nc = l[0]\nfor i in l[1:]:\n    if c < i:\n        var = 1\n    elif c > i:\n        var2 = 1\n    if var == 1 and var2 == 1:\n        count += 1\n        var = var2 = 0\n    c = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13990": {"id": 13990, "code": "num = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nvar = var2 = 0\nc = l[0]\nfor i in l[1:]:\n    if c < i:\n        var = 1\n    elif c > i:\n        var2 = 1\n    if var == 1 and var2 == 1:\n        count += 1\n        var = var2 = 0\n    c = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13991": {"id": 13991, "code": "num = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nvar = var2 = 0\nc = l[0]\nfor i in l[1:]:\n    if c < i:\n        var = 1\n    elif c > i:\n        var2 = 1\n    if var == 1 and var2 == 1:\n        count += 1\n        var = var2 = 0\n    c = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13992": {"id": 13992, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nnow = a[0]\nbefore = '-'\nfor i in range(1,n):\n    if before == '-':\n        if now > a[i]:\n            before = 'D'\n        elif now< a[i]:\n            before = 'U'\n    else:\n        if before == 'U' and now > a[i]:\n            ans += 1\n            before = '-'\n        elif before == 'D' and now < a[i]:\n            ans += 1\n            before = '-'\n    now = a[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13993": {"id": 13993, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nnow = a[0]\nbefore = '-'\nfor i in range(1,n):\n    if before == '-':\n        if now > a[i]:\n            before = 'D'\n        elif now< a[i]:\n            before = 'U'\n    else:\n        if before == 'U' and now > a[i]:\n            ans += 1\n            before = '-'\n        elif before == 'D' and now < a[i]:\n            ans += 1\n            before = '-'\n    now = a[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "13994": {"id": 13994, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nnow = a[0]\nbefore = '-'\nfor i in range(1,n):\n    if before == '-':\n        if now > a[i]:\n            before = 'D'\n        elif now< a[i]:\n            before = 'U'\n    else:\n        if before == 'U' and now > a[i]:\n            ans += 1\n            before = '-'\n        elif before == 'D' and now < a[i]:\n            ans += 1\n            before = '-'\n    now = a[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13995": {"id": 13995, "code": "import sys\ninput = sys.stdin.readline\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 0\nstate = 0\nfor i in range(N-1):\n    if A[i+1]-A[i]>0:\n        if state==2:\n            ans += 1\n            state = 0\n        elif state==0:\n            state = 1\n    elif A[i+1]-A[i]<0:\n        if state==1:\n            ans += 1\n            state = 0\n        else:\n            state = 2\nans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13996": {"id": 13996, "code": "import sys\ninput = sys.stdin.readline\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nstate = 0\nfor i in range(N-1):\n    if A[i+1]-A[i]>0:\n        if state==2:\n            ans += 1\n            state = 0\n        elif state==0:\n            state = 1\n    elif A[i+1]-A[i]<0:\n        if state==1:\n            ans += 1\n            state = 0\n        else:\n            state = 2\nans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "13997": {"id": 13997, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nstate = 0\nfor i in range(N-1):\n    if A[i+1]-A[i]>0:\n        if state==2:\n            ans += 1\n            state = 0\n        elif state==0:\n            state = 1\n    elif A[i+1]-A[i]<0:\n        if state==1:\n            ans += 1\n            state = 0\n        else:\n            state = 2\nans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "13998": {"id": 13998, "code": "def main():\n    N = 6\n    lst = [1, 2, 3, 2, 2, 1]\n    last = lst[0]\n    A = [last]\n    for i in range(1, N):\n        if lst[i] == last: continue\n        last = lst[i]\n        A.append(lst[i])\n    left = right = output = 0\n    while left < len(A):\n        if left == len(A)-1:\n            output += 1\n            break\n        if A[left+1] - A[left] > 0:\n            while right < len(A)-1 and A[right] < A[right+1]:\n                right += 1\n        elif A[left+1] - A[left] < 0:\n            while right < len(A)-1 and A[right] > A[right+1]:\n                right += 1\n        output += 1\n        left = right + 1\n        right = left\n    print(output)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13999": {"id": 13999, "code": "def main():\n    N = 7\n    lst = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    last = lst[0]\n    A = [last]\n    for i in range(1, N):\n        if lst[i] == last: continue\n        last = lst[i]\n        A.append(lst[i])\n    left = right = output = 0\n    while left < len(A):\n        if left == len(A)-1:\n            output += 1\n            break\n        if A[left+1] - A[left] > 0:\n            while right < len(A)-1 and A[right] < A[right+1]:\n                right += 1\n        elif A[left+1] - A[left] < 0:\n            while right < len(A)-1 and A[right] > A[right+1]:\n                right += 1\n        output += 1\n        left = right + 1\n        right = left\n    print(output)\n    return\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14000": {"id": 14000, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup = down = 0\ncur = a[0]\nans = 0\nfor x in a:\n    if cur < x:\n        up = 1\n    elif cur > x:\n        down = 1\n    if up and down:\n        ans += 1\n        up = down = 0\n    cur = x\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14001": {"id": 14001, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = down = 0\ncur = a[0]\nans = 0\nfor x in a:\n    if cur < x:\n        up = 1\n    elif cur > x:\n        down = 1\n    if up and down:\n        ans += 1\n        up = down = 0\n    cur = x\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14002": {"id": 14002, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup = down = 0\ncur = a[0]\nans = 0\nfor x in a:\n    if cur < x:\n        up = 1\n    elif cur > x:\n        down = 1\n    if up and down:\n        ans += 1\n        up = down = 0\n    cur = x\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14003": {"id": 14003, "code": "def solve():\n  ans = 1\n  N = 6\n  A = [1, 2, 3, 2, 2, 1]\n  ud = 0\n  for i in range(N-1):\n    a = A[i+1]-A[i]\n    if a*ud<0:\n      ans += 1\n      ud = 0\n    elif ud==0:\n      ud = a\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14004": {"id": 14004, "code": "def solve():\n  ans = 1\n  N = 9\n  A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  ud = 0\n  for i in range(N-1):\n    a = A[i+1]-A[i]\n    if a*ud<0:\n      ans += 1\n      ud = 0\n    elif ud==0:\n      ud = a\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14005": {"id": 14005, "code": "def solve():\n  ans = 1\n  N = 7\n  A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n  ud = 0\n  for i in range(N-1):\n    a = A[i+1]-A[i]\n    if a*ud<0:\n      ans += 1\n      ud = 0\n    elif ud==0:\n      ud = a\n  return ans\nprint(solve())", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14006": {"id": 14006, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\np = m = 0\nc = A[0]\nfor i in A[1:]:\n    if i > c:\n        p = 1\n    elif i < c:\n        m = 1\n    if p == 1 and m == 1:\n        p = m = 0\n        ans += 1\n    c = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14007": {"id": 14007, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\np = m = 0\nc = A[0]\nfor i in A[1:]:\n    if i > c:\n        p = 1\n    elif i < c:\n        m = 1\n    if p == 1 and m == 1:\n        p = m = 0\n        ans += 1\n    c = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14008": {"id": 14008, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\np = m = 0\nc = A[0]\nfor i in A[1:]:\n    if i > c:\n        p = 1\n    elif i < c:\n        m = 1\n    if p == 1 and m == 1:\n        p = m = 0\n        ans += 1\n    c = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14009": {"id": 14009, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt, t = 0, 0\nfor i in range(1,n):\n    if a[i] == a[i - 1] and t == 0:\n        continue\n    elif a[i] >= a[i - 1] and t >= 0:\n        t = 1\n    elif a[i] <= a[i - 1] and t <= 0:\n        t = -1\n    else:\n        cnt += 1\n        t = 0\nelse:\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "14010": {"id": 14010, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt, t = 0, 0\nfor i in range(1,n):\n    if a[i] == a[i - 1] and t == 0:\n        continue\n    elif a[i] >= a[i - 1] and t >= 0:\n        t = 1\n    elif a[i] <= a[i - 1] and t <= 0:\n        t = -1\n    else:\n        cnt += 1\n        t = 0\nelse:\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">"]}, "14011": {"id": 14011, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt, t = 0, 0\nfor i in range(1,n):\n    if a[i] == a[i - 1] and t == 0:\n        continue\n    elif a[i] >= a[i - 1] and t >= 0:\n        t = 1\n    elif a[i] <= a[i - 1] and t <= 0:\n        t = -1\n    else:\n        cnt += 1\n        t = 0\nelse:\n    cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "14012": {"id": 14012, "code": "from itertools import groupby\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nB = []\nfor key, v in groupby(A):\n    B.append(key)\ndiff = []\nfor i in range(len(B) - 1):\n    diff.append(1 if B[i] < B[i + 1] else -1)\nnums = []\nfor d, v in groupby(diff):\n    nums.append(len(list(v)))\nis_can_del = 0\nans = 0\nfor n in nums:\n    if n == 1 and is_can_del == 1:\n        is_can_del = 0\n    else:\n        ans += 1\n        is_can_del = 1\nif is_can_del == 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">"]}, "14013": {"id": 14013, "code": "from itertools import groupby\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nB = []\nfor key, v in groupby(A):\n    B.append(key)\ndiff = []\nfor i in range(len(B) - 1):\n    diff.append(1 if B[i] < B[i + 1] else -1)\nnums = []\nfor d, v in groupby(diff):\n    nums.append(len(list(v)))\nis_can_del = 0\nans = 0\nfor n in nums:\n    if n == 1 and is_can_del == 1:\n        is_can_del = 0\n    else:\n        ans += 1\n        is_can_del = 1\nif is_can_del == 0:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">"]}, "14014": {"id": 14014, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nc = 1\ni = 0\nwhile i < N - 1:\n    if A[i] < A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] > A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] > A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] < A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] == A[i + 1]:\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "14015": {"id": 14015, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc = 1\ni = 0\nwhile i < N - 1:\n    if A[i] < A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] > A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] > A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] < A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] == A[i + 1]:\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14016": {"id": 14016, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc = 1\ni = 0\nwhile i < N - 1:\n    if A[i] < A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] > A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] > A[i + 1]:\n        while True:\n            i += 1\n            if i == N - 1:\n                break\n            if A[i] < A[i + 1]:\n                c += 1\n                i += 1\n                break\n    elif A[i] == A[i + 1]:\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "14017": {"id": 14017, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nd = 0\nfor i in range(1,n):\n    diff = A[i] - A[i-1]\n    if not d:\n        d = diff\n    elif d*diff < 0:\n        d = 0\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14018": {"id": 14018, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nd = 0\nfor i in range(1,n):\n    diff = A[i] - A[i-1]\n    if not d:\n        d = diff\n    elif d*diff < 0:\n        d = 0\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14019": {"id": 14019, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nd = 0\nfor i in range(1,n):\n    diff = A[i] - A[i-1]\n    if not d:\n        d = diff\n    elif d*diff < 0:\n        d = 0\n        ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14020": {"id": 14020, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\nsw='n'\nans=0\nfor i in range(1,n):\n    if sw=='u':\n        if l[i-1]-l[i]<=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    elif sw=='d':\n        if l[i-1]-l[i]>=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    else:\n        if l[i-1]-l[i]<0:\n            sw='u'\n        elif l[i-1]-l[i]>0:\n            sw='d'\n        else:\n            continue\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">"]}, "14021": {"id": 14021, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nsw='n'\nans=0\nfor i in range(1,n):\n    if sw=='u':\n        if l[i-1]-l[i]<=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    elif sw=='d':\n        if l[i-1]-l[i]>=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    else:\n        if l[i-1]-l[i]<0:\n            sw='u'\n        elif l[i-1]-l[i]>0:\n            sw='d'\n        else:\n            continue\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", ">"]}, "14022": {"id": 14022, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nsw='n'\nans=0\nfor i in range(1,n):\n    if sw=='u':\n        if l[i-1]-l[i]<=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    elif sw=='d':\n        if l[i-1]-l[i]>=0:\n            continue\n        else:\n            ans+=1\n            sw='n'\n    else:\n        if l[i-1]-l[i]<0:\n            sw='u'\n        elif l[i-1]-l[i]>0:\n            sw='d'\n        else:\n            continue\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "14023": {"id": 14023, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 1\nans = 1\nflg = 0\nfor i, j in zip(A[:-1],A[1:]):\n    if i < j:\n        if flg == 0:\n            flg = 1\n        elif flg == 2:\n            ans += 1\n            flg = 0\n    if i > j:\n        if flg == 0:\n            flg = 2\n        elif flg == 1:\n            ans += 1\n            flg = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14024": {"id": 14024, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 1\nans = 1\nflg = 0\nfor i, j in zip(A[:-1],A[1:]):\n    if i < j:\n        if flg == 0:\n            flg = 1\n        elif flg == 2:\n            ans += 1\n            flg = 0\n    if i > j:\n        if flg == 0:\n            flg = 2\n        elif flg == 1:\n            ans += 1\n            flg = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "14025": {"id": 14025, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 1\nans = 1\nflg = 0\nfor i, j in zip(A[:-1],A[1:]):\n    if i < j:\n        if flg == 0:\n            flg = 1\n        elif flg == 2:\n            ans += 1\n            flg = 0\n    if i > j:\n        if flg == 0:\n            flg = 2\n        elif flg == 1:\n            ans += 1\n            flg = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14026": {"id": 14026, "code": "n = 6\nli = [1, 2, 3, 2, 2, 1]\nx = 0 \ni = 0 \nans = 0\nif n == 1:\n    print(1)\n    exit()\nwhile True:\n    if x == 0:\n        if li[i] < li[i+1]:\n            x = 1\n        elif li[i] > li[i+1]:\n            x = -1\n        else:\n            x = 0\n    if x == 1:\n        if li[i] > li[i+1]:\n            ans += 1\n            x = 0\n    if x == -1:\n        if li[i] < li[i+1]:\n            ans += 1\n            x = 0\n    i += 1\n    if i == n-1:\n        break\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14027": {"id": 14027, "code": "n = 9\nli = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nx = 0 \ni = 0 \nans = 0\nif n == 1:\n    print(1)\n    exit()\nwhile True:\n    if x == 0:\n        if li[i] < li[i+1]:\n            x = 1\n        elif li[i] > li[i+1]:\n            x = -1\n        else:\n            x = 0\n    if x == 1:\n        if li[i] > li[i+1]:\n            ans += 1\n            x = 0\n    if x == -1:\n        if li[i] < li[i+1]:\n            ans += 1\n            x = 0\n    i += 1\n    if i == n-1:\n        break\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "14028": {"id": 14028, "code": "n = 7\nli = [1, 2, 3, 2, 1, 999999999, 1000000000]\nx = 0 \ni = 0 \nans = 0\nif n == 1:\n    print(1)\n    exit()\nwhile True:\n    if x == 0:\n        if li[i] < li[i+1]:\n            x = 1\n        elif li[i] > li[i+1]:\n            x = -1\n        else:\n            x = 0\n    if x == 1:\n        if li[i] > li[i+1]:\n            ans += 1\n            x = 0\n    if x == -1:\n        if li[i] < li[i+1]:\n            ans += 1\n            x = 0\n    i += 1\n    if i == n-1:\n        break\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14029": {"id": 14029, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nbefore = A[0]\nis_ascending = None\nans = 0\nfor a in A:\n    d = a - before\n    if d == 0:\n        pass\n    else:\n        if is_ascending == None:\n            is_ascending = d > 0\n        elif (is_ascending and d < 0) or (not is_ascending and d > 0):\n            ans += 1\n            is_ascending = None\n    before = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14030": {"id": 14030, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nbefore = A[0]\nis_ascending = None\nans = 0\nfor a in A:\n    d = a - before\n    if d == 0:\n        pass\n    else:\n        if is_ascending == None:\n            is_ascending = d > 0\n        elif (is_ascending and d < 0) or (not is_ascending and d > 0):\n            ans += 1\n            is_ascending = None\n    before = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14031": {"id": 14031, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nbefore = A[0]\nis_ascending = None\nans = 0\nfor a in A:\n    d = a - before\n    if d == 0:\n        pass\n    else:\n        if is_ascending == None:\n            is_ascending = d > 0\n        elif (is_ascending and d < 0) or (not is_ascending and d > 0):\n            ans += 1\n            is_ascending = None\n    before = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14032": {"id": 14032, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nprev = A[0]\nans = 1\nfor i in range(1, N):\n    if A[i] > prev:\n        pls = \"plus\"\n        break\n    elif A[i] < prev:\n        pls = \"minus\"\n        break\nelse:\n    print(1)\n    exit()\nfor i in range(1, N):\n    if pls == \"plus\" and prev > A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"minus\" and prev < A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"even\" and prev < A[i]:\n        pls = \"plus\"\n    elif pls == \"even\" and prev > A[i]:\n        pls = \"minus\"\n    prev = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">", ">", ">", ">"]}, "14033": {"id": 14033, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = A[0]\nans = 1\nfor i in range(1, N):\n    if A[i] > prev:\n        pls = \"plus\"\n        break\n    elif A[i] < prev:\n        pls = \"minus\"\n        break\nelse:\n    print(1)\n    exit()\nfor i in range(1, N):\n    if pls == \"plus\" and prev > A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"minus\" and prev < A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"even\" and prev < A[i]:\n        pls = \"plus\"\n    elif pls == \"even\" and prev > A[i]:\n        pls = \"minus\"\n    prev = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "14034": {"id": 14034, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = A[0]\nans = 1\nfor i in range(1, N):\n    if A[i] > prev:\n        pls = \"plus\"\n        break\n    elif A[i] < prev:\n        pls = \"minus\"\n        break\nelse:\n    print(1)\n    exit()\nfor i in range(1, N):\n    if pls == \"plus\" and prev > A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"minus\" and prev < A[i]:\n        prev = A[i]\n        ans += 1\n        pls = \"even\"\n        continue\n    if pls == \"even\" and prev < A[i]:\n        pls = \"plus\"\n    elif pls == \"even\" and prev > A[i]:\n        pls = \"minus\"\n    prev = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14035": {"id": 14035, "code": "def solve():\n  n = 6\n  a = [1, 2, 3, 2, 2, 1]\n  g, z = 0, 0\n  cut = 1\n  for i in range(n-1):\n    if a[i+1] > a[i]:\n      g += 1\n    elif a[i+1] < a[i]:\n      z += 1\n    if g != 0 and z != 0:\n      cut += 1\n      g, z = 0, 0\n  print(cut)\n  return 0\nif __name__ == \"__main__\":\n  solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14036": {"id": 14036, "code": "def solve():\n  n = 9\n  a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  g, z = 0, 0\n  cut = 1\n  for i in range(n-1):\n    if a[i+1] > a[i]:\n      g += 1\n    elif a[i+1] < a[i]:\n      z += 1\n    if g != 0 and z != 0:\n      cut += 1\n      g, z = 0, 0\n  print(cut)\n  return 0\nif __name__ == \"__main__\":\n  solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14037": {"id": 14037, "code": "def solve():\n  n = 7\n  a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n  g, z = 0, 0\n  cut = 1\n  for i in range(n-1):\n    if a[i+1] > a[i]:\n      g += 1\n    elif a[i+1] < a[i]:\n      z += 1\n    if g != 0 and z != 0:\n      cut += 1\n      g, z = 0, 0\n  print(cut)\n  return 0\nif __name__ == \"__main__\":\n  solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14038": {"id": 14038, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nflg = 0\nrev = 0 \nfor c,n in zip(A, A[1:]):\n    if not flg:\n        if c < n:\n            flg = 1\n        elif c > n:\n            flg = 1\n            rev = 1\n    else:\n        if rev:\n            c = -c\n            n = -n\n        if c > n:\n            ans += 1\n            flg = 0\n            rev = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14039": {"id": 14039, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nflg = 0\nrev = 0 \nfor c,n in zip(A, A[1:]):\n    if not flg:\n        if c < n:\n            flg = 1\n        elif c > n:\n            flg = 1\n            rev = 1\n    else:\n        if rev:\n            c = -c\n            n = -n\n        if c > n:\n            ans += 1\n            flg = 0\n            rev = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14040": {"id": 14040, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nflg = 0\nrev = 0 \nfor c,n in zip(A, A[1:]):\n    if not flg:\n        if c < n:\n            flg = 1\n        elif c > n:\n            flg = 1\n            rev = 1\n    else:\n        if rev:\n            c = -c\n            n = -n\n        if c > n:\n            ans += 1\n            flg = 0\n            rev = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14041": {"id": 14041, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nd = [0 for _ in range(n-1)]\nfor i in range(n-1):\n    d[i] = a[i+1]-a[i]\nans = 1 \nflg = [False, False]\nfor i in range(n-1):\n    if d[i] > 0:\n        flg[0] = True\n    elif d[i] < 0:\n        flg[1] = True\n    if flg[0] == flg[1] == True:\n        ans += 1\n        flg = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14042": {"id": 14042, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = [0 for _ in range(n-1)]\nfor i in range(n-1):\n    d[i] = a[i+1]-a[i]\nans = 1 \nflg = [False, False]\nfor i in range(n-1):\n    if d[i] > 0:\n        flg[0] = True\n    elif d[i] < 0:\n        flg[1] = True\n    if flg[0] == flg[1] == True:\n        ans += 1\n        flg = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14043": {"id": 14043, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\ncnt = 0\nwhile i < N:\n    while i < N - 1 and A[i + 1] == A[i]:\n        i += 1\n    if i >= N - 1:\n        cnt += 1\n        print(cnt)\n        sys.exit()\n    if A[i + 1] < A[i]:\n        while i < N - 1 and A[i + 1] <= A[i]:\n            i += 1\n    else:\n        while i < N - 1 and A[i + 1] >= A[i]:\n            i += 1\n    cnt += 1\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14044": {"id": 14044, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\ncnt = 0\nwhile i < N:\n    while i < N - 1 and A[i + 1] == A[i]:\n        i += 1\n    if i >= N - 1:\n        cnt += 1\n        print(cnt)\n        sys.exit()\n    if A[i + 1] < A[i]:\n        while i < N - 1 and A[i + 1] <= A[i]:\n            i += 1\n    else:\n        while i < N - 1 and A[i + 1] >= A[i]:\n            i += 1\n    cnt += 1\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14045": {"id": 14045, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nfirst = True\nup = False\ndown = False\nfor i in range(n):\n    if first:\n        cnt += 1\n        now = a[i]\n        if i < n-1:\n            if a[i+1] > now:\n                up = True\n                down = False\n                first = False\n            elif a[i+1] < now:\n                down = True\n                up = False\n                first = False\n            else:\n                up = False\n                down = False\n                first = True\n                cnt -= 1\n    else:\n        now = a[i]\n        if i < n-1:\n            if up:\n                if now > a[i+1]:\n                    first = True\n            elif down:\n                if now < a[i+1]:\n                    first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14046": {"id": 14046, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nfirst = True\nup = False\ndown = False\nfor i in range(n):\n    if first:\n        cnt += 1\n        now = a[i]\n        if i < n-1:\n            if a[i+1] > now:\n                up = True\n                down = False\n                first = False\n            elif a[i+1] < now:\n                down = True\n                up = False\n                first = False\n            else:\n                up = False\n                down = False\n                first = True\n                cnt -= 1\n    else:\n        now = a[i]\n        if i < n-1:\n            if up:\n                if now > a[i+1]:\n                    first = True\n            elif down:\n                if now < a[i+1]:\n                    first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14047": {"id": 14047, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nfirst = True\nup = False\ndown = False\nfor i in range(n):\n    if first:\n        cnt += 1\n        now = a[i]\n        if i < n-1:\n            if a[i+1] > now:\n                up = True\n                down = False\n                first = False\n            elif a[i+1] < now:\n                down = True\n                up = False\n                first = False\n            else:\n                up = False\n                down = False\n                first = True\n                cnt -= 1\n    else:\n        now = a[i]\n        if i < n-1:\n            if up:\n                if now > a[i+1]:\n                    first = True\n            elif down:\n                if now < a[i+1]:\n                    first = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14048": {"id": 14048, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    b = [a[0]]\n    for i in a:\n        if b[-1] == i:\n            continue\n        b.append(i)\n    res = 1\n    if len(b) <= 2:\n        print(res)\n    else:\n        i = 1\n        while i <= len(b)-2:\n            if b[i] == max(b[i-1], b[i], b[i+1]) or b[i] == min(b[i-1], b[i], b[i+1]):\n                res += 1\n                i += 1\n            i += 1\n        print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14049": {"id": 14049, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    b = [a[0]]\n    for i in a:\n        if b[-1] == i:\n            continue\n        b.append(i)\n    res = 1\n    if len(b) <= 2:\n        print(res)\n    else:\n        i = 1\n        while i <= len(b)-2:\n            if b[i] == max(b[i-1], b[i], b[i+1]) or b[i] == min(b[i-1], b[i], b[i+1]):\n                res += 1\n                i += 1\n            i += 1\n        print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14050": {"id": 14050, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    b = [a[0]]\n    for i in a:\n        if b[-1] == i:\n            continue\n        b.append(i)\n    res = 1\n    if len(b) <= 2:\n        print(res)\n    else:\n        i = 1\n        while i <= len(b)-2:\n            if b[i] == max(b[i-1], b[i], b[i+1]) or b[i] == min(b[i-1], b[i], b[i+1]):\n                res += 1\n                i += 1\n            i += 1\n        print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14051": {"id": 14051, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nindex = 1\nans = 0\nwhile index < n:\n    ans += 1\n    if a[index-1] < a[index]:\n        flag = True\n    elif a[index-1] > a[index]:\n        flag = False\n    else:\n        flag3 = True\n        for i in range(index,n):\n            if a[index] != a[i]:\n                flag3 = False\n                if a[index] < a[i]:\n                    flag = True\n                    break\n                else:\n                    flag = False\n                    break\n        if flag3:\n            break\n    flag2 = True\n    for i in range(index,n):\n        if flag and a[i] < a[i-1]:\n            index = i+1\n            flag2 = False\n            break\n        elif a[i] > a[i-1] and flag == False:\n            index = i+1\n            flag2 = False\n            break\n    if flag2:\n        break\nif index == n:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">"]}, "14052": {"id": 14052, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nindex = 1\nans = 0\nwhile index < n:\n    ans += 1\n    if a[index-1] < a[index]:\n        flag = True\n    elif a[index-1] > a[index]:\n        flag = False\n    else:\n        flag3 = True\n        for i in range(index,n):\n            if a[index] != a[i]:\n                flag3 = False\n                if a[index] < a[i]:\n                    flag = True\n                    break\n                else:\n                    flag = False\n                    break\n        if flag3:\n            break\n    flag2 = True\n    for i in range(index,n):\n        if flag and a[i] < a[i-1]:\n            index = i+1\n            flag2 = False\n            break\n        elif a[i] > a[i-1] and flag == False:\n            index = i+1\n            flag2 = False\n            break\n    if flag2:\n        break\nif index == n:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">"]}, "14053": {"id": 14053, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nindex = 1\nans = 0\nwhile index < n:\n    ans += 1\n    if a[index-1] < a[index]:\n        flag = True\n    elif a[index-1] > a[index]:\n        flag = False\n    else:\n        flag3 = True\n        for i in range(index,n):\n            if a[index] != a[i]:\n                flag3 = False\n                if a[index] < a[i]:\n                    flag = True\n                    break\n                else:\n                    flag = False\n                    break\n        if flag3:\n            break\n    flag2 = True\n    for i in range(index,n):\n        if flag and a[i] < a[i-1]:\n            index = i+1\n            flag2 = False\n            break\n        elif a[i] > a[i-1] and flag == False:\n            index = i+1\n            flag2 = False\n            break\n    if flag2:\n        break\nif index == n:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14054": {"id": 14054, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nf = 0\nfor i in range(n):\n    if f == 0:\n        f = 1\n    elif f == 1:\n        if a[i] > a[i - 1]:\n            f = 2\n        elif a[i] < a[i - 1]:\n            f = 3\n    elif f == 2:\n        if a[i] < a[i - 1]:\n            ans += 1\n            f = 1\n    elif f == 3:\n        if a[i] > a[i - 1]:\n            ans += 1\n            f = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14055": {"id": 14055, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nf = 0\nfor i in range(n):\n    if f == 0:\n        f = 1\n    elif f == 1:\n        if a[i] > a[i - 1]:\n            f = 2\n        elif a[i] < a[i - 1]:\n            f = 3\n    elif f == 2:\n        if a[i] < a[i - 1]:\n            ans += 1\n            f = 1\n    elif f == 3:\n        if a[i] > a[i - 1]:\n            ans += 1\n            f = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14056": {"id": 14056, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nf = 0\nfor i in range(n):\n    if f == 0:\n        f = 1\n    elif f == 1:\n        if a[i] > a[i - 1]:\n            f = 2\n        elif a[i] < a[i - 1]:\n            f = 3\n    elif f == 2:\n        if a[i] < a[i - 1]:\n            ans += 1\n            f = 1\n    elif f == 3:\n        if a[i] > a[i - 1]:\n            ans += 1\n            f = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14057": {"id": 14057, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\naset=set(a)\nans=1\nif len(aset)>1:\n    num1=a[0]\n    num2=a[1]\n    num3=2 \n    if num1<num2:\n        num3=1\n    if num1>num2:\n        num3=0\n    for i in range(len(a)-2):\n        num=a[2+i]\n        if num3==2 and num2>num:\n            num3=0\n        if num3==2 and num2<num:\n            num3=1\n        if num3==0 and num2<num:\n            ans+=1\n            num3=2\n        if num3==1 and num2>num:\n            ans+=1\n            num3=2\n        num2=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14058": {"id": 14058, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\naset=set(a)\nans=1\nif len(aset)>1:\n    num1=a[0]\n    num2=a[1]\n    num3=2 \n    if num1<num2:\n        num3=1\n    if num1>num2:\n        num3=0\n    for i in range(len(a)-2):\n        num=a[2+i]\n        if num3==2 and num2>num:\n            num3=0\n        if num3==2 and num2<num:\n            num3=1\n        if num3==0 and num2<num:\n            ans+=1\n            num3=2\n        if num3==1 and num2>num:\n            ans+=1\n            num3=2\n        num2=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14059": {"id": 14059, "code": "N = 6\na_list = [1, 2, 3, 2, 2, 1]\ncount = 1\nup_flag = None\nprev_a = a_list[0]\nfor a in a_list[1:]:\n  if up_flag is None:\n    if prev_a == a:\n      continue\n    up_flag = a > prev_a\n  if up_flag and a >= prev_a:\n    prev_a = a\n    continue\n  elif not up_flag and a <= prev_a:\n    prev_a = a\n    continue\n  else:\n    up_flag = None\n    count += 1\n    prev_a = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14060": {"id": 14060, "code": "N = 9\na_list = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nup_flag = None\nprev_a = a_list[0]\nfor a in a_list[1:]:\n  if up_flag is None:\n    if prev_a == a:\n      continue\n    up_flag = a > prev_a\n  if up_flag and a >= prev_a:\n    prev_a = a\n    continue\n  elif not up_flag and a <= prev_a:\n    prev_a = a\n    continue\n  else:\n    up_flag = None\n    count += 1\n    prev_a = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "14061": {"id": 14061, "code": "N = 7\na_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nup_flag = None\nprev_a = a_list[0]\nfor a in a_list[1:]:\n  if up_flag is None:\n    if prev_a == a:\n      continue\n    up_flag = a > prev_a\n  if up_flag and a >= prev_a:\n    prev_a = a\n    continue\n  elif not up_flag and a <= prev_a:\n    prev_a = a\n    continue\n  else:\n    up_flag = None\n    count += 1\n    prev_a = a\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14062": {"id": 14062, "code": "from collections import  deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\ncnt=0\njudge=[]\nfor i in range(n-1):\n    if a[i]<a[i+1]:\n        flag=0\n    elif a[i]>a[i+1]:\n        flag=1\n    elif a[i]==a[i+1]:\n        continue\n    if judge==[]:\n        judge.append(flag)\n    else:\n        ff=judge.pop()\n        if flag==ff:\n            judge.append(flag)\n        else:\n            cnt+=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14063": {"id": 14063, "code": "from collections import  deque\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt=0\njudge=[]\nfor i in range(n-1):\n    if a[i]<a[i+1]:\n        flag=0\n    elif a[i]>a[i+1]:\n        flag=1\n    elif a[i]==a[i+1]:\n        continue\n    if judge==[]:\n        judge.append(flag)\n    else:\n        ff=judge.pop()\n        if flag==ff:\n            judge.append(flag)\n        else:\n            cnt+=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "14064": {"id": 14064, "code": "from collections import  deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt=0\njudge=[]\nfor i in range(n-1):\n    if a[i]<a[i+1]:\n        flag=0\n    elif a[i]>a[i+1]:\n        flag=1\n    elif a[i]==a[i+1]:\n        continue\n    if judge==[]:\n        judge.append(flag)\n    else:\n        ff=judge.pop()\n        if flag==ff:\n            judge.append(flag)\n        else:\n            cnt+=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14065": {"id": 14065, "code": "def f(n,a):\n    if n==1:\n        print(1)\n        exit()\n    pre=a[1]-a[0]\n    ans=1\n    for i in range(2,n):\n        if pre*(a[i]-a[i-1])<0:\n            pre=0\n            ans+=1\n        else:\n            if a[i]-a[i-1]:\n                pre=a[i]-a[i-1]\n    return ans\nn = 6\na = [1, 2, 3, 2, 2, 1]\nprint(f(n,a))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14066": {"id": 14066, "code": "def f(n,a):\n    if n==1:\n        print(1)\n        exit()\n    pre=a[1]-a[0]\n    ans=1\n    for i in range(2,n):\n        if pre*(a[i]-a[i-1])<0:\n            pre=0\n            ans+=1\n        else:\n            if a[i]-a[i-1]:\n                pre=a[i]-a[i-1]\n    return ans\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprint(f(n,a))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14067": {"id": 14067, "code": "def f(n,a):\n    if n==1:\n        print(1)\n        exit()\n    pre=a[1]-a[0]\n    ans=1\n    for i in range(2,n):\n        if pre*(a[i]-a[i-1])<0:\n            pre=0\n            ans+=1\n        else:\n            if a[i]-a[i-1]:\n                pre=a[i]-a[i-1]\n    return ans\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprint(f(n,a))", "coverage": [">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14068": {"id": 14068, "code": "from collections import deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\nd=deque(a)\ntmp=[d[0]]\nd.popleft()\nans=1\nwhile d:\n    t=tmp[-1]-tmp[0]\n    if len(tmp)==1 or t==0:\n        tmp.append(d.popleft())\n    elif t>0 and d[0]>=tmp[-1]:\n        tmp.append(d.popleft())\n    elif t<0 and d[0]<=tmp[-1]:\n        tmp.append(d.popleft())\n    else:\n        ans+=1\n        tmp=[d.popleft()]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14069": {"id": 14069, "code": "from collections import deque\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd=deque(a)\ntmp=[d[0]]\nd.popleft()\nans=1\nwhile d:\n    t=tmp[-1]-tmp[0]\n    if len(tmp)==1 or t==0:\n        tmp.append(d.popleft())\n    elif t>0 and d[0]>=tmp[-1]:\n        tmp.append(d.popleft())\n    elif t<0 and d[0]<=tmp[-1]:\n        tmp.append(d.popleft())\n    else:\n        ans+=1\n        tmp=[d.popleft()]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "14070": {"id": 14070, "code": "from collections import deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd=deque(a)\ntmp=[d[0]]\nd.popleft()\nans=1\nwhile d:\n    t=tmp[-1]-tmp[0]\n    if len(tmp)==1 or t==0:\n        tmp.append(d.popleft())\n    elif t>0 and d[0]>=tmp[-1]:\n        tmp.append(d.popleft())\n    elif t<0 and d[0]<=tmp[-1]:\n        tmp.append(d.popleft())\n    else:\n        ans+=1\n        tmp=[d.popleft()]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14071": {"id": 14071, "code": "n = 6\na_s = [1, 2, 3, 2, 2, 1]\nflag = 0\nans = 1\ntmp = 0\nfor i in range(n):\n    if i == 0:\n        continue\n    elif a_s[i] > a_s[i-1]:\n        if flag == -1:\n            ans += 1\n            flag = 0\n        else:\n            flag = 1\n    elif a_s[i] < a_s[i-1]:\n        if flag == 1:\n            ans += 1\n            flag = 0\n        else:\n            flag = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14072": {"id": 14072, "code": "n = 9\na_s = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = 0\nans = 1\ntmp = 0\nfor i in range(n):\n    if i == 0:\n        continue\n    elif a_s[i] > a_s[i-1]:\n        if flag == -1:\n            ans += 1\n            flag = 0\n        else:\n            flag = 1\n    elif a_s[i] < a_s[i-1]:\n        if flag == 1:\n            ans += 1\n            flag = 0\n        else:\n            flag = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14073": {"id": 14073, "code": "n = 7\na_s = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = 0\nans = 1\ntmp = 0\nfor i in range(n):\n    if i == 0:\n        continue\n    elif a_s[i] > a_s[i-1]:\n        if flag == -1:\n            ans += 1\n            flag = 0\n        else:\n            flag = 1\n    elif a_s[i] < a_s[i-1]:\n        if flag == 1:\n            ans += 1\n            flag = 0\n        else:\n            flag = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14074": {"id": 14074, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\ndr = 0\nsav = a[0]\nfor i in range(1, n):\n    if dr == 0:\n        if sav < a[i]:\n            dr = 1\n        elif sav > a[i]:\n            dr = -1\n    elif dr == 1:\n        if sav > a[i]:\n            cnt = cnt + 1\n            dr = 0\n    elif dr == -1:\n        if sav < a[i]:\n            cnt = cnt + 1\n            dr = 0\n    sav = a[i]\nans = cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "14075": {"id": 14075, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ndr = 0\nsav = a[0]\nfor i in range(1, n):\n    if dr == 0:\n        if sav < a[i]:\n            dr = 1\n        elif sav > a[i]:\n            dr = -1\n    elif dr == 1:\n        if sav > a[i]:\n            cnt = cnt + 1\n            dr = 0\n    elif dr == -1:\n        if sav < a[i]:\n            cnt = cnt + 1\n            dr = 0\n    sav = a[i]\nans = cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">"]}, "14076": {"id": 14076, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ndr = 0\nsav = a[0]\nfor i in range(1, n):\n    if dr == 0:\n        if sav < a[i]:\n            dr = 1\n        elif sav > a[i]:\n            dr = -1\n    elif dr == 1:\n        if sav > a[i]:\n            cnt = cnt + 1\n            dr = 0\n    elif dr == -1:\n        if sav < a[i]:\n            cnt = cnt + 1\n            dr = 0\n    sav = a[i]\nans = cnt\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14077": {"id": 14077, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\ndiv_flg=False\ninc_flg=False\ndec_flg=False\nans=0\nif N==1:\n  print(1)\n  sys.exit()\nfor i in range(N):\n  if inc_flg:\n    if i==N-1:\n      break\n    if A[i]<=A[i+1]:\n      continue\n    else:\n      inc_flg=False\n      div_flg=False\n  elif dec_flg:\n    if i==N-1:\n      break\n    if A[i]>=A[i+1]:\n      continue\n    else:\n      dec_flg=False\n      div_flg=False\n  else:\n    if i==0:\n      ans+=1\n      div_flg=True\n    elif i==N-1:\n      if not div_flg:\n        ans+=1\n      break\n    if A[i]==A[i+1]:\n      if not div_flg:\n        ans+=1\n      div_flg=True\n      continue\n    elif A[i]<A[i+1]:\n      if not div_flg:\n        ans+=1\n      inc_flg=True\n      continue\n    elif A[i]>A[i+1]:\n      if not div_flg:\n        ans+=1\n      dec_flg=True\n      continue\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14078": {"id": 14078, "code": "import sys\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndiv_flg=False\ninc_flg=False\ndec_flg=False\nans=0\nif N==1:\n  print(1)\n  sys.exit()\nfor i in range(N):\n  if inc_flg:\n    if i==N-1:\n      break\n    if A[i]<=A[i+1]:\n      continue\n    else:\n      inc_flg=False\n      div_flg=False\n  elif dec_flg:\n    if i==N-1:\n      break\n    if A[i]>=A[i+1]:\n      continue\n    else:\n      dec_flg=False\n      div_flg=False\n  else:\n    if i==0:\n      ans+=1\n      div_flg=True\n    elif i==N-1:\n      if not div_flg:\n        ans+=1\n      break\n    if A[i]==A[i+1]:\n      if not div_flg:\n        ans+=1\n      div_flg=True\n      continue\n    elif A[i]<A[i+1]:\n      if not div_flg:\n        ans+=1\n      inc_flg=True\n      continue\n    elif A[i]>A[i+1]:\n      if not div_flg:\n        ans+=1\n      dec_flg=True\n      continue\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14079": {"id": 14079, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndiv_flg=False\ninc_flg=False\ndec_flg=False\nans=0\nif N==1:\n  print(1)\n  sys.exit()\nfor i in range(N):\n  if inc_flg:\n    if i==N-1:\n      break\n    if A[i]<=A[i+1]:\n      continue\n    else:\n      inc_flg=False\n      div_flg=False\n  elif dec_flg:\n    if i==N-1:\n      break\n    if A[i]>=A[i+1]:\n      continue\n    else:\n      dec_flg=False\n      div_flg=False\n  else:\n    if i==0:\n      ans+=1\n      div_flg=True\n    elif i==N-1:\n      if not div_flg:\n        ans+=1\n      break\n    if A[i]==A[i+1]:\n      if not div_flg:\n        ans+=1\n      div_flg=True\n      continue\n    elif A[i]<A[i+1]:\n      if not div_flg:\n        ans+=1\n      inc_flg=True\n      continue\n    elif A[i]>A[i+1]:\n      if not div_flg:\n        ans+=1\n      dec_flg=True\n      continue\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14080": {"id": 14080, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nd = [0 for _ in range(n-1)]\nfor i in range(n-1):\n    d[i] = a[i+1]-a[i]\nans = 1 \nstate = 'flat'\nfor i in range(n-1):\n    if i == 0:\n        if d[i] > 0:\n            state = 'up'    \n        elif d[i] < 0:\n            state = 'down'\n    else:\n        if d[i] > 0:\n            if state == 'flat':\n                state = 'up'\n            elif state == 'down':\n                state = 'flat'\n                ans += 1\n        elif d[i] < 0:\n            if state == 'flat':\n                state = 'down'\n            elif state == 'up':\n                state = 'flat'\n                ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14081": {"id": 14081, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = [0 for _ in range(n-1)]\nfor i in range(n-1):\n    d[i] = a[i+1]-a[i]\nans = 1 \nstate = 'flat'\nfor i in range(n-1):\n    if i == 0:\n        if d[i] > 0:\n            state = 'up'    \n        elif d[i] < 0:\n            state = 'down'\n    else:\n        if d[i] > 0:\n            if state == 'flat':\n                state = 'up'\n            elif state == 'down':\n                state = 'flat'\n                ans += 1\n        elif d[i] < 0:\n            if state == 'flat':\n                state = 'down'\n            elif state == 'up':\n                state = 'flat'\n                ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14082": {"id": 14082, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nstate = \"\"\nfor i in range(N-1):\n    if A[i] > A[i+1] and state == \"\":\n        state = \"minus\"\n    elif A[i] > A[i+1] and state == \"plus\":\n        state = \"\"\n        count += 1\n    elif A[i] > A[i+1] and state == \"minus\":\n        continue\n    elif A[i] < A[i+1] and state == \"\":\n        state = \"plus\"\n    elif A[i] < A[i+1] and state == \"minus\":\n        state = \"\"\n        count += 1\n    elif A[i] < A[i+1] and state == \"plus\":\n        continue\n    else:\n        continue\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "14083": {"id": 14083, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nstate = \"\"\nfor i in range(N-1):\n    if A[i] > A[i+1] and state == \"\":\n        state = \"minus\"\n    elif A[i] > A[i+1] and state == \"plus\":\n        state = \"\"\n        count += 1\n    elif A[i] > A[i+1] and state == \"minus\":\n        continue\n    elif A[i] < A[i+1] and state == \"\":\n        state = \"plus\"\n    elif A[i] < A[i+1] and state == \"minus\":\n        state = \"\"\n        count += 1\n    elif A[i] < A[i+1] and state == \"plus\":\n        continue\n    else:\n        continue\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14084": {"id": 14084, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nstate = \"\"\nfor i in range(N-1):\n    if A[i] > A[i+1] and state == \"\":\n        state = \"minus\"\n    elif A[i] > A[i+1] and state == \"plus\":\n        state = \"\"\n        count += 1\n    elif A[i] > A[i+1] and state == \"minus\":\n        continue\n    elif A[i] < A[i+1] and state == \"\":\n        state = \"plus\"\n    elif A[i] < A[i+1] and state == \"minus\":\n        state = \"\"\n        count += 1\n    elif A[i] < A[i+1] and state == \"plus\":\n        continue\n    else:\n        continue\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14085": {"id": 14085, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\nup = 0\ndown = 0\ni=0\nwhile (i+1)<n:\n    if up == down:\n        if a[i+1] > a[i]:\n            up += 1\n            down = 0\n        elif a[i+1] < a[i]:\n            up = 0\n            down += 1\n        else:\n            up += 1\n            down += 1\n    elif up == 0 and down !=0:\n        if a[i+1] <= a[i]:\n            down += 1\n        else:\n            ans += 1\n            down = 0\n    elif down == 0 and up!= 0:\n        if a[i+1] >= a[i]:\n            up += 1\n        else:\n            ans += 1\n            up = 0\n    i += 1\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14086": {"id": 14086, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nup = 0\ndown = 0\ni=0\nwhile (i+1)<n:\n    if up == down:\n        if a[i+1] > a[i]:\n            up += 1\n            down = 0\n        elif a[i+1] < a[i]:\n            up = 0\n            down += 1\n        else:\n            up += 1\n            down += 1\n    elif up == 0 and down !=0:\n        if a[i+1] <= a[i]:\n            down += 1\n        else:\n            ans += 1\n            down = 0\n    elif down == 0 and up!= 0:\n        if a[i+1] >= a[i]:\n            up += 1\n        else:\n            ans += 1\n            up = 0\n    i += 1\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14087": {"id": 14087, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nup = 0\ndown = 0\ni=0\nwhile (i+1)<n:\n    if up == down:\n        if a[i+1] > a[i]:\n            up += 1\n            down = 0\n        elif a[i+1] < a[i]:\n            up = 0\n            down += 1\n        else:\n            up += 1\n            down += 1\n    elif up == 0 and down !=0:\n        if a[i+1] <= a[i]:\n            down += 1\n        else:\n            ans += 1\n            down = 0\n    elif down == 0 and up!= 0:\n        if a[i+1] >= a[i]:\n            up += 1\n        else:\n            ans += 1\n            up = 0\n    i += 1\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14088": {"id": 14088, "code": "def main():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    ret = 1\n    state = 0\n    for i in range(1,N):\n        if A[i]>A[i-1]:\n            if state == -1:\n                ret += 1\n                state = 0\n            else:\n                state = 1\n        elif A[i]<A[i-1]:\n            if state == 1:\n                ret += 1\n                state = 0\n            else:\n                state = -1\n    print(ret)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14089": {"id": 14089, "code": "def main():\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ret = 1\n    state = 0\n    for i in range(1,N):\n        if A[i]>A[i-1]:\n            if state == -1:\n                ret += 1\n                state = 0\n            else:\n                state = 1\n        elif A[i]<A[i-1]:\n            if state == 1:\n                ret += 1\n                state = 0\n            else:\n                state = -1\n    print(ret)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14090": {"id": 14090, "code": "def main():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ret = 1\n    state = 0\n    for i in range(1,N):\n        if A[i]>A[i-1]:\n            if state == -1:\n                ret += 1\n                state = 0\n            else:\n                state = 1\n        elif A[i]<A[i-1]:\n            if state == 1:\n                ret += 1\n                state = 0\n            else:\n                state = -1\n    print(ret)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14091": {"id": 14091, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ndp = [[N, N] for i in range(N)]\ndp[0] = [1, 1]\nfor i, a in enumerate(A[1:], 1):\n  pre_a = A[i-1]\n  if pre_a < a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n  elif pre_a == a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\n  else:\n    dp[i][0] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\nprint(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14092": {"id": 14092, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndp = [[N, N] for i in range(N)]\ndp[0] = [1, 1]\nfor i, a in enumerate(A[1:], 1):\n  pre_a = A[i-1]\n  if pre_a < a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n  elif pre_a == a:\n    dp[i][0] = min(dp[i-1][0], dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\n  else:\n    dp[i][0] = min(dp[i-1][0]+1, dp[i-1][1]+1)\n    dp[i][1] = min(dp[i-1][0]+1, dp[i-1][1])\nprint(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "14093": {"id": 14093, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nB = []\nfor a in A:\n    if B:\n        if B[-1] == a:\n            continue\n        else:\n            B.append(a)\n    else:\n        B.append(a)\nm = len(B)\nX = []\nfor i in range(m):\n    if i == 0:\n        cur = B[0]\n        cnt = 1\n        flag = 0\n    else:\n        if flag == 0:\n            if B[i] > cur:\n                flag = 1\n                cnt += 1\n                cur = B[i]\n            if B[i] < cur:\n                flag = -1\n                cnt += 1\n                cur = B[i]\n        elif flag == 1:\n            if B[i] > cur:\n                cnt += 1\n                cur = B[i]\n            else:\n                X.append(cnt)\n                cur = B[i]\n                cnt = 1\n                flag = 0\n        else:\n            if B[i] < cur:\n                cnt += 1\n                cur = B[i]\n            else:\n                X.append(cnt)\n                cur = B[i]\n                cnt = 1\n                flag = 0\nelse:\n    X.append(cnt)\nprint(len(X))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14094": {"id": 14094, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nwhile i < n:\n    j = i\n    while j < n-1 and l[j] >= l[j+1]:\n        j += 1\n    k = i\n    while k < n-1 and l[k] <= l[k+1]:\n        k += 1\n    i = max(j, k) + 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14095": {"id": 14095, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nans = 0\nwhile i < n:\n    j = i\n    while j < n-1 and l[j] >= l[j+1]:\n        j += 1\n    k = i\n    while k < n-1 and l[k] <= l[k+1]:\n        k += 1\n    i = max(j, k) + 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14096": {"id": 14096, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < n:\n    j = i\n    while j < n-1 and l[j] >= l[j+1]:\n        j += 1\n    k = i\n    while k < n-1 and l[k] <= l[k+1]:\n        k += 1\n    i = max(j, k) + 1\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14097": {"id": 14097, "code": "n = 6\nL = [1, 2, 3, 2, 2, 1]\ncnt = 0\nud = 0\nch = 1\nfor i in range(n-1):\n    if L[i] < L[i+1] and ud == -1 and ch == 0:\n        ch = 1\n        ud = 1\n        cnt +=1\n    elif L[i] < L[i+1] and ch ==1:\n        ch = 0\n        ud = 1\n    elif L[i] > L[i+1] and ud == 1 and ch == 0:\n        ch = 1\n        ud= -1\n        cnt +=1\n    elif L[i] > L[i+1] and ch == 1:\n        ch = 0\n        ud = -1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14098": {"id": 14098, "code": "n = 9\nL = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nud = 0\nch = 1\nfor i in range(n-1):\n    if L[i] < L[i+1] and ud == -1 and ch == 0:\n        ch = 1\n        ud = 1\n        cnt +=1\n    elif L[i] < L[i+1] and ch ==1:\n        ch = 0\n        ud = 1\n    elif L[i] > L[i+1] and ud == 1 and ch == 0:\n        ch = 1\n        ud= -1\n        cnt +=1\n    elif L[i] > L[i+1] and ch == 1:\n        ch = 0\n        ud = -1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14099": {"id": 14099, "code": "n = 7\nL = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nud = 0\nch = 1\nfor i in range(n-1):\n    if L[i] < L[i+1] and ud == -1 and ch == 0:\n        ch = 1\n        ud = 1\n        cnt +=1\n    elif L[i] < L[i+1] and ch ==1:\n        ch = 0\n        ud = 1\n    elif L[i] > L[i+1] and ud == 1 and ch == 0:\n        ch = 1\n        ud= -1\n        cnt +=1\n    elif L[i] > L[i+1] and ch == 1:\n        ch = 0\n        ud = -1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14100": {"id": 14100, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nup_or_down = 0\nans = 1\nfor i in range(len(A) - 1):\n    if up_or_down == 0:\n        up_or_down = A[i+1] - A[i]\n    else:\n        if up_or_down > 0 and A[i+1] - A[i] < 0:\n            ans += 1\n            up_or_down = 0\n        elif up_or_down < 0 and A[i+1] - A[i] > 0:\n            ans += 1\n            up_or_down = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">"]}, "14101": {"id": 14101, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup_or_down = 0\nans = 1\nfor i in range(len(A) - 1):\n    if up_or_down == 0:\n        up_or_down = A[i+1] - A[i]\n    else:\n        if up_or_down > 0 and A[i+1] - A[i] < 0:\n            ans += 1\n            up_or_down = 0\n        elif up_or_down < 0 and A[i+1] - A[i] > 0:\n            ans += 1\n            up_or_down = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "14102": {"id": 14102, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup_or_down = 0\nans = 1\nfor i in range(len(A) - 1):\n    if up_or_down == 0:\n        up_or_down = A[i+1] - A[i]\n    else:\n        if up_or_down > 0 and A[i+1] - A[i] < 0:\n            ans += 1\n            up_or_down = 0\n        elif up_or_down < 0 and A[i+1] - A[i] > 0:\n            ans += 1\n            up_or_down = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14103": {"id": 14103, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nflag=0\ncount=1\nfor i in range(1,N):\n    if A[i-1]<A[i]:\n        if flag==-1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=1\n    elif A[i-1]>A[i]:\n        if flag==1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=-1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14104": {"id": 14104, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=0\ncount=1\nfor i in range(1,N):\n    if A[i-1]<A[i]:\n        if flag==-1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=1\n    elif A[i-1]>A[i]:\n        if flag==1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=-1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14105": {"id": 14105, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=0\ncount=1\nfor i in range(1,N):\n    if A[i-1]<A[i]:\n        if flag==-1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=1\n    elif A[i-1]>A[i]:\n        if flag==1:\n            count+=1\n            flag=0\n        elif flag==0:\n            flag=-1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14106": {"id": 14106, "code": "N = 6\nnums = [1, 2, 3, 2, 2, 1]\nupper = True\nlower = True\nbefore = nums[0]\nanswer = 0\nfor i, num in enumerate(nums):\n  if before < num:\n    lower = False\n  elif before > num:\n    upper = False\n  before = num\n  if not upper and not lower:\n    answer += 1\n    upper = True\n    lower = True\nprint(answer+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14107": {"id": 14107, "code": "N = 9\nnums = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nupper = True\nlower = True\nbefore = nums[0]\nanswer = 0\nfor i, num in enumerate(nums):\n  if before < num:\n    lower = False\n  elif before > num:\n    upper = False\n  before = num\n  if not upper and not lower:\n    answer += 1\n    upper = True\n    lower = True\nprint(answer+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14108": {"id": 14108, "code": "N = 7\nnums = [1, 2, 3, 2, 1, 999999999, 1000000000]\nupper = True\nlower = True\nbefore = nums[0]\nanswer = 0\nfor i, num in enumerate(nums):\n  if before < num:\n    lower = False\n  elif before > num:\n    upper = False\n  before = num\n  if not upper and not lower:\n    answer += 1\n    upper = True\n    lower = True\nprint(answer+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14109": {"id": 14109, "code": "def resolve():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    result = 0\n    while len(A) > 1:\n        flag = False\n        for i in range(1, len(A)):\n            if A[0] == A[i]:\n                continue\n            elif A[0] < A[i]:\n                j = i\n                while A[j-1] <= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            elif A[0] > A[i]:\n                j = i\n                while A[j-1] >= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            if flag == True:\n                break\n    else:\n        if len(A) == 1:\n            result += 1\n    print(result)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">", "!", ">", ">"]}, "14110": {"id": 14110, "code": "def resolve():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    result = 0\n    while len(A) > 1:\n        flag = False\n        for i in range(1, len(A)):\n            if A[0] == A[i]:\n                continue\n            elif A[0] < A[i]:\n                j = i\n                while A[j-1] <= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            elif A[0] > A[i]:\n                j = i\n                while A[j-1] >= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            if flag == True:\n                break\n    else:\n        if len(A) == 1:\n            result += 1\n    print(result)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "14111": {"id": 14111, "code": "def resolve():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    result = 0\n    while len(A) > 1:\n        flag = False\n        for i in range(1, len(A)):\n            if A[0] == A[i]:\n                continue\n            elif A[0] < A[i]:\n                j = i\n                while A[j-1] <= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            elif A[0] > A[i]:\n                j = i\n                while A[j-1] >= A[j]:\n                    j += 1\n                    if j == len(A):\n                        A = []\n                        result += 1\n                        flag = True\n                        break\n                else:\n                    del A[:j]\n                    result += 1\n                    flag = True\n            if flag == True:\n                break\n    else:\n        if len(A) == 1:\n            result += 1\n    print(result)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">"]}, "14112": {"id": 14112, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\ncur = 'N'\ni = 1\nwhile i < N:\n    if cur == 'U':\n        if A[i] < A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'D':\n        if A[i] > A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'N':\n        if A[i] > A[i-1]:\n            cur = 'U'\n        elif A[i] < A[i-1]:\n            cur = 'D'\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14113": {"id": 14113, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncur = 'N'\ni = 1\nwhile i < N:\n    if cur == 'U':\n        if A[i] < A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'D':\n        if A[i] > A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'N':\n        if A[i] > A[i-1]:\n            cur = 'U'\n        elif A[i] < A[i-1]:\n            cur = 'D'\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "14114": {"id": 14114, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ncur = 'N'\ni = 1\nwhile i < N:\n    if cur == 'U':\n        if A[i] < A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'D':\n        if A[i] > A[i-1]:\n            ans += 1\n            cur = 'N'\n        i += 1\n    elif cur == 'N':\n        if A[i] > A[i-1]:\n            cur = 'U'\n        elif A[i] < A[i-1]:\n            cur = 'D'\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14115": {"id": 14115, "code": "inc = False\ndec = False\nval = 0\nans = 1\nn = 6\na = [1, 2, 3, 2, 2, 1]\nfor i in range(1, n):\n    if inc:\n        if a[i-1] > a[i]:\n            ans += 1\n            inc = False\n    elif dec:\n        if a[i-1] < a[i]:\n            ans+=1\n            dec =False\n    else:\n        if a[i-1] < a[i]:\n            inc = True\n        elif a[i-1] > a[i]:\n            dec = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14116": {"id": 14116, "code": "inc = False\ndec = False\nval = 0\nans = 1\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nfor i in range(1, n):\n    if inc:\n        if a[i-1] > a[i]:\n            ans += 1\n            inc = False\n    elif dec:\n        if a[i-1] < a[i]:\n            ans+=1\n            dec =False\n    else:\n        if a[i-1] < a[i]:\n            inc = True\n        elif a[i-1] > a[i]:\n            dec = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "14117": {"id": 14117, "code": "inc = False\ndec = False\nval = 0\nans = 1\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nfor i in range(1, n):\n    if inc:\n        if a[i-1] > a[i]:\n            ans += 1\n            inc = False\n    elif dec:\n        if a[i-1] < a[i]:\n            ans+=1\n            dec =False\n    else:\n        if a[i-1] < a[i]:\n            inc = True\n        elif a[i-1] > a[i]:\n            dec = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14118": {"id": 14118, "code": "N = 6\nnow=0\nans=1\nS=0\nl = [1, 2, 3, 2, 2, 1]\nfor i in range(1,N):\n   X=l[i]-l[i-1]\n   X=0 if X==0 else 1 if X>0 else -1\n   if X==0:\n      continue\n   elif S ==0:\n      S=X\n   elif S != X:\n      ans+=1\n      S=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14119": {"id": 14119, "code": "N = 9\nnow=0\nans=1\nS=0\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nfor i in range(1,N):\n   X=l[i]-l[i-1]\n   X=0 if X==0 else 1 if X>0 else -1\n   if X==0:\n      continue\n   elif S ==0:\n      S=X\n   elif S != X:\n      ans+=1\n      S=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14120": {"id": 14120, "code": "N = 7\nnow=0\nans=1\nS=0\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nfor i in range(1,N):\n   X=l[i]-l[i-1]\n   X=0 if X==0 else 1 if X>0 else -1\n   if X==0:\n      continue\n   elif S ==0:\n      S=X\n   elif S != X:\n      ans+=1\n      S=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14121": {"id": 14121, "code": "from collections import deque\nN = 6\nA_deque = deque(int(e) for e in \"1 2 3 2 2 1\".split())\nsection = list()\nsection.append(A_deque.popleft())\nans = 1\nmode = 0\nwhile 1:\n    if len(A_deque) == 0:\n        break\n    elif mode == 0:\n        next = A_deque.popleft()\n        if section[-1] == next:\n            section.append(next)\n        elif section[-1] > next:\n            section.append(next)\n            mode = -1\n        elif section[-1] < next:\n            section.append(next)\n            mode = 1\n    elif mode == 1:\n        next = A_deque.popleft()\n        if section[-1] > next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\n    elif mode == -1:\n        next = A_deque.popleft()\n        if section[-1] < next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14122": {"id": 14122, "code": "from collections import deque\nN = 9\nA_deque = deque(int(e) for e in \"1 2 1 2 1 2 1 2 1\".split())\nsection = list()\nsection.append(A_deque.popleft())\nans = 1\nmode = 0\nwhile 1:\n    if len(A_deque) == 0:\n        break\n    elif mode == 0:\n        next = A_deque.popleft()\n        if section[-1] == next:\n            section.append(next)\n        elif section[-1] > next:\n            section.append(next)\n            mode = -1\n        elif section[-1] < next:\n            section.append(next)\n            mode = 1\n    elif mode == 1:\n        next = A_deque.popleft()\n        if section[-1] > next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\n    elif mode == -1:\n        next = A_deque.popleft()\n        if section[-1] < next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14123": {"id": 14123, "code": "from collections import deque\nN = 7\nA_deque = deque(int(e) for e in \"1 2 3 2 1 999999999 1000000000\".split())\nsection = list()\nsection.append(A_deque.popleft())\nans = 1\nmode = 0\nwhile 1:\n    if len(A_deque) == 0:\n        break\n    elif mode == 0:\n        next = A_deque.popleft()\n        if section[-1] == next:\n            section.append(next)\n        elif section[-1] > next:\n            section.append(next)\n            mode = -1\n        elif section[-1] < next:\n            section.append(next)\n            mode = 1\n    elif mode == 1:\n        next = A_deque.popleft()\n        if section[-1] > next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\n    elif mode == -1:\n        next = A_deque.popleft()\n        if section[-1] < next:\n            section.clear()\n            section.append(next)\n            ans += 1\n            mode = 0\n        else:\n            section.append(next)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14124": {"id": 14124, "code": "def main():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14125": {"id": 14125, "code": "def main():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14126": {"id": 14126, "code": "def main():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    count = 0\n    plus = '-1'\n    A = [A[i + 1] - A[i] for i in range(n - 1)]\n    for a in A:\n        if plus == '-1':\n            if a > 0:\n                plus = True\n            elif a < 0:\n                plus = False\n            else:\n                pass\n        elif plus:\n            if a < 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n        else:\n            if a > 0:\n                plus = '-1'\n                count += 1\n            else:\n                pass\n    print(count + 1)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14127": {"id": 14127, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ndef f():\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            state = 0\n            break\n        if A[i-1] > A[i]:\n            state = 1\n            break\n    else:\n        print(1)\n        return\n    cnt = 1\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            if state == 1:\n                state = 2\n                cnt += 1\n            else:\n                state = 0\n        if A[i-1] > A[i]:\n            if state == 0:\n                state = 2\n                cnt += 1\n            else:\n                state = 1\n    print(cnt)\nf()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14128": {"id": 14128, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndef f():\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            state = 0\n            break\n        if A[i-1] > A[i]:\n            state = 1\n            break\n    else:\n        print(1)\n        return\n    cnt = 1\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            if state == 1:\n                state = 2\n                cnt += 1\n            else:\n                state = 0\n        if A[i-1] > A[i]:\n            if state == 0:\n                state = 2\n                cnt += 1\n            else:\n                state = 1\n    print(cnt)\nf()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14129": {"id": 14129, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndef f():\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            state = 0\n            break\n        if A[i-1] > A[i]:\n            state = 1\n            break\n    else:\n        print(1)\n        return\n    cnt = 1\n    for i in range(1, N):\n        if A[i-1] < A[i]:\n            if state == 1:\n                state = 2\n                cnt += 1\n            else:\n                state = 0\n        if A[i-1] > A[i]:\n            if state == 0:\n                state = 2\n                cnt += 1\n            else:\n                state = 1\n    print(cnt)\nf()", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14130": {"id": 14130, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 0\nup = None\nfor i in range(1, N):\n    if up == None:\n        if not A[i] == A[i - 1]:\n            up = A[i] > A[i - 1]\n    elif up:\n        if A[i] < A[i - 1]:\n            ans += 1\n            up = None\n    else:\n        if A[i] > A[i - 1]:\n            ans += 1\n            up = None\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14131": {"id": 14131, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nup = None\nfor i in range(1, N):\n    if up == None:\n        if not A[i] == A[i - 1]:\n            up = A[i] > A[i - 1]\n    elif up:\n        if A[i] < A[i - 1]:\n            ans += 1\n            up = None\n    else:\n        if A[i] > A[i - 1]:\n            ans += 1\n            up = None\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14132": {"id": 14132, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nup = None\nfor i in range(1, N):\n    if up == None:\n        if not A[i] == A[i - 1]:\n            up = A[i] > A[i - 1]\n    elif up:\n        if A[i] < A[i - 1]:\n            ans += 1\n            up = None\n    else:\n        if A[i] > A[i - 1]:\n            ans += 1\n            up = None\nprint(ans + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14133": {"id": 14133, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N<=2:\n    print(1)\n    exit()\nnow=0\nans=1\nfor i in range(1,N):\n    if i==1:\n        if A[i]-A[i-1]==0:\n            now=0\n        else:\n            now=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if now>=1:\n            plus=True\n        elif now==0:\n            plus=-1\n        else:\n            plus=False\n    else:\n        if A[i]-A[i-1]==0:\n            nex=0\n        else:\n            nex=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if plus==-1:\n            if nex>=1:\n                plus=True\n            elif nex<0:\n                plus=False\n        elif plus:\n            if nex<0:\n                plus=-1\n                ans+=1\n        else:\n            if nex>0:\n                plus=-1\n                ans+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14134": {"id": 14134, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N<=2:\n    print(1)\n    exit()\nnow=0\nans=1\nfor i in range(1,N):\n    if i==1:\n        if A[i]-A[i-1]==0:\n            now=0\n        else:\n            now=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if now>=1:\n            plus=True\n        elif now==0:\n            plus=-1\n        else:\n            plus=False\n    else:\n        if A[i]-A[i-1]==0:\n            nex=0\n        else:\n            nex=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if plus==-1:\n            if nex>=1:\n                plus=True\n            elif nex<0:\n                plus=False\n        elif plus:\n            if nex<0:\n                plus=-1\n                ans+=1\n        else:\n            if nex>0:\n                plus=-1\n                ans+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14135": {"id": 14135, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N<=2:\n    print(1)\n    exit()\nnow=0\nans=1\nfor i in range(1,N):\n    if i==1:\n        if A[i]-A[i-1]==0:\n            now=0\n        else:\n            now=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if now>=1:\n            plus=True\n        elif now==0:\n            plus=-1\n        else:\n            plus=False\n    else:\n        if A[i]-A[i-1]==0:\n            nex=0\n        else:\n            nex=(A[i]-A[i-1])//(abs(A[i]-A[i-1]))\n        if plus==-1:\n            if nex>=1:\n                plus=True\n            elif nex<0:\n                plus=False\n        elif plus:\n            if nex<0:\n                plus=-1\n                ans+=1\n        else:\n            if nex>0:\n                plus=-1\n                ans+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14136": {"id": 14136, "code": "N = 6\nsrc = [1, 2, 3, 2, 2, 1]\nasc = None\nans=1\nfor i in range(N-1):\n    d = src[i+1]-src[i]\n    if d==0:\n        continue\n    if asc==None:\n        asc = d > 0\n        continue\n    if (asc and d<0) or (not asc and d>0):\n        asc = None\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14137": {"id": 14137, "code": "N = 9\nsrc = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nasc = None\nans=1\nfor i in range(N-1):\n    d = src[i+1]-src[i]\n    if d==0:\n        continue\n    if asc==None:\n        asc = d > 0\n        continue\n    if (asc and d<0) or (not asc and d>0):\n        asc = None\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14138": {"id": 14138, "code": "N = 7\nsrc = [1, 2, 3, 2, 1, 999999999, 1000000000]\nasc = None\nans=1\nfor i in range(N-1):\n    d = src[i+1]-src[i]\n    if d==0:\n        continue\n    if asc==None:\n        asc = d > 0\n        continue\n    if (asc and d<0) or (not asc and d>0):\n        asc = None\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14139": {"id": 14139, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    f, p = 0, 0\n    ans = 0\n    for a in A:\n        if f == 1:\n            if a > p:\n                f = 2\n            elif a < p:\n                f = 3\n        elif f == 2:\n            if a < p:\n                ans += 1\n                f = 1\n        elif f == 3:\n            if a > p:\n                ans += 1\n                f = 1\n        elif f == 0:\n            f = 1\n        p = a\n    else:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14140": {"id": 14140, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    f, p = 0, 0\n    ans = 0\n    for a in A:\n        if f == 1:\n            if a > p:\n                f = 2\n            elif a < p:\n                f = 3\n        elif f == 2:\n            if a < p:\n                ans += 1\n                f = 1\n        elif f == 3:\n            if a > p:\n                ans += 1\n                f = 1\n        elif f == 0:\n            f = 1\n        p = a\n    else:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14141": {"id": 14141, "code": "def main():\n    import sys\n    input = sys.stdin.readline\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    f, p = 0, 0\n    ans = 0\n    for a in A:\n        if f == 1:\n            if a > p:\n                f = 2\n            elif a < p:\n                f = 3\n        elif f == 2:\n            if a < p:\n                ans += 1\n                f = 1\n        elif f == 3:\n            if a > p:\n                ans += 1\n                f = 1\n        elif f == 0:\n            f = 1\n        p = a\n    else:\n        ans += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14142": {"id": 14142, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nstate = -1\nres = 1\nfor i in range(1, n):\n    if state == -1:\n        if a[i] < a[i-1]:\n            state = 0\n        elif a[i] > a[i-1]:\n            state = 1\n    elif (state == 0 and a[i] > a[i-1]) or (state == 1 and a[i] < a[i-1]):\n        res += 1\n        state = -1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14143": {"id": 14143, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstate = -1\nres = 1\nfor i in range(1, n):\n    if state == -1:\n        if a[i] < a[i-1]:\n            state = 0\n        elif a[i] > a[i-1]:\n            state = 1\n    elif (state == 0 and a[i] > a[i-1]) or (state == 1 and a[i] < a[i-1]):\n        res += 1\n        state = -1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14144": {"id": 14144, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstate = -1\nres = 1\nfor i in range(1, n):\n    if state == -1:\n        if a[i] < a[i-1]:\n            state = 0\n        elif a[i] > a[i-1]:\n            state = 1\n    elif (state == 0 and a[i] > a[i-1]) or (state == 1 and a[i] < a[i-1]):\n        res += 1\n        state = -1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14145": {"id": 14145, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    ans = 0\n    i = 0\n    while i < n:\n        while i+1<n and a[i]==a[i+1]:\n            i += 1\n        if i+1<n and a[i] < a[i+1]:\n            while i+1<n and a[i]<=a[i+1]:\n                i += 1\n        elif i+1<n and a[i] > a[i+1]:\n            while i+1<n and a[i]>=a[i+1]:\n                i += 1\n        ans += 1\n        i += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14146": {"id": 14146, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 0\n    i = 0\n    while i < n:\n        while i+1<n and a[i]==a[i+1]:\n            i += 1\n        if i+1<n and a[i] < a[i+1]:\n            while i+1<n and a[i]<=a[i+1]:\n                i += 1\n        elif i+1<n and a[i] > a[i+1]:\n            while i+1<n and a[i]>=a[i+1]:\n                i += 1\n        ans += 1\n        i += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14147": {"id": 14147, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 0\n    i = 0\n    while i < n:\n        while i+1<n and a[i]==a[i+1]:\n            i += 1\n        if i+1<n and a[i] < a[i+1]:\n            while i+1<n and a[i]<=a[i+1]:\n                i += 1\n        elif i+1<n and a[i] > a[i+1]:\n            while i+1<n and a[i]>=a[i+1]:\n                i += 1\n        ans += 1\n        i += 1\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14148": {"id": 14148, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nup = dn = False\nans = 1\np = A[0]\nfor a in A:\n    if p < a:\n        up = True\n    elif p > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    p = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14149": {"id": 14149, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = dn = False\nans = 1\np = A[0]\nfor a in A:\n    if p < a:\n        up = True\n    elif p > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    p = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14150": {"id": 14150, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup = dn = False\nans = 1\np = A[0]\nfor a in A:\n    if p < a:\n        up = True\n    elif p > a:\n        dn = True\n    if up and dn:\n        ans += 1\n        up = dn = False\n    p = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14151": {"id": 14151, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nflg = -1\nfor i in range(1, n):\n    if a[i-1] == a[i]:\n        continue\n    elif a[i-1] < a[i]:\n        if flg == 1 or flg == -1:\n            flg = 1\n            continue\n        else:\n            ans += 1\n            flg = -1\n    else:\n        if flg == 0 or flg == -1:\n            flg = 0\n            continue\n        else:\n            ans += 1\n            flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "14152": {"id": 14152, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nflg = -1\nfor i in range(1, n):\n    if a[i-1] == a[i]:\n        continue\n    elif a[i-1] < a[i]:\n        if flg == 1 or flg == -1:\n            flg = 1\n            continue\n        else:\n            ans += 1\n            flg = -1\n    else:\n        if flg == 0 or flg == -1:\n            flg = 0\n            continue\n        else:\n            ans += 1\n            flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", "!", ">", ">", ">"]}, "14153": {"id": 14153, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nflg = -1\nfor i in range(1, n):\n    if a[i-1] == a[i]:\n        continue\n    elif a[i-1] < a[i]:\n        if flg == 1 or flg == -1:\n            flg = 1\n            continue\n        else:\n            ans += 1\n            flg = -1\n    else:\n        if flg == 0 or flg == -1:\n            flg = 0\n            continue\n        else:\n            ans += 1\n            flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">"]}, "14154": {"id": 14154, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nli = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n       li.append('+')\n    elif A[i+1] - A[i] < 0:\n        li.append('-')\n    else:\n        pass\nans = 1\np = 0\nm = 0\nfor i in li:\n    if i == '+':\n        p = 1\n    elif i == '-':\n        m = 1\n    if p == 1 & m == 1:\n        ans += 1\n        p = 0\n        m = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14155": {"id": 14155, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nli = []\nfor i in range(N-1):\n    if A[i+1] - A[i] > 0:\n       li.append('+')\n    elif A[i+1] - A[i] < 0:\n        li.append('-')\n    else:\n        pass\nans = 1\np = 0\nm = 0\nfor i in li:\n    if i == '+':\n        p = 1\n    elif i == '-':\n        m = 1\n    if p == 1 & m == 1:\n        ans += 1\n        p = 0\n        m = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14156": {"id": 14156, "code": "def main():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    ans = 1\n    flg = 0\n    cursol = 0\n    for i in a:\n        if cursol == 0:\n            cursol = i\n            continue\n        if flg == 0:\n            if i > cursol:\n                flg = 1\n                cursol = i\n            elif i < cursol:\n                flg = -1\n                cursol = i\n        elif flg == 1:\n            if i >= cursol:\n                cursol = i\n            elif i < cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n        else:\n            if i <= cursol:\n                cursol = i\n            elif i > cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "14157": {"id": 14157, "code": "def main():\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 1\n    flg = 0\n    cursol = 0\n    for i in a:\n        if cursol == 0:\n            cursol = i\n            continue\n        if flg == 0:\n            if i > cursol:\n                flg = 1\n                cursol = i\n            elif i < cursol:\n                flg = -1\n                cursol = i\n        elif flg == 1:\n            if i >= cursol:\n                cursol = i\n            elif i < cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n        else:\n            if i <= cursol:\n                cursol = i\n            elif i > cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">"]}, "14158": {"id": 14158, "code": "def main():\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 1\n    flg = 0\n    cursol = 0\n    for i in a:\n        if cursol == 0:\n            cursol = i\n            continue\n        if flg == 0:\n            if i > cursol:\n                flg = 1\n                cursol = i\n            elif i < cursol:\n                flg = -1\n                cursol = i\n        elif flg == 1:\n            if i >= cursol:\n                cursol = i\n            elif i < cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n        else:\n            if i <= cursol:\n                cursol = i\n            elif i > cursol:\n                cursol = i\n                flg = 0\n                ans += 1\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14159": {"id": 14159, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\ni = 0\nwhile n > i:\n    ans += 1\n    while n > i + 1 and a[i] == a[i+1]:\n        i += 1\n    if n == i + 1:\n        break\n    if a[i] < a[i+1]:\n        while n > i + 1 and a[i] <= a[i+1]:\n            i += 1\n    else:\n        while n > i + 1 and a[i] >= a[i+1]:\n            i += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14160": {"id": 14160, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\ni = 0\nwhile n > i:\n    ans += 1\n    while n > i + 1 and a[i] == a[i+1]:\n        i += 1\n    if n == i + 1:\n        break\n    if a[i] < a[i+1]:\n        while n > i + 1 and a[i] <= a[i+1]:\n            i += 1\n    else:\n        while n > i + 1 and a[i] >= a[i+1]:\n            i += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14161": {"id": 14161, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\ni = 0\nwhile n > i:\n    ans += 1\n    while n > i + 1 and a[i] == a[i+1]:\n        i += 1\n    if n == i + 1:\n        break\n    if a[i] < a[i+1]:\n        while n > i + 1 and a[i] <= a[i+1]:\n            i += 1\n    else:\n        while n > i + 1 and a[i] >= a[i+1]:\n            i += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14162": {"id": 14162, "code": "def answer(arr):\n    n = len(arr)\n    count = 0\n    INC = 'INCREASING'\n    DEC = 'DECREASING'\n    STATE = None\n    if n == 1 or n == 2:\n        return 1\n    for i in range(n-1):\n        diff = arr[i+1] - arr[i]\n        if diff == 0:\n            continue\n        if STATE is None:\n            if diff > 0:\n                STATE = INC\n            if diff < 0:\n                STATE = DEC\n            count += 1\n        elif STATE is INC:\n            if diff < 0:\n                STATE = None\n        elif STATE is DEC:\n            if diff > 0:\n                STATE = None\n        if STATE is None and i == n-2:\n            count += 1\n    return count\nn = 6\narr = [1, 2, 3, 2, 2, 1]\nprint(answer(arr))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", ">"]}, "14163": {"id": 14163, "code": "def answer(arr):\n    n = len(arr)\n    count = 0\n    INC = 'INCREASING'\n    DEC = 'DECREASING'\n    STATE = None\n    if n == 1 or n == 2:\n        return 1\n    for i in range(n-1):\n        diff = arr[i+1] - arr[i]\n        if diff == 0:\n            continue\n        if STATE is None:\n            if diff > 0:\n                STATE = INC\n            if diff < 0:\n                STATE = DEC\n            count += 1\n        elif STATE is INC:\n            if diff < 0:\n                STATE = None\n        elif STATE is DEC:\n            if diff > 0:\n                STATE = None\n        if STATE is None and i == n-2:\n            count += 1\n    return count\nn = 7\narr = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprint(answer(arr))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14164": {"id": 14164, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\ntmp = 0\nfor i in range(1, n):\n    if (A[i] - A[i-1]) * tmp < 0:\n        ans += 1\n        tmp = 0\n    elif A[i] - A[i-1] != 0:\n        tmp = A[i] - A[i-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14165": {"id": 14165, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ntmp = 0\nfor i in range(1, n):\n    if (A[i] - A[i-1]) * tmp < 0:\n        ans += 1\n        tmp = 0\n    elif A[i] - A[i-1] != 0:\n        tmp = A[i] - A[i-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14166": {"id": 14166, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ntmp = 0\nfor i in range(1, n):\n    if (A[i] - A[i-1]) * tmp < 0:\n        ans += 1\n        tmp = 0\n    elif A[i] - A[i-1] != 0:\n        tmp = A[i] - A[i-1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14167": {"id": 14167, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nflag=0\nanswer=1\nif N==1:\n    print(1)\nelse:\n    if A[0] < A[1]:\n        flag = 1\n    elif A[0]>A[1]:\n        flag = -1\n    for n in range(N - 1):\n        if flag == 1:\n            if A[n] <= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        elif flag == -1:\n            if A[n] >= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        else:\n            if A[n] == A[n + 1]:\n                pass\n            elif A[n] < A[n + 1]:\n                flag = 1\n            else:\n                flag = -1\n    print(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">"]}, "14168": {"id": 14168, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=0\nanswer=1\nif N==1:\n    print(1)\nelse:\n    if A[0] < A[1]:\n        flag = 1\n    elif A[0]>A[1]:\n        flag = -1\n    for n in range(N - 1):\n        if flag == 1:\n            if A[n] <= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        elif flag == -1:\n            if A[n] >= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        else:\n            if A[n] == A[n + 1]:\n                pass\n            elif A[n] < A[n + 1]:\n                flag = 1\n            else:\n                flag = -1\n    print(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", "!", ">", ">", "!", "!", ">"]}, "14169": {"id": 14169, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=0\nanswer=1\nif N==1:\n    print(1)\nelse:\n    if A[0] < A[1]:\n        flag = 1\n    elif A[0]>A[1]:\n        flag = -1\n    for n in range(N - 1):\n        if flag == 1:\n            if A[n] <= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        elif flag == -1:\n            if A[n] >= A[n + 1]:\n                pass\n            else:\n                flag = 0\n                answer += 1\n        else:\n            if A[n] == A[n + 1]:\n                pass\n            elif A[n] < A[n + 1]:\n                flag = 1\n            else:\n                flag = -1\n    print(answer)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", "!", ">", ">", "!", ">", ">"]}, "14170": {"id": 14170, "code": "import collections\nimport itertools as it\nimport math\nn = 6\na = [1, 2, 3, 2, 2, 1]\nif n == 1:\n    print(1)\nelse:\n    ans = 1\n    state = lambda n1, n2: 0 if n1 == n2 else (1 if n2 > n1 else -1)\n    diff = [state(a1, a2) for a1, a2 in zip(a[:-1], a[1:]) if state(a1, a2) != 0]\n    p = 1\n    while p < len(diff):\n        if abs(diff[p] - diff[p-1]) == 2:\n            ans += 1\n            p += 1\n        p += 1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14171": {"id": 14171, "code": "import collections\nimport itertools as it\nimport math\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n == 1:\n    print(1)\nelse:\n    ans = 1\n    state = lambda n1, n2: 0 if n1 == n2 else (1 if n2 > n1 else -1)\n    diff = [state(a1, a2) for a1, a2 in zip(a[:-1], a[1:]) if state(a1, a2) != 0]\n    p = 1\n    while p < len(diff):\n        if abs(diff[p] - diff[p-1]) == 2:\n            ans += 1\n            p += 1\n        p += 1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14172": {"id": 14172, "code": "import collections\nimport itertools as it\nimport math\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n == 1:\n    print(1)\nelse:\n    ans = 1\n    state = lambda n1, n2: 0 if n1 == n2 else (1 if n2 > n1 else -1)\n    diff = [state(a1, a2) for a1, a2 in zip(a[:-1], a[1:]) if state(a1, a2) != 0]\n    p = 1\n    while p < len(diff):\n        if abs(diff[p] - diff[p-1]) == 2:\n            ans += 1\n            p += 1\n        p += 1\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14173": {"id": 14173, "code": "def sign(x):\n    return (x > 0) - (x < 0)\ndef main():\n    _ = int(\"6\")\n    a = map(int, \"1 2 3 2 2 1\".split())\n    ans = []\n    arr = []\n    state = 0\n    for an in a:\n        if len(arr) < 2:\n            arr.append(an)\n        else:\n            state += (arr[-1] - arr[-2])\n            if state == 0:\n                arr.append(an)\n            else:\n                current = an - arr[-1]\n                if current == 0 or sign(state) == sign(current):\n                    arr.append(an)\n                else:\n                    ans.append(arr)\n                    arr = [an]\n                    state = 0\n    ans.append(arr)\n    print(len(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14174": {"id": 14174, "code": "def sign(x):\n    return (x > 0) - (x < 0)\ndef main():\n    _ = int(\"9\")\n    a = map(int, \"1 2 1 2 1 2 1 2 1\".split())\n    ans = []\n    arr = []\n    state = 0\n    for an in a:\n        if len(arr) < 2:\n            arr.append(an)\n        else:\n            state += (arr[-1] - arr[-2])\n            if state == 0:\n                arr.append(an)\n            else:\n                current = an - arr[-1]\n                if current == 0 or sign(state) == sign(current):\n                    arr.append(an)\n                else:\n                    ans.append(arr)\n                    arr = [an]\n                    state = 0\n    ans.append(arr)\n    print(len(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14175": {"id": 14175, "code": "def sign(x):\n    return (x > 0) - (x < 0)\ndef main():\n    _ = int(\"7\")\n    a = map(int, \"1 2 3 2 1 999999999 1000000000\".split())\n    ans = []\n    arr = []\n    state = 0\n    for an in a:\n        if len(arr) < 2:\n            arr.append(an)\n        else:\n            state += (arr[-1] - arr[-2])\n            if state == 0:\n                arr.append(an)\n            else:\n                current = an - arr[-1]\n                if current == 0 or sign(state) == sign(current):\n                    arr.append(an)\n                else:\n                    ans.append(arr)\n                    arr = [an]\n                    state = 0\n    ans.append(arr)\n    print(len(ans))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14176": {"id": 14176, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nis_up=False\nis_even=True\npre_a=a[0]\ncnt=1\nfor aa in a:\n  if is_even and pre_a != aa:\n    is_even=False\n    is_up=pre_a < aa\n  if not is_even:\n    if (is_up and pre_a > aa) or (not is_up and pre_a < aa):\n      is_even=True\n      cnt+=1\n  pre_a=aa\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14177": {"id": 14177, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nis_up=False\nis_even=True\npre_a=a[0]\ncnt=1\nfor aa in a:\n  if is_even and pre_a != aa:\n    is_even=False\n    is_up=pre_a < aa\n  if not is_even:\n    if (is_up and pre_a > aa) or (not is_up and pre_a < aa):\n      is_even=True\n      cnt+=1\n  pre_a=aa\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14178": {"id": 14178, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nis_up=False\nis_even=True\npre_a=a[0]\ncnt=1\nfor aa in a:\n  if is_even and pre_a != aa:\n    is_even=False\n    is_up=pre_a < aa\n  if not is_even:\n    if (is_up and pre_a > aa) or (not is_up and pre_a < aa):\n      is_even=True\n      cnt+=1\n  pre_a=aa\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14179": {"id": 14179, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nc=1\ng=0\nfor i in range(n-1):\n  if (g==1 and a[i+1]<a[i]) or (g==-1 and a[i+1]>a[i]) :\n    c+=1\n    g=0\n  elif g==0:\n    if a[i+1]>a[i]:\n      g=1\n    elif a[i+1]<a[i]:\n      g=-1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14180": {"id": 14180, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc=1\ng=0\nfor i in range(n-1):\n  if (g==1 and a[i+1]<a[i]) or (g==-1 and a[i+1]>a[i]) :\n    c+=1\n    g=0\n  elif g==0:\n    if a[i+1]>a[i]:\n      g=1\n    elif a[i+1]<a[i]:\n      g=-1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14181": {"id": 14181, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc=1\ng=0\nfor i in range(n-1):\n  if (g==1 and a[i+1]<a[i]) or (g==-1 and a[i+1]>a[i]) :\n    c+=1\n    g=0\n  elif g==0:\n    if a[i+1]>a[i]:\n      g=1\n    elif a[i+1]<a[i]:\n      g=-1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14182": {"id": 14182, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nF=0\nK=1\nb=A[0]\nfor a in A:\n    if F==0:\n        if b<a:\n            F=1\n            b=a\n        elif b>a:\n            F=-1\n            b=a\n    elif F==1 and b>a:\n        K+=1\n        F=0\n    elif F==-1 and b<a:\n        K+=1\n        F=0\n    b=a\nprint(K)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14183": {"id": 14183, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nF=0\nK=1\nb=A[0]\nfor a in A:\n    if F==0:\n        if b<a:\n            F=1\n            b=a\n        elif b>a:\n            F=-1\n            b=a\n    elif F==1 and b>a:\n        K+=1\n        F=0\n    elif F==-1 and b<a:\n        K+=1\n        F=0\n    b=a\nprint(K)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14184": {"id": 14184, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nF=0\nK=1\nb=A[0]\nfor a in A:\n    if F==0:\n        if b<a:\n            F=1\n            b=a\n        elif b>a:\n            F=-1\n            b=a\n    elif F==1 and b>a:\n        K+=1\n        F=0\n    elif F==-1 and b<a:\n        K+=1\n        F=0\n    b=a\nprint(K)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14185": {"id": 14185, "code": "_ = \"6\"\nA = map(int, \"1 2 3 2 2 1\".split())\nprev = next(A)\nup = None\ncount = 1\nfor i in A:\n    if prev < i:\n        if up is None:\n            up = True\n        elif not up:\n            count += 1\n            up = None\n    elif prev > i:\n        if up is None:\n            up = False\n        elif up:\n            count += 1\n            up = None\n    prev = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14186": {"id": 14186, "code": "_ = \"9\"\nA = map(int, \"1 2 1 2 1 2 1 2 1\".split())\nprev = next(A)\nup = None\ncount = 1\nfor i in A:\n    if prev < i:\n        if up is None:\n            up = True\n        elif not up:\n            count += 1\n            up = None\n    elif prev > i:\n        if up is None:\n            up = False\n        elif up:\n            count += 1\n            up = None\n    prev = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14187": {"id": 14187, "code": "_ = \"7\"\nA = map(int, \"1 2 3 2 1 999999999 1000000000\".split())\nprev = next(A)\nup = None\ncount = 1\nfor i in A:\n    if prev < i:\n        if up is None:\n            up = True\n        elif not up:\n            count += 1\n            up = None\n    elif prev > i:\n        if up is None:\n            up = False\n        elif up:\n            count += 1\n            up = None\n    prev = i\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14188": {"id": 14188, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(n - 1):\n    if flag == 0:\n        if a[i + 1] - a[i] > 0:\n            flag = 1\n        elif a[i + 1] - a[i] < 0:\n            flag = -1\n    elif flag == 1 and a[i + 1] - a[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a[i + 1] - a[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14189": {"id": 14189, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nflag = 0\nfor i in range(n - 1):\n    if flag == 0:\n        if a[i + 1] - a[i] > 0:\n            flag = 1\n        elif a[i + 1] - a[i] < 0:\n            flag = -1\n    elif flag == 1 and a[i + 1] - a[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a[i + 1] - a[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "14190": {"id": 14190, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nflag = 0\nfor i in range(n - 1):\n    if flag == 0:\n        if a[i + 1] - a[i] > 0:\n            flag = 1\n        elif a[i + 1] - a[i] < 0:\n            flag = -1\n    elif flag == 1 and a[i + 1] - a[i] < 0:\n        cnt += 1\n        flag = 0\n    elif flag == -1 and a[i + 1] - a[i] > 0:\n        cnt += 1\n        flag = 0\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14191": {"id": 14191, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nL = [A[0]]\nfor i in range(1, N):\n  if A[i] != A[i - 1]:\n    L.append(A[i])\nN = len(L)\nif N == 1:\n  print(1)\n  exit()\nf = L[1] > L[0]\nans = 1\ni = 2\nwhile i < N:\n  if (L[i] > L[i - 1]) != f:\n    ans += 1\n    if i == N - 1:\n      break\n    i += 1\n    f = L[i] > L[i - 1]\n  i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14192": {"id": 14192, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nL = [A[0]]\nfor i in range(1, N):\n  if A[i] != A[i - 1]:\n    L.append(A[i])\nN = len(L)\nif N == 1:\n  print(1)\n  exit()\nf = L[1] > L[0]\nans = 1\ni = 2\nwhile i < N:\n  if (L[i] > L[i - 1]) != f:\n    ans += 1\n    if i == N - 1:\n      break\n    i += 1\n    f = L[i] > L[i - 1]\n  i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14193": {"id": 14193, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nL = [A[0]]\nfor i in range(1, N):\n  if A[i] != A[i - 1]:\n    L.append(A[i])\nN = len(L)\nif N == 1:\n  print(1)\n  exit()\nf = L[1] > L[0]\nans = 1\ni = 2\nwhile i < N:\n  if (L[i] > L[i - 1]) != f:\n    ans += 1\n    if i == N - 1:\n      break\n    i += 1\n    f = L[i] > L[i - 1]\n  i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14194": {"id": 14194, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\n    exit()\ni = 0\nB = []\nb = [A[0]]\nzouka = 0\nf = True\nwhile i < N-1:\n    if A[i] == A[i+1]:\n        b.append(A[i])\n        i += 1\n        continue\n    if zouka == 0:\n        if A[i] < A[i+1]:\n            zouka = 1\n        else:\n            zouka = -1\n    if A[i] < A[i+1]: \n        if zouka == 1:\n            b.append(A[i+1])\n        else:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n    else: \n        if zouka == 1:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n        else:\n            b.append(A[i+1])\n    i += 1\nB.append(b)\nprint(len(B))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14195": {"id": 14195, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\n    exit()\ni = 0\nB = []\nb = [A[0]]\nzouka = 0\nf = True\nwhile i < N-1:\n    if A[i] == A[i+1]:\n        b.append(A[i])\n        i += 1\n        continue\n    if zouka == 0:\n        if A[i] < A[i+1]:\n            zouka = 1\n        else:\n            zouka = -1\n    if A[i] < A[i+1]: \n        if zouka == 1:\n            b.append(A[i+1])\n        else:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n    else: \n        if zouka == 1:\n            B.append(b)\n            b = [A[i+1]]\n            zouka = 0\n        else:\n            b.append(A[i+1])\n    i += 1\nB.append(b)\nprint(len(B))", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14196": {"id": 14196, "code": "from collections import deque\nn = 6\na = [1, 2, 3, 2, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)>=2:\n    if not (v >= tmp[-1] >= tmp[0] or v <= tmp[-1] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nprint(cnt+1 if tmp else cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14197": {"id": 14197, "code": "from collections import deque\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)>=2:\n    if not (v >= tmp[-1] >= tmp[0] or v <= tmp[-1] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nprint(cnt+1 if tmp else cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14198": {"id": 14198, "code": "from collections import deque\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = deque(a)\ntmp = []\ncnt = 0\nwhile d:\n  v = d.popleft()\n  if len(tmp)>=2:\n    if not (v >= tmp[-1] >= tmp[0] or v <= tmp[-1] <= tmp[0]):\n      tmp = []\n      cnt += 1\n  tmp.append(v)\nprint(cnt+1 if tmp else cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14199": {"id": 14199, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans=1\nx=y=0\nc=A[0]\nfor i in range(1,N):\n    if c < A[i]:\n        x=1\n    elif c>A[i]:\n        y=1\n    if x==1 and y==1:\n        ans+=1\n        x=y=0\n    c=A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14200": {"id": 14200, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nx=y=0\nc=A[0]\nfor i in range(1,N):\n    if c < A[i]:\n        x=1\n    elif c>A[i]:\n        y=1\n    if x==1 and y==1:\n        ans+=1\n        x=y=0\n    c=A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14201": {"id": 14201, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nx=y=0\nc=A[0]\nfor i in range(1,N):\n    if c < A[i]:\n        x=1\n    elif c>A[i]:\n        y=1\n    if x==1 and y==1:\n        ans+=1\n        x=y=0\n    c=A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14202": {"id": 14202, "code": "__DEUBG__ = 0\nimport math\nimport sys\nnum = 6\nseq = [1, 2, 3, 2, 2, 1]\nprev = None\ntmp = []\nincrease = None\ncount = 0\ndef dump(x):\n    from pprint import pprint\n    pprint(x)\nfor x in seq:\n    if __DEUBG__:\n        print(x)\n        print(tmp)\n    if prev is None:\n        tmp = [x]\n    elif increase is True:\n        if x >= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == tmp[-1]:\n            pass\n        elif x > tmp[-1]:\n            increase = True\n        else:\n            increase = False\n        tmp.append(x)\n    prev = x\nif __DEUBG__:\n    dump(tmp)\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "14203": {"id": 14203, "code": "__DEUBG__ = 0\nimport math\nimport sys\nnum = 7\nseq = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = None\ntmp = []\nincrease = None\ncount = 0\ndef dump(x):\n    from pprint import pprint\n    pprint(x)\nfor x in seq:\n    if __DEUBG__:\n        print(x)\n        print(tmp)\n    if prev is None:\n        tmp = [x]\n    elif increase is True:\n        if x >= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= tmp[-1]:\n            tmp.append(x)\n        else:\n            if __DEUBG__:\n                dump(tmp)\n            tmp = [x]\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == tmp[-1]:\n            pass\n        elif x > tmp[-1]:\n            increase = True\n        else:\n            increase = False\n        tmp.append(x)\n    prev = x\nif __DEUBG__:\n    dump(tmp)\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "14204": {"id": 14204, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nc=1\nd=0\nfor i in range(n-1):\n  e=d+A[i+1]-A[i]\n  if (d<e and d<0) or (d>e and d>0):\n    c+=1\n    e=0\n  d=e\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14205": {"id": 14205, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc=1\nd=0\nfor i in range(n-1):\n  e=d+A[i+1]-A[i]\n  if (d<e and d<0) or (d>e and d>0):\n    c+=1\n    e=0\n  d=e\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14206": {"id": 14206, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc=1\nd=0\nfor i in range(n-1):\n  e=d+A[i+1]-A[i]\n  if (d<e and d<0) or (d>e and d>0):\n    c+=1\n    e=0\n  d=e\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14207": {"id": 14207, "code": "import sys\ninput = sys.stdin.readline\ndef read():\n    N = 6\n    A = [1, 2, 3, 2, 2, 1]\n    return N, A\ndef solve(N, A):\n    B = [A[0]]\n    prev = A[0]\n    for a in A:\n        if prev != a:\n            B.append(a)\n            prev = a\n    count = 1\n    up = False\n    down = False\n    for i in range(1, len(B)):\n        if not up and not down:\n            if B[i-1] < B[i]:\n                up = True\n            else:\n                down = True\n        elif up and B[i-1] > B[i]:\n            up = False\n            count += 1\n        elif down and B[i-1] < B[i]:\n            down = False\n            count += 1\n    return count\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14208": {"id": 14208, "code": "import sys\ninput = sys.stdin.readline\ndef read():\n    N = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    return N, A\ndef solve(N, A):\n    B = [A[0]]\n    prev = A[0]\n    for a in A:\n        if prev != a:\n            B.append(a)\n            prev = a\n    count = 1\n    up = False\n    down = False\n    for i in range(1, len(B)):\n        if not up and not down:\n            if B[i-1] < B[i]:\n                up = True\n            else:\n                down = True\n        elif up and B[i-1] > B[i]:\n            up = False\n            count += 1\n        elif down and B[i-1] < B[i]:\n            down = False\n            count += 1\n    return count\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14209": {"id": 14209, "code": "if __name__ == '__main__':\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    ans = 1\n    flag = \"Init\"\n    for i in range(1, n):\n        if flag == \"Init\":\n            if a[i - 1] == a[i]:\n                pass\n            elif a[i - 1] > a[i]:\n                flag = \"-\"\n            else:\n                flag = \"+\"\n        elif flag == \"-\":\n            if a[i - 1] < a[i]:\n                ans += 1\n                flag = \"Init\"\n        else:\n            if a[i - 1] > a[i]:\n                ans += 1\n                flag = \"Init\"\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14210": {"id": 14210, "code": "if __name__ == '__main__':\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 1\n    flag = \"Init\"\n    for i in range(1, n):\n        if flag == \"Init\":\n            if a[i - 1] == a[i]:\n                pass\n            elif a[i - 1] > a[i]:\n                flag = \"-\"\n            else:\n                flag = \"+\"\n        elif flag == \"-\":\n            if a[i - 1] < a[i]:\n                ans += 1\n                flag = \"Init\"\n        else:\n            if a[i - 1] > a[i]:\n                ans += 1\n                flag = \"Init\"\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14211": {"id": 14211, "code": "if __name__ == '__main__':\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 1\n    flag = \"Init\"\n    for i in range(1, n):\n        if flag == \"Init\":\n            if a[i - 1] == a[i]:\n                pass\n            elif a[i - 1] > a[i]:\n                flag = \"-\"\n            else:\n                flag = \"+\"\n        elif flag == \"-\":\n            if a[i - 1] < a[i]:\n                ans += 1\n                flag = \"Init\"\n        else:\n            if a[i - 1] > a[i]:\n                ans += 1\n                flag = \"Init\"\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14212": {"id": 14212, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nstatus = 0\nprev = a[0]\nfor i in a:\n    diff = i - prev\n    if diff == 0:\n        pass\n    elif diff > 0:\n        if status >= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    else:\n        if status <= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">", ">"]}, "14213": {"id": 14213, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nstatus = 0\nprev = a[0]\nfor i in a:\n    diff = i - prev\n    if diff == 0:\n        pass\n    elif diff > 0:\n        if status >= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    else:\n        if status <= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "14214": {"id": 14214, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nstatus = 0\nprev = a[0]\nfor i in a:\n    diff = i - prev\n    if diff == 0:\n        pass\n    elif diff > 0:\n        if status >= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    else:\n        if status <= 0:\n            status = diff\n        else:\n            ans += 1\n            status = 0\n    prev = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "14215": {"id": 14215, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n        cur = A[i]\n        continue\n    if(flag == 1 and A[i] < cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 1 and A[i] > cur):\n        cur = A[i]\n        continue\n    if(flag == 0 and A[i] > cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 0 and A[i] < cur):\n        cur = A[i]\n        continue\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14216": {"id": 14216, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n        cur = A[i]\n        continue\n    if(flag == 1 and A[i] < cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 1 and A[i] > cur):\n        cur = A[i]\n        continue\n    if(flag == 0 and A[i] > cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 0 and A[i] < cur):\n        cur = A[i]\n        continue\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14217": {"id": 14217, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif(N == 1):\n    print(1)\n    exit(0)\ncur = A[0]\nans = 1\nflag = -1\nfor i in range(1, N):\n    if(cur == A[i]): continue\n    if(flag == -1):\n        if(A[i] > cur): flag = 1\n        elif(A[i] < cur): flag = 0\n        cur = A[i]\n        continue\n    if(flag == 1 and A[i] < cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 1 and A[i] > cur):\n        cur = A[i]\n        continue\n    if(flag == 0 and A[i] > cur):\n        cur, flag = A[i], -1\n        ans += 1\n        continue\n    if(flag == 0 and A[i] < cur):\n        cur = A[i]\n        continue\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14218": {"id": 14218, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nzougen = 2\nans = 0\nfor i in range(1,n):\n    if i == n-1:\n        if zougen == 2:\n            ans += 1\n        elif zougen == 0:\n            if a[i]-a[i-1]<0:\n                ans += 2\n            else:\n                ans += 1\n        else:\n            if a[i]-a[i-1] > 0:\n                ans += 2\n            else:\n                ans += 1\n    elif zougen == 2:\n        if a[i]-a[i-1]>0:\n            zougen = 0\n        elif a[i]-a[i-1]<0:\n            zougen = 1\n        else:\n            zougen = 2\n    elif zougen == 0:\n        if a[i]-a[i-1]<0:\n            zougen = 2\n            ans += 1\n    elif zougen == 1:\n        if a[i]-a[i-1]>0:\n            zougen = 2\n            ans += 1\nif n == 1:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">"]}, "14219": {"id": 14219, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzougen = 2\nans = 0\nfor i in range(1,n):\n    if i == n-1:\n        if zougen == 2:\n            ans += 1\n        elif zougen == 0:\n            if a[i]-a[i-1]<0:\n                ans += 2\n            else:\n                ans += 1\n        else:\n            if a[i]-a[i-1] > 0:\n                ans += 2\n            else:\n                ans += 1\n    elif zougen == 2:\n        if a[i]-a[i-1]>0:\n            zougen = 0\n        elif a[i]-a[i-1]<0:\n            zougen = 1\n        else:\n            zougen = 2\n    elif zougen == 0:\n        if a[i]-a[i-1]<0:\n            zougen = 2\n            ans += 1\n    elif zougen == 1:\n        if a[i]-a[i-1]>0:\n            zougen = 2\n            ans += 1\nif n == 1:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", "!", ">"]}, "14220": {"id": 14220, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzougen = 2\nans = 0\nfor i in range(1,n):\n    if i == n-1:\n        if zougen == 2:\n            ans += 1\n        elif zougen == 0:\n            if a[i]-a[i-1]<0:\n                ans += 2\n            else:\n                ans += 1\n        else:\n            if a[i]-a[i-1] > 0:\n                ans += 2\n            else:\n                ans += 1\n    elif zougen == 2:\n        if a[i]-a[i-1]>0:\n            zougen = 0\n        elif a[i]-a[i-1]<0:\n            zougen = 1\n        else:\n            zougen = 2\n    elif zougen == 0:\n        if a[i]-a[i-1]<0:\n            zougen = 2\n            ans += 1\n    elif zougen == 1:\n        if a[i]-a[i-1]>0:\n            zougen = 2\n            ans += 1\nif n == 1:\n    ans = 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "14221": {"id": 14221, "code": "n = 6\nA = [1, 2, 3, 2, 2, 1]\nflag = None\nup = False\ndown = False\nans = 1\nbase = A[0]\nfor i in range(1, n):\n    if base < A[i]:\n        up = True\n        base = A[i]\n    elif base > A[i]:\n        down = True\n    if (up == True) and (down == True):\n        up = False\n        down = False\n        ans += 1\n    base = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14222": {"id": 14222, "code": "n = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = None\nup = False\ndown = False\nans = 1\nbase = A[0]\nfor i in range(1, n):\n    if base < A[i]:\n        up = True\n        base = A[i]\n    elif base > A[i]:\n        down = True\n    if (up == True) and (down == True):\n        up = False\n        down = False\n        ans += 1\n    base = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14223": {"id": 14223, "code": "n = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = None\nup = False\ndown = False\nans = 1\nbase = A[0]\nfor i in range(1, n):\n    if base < A[i]:\n        up = True\n        base = A[i]\n    elif base > A[i]:\n        down = True\n    if (up == True) and (down == True):\n        up = False\n        down = False\n        ans += 1\n    base = A[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14224": {"id": 14224, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nstate = -1\nfor i in range(1, N):\n    if state == -1:\n        if A[i] < A[i-1]:\n            state = 0\n        elif A[i] > A[i-1]:\n            state = 1\n    elif (state == 0 and A[i] > A[i-1]) or (state == 1 and A[i] < A[i-1]):\n        ans += 1\n        state = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14225": {"id": 14225, "code": "import sys\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nstate = -1\nfor i in range(1, N):\n    if state == -1:\n        if A[i] < A[i-1]:\n            state = 0\n        elif A[i] > A[i-1]:\n            state = 1\n    elif (state == 0 and A[i] > A[i-1]) or (state == 1 and A[i] < A[i-1]):\n        ans += 1\n        state = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14226": {"id": 14226, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nstate = -1\nfor i in range(1, N):\n    if state == -1:\n        if A[i] < A[i-1]:\n            state = 0\n        elif A[i] > A[i-1]:\n            state = 1\n    elif (state == 0 and A[i] > A[i-1]) or (state == 1 and A[i] < A[i-1]):\n        ans += 1\n        state = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14227": {"id": 14227, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\nuf,df = True,True\nx = a[0]\nfor ai in a:\n    if x > ai:\n        uf = False\n    if x < ai:\n        df = False\n    if (uf or df) is False:\n        ans += 1\n        uf,df, = True,True\n    x = ai\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14228": {"id": 14228, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nuf,df = True,True\nx = a[0]\nfor ai in a:\n    if x > ai:\n        uf = False\n    if x < ai:\n        df = False\n    if (uf or df) is False:\n        ans += 1\n        uf,df, = True,True\n    x = ai\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14229": {"id": 14229, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nuf,df = True,True\nx = a[0]\nfor ai in a:\n    if x > ai:\n        uf = False\n    if x < ai:\n        df = False\n    if (uf or df) is False:\n        ans += 1\n        uf,df, = True,True\n    x = ai\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14230": {"id": 14230, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\na.append(a[n - 1])\nans = 1\ns = 0\ni = 1\nwhile i < n:\n    if not(a[s] <= a[i] <= a[i + 1]) and not(a[s] >= a[i] >= a[i + 1]):\n        s = i + 1\n        ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14231": {"id": 14231, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\na.append(a[n - 1])\nans = 1\ns = 0\ni = 1\nwhile i < n:\n    if not(a[s] <= a[i] <= a[i + 1]) and not(a[s] >= a[i] >= a[i + 1]):\n        s = i + 1\n        ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14232": {"id": 14232, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\na.append(a[n - 1])\nans = 1\ns = 0\ni = 1\nwhile i < n:\n    if not(a[s] <= a[i] <= a[i + 1]) and not(a[s] >= a[i] >= a[i + 1]):\n        s = i + 1\n        ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14233": {"id": 14233, "code": "n = 6\nnum_list = [1, 2, 3, 2, 2, 1]\nif len(num_list)==1:\n  print(1)\nelse:\n  res = 1\n  flag = None\n  pre = num_list[0]\n  for i in num_list[1:]:\n    if pre > i and not flag:\n      flag = 'down'\n    elif pre < i and not flag:\n      flag = 'up'\n    elif (pre > i and flag=='up') or (pre < i and flag=='down'):\n      res += 1\n      flag = None\n    pre = i\n  print(res)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14234": {"id": 14234, "code": "n = 9\nnum_list = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif len(num_list)==1:\n  print(1)\nelse:\n  res = 1\n  flag = None\n  pre = num_list[0]\n  for i in num_list[1:]:\n    if pre > i and not flag:\n      flag = 'down'\n    elif pre < i and not flag:\n      flag = 'up'\n    elif (pre > i and flag=='up') or (pre < i and flag=='down'):\n      res += 1\n      flag = None\n    pre = i\n  print(res)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14235": {"id": 14235, "code": "n = 7\nnum_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif len(num_list)==1:\n  print(1)\nelse:\n  res = 1\n  flag = None\n  pre = num_list[0]\n  for i in num_list[1:]:\n    if pre > i and not flag:\n      flag = 'down'\n    elif pre < i and not flag:\n      flag = 'up'\n    elif (pre > i and flag=='up') or (pre < i and flag=='down'):\n      res += 1\n      flag = None\n    pre = i\n  print(res)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14236": {"id": 14236, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\npumi=0\nff=0\ncut=1\nfor i in range(0,N-1):\n    if pumi==0:\n        ff=0\n    elif pumi==-1:\n        ff=-1\n    elif pumi==1:\n        ff=1\n    if A[i+1]>A[i]:\n        pumi=1\n    elif A[i+1]<A[i]:\n        pumi=-1\n    if pumi==-1 and ff==1:\n        cut+=1\n        pumi=0\n    elif pumi==1 and ff==-1:\n        cut+=1\n        pumi=0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14237": {"id": 14237, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\npumi=0\nff=0\ncut=1\nfor i in range(0,N-1):\n    if pumi==0:\n        ff=0\n    elif pumi==-1:\n        ff=-1\n    elif pumi==1:\n        ff=1\n    if A[i+1]>A[i]:\n        pumi=1\n    elif A[i+1]<A[i]:\n        pumi=-1\n    if pumi==-1 and ff==1:\n        cut+=1\n        pumi=0\n    elif pumi==1 and ff==-1:\n        cut+=1\n        pumi=0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14238": {"id": 14238, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\npumi=0\nff=0\ncut=1\nfor i in range(0,N-1):\n    if pumi==0:\n        ff=0\n    elif pumi==-1:\n        ff=-1\n    elif pumi==1:\n        ff=1\n    if A[i+1]>A[i]:\n        pumi=1\n    elif A[i+1]<A[i]:\n        pumi=-1\n    if pumi==-1 and ff==1:\n        cut+=1\n        pumi=0\n    elif pumi==1 and ff==-1:\n        cut+=1\n        pumi=0\nprint(cut)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14239": {"id": 14239, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nf = 0\nfor i in range(1, n):\n    if a[i-1] < a[i]:\n        ff = 1\n    elif a[i-1] > a[i]:\n        ff = -1\n    else:\n        ff = 0\n    if f and ff and f != ff:\n        cnt += 1\n        f = 0\n    elif not f:\n        f = ff\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14240": {"id": 14240, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nf = 0\nfor i in range(1, n):\n    if a[i-1] < a[i]:\n        ff = 1\n    elif a[i-1] > a[i]:\n        ff = -1\n    else:\n        ff = 0\n    if f and ff and f != ff:\n        cnt += 1\n        f = 0\n    elif not f:\n        f = ff\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "14241": {"id": 14241, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nf = 0\nfor i in range(1, n):\n    if a[i-1] < a[i]:\n        ff = 1\n    elif a[i-1] > a[i]:\n        ff = -1\n    else:\n        ff = 0\n    if f and ff and f != ff:\n        cnt += 1\n        f = 0\n    elif not f:\n        f = ff\nprint(cnt + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "14242": {"id": 14242, "code": "def resolve():\n    N = 6\n    A_list = [1, 2, 3, 2, 2, 1]\n    if N >=2:\n        prev_num = A_list[0]\n        new_list = []\n        prev_direction = 0\n        cnt = 1\n        for item in A_list[1:]:\n            if item != prev_num:\n                if prev_direction == 1:\n                    if item - prev_num >= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                elif prev_direction == -1:\n                    if item - prev_num <= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                else:\n                    if item - prev_num > 0:\n                        prev_direction = 1\n                    elif item - prev_num < 0:\n                        prev_direction = -1\n            prev_num = item\n    else:\n        cnt = 1\n    print(cnt)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14243": {"id": 14243, "code": "def resolve():\n    N = 9\n    A_list = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    if N >=2:\n        prev_num = A_list[0]\n        new_list = []\n        prev_direction = 0\n        cnt = 1\n        for item in A_list[1:]:\n            if item != prev_num:\n                if prev_direction == 1:\n                    if item - prev_num >= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                elif prev_direction == -1:\n                    if item - prev_num <= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                else:\n                    if item - prev_num > 0:\n                        prev_direction = 1\n                    elif item - prev_num < 0:\n                        prev_direction = -1\n            prev_num = item\n    else:\n        cnt = 1\n    print(cnt)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">"]}, "14244": {"id": 14244, "code": "def resolve():\n    N = 7\n    A_list = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    if N >=2:\n        prev_num = A_list[0]\n        new_list = []\n        prev_direction = 0\n        cnt = 1\n        for item in A_list[1:]:\n            if item != prev_num:\n                if prev_direction == 1:\n                    if item - prev_num >= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                elif prev_direction == -1:\n                    if item - prev_num <= 0:\n                        pass\n                    else:\n                        cnt += 1\n                        prev_direction = 0\n                else:\n                    if item - prev_num > 0:\n                        prev_direction = 1\n                    elif item - prev_num < 0:\n                        prev_direction = -1\n            prev_num = item\n    else:\n        cnt = 1\n    print(cnt)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14245": {"id": 14245, "code": "N = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nflags = [False, False]\nfor i in range(N - 1):\n    da = a[i + 1] - a[i]\n    if da > 0:\n        flags[0] = True\n    elif da < 0:\n        flags[1] = True\n    if flags[0] == True and flags[1] == True:\n        ans += 1\n        flags = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14246": {"id": 14246, "code": "N = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nflags = [False, False]\nfor i in range(N - 1):\n    da = a[i + 1] - a[i]\n    if da > 0:\n        flags[0] = True\n    elif da < 0:\n        flags[1] = True\n    if flags[0] == True and flags[1] == True:\n        ans += 1\n        flags = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14247": {"id": 14247, "code": "N = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nflags = [False, False]\nfor i in range(N - 1):\n    da = a[i + 1] - a[i]\n    if da > 0:\n        flags[0] = True\n    elif da < 0:\n        flags[1] = True\n    if flags[0] == True and flags[1] == True:\n        ans += 1\n        flags = [False, False]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14248": {"id": 14248, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\np = 0\nres = 0\nwhile p < N:\n    while p + 1 < N and A[p] == A[p + 1]:\n        p += 1\n    if p + 1 < N and A[p] < A[p + 1]:\n        while p + 1 < N and A[p] <= A[p + 1]:\n            p += 1\n    elif p + 1 < N and A[p] > A[p + 1]:\n        while p + 1 < N and A[p] >= A[p + 1]:\n            p += 1\n    res += 1\n    p += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14249": {"id": 14249, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\np = 0\nres = 0\nwhile p < N:\n    while p + 1 < N and A[p] == A[p + 1]:\n        p += 1\n    if p + 1 < N and A[p] < A[p + 1]:\n        while p + 1 < N and A[p] <= A[p + 1]:\n            p += 1\n    elif p + 1 < N and A[p] > A[p + 1]:\n        while p + 1 < N and A[p] >= A[p + 1]:\n            p += 1\n    res += 1\n    p += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14250": {"id": 14250, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\np = 0\nres = 0\nwhile p < N:\n    while p + 1 < N and A[p] == A[p + 1]:\n        p += 1\n    if p + 1 < N and A[p] < A[p + 1]:\n        while p + 1 < N and A[p] <= A[p + 1]:\n            p += 1\n    elif p + 1 < N and A[p] > A[p + 1]:\n        while p + 1 < N and A[p] >= A[p + 1]:\n            p += 1\n    res += 1\n    p += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14251": {"id": 14251, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nbefore = a[0]\nok = \"\" \ncnt = 0\nfor i in range(1,n):\n  if ok == \"\":\n    if before < a[i]:\n      ok = True\n    elif before > a[i]:\n      ok = False\n  elif ok:\n    if before > a[i]:\n      cnt += 1\n      ok = \"\"\n  elif not ok:\n    if before < a[i]:\n      cnt += 1\n      ok = \"\"\n  before = a[i]\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14252": {"id": 14252, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nbefore = a[0]\nok = \"\" \ncnt = 0\nfor i in range(1,n):\n  if ok == \"\":\n    if before < a[i]:\n      ok = True\n    elif before > a[i]:\n      ok = False\n  elif ok:\n    if before > a[i]:\n      cnt += 1\n      ok = \"\"\n  elif not ok:\n    if before < a[i]:\n      cnt += 1\n      ok = \"\"\n  before = a[i]\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14253": {"id": 14253, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nbefore = a[0]\nok = \"\" \ncnt = 0\nfor i in range(1,n):\n  if ok == \"\":\n    if before < a[i]:\n      ok = True\n    elif before > a[i]:\n      ok = False\n  elif ok:\n    if before > a[i]:\n      cnt += 1\n      ok = \"\"\n  elif not ok:\n    if before < a[i]:\n      cnt += 1\n      ok = \"\"\n  before = a[i]\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14254": {"id": 14254, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni=0\na=1\nt=0\nwhile i<N-1:\n    if A[i]<A[i+1]:\n        if t==-1:\n            a+=1\n            t=0\n        elif not t:\n            t=1\n    elif A[i]>A[i+1]:\n        if t==1:\n            a+=1\n            t=0\n        elif not t:\n            t=-1\n    i+=1\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14255": {"id": 14255, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni=0\na=1\nt=0\nwhile i<N-1:\n    if A[i]<A[i+1]:\n        if t==-1:\n            a+=1\n            t=0\n        elif not t:\n            t=1\n    elif A[i]>A[i+1]:\n        if t==1:\n            a+=1\n            t=0\n        elif not t:\n            t=-1\n    i+=1\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14256": {"id": 14256, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni=0\na=1\nt=0\nwhile i<N-1:\n    if A[i]<A[i+1]:\n        if t==-1:\n            a+=1\n            t=0\n        elif not t:\n            t=1\n    elif A[i]>A[i+1]:\n        if t==1:\n            a+=1\n            t=0\n        elif not t:\n            t=-1\n    i+=1\nprint(a)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14257": {"id": 14257, "code": "p = -1\nxp = -1\nans = 1\nfor i in \"1 2 3 2 2 1\".split(\" \"):\n  i = \"1\"\n  if i == p: continue\n  if p != -1:\n    x = p < i\n    if xp != -1:\n      ans += x != xp\n    if xp != -1 and x != xp:\n      xp = -1\n    else:\n      xp = x\n  p = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14258": {"id": 14258, "code": "p = -1\nxp = -1\nans = 1\nfor i in \"1 2 1 2 1 2 1 2 1\".split(\" \"):\n  i = \"1\"\n  if i == p: continue\n  if p != -1:\n    x = p < i\n    if xp != -1:\n      ans += x != xp\n    if xp != -1 and x != xp:\n      xp = -1\n    else:\n      xp = x\n  p = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14259": {"id": 14259, "code": "p = -1\nxp = -1\nans = 1\nfor i in \"1 2 3 2 1 999999999 1000000000\".split(\" \"):\n  i = \"1\"\n  if i == p: continue\n  if p != -1:\n    x = p < i\n    if xp != -1:\n      ans += x != xp\n    if xp != -1 and x != xp:\n      xp = -1\n    else:\n      xp = x\n  p = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14260": {"id": 14260, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ndp = (1, 1)\nfor i in range(1, N):\n    if A[i] > A[i-1]:\n        dp = min(dp)+1, min(dp[0]+1, dp[1])\n    elif A[i] == A[i-1]:\n        pass\n    else:\n        dp = min(dp[0], dp[1]+1), min(dp)+1\nprint(min(dp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14261": {"id": 14261, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndp = (1, 1)\nfor i in range(1, N):\n    if A[i] > A[i-1]:\n        dp = min(dp)+1, min(dp[0]+1, dp[1])\n    elif A[i] == A[i-1]:\n        pass\n    else:\n        dp = min(dp[0], dp[1]+1), min(dp)+1\nprint(min(dp))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14262": {"id": 14262, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndp = (1, 1)\nfor i in range(1, N):\n    if A[i] > A[i-1]:\n        dp = min(dp)+1, min(dp[0]+1, dp[1])\n    elif A[i] == A[i-1]:\n        pass\n    else:\n        dp = min(dp[0], dp[1]+1), min(dp)+1\nprint(min(dp))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14263": {"id": 14263, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif n <= 2:\n    print(1)\n    exit()\nf = 0\ncnt = 0\nif a[0] < a[1]:\n    f = 1\nelif a[0] > a[1]:\n    f = 2\ntmp = a[1]\nfor i in range(2,n):\n    if tmp < a[i]:\n        if f == 2:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 1\n    elif tmp > a[i]:\n        if f == 1:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 2\n    tmp = a[i]\ncnt += 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14264": {"id": 14264, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n <= 2:\n    print(1)\n    exit()\nf = 0\ncnt = 0\nif a[0] < a[1]:\n    f = 1\nelif a[0] > a[1]:\n    f = 2\ntmp = a[1]\nfor i in range(2,n):\n    if tmp < a[i]:\n        if f == 2:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 1\n    elif tmp > a[i]:\n        if f == 1:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 2\n    tmp = a[i]\ncnt += 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14265": {"id": 14265, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n <= 2:\n    print(1)\n    exit()\nf = 0\ncnt = 0\nif a[0] < a[1]:\n    f = 1\nelif a[0] > a[1]:\n    f = 2\ntmp = a[1]\nfor i in range(2,n):\n    if tmp < a[i]:\n        if f == 2:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 1\n    elif tmp > a[i]:\n        if f == 1:\n            cnt += 1\n            f = 0\n        elif f == 0:\n            f = 2\n    tmp = a[i]\ncnt += 1\nprint(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14266": {"id": 14266, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nincrease = True\nequal = True\nstart = True\ncount = 1\nfor i, a in enumerate(A):\n    if i > 0:\n        if equal:\n            if a > A[i-1]:\n                increase = True\n                equal = False\n            elif a < A[i-1]:\n                increase = False\n                equal = False\n        else:\n            if increase:\n                if a < A[i-1]:\n                    count += 1\n                    equal = True\n            else:\n                if a > A[i-1]:\n                    count += 1\n                    equal = True\n                    start = True\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14267": {"id": 14267, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nincrease = True\nequal = True\nstart = True\ncount = 1\nfor i, a in enumerate(A):\n    if i > 0:\n        if equal:\n            if a > A[i-1]:\n                increase = True\n                equal = False\n            elif a < A[i-1]:\n                increase = False\n                equal = False\n        else:\n            if increase:\n                if a < A[i-1]:\n                    count += 1\n                    equal = True\n            else:\n                if a > A[i-1]:\n                    count += 1\n                    equal = True\n                    start = True\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14268": {"id": 14268, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nincrease = True\nequal = True\nstart = True\ncount = 1\nfor i, a in enumerate(A):\n    if i > 0:\n        if equal:\n            if a > A[i-1]:\n                increase = True\n                equal = False\n            elif a < A[i-1]:\n                increase = False\n                equal = False\n        else:\n            if increase:\n                if a < A[i-1]:\n                    count += 1\n                    equal = True\n            else:\n                if a > A[i-1]:\n                    count += 1\n                    equal = True\n                    start = True\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14269": {"id": 14269, "code": "num = 6\nseq = [1, 2, 3, 2, 2, 1]\nprev = None\nincrease = None\ncount = 0\nprev = seq[0]\nfor x in seq[1:]:\n    if increase is True:\n        if x >= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == prev:\n            pass\n        elif x > prev:\n            increase = True\n        else:\n            increase = False\n    prev = x\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14270": {"id": 14270, "code": "num = 9\nseq = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = None\nincrease = None\ncount = 0\nprev = seq[0]\nfor x in seq[1:]:\n    if increase is True:\n        if x >= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == prev:\n            pass\n        elif x > prev:\n            increase = True\n        else:\n            increase = False\n    prev = x\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">"]}, "14271": {"id": 14271, "code": "num = 7\nseq = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = None\nincrease = None\ncount = 0\nprev = seq[0]\nfor x in seq[1:]:\n    if increase is True:\n        if x >= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is False:\n        if x <= prev:\n            pass\n        else:\n            increase = None\n            count += 1\n    elif increase is None:\n        if x == prev:\n            pass\n        elif x > prev:\n            increase = True\n        else:\n            increase = False\n    prev = x\ncount += 1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">"]}, "14272": {"id": 14272, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\na = 0\nS = 0\nnum = 1\nfor i in range(1,N):\n    if A[i] - A[i - 1] == 0:\n        a = 0\n    elif A[i] - A[i - 1] > 0:\n        a = 1\n    else:\n        a = 2\n    if S == 0:\n        S = a\n    elif (S != a) and (a != 0):\n        num += 1\n        S = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14273": {"id": 14273, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\na = 0\nS = 0\nnum = 1\nfor i in range(1,N):\n    if A[i] - A[i - 1] == 0:\n        a = 0\n    elif A[i] - A[i - 1] > 0:\n        a = 1\n    else:\n        a = 2\n    if S == 0:\n        S = a\n    elif (S != a) and (a != 0):\n        num += 1\n        S = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14274": {"id": 14274, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\na = 0\nS = 0\nnum = 1\nfor i in range(1,N):\n    if A[i] - A[i - 1] == 0:\n        a = 0\n    elif A[i] - A[i - 1] > 0:\n        a = 1\n    else:\n        a = 2\n    if S == 0:\n        S = a\n    elif (S != a) and (a != 0):\n        num += 1\n        S = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14275": {"id": 14275, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif n<=2:\n    print(1)\n    exit(0)\nflg=0\ncnt=0\ntmp=[]\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        tmp.append(1)\n    elif a[i]==a[i-1]:\n        tmp.append(0)\n    else:\n        tmp.append(-1)\nflg=0\nswi=0\nfor j in range(len(tmp)):\n    if swi==1:\n        flg=tmp[j]\n        swi=0\n        continue\n    if flg==0:\n        flg=tmp[j]\n    elif flg==1:\n        if tmp[j]==-1:\n            cnt+=1\n            flg=-1\n            swi=1\n    elif flg==-1:\n        if tmp[j]==1:\n            cnt+=1\n            flg=1\n            swi=1\nprint(cnt+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14276": {"id": 14276, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n<=2:\n    print(1)\n    exit(0)\nflg=0\ncnt=0\ntmp=[]\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        tmp.append(1)\n    elif a[i]==a[i-1]:\n        tmp.append(0)\n    else:\n        tmp.append(-1)\nflg=0\nswi=0\nfor j in range(len(tmp)):\n    if swi==1:\n        flg=tmp[j]\n        swi=0\n        continue\n    if flg==0:\n        flg=tmp[j]\n    elif flg==1:\n        if tmp[j]==-1:\n            cnt+=1\n            flg=-1\n            swi=1\n    elif flg==-1:\n        if tmp[j]==1:\n            cnt+=1\n            flg=1\n            swi=1\nprint(cnt+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14277": {"id": 14277, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\ncheck = 0\nbefore = a[0]\nfor i in a[1:]:\n    if i == before:\n        continue\n    if before > i:\n        if check == 0:\n            check = 1\n        elif check == -1:\n            ans += 1\n            check = 0\n    else:\n        if check == 0:\n            check = -1\n        elif check == 1:\n            ans += 1\n            check = 0\n    before = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "14278": {"id": 14278, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncheck = 0\nbefore = a[0]\nfor i in a[1:]:\n    if i == before:\n        continue\n    if before > i:\n        if check == 0:\n            check = 1\n        elif check == -1:\n            ans += 1\n            check = 0\n    else:\n        if check == 0:\n            check = -1\n        elif check == 1:\n            ans += 1\n            check = 0\n    before = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", ">"]}, "14279": {"id": 14279, "code": "import sys\ninput = \"<function <lambda>>\"\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ncheck = 0\nbefore = a[0]\nfor i in a[1:]:\n    if i == before:\n        continue\n    if before > i:\n        if check == 0:\n            check = 1\n        elif check == -1:\n            ans += 1\n            check = 0\n    else:\n        if check == 0:\n            check = -1\n        elif check == 1:\n            ans += 1\n            check = 0\n    before = i\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14280": {"id": 14280, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\np = 0\nm = 0\npre = A[0]\nfor a in A[1:]:\n    if a > pre:\n        p = 1\n    elif a < pre:\n        m = 1\n    if p == 1 and m == 1:\n        ans += 1\n        p = 0\n        m = 0\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14281": {"id": 14281, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\np = 0\nm = 0\npre = A[0]\nfor a in A[1:]:\n    if a > pre:\n        p = 1\n    elif a < pre:\n        m = 1\n    if p == 1 and m == 1:\n        ans += 1\n        p = 0\n        m = 0\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14282": {"id": 14282, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\np = 0\nm = 0\npre = A[0]\nfor a in A[1:]:\n    if a > pre:\n        p = 1\n    elif a < pre:\n        m = 1\n    if p == 1 and m == 1:\n        ans += 1\n        p = 0\n        m = 0\n    pre = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14283": {"id": 14283, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\nres = 0\nwhile  i < N:\n    while i+1 < N and A[i] == A[i+1]: i += 1\n    if i+1 < N and A[i] <= A[i+1]:\n        while i+1 < N and A[i] <= A[i+1]: i += 1\n    elif i+1 < N and A[i] >= A[i+1]:\n        while i+1 < N and A[i] >= A[i+1]: i += 1\n    res += 1\n    i += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14284": {"id": 14284, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nres = 0\nwhile  i < N:\n    while i+1 < N and A[i] == A[i+1]: i += 1\n    if i+1 < N and A[i] <= A[i+1]:\n        while i+1 < N and A[i] <= A[i+1]: i += 1\n    elif i+1 < N and A[i] >= A[i+1]:\n        while i+1 < N and A[i] >= A[i+1]: i += 1\n    res += 1\n    i += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14285": {"id": 14285, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nres = 0\nwhile  i < N:\n    while i+1 < N and A[i] == A[i+1]: i += 1\n    if i+1 < N and A[i] <= A[i+1]:\n        while i+1 < N and A[i] <= A[i+1]: i += 1\n    elif i+1 < N and A[i] >= A[i+1]:\n        while i+1 < N and A[i] >= A[i+1]: i += 1\n    res += 1\n    i += 1\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14286": {"id": 14286, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N==1:\n    print(1)\n    exit()\nB=[A[i]-A[i-1] for i in range(1,N)]\nans=0\nflag=False\nfor i in range(N-1):\n    if B[i]!=0:\n        first=B[i]\n        flag=True\n    if flag:\n        break\nfor i in range(N-1):\n    if first*B[i]>=0:\n        pass\n    else:\n        ans+=1\n        j=i+1\n        while j<=N-2:\n            if B[j]!=0:\n                first=B[j]\n                break\n            else:\n                j+=1\nprint(ans+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14287": {"id": 14287, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N==1:\n    print(1)\n    exit()\nB=[A[i]-A[i-1] for i in range(1,N)]\nans=0\nflag=False\nfor i in range(N-1):\n    if B[i]!=0:\n        first=B[i]\n        flag=True\n    if flag:\n        break\nfor i in range(N-1):\n    if first*B[i]>=0:\n        pass\n    else:\n        ans+=1\n        j=i+1\n        while j<=N-2:\n            if B[j]!=0:\n                first=B[j]\n                break\n            else:\n                j+=1\nprint(ans+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14288": {"id": 14288, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N==1:\n    print(1)\n    exit()\nB=[A[i]-A[i-1] for i in range(1,N)]\nans=0\nflag=False\nfor i in range(N-1):\n    if B[i]!=0:\n        first=B[i]\n        flag=True\n    if flag:\n        break\nfor i in range(N-1):\n    if first*B[i]>=0:\n        pass\n    else:\n        ans+=1\n        j=i+1\n        while j<=N-2:\n            if B[j]!=0:\n                first=B[j]\n                break\n            else:\n                j+=1\nprint(ans+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14289": {"id": 14289, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nx=[]\nans=1\nfor i in range(n-1):\n  if a[i+1]==a[i]:\n    continue\n  x.append(a[i+1]-a[i])\nflag=True\nfor i in range(len(x)-1):\n  if flag==False:\n    flag=True\n    continue\n  if x[i]<0 and x[i+1]>0 or x[i]>0 and x[i+1]<0:\n    ans+=1\n    flag=False\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14290": {"id": 14290, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nx=[]\nans=1\nfor i in range(n-1):\n  if a[i+1]==a[i]:\n    continue\n  x.append(a[i+1]-a[i])\nflag=True\nfor i in range(len(x)-1):\n  if flag==False:\n    flag=True\n    continue\n  if x[i]<0 and x[i+1]>0 or x[i]>0 and x[i+1]<0:\n    ans+=1\n    flag=False\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14291": {"id": 14291, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nx=[]\nans=1\nfor i in range(n-1):\n  if a[i+1]==a[i]:\n    continue\n  x.append(a[i+1]-a[i])\nflag=True\nfor i in range(len(x)-1):\n  if flag==False:\n    flag=True\n    continue\n  if x[i]<0 and x[i+1]>0 or x[i]>0 and x[i+1]<0:\n    ans+=1\n    flag=False\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14292": {"id": 14292, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 1\nmode = 0\nfor i in range(N-1):\n  if mode == 0:\n    if A[i] < A[i+1]:\n      mode = 1\n    elif A[i] > A[i+1]:\n      mode = -1\n    else:\n      mode = 0\n  if mode == 1:\n    if A[i] > A[i+1]:\n      ans += 1\n      mode = 0\n  elif mode == -1:\n    if A[i] < A[i+1]:\n      ans += 1\n      mode = 0\n  else:\n    pass\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14293": {"id": 14293, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nmode = 0\nfor i in range(N-1):\n  if mode == 0:\n    if A[i] < A[i+1]:\n      mode = 1\n    elif A[i] > A[i+1]:\n      mode = -1\n    else:\n      mode = 0\n  if mode == 1:\n    if A[i] > A[i+1]:\n      ans += 1\n      mode = 0\n  elif mode == -1:\n    if A[i] < A[i+1]:\n      ans += 1\n      mode = 0\n  else:\n    pass\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">"]}, "14294": {"id": 14294, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nmode = 0\nfor i in range(N-1):\n  if mode == 0:\n    if A[i] < A[i+1]:\n      mode = 1\n    elif A[i] > A[i+1]:\n      mode = -1\n    else:\n      mode = 0\n  if mode == 1:\n    if A[i] > A[i+1]:\n      ans += 1\n      mode = 0\n  elif mode == -1:\n    if A[i] < A[i+1]:\n      ans += 1\n      mode = 0\n  else:\n    pass\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14295": {"id": 14295, "code": "import sys\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\n    sys.exit()\ninc = 0  \nans = 1\nfor i in range(N - 1):\n    if A[i] < A[i + 1]:\n        if inc == -1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = 1\n    elif A[i] > A[i + 1]:\n        if inc == 1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = -1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14296": {"id": 14296, "code": "import sys\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N == 1:\n    print(1)\n    sys.exit()\ninc = 0  \nans = 1\nfor i in range(N - 1):\n    if A[i] < A[i + 1]:\n        if inc == -1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = 1\n    elif A[i] > A[i + 1]:\n        if inc == 1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = -1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14297": {"id": 14297, "code": "import sys\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\n    sys.exit()\ninc = 0  \nans = 1\nfor i in range(N - 1):\n    if A[i] < A[i + 1]:\n        if inc == -1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = 1\n    elif A[i] > A[i + 1]:\n        if inc == 1:\n            ans += 1\n            inc = 0\n        elif inc == 0:\n            inc = -1\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14298": {"id": 14298, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nup,down = 1,1\nfor i in range(1,N):\n  if A[i-1] > A[i]:\n    up = 0\n    if down == 0:\n      count += 1\n      up,down = 1,1\n  elif A[i-1] < A[i]:\n    down = 0\n    if up == 0:\n      count += 1\n      up,down = 1,1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14299": {"id": 14299, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nup,down = 1,1\nfor i in range(1,N):\n  if A[i-1] > A[i]:\n    up = 0\n    if down == 0:\n      count += 1\n      up,down = 1,1\n  elif A[i-1] < A[i]:\n    down = 0\n    if up == 0:\n      count += 1\n      up,down = 1,1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14300": {"id": 14300, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nup,down = 1,1\nfor i in range(1,N):\n  if A[i-1] > A[i]:\n    up = 0\n    if down == 0:\n      count += 1\n      up,down = 1,1\n  elif A[i-1] < A[i]:\n    down = 0\n    if up == 0:\n      count += 1\n      up,down = 1,1\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14301": {"id": 14301, "code": "def main():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    res = 1\n    inc = 0\n    dec = 0\n    for i in range(n - 1):\n        if A[i] < A[i+1]:\n            inc += 1\n        elif A[i] > A[i+1]:\n            dec += 1\n        if inc and dec:\n            res += 1\n            inc, dec = 0, 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14302": {"id": 14302, "code": "def main():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    res = 1\n    inc = 0\n    dec = 0\n    for i in range(n - 1):\n        if A[i] < A[i+1]:\n            inc += 1\n        elif A[i] > A[i+1]:\n            dec += 1\n        if inc and dec:\n            res += 1\n            inc, dec = 0, 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14303": {"id": 14303, "code": "def main():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    res = 1\n    inc = 0\n    dec = 0\n    for i in range(n - 1):\n        if A[i] < A[i+1]:\n            inc += 1\n        elif A[i] > A[i+1]:\n            dec += 1\n        if inc and dec:\n            res += 1\n            inc, dec = 0, 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14304": {"id": 14304, "code": "N = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nb= [a[0]]\nif N > 1:\n    for i in range(1,N):\n        if a[i] != a[i-1]:\n            b.append(a[i])\n    if b[0] < b[1]:\n        up_down = 1\n    else:\n        up_down = -1\ni = 1\nwhile i < len(b):\n    if up_down*(b[i] - b[i-1]) < 0:\n        ans += 1\n        if b[i] < b[min(len(b)-1,i+1)]:\n            up_down = 1\n        else:\n            up_down = -1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">"]}, "14305": {"id": 14305, "code": "N = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nb= [a[0]]\nif N > 1:\n    for i in range(1,N):\n        if a[i] != a[i-1]:\n            b.append(a[i])\n    if b[0] < b[1]:\n        up_down = 1\n    else:\n        up_down = -1\ni = 1\nwhile i < len(b):\n    if up_down*(b[i] - b[i-1]) < 0:\n        ans += 1\n        if b[i] < b[min(len(b)-1,i+1)]:\n            up_down = 1\n        else:\n            up_down = -1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "14306": {"id": 14306, "code": "N = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nb= [a[0]]\nif N > 1:\n    for i in range(1,N):\n        if a[i] != a[i-1]:\n            b.append(a[i])\n    if b[0] < b[1]:\n        up_down = 1\n    else:\n        up_down = -1\ni = 1\nwhile i < len(b):\n    if up_down*(b[i] - b[i-1]) < 0:\n        ans += 1\n        if b[i] < b[min(len(b)-1,i+1)]:\n            up_down = 1\n        else:\n            up_down = -1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "14307": {"id": 14307, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nnb = 0\nda = 0\nfor i in range(len(A)-1):\n    if A[i] > A[i+1] and da > 0:\n        nb += 1\n        da = 0\n    elif A[i] < A[i+1] and da < 0:\n        nb += 1\n        da = 0\n    else:\n        if A[i+1] - A[i] != 0:\n            da = A[i+1] - A[i]\nprint(nb + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "14308": {"id": 14308, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnb = 0\nda = 0\nfor i in range(len(A)-1):\n    if A[i] > A[i+1] and da > 0:\n        nb += 1\n        da = 0\n    elif A[i] < A[i+1] and da < 0:\n        nb += 1\n        da = 0\n    else:\n        if A[i+1] - A[i] != 0:\n            da = A[i+1] - A[i]\nprint(nb + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "14309": {"id": 14309, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnb = 0\nda = 0\nfor i in range(len(A)-1):\n    if A[i] > A[i+1] and da > 0:\n        nb += 1\n        da = 0\n    elif A[i] < A[i+1] and da < 0:\n        nb += 1\n        da = 0\n    else:\n        if A[i+1] - A[i] != 0:\n            da = A[i+1] - A[i]\nprint(nb + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14310": {"id": 14310, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\nmono = 0\nfor i in range(1, n):\n  d = a[i] - a[i - 1]\n  if d * mono < 0:\n    cnt += 1\n    mono = 0\n  elif d != 0:\n    mono = d\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14311": {"id": 14311, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nmono = 0\nfor i in range(1, n):\n  d = a[i] - a[i - 1]\n  if d * mono < 0:\n    cnt += 1\n    mono = 0\n  elif d != 0:\n    mono = d\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14312": {"id": 14312, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nmono = 0\nfor i in range(1, n):\n  d = a[i] - a[i - 1]\n  if d * mono < 0:\n    cnt += 1\n    mono = 0\n  elif d != 0:\n    mono = d\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14313": {"id": 14313, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nn = 6\na = [1, 2, 3, 2, 2, 1]\nl = []\nprev = None\nfor i in range(n):\n    if prev!=a[i]:\n        l.append(a[i])\n    prev = a[i]\nif len(l)==1:\n    ans = 1\nelse:\n    m = len(l)\n    prev = None\n    ans = 0\n    for i in range(m-1):\n        s = l[i]<l[i+1]\n        if prev is None:\n            prev = s\n        elif prev!=s:\n            ans += 1\n            prev = None\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14314": {"id": 14314, "code": "import sys\ninput = \"<function <lambda>>\"\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\nn = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nl = []\nprev = None\nfor i in range(n):\n    if prev!=a[i]:\n        l.append(a[i])\n    prev = a[i]\nif len(l)==1:\n    ans = 1\nelse:\n    m = len(l)\n    prev = None\n    ans = 0\n    for i in range(m-1):\n        s = l[i]<l[i+1]\n        if prev is None:\n            prev = s\n        elif prev!=s:\n            ans += 1\n            prev = None\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14315": {"id": 14315, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\nsa = 0\nfor i in range(1, n):\n    new = a[i] - a[i-1]\n    if new * sa < 0:\n        cnt += 1\n        sa = 0\n        continue\n    if new != 0:\n        sa = new\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14316": {"id": 14316, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nsa = 0\nfor i in range(1, n):\n    new = a[i] - a[i-1]\n    if new * sa < 0:\n        cnt += 1\n        sa = 0\n        continue\n    if new != 0:\n        sa = new\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14317": {"id": 14317, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nsa = 0\nfor i in range(1, n):\n    new = a[i] - a[i-1]\n    if new * sa < 0:\n        cnt += 1\n        sa = 0\n        continue\n    if new != 0:\n        sa = new\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14318": {"id": 14318, "code": "from itertools import tee\ndef pairwise(iterable):\n    a, b = tee(iterable)\n    next(b, None)\n    return zip(a, b)\nN = 6\nA = [1, 2, 3, 2, 2, 1]\ncut = 0\nprevious = None\nis_increase = False\nis_decrease = False\nfor a in A:\n    if previous is None:\n        previous = a\n    elif not (is_increase or is_decrease):\n        if previous < a:\n            is_increase = True\n        elif previous > a:\n            is_decrease = True\n        previous = a\n    elif is_increase and a < previous:\n        cut += 1\n        is_increase = False\n    elif is_decrease and a > previous:\n        cut += 1\n        is_decrease = False\n    previous = a\nprint(cut + 1)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14319": {"id": 14319, "code": "from itertools import tee\ndef pairwise(iterable):\n    a, b = tee(iterable)\n    next(b, None)\n    return zip(a, b)\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncut = 0\nprevious = None\nis_increase = False\nis_decrease = False\nfor a in A:\n    if previous is None:\n        previous = a\n    elif not (is_increase or is_decrease):\n        if previous < a:\n            is_increase = True\n        elif previous > a:\n            is_decrease = True\n        previous = a\n    elif is_increase and a < previous:\n        cut += 1\n        is_increase = False\n    elif is_decrease and a > previous:\n        cut += 1\n        is_decrease = False\n    previous = a\nprint(cut + 1)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14320": {"id": 14320, "code": "from itertools import tee\ndef pairwise(iterable):\n    a, b = tee(iterable)\n    next(b, None)\n    return zip(a, b)\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncut = 0\nprevious = None\nis_increase = False\nis_decrease = False\nfor a in A:\n    if previous is None:\n        previous = a\n    elif not (is_increase or is_decrease):\n        if previous < a:\n            is_increase = True\n        elif previous > a:\n            is_decrease = True\n        previous = a\n    elif is_increase and a < previous:\n        cut += 1\n        is_increase = False\n    elif is_decrease and a > previous:\n        cut += 1\n        is_decrease = False\n    previous = a\nprint(cut + 1)", "coverage": [">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14321": {"id": 14321, "code": "N = 6\nans = 1\nA = [1, 2, 3, 2, 2, 1]\nprev = A[0]\ntrend = 0\nfor a in A[1:]:\n    if (a - prev) * trend < 0:\n        ans += 1\n        trend = 0\n    elif trend == 0:\n        if a - prev > 0:\n            trend = 1\n        elif a - prev < 0:\n            trend = -1\n    prev = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14322": {"id": 14322, "code": "N = 9\nans = 1\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = A[0]\ntrend = 0\nfor a in A[1:]:\n    if (a - prev) * trend < 0:\n        ans += 1\n        trend = 0\n    elif trend == 0:\n        if a - prev > 0:\n            trend = 1\n        elif a - prev < 0:\n            trend = -1\n    prev = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14323": {"id": 14323, "code": "N = 7\nans = 1\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = A[0]\ntrend = 0\nfor a in A[1:]:\n    if (a - prev) * trend < 0:\n        ans += 1\n        trend = 0\n    elif trend == 0:\n        if a - prev > 0:\n            trend = 1\n        elif a - prev < 0:\n            trend = -1\n    prev = a\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14324": {"id": 14324, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncounter=1\nres=0\nfor i in range(len(A)-1):\n    if (A[i+1]<A[i] and res>0) or (A[i+1]>A[i] and res<0):\n        counter+=1\n        res=0\n    elif A[i+1]!=A[i]:\n        res=A[i+1]-A[i]\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14325": {"id": 14325, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncounter=1\nres=0\nfor i in range(len(A)-1):\n    if (A[i+1]<A[i] and res>0) or (A[i+1]>A[i] and res<0):\n        counter+=1\n        res=0\n    elif A[i+1]!=A[i]:\n        res=A[i+1]-A[i]\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14326": {"id": 14326, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncounter=1\nres=0\nfor i in range(len(A)-1):\n    if (A[i+1]<A[i] and res>0) or (A[i+1]>A[i] and res<0):\n        counter+=1\n        res=0\n    elif A[i+1]!=A[i]:\n        res=A[i+1]-A[i]\nprint(counter)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14327": {"id": 14327, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup=0\ndown=0\ncnt=0\nfor i in range(n-1):\n    if up==1:\n        if a[i]>a[i+1]:\n            up=0\n            cnt+=1\n    elif down==1:\n        if a[i]<a[i+1]:\n            down=0\n            cnt+=1\n    else:\n        if a[i]<a[i+1]:\n            up=1\n        elif a[i]>a[i+1]:\n            down=1\nelse:\n    cnt+=1\n    print(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">"]}, "14328": {"id": 14328, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup=0\ndown=0\ncnt=0\nfor i in range(n-1):\n    if up==1:\n        if a[i]>a[i+1]:\n            up=0\n            cnt+=1\n    elif down==1:\n        if a[i]<a[i+1]:\n            down=0\n            cnt+=1\n    else:\n        if a[i]<a[i+1]:\n            up=1\n        elif a[i]>a[i+1]:\n            down=1\nelse:\n    cnt+=1\n    print(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", "!", ">", ">"]}, "14329": {"id": 14329, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup=0\ndown=0\ncnt=0\nfor i in range(n-1):\n    if up==1:\n        if a[i]>a[i+1]:\n            up=0\n            cnt+=1\n    elif down==1:\n        if a[i]<a[i+1]:\n            down=0\n            cnt+=1\n    else:\n        if a[i]<a[i+1]:\n            up=1\n        elif a[i]>a[i+1]:\n            down=1\nelse:\n    cnt+=1\n    print(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "14330": {"id": 14330, "code": "n = 6\naa = [1, 2, 3, 2, 2, 1]\nlist1 =[0] * n\ncnt = 1  \nfor i in range(n-1):\n  if aa[i+1] > aa[i]:\n    list1[i+1] = 1\n  elif aa[i+1] < aa[i]:\n    list1[i+1] = -1\n  elif aa[i+1] == aa[i]:    \n    list1[i+1] = 0\nwhile 1 in list1 and -1 in list1:\n  del list1[:max(list1.index(1), list1.index(-1))]\n  list1[0] = 0\n  cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14331": {"id": 14331, "code": "n = 9\naa = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nlist1 =[0] * n\ncnt = 1  \nfor i in range(n-1):\n  if aa[i+1] > aa[i]:\n    list1[i+1] = 1\n  elif aa[i+1] < aa[i]:\n    list1[i+1] = -1\n  elif aa[i+1] == aa[i]:    \n    list1[i+1] = 0\nwhile 1 in list1 and -1 in list1:\n  del list1[:max(list1.index(1), list1.index(-1))]\n  list1[0] = 0\n  cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14332": {"id": 14332, "code": "n = 7\naa = [1, 2, 3, 2, 1, 999999999, 1000000000]\nlist1 =[0] * n\ncnt = 1  \nfor i in range(n-1):\n  if aa[i+1] > aa[i]:\n    list1[i+1] = 1\n  elif aa[i+1] < aa[i]:\n    list1[i+1] = -1\n  elif aa[i+1] == aa[i]:    \n    list1[i+1] = 0\nwhile 1 in list1 and -1 in list1:\n  del list1[:max(list1.index(1), list1.index(-1))]\n  list1[0] = 0\n  cnt += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "14333": {"id": 14333, "code": "num = 6\na = [1, 2, 3, 2, 2, 1]\nk = 1\nx = y = 0\nc = a[0]\nfor i in a[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14334": {"id": 14334, "code": "num = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nk = 1\nx = y = 0\nc = a[0]\nfor i in a[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14335": {"id": 14335, "code": "num = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nk = 1\nx = y = 0\nc = a[0]\nfor i in a[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14336": {"id": 14336, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nl = []\nans = 1\nflag = True\nfor i in range(1, len(a)):\n    num = a[i] - a[i - 1]\n    if num > 0:\n        num = 1\n        l.append(num)\n    elif num < 0:\n        num = -1\n        l.append(num)\n    else:\n        pass\nif len(l) > 1:\n    for i in range(len(l) - 1):\n        if l[i] != l[i + 1]:\n            if flag == True:\n                ans += 1\n                flag = False\n            else:\n                flag = True\n        else:\n            flag = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14337": {"id": 14337, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nl = []\nans = 1\nflag = True\nfor i in range(1, len(a)):\n    num = a[i] - a[i - 1]\n    if num > 0:\n        num = 1\n        l.append(num)\n    elif num < 0:\n        num = -1\n        l.append(num)\n    else:\n        pass\nif len(l) > 1:\n    for i in range(len(l) - 1):\n        if l[i] != l[i + 1]:\n            if flag == True:\n                ans += 1\n                flag = False\n            else:\n                flag = True\n        else:\n            flag = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">"]}, "14338": {"id": 14338, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ndir = 0\nold = a[0]\nans = 1\nfor i in range(1, len(a)):\n    now = a[i]\n    if dir == 0:\n        if old < now:\n            dir = 1\n        elif old > now:\n            dir = -1\n    elif dir == 1:\n        if old > now:\n            dir = 0\n            ans += 1\n    elif dir == -1:\n        if old < now:\n            dir = 0\n            ans += 1\n    old = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14339": {"id": 14339, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ndir = 0\nold = a[0]\nans = 1\nfor i in range(1, len(a)):\n    now = a[i]\n    if dir == 0:\n        if old < now:\n            dir = 1\n        elif old > now:\n            dir = -1\n    elif dir == 1:\n        if old > now:\n            dir = 0\n            ans += 1\n    elif dir == -1:\n        if old < now:\n            dir = 0\n            ans += 1\n    old = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14340": {"id": 14340, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ndir = 0\nold = a[0]\nans = 1\nfor i in range(1, len(a)):\n    now = a[i]\n    if dir == 0:\n        if old < now:\n            dir = 1\n        elif old > now:\n            dir = -1\n    elif dir == 1:\n        if old > now:\n            dir = 0\n            ans += 1\n    elif dir == -1:\n        if old < now:\n            dir = 0\n            ans += 1\n    old = now\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14341": {"id": 14341, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nB = []\ni = 0\nwhile i < N - 1:\n    if A[i] != A[i+1]:\n        B.append(A[i])\n    i += 1\nB.append(A[-1])\nans = 1\ni = 0\nwhile i < len(B) - 2:\n    if (B[i + 1] - B[i]) * (B[i + 2] - B[i + 1]) < 0:\n        ans += 1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14342": {"id": 14342, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nB = []\ni = 0\nwhile i < N - 1:\n    if A[i] != A[i+1]:\n        B.append(A[i])\n    i += 1\nB.append(A[-1])\nans = 1\ni = 0\nwhile i < len(B) - 2:\n    if (B[i + 1] - B[i]) * (B[i + 2] - B[i + 1]) < 0:\n        ans += 1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14343": {"id": 14343, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nB = []\ni = 0\nwhile i < N - 1:\n    if A[i] != A[i+1]:\n        B.append(A[i])\n    i += 1\nB.append(A[-1])\nans = 1\ni = 0\nwhile i < len(B) - 2:\n    if (B[i + 1] - B[i]) * (B[i + 2] - B[i + 1]) < 0:\n        ans += 1\n        i += 2\n    else:\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14344": {"id": 14344, "code": "N = 6\nif N == 1:print(1);exit()\nA = [1, 2, 3, 2, 2, 1]\nans = 1\ncur = A[0]\nDecided = A[0] != A[1]\nFlat = A[0] == A[1]\nUp = A[0] < A[1]\nfor n in range(1,N):\n    if Decided:\n        if A[n] == cur:\n            continue\n        if (A[n]>=cur) == Up:\n            cur = A[n]\n        else:\n            cur = A[n]\n            Up = 1 - Up\n            Decided = False\n            ans += 1\n    else:\n        if A[n] != cur:\n            Up = A[n] > cur\n            cur = A[n]\n            Decided = True\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14345": {"id": 14345, "code": "N = 9\nif N == 1:print(1);exit()\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\ncur = A[0]\nDecided = A[0] != A[1]\nFlat = A[0] == A[1]\nUp = A[0] < A[1]\nfor n in range(1,N):\n    if Decided:\n        if A[n] == cur:\n            continue\n        if (A[n]>=cur) == Up:\n            cur = A[n]\n        else:\n            cur = A[n]\n            Up = 1 - Up\n            Decided = False\n            ans += 1\n    else:\n        if A[n] != cur:\n            Up = A[n] > cur\n            cur = A[n]\n            Decided = True\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14346": {"id": 14346, "code": "N = 7\nif N == 1:print(1);exit()\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\ncur = A[0]\nDecided = A[0] != A[1]\nFlat = A[0] == A[1]\nUp = A[0] < A[1]\nfor n in range(1,N):\n    if Decided:\n        if A[n] == cur:\n            continue\n        if (A[n]>=cur) == Up:\n            cur = A[n]\n        else:\n            cur = A[n]\n            Up = 1 - Up\n            Decided = False\n            ans += 1\n    else:\n        if A[n] != cur:\n            Up = A[n] > cur\n            cur = A[n]\n            Decided = True\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14347": {"id": 14347, "code": "N = 6\nL = [1, 2, 3, 2, 2, 1]\nans1 = 1\nflag = ''\nfor i in range(1, N):\n  if flag == '':\n    if L[i] < L[i-1]:\n      flag = 'minus'\n    elif L[i] > L[i-1]:\n      flag = 'plus'\n    else:\n      flag = ''\n  if flag == 'plus':\n    if L[i] < L[i-1]:\n      flag = ''\n      ans1 += 1\n  elif flag == 'minus':\n    if L[i] > L[i-1]:\n      flag = ''\n      ans1 += 1\nprint(ans1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14348": {"id": 14348, "code": "N = 9\nL = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans1 = 1\nflag = ''\nfor i in range(1, N):\n  if flag == '':\n    if L[i] < L[i-1]:\n      flag = 'minus'\n    elif L[i] > L[i-1]:\n      flag = 'plus'\n    else:\n      flag = ''\n  if flag == 'plus':\n    if L[i] < L[i-1]:\n      flag = ''\n      ans1 += 1\n  elif flag == 'minus':\n    if L[i] > L[i-1]:\n      flag = ''\n      ans1 += 1\nprint(ans1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14349": {"id": 14349, "code": "N = 7\nL = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans1 = 1\nflag = ''\nfor i in range(1, N):\n  if flag == '':\n    if L[i] < L[i-1]:\n      flag = 'minus'\n    elif L[i] > L[i-1]:\n      flag = 'plus'\n    else:\n      flag = ''\n  if flag == 'plus':\n    if L[i] < L[i-1]:\n      flag = ''\n      ans1 += 1\n  elif flag == 'minus':\n    if L[i] > L[i-1]:\n      flag = ''\n      ans1 += 1\nprint(ans1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14350": {"id": 14350, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nflag = 0\nans = 1\ncnt = 0\nfor i in range(n-1):\n    if a[i+1] - a[i] > 0 and flag == -1 and cnt > 0:\n        flag = 1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] < 0 and flag == 1 and cnt > 0: \n        flag = -1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] == 0:\n        pass\n    elif cnt == 0 and a[i+1] - a[i] > 0:\n        flag = 1\n        cnt += 1\n    elif cnt == 0 and a[i+1] - a[i] < 0:\n        flag = -1\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14351": {"id": 14351, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag = 0\nans = 1\ncnt = 0\nfor i in range(n-1):\n    if a[i+1] - a[i] > 0 and flag == -1 and cnt > 0:\n        flag = 1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] < 0 and flag == 1 and cnt > 0: \n        flag = -1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] == 0:\n        pass\n    elif cnt == 0 and a[i+1] - a[i] > 0:\n        flag = 1\n        cnt += 1\n    elif cnt == 0 and a[i+1] - a[i] < 0:\n        flag = -1\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">"]}, "14352": {"id": 14352, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag = 0\nans = 1\ncnt = 0\nfor i in range(n-1):\n    if a[i+1] - a[i] > 0 and flag == -1 and cnt > 0:\n        flag = 1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] < 0 and flag == 1 and cnt > 0: \n        flag = -1\n        ans += 1\n        cnt = 0\n    elif a[i+1] - a[i] == 0:\n        pass\n    elif cnt == 0 and a[i+1] - a[i] > 0:\n        flag = 1\n        cnt += 1\n    elif cnt == 0 and a[i+1] - a[i] < 0:\n        flag = -1\n        cnt += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14353": {"id": 14353, "code": "import sys\ninput = sys.stdin.buffer.readline\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nd = 0\nans = 1\nfor i in range(1, N):\n    if A[i - 1] < A[i]:\n        if d < 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = 1\n    elif A[i - 1] > A[i]:\n        if d > 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14354": {"id": 14354, "code": "import sys\ninput = sys.stdin.buffer.readline\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nd = 0\nans = 1\nfor i in range(1, N):\n    if A[i - 1] < A[i]:\n        if d < 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = 1\n    elif A[i - 1] > A[i]:\n        if d > 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14355": {"id": 14355, "code": "import sys\ninput = sys.stdin.buffer.readline\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nd = 0\nans = 1\nfor i in range(1, N):\n    if A[i - 1] < A[i]:\n        if d < 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = 1\n    elif A[i - 1] > A[i]:\n        if d > 0:\n            ans += 1\n            d = 0\n        elif d == 0:\n            d = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14356": {"id": 14356, "code": "if __name__ == '__main__':\n    n = 6\n    arr = [1, 2, 3, 2, 2, 1]\n    dp = [[10 ** 9 for j in range(2)] for i in range(n)]\n    dp[0][0] = 1 \n    dp[0][1] = 1 \n    for i in range(1, n):\n        if arr[i] > arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1] + 1)\n            dp[i][1] = min(dp[i-1][0], dp[i-1][1]) + 1\n        elif arr[i] < arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1]) + 1\n            dp[i][1] = min(dp[i-1][0] + 1, dp[i-1][1])\n        else:\n            dp[i][0] = dp[i-1][0]\n            dp[i][1] = dp[i-1][1]\n    print(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14357": {"id": 14357, "code": "if __name__ == '__main__':\n    n = 7\n    arr = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    dp = [[10 ** 9 for j in range(2)] for i in range(n)]\n    dp[0][0] = 1 \n    dp[0][1] = 1 \n    for i in range(1, n):\n        if arr[i] > arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1] + 1)\n            dp[i][1] = min(dp[i-1][0], dp[i-1][1]) + 1\n        elif arr[i] < arr[i-1]:\n            dp[i][0] = min(dp[i-1][0], dp[i-1][1]) + 1\n            dp[i][1] = min(dp[i-1][0] + 1, dp[i-1][1])\n        else:\n            dp[i][0] = dp[i-1][0]\n            dp[i][1] = dp[i-1][1]\n    print(min(dp[-1]))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14358": {"id": 14358, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup=2\nans=1\nfor i in range(1,n):\n    if up==2:\n        if a[i-1]<a[i]:\n            up=1\n        elif a[i-1]>a[i]:\n            up=0\n    elif up==1 and a[i-1]>a[i]:\n        up=2\n        ans+=1\n    elif up==0 and a[i-1]<a[i]:\n        up=2\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14359": {"id": 14359, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup=2\nans=1\nfor i in range(1,n):\n    if up==2:\n        if a[i-1]<a[i]:\n            up=1\n        elif a[i-1]>a[i]:\n            up=0\n    elif up==1 and a[i-1]>a[i]:\n        up=2\n        ans+=1\n    elif up==0 and a[i-1]<a[i]:\n        up=2\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", ">"]}, "14360": {"id": 14360, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup=2\nans=1\nfor i in range(1,n):\n    if up==2:\n        if a[i-1]<a[i]:\n            up=1\n        elif a[i-1]>a[i]:\n            up=0\n    elif up==1 and a[i-1]>a[i]:\n        up=2\n        ans+=1\n    elif up==0 and a[i-1]<a[i]:\n        up=2\n        ans+=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14361": {"id": 14361, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nwhile i < N:\n    if i == N-1:\n        ans += 1\n        break\n    if A[i] == A[i+1]:\n        i += 1\n    elif A[i] > A[i+1]:\n        while i < N-1 and A[i] >= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\n    elif A[i] < A[i+1]:\n        while i < N-1 and A[i] <= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14362": {"id": 14362, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nans = 0\nwhile i < N:\n    if i == N-1:\n        ans += 1\n        break\n    if A[i] == A[i+1]:\n        i += 1\n    elif A[i] > A[i+1]:\n        while i < N-1 and A[i] >= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\n    elif A[i] < A[i+1]:\n        while i < N-1 and A[i] <= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">", ">"]}, "14363": {"id": 14363, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nwhile i < N:\n    if i == N-1:\n        ans += 1\n        break\n    if A[i] == A[i+1]:\n        i += 1\n    elif A[i] > A[i+1]:\n        while i < N-1 and A[i] >= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\n    elif A[i] < A[i+1]:\n        while i < N-1 and A[i] <= A[i+1]:\n            i += 1\n        ans += 1\n        i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14364": {"id": 14364, "code": "n = 6\nif n==1:\n  print(1)\n  exit()\na = [1, 2, 3, 2, 2, 1]\nans=1\nif a[0]<a[1]:flag=1\nelif a[0]>a[1]:flag=-1\nelse:flag=0\nfor i in range(1,n-1):\n  if flag==1 and a[i]>a[i+1]:\n    ans+=1\n    flag=0\n  elif flag==-1 and a[i]<a[i+1]:\n    ans+=1\n    flag=0\n  else:\n    if a[i]>a[i+1]:flag=-1\n    elif a[i]<a[i+1]:flag=1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "14365": {"id": 14365, "code": "n = 9\nif n==1:\n  print(1)\n  exit()\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans=1\nif a[0]<a[1]:flag=1\nelif a[0]>a[1]:flag=-1\nelse:flag=0\nfor i in range(1,n-1):\n  if flag==1 and a[i]>a[i+1]:\n    ans+=1\n    flag=0\n  elif flag==-1 and a[i]<a[i+1]:\n    ans+=1\n    flag=0\n  else:\n    if a[i]>a[i+1]:flag=-1\n    elif a[i]<a[i+1]:flag=1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "14366": {"id": 14366, "code": "n = 7\nif n==1:\n  print(1)\n  exit()\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans=1\nif a[0]<a[1]:flag=1\nelif a[0]>a[1]:flag=-1\nelse:flag=0\nfor i in range(1,n-1):\n  if flag==1 and a[i]>a[i+1]:\n    ans+=1\n    flag=0\n  elif flag==-1 and a[i]<a[i+1]:\n    ans+=1\n    flag=0\n  else:\n    if a[i]>a[i+1]:flag=-1\n    elif a[i]<a[i+1]:flag=1\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14367": {"id": 14367, "code": "n = 6\na = [0] * n\na = [1, 2, 3, 2, 2, 1]\nlast = 0\ncnt = 1\nincrease_flag = None\nfirst_flag = True\nfor i in range(len(a) - 1):\n    if a[i] < a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = True\n        elif not (increase_flag):\n            cnt += 1\n            increase_flag = None\n        else:\n            continue\n    elif a[i] > a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = False\n        elif not (increase_flag):\n            continue\n        else:\n            cnt += 1\n            increase_flag = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14368": {"id": 14368, "code": "n = 9\na = [0] * n\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nlast = 0\ncnt = 1\nincrease_flag = None\nfirst_flag = True\nfor i in range(len(a) - 1):\n    if a[i] < a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = True\n        elif not (increase_flag):\n            cnt += 1\n            increase_flag = None\n        else:\n            continue\n    elif a[i] > a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = False\n        elif not (increase_flag):\n            continue\n        else:\n            cnt += 1\n            increase_flag = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "14369": {"id": 14369, "code": "n = 7\na = [0] * n\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nlast = 0\ncnt = 1\nincrease_flag = None\nfirst_flag = True\nfor i in range(len(a) - 1):\n    if a[i] < a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = True\n        elif not (increase_flag):\n            cnt += 1\n            increase_flag = None\n        else:\n            continue\n    elif a[i] > a[i + 1]:\n        if (increase_flag is None):\n            increase_flag = False\n        elif not (increase_flag):\n            continue\n        else:\n            cnt += 1\n            increase_flag = None\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14370": {"id": 14370, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 1\nm = 0\nfor i in range(1, n):\n    if (a[i] - a[i - 1]) * m < 0:\n        ans += 1\n        m = 0\n    elif a[i] - a[i - 1] != 0:\n        m = a[i] - a[i - 1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14371": {"id": 14371, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 1\nm = 0\nfor i in range(1, n):\n    if (a[i] - a[i - 1]) * m < 0:\n        ans += 1\n        m = 0\n    elif a[i] - a[i - 1] != 0:\n        m = a[i] - a[i - 1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14372": {"id": 14372, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 1\nm = 0\nfor i in range(1, n):\n    if (a[i] - a[i - 1]) * m < 0:\n        ans += 1\n        m = 0\n    elif a[i] - a[i - 1] != 0:\n        m = a[i] - a[i - 1]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14373": {"id": 14373, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nlast = 0\nans = 1\nfor i in range(N - 1):\n    diff = A[i] - A[i + 1]\n    if last == 0:\n        if diff > 0:\n            last = 1\n        elif diff < 0:\n            last = -1\n    elif last * diff < 0:\n        ans += 1\n        last = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14374": {"id": 14374, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nlast = 0\nans = 1\nfor i in range(N - 1):\n    diff = A[i] - A[i + 1]\n    if last == 0:\n        if diff > 0:\n            last = 1\n        elif diff < 0:\n            last = -1\n    elif last * diff < 0:\n        ans += 1\n        last = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">"]}, "14375": {"id": 14375, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nlast = 0\nans = 1\nfor i in range(N - 1):\n    diff = A[i] - A[i + 1]\n    if last == 0:\n        if diff > 0:\n            last = 1\n        elif diff < 0:\n            last = -1\n    elif last * diff < 0:\n        ans += 1\n        last = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14376": {"id": 14376, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncnt = 1\ninc = False\ndec = False\np = A.pop(0)\nfor Ai in A:\n    if (not inc) and (not dec):\n        if Ai < p:\n            dec = True\n        elif Ai > p:\n            inc = True\n    elif inc:\n        if Ai < p:\n            cnt += 1\n            inc = False\n    elif dec:\n        if Ai > p:\n            cnt += 1\n            dec = False\n    p = Ai\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14377": {"id": 14377, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ninc = False\ndec = False\np = A.pop(0)\nfor Ai in A:\n    if (not inc) and (not dec):\n        if Ai < p:\n            dec = True\n        elif Ai > p:\n            inc = True\n    elif inc:\n        if Ai < p:\n            cnt += 1\n            inc = False\n    elif dec:\n        if Ai > p:\n            cnt += 1\n            dec = False\n    p = Ai\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14378": {"id": 14378, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ninc = False\ndec = False\np = A.pop(0)\nfor Ai in A:\n    if (not inc) and (not dec):\n        if Ai < p:\n            dec = True\n        elif Ai > p:\n            inc = True\n    elif inc:\n        if Ai < p:\n            cnt += 1\n            inc = False\n    elif dec:\n        if Ai > p:\n            cnt += 1\n            dec = False\n    p = Ai\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14379": {"id": 14379, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni,ans=0,0\nwhile i<n-1:\n    while i<n-1 and a[i]==a[i+1]: i+=1\n    if a[i]<=a[i+1]:\n        while i<n-1 and a[i]<=a[i+1]: i+=1\n        ans+=1\n    elif a[i]>=a[i+1]:\n        while i<n-1 and a[i]>=a[i+1]: i+=1\n        ans+=1\n    i+=1\n    if i==n-1: ans+=1\nif ans==0: ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14380": {"id": 14380, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni,ans=0,0\nwhile i<n-1:\n    while i<n-1 and a[i]==a[i+1]: i+=1\n    if a[i]<=a[i+1]:\n        while i<n-1 and a[i]<=a[i+1]: i+=1\n        ans+=1\n    elif a[i]>=a[i+1]:\n        while i<n-1 and a[i]>=a[i+1]: i+=1\n        ans+=1\n    i+=1\n    if i==n-1: ans+=1\nif ans==0: ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">"]}, "14381": {"id": 14381, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni,ans=0,0\nwhile i<n-1:\n    while i<n-1 and a[i]==a[i+1]: i+=1\n    if a[i]<=a[i+1]:\n        while i<n-1 and a[i]<=a[i+1]: i+=1\n        ans+=1\n    elif a[i]>=a[i+1]:\n        while i<n-1 and a[i]>=a[i+1]: i+=1\n        ans+=1\n    i+=1\n    if i==n-1: ans+=1\nif ans==0: ans=1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14382": {"id": 14382, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nnum = 0\ncount = 1\nmode = 0\nwhile num < n - 1:\n    if a[num] == a[num + 1]:\n        num += 1\n    elif a[num] > a[num + 1]:\n        num += 1\n        if mode == -1:\n            pass\n        elif mode == 0:\n            mode = -1\n        else:\n            count += 1\n            mode = 0\n    else:\n        num += 1\n        if mode == 1:\n            pass\n        elif mode == 0:\n            mode = 1\n        else:\n            count += 1\n            mode = 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "14383": {"id": 14383, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnum = 0\ncount = 1\nmode = 0\nwhile num < n - 1:\n    if a[num] == a[num + 1]:\n        num += 1\n    elif a[num] > a[num + 1]:\n        num += 1\n        if mode == -1:\n            pass\n        elif mode == 0:\n            mode = -1\n        else:\n            count += 1\n            mode = 0\n    else:\n        num += 1\n        if mode == 1:\n            pass\n        elif mode == 0:\n            mode = 1\n        else:\n            count += 1\n            mode = 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", "!", "!", ">", ">", "!", ">", ">", "!", ">", ">", "!", "!", "!", ">"]}, "14384": {"id": 14384, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnum = 0\ncount = 1\nmode = 0\nwhile num < n - 1:\n    if a[num] == a[num + 1]:\n        num += 1\n    elif a[num] > a[num + 1]:\n        num += 1\n        if mode == -1:\n            pass\n        elif mode == 0:\n            mode = -1\n        else:\n            count += 1\n            mode = 0\n    else:\n        num += 1\n        if mode == 1:\n            pass\n        elif mode == 0:\n            mode = 1\n        else:\n            count += 1\n            mode = 0\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14385": {"id": 14385, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni = 1\nans = 1\nchange = [False,False]\nwhile i<n:\n    if change == [True,True]:\n        ans += 1\n        change = [False,False]\n    elif a[i]>a[i-1]:\n        change[0] = True\n        i += 1\n    elif a[i]<a[i-1]:\n        change[1] = True\n        i += 1\n    else:\n        i += 1\nif i==n and change==[True,True]:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "14386": {"id": 14386, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 1\nans = 1\nchange = [False,False]\nwhile i<n:\n    if change == [True,True]:\n        ans += 1\n        change = [False,False]\n    elif a[i]>a[i-1]:\n        change[0] = True\n        i += 1\n    elif a[i]<a[i-1]:\n        change[1] = True\n        i += 1\n    else:\n        i += 1\nif i==n and change==[True,True]:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14387": {"id": 14387, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 1\nans = 1\nchange = [False,False]\nwhile i<n:\n    if change == [True,True]:\n        ans += 1\n        change = [False,False]\n    elif a[i]>a[i-1]:\n        change[0] = True\n        i += 1\n    elif a[i]<a[i-1]:\n        change[1] = True\n        i += 1\n    else:\n        i += 1\nif i==n and change==[True,True]:\n    ans += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "14388": {"id": 14388, "code": "import sys\ninput = sys.stdin.readline\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nB = []\nfor i in range(1,N):\n    if A[i] - A[i-1] != 0:\n        B.append(A[i] - A[i-1])\ncnt = 0\nfor i in range(1,len(B)):\n    if i >1:\n        if B[i-1]*B[i-2] < 0 :\n            continue\n    if B[i]*B[i-1]<0:\n        cnt += 1\n        B[i]=0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14389": {"id": 14389, "code": "import sys\ninput = sys.stdin.readline\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nB = []\nfor i in range(1,N):\n    if A[i] - A[i-1] != 0:\n        B.append(A[i] - A[i-1])\ncnt = 0\nfor i in range(1,len(B)):\n    if i >1:\n        if B[i-1]*B[i-2] < 0 :\n            continue\n    if B[i]*B[i-1]<0:\n        cnt += 1\n        B[i]=0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14390": {"id": 14390, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nB = []\nfor i in range(1,N):\n    if A[i] - A[i-1] != 0:\n        B.append(A[i] - A[i-1])\ncnt = 0\nfor i in range(1,len(B)):\n    if i >1:\n        if B[i-1]*B[i-2] < 0 :\n            continue\n    if B[i]*B[i-1]<0:\n        cnt += 1\n        B[i]=0\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14391": {"id": 14391, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni = 0\nc = 0\nwhile i < n:\n    if i == n - 1:\n        c += 1\n        break\n    if a[i] == a[i+1]:\n        i += 1\n    elif a[i] < a[i+1]:\n        while i < n - 1 and a[i] <= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\n    elif a[i] > a[i+1]:\n        while i < n - 1 and a[i] >= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14392": {"id": 14392, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nc = 0\nwhile i < n:\n    if i == n - 1:\n        c += 1\n        break\n    if a[i] == a[i+1]:\n        i += 1\n    elif a[i] < a[i+1]:\n        while i < n - 1 and a[i] <= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\n    elif a[i] > a[i+1]:\n        while i < n - 1 and a[i] >= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14393": {"id": 14393, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nc = 0\nwhile i < n:\n    if i == n - 1:\n        c += 1\n        break\n    if a[i] == a[i+1]:\n        i += 1\n    elif a[i] < a[i+1]:\n        while i < n - 1 and a[i] <= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\n    elif a[i] > a[i+1]:\n        while i < n - 1 and a[i] >= a[i+1]:\n            i += 1\n        c += 1\n        i += 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14394": {"id": 14394, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N == 1:\n    print(1)\nelse:\n    pre = A[0]\n    flg = 0\n    ans = 1\n    for i in range(1, N):\n        now = A[i]\n        diff = now - pre\n        if flg == 1:\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        elif flg == -1:\n            if diff <= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        else:\n            if diff > 0:\n                flg = 1\n            elif diff < 0:\n                flg = -1\n            else:\n                pass\n        pre = now\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14395": {"id": 14395, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N == 1:\n    print(1)\nelse:\n    pre = A[0]\n    flg = 0\n    ans = 1\n    for i in range(1, N):\n        now = A[i]\n        diff = now - pre\n        if flg == 1:\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        elif flg == -1:\n            if diff <= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        else:\n            if diff > 0:\n                flg = 1\n            elif diff < 0:\n                flg = -1\n            else:\n                pass\n        pre = now\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14396": {"id": 14396, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N == 1:\n    print(1)\nelse:\n    pre = A[0]\n    flg = 0\n    ans = 1\n    for i in range(1, N):\n        now = A[i]\n        diff = now - pre\n        if flg == 1:\n            if diff >= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        elif flg == -1:\n            if diff <= 0:\n                pass\n            else:\n                ans += 1\n                flg = 0\n        else:\n            if diff > 0:\n                flg = 1\n            elif diff < 0:\n                flg = -1\n            else:\n                pass\n        pre = now\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14397": {"id": 14397, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nnow = A[0]\nkind = 0\nans = 0\nfor i in range(1,N):\n    if kind == 0:\n        if now < A[i]:\n            kind = 1\n        elif now > A[i]:\n            kind = 2\n    elif kind == 1: \n        if now > A[i]:\n            ans += 1\n            kind = 0\n    else: \n        if now < A[i]:\n            ans += 1\n            kind = 0\n    now = A[i]\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14398": {"id": 14398, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnow = A[0]\nkind = 0\nans = 0\nfor i in range(1,N):\n    if kind == 0:\n        if now < A[i]:\n            kind = 1\n        elif now > A[i]:\n            kind = 2\n    elif kind == 1: \n        if now > A[i]:\n            ans += 1\n            kind = 0\n    else: \n        if now < A[i]:\n            ans += 1\n            kind = 0\n    now = A[i]\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14399": {"id": 14399, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnow = A[0]\nkind = 0\nans = 0\nfor i in range(1,N):\n    if kind == 0:\n        if now < A[i]:\n            kind = 1\n        elif now > A[i]:\n            kind = 2\n    elif kind == 1: \n        if now > A[i]:\n            ans += 1\n            kind = 0\n    else: \n        if now < A[i]:\n            ans += 1\n            kind = 0\n    now = A[i]\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14400": {"id": 14400, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nflg = 0\nans=1\nfor i in range(1,n):\n  tmp = a[i-1]\n  if a[i] == tmp:\n    pass\n  elif a[i] > tmp:\n    if flg == 1:\n      pass\n    elif flg == -1:\n      ans += 1\n      flg = 0\n    else:\n      flg = 1\n  else:\n    if flg == -1:\n      pass\n    elif flg == 1:\n      ans += 1\n      flg = 0\n    else:\n      flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14401": {"id": 14401, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflg = 0\nans=1\nfor i in range(1,n):\n  tmp = a[i-1]\n  if a[i] == tmp:\n    pass\n  elif a[i] > tmp:\n    if flg == 1:\n      pass\n    elif flg == -1:\n      ans += 1\n      flg = 0\n    else:\n      flg = 1\n  else:\n    if flg == -1:\n      pass\n    elif flg == 1:\n      ans += 1\n      flg = 0\n    else:\n      flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", "!", "!", "!", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">"]}, "14402": {"id": 14402, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflg = 0\nans=1\nfor i in range(1,n):\n  tmp = a[i-1]\n  if a[i] == tmp:\n    pass\n  elif a[i] > tmp:\n    if flg == 1:\n      pass\n    elif flg == -1:\n      ans += 1\n      flg = 0\n    else:\n      flg = 1\n  else:\n    if flg == -1:\n      pass\n    elif flg == 1:\n      ans += 1\n      flg = 0\n    else:\n      flg = -1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14403": {"id": 14403, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nlist = []\nsim=0\nfor i in range(N-1):\n  if A[i]<A[i+1]:\n    list.append(1)\n  if A[i]>A[i+1]:\n    list.append(0)\n  if A[i]==A[i+1]:\n    sim+=1\ni = 0\ncount = 0\nwhile i<N-2-sim:\n  if list[i] != list[i+1]:\n    count += 1\n    i+=1\n  i+=1\nprint(count + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14404": {"id": 14404, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nlist = []\nsim=0\nfor i in range(N-1):\n  if A[i]<A[i+1]:\n    list.append(1)\n  if A[i]>A[i+1]:\n    list.append(0)\n  if A[i]==A[i+1]:\n    sim+=1\ni = 0\ncount = 0\nwhile i<N-2-sim:\n  if list[i] != list[i+1]:\n    count += 1\n    i+=1\n  i+=1\nprint(count + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14405": {"id": 14405, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nlist = []\nsim=0\nfor i in range(N-1):\n  if A[i]<A[i+1]:\n    list.append(1)\n  if A[i]>A[i+1]:\n    list.append(0)\n  if A[i]==A[i+1]:\n    sim+=1\ni = 0\ncount = 0\nwhile i<N-2-sim:\n  if list[i] != list[i+1]:\n    count += 1\n    i+=1\n  i+=1\nprint(count + 1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14406": {"id": 14406, "code": "import sys\nsys.setrecursionlimit(1000000)\nN = 6\nA = [1, 2, 3, 2, 2, 1]\nans = 0\ndef main(i, A):\n  global N\n  global ans\n  if A[i] == A[i+1]:\n    if i == N-2:\n      ans += 1\n      return ans\n    else:\n      return main(i+1, A)\n  elif A[i] < A[i+1]:\n    while i < N-1:\n      if A[i] <= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\n  else:\n    while i < N-1:\n      if A[i] >= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\nif N == 1:\n  print(1)\nelse:\n  print(main(0, A))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", "!", "!", ">"]}, "14407": {"id": 14407, "code": "import sys\nsys.setrecursionlimit(1000000)\nN = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\ndef main(i, A):\n  global N\n  global ans\n  if A[i] == A[i+1]:\n    if i == N-2:\n      ans += 1\n      return ans\n    else:\n      return main(i+1, A)\n  elif A[i] < A[i+1]:\n    while i < N-1:\n      if A[i] <= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\n  else:\n    while i < N-1:\n      if A[i] >= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\nif N == 1:\n  print(1)\nelse:\n  print(main(0, A))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", "!", "!", ">"]}, "14408": {"id": 14408, "code": "import sys\nsys.setrecursionlimit(1000000)\nN = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\ndef main(i, A):\n  global N\n  global ans\n  if A[i] == A[i+1]:\n    if i == N-2:\n      ans += 1\n      return ans\n    else:\n      return main(i+1, A)\n  elif A[i] < A[i+1]:\n    while i < N-1:\n      if A[i] <= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\n  else:\n    while i < N-1:\n      if A[i] >= A[i+1]:\n        i += 1\n      else:\n        ans += 1\n        if i == N-2:\n          ans += 1\n          return ans\n        else:\n          return main(i+1, A)\n    else:\n      ans += 1\n      return ans\nif N == 1:\n  print(1)\nelse:\n  print(main(0, A))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", ">", ">", "!", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", "!", "!", ">", "!", "!", ">"]}, "14409": {"id": 14409, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nif n<=2:\n    print(1)\nelse:\n    status=\"U\"\n    for i in range(n):\n        if a[i+1]-a[i]<0:\n            status=\"D\"\n            break\n        elif a[i+1]-a[i]>0:\n            status=\"U\"\n            break\n    cnt=1\n    reset_flag=False\n    for i in range(n-1):\n        if reset_flag:\n            if a[i+1]-a[i]>0:\n                status=\"U\"\n                reset_flag=False\n            elif a[i+1]-a[i]<0:\n                status=\"D\"\n                reset_flag=False\n            else:\n                continue\n        elif status==\"D\" and a[i+1]-a[i]>0:\n            cnt+=1\n            reset_flag=True\n        elif status==\"U\" and a[i+1]-a[i]<0:\n            cnt+=1\n            reset_flag=True\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "14410": {"id": 14410, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n<=2:\n    print(1)\nelse:\n    status=\"U\"\n    for i in range(n):\n        if a[i+1]-a[i]<0:\n            status=\"D\"\n            break\n        elif a[i+1]-a[i]>0:\n            status=\"U\"\n            break\n    cnt=1\n    reset_flag=False\n    for i in range(n-1):\n        if reset_flag:\n            if a[i+1]-a[i]>0:\n                status=\"U\"\n                reset_flag=False\n            elif a[i+1]-a[i]<0:\n                status=\"D\"\n                reset_flag=False\n            else:\n                continue\n        elif status==\"D\" and a[i+1]-a[i]>0:\n            cnt+=1\n            reset_flag=True\n        elif status==\"U\" and a[i+1]-a[i]<0:\n            cnt+=1\n            reset_flag=True\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", "!", "!", ">", ">", ">", ">"]}, "14411": {"id": 14411, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n<=2:\n    print(1)\nelse:\n    status=\"U\"\n    for i in range(n):\n        if a[i+1]-a[i]<0:\n            status=\"D\"\n            break\n        elif a[i+1]-a[i]>0:\n            status=\"U\"\n            break\n    cnt=1\n    reset_flag=False\n    for i in range(n-1):\n        if reset_flag:\n            if a[i+1]-a[i]>0:\n                status=\"U\"\n                reset_flag=False\n            elif a[i+1]-a[i]<0:\n                status=\"D\"\n                reset_flag=False\n            else:\n                continue\n        elif status==\"D\" and a[i+1]-a[i]>0:\n            cnt+=1\n            reset_flag=True\n        elif status==\"U\" and a[i+1]-a[i]<0:\n            cnt+=1\n            reset_flag=True\n    print(cnt)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14412": {"id": 14412, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nans = 0\ni = 0\nwhile i < n:\n    while i+1 < n and a[i] == a[i+1]:\n        i += 1\n    if i+1 < n and a[i] < a[i+1]:\n        while i+1 < n and a[i] <= a[i+1]:\n            i += 1\n    elif i+1 < n and a[i] > a[i+1]:\n        while i+1 < n and a[i] >= a[i+1]:\n            i += 1\n    ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14413": {"id": 14413, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\ni = 0\nwhile i < n:\n    while i+1 < n and a[i] == a[i+1]:\n        i += 1\n    if i+1 < n and a[i] < a[i+1]:\n        while i+1 < n and a[i] <= a[i+1]:\n            i += 1\n    elif i+1 < n and a[i] > a[i+1]:\n        while i+1 < n and a[i] >= a[i+1]:\n            i += 1\n    ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14414": {"id": 14414, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\ni = 0\nwhile i < n:\n    while i+1 < n and a[i] == a[i+1]:\n        i += 1\n    if i+1 < n and a[i] < a[i+1]:\n        while i+1 < n and a[i] <= a[i+1]:\n            i += 1\n    elif i+1 < n and a[i] > a[i+1]:\n        while i+1 < n and a[i] >= a[i+1]:\n            i += 1\n    ans += 1\n    i += 1\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14415": {"id": 14415, "code": "N = 6\nAs = [1, 2, 3, 2, 2, 1]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before < As[i]:\n        if zoka == 0 or zoka == 1:\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\n    elif before > As[i]:\n        if zoka == 0 or zoka == 2:\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14416": {"id": 14416, "code": "N = 9\nAs = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before < As[i]:\n        if zoka == 0 or zoka == 1:\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\n    elif before > As[i]:\n        if zoka == 0 or zoka == 2:\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14417": {"id": 14417, "code": "N = 7\nAs = [1, 2, 3, 2, 1, 999999999, 1000000000]\nzoka = 0\nbefore = As[0]\nc = 1\nfor i in range(1,N):\n    if before < As[i]:\n        if zoka == 0 or zoka == 1:\n            zoka = 1\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\n    elif before > As[i]:\n        if zoka == 0 or zoka == 2:\n            zoka = 2\n        else:\n            c+=1\n            zoka = 0\n        before = As[i]\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14418": {"id": 14418, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nup = False\ndown = False\nans = 1\nfor i in range(1, n):\n    if up:\n        if a[i] < a[i-1]:\n            ans += 1\n            up = False\n    elif down:\n        if a[i] > a[i-1]:\n            ans += 1\n            down = False\n    else:\n        if a[i] > a[i-1]:\n            up = True\n        elif a[i] < a[i-1]:\n            down = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14419": {"id": 14419, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nup = False\ndown = False\nans = 1\nfor i in range(1, n):\n    if up:\n        if a[i] < a[i-1]:\n            ans += 1\n            up = False\n    elif down:\n        if a[i] > a[i-1]:\n            ans += 1\n            down = False\n    else:\n        if a[i] > a[i-1]:\n            up = True\n        elif a[i] < a[i-1]:\n            down = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">", "!", "!", ">"]}, "14420": {"id": 14420, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nup = False\ndown = False\nans = 1\nfor i in range(1, n):\n    if up:\n        if a[i] < a[i-1]:\n            ans += 1\n            up = False\n    elif down:\n        if a[i] > a[i-1]:\n            ans += 1\n            down = False\n    else:\n        if a[i] > a[i-1]:\n            up = True\n        elif a[i] < a[i-1]:\n            down = True\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14421": {"id": 14421, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nstatus = 0 \ncnt = 1\nfor i in range(1,N):\n    if A[i-1] < A[i]: \n        if status == 0 or status == 1:\n            status = 1\n        else:\n            status = 0\n            cnt += 1\n    elif A[i-1] > A[i]:\n        if status == 0 or status == 2:\n            status = 2\n        else:\n            status = 0\n            cnt += 1\n    else:\n        continue\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "14422": {"id": 14422, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstatus = 0 \ncnt = 1\nfor i in range(1,N):\n    if A[i-1] < A[i]: \n        if status == 0 or status == 1:\n            status = 1\n        else:\n            status = 0\n            cnt += 1\n    elif A[i-1] > A[i]:\n        if status == 0 or status == 2:\n            status = 2\n        else:\n            status = 0\n            cnt += 1\n    else:\n        continue\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", "!", "!", ">", ">", "!", "!", ">"]}, "14423": {"id": 14423, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstatus = 0 \ncnt = 1\nfor i in range(1,N):\n    if A[i-1] < A[i]: \n        if status == 0 or status == 1:\n            status = 1\n        else:\n            status = 0\n            cnt += 1\n    elif A[i-1] > A[i]:\n        if status == 0 or status == 2:\n            status = 2\n        else:\n            status = 0\n            cnt += 1\n    else:\n        continue\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">"]}, "14424": {"id": 14424, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 1\nb = [0] + a\nc = [(i-j)//abs(i-j) for i, j in zip(a, b) if i != j]\ndel c[0]\nif c:\n  mae=c[0]\n  d=iter(c)\n  for x in d:\n    if x != mae:\n      cnt += 1\n      try:\n        mae = d.__next__()\n      except StopIteration:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14425": {"id": 14425, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\nb = [0] + a\nc = [(i-j)//abs(i-j) for i, j in zip(a, b) if i != j]\ndel c[0]\nif c:\n  mae=c[0]\n  d=iter(c)\n  for x in d:\n    if x != mae:\n      cnt += 1\n      try:\n        mae = d.__next__()\n      except StopIteration:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14426": {"id": 14426, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\nb = [0] + a\nc = [(i-j)//abs(i-j) for i, j in zip(a, b) if i != j]\ndel c[0]\nif c:\n  mae=c[0]\n  d=iter(c)\n  for x in d:\n    if x != mae:\n      cnt += 1\n      try:\n        mae = d.__next__()\n      except StopIteration:\n        break\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "14427": {"id": 14427, "code": "n = 6;a = [1, 2, 3, 2, 2, 1];b = -1;x = 1\nfor i in range(n-1):\n    if b == 0:\n        if a[i] > a[i+1]: b = -1; x += 1\n    elif b == 1:\n        if a[i] < a[i+1]: b = -1; x += 1\n    else:\n        if a[i] < a[i+1]: b = 0\n        elif a[i] > a[i+1]: b = 1\nprint(x)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14428": {"id": 14428, "code": "n = 9;a = [1, 2, 1, 2, 1, 2, 1, 2, 1];b = -1;x = 1\nfor i in range(n-1):\n    if b == 0:\n        if a[i] > a[i+1]: b = -1; x += 1\n    elif b == 1:\n        if a[i] < a[i+1]: b = -1; x += 1\n    else:\n        if a[i] < a[i+1]: b = 0\n        elif a[i] > a[i+1]: b = 1\nprint(x)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", "!", ">"]}, "14429": {"id": 14429, "code": "n = 7;a = [1, 2, 3, 2, 1, 999999999, 1000000000];b = -1;x = 1\nfor i in range(n-1):\n    if b == 0:\n        if a[i] > a[i+1]: b = -1; x += 1\n    elif b == 1:\n        if a[i] < a[i+1]: b = -1; x += 1\n    else:\n        if a[i] < a[i+1]: b = 0\n        elif a[i] > a[i+1]: b = 1\nprint(x)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14430": {"id": 14430, "code": "n = 6\nL = [1, 2, 3, 2, 2, 1]\nif n == 1:\n    print(1)\n    exit()\nd = [0] * (n - 1)\nif (L[0] > L[1]):\n    d[0] = -1\nelif (L[0] < L[1]):\n    d[0] = 1\nfor i in range(n):\n    if (i == 0):\n        continue\n    elif (i == n - 1):\n        break\n    else:\n        if (L[i] < L[i + 1]):\n            d[i] = 1\n        elif (L[i] > L[i + 1]):\n            d[i] = -1\nprev = 0\ncount = 0\nfor i in range(len(d)):\n    if (i == 0):\n        prev = d[i]\n        continue\n    if (prev == 1):\n        if (d[i] == 1):\n            continue\n        elif (d[i] == 0):\n            continue\n        else:\n            count += 1\n            prev = 0\n    elif (prev == -1):\n        if (d[i] == -1):\n            continue\n        elif (d[i] == 0):\n            continue\n        else:\n            count += 1\n            prev = 0\n    elif (prev == 0):\n        if (d[i] == 1):\n            prev = 1\n        elif (d[i] == -1):\n            prev = -1\nprint(count + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", "!", ">", ">", ">"]}, "14431": {"id": 14431, "code": "n = 7\nL = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n == 1:\n    print(1)\n    exit()\nd = [0] * (n - 1)\nif (L[0] > L[1]):\n    d[0] = -1\nelif (L[0] < L[1]):\n    d[0] = 1\nfor i in range(n):\n    if (i == 0):\n        continue\n    elif (i == n - 1):\n        break\n    else:\n        if (L[i] < L[i + 1]):\n            d[i] = 1\n        elif (L[i] > L[i + 1]):\n            d[i] = -1\nprev = 0\ncount = 0\nfor i in range(len(d)):\n    if (i == 0):\n        prev = d[i]\n        continue\n    if (prev == 1):\n        if (d[i] == 1):\n            continue\n        elif (d[i] == 0):\n            continue\n        else:\n            count += 1\n            prev = 0\n    elif (prev == -1):\n        if (d[i] == -1):\n            continue\n        elif (d[i] == 0):\n            continue\n        else:\n            count += 1\n            prev = 0\n    elif (prev == 0):\n        if (d[i] == 1):\n            prev = 1\n        elif (d[i] == -1):\n            prev = -1\nprint(count + 1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14432": {"id": 14432, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncnt = 1\ntop = True\nfor i in range(1,N):\n    if A[i] == A[i-1]:\n        continue\n    if top == True:\n        inc = (A[i]>A[i-1])\n        top = False\n        continue\n    flag = (A[i]>A[i-1])\n    if inc != flag:\n        cnt += 1\n        top = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14433": {"id": 14433, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ntop = True\nfor i in range(1,N):\n    if A[i] == A[i-1]:\n        continue\n    if top == True:\n        inc = (A[i]>A[i-1])\n        top = False\n        continue\n    flag = (A[i]>A[i-1])\n    if inc != flag:\n        cnt += 1\n        top = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14434": {"id": 14434, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ntop = True\nfor i in range(1,N):\n    if A[i] == A[i-1]:\n        continue\n    if top == True:\n        inc = (A[i]>A[i-1])\n        top = False\n        continue\n    flag = (A[i]>A[i-1])\n    if inc != flag:\n        cnt += 1\n        top = True\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14435": {"id": 14435, "code": "n = 6\nls = [1, 2, 3, 2, 2, 1]\ncnt = 1\ni = 0\nflag = 10\nwhile i < n-1:\n    if ls[i] < ls[i+1] and flag == 10:\n        flag = True\n    elif ls[i] > ls[i+1] and flag == 10:\n        flag = False\n    if flag == True:\n        if ls[i] > ls[i+1]:\n            cnt += 1\n            flag = 10\n    elif flag == False:\n        if ls[i] < ls[i+1]:\n            cnt += 1\n            flag = 10\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14436": {"id": 14436, "code": "n = 9\nls = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 1\ni = 0\nflag = 10\nwhile i < n-1:\n    if ls[i] < ls[i+1] and flag == 10:\n        flag = True\n    elif ls[i] > ls[i+1] and flag == 10:\n        flag = False\n    if flag == True:\n        if ls[i] > ls[i+1]:\n            cnt += 1\n            flag = 10\n    elif flag == False:\n        if ls[i] < ls[i+1]:\n            cnt += 1\n            flag = 10\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14437": {"id": 14437, "code": "n = 7\nls = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 1\ni = 0\nflag = 10\nwhile i < n-1:\n    if ls[i] < ls[i+1] and flag == 10:\n        flag = True\n    elif ls[i] > ls[i+1] and flag == 10:\n        flag = False\n    if flag == True:\n        if ls[i] > ls[i+1]:\n            cnt += 1\n            flag = 10\n    elif flag == False:\n        if ls[i] < ls[i+1]:\n            cnt += 1\n            flag = 10\n    i += 1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14438": {"id": 14438, "code": "def main():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    res = 1\n    plus = 0\n    minus = 0\n    for i in range(n-1):\n        if a[i + 1] - a[i] > 0:\n            plus += 1\n        elif a[i + 1] - a[i] < 0:\n            minus += 1\n        if plus and minus:\n            res += 1\n            plus = 0\n            minus = 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14439": {"id": 14439, "code": "def main():\n    n = 9\n    a = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    res = 1\n    plus = 0\n    minus = 0\n    for i in range(n-1):\n        if a[i + 1] - a[i] > 0:\n            plus += 1\n        elif a[i + 1] - a[i] < 0:\n            minus += 1\n        if plus and minus:\n            res += 1\n            plus = 0\n            minus = 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14440": {"id": 14440, "code": "def main():\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    res = 1\n    plus = 0\n    minus = 0\n    for i in range(n-1):\n        if a[i + 1] - a[i] > 0:\n            plus += 1\n        elif a[i + 1] - a[i] < 0:\n            minus += 1\n        if plus and minus:\n            res += 1\n            plus = 0\n            minus = 0\n    print(res)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14441": {"id": 14441, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ncount = 1\nincrease = False\ndecrease = False\nfor i in range(1,N):\n    if A[i-1] == A[i]:\n        continue\n    elif increase and A[i-1] < A[i]:\n        continue\n    elif decrease and A[i-1] > A[i]:\n        continue\n    elif not increase and not decrease and A[i-1] < A[i]:\n        increase = True\n    elif not increase and not decrease and A[i-1] > A[i]:\n        decrease = True\n    else:\n        count += 1\n        increase = False\n        decrease = False\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14442": {"id": 14442, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncount = 1\nincrease = False\ndecrease = False\nfor i in range(1,N):\n    if A[i-1] == A[i]:\n        continue\n    elif increase and A[i-1] < A[i]:\n        continue\n    elif decrease and A[i-1] > A[i]:\n        continue\n    elif not increase and not decrease and A[i-1] < A[i]:\n        increase = True\n    elif not increase and not decrease and A[i-1] > A[i]:\n        decrease = True\n    else:\n        count += 1\n        increase = False\n        decrease = False\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14443": {"id": 14443, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncount = 1\nincrease = False\ndecrease = False\nfor i in range(1,N):\n    if A[i-1] == A[i]:\n        continue\n    elif increase and A[i-1] < A[i]:\n        continue\n    elif decrease and A[i-1] > A[i]:\n        continue\n    elif not increase and not decrease and A[i-1] < A[i]:\n        increase = True\n    elif not increase and not decrease and A[i-1] > A[i]:\n        decrease = True\n    else:\n        count += 1\n        increase = False\n        decrease = False\nprint(count)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14444": {"id": 14444, "code": "n = 6\na_l = [1, 2, 3, 2, 2, 1]\nnum = 1\nflag = -1 \nfor i in range(1,n):\n    if a_l[i] > a_l[i-1]:\n        new_flag = 0\n    elif a_l[i] < a_l[i-1]:\n        new_flag = 1\n    else:\n        continue\n    if new_flag != flag:\n        if flag == -1:\n            flag = new_flag\n        else:\n            flag = -1\n            num += 1\nprint(max(num,1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "14445": {"id": 14445, "code": "n = 9\na_l = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nnum = 1\nflag = -1 \nfor i in range(1,n):\n    if a_l[i] > a_l[i-1]:\n        new_flag = 0\n    elif a_l[i] < a_l[i-1]:\n        new_flag = 1\n    else:\n        continue\n    if new_flag != flag:\n        if flag == -1:\n            flag = new_flag\n        else:\n            flag = -1\n            num += 1\nprint(max(num,1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "14446": {"id": 14446, "code": "n = 7\na_l = [1, 2, 3, 2, 1, 999999999, 1000000000]\nnum = 1\nflag = -1 \nfor i in range(1,n):\n    if a_l[i] > a_l[i-1]:\n        new_flag = 0\n    elif a_l[i] < a_l[i-1]:\n        new_flag = 1\n    else:\n        continue\n    if new_flag != flag:\n        if flag == -1:\n            flag = new_flag\n        else:\n            flag = -1\n            num += 1\nprint(max(num,1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", ">", ">", ">"]}, "14447": {"id": 14447, "code": "import sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial\ndef solve():\n    n = 6\n    a = [1, 2, 3, 2, 2, 1]\n    b = []\n    p = 0\n    for e in a:\n        if p != e:\n            b.append(e)\n        p = e\n    a = b\n    n = len(b)\n    ans = 0\n    i = 0\n    while i < n:\n        ans += 1\n        if i + 1 == n: break\n        else:\n            if a[i] < a[i+1]:\n                while i + 1 < n and a[i] < a[i+1]:\n                    i += 1\n                i += 1\n            else:\n                while i + 1 < n and a[i] > a[i+1]:\n                    i += 1\n                i += 1\n    print(ans)\nt = 1\nfor case in range(1,t+1):\n    ans = solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14448": {"id": 14448, "code": "import sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial\ndef solve():\n    n = 7\n    a = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    b = []\n    p = 0\n    for e in a:\n        if p != e:\n            b.append(e)\n        p = e\n    a = b\n    n = len(b)\n    ans = 0\n    i = 0\n    while i < n:\n        ans += 1\n        if i + 1 == n: break\n        else:\n            if a[i] < a[i+1]:\n                while i + 1 < n and a[i] < a[i+1]:\n                    i += 1\n                i += 1\n            else:\n                while i + 1 < n and a[i] > a[i+1]:\n                    i += 1\n                i += 1\n    print(ans)\nt = 1\nfor case in range(1,t+1):\n    ans = solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "14449": {"id": 14449, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nk = 1\nx = y = 0\nc = A[0]\nfor i in A[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14450": {"id": 14450, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nk = 1\nx = y = 0\nc = A[0]\nfor i in A[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14451": {"id": 14451, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nk = 1\nx = y = 0\nc = A[0]\nfor i in A[1:]:\n    if c < i:\n        x = 1\n    elif c > i:\n        y = 1\n    if x == 1 and y == 1:\n        k += 1\n        x = y = 0\n    c = i\nprint(k)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14452": {"id": 14452, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\nif n<=2:\n  print(1)\n  exit()\ncnt=0\nif l[0]>l[1]:\n  ans=\"low\"\nelif l[0]<l[1]:\n  ans=\"high\"\nelse:\n  ans=\"even\"\nfor i in range(2,n):\n  if l[i-1]>l[i] and (ans==\"low\" or ans==\"even\"):\n    ans=\"low\"\n  elif l[i-1]<l[i] and (ans==\"high\" or ans==\"even\"):\n    ans=\"high\"\n  elif l[i-1]==l[i]:\n    continue\n  else:\n    cnt+=1\n    ans=\"even\"\nprint(cnt+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14453": {"id": 14453, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif n<=2:\n  print(1)\n  exit()\ncnt=0\nif l[0]>l[1]:\n  ans=\"low\"\nelif l[0]<l[1]:\n  ans=\"high\"\nelse:\n  ans=\"even\"\nfor i in range(2,n):\n  if l[i-1]>l[i] and (ans==\"low\" or ans==\"even\"):\n    ans=\"low\"\n  elif l[i-1]<l[i] and (ans==\"high\" or ans==\"even\"):\n    ans=\"high\"\n  elif l[i-1]==l[i]:\n    continue\n  else:\n    cnt+=1\n    ans=\"even\"\nprint(cnt+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14454": {"id": 14454, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif n<=2:\n  print(1)\n  exit()\ncnt=0\nif l[0]>l[1]:\n  ans=\"low\"\nelif l[0]<l[1]:\n  ans=\"high\"\nelse:\n  ans=\"even\"\nfor i in range(2,n):\n  if l[i-1]>l[i] and (ans==\"low\" or ans==\"even\"):\n    ans=\"low\"\n  elif l[i-1]<l[i] and (ans==\"high\" or ans==\"even\"):\n    ans=\"high\"\n  elif l[i-1]==l[i]:\n    continue\n  else:\n    cnt+=1\n    ans=\"even\"\nprint(cnt+1)", "coverage": [">", ">", ">", "!", "!", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "14455": {"id": 14455, "code": "N = 6\npre = None\nis_inc = None\nans = 1\nfor num in list(map(int, \"1 2 3 2 2 1\".split())):\n    if pre is None:\n        pre = num\n        continue\n    if is_inc is None and num > pre:\n        is_inc = True\n    elif is_inc is None and num < pre:\n        is_inc = False\n    elif (is_inc and num < pre) or (not is_inc and num > pre):\n        ans += 1\n        is_inc = None\n    pre = num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14456": {"id": 14456, "code": "N = 9\npre = None\nis_inc = None\nans = 1\nfor num in list(map(int, \"1 2 1 2 1 2 1 2 1\".split())):\n    if pre is None:\n        pre = num\n        continue\n    if is_inc is None and num > pre:\n        is_inc = True\n    elif is_inc is None and num < pre:\n        is_inc = False\n    elif (is_inc and num < pre) or (not is_inc and num > pre):\n        ans += 1\n        is_inc = None\n    pre = num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "14457": {"id": 14457, "code": "N = 7\npre = None\nis_inc = None\nans = 1\nfor num in list(map(int, \"1 2 3 2 1 999999999 1000000000\".split())):\n    if pre is None:\n        pre = num\n        continue\n    if is_inc is None and num > pre:\n        is_inc = True\n    elif is_inc is None and num < pre:\n        is_inc = False\n    elif (is_inc and num < pre) or (not is_inc and num > pre):\n        ans += 1\n        is_inc = None\n    pre = num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14458": {"id": 14458, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\ni = 0\nans = 0\nfor a in A:\n  right, right2 = i, i\n  while right+1 < N and A[right] <= A[right+1]: right += 1\n  while right2+1 < N and A[right2] >= A[right2+1]: right2 += 1\n  i = max(right, right2) + 1\n  ans += 1\n  if i >= N: break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14459": {"id": 14459, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ni = 0\nans = 0\nfor a in A:\n  right, right2 = i, i\n  while right+1 < N and A[right] <= A[right+1]: right += 1\n  while right2+1 < N and A[right2] >= A[right2+1]: right2 += 1\n  i = max(right, right2) + 1\n  ans += 1\n  if i >= N: break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14460": {"id": 14460, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni = 0\nans = 0\nfor a in A:\n  right, right2 = i, i\n  while right+1 < N and A[right] <= A[right+1]: right += 1\n  while right2+1 < N and A[right2] >= A[right2+1]: right2 += 1\n  i = max(right, right2) + 1\n  ans += 1\n  if i >= N: break\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14461": {"id": 14461, "code": "def solve():\n    n = 6\n    A = [1, 2, 3, 2, 2, 1]\n    ans = 0\n    cur = []\n    flag = None\n    for a in A:\n        if not cur:\n            cur.append(a)\n            continue\n        elif cur[-1] == a:\n            cur.append(a)\n        elif flag is None:\n            if cur[-1] > a:\n                flag = False\n            elif cur[-1] < a:\n                flag = True\n            cur.append(a)\n            continue\n        elif flag:  \n            if cur[-1] > a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n        elif not flag:  \n            if cur[-1] < a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n    if cur:\n        ans += 1\n    print(ans)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14462": {"id": 14462, "code": "def solve():\n    n = 9\n    A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n    ans = 0\n    cur = []\n    flag = None\n    for a in A:\n        if not cur:\n            cur.append(a)\n            continue\n        elif cur[-1] == a:\n            cur.append(a)\n        elif flag is None:\n            if cur[-1] > a:\n                flag = False\n            elif cur[-1] < a:\n                flag = True\n            cur.append(a)\n            continue\n        elif flag:  \n            if cur[-1] > a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n        elif not flag:  \n            if cur[-1] < a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n    if cur:\n        ans += 1\n    print(ans)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">", ">", ">", ">"]}, "14463": {"id": 14463, "code": "def solve():\n    n = 7\n    A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n    ans = 0\n    cur = []\n    flag = None\n    for a in A:\n        if not cur:\n            cur.append(a)\n            continue\n        elif cur[-1] == a:\n            cur.append(a)\n        elif flag is None:\n            if cur[-1] > a:\n                flag = False\n            elif cur[-1] < a:\n                flag = True\n            cur.append(a)\n            continue\n        elif flag:  \n            if cur[-1] > a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n        elif not flag:  \n            if cur[-1] < a:\n                ans += 1\n                cur = [a]\n                flag = None\n            else:\n                cur.append(a)\n    if cur:\n        ans += 1\n    print(ans)\nsolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "14464": {"id": 14464, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nprev = A[0]\nisUp = True\nisDown = True\nans = 0\nfor a in A[1:]:\n  if prev == a:\n    pass\n  elif prev < a:\n    isDown = False\n    if not isUp:\n      isUp = True\n      isDown = True\n      ans += 1\n  elif a < prev:\n    isUp = False\n    if not isDown:\n      isUp = True\n      isDown = True\n      ans += 1\n  prev = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14465": {"id": 14465, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nprev = A[0]\nisUp = True\nisDown = True\nans = 0\nfor a in A[1:]:\n  if prev == a:\n    pass\n  elif prev < a:\n    isDown = False\n    if not isUp:\n      isUp = True\n      isDown = True\n      ans += 1\n  elif a < prev:\n    isUp = False\n    if not isDown:\n      isUp = True\n      isDown = True\n      ans += 1\n  prev = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14466": {"id": 14466, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nprev = A[0]\nisUp = True\nisDown = True\nans = 0\nfor a in A[1:]:\n  if prev == a:\n    pass\n  elif prev < a:\n    isDown = False\n    if not isUp:\n      isUp = True\n      isDown = True\n      ans += 1\n  elif a < prev:\n    isUp = False\n    if not isDown:\n      isUp = True\n      isDown = True\n      ans += 1\n  prev = a\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14467": {"id": 14467, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nsw=\"1\"\nans=1\nfor i in range(N-1):\n    if sw==\"1\":\n        if A[i]>A[i+1]:\n            sw=\"2\"\n        if A[i]<A[i+1]:\n            sw=\"3\"\n    elif sw==\"2\":\n        if A[i]<A[i+1]:\n            ans+=1\n            sw=\"1\"\n    elif sw==\"3\":\n        if A[i]>A[i+1]:\n            ans+=1\n            sw=\"1\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14468": {"id": 14468, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nsw=\"1\"\nans=1\nfor i in range(N-1):\n    if sw==\"1\":\n        if A[i]>A[i+1]:\n            sw=\"2\"\n        if A[i]<A[i+1]:\n            sw=\"3\"\n    elif sw==\"2\":\n        if A[i]<A[i+1]:\n            ans+=1\n            sw=\"1\"\n    elif sw==\"3\":\n        if A[i]>A[i+1]:\n            ans+=1\n            sw=\"1\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "14469": {"id": 14469, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nsw=\"1\"\nans=1\nfor i in range(N-1):\n    if sw==\"1\":\n        if A[i]>A[i+1]:\n            sw=\"2\"\n        if A[i]<A[i+1]:\n            sw=\"3\"\n    elif sw==\"2\":\n        if A[i]<A[i+1]:\n            ans+=1\n            sw=\"1\"\n    elif sw==\"3\":\n        if A[i]>A[i+1]:\n            ans+=1\n            sw=\"1\"\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14470": {"id": 14470, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nc = 1\nd = 0\nfor i in range(n-1):\n  if a[i] == a[i+1]:\n    pass\n  elif a[i] < a[i+1]:\n    if d < 0:\n      d = 0\n      c += 1\n    else:\n      d += 1\n  else:\n    if d > 0:\n      d = 0\n      c += 1\n    else:\n      d -= 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14471": {"id": 14471, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nc = 1\nd = 0\nfor i in range(n-1):\n  if a[i] == a[i+1]:\n    pass\n  elif a[i] < a[i+1]:\n    if d < 0:\n      d = 0\n      c += 1\n    else:\n      d += 1\n  else:\n    if d > 0:\n      d = 0\n      c += 1\n    else:\n      d -= 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", "!", ">", "!", ">", ">", ">", "!", "!", ">"]}, "14472": {"id": 14472, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nc = 1\nd = 0\nfor i in range(n-1):\n  if a[i] == a[i+1]:\n    pass\n  elif a[i] < a[i+1]:\n    if d < 0:\n      d = 0\n      c += 1\n    else:\n      d += 1\n  else:\n    if d > 0:\n      d = 0\n      c += 1\n    else:\n      d -= 1\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", "!", ">", ">"]}, "14473": {"id": 14473, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ni=0\ncnt=0\ntmp=[]\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        tmp.append(1)\n    elif a[i]==a[i-1]:\n        tmp.append(0)\n    else:\n        tmp.append(-1)\nflg=0\nswi=0\nfor j in range(len(tmp)):\n    if swi==1:\n        flg=tmp[j]\n        swi=0\n        continue\n    if flg==0:\n        flg=tmp[j]\n    elif flg==1:\n        if tmp[j]==-1:\n            cnt+=1\n            flg=-1\n            swi=1\n    elif flg==-1:\n        if tmp[j]==1:\n            cnt+=1\n            flg=1\n            swi=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">"]}, "14474": {"id": 14474, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ni=0\ncnt=0\ntmp=[]\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        tmp.append(1)\n    elif a[i]==a[i-1]:\n        tmp.append(0)\n    else:\n        tmp.append(-1)\nflg=0\nswi=0\nfor j in range(len(tmp)):\n    if swi==1:\n        flg=tmp[j]\n        swi=0\n        continue\n    if flg==0:\n        flg=tmp[j]\n    elif flg==1:\n        if tmp[j]==-1:\n            cnt+=1\n            flg=-1\n            swi=1\n    elif flg==-1:\n        if tmp[j]==1:\n            cnt+=1\n            flg=1\n            swi=1\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14475": {"id": 14475, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt = 0\nif n == 1:\n  print (1)\n  exit()\nc = 0\nfor i in range(n-1):\n  if c == 2 and a[i+1] < a[i]:\n    cnt += 1\n    c = -1\n  elif c == 1 and a[i+1] > a[i]:\n    cnt += 1\n    c = -1\n  else:\n    if c < 1:\n      if a[i+1] > a[i]:\n        c = 2\n      elif a[i+1] == a[i]:\n        c = 0\n      else:\n        c = 1\nprint (cnt+1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">", "!", ">", ">"]}, "14476": {"id": 14476, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt = 0\nif n == 1:\n  print (1)\n  exit()\nc = 0\nfor i in range(n-1):\n  if c == 2 and a[i+1] < a[i]:\n    cnt += 1\n    c = -1\n  elif c == 1 and a[i+1] > a[i]:\n    cnt += 1\n    c = -1\n  else:\n    if c < 1:\n      if a[i+1] > a[i]:\n        c = 2\n      elif a[i+1] == a[i]:\n        c = 0\n      else:\n        c = 1\nprint (cnt+1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14477": {"id": 14477, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt = 0\nif n == 1:\n  print (1)\n  exit()\nc = 0\nfor i in range(n-1):\n  if c == 2 and a[i+1] < a[i]:\n    cnt += 1\n    c = -1\n  elif c == 1 and a[i+1] > a[i]:\n    cnt += 1\n    c = -1\n  else:\n    if c < 1:\n      if a[i+1] > a[i]:\n        c = 2\n      elif a[i+1] == a[i]:\n        c = 0\n      else:\n        c = 1\nprint (cnt+1)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", "!", ">", ">"]}, "14478": {"id": 14478, "code": "def main():\n  N = 6\n  A = [1, 2, 3, 2, 2, 1]\n  ans = 1\n  x=y=0\n  for i in range(1, N):\n    if A[i - 1] < A[i]:\n      x = 1\n    if A[i - 1] > A[i]:\n      y = 1\n    if x and y:\n      ans += 1\n      x = y = 0\n  print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14479": {"id": 14479, "code": "def main():\n  N = 9\n  A = [1, 2, 1, 2, 1, 2, 1, 2, 1]\n  ans = 1\n  x=y=0\n  for i in range(1, N):\n    if A[i - 1] < A[i]:\n      x = 1\n    if A[i - 1] > A[i]:\n      y = 1\n    if x and y:\n      ans += 1\n      x = y = 0\n  print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14480": {"id": 14480, "code": "def main():\n  N = 7\n  A = [1, 2, 3, 2, 1, 999999999, 1000000000]\n  ans = 1\n  x=y=0\n  for i in range(1, N):\n    if A[i - 1] < A[i]:\n      x = 1\n    if A[i - 1] > A[i]:\n      y = 1\n    if x and y:\n      ans += 1\n      x = y = 0\n  print(ans)\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14481": {"id": 14481, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ncnt,i = 0,0\nwhile i<n:\n    while i+1<n and a[i]==a[i+1]: i+=1\n    if i+1<n and a[i]<a[i+1]:\n        while i+1<n and a[i]<=a[i+1]: i+=1\n    elif i+1<n and a[i]>a[i+1]:\n        while i+1<n and a[i]>=a[i+1]: i+=1\n    cnt+=1\n    i+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14482": {"id": 14482, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ncnt,i = 0,0\nwhile i<n:\n    while i+1<n and a[i]==a[i+1]: i+=1\n    if i+1<n and a[i]<a[i+1]:\n        while i+1<n and a[i]<=a[i+1]: i+=1\n    elif i+1<n and a[i]>a[i+1]:\n        while i+1<n and a[i]>=a[i+1]: i+=1\n    cnt+=1\n    i+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "14483": {"id": 14483, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ncnt,i = 0,0\nwhile i<n:\n    while i+1<n and a[i]==a[i+1]: i+=1\n    if i+1<n and a[i]<a[i+1]:\n        while i+1<n and a[i]<=a[i+1]: i+=1\n    elif i+1<n and a[i]>a[i+1]:\n        while i+1<n and a[i]>=a[i+1]: i+=1\n    cnt+=1\n    i+=1\nprint(cnt)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14484": {"id": 14484, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\nstatus = 0\nans = 1\nfor i in range(1, n):\n    if status == 0:\n        if a[i-1] < a[i]:\n            status = 1\n        elif a[i-1] > a[i]:\n            status = 2\n    elif status == 1:\n        if a[i-1] > a[i]:\n            ans += 1\n            status = 0\n    elif status == 2:\n        if a[i-1] < a[i]:\n            ans += 1\n            status = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14485": {"id": 14485, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nstatus = 0\nans = 1\nfor i in range(1, n):\n    if status == 0:\n        if a[i-1] < a[i]:\n            status = 1\n        elif a[i-1] > a[i]:\n            status = 2\n    elif status == 1:\n        if a[i-1] > a[i]:\n            ans += 1\n            status = 0\n    elif status == 2:\n        if a[i-1] < a[i]:\n            ans += 1\n            status = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14486": {"id": 14486, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\nstatus = 0\nans = 1\nfor i in range(1, n):\n    if status == 0:\n        if a[i-1] < a[i]:\n            status = 1\n        elif a[i-1] > a[i]:\n            status = 2\n    elif status == 1:\n        if a[i-1] > a[i]:\n            ans += 1\n            status = 0\n    elif status == 2:\n        if a[i-1] < a[i]:\n            ans += 1\n            status = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "14487": {"id": 14487, "code": "n = 6\na = [1, 2, 3, 2, 2, 1]\ntrend = 0\ncnt = 0\nfor i in range(1,n):\n    if trend == 0:\n        if a[i-1] == a[i]:\n            pass\n        elif a[i-1] < a[i]:\n            trend = 1\n        else:\n            trend = -1\n    elif trend == 1:\n        if a[i-1] > a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\n    else:\n        if a[i-1] < a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14488": {"id": 14488, "code": "n = 9\na = [1, 2, 1, 2, 1, 2, 1, 2, 1]\ntrend = 0\ncnt = 0\nfor i in range(1,n):\n    if trend == 0:\n        if a[i-1] == a[i]:\n            pass\n        elif a[i-1] < a[i]:\n            trend = 1\n        else:\n            trend = -1\n    elif trend == 1:\n        if a[i-1] > a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\n    else:\n        if a[i-1] < a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">", ">"]}, "14489": {"id": 14489, "code": "n = 7\na = [1, 2, 3, 2, 1, 999999999, 1000000000]\ntrend = 0\ncnt = 0\nfor i in range(1,n):\n    if trend == 0:\n        if a[i-1] == a[i]:\n            pass\n        elif a[i-1] < a[i]:\n            trend = 1\n        else:\n            trend = -1\n    elif trend == 1:\n        if a[i-1] > a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\n    else:\n        if a[i-1] < a[i]:\n            trend = 0\n            cnt += 1\n        else:\n            pass\nprint(cnt+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", "!", ">", ">"]}, "14490": {"id": 14490, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nif N<=2:\n    ans=1\nelse:\n    ans=1\n    count=(A[0]<A[1])-(A[0]>A[1])\n    i=2\n    while i<N:\n        if count*((A[i-1]<A[i])-(A[i-1]>A[i]))<0:\n            ans+=1\n            count=0\n        else:\n            if count==0:\n                count=(A[i-1]<A[i])-(A[i-1]>A[i])\n        i+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14491": {"id": 14491, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nif N<=2:\n    ans=1\nelse:\n    ans=1\n    count=(A[0]<A[1])-(A[0]>A[1])\n    i=2\n    while i<N:\n        if count*((A[i-1]<A[i])-(A[i-1]>A[i]))<0:\n            ans+=1\n            count=0\n        else:\n            if count==0:\n                count=(A[i-1]<A[i])-(A[i-1]>A[i])\n        i+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14492": {"id": 14492, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nif N<=2:\n    ans=1\nelse:\n    ans=1\n    count=(A[0]<A[1])-(A[0]>A[1])\n    i=2\n    while i<N:\n        if count*((A[i-1]<A[i])-(A[i-1]>A[i]))<0:\n            ans+=1\n            count=0\n        else:\n            if count==0:\n                count=(A[i-1]<A[i])-(A[i-1]>A[i])\n        i+=1\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">"]}, "14493": {"id": 14493, "code": "N = 6\nA = [1, 2, 3, 2, 2, 1]\nflag=0 \ncnt=0\nfor i in range(N-1):\n    if A[i+1]-A[i] >0:\n        if flag ==1:\n            continue\n        elif flag ==-1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =1\n    elif A[i+1]-A[i] <0:\n        if flag ==-1:\n            continue\n        elif flag ==1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =-1\n    elif A[i+1]-A[i] ==0:\n        if flag == 0:\n            flag = 0\n        elif flag ==1:\n            flag =1\n        elif flag ==-1:\n            flag =-1\nprint(cnt+1) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "14494": {"id": 14494, "code": "N = 9\nA = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nflag=0 \ncnt=0\nfor i in range(N-1):\n    if A[i+1]-A[i] >0:\n        if flag ==1:\n            continue\n        elif flag ==-1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =1\n    elif A[i+1]-A[i] <0:\n        if flag ==-1:\n            continue\n        elif flag ==1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =-1\n    elif A[i+1]-A[i] ==0:\n        if flag == 0:\n            flag = 0\n        elif flag ==1:\n            flag =1\n        elif flag ==-1:\n            flag =-1\nprint(cnt+1) ", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14495": {"id": 14495, "code": "N = 7\nA = [1, 2, 3, 2, 1, 999999999, 1000000000]\nflag=0 \ncnt=0\nfor i in range(N-1):\n    if A[i+1]-A[i] >0:\n        if flag ==1:\n            continue\n        elif flag ==-1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =1\n    elif A[i+1]-A[i] <0:\n        if flag ==-1:\n            continue\n        elif flag ==1:\n            flag =0\n            cnt+=1\n        elif flag ==0:\n            flag =-1\n    elif A[i+1]-A[i] ==0:\n        if flag == 0:\n            flag = 0\n        elif flag ==1:\n            flag =1\n        elif flag ==-1:\n            flag =-1\nprint(cnt+1) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", "!", "!", ">"]}, "14496": {"id": 14496, "code": "n = 6\nl = [1, 2, 3, 2, 2, 1]\nans = 0\nnow = 0\nm = 0\nc = 0\nfor i in l:\n    if now == 0:\n        now = i\n    else:\n        if m == 0:\n            if now < i:\n                m = 1\n            elif now > i:\n                m = -1\n        elif m == 1:\n            if now > i:\n                ans += 1\n                m = 0\n        else:\n            if now < i:\n                ans += 1\n                m = 0\n        now = i\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14497": {"id": 14497, "code": "n = 9\nl = [1, 2, 1, 2, 1, 2, 1, 2, 1]\nans = 0\nnow = 0\nm = 0\nc = 0\nfor i in l:\n    if now == 0:\n        now = i\n    else:\n        if m == 0:\n            if now < i:\n                m = 1\n            elif now > i:\n                m = -1\n        elif m == 1:\n            if now > i:\n                ans += 1\n                m = 0\n        else:\n            if now < i:\n                ans += 1\n                m = 0\n        now = i\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "14498": {"id": 14498, "code": "n = 7\nl = [1, 2, 3, 2, 1, 999999999, 1000000000]\nans = 0\nnow = 0\nm = 0\nc = 0\nfor i in l:\n    if now == 0:\n        now = i\n    else:\n        if m == 0:\n            if now < i:\n                m = 1\n            elif now > i:\n                m = -1\n        elif m == 1:\n            if now > i:\n                ans += 1\n                m = 0\n        else:\n            if now < i:\n                ans += 1\n                m = 0\n        now = i\nprint(ans+1)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "13665": {"id": 13665, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;k = 30\nh = ((H2-1)-H1)*60\nm = (M2+60)-M1\nprint((h+m)-k)", "coverage": [">", ">", ">", ">"]}, "13666": {"id": 13666, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;k = 120\nh = ((H2-1)-H1)*60\nm = (M2+60)-M1\nprint((h+m)-k)", "coverage": [">", ">", ">", ">"]}, "13667": {"id": 13667, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nst = h1 * 60 + m1\nen = h2 * 60 + m2\nprint(max(0, en - st - k))", "coverage": [">", ">", ">", ">"]}, "13668": {"id": 13668, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nst = h1 * 60 + m1\nen = h2 * 60 + m2\nprint(max(0, en - st - k))", "coverage": [">", ">", ">", ">"]}, "13669": {"id": 13669, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nt = c*60+d - (a*60+b)\nprint(max(0,t-k))", "coverage": [">", ">", ">"]}, "13670": {"id": 13670, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nt = c*60+d - (a*60+b)\nprint(max(0,t-k))", "coverage": [">", ">", ">"]}, "13671": {"id": 13671, "code": "import sys\ndef input(): return \"10 0 15 0 30\".rstrip()\ndef main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print(h2*60+m2-h1*60-m1-k)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13672": {"id": 13672, "code": "import sys\ndef input(): return \"10 0 12 0 120\".rstrip()\ndef main():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    print(h2*60+m2-h1*60-m1-k)\nif __name__=='__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13673": {"id": 13673, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;s = 30\nm = 60 * (h2 - h1) + (m2 - m1)\nprint(m - s)", "coverage": [">", ">", ">"]}, "13674": {"id": 13674, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;s = 120\nm = 60 * (h2 - h1) + (m2 - m1)\nprint(m - s)", "coverage": [">", ">", ">"]}, "13675": {"id": 13675, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    minuts = (H2 - H1) * 60 + (M2 - M1)\n    print(minuts - K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13676": {"id": 13676, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    minuts = (H2 - H1) * 60 + (M2 - M1)\n    print(minuts - K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "13677": {"id": 13677, "code": "import sys\ninput = sys.stdin.readline\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nminute = (h2 - h1) * 60 + (m2 -m1)\nprint(minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "13678": {"id": 13678, "code": "import sys\ninput = sys.stdin.readline\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nminute = (h2 - h1) * 60 + (m2 -m1)\nprint(minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "13679": {"id": 13679, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndh = h2 - h1\ndm = m2 - m1\nif dm < 0:\n    dh -= 1\n    dm += 60\nwm = dh*60 + dm\nans = wm - k\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13680": {"id": 13680, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndh = h2 - h1\ndm = m2 - m1\nif dm < 0:\n    dh -= 1\n    dm += 60\nwm = dh*60 + dm\nans = wm - k\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "13681": {"id": 13681, "code": "if __name__ == \"__main__\":\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print((h2-h1)*60+m2-m1-k)", "coverage": [">", ">", ">"]}, "13682": {"id": 13682, "code": "if __name__ == \"__main__\":\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    print((h2-h1)*60+m2-m1-k)", "coverage": [">", ">", ">"]}, "13683": {"id": 13683, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nm1 += h1 * 60\nm2 += h2 * 60\nprint(m2 - m1 - k)", "coverage": [">", ">", ">", ">"]}, "13684": {"id": 13684, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nm1 += h1 * 60\nm2 += h2 * 60\nprint(m2 - m1 - k)", "coverage": [">", ">", ">", ">"]}, "13685": {"id": 13685, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nhm = ((h2-h1)*60)-(m1-m2)-k\nprint(hm)", "coverage": [">", ">", ">"]}, "13686": {"id": 13686, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nhm = ((h2-h1)*60)-(m1-m2)-k\nprint(hm)", "coverage": [">", ">", ">"]}, "13687": {"id": 13687, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif m2 < m1:\n    m2 += 60\n    h2 -= 1\ntime = (h2 - h1) * 60 + (m2 - m1)\nprint(time - k)", "coverage": [">", ">", "!", "!", ">", ">"]}, "13688": {"id": 13688, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif m2 < m1:\n    m2 += 60\n    h2 -= 1\ntime = (h2 - h1) * 60 + (m2 - m1)\nprint(time - k)", "coverage": [">", ">", "!", "!", ">", ">"]}, "13689": {"id": 13689, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndifh = h2 - h1\ndifm = m2 - m1\nt = 60 * difh + difm\nprint(max(0, t - k))", "coverage": [">", ">", ">", ">", ">"]}, "13690": {"id": 13690, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndifh = h2 - h1\ndifm = m2 - m1\nt = 60 * difh + difm\nprint(max(0, t - k))", "coverage": [">", ">", ">", ">", ">"]}, "13691": {"id": 13691, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print(max(0,(h2-h1)*60+(m2-m1)-k))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13692": {"id": 13692, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    print(max(0,(h2-h1)*60+(m2-m1)-k))\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13693": {"id": 13693, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nif c*60+d-a*60-b<k:\n    print(0)\nelse:\n    print(c*60+d-a*60-b-k)", "coverage": [">", ">", "!", "!", ">"]}, "13694": {"id": 13694, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nif c*60+d-a*60-b<k:\n    print(0)\nelse:\n    print(c*60+d-a*60-b-k)", "coverage": [">", ">", "!", "!", ">"]}, "13695": {"id": 13695, "code": "import sys\ndef MI(): return map(int,\"10 0 15 0 30\".rstrip().split())\nH1,M1,H2,M2,K = MI()\nprint(max(0,60*H2+M2-60*H1-M1-K))", "coverage": [">", ">", ">", ">"]}, "13696": {"id": 13696, "code": "import sys\ndef MI(): return map(int,\"10 0 12 0 120\".rstrip().split())\nH1,M1,H2,M2,K = MI()\nprint(max(0,60*H2+M2-60*H1-M1-K))", "coverage": [">", ">", ">", ">"]}, "13697": {"id": 13697, "code": "line_data = \"10 0 15 0 30\"\nH1, M1, H2, M2, K = map(lambda x: int(x), line_data.split(' '))   \nminiutes = (H2 - H1) * 60 + (M2 - M1)                             \nprint(miniutes - K)                                               ", "coverage": [">", ">", ">", ">"]}, "13698": {"id": 13698, "code": "line_data = \"10 0 12 0 120\"\nH1, M1, H2, M2, K = map(lambda x: int(x), line_data.split(' '))   \nminiutes = (H2 - H1) * 60 + (M2 - M1)                             \nprint(miniutes - K)                                               ", "coverage": [">", ">", ">", ">"]}, "13699": {"id": 13699, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndeltaH = h2 - h1\ndeltaM = m2 - m1\ndelta = deltaH * 60 + deltaM - k\nprint(delta)", "coverage": [">", ">", ">", ">", ">"]}, "13700": {"id": 13700, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndeltaH = h2 - h1\ndeltaM = m2 - m1\ndelta = deltaH * 60 + deltaM - k\nprint(delta)", "coverage": [">", ">", ">", ">", ">"]}, "13701": {"id": 13701, "code": "a = 10;b = 0;c = 15;d = 0;K = 30\nprint(max(0,(60*c+d - 60*a-b)-K))", "coverage": [">", ">"]}, "13702": {"id": 13702, "code": "a = 10;b = 0;c = 12;d = 0;K = 120\nprint(max(0,(60*c+d - 60*a-b)-K))", "coverage": [">", ">"]}, "13703": {"id": 13703, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nif H1 == H2:\n    ans = M2 - M1\nelse:\n    ans = (H2 - H1) * 60\n    ans += M2 - M1\nans -= K\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "13704": {"id": 13704, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nif H1 == H2:\n    ans = M2 - M1\nelse:\n    ans = (H2 - H1) * 60\n    ans += M2 - M1\nans -= K\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">", ">", ">"]}, "13705": {"id": 13705, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ntotal = (h2-h1)*60\nif m1 <= m2:\n    total += (m2-m1)\nelse:\n    if m2 == 0:\n        total += 60-m1\n        total -= 60\n    else:\n        total -= (m1-m2)\nans = total - k\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13706": {"id": 13706, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ntotal = (h2-h1)*60\nif m1 <= m2:\n    total += (m2-m1)\nelse:\n    if m2 == 0:\n        total += 60-m1\n        total -= 60\n    else:\n        total -= (m1-m2)\nans = total - k\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", "!", "!", "!", "!", ">", ">"]}, "13707": {"id": 13707, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    h = H2 - H1\n    m = M2 - M1\n    print(max(0, h * 60 + m - K))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13708": {"id": 13708, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    h = H2 - H1\n    m = M2 - M1\n    print(max(0, h * 60 + m - K))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13709": {"id": 13709, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ns = (h1*60)+m1\ne = (h2*60)+m2\nprint(e-s-k)", "coverage": [">", ">", ">", ">"]}, "13710": {"id": 13710, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ns = (h1*60)+m1\ne = (h2*60)+m2\nprint(e-s-k)", "coverage": [">", ">", ">", ">"]}, "13711": {"id": 13711, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nokiteru = h2 * 60 + m2 - (h1 * 60 + m1)\nprint(okiteru - k)", "coverage": [">", ">", ">"]}, "13712": {"id": 13712, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nokiteru = h2 * 60 + m2 - (h1 * 60 + m1)\nprint(okiteru - k)", "coverage": [">", ">", ">"]}, "13713": {"id": 13713, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh_diff = 60*(h2 - h1)\nm_diff = m2 - m1\nprint(h_diff + m_diff - k)", "coverage": [">", ">", ">", ">"]}, "13714": {"id": 13714, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh_diff = 60*(h2 - h1)\nm_diff = m2 - m1\nprint(h_diff + m_diff - k)", "coverage": [">", ">", ">", ">"]}, "13715": {"id": 13715, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\nprint((c-a)*60+(d-b)-k)", "coverage": [">", ">"]}, "13716": {"id": 13716, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\nprint((c-a)*60+(d-b)-k)", "coverage": [">", ">"]}, "13717": {"id": 13717, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(max(H2*60 + M2 - H1*60 - M1 - K, 0))", "coverage": [">", ">"]}, "13718": {"id": 13718, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(max(H2*60 + M2 - H1*60 - M1 - K, 0))", "coverage": [">", ">"]}, "13719": {"id": 13719, "code": "import sys\nreadline = sys.stdin.readline\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(max(0,(H2 * 60 + M2) - (H1 * 60 + M1 + K)))", "coverage": [">", ">", ">", ">"]}, "13720": {"id": 13720, "code": "import sys\nreadline = sys.stdin.readline\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(max(0,(H2 * 60 + M2) - (H1 * 60 + M1 + K)))", "coverage": [">", ">", ">", ">"]}, "13721": {"id": 13721, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\ns = 60 * H1 + M1\ne = 60 * H2 + M2\nans = max(0, e - s - K)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13722": {"id": 13722, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ns = 60 * H1 + M1\ne = 60 * H2 + M2\nans = max(0, e - s - K)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13723": {"id": 13723, "code": "def resolve():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    T = h2*60 + m2 - (h1*60 + m1)\n    print(T-k)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "13724": {"id": 13724, "code": "def resolve():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    T = h2*60 + m2 - (h1*60 + m1)\n    print(T-k)\nresolve()", "coverage": [">", ">", ">", ">", ">"]}, "13725": {"id": 13725, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nt1=60*H1 + M1\nt2=60*H2 + M2\nt=t2 - K\nans=t-t1\nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13726": {"id": 13726, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nt1=60*H1 + M1\nt2=60*H2 + M2\nt=t2 - K\nans=t-t1\nprint(max(0,ans))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13727": {"id": 13727, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nstart = a*60 + b\nend = c*60 + d\nprint(end - e - start)", "coverage": [">", ">", ">", ">"]}, "13728": {"id": 13728, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nstart = a*60 + b\nend = c*60 + d\nprint(end - e - start)", "coverage": [">", ">", ">", ">"]}, "13729": {"id": 13729, "code": "def solve():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    print((H2*60 + M2) - (H1*60 + M1) - K)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "13730": {"id": 13730, "code": "def solve():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    print((H2*60 + M2) - (H1*60 + M1) - K)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">"]}, "13731": {"id": 13731, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh=h2 - h1\nif h < 0:\n    h = 24+h\n    m=m2 - m1\n    du=h*60+m-k\nelif h == 0:\n    if m1 < m2:\n        du = m2-m1-k\n    else:\n        du = 24*60 +(m2-m1)-k\nelse:\n    du = h*60+(m2-m1)-k\nprint(du)", "coverage": [">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">"]}, "13732": {"id": 13732, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh=h2 - h1\nif h < 0:\n    h = 24+h\n    m=m2 - m1\n    du=h*60+m-k\nelif h == 0:\n    if m1 < m2:\n        du = m2-m1-k\n    else:\n        du = 24*60 +(m2-m1)-k\nelse:\n    du = h*60+(m2-m1)-k\nprint(du)", "coverage": [">", ">", ">", "!", "!", "!", ">", "!", "!", "!", "!", "!", ">", ">"]}, "13733": {"id": 13733, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nstart_mins = h1 * 60 + m1\nend_min = h2 * 60 + m2\nis_up = end_min - start_mins\ncan_start = is_up - k\nprint(can_start)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13734": {"id": 13734, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nstart_mins = h1 * 60 + m1\nend_min = h2 * 60 + m2\nis_up = end_min - start_mins\ncan_start = is_up - k\nprint(can_start)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13735": {"id": 13735, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\ngetUpTime = H1 * 60 + M1\ngoToBed = H2 * 60 + M2\nDisposableTime = goToBed - getUpTime\nif K > DisposableTime:\n    print(0)\nelse:\n    print(DisposableTime - K)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13736": {"id": 13736, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\ngetUpTime = H1 * 60 + M1\ngoToBed = H2 * 60 + M2\nDisposableTime = goToBed - getUpTime\nif K > DisposableTime:\n    print(0)\nelse:\n    print(DisposableTime - K)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "13737": {"id": 13737, "code": "import datetime\nfrom sys import stdin\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nd1 = datetime.datetime(year=2018, month=1, day=7, hour=h1, minute=m1, second=0, microsecond=0)\nd2 = datetime.datetime(year=2018, month=1, day=7, hour=h2, minute=m2, second=0, microsecond=0)\ndelta = d2 - d1\ndt2 = delta.seconds / 60\ndt2 -= k\nif dt2 < 0 :\n\tdt2 = 0\nprint(int(dt2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13738": {"id": 13738, "code": "import datetime\nfrom sys import stdin\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nd1 = datetime.datetime(year=2018, month=1, day=7, hour=h1, minute=m1, second=0, microsecond=0)\nd2 = datetime.datetime(year=2018, month=1, day=7, hour=h2, minute=m2, second=0, microsecond=0)\ndelta = d2 - d1\ndt2 = delta.seconds / 60\ndt2 -= k\nif dt2 < 0 :\n\tdt2 = 0\nprint(int(dt2))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "13739": {"id": 13739, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\ndata = 60*(h2-h1)+1*(m2-m1)-k\nprint(data)", "coverage": [">", ">", ">"]}, "13740": {"id": 13740, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\ndata = 60*(h2-h1)+1*(m2-m1)-k\nprint(data)", "coverage": [">", ">", ">"]}, "13741": {"id": 13741, "code": "h_1 = 10;m_1 = 0;h_2 = 15;m_2 = 0;k = 30\nstudy_time = ((h_2*60 + m_2) - (h_1*60 + m_1))\nprint(study_time - k)", "coverage": [">", ">", ">"]}, "13742": {"id": 13742, "code": "h_1 = 10;m_1 = 0;h_2 = 12;m_2 = 0;k = 120\nstudy_time = ((h_2*60 + m_2) - (h_1*60 + m_1))\nprint(study_time - k)", "coverage": [">", ">", ">"]}, "13743": {"id": 13743, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;lens = 30\navailable = (h2 * 60 + m2) - (h1 * 60 + m1)\nanswer = available - lens if available > lens else 0\nprint(answer)", "coverage": [">", ">", ">", ">"]}, "13744": {"id": 13744, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;lens = 120\navailable = (h2 * 60 + m2) - (h1 * 60 + m1)\nanswer = available - lens if available > lens else 0\nprint(answer)", "coverage": [">", ">", ">", ">"]}, "13745": {"id": 13745, "code": "n = [10, 0, 15, 0, 30]\nimport datetime\ntime1 = datetime.datetime(2020,5,5,n[0],n[1])\ntime2 = datetime.datetime(2020,5,5,n[2],n[3])\ntime3 = time2 - time1\ntime3=int(time3.seconds)\nresult=int(time3/60)\nsummary = result - n[4]\nprint(summary)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13746": {"id": 13746, "code": "n = [10, 0, 12, 0, 120]\nimport datetime\ntime1 = datetime.datetime(2020,5,5,n[0],n[1])\ntime2 = datetime.datetime(2020,5,5,n[2],n[3])\ntime3 = time2 - time1\ntime3=int(time3.seconds)\nresult=int(time3/60)\nsummary = result - n[4]\nprint(summary)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13747": {"id": 13747, "code": "def calc_blank_minute(H1, M1, H2, M2, K):\n  return (H2 * 60) + M2 - (H1 * 60) - M1 - K\nH1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nans = calc_blank_minute(H1, M1, H2, M2, K)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13748": {"id": 13748, "code": "def calc_blank_minute(H1, M1, H2, M2, K):\n  return (H2 * 60) + M2 - (H1 * 60) - M1 - K\nH1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nans = calc_blank_minute(H1, M1, H2, M2, K)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "13749": {"id": 13749, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nh = h2 - h1\nm = m2 - m1\nm += 60 * h\nprint(m - k)", "coverage": [">", ">", ">", ">", ">"]}, "13750": {"id": 13750, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nh = h2 - h1\nm = m2 - m1\nm += 60 * h\nprint(m - k)", "coverage": [">", ">", ">", ">", ">"]}, "13751": {"id": 13751, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\n    HM1 = H1*60+M1\n    HM2 = H2*60+M2\n    print(HM2-HM1-K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13752": {"id": 13752, "code": "def main():\n    H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\n    HM1 = H1*60+M1\n    HM2 = H2*60+M2\n    print(HM2-HM1-K)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13753": {"id": 13753, "code": "i = [10, 0, 15, 0, 30]\nprint((i[2]-i[0])*60+(i[3]-i[1])-i[4])", "coverage": [">", ">"]}, "13754": {"id": 13754, "code": "i = [10, 0, 12, 0, 120]\nprint((i[2]-i[0])*60+(i[3]-i[1])-i[4])", "coverage": [">", ">"]}, "13755": {"id": 13755, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\na = 60*(h2-h1)\nb = m2-m1\nc = a+b\nd = c-k\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13756": {"id": 13756, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\na = 60*(h2-h1)\nb = m2-m1\nc = a+b\nd = c-k\nprint(d)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13757": {"id": 13757, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nlength=(H2*60+M2)-(H1*60+M1)\nans=length-K\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13758": {"id": 13758, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nlength=(H2*60+M2)-(H1*60+M1)\nans=length-K\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "13759": {"id": 13759, "code": "def main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    a = h1*60+m1\n    b = h2*60+m2\n    print(b-a-k)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13760": {"id": 13760, "code": "def main():\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    a = h1*60+m1\n    b = h2*60+m2\n    print(b-a-k)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "13761": {"id": 13761, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nWake  = 60*H1+M1\nSleep = 60*H2+M2\nActivate = Sleep - Wake\nCanStudy = Activate - K\nprint(int(CanStudy))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13762": {"id": 13762, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nWake  = 60*H1+M1\nSleep = 60*H2+M2\nActivate = Sleep - Wake\nCanStudy = Activate - K\nprint(int(CanStudy))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13763": {"id": 13763, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nans = H2*60 + M2 - H1*60 - M1 - K\nprint(ans)", "coverage": [">", ">", ">"]}, "13764": {"id": 13764, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nans = H2*60 + M2 - H1*60 - M1 - K\nprint(ans)", "coverage": [">", ">", ">"]}, "13765": {"id": 13765, "code": "H1 = 10;M1 = 0;H2 = 15;M2 = 0;K = 30\nprint(60 * (H2 - H1) + M2 - M1 - K)", "coverage": [">", ">"]}, "13766": {"id": 13766, "code": "H1 = 10;M1 = 0;H2 = 12;M2 = 0;K = 120\nprint(60 * (H2 - H1) + M2 - M1 - K)", "coverage": [">", ">"]}, "13767": {"id": 13767, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nhrtom= (h2-h1)\nif (m2-m1 < 0) and (h2-h1 >=0) : \n    min = (h2-h1)*60 + (m2-m1) - k\n    print(min)\nelif (m2-m1 >= 0) and (h2-h1 >=0 ):\n    min = (h2-h1)*60 + (m2-m1) - k \n    print(min)\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "13768": {"id": 13768, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nhrtom= (h2-h1)\nif (m2-m1 < 0) and (h2-h1 >=0) : \n    min = (h2-h1)*60 + (m2-m1) - k\n    print(min)\nelif (m2-m1 >= 0) and (h2-h1 >=0 ):\n    min = (h2-h1)*60 + (m2-m1) - k \n    print(min)\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", "!", "!"]}, "13769": {"id": 13769, "code": "h = 10;m = 0;H = 15;M = 0;K = 30\nd = H*60+M-(h*60+m)\nprint(d-K)", "coverage": [">", ">", ">"]}, "13770": {"id": 13770, "code": "h = 10;m = 0;H = 12;M = 0;K = 120\nd = H*60+M-(h*60+m)\nprint(d-K)", "coverage": [">", ">", ">"]}, "13771": {"id": 13771, "code": "a = 10;b = 0;c = 15;d = 0;e = 30\nif a==c:\n    t=d-b\n    if e<=t:\n        print(t-e)\n    else:\n        print(0)\nif c>a:\n    if b>d:\n        t=60*(c-a)-b+d\n        if e<=t:\n            print(t-e)\n        else:\n            print(0)\n    if b<=d:\n        t=(c-a)*60+d-b\n        if e<=t:\n            print(t-e)\n        else:\n            print(0)", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!"]}, "13772": {"id": 13772, "code": "a = 10;b = 0;c = 12;d = 0;e = 120\nif a==c:\n    t=d-b\n    if e<=t:\n        print(t-e)\n    else:\n        print(0)\nif c>a:\n    if b>d:\n        t=60*(c-a)-b+d\n        if e<=t:\n            print(t-e)\n        else:\n            print(0)\n    if b<=d:\n        t=(c-a)*60+d-b\n        if e<=t:\n            print(t-e)\n        else:\n            print(0)", "coverage": [">", ">", "!", "!", "!", "!", "!", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">", ">", "!", "!"]}, "13773": {"id": 13773, "code": "import datetime\nlst = ['10', '0', '15', '0', '30']\nh1 = int(lst[0])\nm1 = int(lst[1])\nh2 = int(lst[2])\nm2 = int(lst[3])\nk = int(lst[4])\nd = (60 * h2 + m2) - (60 * h1 + m1)\nprint(int(d - k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13774": {"id": 13774, "code": "import datetime\nlst = ['10', '0', '12', '0', '120']\nh1 = int(lst[0])\nm1 = int(lst[1])\nh2 = int(lst[2])\nm2 = int(lst[3])\nk = int(lst[4])\nd = (60 * h2 + m2) - (60 * h1 + m1)\nprint(int(d - k))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13775": {"id": 13775, "code": "from datetime import*\na = 10;b = 0;c = 15;d = 0;k = 30\nf=datetime\nprint((f(1,1,1,c,d)-f(1,1,1,a,b)).seconds//60-k)", "coverage": [">", ">", ">", ">"]}, "13776": {"id": 13776, "code": "from datetime import*\na = 10;b = 0;c = 12;d = 0;k = 120\nf=datetime\nprint((f(1,1,1,c,d)-f(1,1,1,a,b)).seconds//60-k)", "coverage": [">", ">", ">", ">"]}, "13777": {"id": 13777, "code": "a = ['10', '0', '15', '0', '30']\nprint((int(a[2]) - int(a[0])) * 60 + (int(a[3]) - int(a[1])) - int(a[4]) )", "coverage": [">", ">"]}, "13778": {"id": 13778, "code": "a = ['10', '0', '12', '0', '120']\nprint((int(a[2]) - int(a[0])) * 60 + (int(a[3]) - int(a[1])) - int(a[4]) )", "coverage": [">", ">"]}, "13779": {"id": 13779, "code": "L = [10, 0, 15, 0, 30]\nA=60*L[0]+L[1]\nB=60*L[2]+L[3]\nif B-A <= L[4]:\n\tprint(\"0\")\nelse:\n\tprint(str(B-A-L[4]))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "13780": {"id": 13780, "code": "L = [10, 0, 12, 0, 120]\nA=60*L[0]+L[1]\nB=60*L[2]+L[3]\nif B-A <= L[4]:\n\tprint(\"0\")\nelse:\n\tprint(str(B-A-L[4]))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "13781": {"id": 13781, "code": "a = 10;b = 0;c = 15;d = 0;k = 30\ntotal = (c - a) * 60 + d - b\nprint(total - k)", "coverage": [">", ">", ">"]}, "13782": {"id": 13782, "code": "a = 10;b = 0;c = 12;d = 0;k = 120\ntotal = (c - a) * 60 + d - b\nprint(total - k)", "coverage": [">", ">", ">"]}, "13783": {"id": 13783, "code": "def study_time(h1, m1, h2, m2, k):\n    result = (h2 - h1) * 60 + m2 - m1 - k\n    return result\nh1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\nif __name__ == '__main__':\n    print(study_time(h1, m1, h2, m2, k))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13784": {"id": 13784, "code": "def study_time(h1, m1, h2, m2, k):\n    result = (h2 - h1) * 60 + m2 - m1 - k\n    return result\nh1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\nif __name__ == '__main__':\n    print(study_time(h1, m1, h2, m2, k))", "coverage": [">", ">", ">", ">", ">", ">"]}, "13785": {"id": 13785, "code": "import math\nh_one = 10;m_one = 0;h_two = 15;m_two = 0;k = 30\nhour = h_two - (h_one + 1)\nminute = (60 - m_one) + m_two\nprint(60*hour + minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "13786": {"id": 13786, "code": "import math\nh_one = 10;m_one = 0;h_two = 12;m_two = 0;k = 120\nhour = h_two - (h_one + 1)\nminute = (60 - m_one) + m_two\nprint(60*hour + minute - k)", "coverage": [">", ">", ">", ">", ">"]}, "13787": {"id": 13787, "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    m = 60 - m1\n    h1 += 1\n    m += (h2 - h1)*60 + m2\n    print(max(0, m - k))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13788": {"id": 13788, "code": "def main():\n    import sys\n    input = \"<function main.<locals>.<lambda>>\"\n    h1 = 10;m1 = 0;h2 = 12;m2 = 0;k = 120\n    m = 60 - m1\n    h1 += 1\n    m += (h2 - h1)*60 + m2\n    print(max(0, m - k))\nmain()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "13789": {"id": 13789, "code": "h1 = 10;m1 = 0;h2 = 15;m2 = 0;K = 30\nh = h2-(h1+1)\nm = m2+60-m1\nm += 60*h\nm -= K\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13790": {"id": 13790, "code": "h1 = 10;m1 = 0;h2 = 12;m2 = 0;K = 120\nh = h2-(h1+1)\nm = m2+60-m1\nm += 60*h\nm -= K\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">"]}, "13791": {"id": 13791, "code": "import math\nimport sys\nreadline = sys.stdin.readline\ndef main():\n    h1 = 10;m1 = 0;h2 = 15;m2 = 0;k = 30\n    print((max(0, (h2 - h1) * 60 + (m2 - m1) - k)))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3219": {"id": 3219, "code": "p = \"12\";q = \"4\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3220": {"id": 3220, "code": "p = \"20\";q = \"15\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3221": {"id": 3221, "code": "p = \"20\";q = \"30\"\na = int(p)\nb = int(q)\nif a >= b *2:\n    print(a - 2*b)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3222": {"id": 3222, "code": "A = 12;B = 4\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3223": {"id": 3223, "code": "A = 20;B = 15\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3224": {"id": 3224, "code": "A = 20;B = 30\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3225": {"id": 3225, "code": "A = \"12\";B = \"4\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3226": {"id": 3226, "code": "A = \"20\";B = \"15\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3227": {"id": 3227, "code": "A = \"20\";B = \"30\"\nA = int(A)\nB = int(B)\nans = max(0,A - 2*B)\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3228": {"id": 3228, "code": "a = 12;b = 4\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3229": {"id": 3229, "code": "a = 20;b = 15\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3230": {"id": 3230, "code": "a = 20;b = 30\nans = 0\nif a > 2 * b:\n    ans = a - 2*b\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3231": {"id": 3231, "code": "icase=0\nif icase==0:\n    a = 12;b = 4\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "3232": {"id": 3232, "code": "icase=0\nif icase==0:\n    a = 20;b = 15\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "3233": {"id": 3233, "code": "icase=0\nif icase==0:\n    a = 20;b = 30\n    print(max(a-2*b,0))", "coverage": [">", ">", ">", ">"]}, "3234": {"id": 3234, "code": "def q1():\n    A = 12;B = 4\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3235": {"id": 3235, "code": "def q1():\n    A = 20;B = 15\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3236": {"id": 3236, "code": "def q1():\n    A = 20;B = 30\n    ans = max(0, A - B*2)\n    print(ans)\nif __name__ == '__main__':\n    q1()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3237": {"id": 3237, "code": "a = 12;b = 4\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "3238": {"id": 3238, "code": "a = 20;b = 15\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "3239": {"id": 3239, "code": "a = 20;b = 30\nprint(a - 2 * b) if a > 2 * b else print(0)", "coverage": [">", ">"]}, "3240": {"id": 3240, "code": "A = 12;B = 4\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "3241": {"id": 3241, "code": "A = 20;B = 15\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3242": {"id": 3242, "code": "A = 20;B = 30\nif(A >= B * 2):\n    print(A - B * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3243": {"id": 3243, "code": "a = 12;b = 4\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", "!", "!", ">", ">"]}, "3244": {"id": 3244, "code": "a = 20;b = 15\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3245": {"id": 3245, "code": "a = 20;b = 30\nif a <= 2 * b:\n    x = 0\nelse:\n    x = a - 2 * b\nprint(int(x))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3246": {"id": 3246, "code": "a = 12;b = 4\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", "!", "!", ">"]}, "3247": {"id": 3247, "code": "a = 20;b = 15\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3248": {"id": 3248, "code": "a = 20;b = 30\nif a <= b+b:\n    print(0)\nelse:\n    print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3249": {"id": 3249, "code": "a = 12;b = 4\nprint((a-b*2)*(a>b*2)or 0)", "coverage": [">", ">"]}, "3250": {"id": 3250, "code": "a = 20;b = 15\nprint((a-b*2)*(a>b*2)or 0)", "coverage": [">", ">"]}, "3251": {"id": 3251, "code": "a = 20;b = 30\nprint((a-b*2)*(a>b*2)or 0)", "coverage": [">", ">"]}, "3252": {"id": 3252, "code": "a = 12;b = 4\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "3253": {"id": 3253, "code": "a = 20;b = 15\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "3254": {"id": 3254, "code": "a = 20;b = 30\nif b>=a:\n    print('0')\nelif a-2*b >= 0:\n    print(a-2*b)\nelse:\n    print('0')", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "3255": {"id": 3255, "code": "a = 12;b = 4\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3256": {"id": 3256, "code": "a = 20;b = 15\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3257": {"id": 3257, "code": "a = 20;b = 30\nans = a - b * 2\nans = ans if ans > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3258": {"id": 3258, "code": "x = \"12 4\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3259": {"id": 3259, "code": "x = \"20 15\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3260": {"id": 3260, "code": "x = \"20 30\"\nwindow = int(x.split()[0])\nb = int(x.split()[1])\ncurtain = b * 2\nif window > curtain:\n    print(window - curtain)\nelse:\n    print('0')", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3261": {"id": 3261, "code": "a = 12;b = 4\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "3262": {"id": 3262, "code": "a = 20;b = 15\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3263": {"id": 3263, "code": "a = 20;b = 30\nc=a-2*b\nif c>0:\n  print(c)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3267": {"id": 3267, "code": "x = 12;y = 4\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "3268": {"id": 3268, "code": "x = 20;y = 15\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "3269": {"id": 3269, "code": "x = 20;y = 30\nprint(max(x-2*y,0))", "coverage": [">", ">"]}, "3270": {"id": 3270, "code": "a = 12;b = 4\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "3271": {"id": 3271, "code": "a = 20;b = 15\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "3272": {"id": 3272, "code": "a = 20;b = 30\nprint(a-2*b if a > 2*b else 0)", "coverage": [">", ">"]}, "3273": {"id": 3273, "code": "a = 12;b = 4\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", "!", "!", ">"]}, "3274": {"id": 3274, "code": "a = 20;b = 15\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3275": {"id": 3275, "code": "a = 20;b = 30\nif(a-(2*b)<0):\n  print(0)\nelse:\n  print(a-(2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3276": {"id": 3276, "code": "A = 12;B = 4\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3277": {"id": 3277, "code": "A = 20;B = 15\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3278": {"id": 3278, "code": "A = 20;B = 30\nj = A - 2 * B\nif j > 0:\n    print(j)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3279": {"id": 3279, "code": "a = 12;b = 4\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "3280": {"id": 3280, "code": "a = 20;b = 15\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "3281": {"id": 3281, "code": "a = 20;b = 30\nans = a - b*2\nprint(ans if ans > 0 else 0)", "coverage": [">", ">", ">"]}, "3282": {"id": 3282, "code": "import sys\ninput = sys.stdin.readline\nA = 12;B = 4\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3283": {"id": 3283, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 15\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3284": {"id": 3284, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 30\nans = A - 2*B\nif ans < 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3285": {"id": 3285, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 12;B = 4\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "3286": {"id": 3286, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 20;B = 15\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "3287": {"id": 3287, "code": "import sys\nsys.setrecursionlimit(100000000)\ninput = \"<function <lambda>>\"\nA = 20;B = 30\nprint(max(0, A - B * 2))", "coverage": [">", ">", ">", ">", ">"]}, "3288": {"id": 3288, "code": "a = 12;b = 4\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3289": {"id": 3289, "code": "a = 20;b = 15\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3290": {"id": 3290, "code": "a = 20;b = 30\nc = a - 2 * b\nif c < 0:\n    print('0')\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3291": {"id": 3291, "code": "a = 12;b = 4\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", ">", "!"]}, "3292": {"id": 3292, "code": "a = 20;b = 15\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", "!", ">"]}, "3293": {"id": 3293, "code": "a = 20;b = 30\nnum = a - (2 * b)\nif num >= 0:\n    print(num)\nelse: print(0)", "coverage": [">", ">", ">", "!", ">"]}, "3294": {"id": 3294, "code": "a = 12;b = 4\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!"]}, "3295": {"id": 3295, "code": "a = 20;b = 15\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "3296": {"id": 3296, "code": "a = 20;b = 30\nif a > 2*b:\n  print(a-2*b)\nelse:\n  print(\"0\")", "coverage": [">", ">", "!", "!", ">"]}, "3297": {"id": 3297, "code": "a = 12;b = 4\nans = a - b *2\nif(ans < 0):\n  print(0)\n  exit()\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3298": {"id": 3298, "code": "a = 12;b = 4\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "3299": {"id": 3299, "code": "a = 20;b = 15\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "3300": {"id": 3300, "code": "a = 20;b = 30\nprint(a - (b * 2)) if (a - (b * 2)) > 0 else print(0)", "coverage": [">", ">"]}, "3301": {"id": 3301, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 12;b = 4\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3302": {"id": 3302, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 20;b = 15\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3303": {"id": 3303, "code": "import sys\ninput = \"<function <lambda>>\"\ndef main():\n    a = 20;b = 30\n    if a <= b*2:\n        print(0)\n    else:\n        print(a - (b*2))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3304": {"id": 3304, "code": "import sys\ninput = \"<function <lambda>>\"\na = 12;b = 4\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "3305": {"id": 3305, "code": "import sys\ninput = \"<function <lambda>>\"\na = 20;b = 15\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "3306": {"id": 3306, "code": "import sys\ninput = \"<function <lambda>>\"\na = 20;b = 30\nprint(max(0, a - 2*b))", "coverage": [">", ">", ">", ">"]}, "3307": {"id": 3307, "code": "a = 12;b = 4\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")", "coverage": [">", ">", ">", "!"]}, "3308": {"id": 3308, "code": "a = 20;b = 15\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")", "coverage": [">", ">", "!", ">"]}, "3309": {"id": 3309, "code": "a = 20;b = 30\nif(a-2*b>0):\n    print(a-2*b)\nelse:print(\"0\")", "coverage": [">", ">", "!", ">"]}, "3310": {"id": 3310, "code": "a = 12;b = 4\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "3311": {"id": 3311, "code": "a = 20;b = 15\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "3312": {"id": 3312, "code": "a = 20;b = 30\nans = a-(b*2)\nprint(ans if ans > 0 else \"0\")", "coverage": [">", ">", ">"]}, "3313": {"id": 3313, "code": "import math\na = 12;b = 4\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "3314": {"id": 3314, "code": "import math\na = 20;b = 15\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "3315": {"id": 3315, "code": "import math\na = 20;b = 30\nprint(a-2*b if a-2*b>=0 else 0)", "coverage": [">", ">", ">"]}, "3316": {"id": 3316, "code": "a = 12;b = 4\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "3317": {"id": 3317, "code": "a = 20;b = 15\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "3318": {"id": 3318, "code": "a = 20;b = 30\nleft = a - (b*2)\nprint(left) if left >= 0 else print('0')", "coverage": [">", ">", ">"]}, "3319": {"id": 3319, "code": "import sys\na = 12;b = 4\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3320": {"id": 3320, "code": "import sys\na = 20;b = 15\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3321": {"id": 3321, "code": "import sys\na = 20;b = 30\nif a <= b*2:\n  print(0)\nelse:\n  print(a - b*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3322": {"id": 3322, "code": "a = 12;b = 4\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "3323": {"id": 3323, "code": "a = 20;b = 15\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "3324": {"id": 3324, "code": "a = 20;b = 30\nprint(a-2*b if ((b*2) < a) else 0) ", "coverage": [">", ">"]}, "3325": {"id": 3325, "code": "A = 12;B = 4\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3326": {"id": 3326, "code": "A = 20;B = 15\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3327": {"id": 3327, "code": "A = 20;B = 30\nC=A-2*B\nif C>=0:\n    print(C)\nelse:\n    print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3328": {"id": 3328, "code": "a = \"12\";b = \"4\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3329": {"id": 3329, "code": "a = \"20\";b = \"15\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3330": {"id": 3330, "code": "a = \"20\";b = \"30\"\na = int(a)\nb = int(b)\nif a-2*b < 0:\n  print(0)\nelse:\n  print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3331": {"id": 3331, "code": "\u3042 = 12;\u3044 = 4\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "3332": {"id": 3332, "code": "\u3042 = 20;\u3044 = 15\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "3333": {"id": 3333, "code": "\u3042 = 20;\u3044 = 30\nprint(max(0,\u3042-\u3044*2))", "coverage": [">", ">"]}, "3334": {"id": 3334, "code": "A = 12;B = 4\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!"]}, "3335": {"id": 3335, "code": "A = 20;B = 15\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", "!", ">", ">"]}, "3336": {"id": 3336, "code": "A = 20;B = 30\nif A>(B*2):\n  print(A-B*2)\nelif A<=(B*2):\n  print(\"0\")", "coverage": [">", ">", "!", ">", ">"]}, "3337": {"id": 3337, "code": "import sys\ndef ISI(): return map(int, \"12 4\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", ">"]}, "3338": {"id": 3338, "code": "import sys\ndef ISI(): return map(int, \"20 15\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", "!"]}, "3339": {"id": 3339, "code": "import sys\ndef ISI(): return map(int, \"20 30\".rstrip().split())\na, b = ISI()\nif a<2*b:print(0)\nelse:print(a-2*b)", "coverage": [">", ">", ">", ">", "!"]}, "3340": {"id": 3340, "code": "A = 12;B = 4\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3341": {"id": 3341, "code": "A = 20;B = 15\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3342": {"id": 3342, "code": "A = 20;B = 30\nans = A - (2 * B)\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3343": {"id": 3343, "code": "a = \"12\";b = \"4\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)", "coverage": [">", ">", ">", ">", ">", "!", ">"]}, "3344": {"id": 3344, "code": "a = \"20\";b = \"15\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3345": {"id": 3345, "code": "a = \"20\";b = \"30\"\na = int(a)\nb = int(b)\nret = a - (b * 2)\nif ret < 0:\n    ret = 0\nprint(ret)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3346": {"id": 3346, "code": "A = 12;B = 4\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", ">", "!", "!", "!", ">"]}, "3347": {"id": 3347, "code": "A = 20;B = 15\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "3348": {"id": 3348, "code": "A = 20;B = 30\nif A-2*B>0:\n    print(A-2*B)\nelif A -2*B<=0:\n    print(0)\nelse:\n    pass", "coverage": [">", ">", "!", ">", ">", "!", ">"]}, "3349": {"id": 3349, "code": "import sys\ninput = sys.stdin.readline\nA = 12;B = 4\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "3350": {"id": 3350, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 15\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "3351": {"id": 3351, "code": "import sys\ninput = sys.stdin.readline\nA = 20;B = 30\nprint(max(0,A-2*B)) ", "coverage": [">", ">", ">", ">"]}, "3352": {"id": 3352, "code": "A = 12;B = 4\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3353": {"id": 3353, "code": "A = 20;B = 15\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3354": {"id": 3354, "code": "A = 20;B = 30\na = A - B * 2\nif a <= 0:\n    print(\"0\")\nelse:\n    print(a)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3355": {"id": 3355, "code": "def main():\n    A = 12;B = 4\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "3356": {"id": 3356, "code": "def main():\n    A = 20;B = 15\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3357": {"id": 3357, "code": "def main():\n    A = 20;B = 30\n    result = A - B * 2\n    if(result >= 0):\n        print(result)\n    else:\n        print(0)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3358": {"id": 3358, "code": "a = 12;b = 4\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "3359": {"id": 3359, "code": "a = 20;b = 15\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "3360": {"id": 3360, "code": "a = 20;b = 30\nprint(max(0,a-(2*b)))", "coverage": [">", ">"]}, "3361": {"id": 3361, "code": "A = 12;B = 4\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "3362": {"id": 3362, "code": "A = 20;B = 15\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "3363": {"id": 3363, "code": "A = 20;B = 30\nprint(A-2*B if A>=2*B else 0)", "coverage": [">", ">"]}, "3364": {"id": 3364, "code": "a = 12;b = 4\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3365": {"id": 3365, "code": "a = 20;b = 15\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3366": {"id": 3366, "code": "a = 20;b = 30\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3367": {"id": 3367, "code": "A = 12;B = 4\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "3368": {"id": 3368, "code": "A = 20;B = 15\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "3369": {"id": 3369, "code": "A = 20;B = 30\nans = max(0, A - B * 2)\nprint(ans)", "coverage": [">", ">", ">"]}, "3370": {"id": 3370, "code": "A = 12;B = 4\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "3371": {"id": 3371, "code": "A = 20;B = 15\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "3372": {"id": 3372, "code": "A = 20;B = 30\nprint(max(0,A-2*B))", "coverage": [">", ">"]}, "3373": {"id": 3373, "code": "a = 12;b = 4\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", "!", "!", ">"]}, "3374": {"id": 3374, "code": "a = 20;b = 15\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3375": {"id": 3375, "code": "a = 20;b = 30\nif a<(b+b):\n  print(\"0\")\nelse:\n  print(a-b-b)", "coverage": [">", ">", ">", "!", "!"]}, "3376": {"id": 3376, "code": "def main():\n    a = 12;b = 4\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3377": {"id": 3377, "code": "def main():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3378": {"id": 3378, "code": "def main():\n    a = 20;b = 30\n    print(max(0, a-2*b))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3379": {"id": 3379, "code": "a = 12;b = 4\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3380": {"id": 3380, "code": "a = 20;b = 15\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3381": {"id": 3381, "code": "a = 20;b = 30\neq= 2*b\nif eq < a:\n\tprint(a-eq)\nelse:\n\tprint(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3382": {"id": 3382, "code": "def main():\n    n = 12;k = 4\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3383": {"id": 3383, "code": "def main():\n    n = 20;k = 15\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3384": {"id": 3384, "code": "def main():\n    n = 20;k = 30\n    p=n-2*k\n    print(p) if p>0 else print(0)\n    return\nmain()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3385": {"id": 3385, "code": "a = 12;b = 4\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", "!", "!", ">"]}, "3386": {"id": 3386, "code": "a = 20;b = 15\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", ">", "!", "!"]}, "3387": {"id": 3387, "code": "a = 20;b = 30\nb *= 2\nif b>a:\n    print(0)\nelse:\n    print(abs(a-b))", "coverage": [">", ">", ">", ">", "!", "!"]}, "3388": {"id": 3388, "code": "a = 12;b = 4\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "3389": {"id": 3389, "code": "a = 20;b = 15\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "3390": {"id": 3390, "code": "a = 20;b = 30\nx=a-(b+b)\nprint(x if x>=0 else 0)", "coverage": [">", ">", ">"]}, "3391": {"id": 3391, "code": "A = 12;B = 4\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "3392": {"id": 3392, "code": "A = 20;B = 15\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "3393": {"id": 3393, "code": "A = 20;B = 30\nprint(max(0,A-B*2))", "coverage": [">", ">"]}, "3394": {"id": 3394, "code": "A = 12;B = 4\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", "!", "!", ">"]}, "3395": {"id": 3395, "code": "A = 20;B = 15\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "3396": {"id": 3396, "code": "A = 20;B = 30\nif A<=B*2:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!"]}, "3397": {"id": 3397, "code": "line = \"12 4\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", "!", ">", ">"]}, "3398": {"id": 3398, "code": "line = \"20 15\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3399": {"id": 3399, "code": "line = \"20 30\"\na, b = line.split(\" \")\na = int(a)\nb = int(b)\nif a <= (b * 2):\n    print(0)\nelif a > (b*2):\n    print(a-(b*2))", "coverage": [">", ">", ">", ">", ">", ">", "!", "!"]}, "3400": {"id": 3400, "code": "a = 12;b = 4\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", ">"]}, "3401": {"id": 3401, "code": "a = 20;b = 15\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", "!"]}, "3402": {"id": 3402, "code": "a = 20;b = 30\nif a-b*2<=0:print(0)\nelse:print(a-b*2)", "coverage": [">", ">", "!"]}, "3403": {"id": 3403, "code": "A = 12;B = 4\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "3404": {"id": 3404, "code": "A = 20;B = 15\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "3405": {"id": 3405, "code": "A = 20;B = 30\nans = max(A-B*2,0)\nprint(ans)", "coverage": [">", ">", ">"]}, "3406": {"id": 3406, "code": "A = 12;B = 4\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3407": {"id": 3407, "code": "A = 20;B = 15\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3408": {"id": 3408, "code": "A = 20;B = 30\nc = A-2*B\nif c>0:\n  print(c)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3409": {"id": 3409, "code": "A = 12;B = 4\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3410": {"id": 3410, "code": "A = 20;B = 15\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3411": {"id": 3411, "code": "A = 20;B = 30\nL = int(A-2*B)\nif L>0:\n    print(L)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3412": {"id": 3412, "code": "A = 12;B = 4\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", "!", ">", ">"]}, "3413": {"id": 3413, "code": "A = 20;B = 15\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", ">", "!", ">"]}, "3414": {"id": 3414, "code": "A = 20;B = 30\nif A <= 2*B:\n    x = 0\nelse: x = A - 2*B\nprint(x)", "coverage": [">", ">", ">", "!", ">"]}, "3415": {"id": 3415, "code": "def main():\n    a = 12;b = 4\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3416": {"id": 3416, "code": "def main():\n    a = 20;b = 15\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3417": {"id": 3417, "code": "def main():\n    a = 20;b = 30\n    if(a<=b*2):\n        print(0)\n    else:\n        print(a-b*2)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3418": {"id": 3418, "code": "a = 12;b = 4\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3419": {"id": 3419, "code": "a = 20;b = 15\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3420": {"id": 3420, "code": "a = 20;b = 30\nans = a - b - b\nif ans < 0:\n    print('0')\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3421": {"id": 3421, "code": "from sys import stdin\ndef main():\n    A = 12;B = 4\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", ">", "!", "!", ">"]}, "3422": {"id": 3422, "code": "from sys import stdin\ndef main():\n    A = 20;B = 15\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3423": {"id": 3423, "code": "from sys import stdin\ndef main():\n    A = 20;B = 30\n    if A > 2*B:\n        print(A - 2*B)\n    else:\n        print(0)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3424": {"id": 3424, "code": "a = 12;b = 4\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3425": {"id": 3425, "code": "a = 20;b = 15\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3426": {"id": 3426, "code": "a = 20;b = 30\nans=a-b*2\nif a<=b*2:\n    ans=0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3427": {"id": 3427, "code": "A = 12;B = 4\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3428": {"id": 3428, "code": "A = 20;B = 15\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3429": {"id": 3429, "code": "A = 20;B = 30\nans = A - B - B\nif ans < 0:\n  ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3430": {"id": 3430, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 12;b = 4\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "3431": {"id": 3431, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 20;b = 15\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3432": {"id": 3432, "code": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\na = 20;b = 30\nans = a - b * 2\nif ans < 0:\n    print(0)\nelse:\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "3433": {"id": 3433, "code": "x = 12;y = 4\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!"]}, "3434": {"id": 3434, "code": "x = 20;y = 15\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3435": {"id": 3435, "code": "x = 20;y = 30\na = x - y*2\nif a > 0:\n  print(a)\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", "!", "!", ">"]}, "3436": {"id": 3436, "code": "A = 12;B = 4\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", "!"]}, "3437": {"id": 3437, "code": "A = 20;B = 15\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", ">"]}, "3438": {"id": 3438, "code": "A = 20;B = 30\nif A > 2*B: print(A-2*B)\nelse: print(0)", "coverage": [">", ">", ">"]}, "3439": {"id": 3439, "code": "def ABC_143_A():\n    A = 12;B = 4\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3440": {"id": 3440, "code": "def ABC_143_A():\n    A = 20;B = 15\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3441": {"id": 3441, "code": "def ABC_143_A():\n    A = 20;B = 30\n    if A - 2*B >= 0:\n        print(A-2*B)\n    else:\n        print(0)\nif __name__ == '__main__':\n    ABC_143_A()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3442": {"id": 3442, "code": "a = 12;b = 4\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3443": {"id": 3443, "code": "a = 20;b = 15\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3444": {"id": 3444, "code": "a = 20;b = 30\nans=a-b*2\nif ans>=0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3445": {"id": 3445, "code": "a = 12;b = 4\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3446": {"id": 3446, "code": "a = 20;b = 15\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3447": {"id": 3447, "code": "a = 20;b = 30\nresult=a-b*2\nif result > 0:\n  print(result)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3448": {"id": 3448, "code": "a = 12;b = 4\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3449": {"id": 3449, "code": "a = 20;b = 15\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3450": {"id": 3450, "code": "a = 20;b = 30\nif a > b * 2:\n  my_result = a - b * 2\nelse:\n  my_result = 0\nprint(my_result)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3451": {"id": 3451, "code": "def main():\n a = 12;b = 4\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3452": {"id": 3452, "code": "def main():\n a = 20;b = 15\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3453": {"id": 3453, "code": "def main():\n a = 20;b = 30\n if a <= b * 2:\n     print(0)\n else:\n     print(a - 2 * b)\nmain()", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3454": {"id": 3454, "code": "a = 12;b = 4\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3455": {"id": 3455, "code": "a = 20;b = 15\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3456": {"id": 3456, "code": "a = 20;b = 30\ntemp = a - 2 * b\nans = temp if temp > 0 else 0\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3457": {"id": 3457, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"12 4\".strip()\ndef resolve():\n    a = 12;b = 4\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3458": {"id": 3458, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"20 15\".strip()\ndef resolve():\n    a = 20;b = 15\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3459": {"id": 3459, "code": "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return \"20 30\".strip()\ndef resolve():\n    a = 20;b = 30\n    print(0 if a-b*2<0 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3460": {"id": 3460, "code": "a = 12;b = 4\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "3461": {"id": 3461, "code": "a = 20;b = 15\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "3462": {"id": 3462, "code": "a = 20;b = 30\nans = max(0, a-(b*2))\nprint(ans)", "coverage": [">", ">", ">"]}, "3466": {"id": 3466, "code": "a = 12;b = 4\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)", "coverage": [">", ">", "!", ">", "!", "!", ">"]}, "3467": {"id": 3467, "code": "a = 20;b = 15\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)", "coverage": [">", ">", "!", ">", ">", "!", "!"]}, "3468": {"id": 3468, "code": "a = 20;b = 30\nif b>a:\n  print(0)\nelif(b*2>a):\n  print(0)\nelse:\n  print(a-b*2)", "coverage": [">", ">", ">", "!", "!", "!", "!"]}, "3469": {"id": 3469, "code": "A = 12;B = 4\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3470": {"id": 3470, "code": "A = 20;B = 15\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3471": {"id": 3471, "code": "A = 20;B = 30\nprint(max(0, int(A-2*B)))", "coverage": [">", ">"]}, "3472": {"id": 3472, "code": "a = 12;b = 4\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", "!", ">", ">"]}, "3473": {"id": 3473, "code": "a = 20;b = 15\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3474": {"id": 3474, "code": "a = 20;b = 30\nif 2*b >= a:\n    print(0)\nelif 2*b < a:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3475": {"id": 3475, "code": "a = 12;b = 4\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3476": {"id": 3476, "code": "a = 20;b = 15\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3477": {"id": 3477, "code": "a = 20;b = 30\nresult = a - b * 2\nif result <= 0:\n    print(0)\nelse:\n    print(result)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3478": {"id": 3478, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 12;b = 4\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3479": {"id": 3479, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 20;b = 15\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3480": {"id": 3480, "code": "import sys\nsys.setrecursionlimit(10**6)\na = 20;b = 30\nif 2*b > a:\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3481": {"id": 3481, "code": "a = 12;b = 4\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", ">", "!", "!"]}, "3482": {"id": 3482, "code": "a = 20;b = 15\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", "!", ">", ">"]}, "3483": {"id": 3483, "code": "a = 20;b = 30\nif a > b * 2:\n\tprint(a - b * 2)\nelif a <= b * 2:\n\tprint(0)", "coverage": [">", ">", "!", ">", ">"]}, "3484": {"id": 3484, "code": "A = 12;B = 4\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)", "coverage": [">", ">", ">"]}, "3485": {"id": 3485, "code": "A = 20;B = 15\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)", "coverage": [">", ">", ">"]}, "3486": {"id": 3486, "code": "A = 20;B = 30\nans=A - B*2\nprint(ans) if(ans > 0) else print(0)", "coverage": [">", ">", ">"]}, "3487": {"id": 3487, "code": "a = 12;b = 4\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "3488": {"id": 3488, "code": "a = 20;b = 15\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "3489": {"id": 3489, "code": "a = 20;b = 30\na-=2*b\nif(a<0):a=0\nprint(a)", "coverage": [">", ">", ">", ">"]}, "3490": {"id": 3490, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 12;b = 4\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3491": {"id": 3491, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 15\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3492": {"id": 3492, "code": "from sys import stdin, setrecursionlimit\ndef main():\n    input = stdin.buffer.readline\n    a = 20;b = 30\n    print(max(0, a - 2 * b))\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3493": {"id": 3493, "code": "a = 12;b = 4\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", ">", "!", "!"]}, "3494": {"id": 3494, "code": "a = 20;b = 15\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3495": {"id": 3495, "code": "a = 20;b = 30\nB=b*2\nif a>B:\n  print(a-B)\nelse:\n  print('0')", "coverage": [">", ">", ">", "!", "!", ">"]}, "3496": {"id": 3496, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 12;b = 4\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3497": {"id": 3497, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 20;b = 15\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3498": {"id": 3498, "code": "def main():\n    import sys\n    readline = sys.stdin.buffer.readline\n    a = 20;b = 30\n    print(max(0, a-b-b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "3499": {"id": 3499, "code": "A = 12;B = 4\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", "!", "!", ">"]}, "3500": {"id": 3500, "code": "A = 20;B = 15\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", ">", "!", "!"]}, "3501": {"id": 3501, "code": "A = 20;B = 30\nif A <= 2 * B:\n    print('0')\nelse:\n    print(A - 2 * B)", "coverage": [">", ">", ">", "!", "!"]}, "3502": {"id": 3502, "code": "a = 12;b = 4\nres = a-2*b if (a-2*b >= 0) else 0\nprint(res)", "coverage": [">", ">", ">"]}, "3503": {"id": 3503, "code": "a = 20;b = 15\nres = a-2*b if (a-2*b >= 0) else 0\nprint(res)", "coverage": [">", ">", ">"]}, "3504": {"id": 3504, "code": "a = 20;b = 30\nres = a-2*b if (a-2*b >= 0) else 0\nprint(res)", "coverage": [">", ">", ">"]}, "3505": {"id": 3505, "code": "if __name__ == '__main__':\n    a = 12;b = 4\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "3506": {"id": 3506, "code": "if __name__ == '__main__':\n    a = 20;b = 15\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "3507": {"id": 3507, "code": "if __name__ == '__main__':\n    a = 20;b = 30\n    print(max(0, a - b * 2))", "coverage": [">", ">", ">"]}, "3508": {"id": 3508, "code": "A = 12;B = 4\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3509": {"id": 3509, "code": "A = 20;B = 15\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3510": {"id": 3510, "code": "A = 20;B = 30\nc = A-(2*B)\nif A <= 2*B:\n    print(\"0\")\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3511": {"id": 3511, "code": "import sys\nA = 12;B = 4\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)", "coverage": [">", ">", ">", ">", ">"]}, "3512": {"id": 3512, "code": "import sys\nA = 20;B = 15\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)", "coverage": [">", ">", ">", ">", ">"]}, "3513": {"id": 3513, "code": "import sys\nA = 20;B = 30\nif not ( 1 <= A <= 100 and 1 <= B <= 100 ): sys.exit()\nif not ( isinstance(A,int) and isinstance(B,int) ): sys.exit()\nprint( A - (B * 2)) if A - (B * 2) >= 0 else print(0)", "coverage": [">", ">", ">", ">", ">"]}, "3514": {"id": 3514, "code": "A = 12;B = 4\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3515": {"id": 3515, "code": "A = 20;B = 15\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3516": {"id": 3516, "code": "A = 20;B = 30\nans = A - B*2\nif ans <= 0:\n  print(0)\nelse:\n  print(A-B*2)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3517": {"id": 3517, "code": "A = 12;B = 4\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "3518": {"id": 3518, "code": "A = 20;B = 15\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "3519": {"id": 3519, "code": "A = 20;B = 30\nprint(A-B*2) if A>B*2 else print(0)", "coverage": [">", ">"]}, "3520": {"id": 3520, "code": "a = 12;b = 4\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "3521": {"id": 3521, "code": "a = 20;b = 15\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "3522": {"id": 3522, "code": "a = 20;b = 30\nprint(max(a - b - b, 0))", "coverage": [">", ">"]}, "3523": {"id": 3523, "code": "a = 12;b = 4\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", "!", "!", ">"]}, "3524": {"id": 3524, "code": "a = 20;b = 15\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3525": {"id": 3525, "code": "a = 20;b = 30\nif a <= b * 2:\n  print(0)\nelse:\n  print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3529": {"id": 3529, "code": "def resolve():\n    A = 12;B = 4\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "3530": {"id": 3530, "code": "def resolve():\n    A = 20;B = 15\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "3531": {"id": 3531, "code": "def resolve():\n    A = 20;B = 30\n    print(max(A-2*B, 0))\nif '__main__' == __name__:\n    resolve()", "coverage": [">", ">", ">", ">", ">"]}, "3532": {"id": 3532, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 12;b = 4\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3533": {"id": 3533, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 20;b = 15\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3534": {"id": 3534, "code": "import sys\nsys.setrecursionlimit(4100000)\nimport math\nINF = 10**9\nimport itertools\ndef main():\n    a = 20;b = 30\n    print(max(0, a-2*b))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "3535": {"id": 3535, "code": "import sys\ndef S(): return \"12 4\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "3536": {"id": 3536, "code": "import sys\ndef S(): return \"20 15\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "3537": {"id": 3537, "code": "import sys\ndef S(): return \"20 30\".rstrip()\nA,B = map(int,S().split())\nprint(max(0,A-2*B))", "coverage": [">", ">", ">", ">"]}, "3538": {"id": 3538, "code": "a = 12;b = 4\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "3539": {"id": 3539, "code": "a = 20;b = 15\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "3540": {"id": 3540, "code": "a = 20;b = 30\nres = max(0, a - 2 * b)\nprint(res)", "coverage": [">", ">", ">"]}, "3541": {"id": 3541, "code": "a = 12;b = 4\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3542": {"id": 3542, "code": "a = 20;b = 15\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3543": {"id": 3543, "code": "a = 20;b = 30\nb *= 2\np = a - b\nif p < 0:\n    print(0)\nelse:\n    print(abs(p))", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3544": {"id": 3544, "code": "a = 12;b = 4\nx = a-(b * 2)\nif x > 0:\n    print(x)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3545": {"id": 3545, "code": "a = 20;b = 15\nx = a-(b * 2)\nif x > 0:\n    print(x)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3546": {"id": 3546, "code": "a = 20;b = 30\nx = a-(b * 2)\nif x > 0:\n    print(x)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3547": {"id": 3547, "code": "A = 12;B = 4\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "3548": {"id": 3548, "code": "A = 20;B = 15\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "3549": {"id": 3549, "code": "A = 20;B = 30\nprint(A - 2*B if A > 2*B else 0)", "coverage": [">", ">"]}, "3550": {"id": 3550, "code": "A = 12;B = 4\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3551": {"id": 3551, "code": "A = 20;B = 15\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3552": {"id": 3552, "code": "A = 20;B = 30\nB *= 2\nif A <= B:\n  print(0)\nelse:\n  print(A-B)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3553": {"id": 3553, "code": "def main():\n    a = 12;b = 4\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">"]}, "3554": {"id": 3554, "code": "def main():\n    a = 20;b = 15\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3555": {"id": 3555, "code": "def main():\n    a = 20;b = 30\n    if a - 2*b > 0:\n        print(a - 2*b)\n    else:\n        print(0)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">"]}, "3556": {"id": 3556, "code": "A = 12;B = 4\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3557": {"id": 3557, "code": "A = 20;B = 15\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3558": {"id": 3558, "code": "A = 20;B = 30\nnokori = A - B*2\nif nokori>=0:\n    print(nokori)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3559": {"id": 3559, "code": "a = 12;b = 4\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "3560": {"id": 3560, "code": "a = 20;b = 15\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "3561": {"id": 3561, "code": "a = 20;b = 30\nprint(max((a-2*b),0))", "coverage": [">", ">"]}, "3562": {"id": 3562, "code": "house_len = 12;curtain_len = 4\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!"]}, "3563": {"id": 3563, "code": "house_len = 20;curtain_len = 15\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3564": {"id": 3564, "code": "house_len = 20;curtain_len = 30\nif house_len >= curtain_len * 2:\n    print(house_len - curtain_len * 2)\nelse:\n    print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3565": {"id": 3565, "code": "A = 12;B = 4\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "3566": {"id": 3566, "code": "A = 20;B = 15\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "3567": {"id": 3567, "code": "A = 20;B = 30\nprint(max(A-B-B,0))", "coverage": [">", ">"]}, "3568": {"id": 3568, "code": "a = 12;b = 4\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", "!", "!", ">"]}, "3569": {"id": 3569, "code": "a = 20;b = 15\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3570": {"id": 3570, "code": "a = 20;b = 30\nif a<2*b:\n  print(0)\nelse:\n  print(int(a-2*b))", "coverage": [">", ">", ">", "!", "!"]}, "3571": {"id": 3571, "code": "A = 12;B = 4\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3572": {"id": 3572, "code": "A = 20;B = 15\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3573": {"id": 3573, "code": "A = 20;B = 30\nif A >= B * 2:\n\tanswer = A - B * 2\nelse :\n\tanswer = 0\nprint(answer)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3574": {"id": 3574, "code": "from sys import stdin\na = 12;b = 4\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "3575": {"id": 3575, "code": "from sys import stdin\na = 20;b = 15\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "3576": {"id": 3576, "code": "from sys import stdin\na = 20;b = 30\nprint(a - 2*b if a-2*b > 0 else 0)", "coverage": [">", ">", ">"]}, "3577": {"id": 3577, "code": "a = 12;b = 4\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "3578": {"id": 3578, "code": "a = 20;b = 15\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "3579": {"id": 3579, "code": "a = 20;b = 30\nval = a-2*b\nprint(val) if val>0 else print(0)", "coverage": [">", ">", ">"]}, "3580": {"id": 3580, "code": "a = 12;b = 4\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", "!", "!", ">"]}, "3581": {"id": 3581, "code": "a = 20;b = 15\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3582": {"id": 3582, "code": "a = 20;b = 30\nif b * 2 >= a:\n    print('0')\nelse:\n    print(a - b * 2)", "coverage": [">", ">", ">", "!", "!"]}, "3583": {"id": 3583, "code": "A = 12;B = 4\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "3584": {"id": 3584, "code": "A = 20;B = 15\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "3585": {"id": 3585, "code": "A = 20;B = 30\nans = A - B * 2\nprint(max(0,ans))", "coverage": [">", ">", ">"]}, "3586": {"id": 3586, "code": "a = 12;b = 4\nans = a-b*2\nif ans<=0:\n    print(0);exit()\nelse:\n    print(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3587": {"id": 3587, "code": "n = 12;m = 4\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", "!", "!", ">"]}, "3588": {"id": 3588, "code": "n = 20;m = 15\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", ">", "!", "!"]}, "3589": {"id": 3589, "code": "n = 20;m = 30\nif 2*m>=n:\n  print(0)\nelse:\n  print(n-2*m)", "coverage": [">", ">", ">", "!", "!"]}, "3590": {"id": 3590, "code": "a = 12;b = 4\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "3591": {"id": 3591, "code": "a = 20;b = 15\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "3592": {"id": 3592, "code": "a = 20;b = 30\nc=a-2*b\nprint(c if c>=0 else 0 )", "coverage": [">", ">", ">"]}, "3593": {"id": 3593, "code": "a = 12;b = 4\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "3594": {"id": 3594, "code": "a = 20;b = 15\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "3595": {"id": 3595, "code": "a = 20;b = 30\nans = a - min(a, 2 * b)\nprint(ans)", "coverage": [">", ">", ">"]}, "3596": {"id": 3596, "code": "A = 12;B = 4\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "3597": {"id": 3597, "code": "A = 20;B = 15\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "3598": {"id": 3598, "code": "A = 20;B = 30\nprint(A-min(A,B*2))", "coverage": [">", ">"]}, "3599": {"id": 3599, "code": "A = 12;B = 4\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "3600": {"id": 3600, "code": "A = 20;B = 15\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "3601": {"id": 3601, "code": "A = 20;B = 30\nval = A-B*2\nprint(max(0,val))", "coverage": [">", ">", ">"]}, "3602": {"id": 3602, "code": "A = 12;B = 4\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "3603": {"id": 3603, "code": "A = 20;B = 15\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "3604": {"id": 3604, "code": "A = 20;B = 30\nC = A - (B*2)\nC = 0 if C < 0 else C\nprint(C)", "coverage": [">", ">", ">", ">"]}, "3608": {"id": 3608, "code": "a = 12;b = 4\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", ">"]}, "3609": {"id": 3609, "code": "a = 20;b = 15\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", "!"]}, "3610": {"id": 3610, "code": "a = 20;b = 30\nif b*2>=a: print(0)\nelse: print(a-2*b)", "coverage": [">", ">", "!"]}, "3611": {"id": 3611, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 12;B = 4\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3612": {"id": 3612, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 20;B = 15\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3613": {"id": 3613, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nA = 20;B = 30\nprint(max(0, A - 2 * B))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3614": {"id": 3614, "code": "a = \"12\";b = \"4\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", ">", "!", "!"]}, "3615": {"id": 3615, "code": "a = \"20\";b = \"15\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3616": {"id": 3616, "code": "a = \"20\";b = \"30\"\na=int(a)\nb=int(b)\nif a-b*2>=0:\n  print(int(a-b*2))\nelse:\n  print(\"0\")", "coverage": [">", ">", ">", ">", "!", "!", ">"]}, "3617": {"id": 3617, "code": "def resolve():\n    a = 12;b = 4\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "3618": {"id": 3618, "code": "def resolve():\n    a = 20;b = 15\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "3619": {"id": 3619, "code": "def resolve():\n    a = 20;b = 30\n    print(0 if a<b*2 else a-b*2)\nresolve()", "coverage": [">", ">", ">", ">"]}, "3620": {"id": 3620, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    A = 12;B = 4\n    C=max(0,A-B*2)\n    print(C)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3621": {"id": 3621, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    A = 20;B = 15\n    C=max(0,A-B*2)\n    print(C)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3622": {"id": 3622, "code": "from sys import stdin\ndef main():\n    readline=stdin.readline\n    A = 20;B = 30\n    C=max(0,A-B*2)\n    print(C)\nif __name__==\"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3623": {"id": 3623, "code": "a = 12;b = 4\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)", "coverage": [">", ">", ">", "!", "!"]}, "3624": {"id": 3624, "code": "a = 20;b = 15\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3625": {"id": 3625, "code": "a = 20;b = 30\nif a >= b*2:\n  print(a - b*2)\nelse:\n  print(0)", "coverage": [">", ">", "!", "!", ">"]}, "3626": {"id": 3626, "code": "a = 12;b = 4\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", ">"]}, "3627": {"id": 3627, "code": "a = 20;b = 15\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", "!"]}, "3628": {"id": 3628, "code": "a = 20;b = 30\nans = a - b * 2\nif ans <= 0: print(0)\nelse : print(ans)", "coverage": [">", ">", ">", "!"]}, "3629": {"id": 3629, "code": "A = 12;B = 4\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3630": {"id": 3630, "code": "A = 20;B = 15\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3631": {"id": 3631, "code": "A = 20;B = 30\nif B * 2 < A:\n    ans = A - B * 2\nelse:\n    ans = 0\nprint(ans)", "coverage": [">", ">", "!", "!", ">", ">"]}, "3632": {"id": 3632, "code": "a = 12;b = 4\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "3633": {"id": 3633, "code": "a = 20;b = 15\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "3634": {"id": 3634, "code": "a = 20;b = 30\nprint (a - 2 * b if a - 2 * b > 0 else 0)", "coverage": [">", ">"]}, "3635": {"id": 3635, "code": "A = 12;B = 4\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3636": {"id": 3636, "code": "A = 20;B = 15\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3637": {"id": 3637, "code": "A = 20;B = 30\nN = A - 2 * B\nif N > 0:\n    print(str(N))\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3638": {"id": 3638, "code": "A = 12;B = 4\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "3639": {"id": 3639, "code": "A = 20;B = 15\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "3640": {"id": 3640, "code": "A = 20;B = 30\nprint(max([0, A-2*B]))", "coverage": [">", ">"]}, "3641": {"id": 3641, "code": "def solve():\n    N = 12;M = 4\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "3642": {"id": 3642, "code": "def solve():\n    N = 20;M = 15\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "3643": {"id": 3643, "code": "def solve():\n    N = 20;M = 30\n    return N - M*2 if N //2 >= M else 0\nprint(solve())", "coverage": [">", ">", ">", ">"]}, "3644": {"id": 3644, "code": "a = 12;b = 4\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3645": {"id": 3645, "code": "a = 20;b = 15\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3646": {"id": 3646, "code": "a = 20;b = 30\nb*=2\nif b>a:\n    print(0)\nelse:\n    print(a-b)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3647": {"id": 3647, "code": "import sys\ndef main():\n    A = 12;B = 4\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3648": {"id": 3648, "code": "import sys\ndef main():\n    A = 20;B = 15\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3649": {"id": 3649, "code": "import sys\ndef main():\n    A = 20;B = 30\n    print(max(0,A-B*2))\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">"]}, "3650": {"id": 3650, "code": "a = 12;b = 4\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "3651": {"id": 3651, "code": "a = 20;b = 15\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "3652": {"id": 3652, "code": "a = 20;b = 30\nb = b * 2\nprint(max(0, a - b))", "coverage": [">", ">", ">"]}, "3653": {"id": 3653, "code": "a = 12;b = 4\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", "!", "!", ">"]}, "3654": {"id": 3654, "code": "a = 20;b = 15\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3655": {"id": 3655, "code": "a = 20;b = 30\nif(a-2*b<0):\n    print(0)\nelse:\n    print(a-2*b)", "coverage": [">", ">", ">", "!", "!"]}, "3656": {"id": 3656, "code": "n = 12;m = 4\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "3657": {"id": 3657, "code": "n = 20;m = 15\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "3658": {"id": 3658, "code": "n = 20;m = 30\nprint(max(n-2*m,0))", "coverage": [">", ">"]}, "3659": {"id": 3659, "code": "def main():\n    A = 12;B = 4\n    if A < B * 2:\n        print(0)\n        exit(0)\n    else:\n        print(A - B * 2)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "3660": {"id": 3660, "code": "x = 12;y = 4\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", "!", "!", ">"]}, "3661": {"id": 3661, "code": "x = 20;y = 15\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", ">", "!", "!"]}, "3662": {"id": 3662, "code": "x = 20;y = 30\nif y * 2 >= x:\n    print(0)\nelse:\n    print(x-y*2)", "coverage": [">", ">", ">", "!", "!"]}, "3663": {"id": 3663, "code": "w = 12;c = 4\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", "!", ">"]}, "3664": {"id": 3664, "code": "w = 20;c = 15\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "3665": {"id": 3665, "code": "w = 20;c = 30\nres = w - (2*c)\nif res < 0:\n    res =0\nprint(res)", "coverage": [">", ">", ">", ">", ">"]}, "3666": {"id": 3666, "code": "A = 12;B = 4\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "3667": {"id": 3667, "code": "A = 20;B = 15\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "3668": {"id": 3668, "code": "A = 20;B = 30\nans=int(A-B*2)\nprint(ans if ans >= 0 else 0)", "coverage": [">", ">", ">"]}, "3669": {"id": 3669, "code": "def main():\n    a = 12;b = 4\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3670": {"id": 3670, "code": "def main():\n    a = 20;b = 15\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3671": {"id": 3671, "code": "def main():\n    a = 20;b = 30\n    print(a - b*2 if a >= b*2 else 0)\nif __name__ ==  \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3672": {"id": 3672, "code": "from sys import stdin\na = 12;b = 4\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3673": {"id": 3673, "code": "from sys import stdin\na = 20;b = 15\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3674": {"id": 3674, "code": "from sys import stdin\na = 20;b = 30\nans = max(0, a - 2 * b)\nprint(ans)", "coverage": [">", ">", ">", ">"]}, "3675": {"id": 3675, "code": "a = 12;b = 4\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "3676": {"id": 3676, "code": "a = 20;b = 15\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "3677": {"id": 3677, "code": "a = 20;b = 30\nprint(a-b*2 if b*2 <= a else '0')", "coverage": [">", ">"]}, "3678": {"id": 3678, "code": "a = 12;b = 4\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "3679": {"id": 3679, "code": "a = 20;b = 15\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "3680": {"id": 3680, "code": "a = 20;b = 30\nremain = a - (b * 2)\nprint(remain if remain >= 0 else 0)", "coverage": [">", ">", ">"]}, "3681": {"id": 3681, "code": "a = 12;b = 4\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", ">", "!", "!"]}, "3682": {"id": 3682, "code": "a = 20;b = 15\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3683": {"id": 3683, "code": "a = 20;b = 30\nans = a - b - b\nif ans > 0:\n    print(ans)\nelse:\n    print(0)", "coverage": [">", ">", ">", "!", "!", ">"]}, "3684": {"id": 3684, "code": "a = 12;b = 4\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3685": {"id": 3685, "code": "a = 20;b = 15\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3686": {"id": 3686, "code": "a = 20;b = 30\nprint(max(0,a-2*b))", "coverage": [">", ">"]}, "3687": {"id": 3687, "code": "a = 12;b = 4\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", "!", ">"]}, "3688": {"id": 3688, "code": "a = 20;b = 15\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "3689": {"id": 3689, "code": "a = 20;b = 30\nnum = a-(b*2)\nif num < 0:\n  num = 0\nprint(num)", "coverage": [">", ">", ">", ">", ">"]}, "3690": {"id": 3690, "code": "A = 12;B = 4\nC = A - B * 2\nprint(0 if C < 0 else C)", "coverage": [">", ">", ">"]}, "3691": {"id": 3691, "code": "A = 20;B = 15\nC = A - B * 2\nprint(0 if C < 0 else C)", "coverage": [">", ">", ">"]}, "3692": {"id": 3692, "code": "A = 20;B = 30\nC = A - B * 2\nprint(0 if C < 0 else C)", "coverage": [">", ">", ">"]}, "3693": {"id": 3693, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 12;b = 4\nprint(curtain(a,b))", "coverage": [">", ">", "!", "!", ">", ">", ">"]}, "3694": {"id": 3694, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 20;b = 15\nprint(curtain(a,b))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3695": {"id": 3695, "code": "def curtain(x,y):\n  if (2*b>=a):\n    return 0;\n  else:\n    return (a-(2*b))\na = 20;b = 30\nprint(curtain(a,b))", "coverage": [">", ">", ">", "!", "!", ">", ">"]}, "3696": {"id": 3696, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 12;B = 4\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3697": {"id": 3697, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 20;B = 15\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3698": {"id": 3698, "code": "import sys\ninput = \"<function <lambda>>\"\ndef solve():\n    A = 20;B = 30\n    ans = max(0, A - 2 * B)\n    print(ans)\nif __name__ == '__main__':\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "3699": {"id": 3699, "code": "a = 12;b = 4\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "3700": {"id": 3700, "code": "a = 20;b = 15\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "3701": {"id": 3701, "code": "a = 20;b = 30\nprint(a - (2 * b) if a > (2 * b) else 0)", "coverage": [">", ">"]}, "3702": {"id": 3702, "code": "A = 12;B = 4\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", "!", ">"]}, "3703": {"id": 3703, "code": "A = 20;B = 15\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3704": {"id": 3704, "code": "A = 20;B = 30\nans = A - B*2\nif ans <= 0:\n    ans = 0\nprint(ans)", "coverage": [">", ">", ">", ">", ">"]}, "3705": {"id": 3705, "code": "A = 12;B = 4\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3706": {"id": 3706, "code": "A = 20;B = 15\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3707": {"id": 3707, "code": "A = 20;B = 30\nprint(max(0, A-2*B))", "coverage": [">", ">"]}, "3708": {"id": 3708, "code": "A = 12;B = 4\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "3709": {"id": 3709, "code": "A = 20;B = 15\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "3710": {"id": 3710, "code": "A = 20;B = 30\nprint(max(A-2*B,0))", "coverage": [">", ">"]}, "3711": {"id": 3711, "code": "def main():\n    A = 12;B = 4\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3712": {"id": 3712, "code": "def main():\n    A = 20;B = 15\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3713": {"id": 3713, "code": "def main():\n    A = 20;B = 30\n    print(max(0,A-2*B))\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">"]}, "3714": {"id": 3714, "code": "def main():\n    A = 12;B = 4\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "3715": {"id": 3715, "code": "def main():\n    A = 20;B = 15\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3716": {"id": 3716, "code": "def main():\n    A = 20;B = 30\n    if A - 2 * B > 0:\n        ans = A - 2 * B\n    else:\n        ans = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "3717": {"id": 3717, "code": "A = 12;B = 4\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", "!", ">"]}, "3718": {"id": 3718, "code": "A = 20;B = 15\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "3719": {"id": 3719, "code": "A = 20;B = 30\nc = A - 2 * B\nif c < 0:\n    c = 0\nprint(c)", "coverage": [">", ">", ">", ">", ">"]}, "3720": {"id": 3720, "code": "a = 12;b = 4\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "3721": {"id": 3721, "code": "a = 20;b = 15\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "3722": {"id": 3722, "code": "a = 20;b = 30\nc = a - (2 * b)\nprint(c if c >= 0 else 0)", "coverage": [">", ">", ">"]}, "3723": {"id": 3723, "code": "N = 12;M = 4\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "3724": {"id": 3724, "code": "N = 20;M = 15\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "3725": {"id": 3725, "code": "N = 20;M = 30\nprint(max(0,N-2*M))", "coverage": [">", ">"]}, "8320": {"id": 8320, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8321": {"id": 8321, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8322": {"id": 8322, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8323": {"id": 8323, "code": "N = 1\nA1 = [2]\nA2 = [3]\ncandy = []\ndef sum_A1(x):\n  cnt = 0\n  for i in range(x+1):\n    cnt += A1[i]\n  return cnt\ndef sum_A2(x):\n  cnt = 0\n  for i in range(x,N):\n    cnt += A2[i]\n  return cnt\nfor i in range(N):\n  candy.append(sum_A1(i) + sum_A2(i))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8324": {"id": 8324, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nC = [0] * N \nC[0] = A[0] + sum(B)\nfor i in range(1,N):\n    C[i] = C[i-1]+A[i]-B[i-1]\nprint(max(C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8325": {"id": 8325, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nC = [0] * N \nC[0] = A[0] + sum(B)\nfor i in range(1,N):\n    C[i] = C[i-1]+A[i]-B[i-1]\nprint(max(C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8326": {"id": 8326, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nC = [0] * N \nC[0] = A[0] + sum(B)\nfor i in range(1,N):\n    C[i] = C[i-1]+A[i]-B[i-1]\nprint(max(C))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8327": {"id": 8327, "code": "N = 1\nA = [2]\nB = [3]\nC = [0] * N \nC[0] = A[0] + sum(B)\nfor i in range(1,N):\n    C[i] = C[i-1]+A[i]-B[i-1]\nprint(max(C))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "8328": {"id": 8328, "code": "N = 5\ncandies_i = [3, 2, 2, 4, 1]\ncandies_j = [1, 2, 2, 2, 1]\nl = []\nfor i in range(N):\n    total_li = sum(candies_i[:i+1])\n    total_lj = sum(candies_j[i:])\n    total = total_li + total_lj\n    l.append(total)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8329": {"id": 8329, "code": "N = 4\ncandies_i = [1, 1, 1, 1]\ncandies_j = [1, 1, 1, 1]\nl = []\nfor i in range(N):\n    total_li = sum(candies_i[:i+1])\n    total_lj = sum(candies_j[i:])\n    total = total_li + total_lj\n    l.append(total)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8330": {"id": 8330, "code": "N = 7\ncandies_i = [3, 3, 4, 5, 4, 5, 3]\ncandies_j = [5, 3, 4, 4, 2, 3, 2]\nl = []\nfor i in range(N):\n    total_li = sum(candies_i[:i+1])\n    total_lj = sum(candies_j[i:])\n    total = total_li + total_lj\n    l.append(total)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8331": {"id": 8331, "code": "N = 1\ncandies_i = [2]\ncandies_j = [3]\nl = []\nfor i in range(N):\n    total_li = sum(candies_i[:i+1])\n    total_lj = sum(candies_j[i:])\n    total = total_li + total_lj\n    l.append(total)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8332": {"id": 8332, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8333": {"id": 8333, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8334": {"id": 8334, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8335": {"id": 8335, "code": "n = 1\na1 = [2]\na2 = [3]\nmaxi=0\nfor i in range(n):maxi=max(maxi,sum(a1[:i+1]+a2[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8336": {"id": 8336, "code": "N = 5\nAU = [3, 2, 2, 4, 1]\nAD = [1, 2, 2, 2, 1]\nAUS = [AU[0]]\nADS = [AD[-1]]\nfor i in range(1, N):\n  AUS.append(AUS[-1] + AU[i])\n  ADS.append(ADS[-1] + AD[-1-i])\nADS.reverse()\nans = 0\nfor i in range(N):\n  temp = AUS[i]+ADS[i]\n  ans = max(ans, temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8337": {"id": 8337, "code": "N = 4\nAU = [1, 1, 1, 1]\nAD = [1, 1, 1, 1]\nAUS = [AU[0]]\nADS = [AD[-1]]\nfor i in range(1, N):\n  AUS.append(AUS[-1] + AU[i])\n  ADS.append(ADS[-1] + AD[-1-i])\nADS.reverse()\nans = 0\nfor i in range(N):\n  temp = AUS[i]+ADS[i]\n  ans = max(ans, temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8338": {"id": 8338, "code": "N = 7\nAU = [3, 3, 4, 5, 4, 5, 3]\nAD = [5, 3, 4, 4, 2, 3, 2]\nAUS = [AU[0]]\nADS = [AD[-1]]\nfor i in range(1, N):\n  AUS.append(AUS[-1] + AU[i])\n  ADS.append(ADS[-1] + AD[-1-i])\nADS.reverse()\nans = 0\nfor i in range(N):\n  temp = AUS[i]+ADS[i]\n  ans = max(ans, temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8339": {"id": 8339, "code": "N = 1\nAU = [2]\nAD = [3]\nAUS = [AU[0]]\nADS = [AD[-1]]\nfor i in range(1, N):\n  AUS.append(AUS[-1] + AU[i])\n  ADS.append(ADS[-1] + AD[-1-i])\nADS.reverse()\nans = 0\nfor i in range(N):\n  temp = AUS[i]+ADS[i]\n  ans = max(ans, temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8340": {"id": 8340, "code": "n = 5\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(A[0][:i + 1]) + sum(A[1][i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8341": {"id": 8341, "code": "n = 4\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(A[0][:i + 1]) + sum(A[1][i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8342": {"id": 8342, "code": "n = 7\nA = [[3, 3, 4, 5, 4, 5, 3], [5, 3, 4, 4, 2, 3, 2]]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(A[0][:i + 1]) + sum(A[1][i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8343": {"id": 8343, "code": "n = 1\nA = [[2], [3]]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(A[0][:i + 1]) + sum(A[1][i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">"]}, "8344": {"id": 8344, "code": "def main():\n    n = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8345": {"id": 8345, "code": "def main():\n    n = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8346": {"id": 8346, "code": "def main():\n    n = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8347": {"id": 8347, "code": "def main():\n    n = 1\n    A1 = [2]\n    A2 = [3]\n    ans = 0\n    for i in range(n - 1):\n        A1[i + 1] += A1[i]\n        A2[n - i - 2] += A2[n - i - 1]\n    for i in range(n):\n        ans = max(ans, A1[i] + A2[i])\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "8348": {"id": 8348, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 5\n    a1_list = [3, 2, 2, 4, 1]\n    a2_list = [1, 2, 2, 2, 1]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8349": {"id": 8349, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 4\n    a1_list = [1, 1, 1, 1]\n    a2_list = [1, 1, 1, 1]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8350": {"id": 8350, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 7\n    a1_list = [3, 3, 4, 5, 4, 5, 3]\n    a2_list = [5, 3, 4, 4, 2, 3, 2]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8351": {"id": 8351, "code": "import itertools\ndef solve(n, a1_list, a2_list):\n    a1_acc = itertools.accumulate(a1_list)\n    a2_acc = reversed(list(itertools.accumulate(reversed(a2_list))))\n    ans = max([i + j for i, j in zip(a1_acc, a2_acc)])\n    return ans\nif __name__ == \"__main__\":\n    n = 1\n    a1_list = [2]\n    a2_list = [3]\n    print(solve(n, a1_list, a2_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8352": {"id": 8352, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8353": {"id": 8353, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8354": {"id": 8354, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8355": {"id": 8355, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A[:i+1]) + sum(B[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8356": {"id": 8356, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=sum(a1)+a2[n-1]\nsum_a=ans\nfor i in range(n-1):\n  sum_a=sum_a-a1[n-1-i]+a2[n-2-i]\n  ans=max(ans,sum_a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8357": {"id": 8357, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=sum(a1)+a2[n-1]\nsum_a=ans\nfor i in range(n-1):\n  sum_a=sum_a-a1[n-1-i]+a2[n-2-i]\n  ans=max(ans,sum_a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8358": {"id": 8358, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans=sum(a1)+a2[n-1]\nsum_a=ans\nfor i in range(n-1):\n  sum_a=sum_a-a1[n-1-i]+a2[n-2-i]\n  ans=max(ans,sum_a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8359": {"id": 8359, "code": "n = 1\na1 = [2]\na2 = [3]\nans=sum(a1)+a2[n-1]\nsum_a=ans\nfor i in range(n-1):\n  sum_a=sum_a-a1[n-1-i]+a2[n-2-i]\n  ans=max(ans,sum_a)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8360": {"id": 8360, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 5\n  U = [3, 2, 2, 4, 1]\n  L = [1, 2, 2, 2, 1]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8361": {"id": 8361, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 4\n  U = [1, 1, 1, 1]\n  L = [1, 1, 1, 1]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8362": {"id": 8362, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 7\n  U = [3, 3, 4, 5, 4, 5, 3]\n  L = [5, 3, 4, 4, 2, 3, 2]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8363": {"id": 8363, "code": "from sys import stdin\ninput = stdin.readline\ndef main():\n  N = 1\n  U = [2]\n  L = [3]\n  SU = [0]\n  for u in U:\n    SU.append(u + SU[-1])\n  SL = [0]\n  for l in L:\n    SL.append(l + SL[-1])\n  max_ = 0\n  for i in range(N):\n    max_ = max(max_, SU[i+1]+SL[N]-SL[i])\n  print(max_)\nif(__name__ == '__main__'):\n  main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8364": {"id": 8364, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8365": {"id": 8365, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8366": {"id": 8366, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8367": {"id": 8367, "code": "n = 1\nA1 = [2]\nA2 = [3]\nans=0\nfor i in range(n):\n    B1=A1[:i+1]\n    B2=A2[i:]\n    ans=max(ans,sum(B1)+sum(B2))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8368": {"id": 8368, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nma = 0\nfor i in range(N):\n    c = sum(A[:i+1]) + sum(B[i:])\n    ma = max(ma, c)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8369": {"id": 8369, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nma = 0\nfor i in range(N):\n    c = sum(A[:i+1]) + sum(B[i:])\n    ma = max(ma, c)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8370": {"id": 8370, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nma = 0\nfor i in range(N):\n    c = sum(A[:i+1]) + sum(B[i:])\n    ma = max(ma, c)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8371": {"id": 8371, "code": "N = 1\nA = [2]\nB = [3]\nma = 0\nfor i in range(N):\n    c = sum(A[:i+1]) + sum(B[i:])\n    ma = max(ma, c)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8372": {"id": 8372, "code": "n = 5\nlst1 = [3, 2, 2, 4, 1]\nlst2 = [1, 2, 2, 2, 1]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8373": {"id": 8373, "code": "n = 4\nlst1 = [1, 1, 1, 1]\nlst2 = [1, 1, 1, 1]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8374": {"id": 8374, "code": "n = 7\nlst1 = [3, 3, 4, 5, 4, 5, 3]\nlst2 = [5, 3, 4, 4, 2, 3, 2]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8375": {"id": 8375, "code": "n = 1\nlst1 = [2]\nlst2 = [3]\nres = 0\nfor i in range(n):\n  res = max(res, sum(lst1[:i + 1]) + sum(lst2[i:]))\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8376": {"id": 8376, "code": "n = 5\nx = [3, 2, 2, 4, 1]\ny = [1, 2, 2, 2, 1]\nmx=0\nfor i in range(n):\n  ans=sum(x[:i+1])+sum(y[i:])\n  if ans>mx:\n    mx=ans\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8377": {"id": 8377, "code": "n = 4\nx = [1, 1, 1, 1]\ny = [1, 1, 1, 1]\nmx=0\nfor i in range(n):\n  ans=sum(x[:i+1])+sum(y[i:])\n  if ans>mx:\n    mx=ans\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8378": {"id": 8378, "code": "n = 7\nx = [3, 3, 4, 5, 4, 5, 3]\ny = [5, 3, 4, 4, 2, 3, 2]\nmx=0\nfor i in range(n):\n  ans=sum(x[:i+1])+sum(y[i:])\n  if ans>mx:\n    mx=ans\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8379": {"id": 8379, "code": "n = 1\nx = [2]\ny = [3]\nmx=0\nfor i in range(n):\n  ans=sum(x[:i+1])+sum(y[i:])\n  if ans>mx:\n    mx=ans\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8380": {"id": 8380, "code": "n = 5\nla1 = [3, 2, 2, 4, 1]\nla2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8381": {"id": 8381, "code": "n = 4\nla1 = [1, 1, 1, 1]\nla2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8382": {"id": 8382, "code": "n = 7\nla1 = [3, 3, 4, 5, 4, 5, 3]\nla2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8383": {"id": 8383, "code": "n = 1\nla1 = [2]\nla2 = [3]\nans = 0\nfor i in range(n):\n    s1 = sum(la1[:i + 1])\n    s2 = sum(la2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8384": {"id": 8384, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8385": {"id": 8385, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8386": {"id": 8386, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!"]}, "8387": {"id": 8387, "code": "N = 1\nA1 = [2]\nA2 = [3]\nC = []\nS = sum(A2) + A1[0]\nfor i in range(1,N):\n  C.append(S)\n  S += A1[i]-A2[i-1]\nif N != 1:\n  print(max(C))\nelse:\n  print(A1[0]+A2[0])", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", "!", "!", ">"]}, "8388": {"id": 8388, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8389": {"id": 8389, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8390": {"id": 8390, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8391": {"id": 8391, "code": "n = 1\na1 = [2]\na2 = [3]\nans = sum(a1)+a2[-1]\nmemo = ans\na1.reverse()\na2.reverse()\nfor i in range(n-1):\n    memo -=a1[i]-a2[i+1]\n    if memo > ans:\n        ans = memo\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "8392": {"id": 8392, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nini = a1[0]+sum(a2)\nans = ini\nfor i in range(1, n):\n    s = ini - a2[i-1] + a1[i]\n    if s >= ans:\n        ans = s\n    ini = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8393": {"id": 8393, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nini = a1[0]+sum(a2)\nans = ini\nfor i in range(1, n):\n    s = ini - a2[i-1] + a1[i]\n    if s >= ans:\n        ans = s\n    ini = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8394": {"id": 8394, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nini = a1[0]+sum(a2)\nans = ini\nfor i in range(1, n):\n    s = ini - a2[i-1] + a1[i]\n    if s >= ans:\n        ans = s\n    ini = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8395": {"id": 8395, "code": "n = 1\na1 = [2]\na2 = [3]\nini = a1[0]+sum(a2)\nans = ini\nfor i in range(1, n):\n    s = ini - a2[i-1] + a1[i]\n    if s >= ans:\n        ans = s\n    ini = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "8396": {"id": 8396, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nres = 0\nfor i in range(n):\n  c = 0\n  for j in range(n):\n    if j < i:\n      c += a[j]\n    elif j == i:\n      c += a[j]\n      c += b[j]\n    else:\n      c += b[j]\n  res = max(res,c)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8397": {"id": 8397, "code": "n = 1\na = [2]\nb = [3]\nres = 0\nfor i in range(n):\n  c = 0\n  for j in range(n):\n    if j < i:\n      c += a[j]\n    elif j == i:\n      c += a[j]\n      c += b[j]\n    else:\n      c += b[j]\n  res = max(res,c)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", "!", ">", ">"]}, "8398": {"id": 8398, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8399": {"id": 8399, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8400": {"id": 8400, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8401": {"id": 8401, "code": "n = 1\na1 = [2]\na2 = [3]\nans=0\nfor i in range(n):\n    top=sum(a1[:i+1])\n    bottom=sum(a2[i:])\n    tmp=top+bottom\n    ans=max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8402": {"id": 8402, "code": "n = 5\na_l1 = [3, 2, 2, 4, 1]\na_l2 = [1, 2, 2, 2, 1]\nc = 0\nm_a_l1 = []\nfor i in a_l1:\n    c += i\n    m_a_l1.append(c)\nc = 0\nm_a_l2 = [0] * n\nfor i,j in enumerate(reversed(a_l2)):\n    c += j\n    m_a_l2[-1-i] = c\nans = 0\nfor i,j in zip(m_a_l1, m_a_l2):\n    ans = max(i+j, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8403": {"id": 8403, "code": "n = 4\na_l1 = [1, 1, 1, 1]\na_l2 = [1, 1, 1, 1]\nc = 0\nm_a_l1 = []\nfor i in a_l1:\n    c += i\n    m_a_l1.append(c)\nc = 0\nm_a_l2 = [0] * n\nfor i,j in enumerate(reversed(a_l2)):\n    c += j\n    m_a_l2[-1-i] = c\nans = 0\nfor i,j in zip(m_a_l1, m_a_l2):\n    ans = max(i+j, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8404": {"id": 8404, "code": "n = 1\na_l1 = [2]\na_l2 = [3]\nc = 0\nm_a_l1 = []\nfor i in a_l1:\n    c += i\n    m_a_l1.append(c)\nc = 0\nm_a_l2 = [0] * n\nfor i,j in enumerate(reversed(a_l2)):\n    c += j\n    m_a_l2[-1-i] = c\nans = 0\nfor i,j in zip(m_a_l1, m_a_l2):\n    ans = max(i+j, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8405": {"id": 8405, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=[0]*N\ni=0\nwhile i<N:\n    ans[i]+=sum(A1[:i+1])\n    ans[i]+=sum(A2[i:])\n    i+=1\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8406": {"id": 8406, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=[0]*N\ni=0\nwhile i<N:\n    ans[i]+=sum(A1[:i+1])\n    ans[i]+=sum(A2[i:])\n    i+=1\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8407": {"id": 8407, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans=[0]*N\ni=0\nwhile i<N:\n    ans[i]+=sum(A1[:i+1])\n    ans[i]+=sum(A2[i:])\n    i+=1\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8408": {"id": 8408, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans=[0]*N\ni=0\nwhile i<N:\n    ans[i]+=sum(A1[:i+1])\n    ans[i]+=sum(A2[i:])\n    i+=1\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8409": {"id": 8409, "code": "import itertools\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncsA1 = list(itertools.accumulate(A1))\ncsA2 = list(itertools.accumulate(A2))\nans = A1[0] + csA2[-1]\nfor i in range(N-1):\n    tmp = csA1[i] + (csA2[-1] - csA2[i]) + A2[i]\n    ans = max(ans,tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8410": {"id": 8410, "code": "import itertools\nN = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncsA1 = list(itertools.accumulate(A1))\ncsA2 = list(itertools.accumulate(A2))\nans = A1[0] + csA2[-1]\nfor i in range(N-1):\n    tmp = csA1[i] + (csA2[-1] - csA2[i]) + A2[i]\n    ans = max(ans,tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8411": {"id": 8411, "code": "import itertools\nN = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncsA1 = list(itertools.accumulate(A1))\ncsA2 = list(itertools.accumulate(A2))\nans = A1[0] + csA2[-1]\nfor i in range(N-1):\n    tmp = csA1[i] + (csA2[-1] - csA2[i]) + A2[i]\n    ans = max(ans,tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8412": {"id": 8412, "code": "import itertools\nN = 1\nA1 = [2]\nA2 = [3]\ncsA1 = list(itertools.accumulate(A1))\ncsA2 = list(itertools.accumulate(A2))\nans = A1[0] + csA2[-1]\nfor i in range(N-1):\n    tmp = csA1[i] + (csA2[-1] - csA2[i]) + A2[i]\n    ans = max(ans,tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8413": {"id": 8413, "code": "N = 5\nA_list = []\nA_list.append(list(map(int, \"3 2 2 4 1\".split())))\nA_list.append(list(map(int, \"1 2 2 2 1\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8414": {"id": 8414, "code": "N = 4\nA_list = []\nA_list.append(list(map(int, \"1 1 1 1\".split())))\nA_list.append(list(map(int, \"1 1 1 1\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8415": {"id": 8415, "code": "N = 7\nA_list = []\nA_list.append(list(map(int, \"3 3 4 5 4 5 3\".split())))\nA_list.append(list(map(int, \"5 3 4 4 2 3 2\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8416": {"id": 8416, "code": "N = 1\nA_list = []\nA_list.append(list(map(int, \"2\".split())))\nA_list.append(list(map(int, \"3\".split())))\ncandy_max_count = 0\nfor switch_path_index in range(N):\n    candy_count = sum(A_list[0][0:switch_path_index + 1]) + sum(A_list[1][switch_path_index:N])\n    candy_max_count = max(candy_max_count, candy_count)\nprint(candy_max_count)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8417": {"id": 8417, "code": "n = 5\na_1 = [3, 2, 2, 4, 1]\na_2 = [1, 2, 2, 2, 1]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8418": {"id": 8418, "code": "n = 4\na_1 = [1, 1, 1, 1]\na_2 = [1, 1, 1, 1]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8419": {"id": 8419, "code": "n = 7\na_1 = [3, 3, 4, 5, 4, 5, 3]\na_2 = [5, 3, 4, 4, 2, 3, 2]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8420": {"id": 8420, "code": "n = 1\na_1 = [2]\na_2 = [3]\nsum_a_1 = [0]\nsum_a_2 = [0]\nfor i in range(n):\n    sum_a_1.append(sum_a_1[-1] + a_1[i])\n    sum_a_2.append(sum_a_2[-1] + a_2[n-i-1])\nres = 0\nfor i in range(n):\n    res = max(res, sum_a_1[i+1] + sum_a_2[n-i])\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8421": {"id": 8421, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8422": {"id": 8422, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8423": {"id": 8423, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8424": {"id": 8424, "code": "N = 1\nA1 = [2]\nA2 = [3]\nsum2 = sum(A2)\nans = A1[0]+sum2\nvalue = A1[0]+sum2\nfor i in range(1,N):\n    value = value + A1[i] - A2[i-1]\n    ans = max(ans,value)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8425": {"id": 8425, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nmax = -1\nfor i in range(N):\n    sum = 0\n    for k in range(i+1):\n        sum += A[k]\n    for k in range(i,N):\n        sum += B[k]\n    if sum > max:\n        max = sum\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8426": {"id": 8426, "code": "N = 1\nA = [2]\nB = [3]\nmax = -1\nfor i in range(N):\n    sum = 0\n    for k in range(i+1):\n        sum += A[k]\n    for k in range(i,N):\n        sum += B[k]\n    if sum > max:\n        max = sum\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8427": {"id": 8427, "code": "n = 1\na = []\na.append([int(i) for i in \"2\".split()])\na.append([int(i) for i in \"3\".split()])\nans = 0\nfor i in range(n):\n    tmp = a[0][0]\n    x = 0\n    y = 0\n    for j in range(n):\n        if i == j:\n            y += 1\n        else:\n            x += 1\n        tmp += a[y][x]\n    ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8428": {"id": 8428, "code": "n = 1\na = [[2], [3]]\name = 0\name_l = []\nfor i in range(n): \n  for j in range(n): \n    if i > j:\n      ame += a[0][j]\n    elif i == j:\n      ame += a[0][j]+a[1][j]\n    else:\n      ame += a[1][j]\n    if j == n-1:\n      ame_l.append(ame)\n      ame = 0\nprint(max(ame_l))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8429": {"id": 8429, "code": "N = 4\nA = [0] * 2\nA = [[1, 1, 1, 1], 0]\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\nans = 0\nfor i in range(N):\n    now = 0\n    for j in range(N):\n        if j < i:\n            now += A[0][j]\n        elif j > i:\n            now += A[1][j]\n        else:\n            now += A[0][j] + A[1][j]\n    ans = max(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8430": {"id": 8430, "code": "N = 1\nA = [0] * 2\nA = [[2], 0]\nA = [[2], [3]]\nans = 0\nfor i in range(N):\n    now = 0\n    for j in range(N):\n        if j < i:\n            now += A[0][j]\n        elif j > i:\n            now += A[1][j]\n        else:\n            now += A[0][j] + A[1][j]\n    ans = max(ans, now)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", "!", "!", ">", ">", ">"]}, "8431": {"id": 8431, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nA2.reverse()\nA1_=[]\nA2_=[]\na1_=0\na2_=0\nfor n in range(N):\n    a1_ = a1_+A1[n]\n    a2_ = a2_+A2[n]\n    A1_.append(a1_)\n    A2_.append(a2_)\nA2_.reverse()\nans=0\nfor n in range(N):\n    if ans < A1_[n]+A2_[n]:\n        ans = A1_[n]+A2_[n]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8432": {"id": 8432, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nA2.reverse()\nA1_=[]\nA2_=[]\na1_=0\na2_=0\nfor n in range(N):\n    a1_ = a1_+A1[n]\n    a2_ = a2_+A2[n]\n    A1_.append(a1_)\n    A2_.append(a2_)\nA2_.reverse()\nans=0\nfor n in range(N):\n    if ans < A1_[n]+A2_[n]:\n        ans = A1_[n]+A2_[n]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8433": {"id": 8433, "code": "N = 1\nA1 = [2]\nA2 = [3]\nA2.reverse()\nA1_=[]\nA2_=[]\na1_=0\na2_=0\nfor n in range(N):\n    a1_ = a1_+A1[n]\n    a2_ = a2_+A2[n]\n    A1_.append(a1_)\n    A2_.append(a2_)\nA2_.reverse()\nans=0\nfor n in range(N):\n    if ans < A1_[n]+A2_[n]:\n        ans = A1_[n]+A2_[n]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8434": {"id": 8434, "code": "N = 5\nA = [[],[]]\nA = [[3, 2, 2, 4, 1], []]\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\nresult = 0\nfor i in range(N+1):\n    result = max(sum(A[0][:i]) + sum(A[1][i-1:]), result)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8435": {"id": 8435, "code": "N = 4\nA = [[],[]]\nA = [[1, 1, 1, 1], []]\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\nresult = 0\nfor i in range(N+1):\n    result = max(sum(A[0][:i]) + sum(A[1][i-1:]), result)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8436": {"id": 8436, "code": "N = 7\nA = [[],[]]\nA = [[3, 3, 4, 5, 4, 5, 3], []]\nA = [[3, 3, 4, 5, 4, 5, 3], [5, 3, 4, 4, 2, 3, 2]]\nresult = 0\nfor i in range(N+1):\n    result = max(sum(A[0][:i]) + sum(A[1][i-1:]), result)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8437": {"id": 8437, "code": "N = 1\nA = [[],[]]\nA = [[2], []]\nA = [[2], [3]]\nresult = 0\nfor i in range(N+1):\n    result = max(sum(A[0][:i]) + sum(A[1][i-1:]), result)\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8438": {"id": 8438, "code": "import sys\ninput = sys.stdin.readline\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncount =[0]*N\nif N ==1:\n    count[0] =A1[0] +A2[0]\nelse:\n    for i in range(N-1):\n        count[i] =sum(A1[:i+1]) +sum(A2[i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8439": {"id": 8439, "code": "import sys\ninput = sys.stdin.readline\nN = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncount =[0]*N\nif N ==1:\n    count[0] =A1[0] +A2[0]\nelse:\n    for i in range(N-1):\n        count[i] =sum(A1[:i+1]) +sum(A2[i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8440": {"id": 8440, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncount =[0]*N\nif N ==1:\n    count[0] =A1[0] +A2[0]\nelse:\n    for i in range(N-1):\n        count[i] =sum(A1[:i+1]) +sum(A2[i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8441": {"id": 8441, "code": "import sys\ninput = sys.stdin.readline\nN = 1\nA1 = [2]\nA2 = [3]\ncount =[0]*N\nif N ==1:\n    count[0] =A1[0] +A2[0]\nelse:\n    for i in range(N-1):\n        count[i] =sum(A1[:i+1]) +sum(A2[i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">"]}, "8442": {"id": 8442, "code": "N = 1\narray1 = [2]\narray2 = [3]\ncount = [0 for i in range(N)] \nfor k in range(N): \n    i = 0\n    j = k\n    while i <= k:\n        count[k] = count[k] + array1[i] \n        i+=1            \n        while j <= N-1:\n            count[k] = count[k] + array2[j]\n            j+=1\ncount.sort(reverse = True)\nprint(count[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8443": {"id": 8443, "code": "N = 5\nA = [[],[]]\nA = [[3, 2, 2, 4, 1], []]\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8444": {"id": 8444, "code": "N = 4\nA = [[],[]]\nA = [[1, 1, 1, 1], []]\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8445": {"id": 8445, "code": "N = 7\nA = [[],[]]\nA = [[3, 3, 4, 5, 4, 5, 3], []]\nA = [[3, 3, 4, 5, 4, 5, 3], [5, 3, 4, 4, 2, 3, 2]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8446": {"id": 8446, "code": "N = 1\nA = [[],[]]\nA = [[2], []]\nA = [[2], [3]]\ntotals = []\nfor j in range(N):\n    totals.append(sum(A[0][0:j+1]) + sum(A[1][j:]))\nprint(max(totals))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8447": {"id": 8447, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\ntmp = sum(A) + B[N-1]\nans = tmp\nfor i in reversed(range(1,N)):\n    tmp -= A[i]\n    tmp += B[i-1]\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8448": {"id": 8448, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\ntmp = sum(A) + B[N-1]\nans = tmp\nfor i in reversed(range(1,N)):\n    tmp -= A[i]\n    tmp += B[i-1]\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8449": {"id": 8449, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\ntmp = sum(A) + B[N-1]\nans = tmp\nfor i in reversed(range(1,N)):\n    tmp -= A[i]\n    tmp += B[i-1]\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8450": {"id": 8450, "code": "N = 1\nA = [2]\nB = [3]\ntmp = sum(A) + B[N-1]\nans = tmp\nfor i in reversed(range(1,N)):\n    tmp -= A[i]\n    tmp += B[i-1]\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "8451": {"id": 8451, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nl = []\nfor i in range(N):\n    l.append(sum(A[:N-i])+sum(B[:i+1]))\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8452": {"id": 8452, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nl = []\nfor i in range(N):\n    l.append(sum(A[:N-i])+sum(B[:i+1]))\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8453": {"id": 8453, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [2, 3, 2, 4, 4, 3, 5]\nl = []\nfor i in range(N):\n    l.append(sum(A[:N-i])+sum(B[:i+1]))\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8454": {"id": 8454, "code": "N = 1\nA = [2]\nB = [3]\nl = []\nfor i in range(N):\n    l.append(sum(A[:N-i])+sum(B[:i+1]))\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8455": {"id": 8455, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8456": {"id": 8456, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8457": {"id": 8457, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8458": {"id": 8458, "code": "n = 1\na = [2]\nb = [3]\ntmp = []\ncnd = 0\nfor i in range(n):\n    cnd = sum(a[:i+1]) + sum(b[i:])\n    tmp.append(cnd)\n    cnd = 0\nprint(max(tmp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8459": {"id": 8459, "code": "N = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nMAX=0\nfor i in range(N):\n  tmp = sum(a1[:i+1])+sum(a2[i:])\n  MAX = max(MAX,tmp)\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8460": {"id": 8460, "code": "N = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nMAX=0\nfor i in range(N):\n  tmp = sum(a1[:i+1])+sum(a2[i:])\n  MAX = max(MAX,tmp)\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8461": {"id": 8461, "code": "N = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nMAX=0\nfor i in range(N):\n  tmp = sum(a1[:i+1])+sum(a2[i:])\n  MAX = max(MAX,tmp)\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8462": {"id": 8462, "code": "N = 1\na1 = [2]\na2 = [3]\nMAX=0\nfor i in range(N):\n  tmp = sum(a1[:i+1])+sum(a2[i:])\n  MAX = max(MAX,tmp)\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8463": {"id": 8463, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8464": {"id": 8464, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8465": {"id": 8465, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8466": {"id": 8466, "code": "n = 1\na1 = [2]\na2 = [3]\nb1 = [0]\nb2 = [0]\nfor i in range(n):\n    b1.append(b1[-1] + a1[i])\n    b2.append(b2[-1] + a2[i])\nans = 0\nfor i in range(n):\n    tmp = b1[i+1] + b2[-1] - b2[i]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8467": {"id": 8467, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8468": {"id": 8468, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8469": {"id": 8469, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8470": {"id": 8470, "code": "N = 1\nA = [2]\nB = [3]\nlist1 = []\name = A[0]\nfor i in range(N-1):\n  list1.append(sum(A[:i+1])+sum(B[i:]))\nif list1 == []:\n  print(A[0]+B[0])\nelse:\n  print(max(list1))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!"]}, "8471": {"id": 8471, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncandy = []\nfor n in range(N):\n    candy.append(sum(A1[:n+1]) + sum(A2[n:]))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8472": {"id": 8472, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandy = []\nfor n in range(N):\n    candy.append(sum(A1[:n+1]) + sum(A2[n:]))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8473": {"id": 8473, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandy = []\nfor n in range(N):\n    candy.append(sum(A1[:n+1]) + sum(A2[n:]))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8474": {"id": 8474, "code": "N = 1\nA1 = [2]\nA2 = [3]\ncandy = []\nfor n in range(N):\n    candy.append(sum(A1[:n+1]) + sum(A2[n:]))\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8475": {"id": 8475, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nl = []\nfor i in range(n):\n  x = sum(a1[:i+1]) + sum(a2[i:])\n  l.append(x)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8476": {"id": 8476, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nl = []\nfor i in range(n):\n  x = sum(a1[:i+1]) + sum(a2[i:])\n  l.append(x)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8477": {"id": 8477, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nl = []\nfor i in range(n):\n  x = sum(a1[:i+1]) + sum(a2[i:])\n  l.append(x)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8478": {"id": 8478, "code": "n = 1\na1 = [2]\na2 = [3]\nl = []\nfor i in range(n):\n  x = sum(a1[:i+1]) + sum(a2[i:])\n  l.append(x)\nprint(max(l))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8479": {"id": 8479, "code": "N = 4\nA_1 = [1, 1, 1, 1]\nA_2 = [1, 1, 1, 1]\nsum=0\nfor k in range(1,N+1):\n    sum_2=0\n    for i in range(0,k): \n        sum_2=sum_2+A_1[i]\n    for j in range(k-1,N):\n        sum_2=sum_2+A_2[j]\n    if sum<sum_2:    \n        sum=sum_2    \nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8480": {"id": 8480, "code": "N = 1\nA_1 = [2]\nA_2 = [3]\nsum=0\nfor k in range(1,N+1):\n    sum_2=0\n    for i in range(0,k): \n        sum_2=sum_2+A_1[i]\n    for j in range(k-1,N):\n        sum_2=sum_2+A_2[j]\n    if sum<sum_2:    \n        sum=sum_2    \nprint(sum)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8481": {"id": 8481, "code": "import sys\ninput = sys.stdin.readline\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8482": {"id": 8482, "code": "import sys\ninput = sys.stdin.readline\nN = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8483": {"id": 8483, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8484": {"id": 8484, "code": "import sys\ninput = sys.stdin.readline\nN = 1\nA1 = [2]\nA2 = [3]\nsumA1 = A1[0]\nsumA2 = sum(A2)\ntotal = sumA1 + sumA2\nans = total\nfor i in range(1,N):\n    sumA1 += A1[i]\n    sumA2 -= A2[i-1]\n    total = sumA1+sumA2\n    ans = max(ans,total)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "8485": {"id": 8485, "code": "N = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nA=[]\nB=[]\nsuma=0\nsumb=0\nfor n in range(N):\n    suma+=a[n]\n    A.append(suma)\nfor n in reversed(range(N)):\n    sumb+=b[n]\n    B.append(sumb)\nMAX=0\nfor n in range(N):\n    MAX=max(MAX,A[n]+B[N-n-1])\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8486": {"id": 8486, "code": "N = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nA=[]\nB=[]\nsuma=0\nsumb=0\nfor n in range(N):\n    suma+=a[n]\n    A.append(suma)\nfor n in reversed(range(N)):\n    sumb+=b[n]\n    B.append(sumb)\nMAX=0\nfor n in range(N):\n    MAX=max(MAX,A[n]+B[N-n-1])\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8487": {"id": 8487, "code": "N = 1\na = [2]\nb = [3]\nA=[]\nB=[]\nsuma=0\nsumb=0\nfor n in range(N):\n    suma+=a[n]\n    A.append(suma)\nfor n in reversed(range(N)):\n    sumb+=b[n]\n    B.append(sumb)\nMAX=0\nfor n in range(N):\n    MAX=max(MAX,A[n]+B[N-n-1])\nprint(MAX)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8488": {"id": 8488, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 5\n    a1 = chain(tuple([0]), tuple(map(int, \"3 2 2 4 1\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"1 2 2 2 1\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8489": {"id": 8489, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 4\n    a1 = chain(tuple([0]), tuple(map(int, \"1 1 1 1\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"1 1 1 1\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8490": {"id": 8490, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 7\n    a1 = chain(tuple([0]), tuple(map(int, \"3 3 4 5 4 5 3\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"5 3 4 4 2 3 2\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8491": {"id": 8491, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\nfrom collections import deque\ndef main():\n    n = 1\n    a1 = chain(tuple([0]), tuple(map(int, \"2\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"3\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    scores = deque()\n    for i1 in range(1, n + 1):\n        scores.append(a1a[i1] + a2a[n] - a2a[i1 - 1])\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8492": {"id": 8492, "code": "N = 5\narray1 = [3, 2, 2, 4, 1]\narray2 = [1, 2, 2, 2, 1]\nma = 0\nfor i in range(N):\n    candy = sum(array1[:i+1])+sum(array2[i:])\n    ma = max(ma,candy)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8493": {"id": 8493, "code": "N = 4\narray1 = [1, 1, 1, 1]\narray2 = [1, 1, 1, 1]\nma = 0\nfor i in range(N):\n    candy = sum(array1[:i+1])+sum(array2[i:])\n    ma = max(ma,candy)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8494": {"id": 8494, "code": "N = 7\narray1 = [3, 3, 4, 5, 4, 5, 3]\narray2 = [5, 3, 4, 4, 2, 3, 2]\nma = 0\nfor i in range(N):\n    candy = sum(array1[:i+1])+sum(array2[i:])\n    ma = max(ma,candy)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8495": {"id": 8495, "code": "N = 1\narray1 = [2]\narray2 = [3]\nma = 0\nfor i in range(N):\n    candy = sum(array1[:i+1])+sum(array2[i:])\n    ma = max(ma,candy)\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8496": {"id": 8496, "code": "def main():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8497": {"id": 8497, "code": "def main():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8498": {"id": 8498, "code": "def main():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8499": {"id": 8499, "code": "def main():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    ans = 0\n    for i in range(N):\n        temp = sum(A1[0:i + 1]) + sum(A2[i:N])\n        ans = max(ans, temp)\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8500": {"id": 8500, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = a1[0] + sum(a2)\ntmp = ans\nfor i in range(1, n):\n    tmp += a1[i] - a2[i - 1]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8501": {"id": 8501, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = a1[0] + sum(a2)\ntmp = ans\nfor i in range(1, n):\n    tmp += a1[i] - a2[i - 1]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8502": {"id": 8502, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = a1[0] + sum(a2)\ntmp = ans\nfor i in range(1, n):\n    tmp += a1[i] - a2[i - 1]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8503": {"id": 8503, "code": "n = 1\na1 = [2]\na2 = [3]\nans = a1[0] + sum(a2)\ntmp = ans\nfor i in range(1, n):\n    tmp += a1[i] - a2[i - 1]\n    ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8504": {"id": 8504, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8505": {"id": 8505, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8506": {"id": 8506, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8507": {"id": 8507, "code": "n = 1\na1 = [2]\na2 = [3]\nans=0\nfor x in range(0,n+1):\n  a1sum=sum(a1[0:x+1])\n  a2sum=sum(a2[x:n+1])\n  ans=max(ans,a1sum+a2sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8508": {"id": 8508, "code": "import sys\nn = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nif n==1:\n    print(a1[0]+a2[0])\n    sys.exit()\nfor i in range(n-1):\n    tmp=a2[n-1]\n    for j in range(i+1):\n        tmp+=a1[j]\n    for k in range(i,n-1):\n        tmp+=a2[k]\n    if tmp>ans:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8509": {"id": 8509, "code": "import sys\nn = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=0\nif n==1:\n    print(a1[0]+a2[0])\n    sys.exit()\nfor i in range(n-1):\n    tmp=a2[n-1]\n    for j in range(i+1):\n        tmp+=a1[j]\n    for k in range(i,n-1):\n        tmp+=a2[k]\n    if tmp>ans:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8510": {"id": 8510, "code": "N = 5\nl1 = [3, 2, 2, 4, 1]\nl2 = [1, 2, 2, 2, 1]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8511": {"id": 8511, "code": "N = 4\nl1 = [1, 1, 1, 1]\nl2 = [1, 1, 1, 1]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8512": {"id": 8512, "code": "N = 7\nl1 = [3, 3, 4, 5, 4, 5, 3]\nl2 = [5, 3, 4, 4, 2, 3, 2]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8513": {"id": 8513, "code": "N = 1\nl1 = [2]\nl2 = [3]\nl1_sum = l1[0]\nl2_sum = sum(l2)\nMax = l1_sum + l2_sum\nfor i in range(1,N):\n    l1_sum += l1[i]\n    l2_sum -= l2[i-1]\n    if Max<l1_sum+l2_sum:\n        Max = l1_sum+l2_sum\nprint(Max)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">"]}, "8514": {"id": 8514, "code": "N = 5\nU = [3, 2, 2, 4, 1]\nD = [1, 2, 2, 2, 1]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8515": {"id": 8515, "code": "N = 4\nU = [1, 1, 1, 1]\nD = [1, 1, 1, 1]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8516": {"id": 8516, "code": "N = 7\nU = [3, 3, 4, 5, 4, 5, 3]\nD = [5, 3, 4, 4, 2, 3, 2]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8517": {"id": 8517, "code": "N = 1\nU = [2]\nD = [3]\ndp = []\nfor i in range(N):\n    dp.append([0] * 2)\ndp[0][0] = U[0]\ndp[0][1] = U[0] + D[0]\nfor i in range(1, N):\n    dp[i][0] = dp[i-1][0] + U[i]\n    dp[i][1] = max(dp[i-1][1], dp[i][0]) + D[i]\nprint(dp[N-1][1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8518": {"id": 8518, "code": "def main():\n    n = 5\n    a1lis = [3, 2, 2, 4, 1]\n    a2lis = [1, 2, 2, 2, 1]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8519": {"id": 8519, "code": "def main():\n    n = 4\n    a1lis = [1, 1, 1, 1]\n    a2lis = [1, 1, 1, 1]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8520": {"id": 8520, "code": "def main():\n    n = 7\n    a1lis = [3, 3, 4, 5, 4, 5, 3]\n    a2lis = [5, 3, 4, 4, 2, 3, 2]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8521": {"id": 8521, "code": "def main():\n    n = 1\n    a1lis = [2]\n    a2lis = [3]\n    a1sum = sum(a1lis)\n    a2sum = sum(a2lis)\n    tmp = a1lis[0]\n    total = a1lis[0] + a2sum\n    ans = total\n    for i in range(1, n):\n        tmp += a1lis[i]\n        a2sum -= a2lis[i-1]\n        total = tmp + a2sum\n        if total > ans:\n            ans = total\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "8522": {"id": 8522, "code": "n = 5\ncandy_map = []\ncandy_map.append(list(map(int, \"3 2 2 4 1\".split())))\ncandy_map.append(list(map(int, \"1 2 2 2 1\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8523": {"id": 8523, "code": "n = 4\ncandy_map = []\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8524": {"id": 8524, "code": "n = 7\ncandy_map = []\ncandy_map.append(list(map(int, \"3 3 4 5 4 5 3\".split())))\ncandy_map.append(list(map(int, \"5 3 4 4 2 3 2\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8525": {"id": 8525, "code": "n = 1\ncandy_map = []\ncandy_map.append(list(map(int, \"2\".split())))\ncandy_map.append(list(map(int, \"3\".split())))\ndp = [[0] * n for _ in range(2)]\ndp[0][0] = candy_map[0][0]\nfor i in range(1,n):\n    dp[0][i] = dp[0][i-1] + candy_map[0][i]\ndp[1][0] = dp[0][0] + candy_map[1][0]\nfor i in range(1,n):\n    dp[1][i] = candy_map[1][i] + max(dp[0][i],dp[1][i-1])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "8526": {"id": 8526, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8527": {"id": 8527, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8528": {"id": 8528, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8529": {"id": 8529, "code": "n = 1\na1 = [2]\na2 = [3]\ncandy_max = 0\nfor i in range(n+1):\n    candies = sum(a1[0:i+1]) + sum(a2[i:n])\n    if candy_max < candies:\n        candy_max = candies\nprint(candy_max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8530": {"id": 8530, "code": "n = 4\nL = [[1, 1, 1, 1], [1, 1, 1, 1]]\nans = 0\nfor i in range(n):\n  cnt = 0\n  for j in range(n):\n    if j < i: \n      cnt += L[0][j]\n    elif j == i:\n      cnt += L[0][j] + L[1][j]\n    else:\n      cnt += L[1][j]\n  ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8531": {"id": 8531, "code": "n = 1\nL = [[2], [3]]\nans = 0\nfor i in range(n):\n  cnt = 0\n  for j in range(n):\n    if j < i: \n      cnt += L[0][j]\n    elif j == i:\n      cnt += L[0][j] + L[1][j]\n    else:\n      cnt += L[1][j]\n  ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", "!", "!", ">", ">"]}, "8532": {"id": 8532, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nprint(max(sum(A[:n+1]+B[n:]) for n in range(N)))", "coverage": [">", ">", ">", ">"]}, "8533": {"id": 8533, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nprint(max(sum(A[:n+1]+B[n:]) for n in range(N)))", "coverage": [">", ">", ">", ">"]}, "8534": {"id": 8534, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nprint(max(sum(A[:n+1]+B[n:]) for n in range(N)))", "coverage": [">", ">", ">", ">"]}, "8535": {"id": 8535, "code": "N = 1\nA = [2]\nB = [3]\nprint(max(sum(A[:n+1]+B[n:]) for n in range(N)))", "coverage": [">", ">", ">", ">"]}, "8536": {"id": 8536, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncandies = [sum(A1[:i+1] + A2[i:]) for i in range(N)]\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">"]}, "8537": {"id": 8537, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandies = [sum(A1[:i+1] + A2[i:]) for i in range(N)]\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">"]}, "8538": {"id": 8538, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandies = [sum(A1[:i+1] + A2[i:]) for i in range(N)]\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">"]}, "8539": {"id": 8539, "code": "N = 1\nA1 = [2]\nA2 = [3]\ncandies = [sum(A1[:i+1] + A2[i:]) for i in range(N)]\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">"]}, "8540": {"id": 8540, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8541": {"id": 8541, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8542": {"id": 8542, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8543": {"id": 8543, "code": "n = 1\na1 = [2]\na2 = [3]\nfor i in range(1, n):\n    a1[i] += a1[i - 1]\nfor i in range(n - 2, -1, -1):\n    a2[i] += a2[i + 1]\nres = 0\nfor i in range(n):\n    tmp = a1[i] + a2[i]\n    res = max(tmp, res)\nprint(res)", "coverage": [">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">", ">"]}, "8544": {"id": 8544, "code": "N = 5\np=[0]\nq=[0]\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8545": {"id": 8545, "code": "N = 4\np=[0]\nq=[0]\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8546": {"id": 8546, "code": "N = 7\np=[0]\nq=[0]\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8547": {"id": 8547, "code": "N = 1\np=[0]\nq=[0]\nA1 = [2]\nA2 = [3]\nfor i in range(N):\n  p.append(p[i]+A1[i])\n  q.append(q[i]+A2[N-i-1])\nans=0\nfor j in range(N):\n  ans=max(ans,p[j+1]+q[N-j])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8548": {"id": 8548, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8549": {"id": 8549, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8550": {"id": 8550, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8551": {"id": 8551, "code": "n = 1\na = [2]\nb = [3]\nans=0\nfor i in range(n):\n  if ans<(sum(a[:i+1])+sum(b[i:])):\n    ans=(sum(a[:i+1])+sum(b[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8552": {"id": 8552, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nlst = [0]*N\nfor i in range(N):\n    lst[i] = sum(A1[:i+1]) + sum(A2[i:])\nans = max(lst)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8553": {"id": 8553, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nlst = [0]*N\nfor i in range(N):\n    lst[i] = sum(A1[:i+1]) + sum(A2[i:])\nans = max(lst)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8554": {"id": 8554, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nlst = [0]*N\nfor i in range(N):\n    lst[i] = sum(A1[:i+1]) + sum(A2[i:])\nans = max(lst)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8555": {"id": 8555, "code": "N = 1\nA1 = [2]\nA2 = [3]\nlst = [0]*N\nfor i in range(N):\n    lst[i] = sum(A1[:i+1]) + sum(A2[i:])\nans = max(lst)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8556": {"id": 8556, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\name_A = [0] * N\name_B = [0] * N\nfor i in range(N):\n  if i == 0:\n    ame_A[i] += A[i]\n    continue\n  ame_A[i] += ame_A[i-1] + A[i]\nfor i in range(N-1,-1,-1):\n  if i == N - 1:\n    ame_B[i] += B[i]\n    continue\n  ame_B[i] += ame_B[i+1] + B[i]\nans = 0\nfor j in range(N):\n  cnt = ame_A[j] + ame_B[j]\n  ans = max(ans, cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8557": {"id": 8557, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\name_A = [0] * N\name_B = [0] * N\nfor i in range(N):\n  if i == 0:\n    ame_A[i] += A[i]\n    continue\n  ame_A[i] += ame_A[i-1] + A[i]\nfor i in range(N-1,-1,-1):\n  if i == N - 1:\n    ame_B[i] += B[i]\n    continue\n  ame_B[i] += ame_B[i+1] + B[i]\nans = 0\nfor j in range(N):\n  cnt = ame_A[j] + ame_B[j]\n  ans = max(ans, cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8558": {"id": 8558, "code": "N = 1\nA = [2]\nB = [3]\name_A = [0] * N\name_B = [0] * N\nfor i in range(N):\n  if i == 0:\n    ame_A[i] += A[i]\n    continue\n  ame_A[i] += ame_A[i-1] + A[i]\nfor i in range(N-1,-1,-1):\n  if i == N - 1:\n    ame_B[i] += B[i]\n    continue\n  ame_B[i] += ame_B[i+1] + B[i]\nans = 0\nfor j in range(N):\n  cnt = ame_A[j] + ame_B[j]\n  ans = max(ans, cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">"]}, "8559": {"id": 8559, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8560": {"id": 8560, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8561": {"id": 8561, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8562": {"id": 8562, "code": "N = 1\nA1 = [2]\nA2 = [3]\ns = []\nfor i in range(N):\n  a = sum(A1[0:i+1])+sum(A2[i:])\n  s.append(a)\nprint(max(s))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8563": {"id": 8563, "code": "def resolve():\n    n = 5\n    a_1 = [3, 2, 2, 4, 1]\n    a_2 = [1, 2, 2, 2, 1]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8564": {"id": 8564, "code": "def resolve():\n    n = 4\n    a_1 = [1, 1, 1, 1]\n    a_2 = [1, 1, 1, 1]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8565": {"id": 8565, "code": "def resolve():\n    n = 7\n    a_1 = [3, 3, 4, 5, 4, 5, 3]\n    a_2 = [5, 3, 4, 4, 2, 3, 2]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8566": {"id": 8566, "code": "def resolve():\n    n = 1\n    a_1 = [2]\n    a_2 = [3]\n    total = 0\n    for i in range(n):\n        line_1 = sum(a_1[:i+1])\n        line_2 = sum(a_2[i:])\n        total = max(total, line_1+line_2)\n    print(total)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8567": {"id": 8567, "code": "N = 5\nL1 = [3, 2, 2, 4, 1]\nL2 = [1, 2, 2, 2, 1]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8568": {"id": 8568, "code": "N = 4\nL1 = [1, 1, 1, 1]\nL2 = [1, 1, 1, 1]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8569": {"id": 8569, "code": "N = 7\nL1 = [3, 3, 4, 5, 4, 5, 3]\nL2 = [5, 3, 4, 4, 2, 3, 2]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8570": {"id": 8570, "code": "N = 1\nL1 = [2]\nL2 = [3]\ncnt=[]\nfor i in range(N):\n  cnt.append(sum(L1[:i+1])+sum(L2[i:]))\nans=max(cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8571": {"id": 8571, "code": "def resolve():\n    N = 5\n    A = [3, 2, 2, 4, 1]\n    a = [1, 2, 2, 2, 1]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8572": {"id": 8572, "code": "def resolve():\n    N = 4\n    A = [1, 1, 1, 1]\n    a = [1, 1, 1, 1]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8573": {"id": 8573, "code": "def resolve():\n    N = 7\n    A = [3, 3, 4, 5, 4, 5, 3]\n    a = [5, 3, 4, 4, 2, 3, 2]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8574": {"id": 8574, "code": "def resolve():\n    N = 1\n    A = [2]\n    a = [3]\n    ans = []\n    for i in range(N):\n        ans.append(sum(A[:i+1])+sum(a[i:]))\n    print(max(ans))\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8575": {"id": 8575, "code": "import itertools\nN = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nmaxi = 0\nfor i in range(N):\n    if sum(A[0:i+1]) + sum(B[i:N]) > maxi:\n        maxi = sum(A[0:i+1]) + sum(B[i:N])\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8576": {"id": 8576, "code": "import itertools\nN = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nmaxi = 0\nfor i in range(N):\n    if sum(A[0:i+1]) + sum(B[i:N]) > maxi:\n        maxi = sum(A[0:i+1]) + sum(B[i:N])\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8577": {"id": 8577, "code": "import itertools\nN = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nmaxi = 0\nfor i in range(N):\n    if sum(A[0:i+1]) + sum(B[i:N]) > maxi:\n        maxi = sum(A[0:i+1]) + sum(B[i:N])\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8578": {"id": 8578, "code": "import itertools\nN = 1\nA = [2]\nB = [3]\nmaxi = 0\nfor i in range(N):\n    if sum(A[0:i+1]) + sum(B[i:N]) > maxi:\n        maxi = sum(A[0:i+1]) + sum(B[i:N])\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8579": {"id": 8579, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    a_sum = sum(a[:i + 1])\n    b_sum = sum(b[i:])\n    if ans < a_sum + b_sum:\n        ans = a_sum + b_sum\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8580": {"id": 8580, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    a_sum = sum(a[:i + 1])\n    b_sum = sum(b[i:])\n    if ans < a_sum + b_sum:\n        ans = a_sum + b_sum\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8581": {"id": 8581, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    a_sum = sum(a[:i + 1])\n    b_sum = sum(b[i:])\n    if ans < a_sum + b_sum:\n        ans = a_sum + b_sum\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8582": {"id": 8582, "code": "n = 1\na = [2]\nb = [3]\nans = 0\nfor i in range(n):\n    a_sum = sum(a[:i + 1])\n    b_sum = sum(b[i:])\n    if ans < a_sum + b_sum:\n        ans = a_sum + b_sum\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8583": {"id": 8583, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8584": {"id": 8584, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8585": {"id": 8585, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8586": {"id": 8586, "code": "n = 1\na = [2]\nb = [3]\ndp=[[0 for i in range(n)] for j in range(2)]\ndp[0][0]=a[0]\nfor i in range(1,n):\n    dp[0][i]=a[i]+dp[0][i-1]\ndp[1][0]=dp[0][0]+b[0]\nfor i in range(1,n):\n    dp[1][i]=max(dp[0][i],dp[1][i-1])+b[i]\nprint(dp[1][n-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "8587": {"id": 8587, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8588": {"id": 8588, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8589": {"id": 8589, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8590": {"id": 8590, "code": "n = 1\na1 = [2]\na2 = [3]\na1sum, a2sum, ans = 0, 0, 0\na2sumall = sum(a2)\nfor i in range(n):\n    a1sum += a1[i]\n    a2sum += a2[i]\n    ans = max(ans, a1sum + a2sumall - a2sum + a2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8591": {"id": 8591, "code": "N = 5\nx = [3, 2, 2, 4, 1]\ny = [1, 2, 2, 2, 1]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8592": {"id": 8592, "code": "N = 4\nx = [1, 1, 1, 1]\ny = [1, 1, 1, 1]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8593": {"id": 8593, "code": "N = 7\nx = [3, 3, 4, 5, 4, 5, 3]\ny = [5, 3, 4, 4, 2, 3, 2]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8594": {"id": 8594, "code": "N = 1\nx = [2]\ny = [3]\ndef down_count():\n    count = x[0]\n    for i in range(N):\n        count += y[i]\n    return count\nx_list = []\ndef switch_count():\n    for i in range(N - 1):\n        sums = x_list[i] + x[i + 1] - y[i]\n        x_list.append(sums)\ndown_sum = down_count()\nx_list.append(down_sum)\nswitch_count()\nx_list.sort(reverse=True)\nprint(x_list[0])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "8595": {"id": 8595, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\ncandy=[a,b]\nn_i=0\nn_j=0\nscore=0\nfor i in range(n):\n    tmp_a = a[:i+1]\n    tmp_b = b[i:]\n    tmp_score = sum(tmp_a) + sum(tmp_b)\n    score = max(score,tmp_score)\nprint(score)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8596": {"id": 8596, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\ncandy=[a,b]\nn_i=0\nn_j=0\nscore=0\nfor i in range(n):\n    tmp_a = a[:i+1]\n    tmp_b = b[i:]\n    tmp_score = sum(tmp_a) + sum(tmp_b)\n    score = max(score,tmp_score)\nprint(score)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8597": {"id": 8597, "code": "n = 1\na = [2]\nb = [3]\ncandy=[a,b]\nn_i=0\nn_j=0\nscore=0\nfor i in range(n):\n    tmp_a = a[:i+1]\n    tmp_b = b[i:]\n    tmp_score = sum(tmp_a) + sum(tmp_b)\n    score = max(score,tmp_score)\nprint(score)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8598": {"id": 8598, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=[0]*n\nfor i in range(n):\n  ans[i] += sum(A1[:i+1])+sum(A2[i:])\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8599": {"id": 8599, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=[0]*n\nfor i in range(n):\n  ans[i] += sum(A1[:i+1])+sum(A2[i:])\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8600": {"id": 8600, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans=[0]*n\nfor i in range(n):\n  ans[i] += sum(A1[:i+1])+sum(A2[i:])\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8601": {"id": 8601, "code": "n = 1\nA1 = [2]\nA2 = [3]\nans=[0]*n\nfor i in range(n):\n  ans[i] += sum(A1[:i+1])+sum(A2[i:])\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8602": {"id": 8602, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8603": {"id": 8603, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8604": {"id": 8604, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8605": {"id": 8605, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n  tmp = sum(A1[0:i+1])\n  tmp = tmp + sum(A2[i:N])\n  ans = max(ans,tmp)\nprint(str(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8606": {"id": 8606, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 5\n    a1 = chain(tuple([0]), tuple(map(int, \"3 2 2 4 1\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"1 2 2 2 1\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8607": {"id": 8607, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 4\n    a1 = chain(tuple([0]), tuple(map(int, \"1 1 1 1\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"1 1 1 1\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8608": {"id": 8608, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 7\n    a1 = chain(tuple([0]), tuple(map(int, \"3 3 4 5 4 5 3\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"5 3 4 4 2 3 2\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8609": {"id": 8609, "code": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom itertools import accumulate\nfrom itertools import chain\ndef main():\n    n = 1\n    a1 = chain(tuple([0]), tuple(map(int, \"2\".split())))\n    a2 = chain(tuple([0]), tuple(map(int, \"3\".split())))\n    a1a = tuple(accumulate(a1))\n    a2a = tuple(accumulate(a2))\n    r = 0\n    for i1 in range(1, n + 1):\n        r = max(r, a1a[i1] + a2a[n] - a2a[i1 - 1])\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8610": {"id": 8610, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8611": {"id": 8611, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8612": {"id": 8612, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8613": {"id": 8613, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n    ans = max(ans, sum(A1[:i+1]) + sum(A2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8614": {"id": 8614, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8615": {"id": 8615, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8616": {"id": 8616, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8617": {"id": 8617, "code": "N = 1\nA = [2]\nB = [3]\ndp = [[] for i in range(N)]\ndp[0] = A[0] + B[0]\nUpSum = A[0]\nfor i in range(1,N):\n    UpSum += A[i] \n    dp[i] = max(dp[i-1],UpSum) + B[i]\nprint(dp[-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8618": {"id": 8618, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = []\nfor i in range(n+1):\n    if i == 0:\n        ans.append(sum(a1))\n    elif 1<=i<=n:\n        ans.append(sum(a1[:i]) + sum(a2[i-1:]))\n    elif i==n:\n        ans.append(sum(a2))\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8619": {"id": 8619, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = []\nfor i in range(n+1):\n    if i == 0:\n        ans.append(sum(a1))\n    elif 1<=i<=n:\n        ans.append(sum(a1[:i]) + sum(a2[i-1:]))\n    elif i==n:\n        ans.append(sum(a2))\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8620": {"id": 8620, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = []\nfor i in range(n+1):\n    if i == 0:\n        ans.append(sum(a1))\n    elif 1<=i<=n:\n        ans.append(sum(a1[:i]) + sum(a2[i-1:]))\n    elif i==n:\n        ans.append(sum(a2))\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8621": {"id": 8621, "code": "n = 1\na1 = [2]\na2 = [3]\nans = []\nfor i in range(n+1):\n    if i == 0:\n        ans.append(sum(a1))\n    elif 1<=i<=n:\n        ans.append(sum(a1[:i]) + sum(a2[i-1:]))\n    elif i==n:\n        ans.append(sum(a2))\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8622": {"id": 8622, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor x in range(N):\n    C = A[0:x+1] + B[x:N]\n    n = sum(C)\n    ans = max(ans, n)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8623": {"id": 8623, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor x in range(N):\n    C = A[0:x+1] + B[x:N]\n    n = sum(C)\n    ans = max(ans, n)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8624": {"id": 8624, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor x in range(N):\n    C = A[0:x+1] + B[x:N]\n    n = sum(C)\n    ans = max(ans, n)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8625": {"id": 8625, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor x in range(N):\n    C = A[0:x+1] + B[x:N]\n    n = sum(C)\n    ans = max(ans, n)\nprint(ans) ", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8626": {"id": 8626, "code": "n = 5\nx = [3, 2, 2, 4, 1]\ny = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    ans=max(ans,sum(x[:i+1])+sum(y[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8627": {"id": 8627, "code": "n = 4\nx = [1, 1, 1, 1]\ny = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    ans=max(ans,sum(x[:i+1])+sum(y[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8628": {"id": 8628, "code": "n = 7\nx = [3, 3, 4, 5, 4, 5, 3]\ny = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    ans=max(ans,sum(x[:i+1])+sum(y[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8629": {"id": 8629, "code": "n = 1\nx = [2]\ny = [3]\nans=0\nfor i in range(n):\n    ans=max(ans,sum(x[:i+1])+sum(y[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8630": {"id": 8630, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nx = 0\nC = []\nD = []\nif N == 1:\n    print(A[0] + B[0])\n    exit()\nfor i in range(N):\n    C = A[0:i]\n    D = B[i - 1:N]\n    x = sum(C) + sum(D)\n    ans = max(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8631": {"id": 8631, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nx = 0\nC = []\nD = []\nif N == 1:\n    print(A[0] + B[0])\n    exit()\nfor i in range(N):\n    C = A[0:i]\n    D = B[i - 1:N]\n    x = sum(C) + sum(D)\n    ans = max(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8632": {"id": 8632, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nx = 0\nC = []\nD = []\nif N == 1:\n    print(A[0] + B[0])\n    exit()\nfor i in range(N):\n    C = A[0:i]\n    D = B[i - 1:N]\n    x = sum(C) + sum(D)\n    ans = max(ans, x)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">"]}, "8633": {"id": 8633, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nfor i in range(1,N): A[i]+=A[i-1]\nfor i in range(N-2,-1,-1): B[i]+=B[i+1]\nans=max(A[i]+B[i] for i in range(N))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8634": {"id": 8634, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nfor i in range(1,N): A[i]+=A[i-1]\nfor i in range(N-2,-1,-1): B[i]+=B[i+1]\nans=max(A[i]+B[i] for i in range(N))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8635": {"id": 8635, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(1,N): A[i]+=A[i-1]\nfor i in range(N-2,-1,-1): B[i]+=B[i+1]\nans=max(A[i]+B[i] for i in range(N))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8636": {"id": 8636, "code": "N = 1\nA = [2]\nB = [3]\nfor i in range(1,N): A[i]+=A[i-1]\nfor i in range(N-2,-1,-1): B[i]+=B[i+1]\nans=max(A[i]+B[i] for i in range(N))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8637": {"id": 8637, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nmax=0\nfor i in range(n):\n  tmp=sum(a[:i+1])\n  tmp+=sum(b[i:])\n  if max<tmp:\n    max=tmp\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8638": {"id": 8638, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nmax=0\nfor i in range(n):\n  tmp=sum(a[:i+1])\n  tmp+=sum(b[i:])\n  if max<tmp:\n    max=tmp\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8639": {"id": 8639, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nmax=0\nfor i in range(n):\n  tmp=sum(a[:i+1])\n  tmp+=sum(b[i:])\n  if max<tmp:\n    max=tmp\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8640": {"id": 8640, "code": "n = 1\na = [2]\nb = [3]\nmax=0\nfor i in range(n):\n  tmp=sum(a[:i+1])\n  tmp+=sum(b[i:])\n  if max<tmp:\n    max=tmp\nprint(max)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8641": {"id": 8641, "code": "n = 5\nal = [3, 2, 2, 4, 1]\nbl = [1, 2, 2, 2, 1]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8642": {"id": 8642, "code": "n = 4\nal = [1, 1, 1, 1]\nbl = [1, 1, 1, 1]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8643": {"id": 8643, "code": "n = 7\nal = [3, 3, 4, 5, 4, 5, 3]\nbl = [5, 3, 4, 4, 2, 3, 2]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8644": {"id": 8644, "code": "n = 1\nal = [2]\nbl = [3]\nres = 0\nfor i in range(1,n+1):\n    aa = sum(al[:i])\n    bb = sum(bl[i-1:])\n    res = max(res,aa+bb)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8645": {"id": 8645, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "8646": {"id": 8646, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "8647": {"id": 8647, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "8648": {"id": 8648, "code": "n = 1\na1 = [2]\na2 = [3]\nprint(max([sum(a1[:i]+a2[i-1:]) for i in  range(1, n+1)]))", "coverage": [">", ">", ">", ">"]}, "8649": {"id": 8649, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\nimport copy\nimport bisect\nif __name__  == \"__main__\":\n    n = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ruiseki_wa = [0]*(n)\n    ruiseki_wa[0] = A1[0]\n    for i in range(1,n):\n        ruiseki_wa[i] = ruiseki_wa[i-1] + A1[i]\n    ans = 0\n    for i in range(n):\n        c = ruiseki_wa[i]\n        for j in range(i,n):\n            c += A2[j]\n        ans = max(ans,c)\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8650": {"id": 8650, "code": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\nimport copy\nimport bisect\nif __name__  == \"__main__\":\n    n = 1\n    A1 = [2]\n    A2 = [3]\n    ruiseki_wa = [0]*(n)\n    ruiseki_wa[0] = A1[0]\n    for i in range(1,n):\n        ruiseki_wa[i] = ruiseki_wa[i-1] + A1[i]\n    ans = 0\n    for i in range(n):\n        c = ruiseki_wa[i]\n        for j in range(i,n):\n            c += A2[j]\n        ans = max(ans,c)\n    print(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8651": {"id": 8651, "code": "N = 5\nA_1 = [3, 2, 2, 4, 1]\nA_2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8652": {"id": 8652, "code": "N = 4\nA_1 = [1, 1, 1, 1]\nA_2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8653": {"id": 8653, "code": "N = 7\nA_1 = [3, 3, 4, 5, 4, 5, 3]\nA_2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8654": {"id": 8654, "code": "N = 1\nA_1 = [2]\nA_2 = [3]\nans = 0\nfor i in range(N):\n    S = sum(A_1[0:i+1]) + sum(A_2[i:N])\n    if S > ans:\n        ans = S\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8655": {"id": 8655, "code": "N = 1\nupper = [2]\ndown = [3]\nscores = []\nfor i in range(N):\n    score = 0\n    flag = 0\n    for j in range(N):\n        if i == j and flag == 0:\n            score += upper[j]\n            score += down[j]\n            flag = 1\n        elif flag == 0:\n            score += upper[j]\n        elif flag == 1:\n            score += down[j]\n    scores.append(score)\nprint(max(scores))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", ">", ">"]}, "8656": {"id": 8656, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8657": {"id": 8657, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8658": {"id": 8658, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8659": {"id": 8659, "code": "N = 1\nA1 = [2]\nA2 = [3]\nmax_drop = 0\nfor i in range(N):\n    max_drop = max(max_drop, sum(A1[:i+1] + A2[i:]))\nprint(max_drop)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8660": {"id": 8660, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 5\n    A = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    t = A[0]\n    t2 = sum(A2)\n    ans = t + t2\n    for i in range(1, N):\n        t += A[i]\n        t2 -= A2[i-1]\n        ans = max(ans, t+t2)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8661": {"id": 8661, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 4\n    A = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    t = A[0]\n    t2 = sum(A2)\n    ans = t + t2\n    for i in range(1, N):\n        t += A[i]\n        t2 -= A2[i-1]\n        ans = max(ans, t+t2)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8662": {"id": 8662, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    t = A[0]\n    t2 = sum(A2)\n    ans = t + t2\n    for i in range(1, N):\n        t += A[i]\n        t2 -= A2[i-1]\n        ans = max(ans, t+t2)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8663": {"id": 8663, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 1\n    A = [2]\n    A2 = [3]\n    t = A[0]\n    t2 = sum(A2)\n    ans = t + t2\n    for i in range(1, N):\n        t += A[i]\n        t2 -= A2[i-1]\n        ans = max(ans, t+t2)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "8664": {"id": 8664, "code": "n = 5\np = [3, 2, 2, 4, 1]\nq = [1, 2, 2, 2, 1]\nans = sum(p)+q[n-1]\ntmp = ans\nfor i in range(n-1):\n  tmp = tmp + q[n-i-2] - p[n-i-1]\n  ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8665": {"id": 8665, "code": "n = 4\np = [1, 1, 1, 1]\nq = [1, 1, 1, 1]\nans = sum(p)+q[n-1]\ntmp = ans\nfor i in range(n-1):\n  tmp = tmp + q[n-i-2] - p[n-i-1]\n  ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8666": {"id": 8666, "code": "n = 7\np = [3, 3, 4, 5, 4, 5, 3]\nq = [5, 3, 4, 4, 2, 3, 2]\nans = sum(p)+q[n-1]\ntmp = ans\nfor i in range(n-1):\n  tmp = tmp + q[n-i-2] - p[n-i-1]\n  ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8667": {"id": 8667, "code": "n = 1\np = [2]\nq = [3]\nans = sum(p)+q[n-1]\ntmp = ans\nfor i in range(n-1):\n  tmp = tmp + q[n-i-2] - p[n-i-1]\n  ans = max(ans, tmp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8668": {"id": 8668, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8669": {"id": 8669, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8670": {"id": 8670, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8671": {"id": 8671, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    tmp = sum(A[:i+1]) + sum(B[i:])\n    if ans < tmp:\n        ans=tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8672": {"id": 8672, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nres = 0\ntmp1 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    tmp2 = 0\n    for j in range(i, n):\n        tmp2 += a2[j]\n    res = max(res, tmp1+tmp2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8673": {"id": 8673, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nres = 0\ntmp1 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    tmp2 = 0\n    for j in range(i, n):\n        tmp2 += a2[j]\n    res = max(res, tmp1+tmp2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8674": {"id": 8674, "code": "n = 1\na1 = [2]\na2 = [3]\nres = 0\ntmp1 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    tmp2 = 0\n    for j in range(i, n):\n        tmp2 += a2[j]\n    res = max(res, tmp1+tmp2)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8675": {"id": 8675, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8676": {"id": 8676, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8677": {"id": 8677, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8678": {"id": 8678, "code": "n = 1\na = [2]\nb = [3]\nans = 0\nfor i in range(n):\n        ans = max(ans,sum(a[:i+1])+sum(b[i:n]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8679": {"id": 8679, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 5\n    A = [3, 2, 2, 4, 1]\n    B = [1, 2, 2, 2, 1]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8680": {"id": 8680, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 4\n    A = [1, 1, 1, 1]\n    B = [1, 1, 1, 1]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8681": {"id": 8681, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 7\n    A = [3, 3, 4, 5, 4, 5, 3]\n    B = [5, 3, 4, 4, 2, 3, 2]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8682": {"id": 8682, "code": "import sys\ninput = sys.stdin.readline\ndef main():\n    N = 1\n    A = [2]\n    B = [3]\n    CNT, ans = 0, 0\n    for i in range(N):\n        CNT = sum(A[0:i+1]) + sum(B[i:N+1])\n        ans = max(ans, CNT)\n    print(ans)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8683": {"id": 8683, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8684": {"id": 8684, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8685": {"id": 8685, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8686": {"id": 8686, "code": "N = 1\nA1 = [2]\nA2 = [3]\ndp = [[0] * N for i in range(2)]\ndp[0][0] = A1[0]\ndp[1][0] = A1[0] + A2[0]\nfor i in range(1, N):\n  dp[0][i] = dp[0][i - 1] + A1[i]\nfor i in range(1, N):\n  dp[1][i] = max(dp[1][i - 1], dp[0][i]) +  A2[i] \nprint(dp[-1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">"]}, "8687": {"id": 8687, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8688": {"id": 8688, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8689": {"id": 8689, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8690": {"id": 8690, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans=0\nfor i in range(N):\n    temp=sum(A1[:i+1])+sum(A2[i:])\n    if temp>ans:\n        ans=temp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8691": {"id": 8691, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8692": {"id": 8692, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8693": {"id": 8693, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8694": {"id": 8694, "code": "N = 1\nA1 = [2]\nA2 = [3]\nCumSumA1 = [A1[0]]*N\nCumSumA2 = [A2[(N-1)]]*N\nDisp = [0]*N\nfor T in range(0,N-1):\n    CumSumA1[T+1] = CumSumA1[T]+A1[T+1]\n    CumSumA2[(N-1)-(T+1)] = CumSumA2[(N-1)-T]+A2[(N-1)-(T+1)]\nfor T in range(0,N):\n    Disp[T] = CumSumA1[T]+CumSumA2[T]\nprint(max(Disp))", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8695": {"id": 8695, "code": "N = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8696": {"id": 8696, "code": "N = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8697": {"id": 8697, "code": "N = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8698": {"id": 8698, "code": "N = 1\na = [2]\nb = [3]\nkey=sum(a[0:N-1])+b[-1]\nfor i in range(0,N):\n  Key=sum(a[0:i+1])+sum(b[i:N])\n  key=max(key,Key)\nprint(key)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8699": {"id": 8699, "code": "def resolve():\n  n = 4\n  a1 = [1, 1, 1, 1]\n  a2 = [1, 1, 1, 1]\n  s1 = [0] * (n+1)\n  s2 = [0] * (n+1)\n  for i in range(n):\n    s1[i] = a1[i]\n    if i > 0:\n      s1[i] += s1[i-1]\n  for i in range(n):\n    s2[n-i-1] = a2[n-i-1]\n    if i > 0:\n      s2[n-i-1] += s2[n-i]\n  ans = 0\n  for i in range(n):\n    ans = max(ans, s1[i] + s2[i])\n  print(ans)\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8700": {"id": 8700, "code": "def resolve():\n  n = 1\n  a1 = [2]\n  a2 = [3]\n  s1 = [0] * (n+1)\n  s2 = [0] * (n+1)\n  for i in range(n):\n    s1[i] = a1[i]\n    if i > 0:\n      s1[i] += s1[i-1]\n  for i in range(n):\n    s2[n-i-1] = a2[n-i-1]\n    if i > 0:\n      s2[n-i-1] += s2[n-i]\n  ans = 0\n  for i in range(n):\n    ans = max(ans, s1[i] + s2[i])\n  print(ans)\n  return\nif __name__ == \"__main__\":\n  resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8701": {"id": 8701, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8702": {"id": 8702, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8703": {"id": 8703, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8704": {"id": 8704, "code": "n = 1\na1 = [2]\na2 = [3]\nans=0\nfor i in range(n):\n    num=sum(a1[:i+1])+sum(a2[i:])\n    if ans<num:\n        ans=num\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8705": {"id": 8705, "code": "from itertools import accumulate\nN = 5\nA1 = [0, 3, 5, 7, 11, 12]\nA2 = [0, 1, 3, 5, 7, 8]\nans = 0\nfor i in range(1, N + 1):\n    cur = A1[i - 1]\n    if i < N:\n        cur += A2[N] - A2[i]\n    ans = max(ans, cur + A1[i] - A1[i - 1] + A2[i] - A2[i - 1])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8706": {"id": 8706, "code": "from itertools import accumulate\nN = 4\nA1 = [0, 1, 2, 3, 4]\nA2 = [0, 1, 2, 3, 4]\nans = 0\nfor i in range(1, N + 1):\n    cur = A1[i - 1]\n    if i < N:\n        cur += A2[N] - A2[i]\n    ans = max(ans, cur + A1[i] - A1[i - 1] + A2[i] - A2[i - 1])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8707": {"id": 8707, "code": "from itertools import accumulate\nN = 7\nA1 = [0, 3, 6, 10, 15, 19, 24, 27]\nA2 = [0, 5, 8, 12, 16, 18, 21, 23]\nans = 0\nfor i in range(1, N + 1):\n    cur = A1[i - 1]\n    if i < N:\n        cur += A2[N] - A2[i]\n    ans = max(ans, cur + A1[i] - A1[i - 1] + A2[i] - A2[i - 1])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8708": {"id": 8708, "code": "from itertools import accumulate\nN = 1\nA1 = [0, 2]\nA2 = [0, 3]\nans = 0\nfor i in range(1, N + 1):\n    cur = A1[i - 1]\n    if i < N:\n        cur += A2[N] - A2[i]\n    ans = max(ans, cur + A1[i] - A1[i - 1] + A2[i] - A2[i - 1])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8709": {"id": 8709, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8710": {"id": 8710, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8711": {"id": 8711, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8712": {"id": 8712, "code": "N = 1\nA1 = [2]\nA2 = [3]\nA2.reverse()\nfor i in range(N-1):\n  A1[i+1] += A1[i]\n  A2[i+1] += A2[i]\nans = 0\nfor i in range(N):\n  ans = max(ans, A1[i]+A2[N-1-i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8713": {"id": 8713, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8714": {"id": 8714, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8715": {"id": 8715, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8716": {"id": 8716, "code": "n = 1\na1 = [2]\na2 = [3]\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a1[:i+1]) + sum(a2[i:]))\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8717": {"id": 8717, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    t = 0\n    for j in range(0, min(N, i + 1)):\n        t += A1[j]\n    for k in range(i, N):\n        t += A2[k]\n    ans = max(t, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8718": {"id": 8718, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n    t = 0\n    for j in range(0, min(N, i + 1)):\n        t += A1[j]\n    for k in range(i, N):\n        t += A2[k]\n    ans = max(t, ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8719": {"id": 8719, "code": "from itertools import accumulate\nn = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nSA = list(accumulate(A))\nSB = list(accumulate(B))\nans = 0\nfor i in range(n):\n    if i >= 1:\n        ans = max(SA[i] + SB[n - 1] - SB[i - 1], ans)\n    else:\n        ans = max(SA[i] + SB[n - 1], ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8720": {"id": 8720, "code": "from itertools import accumulate\nn = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nSA = list(accumulate(A))\nSB = list(accumulate(B))\nans = 0\nfor i in range(n):\n    if i >= 1:\n        ans = max(SA[i] + SB[n - 1] - SB[i - 1], ans)\n    else:\n        ans = max(SA[i] + SB[n - 1], ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8721": {"id": 8721, "code": "from itertools import accumulate\nn = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nSA = list(accumulate(A))\nSB = list(accumulate(B))\nans = 0\nfor i in range(n):\n    if i >= 1:\n        ans = max(SA[i] + SB[n - 1] - SB[i - 1], ans)\n    else:\n        ans = max(SA[i] + SB[n - 1], ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8722": {"id": 8722, "code": "from itertools import accumulate\nn = 1\nA = [2]\nB = [3]\nSA = list(accumulate(A))\nSB = list(accumulate(B))\nans = 0\nfor i in range(n):\n    if i >= 1:\n        ans = max(SA[i] + SB[n - 1] - SB[i - 1], ans)\n    else:\n        ans = max(SA[i] + SB[n - 1], ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">"]}, "8723": {"id": 8723, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nsumA = [0]*(N+1)\nsumB = [0]*(N+1)\nfor i in range(N):\n    sumA[i+1] = A[i] + sumA[i]\n    sumB[i+1] = B[i] + sumB[i]\nncandy = 0\nfor i in range(1, N+1):\n    nsum = sumA[i] + (sumB[N] - sumB[i-1])\n    if ncandy < nsum:\n        ncandy = nsum\nprint(ncandy)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8724": {"id": 8724, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nsumA = [0]*(N+1)\nsumB = [0]*(N+1)\nfor i in range(N):\n    sumA[i+1] = A[i] + sumA[i]\n    sumB[i+1] = B[i] + sumB[i]\nncandy = 0\nfor i in range(1, N+1):\n    nsum = sumA[i] + (sumB[N] - sumB[i-1])\n    if ncandy < nsum:\n        ncandy = nsum\nprint(ncandy)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8725": {"id": 8725, "code": "N = 1\nA = [2]\nB = [3]\nsumA = [0]*(N+1)\nsumB = [0]*(N+1)\nfor i in range(N):\n    sumA[i+1] = A[i] + sumA[i]\n    sumB[i+1] = B[i] + sumB[i]\nncandy = 0\nfor i in range(1, N+1):\n    nsum = sumA[i] + (sumB[N] - sumB[i-1])\n    if ncandy < nsum:\n        ncandy = nsum\nprint(ncandy)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8726": {"id": 8726, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8727": {"id": 8727, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8728": {"id": 8728, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8729": {"id": 8729, "code": "n = 1\na1 = [2]\na2 = [3]\nres = 0\nfor i in range(n):\n  a1_sum = sum(a1[:i+1])\n  a2_sum = sum(a2[i:])\n  res = max(res, a1_sum + a2_sum)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8730": {"id": 8730, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nA2.reverse()\nfor i in range(1, N):\n    A1[i] += A1[i - 1]\n    A2[i] += A2[i - 1]\nA2.reverse()\nans = 0\nfor i in range(N):\n    ans = max(ans, A1[i] + A2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8731": {"id": 8731, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nA2.reverse()\nfor i in range(1, N):\n    A1[i] += A1[i - 1]\n    A2[i] += A2[i - 1]\nA2.reverse()\nans = 0\nfor i in range(N):\n    ans = max(ans, A1[i] + A2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8732": {"id": 8732, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nA2.reverse()\nfor i in range(1, N):\n    A1[i] += A1[i - 1]\n    A2[i] += A2[i - 1]\nA2.reverse()\nans = 0\nfor i in range(N):\n    ans = max(ans, A1[i] + A2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8733": {"id": 8733, "code": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\nN = 1\nA1 = [2]\nA2 = [3]\nA2.reverse()\nfor i in range(1, N):\n    A1[i] += A1[i - 1]\n    A2[i] += A2[i - 1]\nA2.reverse()\nans = 0\nfor i in range(N):\n    ans = max(ans, A1[i] + A2[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">"]}, "8734": {"id": 8734, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nb1 = [0] * n\nb2 = [0] * n\nc1 = 0\nc2 = 0\nfor i in range(n):\n    b1[i] = c1 + a1[i]\n    c1 += a1[i]\nfor i in range(n):\n    b2[- 1 - i] = c2 + a2[- 1 - i]\n    c2 += a2[- 1 - i]\nd = []\nfor i in range(n):\n    d.append(b1[i] + b2[i])\nprint(max(d))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8735": {"id": 8735, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nb1 = [0] * n\nb2 = [0] * n\nc1 = 0\nc2 = 0\nfor i in range(n):\n    b1[i] = c1 + a1[i]\n    c1 += a1[i]\nfor i in range(n):\n    b2[- 1 - i] = c2 + a2[- 1 - i]\n    c2 += a2[- 1 - i]\nd = []\nfor i in range(n):\n    d.append(b1[i] + b2[i])\nprint(max(d))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8736": {"id": 8736, "code": "n = 1\na1 = [2]\na2 = [3]\nb1 = [0] * n\nb2 = [0] * n\nc1 = 0\nc2 = 0\nfor i in range(n):\n    b1[i] = c1 + a1[i]\n    c1 += a1[i]\nfor i in range(n):\n    b2[- 1 - i] = c2 + a2[- 1 - i]\n    c2 += a2[- 1 - i]\nd = []\nfor i in range(n):\n    d.append(b1[i] + b2[i])\nprint(max(d))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8737": {"id": 8737, "code": "def resolve():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8738": {"id": 8738, "code": "def resolve():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8739": {"id": 8739, "code": "def resolve():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8740": {"id": 8740, "code": "def resolve():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    maxA = 0\n    for i in range(N + 1):\n        maxA = max(maxA, sum(A1[:i + 1]) + sum(A2[i:]))\n    print(maxA)\nresolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8741": {"id": 8741, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,sum(A[:i])+sum(B[i:])+A[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8742": {"id": 8742, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,sum(A[:i])+sum(B[i:])+A[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8743": {"id": 8743, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    ans = max(ans,sum(A[:i])+sum(B[i:])+A[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8744": {"id": 8744, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    ans = max(ans,sum(A[:i])+sum(B[i:])+A[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8745": {"id": 8745, "code": "n = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nsum_a = 0\nfor i in range(n):\n    sum_a += A[i]\n    temp = sum_a\n    for j in range(i,n):\n        temp += B[j]\n    ans = max(ans,temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8746": {"id": 8746, "code": "n = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nsum_a = 0\nfor i in range(n):\n    sum_a += A[i]\n    temp = sum_a\n    for j in range(i,n):\n        temp += B[j]\n    ans = max(ans,temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8747": {"id": 8747, "code": "n = 1\nA = [2]\nB = [3]\nans = 0\nsum_a = 0\nfor i in range(n):\n    sum_a += A[i]\n    temp = sum_a\n    for j in range(i,n):\n        temp += B[j]\n    ans = max(ans,temp)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8748": {"id": 8748, "code": "def main():\n    n = 5\n    a1 = [3, 2, 2, 4, 1]\n    a2 = [1, 2, 2, 2, 1]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8749": {"id": 8749, "code": "def main():\n    n = 4\n    a1 = [1, 1, 1, 1]\n    a2 = [1, 1, 1, 1]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8750": {"id": 8750, "code": "def main():\n    n = 7\n    a1 = [3, 3, 4, 5, 4, 5, 3]\n    a2 = [5, 3, 4, 4, 2, 3, 2]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8751": {"id": 8751, "code": "def main():\n    n = 1\n    a1 = [2]\n    a2 = [3]\n    scores = []\n    for i1 in range(n):\n        score = sum(a1[:i1+1]) + sum(a2[i1:])\n        scores.append(score)\n    r = max(scores)\n    print(r)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8752": {"id": 8752, "code": "N = 5\nh = [3, 2, 2, 4, 1]\nl = [1, 2, 2, 2, 1]\nc = 0\nfor i in range(N):\n    c = max(sum(h[0:i+1])+sum(l[i:N+1]), c)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8753": {"id": 8753, "code": "N = 4\nh = [1, 1, 1, 1]\nl = [1, 1, 1, 1]\nc = 0\nfor i in range(N):\n    c = max(sum(h[0:i+1])+sum(l[i:N+1]), c)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8754": {"id": 8754, "code": "N = 7\nh = [3, 3, 4, 5, 4, 5, 3]\nl = [5, 3, 4, 4, 2, 3, 2]\nc = 0\nfor i in range(N):\n    c = max(sum(h[0:i+1])+sum(l[i:N+1]), c)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8755": {"id": 8755, "code": "N = 1\nh = [2]\nl = [3]\nc = 0\nfor i in range(N):\n    c = max(sum(h[0:i+1])+sum(l[i:N+1]), c)\nprint(c)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8756": {"id": 8756, "code": "N = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nmaxim = 0\nfor i in range(N):\n    count = 0\n    count += sum(a1[:i+1]) + sum(a2[i:])\n    if count > maxim:\n        maxim = count\nprint(maxim)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8757": {"id": 8757, "code": "N = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nmaxim = 0\nfor i in range(N):\n    count = 0\n    count += sum(a1[:i+1]) + sum(a2[i:])\n    if count > maxim:\n        maxim = count\nprint(maxim)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8758": {"id": 8758, "code": "N = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nmaxim = 0\nfor i in range(N):\n    count = 0\n    count += sum(a1[:i+1]) + sum(a2[i:])\n    if count > maxim:\n        maxim = count\nprint(maxim)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8759": {"id": 8759, "code": "N = 1\na1 = [2]\na2 = [3]\nmaxim = 0\nfor i in range(N):\n    count = 0\n    count += sum(a1[:i+1]) + sum(a2[i:])\n    if count > maxim:\n        maxim = count\nprint(maxim)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8760": {"id": 8760, "code": "from itertools import accumulate\nN = 5\nA = [3, 5, 7, 11, 12]\nB = [8, 7, 5, 3, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8761": {"id": 8761, "code": "from itertools import accumulate\nN = 4\nA = [1, 2, 3, 4]\nB = [4, 3, 2, 1]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8762": {"id": 8762, "code": "from itertools import accumulate\nN = 7\nA = [3, 6, 10, 15, 19, 24, 27]\nB = [23, 18, 15, 11, 7, 5, 2]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8763": {"id": 8763, "code": "from itertools import accumulate\nN = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    ans = max(ans,A[i]+B[i])\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8764": {"id": 8764, "code": "N = 5\nA_1 = [3, 2, 2, 4, 1]\nA_2 = [1, 2, 2, 2, 1]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8765": {"id": 8765, "code": "N = 4\nA_1 = [1, 1, 1, 1]\nA_2 = [1, 1, 1, 1]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8766": {"id": 8766, "code": "N = 7\nA_1 = [3, 3, 4, 5, 4, 5, 3]\nA_2 = [5, 3, 4, 4, 2, 3, 2]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8767": {"id": 8767, "code": "N = 1\nA_1 = [2]\nA_2 = [3]\ncan_list=[]\nfor i in range(N) :\n    A_1_can = sum(A_1[0:i+1])\n    A_2_can = sum(A_2[i:N])\n    can_list.append(A_1_can+A_2_can)\nprint(max(can_list))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8768": {"id": 8768, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8769": {"id": 8769, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8770": {"id": 8770, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8771": {"id": 8771, "code": "n = 1\na1 = [2]\na2 = [3]\nans = 0\nfor i in range(n):\n    candy = sum(a1[:i + 1]) + sum(a2[i:])\n    ans = max(ans, candy)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8772": {"id": 8772, "code": "N = 5\narray1 = [3, 2, 2, 4, 1]\narray2 = [1, 2, 2, 2, 1]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8773": {"id": 8773, "code": "N = 4\narray1 = [1, 1, 1, 1]\narray2 = [1, 1, 1, 1]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8774": {"id": 8774, "code": "N = 7\narray1 = [3, 3, 4, 5, 4, 5, 3]\narray2 = [5, 3, 4, 4, 2, 3, 2]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8775": {"id": 8775, "code": "N = 1\narray1 = [2]\narray2 = [3]\narray = [array1,array2]\ncandy = [0]*N\nfor i in range(N):\n    candy[i] = sum(array[0][0:i+1])+array[1][i]+sum(array[1][i+1:N])\nprint(max(candy))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8776": {"id": 8776, "code": "N = 5\nrow1 = [3, 2, 2, 4, 1]\nrow2 = [1, 2, 2, 2, 1]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8777": {"id": 8777, "code": "N = 4\nrow1 = [1, 1, 1, 1]\nrow2 = [1, 1, 1, 1]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8778": {"id": 8778, "code": "N = 7\nrow1 = [3, 3, 4, 5, 4, 5, 3]\nrow2 = [5, 3, 4, 4, 2, 3, 2]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8779": {"id": 8779, "code": "N = 1\nrow1 = [2]\nrow2 = [3]\ncandies = []\nfor n in range(N):\n  c1 = sum(row1[0:n + 1])\n  c2 = sum(row2[n : N])\n  candies.append(c1 + c2)\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8780": {"id": 8780, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    z=0\n    for j in range(i+1):\n        z+=a[j]\n    for j in range(i,n):\n        z+=b[j]\n    ans=max(ans,z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8781": {"id": 8781, "code": "n = 1\na = [2]\nb = [3]\nans=0\nfor i in range(n):\n    z=0\n    for j in range(i+1):\n        z+=a[j]\n    for j in range(i,n):\n        z+=b[j]\n    ans=max(ans,z)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8782": {"id": 8782, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8783": {"id": 8783, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8784": {"id": 8784, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8785": {"id": 8785, "code": "n = 1\na = [2]\nb = [3]\nt = 0\nfor i in range(n):\n    c = sum(a[0:i+1]) + sum(b[i:n])\n    t = max(t,c)\nprint(t)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8786": {"id": 8786, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8787": {"id": 8787, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8788": {"id": 8788, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8789": {"id": 8789, "code": "n = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(n):\n    x = sum(A1[0:i+1]+A2[i::])\n    if ans < x:\n        ans = x\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8790": {"id": 8790, "code": "N = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8791": {"id": 8791, "code": "N = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8792": {"id": 8792, "code": "N = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8793": {"id": 8793, "code": "N = 1\na1 = [2]\na2 = [3]\nres, point = 0, 0\nfor i in range(N):\n    point = sum(a1[:i+1]) + sum(a2[i:N])\n    res = max(res, point)\nprint(res)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8794": {"id": 8794, "code": "n = 5\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8795": {"id": 8795, "code": "n = 4\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8796": {"id": 8796, "code": "n = 7\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8797": {"id": 8797, "code": "n = 1\ndp = [[0 for i in range(n)] for i in range(2)]\na1 = [2]\na2 = [3]\ndp[0][0] = a1[0]\nfor i in range(1, n):\n    dp[0][i] = dp[0][i - 1] + a1[i]\ndp[1][0] = dp[0][0] + a2[0]\nfor i in range(1, n):\n    dp[1][i] = max(dp[0][i] + a2[i], dp[1][i - 1] + a2[i])\nprint(dp[1][-1])", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">", "!", ">"]}, "8798": {"id": 8798, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8799": {"id": 8799, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8800": {"id": 8800, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8801": {"id": 8801, "code": "N = 1\nA = [2]\nB = [3]\nbuff = []\nfor i in range(N):\n    buff.append(sum(A[:i+1]) + sum(B[i:]))\nprint(max(buff))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8802": {"id": 8802, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = []\nfor n in range(N):\n  ame = 0\n  for i in range(n+1):\n    ame += A1[i]\n  for j in range(n, N):\n    ame += A2[j]\n  ans.append(ame)\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8803": {"id": 8803, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = []\nfor n in range(N):\n  ame = 0\n  for i in range(n+1):\n    ame += A1[i]\n  for j in range(n, N):\n    ame += A2[j]\n  ans.append(ame)\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8804": {"id": 8804, "code": "n = 5\ncandy_map = []\ncandy_map.append(list(map(int, \"3 2 2 4 1\".split())))\ncandy_map.append(list(map(int, \"1 2 2 2 1\".split())))\nans = 0\nfor i in range(n):\n    upper = sum(candy_map[0][:i])\n    lower = sum(candy_map[1][i+1:])\n    Sum = upper + lower + candy_map[0][i] + candy_map[1][i]\n    ans = max(ans, Sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8805": {"id": 8805, "code": "n = 4\ncandy_map = []\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\ncandy_map.append(list(map(int, \"1 1 1 1\".split())))\nans = 0\nfor i in range(n):\n    upper = sum(candy_map[0][:i])\n    lower = sum(candy_map[1][i+1:])\n    Sum = upper + lower + candy_map[0][i] + candy_map[1][i]\n    ans = max(ans, Sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8806": {"id": 8806, "code": "n = 7\ncandy_map = []\ncandy_map.append(list(map(int, \"3 3 4 5 4 5 3\".split())))\ncandy_map.append(list(map(int, \"5 3 4 4 2 3 2\".split())))\nans = 0\nfor i in range(n):\n    upper = sum(candy_map[0][:i])\n    lower = sum(candy_map[1][i+1:])\n    Sum = upper + lower + candy_map[0][i] + candy_map[1][i]\n    ans = max(ans, Sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8807": {"id": 8807, "code": "n = 1\ncandy_map = []\ncandy_map.append(list(map(int, \"2\".split())))\ncandy_map.append(list(map(int, \"3\".split())))\nans = 0\nfor i in range(n):\n    upper = sum(candy_map[0][:i])\n    lower = sum(candy_map[1][i+1:])\n    Sum = upper + lower + candy_map[0][i] + candy_map[1][i]\n    ans = max(ans, Sum)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8808": {"id": 8808, "code": "from itertools import accumulate\nn = 5\nau = [3, 2, 2, 4, 1]\nal = [1, 2, 2, 2, 1]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8809": {"id": 8809, "code": "from itertools import accumulate\nn = 4\nau = [1, 1, 1, 1]\nal = [1, 1, 1, 1]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8810": {"id": 8810, "code": "from itertools import accumulate\nn = 7\nau = [3, 3, 4, 5, 4, 5, 3]\nal = [5, 3, 4, 4, 2, 3, 2]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8811": {"id": 8811, "code": "from itertools import accumulate\nn = 1\nau = [2]\nal = [3]\nau=accumulate(au)\nal=reversed(list(accumulate(reversed(al))))\nprint(max(x+y for x,y in zip(au,al)))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8812": {"id": 8812, "code": "n = 5\nup = [3, 2, 2, 4, 1]\nlow = [1, 2, 2, 2, 1]\nleft = [up[0]]\nright = [0 for i in range(n)]\nright[-1] = low[-1]\nfor i in range(1, n):\n    left.append(left[i-1] + up[i])\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + low[i]\nans = 0\nfor i in range(n):\n    ans = max(left[i] + right[i], ans)\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8813": {"id": 8813, "code": "n = 4\nup = [1, 1, 1, 1]\nlow = [1, 1, 1, 1]\nleft = [up[0]]\nright = [0 for i in range(n)]\nright[-1] = low[-1]\nfor i in range(1, n):\n    left.append(left[i-1] + up[i])\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + low[i]\nans = 0\nfor i in range(n):\n    ans = max(left[i] + right[i], ans)\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8814": {"id": 8814, "code": "n = 7\nup = [3, 3, 4, 5, 4, 5, 3]\nlow = [5, 3, 4, 4, 2, 3, 2]\nleft = [up[0]]\nright = [0 for i in range(n)]\nright[-1] = low[-1]\nfor i in range(1, n):\n    left.append(left[i-1] + up[i])\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + low[i]\nans = 0\nfor i in range(n):\n    ans = max(left[i] + right[i], ans)\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8815": {"id": 8815, "code": "n = 1\nup = [2]\nlow = [3]\nleft = [up[0]]\nright = [0 for i in range(n)]\nright[-1] = low[-1]\nfor i in range(1, n):\n    left.append(left[i-1] + up[i])\nfor i in range(n-2, -1, -1):\n    right[i] = right[i+1] + low[i]\nans = 0\nfor i in range(n):\n    ans = max(left[i] + right[i], ans)\nprint (ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", "!", ">", ">", ">", ">"]}, "8816": {"id": 8816, "code": "def main():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8817": {"id": 8817, "code": "def main():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8818": {"id": 8818, "code": "def main():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8819": {"id": 8819, "code": "def main():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    ans = 0; cnt = 0\n    for i in range(N):\n        cnt += sum(A1[:i]) + A1[i]\n        cnt += sum(A2[i:])\n        ans = max(ans, cnt)\n        cnt = 0\n    print(ans)\nif __name__ == \"__main__\":\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8820": {"id": 8820, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "8821": {"id": 8821, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "8822": {"id": 8822, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "8823": {"id": 8823, "code": "n = 1\na = [2]\nb = [3]\nc = 0\nfor i in range(n):\n    c = max(c, sum(a[:i+1] + b[i:]))\nelse:\n    print(c)", "coverage": [">", ">", ">", ">", ">", ">", "!", ">"]}, "8824": {"id": 8824, "code": "import sys\ninput = sys.stdin.readline\nN = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8825": {"id": 8825, "code": "import sys\ninput = sys.stdin.readline\nN = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8826": {"id": 8826, "code": "import sys\ninput = sys.stdin.readline\nN = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8827": {"id": 8827, "code": "import sys\ninput = sys.stdin.readline\nN = 1\nA = [2]\nB = [3]\nS_A = [0]*(N+1)\nS_B = [0]*(N+1)\nfor i in range(N):\n    S_A[i+1] = S_A[i] + A[i]\n    S_B[i+1] = S_B[i] + B[i]\nX = [0]*N\nX[0] = A[0]+B[0]\nfor i in range(N-1):\n    X[i+1] = max(X[i]+B[i+1],S_A[i+2]+B[i+1])\nprint(X[N-1])", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8828": {"id": 8828, "code": "NN = 5\nAA1 = [3, 2, 2, 4, 1]\nAA2 = [1, 2, 2, 2, 1]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8829": {"id": 8829, "code": "NN = 4\nAA1 = [1, 1, 1, 1]\nAA2 = [1, 1, 1, 1]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8830": {"id": 8830, "code": "NN = 7\nAA1 = [3, 3, 4, 5, 4, 5, 3]\nAA2 = [5, 3, 4, 4, 2, 3, 2]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8831": {"id": 8831, "code": "NN = 1\nAA1 = [2]\nAA2 = [3]\nSS = [0]*NN\nSS[0] = AA1[0] + sum(AA2)\nfor ii in range(1, NN-1):\n    SS[ii] = SS[ii-1] - AA2[ii-1] + AA1[ii]\nSS[NN-1] = sum(AA1) + AA2[NN-1]\nprint(max(SS))", "coverage": [">", ">", ">", ">", ">", ">", "!", ">", ">"]}, "8832": {"id": 8832, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8833": {"id": 8833, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8834": {"id": 8834, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8835": {"id": 8835, "code": "n = 1\na1 = [2]\na2 = [3]\nans = 0\nfor i in range(n):\n    sum_a1 = sum(a1[:i+1])\n    sum_a2 = sum(a2[i:])\n    s = sum_a1 + sum_a2\n    if s > ans:\n        ans = s\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8836": {"id": 8836, "code": "n = 5\nlist_1 = [3, 2, 2, 4, 1]\nlist_2 = [1, 2, 2, 2, 1]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8837": {"id": 8837, "code": "n = 4\nlist_1 = [1, 1, 1, 1]\nlist_2 = [1, 1, 1, 1]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8838": {"id": 8838, "code": "n = 7\nlist_1 = [3, 3, 4, 5, 4, 5, 3]\nlist_2 = [5, 3, 4, 4, 2, 3, 2]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8839": {"id": 8839, "code": "n = 1\nlist_1 = [2]\nlist_2 = [3]\nans=0\nfor i in range(n):\n    sum_=sum(list_1[:i+1])+sum(list_2[i:])\n    ans=max(ans,sum_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8840": {"id": 8840, "code": "n = 5\nup = [3, 2, 2, 4, 1]\ndw = [1, 2, 2, 2, 1]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8841": {"id": 8841, "code": "n = 4\nup = [1, 1, 1, 1]\ndw = [1, 1, 1, 1]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8842": {"id": 8842, "code": "n = 7\nup = [3, 3, 4, 5, 4, 5, 3]\ndw = [5, 3, 4, 4, 2, 3, 2]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8843": {"id": 8843, "code": "n = 1\nup = [2]\ndw = [3]\nans = up[0]+sum(dw)\ntmp = up[0]+sum(dw)\nfor i in range(1,n):\n  tmp = tmp+up[i]-dw[i-1]\n  ans = max(tmp,ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", "!", "!", ">"]}, "8844": {"id": 8844, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nres = [[0]*N for _ in range(2)]\nres[0][0] = A1[0]\nres[1][N-1] = A2[N-1]\nfor i in range(1, N):\n    res[0][i] = res[0][i-1]+A1[i]\n    res[1][N-i-1] = res[1][N-i]+A2[N-i-1]\nr = 0\nfor i in range(N):\n    r = max(res[0][i]+res[1][i], r)\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8845": {"id": 8845, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nres = [[0]*N for _ in range(2)]\nres[0][0] = A1[0]\nres[1][N-1] = A2[N-1]\nfor i in range(1, N):\n    res[0][i] = res[0][i-1]+A1[i]\n    res[1][N-i-1] = res[1][N-i]+A2[N-i-1]\nr = 0\nfor i in range(N):\n    r = max(res[0][i]+res[1][i], r)\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8846": {"id": 8846, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nres = [[0]*N for _ in range(2)]\nres[0][0] = A1[0]\nres[1][N-1] = A2[N-1]\nfor i in range(1, N):\n    res[0][i] = res[0][i-1]+A1[i]\n    res[1][N-i-1] = res[1][N-i]+A2[N-i-1]\nr = 0\nfor i in range(N):\n    r = max(res[0][i]+res[1][i], r)\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8847": {"id": 8847, "code": "N = 1\nA1 = [2]\nA2 = [3]\nres = [[0]*N for _ in range(2)]\nres[0][0] = A1[0]\nres[1][N-1] = A2[N-1]\nfor i in range(1, N):\n    res[0][i] = res[0][i-1]+A1[i]\n    res[1][N-i-1] = res[1][N-i]+A2[N-i-1]\nr = 0\nfor i in range(N):\n    r = max(res[0][i]+res[1][i], r)\nprint(r)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", ">"]}, "8848": {"id": 8848, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8849": {"id": 8849, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8850": {"id": 8850, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8851": {"id": 8851, "code": "n = 1\nA1 = [2]\nA2 = [3]\nmax_p = -1\nfor i in range(n):\n    point = sum(A1[:i+1]) + sum(A2[i:])\n    max_p = max(max_p, point)\nprint(max_p)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8852": {"id": 8852, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8853": {"id": 8853, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8854": {"id": 8854, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8855": {"id": 8855, "code": "N = 1\nA1 = [2]\nA2 = [3]\nansl = []\nfor i in range(N):\n    total = sum(A1[0:i+1]) + sum(A2[i:])\n    ansl.append(total)\nprint(max(ansl))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8856": {"id": 8856, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8857": {"id": 8857, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8858": {"id": 8858, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8859": {"id": 8859, "code": "n = 1\na1 = [2]\na2 = [3]\nstart = a1[0]\nresult = []\nfor i in range(n):\n    aa = i+1\n    result.append(sum(a1[:n-i]) + sum(a2[n-aa:]))\nprint(max(result))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8860": {"id": 8860, "code": "N = 5\nU = [3, 2, 2, 4, 1]\nD = [1, 2, 2, 2, 1]\nU = U[::-1]\nD = D[::-1]\nup = 0\ndown = 0\nupper = [0]\ndowner = []\nfor i in range(N):\n    up += U[i]\n    down += D[i]\n    upper.append(up)\n    downer.append(down)\nupper = upper[::-1]\ndowner = downer[::-1]\nans = 0\nfor i in range(N):\n    ret = upper[0] - upper[i+1] + downer[i]\n    ans = max(ans, ret)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8861": {"id": 8861, "code": "N = 4\nU = [1, 1, 1, 1]\nD = [1, 1, 1, 1]\nU = U[::-1]\nD = D[::-1]\nup = 0\ndown = 0\nupper = [0]\ndowner = []\nfor i in range(N):\n    up += U[i]\n    down += D[i]\n    upper.append(up)\n    downer.append(down)\nupper = upper[::-1]\ndowner = downer[::-1]\nans = 0\nfor i in range(N):\n    ret = upper[0] - upper[i+1] + downer[i]\n    ans = max(ans, ret)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8862": {"id": 8862, "code": "N = 1\nU = [2]\nD = [3]\nU = U[::-1]\nD = D[::-1]\nup = 0\ndown = 0\nupper = [0]\ndowner = []\nfor i in range(N):\n    up += U[i]\n    down += D[i]\n    upper.append(up)\n    downer.append(down)\nupper = upper[::-1]\ndowner = downer[::-1]\nans = 0\nfor i in range(N):\n    ret = upper[0] - upper[i+1] + downer[i]\n    ans = max(ans, ret)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8863": {"id": 8863, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8864": {"id": 8864, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8865": {"id": 8865, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", ">", ">", ">"]}, "8866": {"id": 8866, "code": "N = 1\nA1 = [2]\nA2 = [3]\na1 = [0]\na2 = [0]\nfor i in range(N):\n  if i == 0:\n    a1.append(A1[i])\n    a2.append(A2[i])\n  else:\n    a1.append(a1[-1] + A1[i])\n    a2.append(a2[-1] + A2[i])\nans = 0\nfor i in range(N):\n  if a1[i+1] + a2[-1] - a2[i] > ans:\n    ans = a1[i+1] + a2[-1] - a2[i]\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">", ">", ">"]}, "8867": {"id": 8867, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8868": {"id": 8868, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8869": {"id": 8869, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8870": {"id": 8870, "code": "N = 1\nA = [2]\nB = [3]\nans = []\nfor n in range(N):\n  ans+=[sum(A[:n+1])+sum(B[n:])]\nprint(max(ans))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8871": {"id": 8871, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nacount=0\nbcount=0\nans=0\nfor i in range(n):\n  bcount=0\n  acount+=a[i]\n  for j in range(i,n):\n    bcount+=b[j]\n    if ans<acount+bcount:\n      ans=acount+bcount\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8872": {"id": 8872, "code": "n = 1\na = [2]\nb = [3]\nacount=0\nbcount=0\nans=0\nfor i in range(n):\n  bcount=0\n  acount+=a[i]\n  for j in range(i,n):\n    bcount+=b[j]\n    if ans<acount+bcount:\n      ans=acount+bcount\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8873": {"id": 8873, "code": "n = 5\nA1 = (3, 2, 2, 4, 1)\nA2 = (1, 2, 2, 2, 1)\nfrom itertools import accumulate\nA1S = [0] + list(accumulate(A1))\nA2S = [0] + list(accumulate(A2))\nma = 0\nfor i in range(1, n+1):\n    ma = max(ma, A1S[i] + A2S[-1] - A2S[i-1])\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8874": {"id": 8874, "code": "n = 4\nA1 = (1, 1, 1, 1)\nA2 = (1, 1, 1, 1)\nfrom itertools import accumulate\nA1S = [0] + list(accumulate(A1))\nA2S = [0] + list(accumulate(A2))\nma = 0\nfor i in range(1, n+1):\n    ma = max(ma, A1S[i] + A2S[-1] - A2S[i-1])\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8875": {"id": 8875, "code": "n = 7\nA1 = (3, 3, 4, 5, 4, 5, 3)\nA2 = (5, 3, 4, 4, 2, 3, 2)\nfrom itertools import accumulate\nA1S = [0] + list(accumulate(A1))\nA2S = [0] + list(accumulate(A2))\nma = 0\nfor i in range(1, n+1):\n    ma = max(ma, A1S[i] + A2S[-1] - A2S[i-1])\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8876": {"id": 8876, "code": "n = 1\nA1 = (2,)\nA2 = (3,)\nfrom itertools import accumulate\nA1S = [0] + list(accumulate(A1))\nA2S = [0] + list(accumulate(A2))\nma = 0\nfor i in range(1, n+1):\n    ma = max(ma, A1S[i] + A2S[-1] - A2S[i-1])\nprint(ma)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8877": {"id": 8877, "code": "N = 4\nA1 = ['1', '1', '1', '1']\nA2 = ['1', '1', '1', '1']\nA1 = [int(A1[i]) for i in range(N)]\nA2 = [int(A2[i]) for i in range(N)]\nSaidai = 0\nfor i in range(N):\n  Atai = 0\n  for j in range(i+1):\n    Atai += A1[j]\n  for h in range(i, N):\n    Atai += A2[h]\n  if Atai > Saidai:\n    Saidai = Atai\nprint(Saidai)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8878": {"id": 8878, "code": "N = 1\nA1 = ['2']\nA2 = ['3']\nA1 = [int(A1[i]) for i in range(N)]\nA2 = [int(A2[i]) for i in range(N)]\nSaidai = 0\nfor i in range(N):\n  Atai = 0\n  for j in range(i+1):\n    Atai += A1[j]\n  for h in range(i, N):\n    Atai += A2[h]\n  if Atai > Saidai:\n    Saidai = Atai\nprint(Saidai)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8879": {"id": 8879, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8880": {"id": 8880, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8881": {"id": 8881, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", ">"]}, "8882": {"id": 8882, "code": "n = 1\na1 = [2]\na2 = [3]\nm = 0\nfor i in range(n-1):\n    s = sum(a1[:i+1]) + sum(a2[i:])\n    m = max(m,s)\nif n == 1:\n    m = sum(a1) + sum(a2)\nprint(m)", "coverage": [">", ">", ">", ">", ">", "!", "!", ">", ">", ">"]}, "8883": {"id": 8883, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8884": {"id": 8884, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8885": {"id": 8885, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8886": {"id": 8886, "code": "n = 1\na1 = [2]\na2 = [3]\nmx = 0\nfor idx in range(n) :\n    list = a1[:idx+1] + a2[idx:]\n    mx = max(mx, sum(list))\nprint(mx)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8887": {"id": 8887, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))", "coverage": [">", ">", ">", ">"]}, "8888": {"id": 8888, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))", "coverage": [">", ">", ">", ">"]}, "8889": {"id": 8889, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))", "coverage": [">", ">", ">", ">"]}, "8890": {"id": 8890, "code": "n = 1\na = [2]\nb = [3]\nprint(max(sum(a[:i+1])+sum(b[i:]) for i in range(n)))", "coverage": [">", ">", ">", ">"]}, "8891": {"id": 8891, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    n = 5\n    a1_list = [3, 2, 2, 4, 1]\n    a2_list = [1, 2, 2, 2, 1]\n    upper_sum = a1_list[0]\n    lower_sum = sum(a2_list)\n    ans = upper_sum + lower_sum\n    for i in range(1, n):\n        upper_sum += a1_list[i]\n        lower_sum -= a2_list[i-1]\n        candy = upper_sum + lower_sum\n        if candy > ans:\n            ans = candy\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8892": {"id": 8892, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    n = 4\n    a1_list = [1, 1, 1, 1]\n    a2_list = [1, 1, 1, 1]\n    upper_sum = a1_list[0]\n    lower_sum = sum(a2_list)\n    ans = upper_sum + lower_sum\n    for i in range(1, n):\n        upper_sum += a1_list[i]\n        lower_sum -= a2_list[i-1]\n        candy = upper_sum + lower_sum\n        if candy > ans:\n            ans = candy\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">"]}, "8893": {"id": 8893, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    n = 7\n    a1_list = [3, 3, 4, 5, 4, 5, 3]\n    a2_list = [5, 3, 4, 4, 2, 3, 2]\n    upper_sum = a1_list[0]\n    lower_sum = sum(a2_list)\n    ans = upper_sum + lower_sum\n    for i in range(1, n):\n        upper_sum += a1_list[i]\n        lower_sum -= a2_list[i-1]\n        candy = upper_sum + lower_sum\n        if candy > ans:\n            ans = candy\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8894": {"id": 8894, "code": "def resolve():\n    import sys\n    input = sys.stdin.readline\n    n = 1\n    a1_list = [2]\n    a2_list = [3]\n    upper_sum = a1_list[0]\n    lower_sum = sum(a2_list)\n    ans = upper_sum + lower_sum\n    for i in range(1, n):\n        upper_sum += a1_list[i]\n        lower_sum -= a2_list[i-1]\n        candy = upper_sum + lower_sum\n        if candy > ans:\n            ans = candy\n    print(ans)\nif __name__ == \"__main__\":\n    resolve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", "!", "!", ">", ">", ">"]}, "8895": {"id": 8895, "code": "n = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    s1 = sum(A1[:i+1])\n    s2 = sum(A2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8896": {"id": 8896, "code": "n = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    s1 = sum(A1[:i+1])\n    s2 = sum(A2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8897": {"id": 8897, "code": "n = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    s1 = sum(A1[:i+1])\n    s2 = sum(A2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8898": {"id": 8898, "code": "n = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(n):\n    s1 = sum(A1[:i+1])\n    s2 = sum(A2[i:])\n    ans = max(ans, s1 + s2)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8899": {"id": 8899, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\ncandies = []\nfor i in range(N):\n    candies.append(sum(A1[:i+1])+sum(A2[i:]))\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8900": {"id": 8900, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\ncandies = []\nfor i in range(N):\n    candies.append(sum(A1[:i+1])+sum(A2[i:]))\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8901": {"id": 8901, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\ncandies = []\nfor i in range(N):\n    candies.append(sum(A1[:i+1])+sum(A2[i:]))\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8902": {"id": 8902, "code": "N = 1\nA1 = [2]\nA2 = [3]\ncandies = []\nfor i in range(N):\n    candies.append(sum(A1[:i+1])+sum(A2[i:]))\nprint(max(candies))", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8903": {"id": 8903, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8904": {"id": 8904, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8905": {"id": 8905, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8906": {"id": 8906, "code": "N = 1\nA1 = [2]\nA2 = [3]\nans = 0\nfor i in range(N):\n    cnt = sum(A1[:i+1]) + sum(A2[i:])\n    ans = max(ans,cnt)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8907": {"id": 8907, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nif N == 1:\n    print(A1[0] + A2[0])\n    exit()\ncum_A1 = [A1[0]] * N\nfor i in range(1, N):\n    cum_A1[i] = cum_A1[i - 1] + A1[i]\ncum_A2 = [A2[0]] * N\nfor i in range(1, N):\n    cum_A2[i] = cum_A2[i - 1] + A2[i]\nbest_total = 0\nfor down in range(N):\n    total = cum_A1[down]\n    total += cum_A2[-1]\n    if down >= 1:\n        total -= cum_A2[down - 1]\n    best_total = max(total, best_total)\nprint(best_total)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8908": {"id": 8908, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nif N == 1:\n    print(A1[0] + A2[0])\n    exit()\ncum_A1 = [A1[0]] * N\nfor i in range(1, N):\n    cum_A1[i] = cum_A1[i - 1] + A1[i]\ncum_A2 = [A2[0]] * N\nfor i in range(1, N):\n    cum_A2[i] = cum_A2[i - 1] + A2[i]\nbest_total = 0\nfor down in range(N):\n    total = cum_A1[down]\n    total += cum_A2[-1]\n    if down >= 1:\n        total -= cum_A2[down - 1]\n    best_total = max(total, best_total)\nprint(best_total)", "coverage": [">", ">", ">", ">", "!", "!", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8909": {"id": 8909, "code": "n = 5\na1 = [3, 2, 2, 4, 1]\na2 = [1, 2, 2, 2, 1]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8910": {"id": 8910, "code": "n = 4\na1 = [1, 1, 1, 1]\na2 = [1, 1, 1, 1]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8911": {"id": 8911, "code": "n = 7\na1 = [3, 3, 4, 5, 4, 5, 3]\na2 = [5, 3, 4, 4, 2, 3, 2]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8912": {"id": 8912, "code": "n = 1\na1 = [2]\na2 = [3]\na2.reverse()\nasum1 = []\nasum2 = []\ntmp1 = 0\ntmp2 = 0\nfor i in range(n):\n    tmp1 += a1[i]\n    asum1.append(tmp1)\n    tmp2 += a2[i]\n    asum2.append(tmp2)\nasum2.reverse()\nasum = [x + y for (x, y) in zip(asum1, asum2)]\nprint(max(asum))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8913": {"id": 8913, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8914": {"id": 8914, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8915": {"id": 8915, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8916": {"id": 8916, "code": "n = 1\na = [2]\nb = [3]\nc = {}\nans = 0\nfor i in range(n):\n    ans = max(ans, sum(a[0:i+1]) + sum(b[i:]) )\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8917": {"id": 8917, "code": "n = 5\na = [3, 2, 2, 4, 1]\nb = [1, 2, 2, 2, 1]\nresult = -1\nfor i in range(n):\n  a_sum = sum(a[0:i+1])\n  result = max(result, a_sum + sum(b[i:]))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8918": {"id": 8918, "code": "n = 4\na = [1, 1, 1, 1]\nb = [1, 1, 1, 1]\nresult = -1\nfor i in range(n):\n  a_sum = sum(a[0:i+1])\n  result = max(result, a_sum + sum(b[i:]))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8919": {"id": 8919, "code": "n = 7\na = [3, 3, 4, 5, 4, 5, 3]\nb = [5, 3, 4, 4, 2, 3, 2]\nresult = -1\nfor i in range(n):\n  a_sum = sum(a[0:i+1])\n  result = max(result, a_sum + sum(b[i:]))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8920": {"id": 8920, "code": "n = 1\na = [2]\nb = [3]\nresult = -1\nfor i in range(n):\n  a_sum = sum(a[0:i+1])\n  result = max(result, a_sum + sum(b[i:]))\nprint(result)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8921": {"id": 8921, "code": "n = 5\nau = [3, 2, 2, 4, 1]\nad = [1, 2, 2, 2, 1]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8922": {"id": 8922, "code": "n = 4\nau = [1, 1, 1, 1]\nad = [1, 1, 1, 1]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8923": {"id": 8923, "code": "n = 7\nau = [3, 3, 4, 5, 4, 5, 3]\nad = [5, 3, 4, 4, 2, 3, 2]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8924": {"id": 8924, "code": "n = 1\nau = [2]\nad = [3]\nmaxi = 0\nfor i in range(n):\n    maxi = max(maxi,sum(au[:i+1])+sum(ad[i:]))\nprint(maxi)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8925": {"id": 8925, "code": "N = 5\nA=[0,0]\nA = [[3, 2, 2, 4, 1], 0]\nA = [[3, 2, 2, 4, 1], [1, 2, 2, 2, 1]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8926": {"id": 8926, "code": "N = 4\nA=[0,0]\nA = [[1, 1, 1, 1], 0]\nA = [[1, 1, 1, 1], [1, 1, 1, 1]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8927": {"id": 8927, "code": "N = 7\nA=[0,0]\nA = [[3, 3, 4, 5, 4, 5, 3], 0]\nA = [[3, 3, 4, 5, 4, 5, 3], [5, 3, 4, 4, 2, 3, 2]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8928": {"id": 8928, "code": "N = 1\nA=[0,0]\nA = [[2], 0]\nA = [[2], [3]]\ncount=[0]*N\nfor i in range(N) :\n  count[i]+=sum(A[0][:i+1])+sum(A[1][i:])\nprint(max(count))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">"]}, "8929": {"id": 8929, "code": "def solve():\n    N = 5\n    A1 = [3, 2, 2, 4, 1]\n    A2 = [1, 2, 2, 2, 1]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8930": {"id": 8930, "code": "def solve():\n    N = 4\n    A1 = [1, 1, 1, 1]\n    A2 = [1, 1, 1, 1]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8931": {"id": 8931, "code": "def solve():\n    N = 7\n    A1 = [3, 3, 4, 5, 4, 5, 3]\n    A2 = [5, 3, 4, 4, 2, 3, 2]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8932": {"id": 8932, "code": "def solve():\n    N = 1\n    A1 = [2]\n    A2 = [3]\n    a1 = A1[0]\n    a2 = sum(A2)\n    ans = a1 + a2\n    for i in range(1, N):\n        a1 += A1[i]\n        a2 -= A2[i - 1]\n        ans = max(ans, a1 + a2)\n    print(ans)\nif __name__ == \"__main__\":\n    solve()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", "!", "!", "!", ">", ">", ">"]}, "8933": {"id": 8933, "code": "n = 5\nal = [3, 2, 2, 4, 1]\nbl = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n    tmp = sum(al[0:i+1]) + sum(bl[i:])\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8934": {"id": 8934, "code": "n = 4\nal = [1, 1, 1, 1]\nbl = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n    tmp = sum(al[0:i+1]) + sum(bl[i:])\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8935": {"id": 8935, "code": "n = 7\nal = [3, 3, 4, 5, 4, 5, 3]\nbl = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n    tmp = sum(al[0:i+1]) + sum(bl[i:])\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8936": {"id": 8936, "code": "n = 1\nal = [2]\nbl = [3]\nans = 0\nfor i in range(n):\n    tmp = sum(al[0:i+1]) + sum(bl[i:])\n    if ans < tmp:\n        ans = tmp\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8937": {"id": 8937, "code": "n = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8938": {"id": 8938, "code": "n = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8939": {"id": 8939, "code": "n = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8940": {"id": 8940, "code": "n = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(n):\n\tans = max(sum(A[:i+1])+sum(B[i:]),ans)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">"]}, "8941": {"id": 8941, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nif N==1: print(A[0] + B[0]);exit()\nAS = [0]\nBS = [0]\nfor i in range(N):\n    AS.append(AS[-1]+A[i])\n    BS.append(BS[-1]+B[i])\nans = 0\nfor i in range(N):\n    val = AS[i+1]\n    val += BS[-1]-BS[i]\n    ans =max(ans,val)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8942": {"id": 8942, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nif N==1: print(A[0] + B[0]);exit()\nAS = [0]\nBS = [0]\nfor i in range(N):\n    AS.append(AS[-1]+A[i])\n    BS.append(BS[-1]+B[i])\nans = 0\nfor i in range(N):\n    val = AS[i+1]\n    val += BS[-1]-BS[i]\n    ans =max(ans,val)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8943": {"id": 8943, "code": "N = 5\nA1 = [3, 2, 2, 4, 1]\nA2 = [1, 2, 2, 2, 1]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8944": {"id": 8944, "code": "N = 4\nA1 = [1, 1, 1, 1]\nA2 = [1, 1, 1, 1]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8945": {"id": 8945, "code": "N = 7\nA1 = [3, 3, 4, 5, 4, 5, 3]\nA2 = [5, 3, 4, 4, 2, 3, 2]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8946": {"id": 8946, "code": "N = 1\nA1 = [2]\nA2 = [3]\nfor i in range(1, N):\n    A1[i] = A1[i-1] +A1[i]\nA2[0] = A1[0] + A2[0]\nfor j in range(1, N):\n    A2[j] = max(A2[j-1] + A2[j], A2[j] + A1[j])\nA = A1 + A2\nprint(max(A))", "coverage": [">", ">", ">", ">", "!", ">", ">", "!", ">", ">"]}, "8947": {"id": 8947, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8948": {"id": 8948, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8949": {"id": 8949, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8950": {"id": 8950, "code": "N = 1\nA = [2]\nB = [3]\nL=[A,B]\nS=0\nfor i in range(N):\n    K=sum(L[0][0:i+1])+sum(L[1][i:N])\n    S=max(S,K)\nprint(S)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8951": {"id": 8951, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8952": {"id": 8952, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8953": {"id": 8953, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8954": {"id": 8954, "code": "N = 1\nA = [2]\nB = [3]\nans = 0\nfor i in range(N):\n    ans_ = sum(A[:i + 1])\n    ans_ += sum(B[i:])\n    ans = max(ans, ans_)\nprint(ans)", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8955": {"id": 8955, "code": "N = 5\nA = [3, 2, 2, 4, 1]\nB = [1, 2, 2, 2, 1]\np=[]\nfor i in range (N):\n    tempA=A[:1+i]\n    tempB=B[0+i:]\n    p.append(sum(tempA)+sum(tempB))\nprint(max(p))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8956": {"id": 8956, "code": "N = 4\nA = [1, 1, 1, 1]\nB = [1, 1, 1, 1]\np=[]\nfor i in range (N):\n    tempA=A[:1+i]\n    tempB=B[0+i:]\n    p.append(sum(tempA)+sum(tempB))\nprint(max(p))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8957": {"id": 8957, "code": "N = 7\nA = [3, 3, 4, 5, 4, 5, 3]\nB = [5, 3, 4, 4, 2, 3, 2]\np=[]\nfor i in range (N):\n    tempA=A[:1+i]\n    tempB=B[0+i:]\n    p.append(sum(tempA)+sum(tempB))\nprint(max(p))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8958": {"id": 8958, "code": "N = 1\nA = [2]\nB = [3]\np=[]\nfor i in range (N):\n    tempA=A[:1+i]\n    tempB=B[0+i:]\n    p.append(sum(tempA)+sum(tempB))\nprint(max(p))", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8959": {"id": 8959, "code": "n = 5\nl1 = [3, 2, 2, 4, 1]\nl2 = [1, 2, 2, 2, 1]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "8960": {"id": 8960, "code": "n = 4\nl1 = [1, 1, 1, 1]\nl2 = [1, 1, 1, 1]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "8961": {"id": 8961, "code": "n = 7\nl1 = [3, 3, 4, 5, 4, 5, 3]\nl2 = [5, 3, 4, 4, 2, 3, 2]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", ">", ">", ">", ">", "!", ">", ">"]}, "8962": {"id": 8962, "code": "n = 1\nl1 = [2]\nl2 = [3]\nml = [[0 for i in range(n)] for j in range(2)]\nfor i in range(n):\n    if i==0:\n        ml[0][i] = l1[i]\n    else:\n        ml[0][i] = ml[0][i-1] + l1[i]\nfor i in range(n):\n    if i==0:\n        ml[1][i] = ml[0][i] + l2[i]\n    else:\n        ml[1][i] = max(ml[0][i], ml[1][i-1]) + l2[i]\nprint(ml[1][n-1] , flush=True)", "coverage": [">", ">", ">", ">", ">", ">", ">", "!", "!", ">", ">", ">", "!", "!", ">"]}, "8963": {"id": 8963, "code": "def main():\n    n = 5\n    a_lst1 = [3, 2, 2, 4, 1]\n    a_lst2 = [1, 2, 2, 2, 1]\n    candies_lst = []\n    tmp = 1\n    while tmp <= n:\n        a1_tmp = a_lst1[:tmp]\n        a2_tmp = a_lst2[tmp-1:]\n        a1 = sum(a1_tmp)\n        a2 = sum(a2_tmp)\n        tmp += 1\n        candies = a1 + a2\n        candies_lst.append(candies)\n    maximum = max(candies_lst)\n    print(maximum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8964": {"id": 8964, "code": "def main():\n    n = 4\n    a_lst1 = [1, 1, 1, 1]\n    a_lst2 = [1, 1, 1, 1]\n    candies_lst = []\n    tmp = 1\n    while tmp <= n:\n        a1_tmp = a_lst1[:tmp]\n        a2_tmp = a_lst2[tmp-1:]\n        a1 = sum(a1_tmp)\n        a2 = sum(a2_tmp)\n        tmp += 1\n        candies = a1 + a2\n        candies_lst.append(candies)\n    maximum = max(candies_lst)\n    print(maximum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}, "8965": {"id": 8965, "code": "def main():\n    n = 1\n    a_lst1 = [2]\n    a_lst2 = [3]\n    candies_lst = []\n    tmp = 1\n    while tmp <= n:\n        a1_tmp = a_lst1[:tmp]\n        a2_tmp = a_lst2[tmp-1:]\n        a1 = sum(a1_tmp)\n        a2 = sum(a2_tmp)\n        tmp += 1\n        candies = a1 + a2\n        candies_lst.append(candies)\n    maximum = max(candies_lst)\n    print(maximum)\nif __name__ == '__main__':\n    main()", "coverage": [">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">", ">"]}}